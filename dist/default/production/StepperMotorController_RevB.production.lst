

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 05 12:23:40 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=2
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	text234,global,reloc=2,class=CODE,delta=1
   255                           	psect	text235,global,reloc=2,class=CODE,delta=1
   256                           	psect	text236,global,reloc=2,class=CODE,delta=1
   257                           	psect	text237,global,reloc=2,class=CODE,delta=1
   258                           	psect	text238,global,reloc=2,class=CODE,delta=1
   259                           	psect	text239,global,reloc=2,class=CODE,delta=1
   260                           	psect	text240,global,reloc=2,class=CODE,delta=1
   261                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   262                           	psect	text241,global,reloc=2,class=CODE,delta=1
   263                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   264                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   265                           	dabs	1,0x600,512,_msd_buffer
   266                           	dabs	1,0xD00,48,_BDT
   267                           	dabs	1,0xD40,31,_msd_cbw
   268                           	dabs	1,0xD80,13,_msd_csw
   269                           	dabs	1,0xD38,8,_CtrlTrfData
   270                           	dabs	1,0xD30,8,_SetupPkt
   271  0000                     
   272                           ; Version 2.00
   273                           ; Generated 27/05/2018 GMT
   274                           ; 
   275                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   276                           ; All rights reserved.
   277                           ; 
   278                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   279                           ; 
   280                           ; Redistribution and use in source and binary forms, with or without modification, are
   281                           ; permitted provided that the following conditions are met:
   282                           ; 
   283                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   284                           ;        conditions and the following disclaimer.
   285                           ; 
   286                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   287                           ;        of conditions and the following disclaimer in the documentation and/or other
   288                           ;        materials provided with the distribution.
   289                           ; 
   290                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   291                           ;        software without specific prior written permission.
   292                           ; 
   293                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   294                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   295                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   296                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   297                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   298                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   299                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   300                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   301                           ; 
   302                           ; 
   303                           ; Code-generator required, PIC18F47J53 Definitions
   304                           ; 
   305                           ; SFR Addresses
   306  0000                     
   307                           	psect	idataBANK2
   308  0151B2                     __pidataBANK2:
   309                           	opt stack 0
   310                           
   311                           ;initializer for _LUN
   312  0151B2  16                 	db	low _ExternalFlash_MediaInitialize
   313  0151B3  5C                 	db	high _ExternalFlash_MediaInitialize
   314  0151B4  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   315  0151B5  28                 	db	low _ExternalFlash_CapacityRead
   316  0151B6  5D                 	db	high _ExternalFlash_CapacityRead
   317  0151B7  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   318  0151B8  A4                 	db	low _ExternalFlash_SectorSizeRead
   319  0151B9  5D                 	db	high _ExternalFlash_SectorSizeRead
   320  0151BA  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   321  0151BB  F0                 	db	low _ExternalFlash_MediaDetect
   322  0151BC  5D                 	db	high _ExternalFlash_MediaDetect
   323  0151BD  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   324  0151BE  3C                 	db	low _ExternalFlash_SectorRead
   325  0151BF  57                 	db	high _ExternalFlash_SectorRead
   326  0151C0  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   327  0151C1  30                 	db	low _ExternalFlash_WriteProtectStateGet
   328  0151C2  5E                 	db	high _ExternalFlash_WriteProtectStateGet
   329  0151C3  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   330  0151C4  08                 	db	low _ExternalFlash_SectorWrite
   331  0151C5  57                 	db	high _ExternalFlash_SectorWrite
   332  0151C6  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   333  0151C7  00                 	db	0
   334  0151C8  00                 	db	0
   335  0151C9  00                 	db	0
   336  0151CA  00                 	db	0
   337  0151CB  00                 	db	0
   338  0151CC  00                 	db	0
   339  0151CD  00                 	db	0
   340  0151CE  00                 	db	0
   341                           
   342                           ;initializer for i2c_display_init@F7092
   343  0151CF  3A                 	db	58
   344  0151D0  1E                 	db	30
   345  0151D1  39                 	db	57
   346  0151D2  0C                 	db	12
   347  0151D3  74                 	db	116
   348  0151D4  5C                 	db	92
   349  0151D5  6D                 	db	109
   350  0151D6  0C                 	db	12
   351  0151D7  01                 	db	1
   352                           
   353                           ;initializer for __i2c_display_send_init_sequence@F7089
   354  0151D8  3A                 	db	58
   355  0151D9  1E                 	db	30
   356  0151DA  39                 	db	57
   357  0151DB  0C                 	db	12
   358  0151DC  74                 	db	116
   359  0151DD  5C                 	db	92
   360  0151DE  6D                 	db	109
   361  0151DF  0C                 	db	12
   362  0151E0  01                 	db	1
   363                           
   364                           ;initializer for _tx_buf
   365  0151E1  01                 	db	1
   366  0151E2  02                 	db	2
   367  0151E3  03                 	db	3
   368  0151E4  04                 	db	4
   369  0151E5  05                 	db	5
   370  0151E6  06                 	db	6
   371  0151E7  07                 	db	7
   372  0151E8  08                 	db	8
   373                           
   374                           ;initializer for _configFile_used_name
   375  0151E9  55                 	db	85
   376  0151EA  53                 	db	83
   377  0151EB  45                 	db	69
   378  0151EC  44                 	db	68
   379  0151ED  43                 	db	67
   380  0151EE  4F                 	db	79
   381  0151EF  4E                 	db	78
   382  0151F0  46                 	db	70
   383                           
   384                           ;initializer for _configFile_name
   385  0151F1  43                 	db	67
   386  0151F2  4F                 	db	79
   387  0151F3  4E                 	db	78
   388  0151F4  46                 	db	70
   389  0151F5  49                 	db	73
   390  0151F6  47                 	db	71
   391  0151F7  20                 	db	32
   392  0151F8  20                 	db	32
   393                           
   394                           ;initializer for _configFile_used_extention
   395  0151F9  54                 	db	84
   396  0151FA  58                 	db	88
   397  0151FB  54                 	db	84
   398                           
   399                           ;initializer for _configFile_extention
   400  0151FC  54                 	db	84
   401  0151FD  58                 	db	88
   402  0151FE  54                 	db	84
   403                           
   404                           	psect	idataBANK4
   405  014FD2                     __pidataBANK4:
   406                           	opt stack 0
   407                           
   408                           ;initializer for _dc_startup
   409  014FD2  2A                 	db	42
   410  014FD3  20                 	db	32
   411  014FD4  20                 	db	32
   412  014FD5  53                 	db	83
   413  014FD6  74                 	db	116
   414  014FD7  65                 	db	101
   415  014FD8  70                 	db	112
   416  014FD9  70                 	db	112
   417  014FDA  65                 	db	101
   418  014FDB  72                 	db	114
   419  014FDC  20                 	db	32
   420  014FDD  4D                 	db	77
   421  014FDE  6F                 	db	111
   422  014FDF  74                 	db	116
   423  014FE0  6F                 	db	111
   424  014FE1  72                 	db	114
   425  014FE2  20                 	db	32
   426  014FE3  20                 	db	32
   427  014FE4  20                 	db	32
   428  014FE5  2A                 	db	42
   429  014FE6  2A                 	db	42
   430  014FE7  20                 	db	32
   431  014FE8  20                 	db	32
   432  014FE9  20                 	db	32
   433  014FEA  20                 	db	32
   434  014FEB  43                 	db	67
   435  014FEC  6F                 	db	111
   436  014FED  6E                 	db	110
   437  014FEE  74                 	db	116
   438  014FEF  72                 	db	114
   439  014FF0  6F                 	db	111
   440  014FF1  6C                 	db	108
   441  014FF2  6C                 	db	108
   442  014FF3  65                 	db	101
   443  014FF4  72                 	db	114
   444  014FF5  20                 	db	32
   445  014FF6  20                 	db	32
   446  014FF7  20                 	db	32
   447  014FF8  20                 	db	32
   448  014FF9  2A                 	db	42
   449  014FFA  2A                 	db	42
   450  014FFB  20                 	db	32
   451  014FFC  20                 	db	32
   452  014FFD  20                 	db	32
   453  014FFE  20                 	db	32
   454  014FFF  76                 	db	118
   455  015000  20                 	db	32
   456  015001  20                 	db	32
   457  015002  20                 	db	32
   458  015003  20                 	db	32
   459  015004  20                 	db	32
   460  015005  20                 	db	32
   461  015006  20                 	db	32
   462  015007  20                 	db	32
   463  015008  20                 	db	32
   464  015009  20                 	db	32
   465  01500A  20                 	db	32
   466  01500B  20                 	db	32
   467  01500C  20                 	db	32
   468  01500D  2A                 	db	42
   469  01500E  2A                 	db	42
   470  01500F  20                 	db	32
   471  015010  20                 	db	32
   472  015011  73                 	db	115
   473  015012  6F                 	db	111
   474  015013  6C                 	db	108
   475  015014  64                 	db	100
   476  015015  65                 	db	101
   477  015016  72                 	db	114
   478  015017  6E                 	db	110
   479  015018  65                 	db	101
   480  015019  72                 	db	114
   481  01501A  64                 	db	100
   482  01501B  2E                 	db	46
   483  01501C  63                 	db	99
   484  01501D  6F                 	db	111
   485  01501E  6D                 	db	109
   486  01501F  20                 	db	32
   487  015020  20                 	db	32
   488  015021  2A                 	db	42
   489                           
   490                           	psect	mediumconst
   491  009092                     __pmediumconst:
   492                           	opt stack 0
   493  009092  00                 	db	0
   494  009093                     _motor_speed_lookup:
   495                           	opt stack 0
   496  009093  0008               	dw	8
   497  009095  000C               	dw	12
   498  009097  0010               	dw	16
   499  009099  0013               	dw	19
   500  00909B  0016               	dw	22
   501  00909D  0019               	dw	25
   502  00909F  001C               	dw	28
   503  0090A1  001E               	dw	30
   504  0090A3  0021               	dw	33
   505  0090A5  0023               	dw	35
   506  0090A7  0026               	dw	38
   507  0090A9  0028               	dw	40
   508  0090AB  002A               	dw	42
   509  0090AD  002C               	dw	44
   510  0090AF  002E               	dw	46
   511  0090B1  0030               	dw	48
   512  0090B3  0032               	dw	50
   513  0090B5  0034               	dw	52
   514  0090B7  0036               	dw	54
   515  0090B9  0038               	dw	56
   516  0090BB  003A               	dw	58
   517  0090BD  003C               	dw	60
   518  0090BF  003D               	dw	61
   519  0090C1  003F               	dw	63
   520  0090C3  0041               	dw	65
   521  0090C5  0043               	dw	67
   522  0090C7  0045               	dw	69
   523  0090C9  0046               	dw	70
   524  0090CB  0048               	dw	72
   525  0090CD  0049               	dw	73
   526  0090CF  004B               	dw	75
   527  0090D1  004D               	dw	77
   528  0090D3  004E               	dw	78
   529  0090D5  0050               	dw	80
   530  0090D7  0051               	dw	81
   531  0090D9  0053               	dw	83
   532  0090DB  0054               	dw	84
   533  0090DD  0056               	dw	86
   534  0090DF  0057               	dw	87
   535  0090E1  0059               	dw	89
   536  0090E3  005A               	dw	90
   537  0090E5  005C               	dw	92
   538  0090E7  005D               	dw	93
   539  0090E9  005F               	dw	95
   540  0090EB  0060               	dw	96
   541  0090ED  0062               	dw	98
   542  0090EF  0063               	dw	99
   543  0090F1  0064               	dw	100
   544  0090F3  0066               	dw	102
   545  0090F5  0067               	dw	103
   546  0090F7  0069               	dw	105
   547  0090F9  006A               	dw	106
   548  0090FB  006C               	dw	108
   549  0090FD  006D               	dw	109
   550  0090FF  006E               	dw	110
   551  009101  0070               	dw	112
   552  009103  0071               	dw	113
   553  009105  0072               	dw	114
   554  009107  0073               	dw	115
   555  009109  0074               	dw	116
   556  00910B  0076               	dw	118
   557  00910D  0078               	dw	120
   558  00910F  0079               	dw	121
   559  009111  007A               	dw	122
   560  009113  007B               	dw	123
   561  009115  007D               	dw	125
   562  009117  007E               	dw	126
   563  009119  007F               	dw	127
   564  00911B  0082               	dw	130
   565  00911D  0085               	dw	133
   566  00911F  0087               	dw	135
   567  009121  008A               	dw	138
   568  009123  008C               	dw	140
   569  009125  008F               	dw	143
   570  009127  0091               	dw	145
   571  009129  0092               	dw	146
   572  00912B  0094               	dw	148
   573  00912D  0098               	dw	152
   574  00912F  009A               	dw	154
   575  009131  009C               	dw	156
   576  009133  009E               	dw	158
   577  009135  00A1               	dw	161
   578  009137  00A3               	dw	163
   579  009139  00A5               	dw	165
   580  00913B  00A7               	dw	167
   581  00913D  00AA               	dw	170
   582  00913F  00AC               	dw	172
   583  009141  00AF               	dw	175
   584  009143  00B2               	dw	178
   585  009145  00B4               	dw	180
   586  009147  00B7               	dw	183
   587  009149  00B8               	dw	184
   588  00914B  00BA               	dw	186
   589  00914D  00BC               	dw	188
   590  00914F  00BE               	dw	190
   591  009151  00C0               	dw	192
   592  009153  00C3               	dw	195
   593  009155  00C4               	dw	196
   594  009157  00C6               	dw	198
   595  009159  00C8               	dw	200
   596  00915B  00CA               	dw	202
   597  00915D  00CC               	dw	204
   598  00915F  00CE               	dw	206
   599  009161  00D0               	dw	208
   600  009163  00D2               	dw	210
   601  009165  00D4               	dw	212
   602  009167  00D6               	dw	214
   603  009169  00D8               	dw	216
   604  00916B  00D9               	dw	217
   605  00916D  00DB               	dw	219
   606  00916F  00DD               	dw	221
   607  009171  00DF               	dw	223
   608  009173  00E1               	dw	225
   609  009175  00E2               	dw	226
   610  009177  00E5               	dw	229
   611  009179  00E7               	dw	231
   612  00917B  00E8               	dw	232
   613  00917D  00EA               	dw	234
   614  00917F  00EC               	dw	236
   615  009181  00EE               	dw	238
   616  009183  00EF               	dw	239
   617  009185  00F2               	dw	242
   618  009187  00F3               	dw	243
   619  009189  00F5               	dw	245
   620  00918B  00F7               	dw	247
   621  00918D  00F8               	dw	248
   622  00918F  00FB               	dw	251
   623  009191  00FD               	dw	253
   624  009193  0100               	dw	256
   625  009195  0103               	dw	259
   626  009197  0104               	dw	260
   627  009199  0107               	dw	263
   628  00919B  010A               	dw	266
   629  00919D  010C               	dw	268
   630  00919F  010F               	dw	271
   631  0091A1  0112               	dw	274
   632  0091A3  0114               	dw	276
   633  0091A5  0117               	dw	279
   634  0091A7  0119               	dw	281
   635  0091A9  011C               	dw	284
   636  0091AB  011E               	dw	286
   637  0091AD  0121               	dw	289
   638  0091AF  0123               	dw	291
   639  0091B1  0125               	dw	293
   640  0091B3  0129               	dw	297
   641  0091B5  012B               	dw	299
   642  0091B7  012C               	dw	300
   643  0091B9  012E               	dw	302
   644  0091BB  0132               	dw	306
   645  0091BD  0134               	dw	308
   646  0091BF  0136               	dw	310
   647  0091C1  0138               	dw	312
   648  0091C3  013B               	dw	315
   649  0091C5  013D               	dw	317
   650  0091C7  013F               	dw	319
   651  0091C9  0143               	dw	323
   652  0091CB  0146               	dw	326
   653  0091CD  0148               	dw	328
   654  0091CF  014A               	dw	330
   655  0091D1  014C               	dw	332
   656  0091D3  014F               	dw	335
   657  0091D5  0151               	dw	337
   658  0091D7  0154               	dw	340
   659  0091D9  0156               	dw	342
   660  0091DB  0159               	dw	345
   661  0091DD  015B               	dw	347
   662  0091DF  015E               	dw	350
   663  0091E1  0160               	dw	352
   664  0091E3  0163               	dw	355
   665  0091E5  0166               	dw	358
   666  0091E7  0169               	dw	361
   667  0091E9  016B               	dw	363
   668  0091EB  016E               	dw	366
   669  0091ED  0171               	dw	369
   670  0091EF  0174               	dw	372
   671  0091F1  0177               	dw	375
   672  0091F3  017A               	dw	378
   673  0091F5  017D               	dw	381
   674  0091F7  0180               	dw	384
   675  0091F9  0183               	dw	387
   676  0091FB  0187               	dw	391
   677  0091FD  018A               	dw	394
   678  0091FF  018D               	dw	397
   679  009201  0191               	dw	401
   680  009203  0194               	dw	404
   681  009205  0198               	dw	408
   682  009207  019B               	dw	411
   683  009209  019F               	dw	415
   684  00920B  01A3               	dw	419
   685  00920D  01A6               	dw	422
   686  00920F  01AA               	dw	426
   687  009211  01AE               	dw	430
   688  009213  01B2               	dw	434
   689  009215  01B6               	dw	438
   690  009217  01BA               	dw	442
   691  009219  01BE               	dw	446
   692  00921B  01C3               	dw	451
   693  00921D  01C7               	dw	455
   694  00921F  01CC               	dw	460
   695  009221  01D0               	dw	464
   696  009223  01D5               	dw	469
   697  009225  01D9               	dw	473
   698  009227  01DE               	dw	478
   699  009229  01E3               	dw	483
   700  00922B  01E8               	dw	488
   701  00922D  01ED               	dw	493
   702  00922F  01F3               	dw	499
   703  009231  01F8               	dw	504
   704  009233  01FE               	dw	510
   705  009235  0203               	dw	515
   706  009237  0209               	dw	521
   707  009239  020F               	dw	527
   708  00923B  0215               	dw	533
   709  00923D  021B               	dw	539
   710  00923F  0221               	dw	545
   711  009241  0227               	dw	551
   712  009243  022E               	dw	558
   713  009245  0235               	dw	565
   714  009247  023C               	dw	572
   715  009249  0243               	dw	579
   716  00924B  024A               	dw	586
   717  00924D  0251               	dw	593
   718  00924F  0259               	dw	601
   719  009251  0261               	dw	609
   720  009253  0269               	dw	617
   721  009255  0271               	dw	625
   722  009257  0279               	dw	633
   723  009259  0282               	dw	642
   724  00925B  028B               	dw	651
   725  00925D  0294               	dw	660
   726  00925F  029E               	dw	670
   727  009261  02A7               	dw	679
   728  009263  02B1               	dw	689
   729  009265  02BC               	dw	700
   730  009267  02C6               	dw	710
   731  009269  02D1               	dw	721
   732  00926B  02DC               	dw	732
   733  00926D  02DC               	dw	732
   734  00926F  02DF               	dw	735
   735  009271  02E2               	dw	738
   736  009273  02E5               	dw	741
   737  009275  02E8               	dw	744
   738  009277  02EB               	dw	747
   739  009279  02EE               	dw	750
   740  00927B  02F1               	dw	753
   741  00927D  02F4               	dw	756
   742  00927F  02F7               	dw	759
   743  009281  02FA               	dw	762
   744  009283  02FD               	dw	765
   745  009285  0300               	dw	768
   746  009287  0304               	dw	772
   747  009289  0307               	dw	775
   748  00928B  030A               	dw	778
   749  00928D  030D               	dw	781
   750  00928F  0311               	dw	785
   751  009291  0314               	dw	788
   752  009293  0317               	dw	791
   753  009295  031A               	dw	794
   754  009297  031E               	dw	798
   755  009299  0321               	dw	801
   756  00929B  0325               	dw	805
   757  00929D  0328               	dw	808
   758  00929F  032C               	dw	812
   759  0092A1  032F               	dw	815
   760  0092A3  0333               	dw	819
   761  0092A5  0336               	dw	822
   762  0092A7  033A               	dw	826
   763  0092A9  033E               	dw	830
   764  0092AB  0341               	dw	833
   765  0092AD  0345               	dw	837
   766  0092AF  0349               	dw	841
   767  0092B1  034D               	dw	845
   768  0092B3  0350               	dw	848
   769  0092B5  0354               	dw	852
   770  0092B7  0358               	dw	856
   771  0092B9  035C               	dw	860
   772  0092BB  0360               	dw	864
   773  0092BD  0364               	dw	868
   774  0092BF  0368               	dw	872
   775  0092C1  036C               	dw	876
   776  0092C3  0370               	dw	880
   777  0092C5  0374               	dw	884
   778  0092C7  0379               	dw	889
   779  0092C9  037D               	dw	893
   780  0092CB  0381               	dw	897
   781  0092CD  0385               	dw	901
   782  0092CF  038A               	dw	906
   783  0092D1  038E               	dw	910
   784  0092D3  0393               	dw	915
   785  0092D5  0397               	dw	919
   786  0092D7  039C               	dw	924
   787  0092D9  03A0               	dw	928
   788  0092DB  03A5               	dw	933
   789  0092DD  03AA               	dw	938
   790  0092DF  03AE               	dw	942
   791  0092E1  03B3               	dw	947
   792  0092E3  03B8               	dw	952
   793  0092E5  03BD               	dw	957
   794  0092E7  03C2               	dw	962
   795  0092E9  03C6               	dw	966
   796  0092EB  03CC               	dw	972
   797  0092ED  03D1               	dw	977
   798  0092EF  03D6               	dw	982
   799  0092F1  03DB               	dw	987
   800  0092F3  03E0               	dw	992
   801  0092F5  03E5               	dw	997
   802  0092F7  03EB               	dw	1003
   803  0092F9  03F0               	dw	1008
   804  0092FB  03F6               	dw	1014
   805  0092FD  03FB               	dw	1019
   806  0092FF  0401               	dw	1025
   807  009301  0406               	dw	1030
   808  009303  040C               	dw	1036
   809  009305  0412               	dw	1042
   810  009307  0417               	dw	1047
   811  009309  041D               	dw	1053
   812  00930B  0423               	dw	1059
   813  00930D  0429               	dw	1065
   814  00930F  042F               	dw	1071
   815  009311  0436               	dw	1078
   816  009313  043C               	dw	1084
   817  009315  0442               	dw	1090
   818  009317  0448               	dw	1096
   819  009319  044F               	dw	1103
   820  00931B  0455               	dw	1109
   821  00931D  045C               	dw	1116
   822  00931F  0463               	dw	1123
   823  009321  046A               	dw	1130
   824  009323  0470               	dw	1136
   825  009325  0477               	dw	1143
   826  009327  047E               	dw	1150
   827  009329  0485               	dw	1157
   828  00932B  048D               	dw	1165
   829  00932D  0494               	dw	1172
   830  00932F  049B               	dw	1179
   831  009331  04A3               	dw	1187
   832  009333  04AA               	dw	1194
   833  009335  04B2               	dw	1202
   834  009337  04BA               	dw	1210
   835  009339  04C2               	dw	1218
   836  00933B  04C9               	dw	1225
   837  00933D  04D2               	dw	1234
   838  00933F  04DA               	dw	1242
   839  009341  04E2               	dw	1250
   840  009343  04EA               	dw	1258
   841  009345  04F3               	dw	1267
   842  009347  04FC               	dw	1276
   843  009349  0504               	dw	1284
   844  00934B  050D               	dw	1293
   845  00934D  0516               	dw	1302
   846  00934F  051F               	dw	1311
   847  009351  0528               	dw	1320
   848  009353  0532               	dw	1330
   849  009355  053B               	dw	1339
   850  009357  0545               	dw	1349
   851  009359  054F               	dw	1359
   852  00935B  0559               	dw	1369
   853  00935D  0563               	dw	1379
   854  00935F  056D               	dw	1389
   855  009361  0577               	dw	1399
   856  009363  0582               	dw	1410
   857  009365  058C               	dw	1420
   858  009367  0597               	dw	1431
   859  009369  05A2               	dw	1442
   860  00936B  05AD               	dw	1453
   861  00936D  05B9               	dw	1465
   862  00936F  05C4               	dw	1476
   863  009371  05D0               	dw	1488
   864  009373  05DC               	dw	1500
   865  009375  05E8               	dw	1512
   866  009377  05F4               	dw	1524
   867  009379  0601               	dw	1537
   868  00937B  060E               	dw	1550
   869  00937D  061A               	dw	1562
   870  00937F  0628               	dw	1576
   871  009381  0635               	dw	1589
   872  009383  0643               	dw	1603
   873  009385  0650               	dw	1616
   874  009387  065E               	dw	1630
   875  009389  066D               	dw	1645
   876  00938B  067B               	dw	1659
   877  00938D  068A               	dw	1674
   878  00938F  0699               	dw	1689
   879  009391  06A9               	dw	1705
   880  009393  06B8               	dw	1720
   881  009395  06C8               	dw	1736
   882  009397  06D8               	dw	1752
   883  009399  06E9               	dw	1769
   884  00939B  06FA               	dw	1786
   885  00939D  070B               	dw	1803
   886  00939F  071C               	dw	1820
   887  0093A1  072E               	dw	1838
   888  0093A3  0740               	dw	1856
   889  0093A5  0753               	dw	1875
   890  0093A7  0766               	dw	1894
   891  0093A9  0779               	dw	1913
   892  0093AB  078D               	dw	1933
   893  0093AD  07A1               	dw	1953
   894  0093AF  07B6               	dw	1974
   895  0093B1  07CB               	dw	1995
   896  0093B3  07E0               	dw	2016
   897  0093B5  07F6               	dw	2038
   898  0093B7  080C               	dw	2060
   899  0093B9  0823               	dw	2083
   900  0093BB  083B               	dw	2107
   901  0093BD  0853               	dw	2131
   902  0093BF  086B               	dw	2155
   903  0093C1  0884               	dw	2180
   904  0093C3  089E               	dw	2206
   905  0093C5  08B8               	dw	2232
   906  0093C7  08D3               	dw	2259
   907  0093C9  08EF               	dw	2287
   908  0093CB  090B               	dw	2315
   909  0093CD  0928               	dw	2344
   910  0093CF  0945               	dw	2373
   911  0093D1  0964               	dw	2404
   912  0093D3  0983               	dw	2435
   913  0093D5  09A3               	dw	2467
   914  0093D7  09C4               	dw	2500
   915  0093D9  09E6               	dw	2534
   916  0093DB  0A08               	dw	2568
   917  0093DD  0A2C               	dw	2604
   918  0093DF  0A51               	dw	2641
   919  0093E1  0A77               	dw	2679
   920  0093E3  0A9D               	dw	2717
   921  0093E5  0AC5               	dw	2757
   922  0093E7  0AEF               	dw	2799
   923  0093E9  0B19               	dw	2841
   924  0093EB  0B45               	dw	2885
   925  0093ED  0B72               	dw	2930
   926  0093EF  0B72               	dw	2930
   927  0093F1  0B7D               	dw	2941
   928  0093F3  0B89               	dw	2953
   929  0093F5  0B94               	dw	2964
   930  0093F7  0BA0               	dw	2976
   931  0093F9  0BAC               	dw	2988
   932  0093FB  0BB8               	dw	3000
   933  0093FD  0BC4               	dw	3012
   934  0093FF  0BD0               	dw	3024
   935  009401  0BDC               	dw	3036
   936  009403  0BE9               	dw	3049
   937  009405  0BF5               	dw	3061
   938  009407  0C02               	dw	3074
   939  009409  0C0E               	dw	3086
   940  00940B  0C1B               	dw	3099
   941  00940D  0C28               	dw	3112
   942  00940F  0C35               	dw	3125
   943  009411  0C42               	dw	3138
   944  009413  0C4F               	dw	3151
   945  009415  0C5D               	dw	3165
   946  009417  0C6A               	dw	3178
   947  009419  0C77               	dw	3191
   948  00941B  0C85               	dw	3205
   949  00941D  0C93               	dw	3219
   950  00941F  0CA1               	dw	3233
   951  009421  0CAF               	dw	3247
   952  009423  0CBD               	dw	3261
   953  009425  0CCB               	dw	3275
   954  009427  0CD9               	dw	3289
   955  009429  0CE8               	dw	3304
   956  00942B  0CF7               	dw	3319
   957  00942D  0D05               	dw	3333
   958  00942F  0D14               	dw	3348
   959  009431  0D23               	dw	3363
   960  009433  0D32               	dw	3378
   961  009435  0D42               	dw	3394
   962  009437  0D51               	dw	3409
   963  009439  0D61               	dw	3425
   964  00943B  0D70               	dw	3440
   965  00943D  0D80               	dw	3456
   966  00943F  0D90               	dw	3472
   967  009441  0DA0               	dw	3488
   968  009443  0DB1               	dw	3505
   969  009445  0DC1               	dw	3521
   970  009447  0DD2               	dw	3538
   971  009449  0DE3               	dw	3555
   972  00944B  0DF3               	dw	3571
   973  00944D  0E05               	dw	3589
   974  00944F  0E16               	dw	3606
   975  009451  0E27               	dw	3623
   976  009453  0E39               	dw	3641
   977  009455  0E4B               	dw	3659
   978  009457  0E5C               	dw	3676
   979  009459  0E6F               	dw	3695
   980  00945B  0E81               	dw	3713
   981  00945D  0E93               	dw	3731
   982  00945F  0EA6               	dw	3750
   983  009461                     __end_of_motor_speed_lookup:
   984                           	opt stack 0
   985  009461                     _motor_steps_lookup:
   986                           	opt stack 0
   987  009461  0001               	dw	1
   988  009463  0002               	dw	2
   989  009465  0003               	dw	3
   990  009467  0004               	dw	4
   991  009469  0005               	dw	5
   992  00946B  0006               	dw	6
   993  00946D  0007               	dw	7
   994  00946F  0008               	dw	8
   995  009471  0009               	dw	9
   996  009473  000A               	dw	10
   997  009475  000B               	dw	11
   998  009477  000C               	dw	12
   999  009479  000D               	dw	13
  1000  00947B  000E               	dw	14
  1001  00947D  000F               	dw	15
  1002  00947F  0010               	dw	16
  1003  009481  0011               	dw	17
  1004  009483  0012               	dw	18
  1005  009485  0013               	dw	19
  1006  009487  0014               	dw	20
  1007  009489  0015               	dw	21
  1008  00948B  0016               	dw	22
  1009  00948D  0017               	dw	23
  1010  00948F  0018               	dw	24
  1011  009491  0019               	dw	25
  1012  009493  001A               	dw	26
  1013  009495  001B               	dw	27
  1014  009497  001C               	dw	28
  1015  009499  001D               	dw	29
  1016  00949B  001E               	dw	30
  1017  00949D  001F               	dw	31
  1018  00949F  0020               	dw	32
  1019  0094A1  0021               	dw	33
  1020  0094A3  0022               	dw	34
  1021  0094A5  0023               	dw	35
  1022  0094A7  0024               	dw	36
  1023  0094A9  0025               	dw	37
  1024  0094AB  0026               	dw	38
  1025  0094AD  0027               	dw	39
  1026  0094AF  0028               	dw	40
  1027  0094B1  0029               	dw	41
  1028  0094B3  002A               	dw	42
  1029  0094B5  002B               	dw	43
  1030  0094B7  002C               	dw	44
  1031  0094B9  002D               	dw	45
  1032  0094BB  002E               	dw	46
  1033  0094BD  002F               	dw	47
  1034  0094BF  0030               	dw	48
  1035  0094C1  0031               	dw	49
  1036  0094C3  0032               	dw	50
  1037  0094C5  0033               	dw	51
  1038  0094C7  0034               	dw	52
  1039  0094C9  0035               	dw	53
  1040  0094CB  0036               	dw	54
  1041  0094CD  0037               	dw	55
  1042  0094CF  0038               	dw	56
  1043  0094D1  0039               	dw	57
  1044  0094D3  003A               	dw	58
  1045  0094D5  003B               	dw	59
  1046  0094D7  003C               	dw	60
  1047  0094D9  003D               	dw	61
  1048  0094DB  003E               	dw	62
  1049  0094DD  003F               	dw	63
  1050  0094DF  0040               	dw	64
  1051  0094E1  0041               	dw	65
  1052  0094E3  0042               	dw	66
  1053  0094E5  0043               	dw	67
  1054  0094E7  0045               	dw	69
  1055  0094E9  0047               	dw	71
  1056  0094EB  0049               	dw	73
  1057  0094ED  004B               	dw	75
  1058  0094EF  004D               	dw	77
  1059  0094F1  004F               	dw	79
  1060  0094F3  0051               	dw	81
  1061  0094F5  0053               	dw	83
  1062  0094F7  0055               	dw	85
  1063  0094F9  0057               	dw	87
  1064  0094FB  0059               	dw	89
  1065  0094FD  005B               	dw	91
  1066  0094FF  005D               	dw	93
  1067  009501  005F               	dw	95
  1068  009503  0061               	dw	97
  1069  009505  0063               	dw	99
  1070  009507  0065               	dw	101
  1071  009509  0067               	dw	103
  1072  00950B  0069               	dw	105
  1073  00950D  006B               	dw	107
  1074  00950F  006E               	dw	110
  1075  009511  0070               	dw	112
  1076  009513  0073               	dw	115
  1077  009515  0075               	dw	117
  1078  009517  0077               	dw	119
  1079  009519  0079               	dw	121
  1080  00951B  007B               	dw	123
  1081  00951D  007D               	dw	125
  1082  00951F  007F               	dw	127
  1083  009521  0081               	dw	129
  1084  009523  0083               	dw	131
  1085  009525  0085               	dw	133
  1086  009527  0087               	dw	135
  1087  009529  0089               	dw	137
  1088  00952B  008B               	dw	139
  1089  00952D  008D               	dw	141
  1090  00952F  008F               	dw	143
  1091  009531  0091               	dw	145
  1092  009533  0093               	dw	147
  1093  009535  0095               	dw	149
  1094  009537  0097               	dw	151
  1095  009539  0099               	dw	153
  1096  00953B  009B               	dw	155
  1097  00953D  009D               	dw	157
  1098  00953F  009F               	dw	159
  1099  009541  00A1               	dw	161
  1100  009543  00A3               	dw	163
  1101  009545  00A5               	dw	165
  1102  009547  00A7               	dw	167
  1103  009549  00A9               	dw	169
  1104  00954B  00AB               	dw	171
  1105  00954D  00AD               	dw	173
  1106  00954F  00AF               	dw	175
  1107  009551  00B1               	dw	177
  1108  009553  00B3               	dw	179
  1109  009555  00B5               	dw	181
  1110  009557  00B7               	dw	183
  1111  009559  00B9               	dw	185
  1112  00955B  00BB               	dw	187
  1113  00955D  00BD               	dw	189
  1114  00955F  00C0               	dw	192
  1115  009561  00C3               	dw	195
  1116  009563  00C6               	dw	198
  1117  009565  00C9               	dw	201
  1118  009567  00CC               	dw	204
  1119  009569  00CF               	dw	207
  1120  00956B  00D2               	dw	210
  1121  00956D  00D5               	dw	213
  1122  00956F  00D8               	dw	216
  1123  009571  00DB               	dw	219
  1124  009573  00DE               	dw	222
  1125  009575  00E1               	dw	225
  1126  009577  00E4               	dw	228
  1127  009579  00E7               	dw	231
  1128  00957B  00EA               	dw	234
  1129  00957D  00ED               	dw	237
  1130  00957F  00F0               	dw	240
  1131  009581  00F3               	dw	243
  1132  009583  00F6               	dw	246
  1133  009585  00F9               	dw	249
  1134  009587  00FC               	dw	252
  1135  009589  00FF               	dw	255
  1136  00958B  0102               	dw	258
  1137  00958D  0105               	dw	261
  1138  00958F  0108               	dw	264
  1139  009591  010B               	dw	267
  1140  009593  010E               	dw	270
  1141  009595  0111               	dw	273
  1142  009597  0114               	dw	276
  1143  009599  0117               	dw	279
  1144  00959B  011A               	dw	282
  1145  00959D  011D               	dw	285
  1146  00959F  0120               	dw	288
  1147  0095A1  0123               	dw	291
  1148  0095A3  0126               	dw	294
  1149  0095A5  012A               	dw	298
  1150  0095A7  012D               	dw	301
  1151  0095A9  0130               	dw	304
  1152  0095AB  0133               	dw	307
  1153  0095AD  0137               	dw	311
  1154  0095AF  013A               	dw	314
  1155  0095B1  013E               	dw	318
  1156  0095B3  0142               	dw	322
  1157  0095B5  0145               	dw	325
  1158  0095B7  0149               	dw	329
  1159  0095B9  014D               	dw	333
  1160  0095BB  0151               	dw	337
  1161  0095BD  0155               	dw	341
  1162  0095BF  0159               	dw	345
  1163  0095C1  015D               	dw	349
  1164  0095C3  0161               	dw	353
  1165  0095C5  0166               	dw	358
  1166  0095C7  016A               	dw	362
  1167  0095C9  016E               	dw	366
  1168  0095CB  0173               	dw	371
  1169  0095CD  0178               	dw	376
  1170  0095CF  017D               	dw	381
  1171  0095D1  0182               	dw	386
  1172  0095D3  0187               	dw	391
  1173  0095D5  018C               	dw	396
  1174  0095D7  0191               	dw	401
  1175  0095D9  0196               	dw	406
  1176  0095DB  019C               	dw	412
  1177  0095DD  01A1               	dw	417
  1178  0095DF  01A7               	dw	423
  1179  0095E1  01AD               	dw	429
  1180  0095E3  01B3               	dw	435
  1181  0095E5  01B9               	dw	441
  1182  0095E7  01BF               	dw	447
  1183  0095E9  01C6               	dw	454
  1184  0095EB  01CC               	dw	460
  1185  0095ED  01D3               	dw	467
  1186  0095EF  01DA               	dw	474
  1187  0095F1  01E1               	dw	481
  1188  0095F3  01E8               	dw	488
  1189  0095F5  01F0               	dw	496
  1190  0095F7  01F7               	dw	503
  1191  0095F9  01FF               	dw	511
  1192  0095FB  0207               	dw	519
  1193  0095FD  020F               	dw	527
  1194  0095FF  0218               	dw	536
  1195  009601  0221               	dw	545
  1196  009603  022A               	dw	554
  1197  009605  0233               	dw	563
  1198  009607  023D               	dw	573
  1199  009609  0247               	dw	583
  1200  00960B  0251               	dw	593
  1201  00960D  025C               	dw	604
  1202  00960F  0267               	dw	615
  1203  009611  0272               	dw	626
  1204  009613  027E               	dw	638
  1205  009615  028A               	dw	650
  1206  009617  0297               	dw	663
  1207  009619  02A4               	dw	676
  1208  00961B  02B2               	dw	690
  1209  00961D  02C0               	dw	704
  1210  00961F  02CF               	dw	719
  1211  009621  02DF               	dw	735
  1212  009623  02EF               	dw	751
  1213  009625  02FF               	dw	767
  1214  009627  0311               	dw	785
  1215  009629  0323               	dw	803
  1216  00962B  0336               	dw	822
  1217  00962D  0349               	dw	841
  1218  00962F  035E               	dw	862
  1219  009631  0373               	dw	883
  1220  009633  0389               	dw	905
  1221  009635  03A1               	dw	929
  1222  009637  03B9               	dw	953
  1223  009639  03D3               	dw	979
  1224  00963B  03DD               	dw	989
  1225  00963D  03E4               	dw	996
  1226  00963F  03EA               	dw	1002
  1227  009641  03F1               	dw	1009
  1228  009643  03F8               	dw	1016
  1229  009645  03FF               	dw	1023
  1230  009647  0406               	dw	1030
  1231  009649  040D               	dw	1037
  1232  00964B  0415               	dw	1045
  1233  00964D  041C               	dw	1052
  1234  00964F  0424               	dw	1060
  1235  009651  042B               	dw	1067
  1236  009653  0433               	dw	1075
  1237  009655  043B               	dw	1083
  1238  009657  0442               	dw	1090
  1239  009659  044A               	dw	1098
  1240  00965B  0452               	dw	1106
  1241  00965D  045A               	dw	1114
  1242  00965F  0463               	dw	1123
  1243  009661  046B               	dw	1131
  1244  009663  0474               	dw	1140
  1245  009665  047C               	dw	1148
  1246  009667  0485               	dw	1157
  1247  009669  048E               	dw	1166
  1248  00966B  0496               	dw	1174
  1249  00966D  049F               	dw	1183
  1250  00966F  04A9               	dw	1193
  1251  009671  04B2               	dw	1202
  1252  009673  04BB               	dw	1211
  1253  009675  04C5               	dw	1221
  1254  009677  04CE               	dw	1230
  1255  009679  04D8               	dw	1240
  1256  00967B  04E2               	dw	1250
  1257  00967D  04EC               	dw	1260
  1258  00967F  04F6               	dw	1270
  1259  009681  0500               	dw	1280
  1260  009683  050B               	dw	1291
  1261  009685  0515               	dw	1301
  1262  009687  0520               	dw	1312
  1263  009689  052B               	dw	1323
  1264  00968B  0536               	dw	1334
  1265  00968D  0541               	dw	1345
  1266  00968F  054C               	dw	1356
  1267  009691  0558               	dw	1368
  1268  009693  0564               	dw	1380
  1269  009695  056F               	dw	1391
  1270  009697  057B               	dw	1403
  1271  009699  0587               	dw	1415
  1272  00969B  0594               	dw	1428
  1273  00969D  05A0               	dw	1440
  1274  00969F  05AD               	dw	1453
  1275  0096A1  05BA               	dw	1466
  1276  0096A3  05C7               	dw	1479
  1277  0096A5  05D4               	dw	1492
  1278  0096A7  05E2               	dw	1506
  1279  0096A9  05EF               	dw	1519
  1280  0096AB  05FD               	dw	1533
  1281  0096AD  060B               	dw	1547
  1282  0096AF  0619               	dw	1561
  1283  0096B1  0628               	dw	1576
  1284  0096B3  0637               	dw	1591
  1285  0096B5  0646               	dw	1606
  1286  0096B7  0655               	dw	1621
  1287  0096B9  0664               	dw	1636
  1288  0096BB  0674               	dw	1652
  1289  0096BD  0684               	dw	1668
  1290  0096BF  0694               	dw	1684
  1291  0096C1  06A4               	dw	1700
  1292  0096C3  06B5               	dw	1717
  1293  0096C5  06C6               	dw	1734
  1294  0096C7  06D7               	dw	1751
  1295  0096C9  06E9               	dw	1769
  1296  0096CB  06FA               	dw	1786
  1297  0096CD  070C               	dw	1804
  1298  0096CF  071F               	dw	1823
  1299  0096D1  0731               	dw	1841
  1300  0096D3  0744               	dw	1860
  1301  0096D5  0758               	dw	1880
  1302  0096D7  076B               	dw	1899
  1303  0096D9  077F               	dw	1919
  1304  0096DB  0793               	dw	1939
  1305  0096DD  07A8               	dw	1960
  1306  0096DF  07BD               	dw	1981
  1307  0096E1  07D2               	dw	2002
  1308  0096E3  07E8               	dw	2024
  1309  0096E5  07FE               	dw	2046
  1310  0096E7  0815               	dw	2069
  1311  0096E9  082C               	dw	2092
  1312  0096EB  0843               	dw	2115
  1313  0096ED  085B               	dw	2139
  1314  0096EF  0873               	dw	2163
  1315  0096F1  088B               	dw	2187
  1316  0096F3  08A5               	dw	2213
  1317  0096F5  08BE               	dw	2238
  1318  0096F7  08D8               	dw	2264
  1319  0096F9  08F2               	dw	2290
  1320  0096FB  090D               	dw	2317
  1321  0096FD  0929               	dw	2345
  1322  0096FF  0945               	dw	2373
  1323  009701  0961               	dw	2401
  1324  009703  097E               	dw	2430
  1325  009705  099C               	dw	2460
  1326  009707  09BA               	dw	2490
  1327  009709  09D9               	dw	2521
  1328  00970B  09F9               	dw	2553
  1329  00970D  0A19               	dw	2585
  1330  00970F  0A39               	dw	2617
  1331  009711  0A5B               	dw	2651
  1332  009713  0A7D               	dw	2685
  1333  009715  0A9F               	dw	2719
  1334  009717  0AC3               	dw	2755
  1335  009719  0AE7               	dw	2791
  1336  00971B  0B0C               	dw	2828
  1337  00971D  0B31               	dw	2865
  1338  00971F  0B58               	dw	2904
  1339  009721  0B7F               	dw	2943
  1340  009723  0BA7               	dw	2983
  1341  009725  0BD0               	dw	3024
  1342  009727  0BFA               	dw	3066
  1343  009729  0C25               	dw	3109
  1344  00972B  0C51               	dw	3153
  1345  00972D  0C7E               	dw	3198
  1346  00972F  0CAB               	dw	3243
  1347  009731  0CDA               	dw	3290
  1348  009733  0D0A               	dw	3338
  1349  009735  0D3B               	dw	3387
  1350  009737  0D6D               	dw	3437
  1351  009739  0DA0               	dw	3488
  1352  00973B  0DD4               	dw	3540
  1353  00973D  0E0A               	dw	3594
  1354  00973F  0E41               	dw	3649
  1355  009741  0E79               	dw	3705
  1356  009743  0EB3               	dw	3763
  1357  009745  0EEE               	dw	3822
  1358  009747  0F2A               	dw	3882
  1359  009749  0F68               	dw	3944
  1360  00974B  0FA8               	dw	4008
  1361  00974D  0FE9               	dw	4073
  1362  00974F  102C               	dw	4140
  1363  009751  1070               	dw	4208
  1364  009753  10B6               	dw	4278
  1365  009755  10FE               	dw	4350
  1366  009757  1148               	dw	4424
  1367  009759  1194               	dw	4500
  1368  00975B  11E2               	dw	4578
  1369  00975D  1232               	dw	4658
  1370  00975F  1285               	dw	4741
  1371  009761  12D9               	dw	4825
  1372  009763  1330               	dw	4912
  1373  009765  1389               	dw	5001
  1374  009767  13E5               	dw	5093
  1375  009769  1444               	dw	5188
  1376  00976B  14A5               	dw	5285
  1377  00976D  1509               	dw	5385
  1378  00976F  1570               	dw	5488
  1379  009771  15DA               	dw	5594
  1380  009773  1647               	dw	5703
  1381  009775  16B8               	dw	5816
  1382  009777  172B               	dw	5931
  1383  009779  17A3               	dw	6051
  1384  00977B  181E               	dw	6174
  1385  00977D  189D               	dw	6301
  1386  00977F  1921               	dw	6433
  1387  009781  19A8               	dw	6568
  1388  009783  1A34               	dw	6708
  1389  009785  1AC4               	dw	6852
  1390  009787  1B5A               	dw	7002
  1391  009789  1BF4               	dw	7156
  1392  00978B  1C94               	dw	7316
  1393  00978D  1D39               	dw	7481
  1394  00978F  1DE4               	dw	7652
  1395  009791  1E95               	dw	7829
  1396  009793  1F4C               	dw	8012
  1397  009795  200A               	dw	8202
  1398  009797  20CE               	dw	8398
  1399  009799  219A               	dw	8602
  1400  00979B  226E               	dw	8814
  1401  00979D  234A               	dw	9034
  1402  00979F  242E               	dw	9262
  1403  0097A1  251B               	dw	9499
  1404  0097A3  2612               	dw	9746
  1405  0097A5  2712               	dw	10002
  1406  0097A7  281D               	dw	10269
  1407  0097A9  2932               	dw	10546
  1408  0097AB  2A53               	dw	10835
  1409  0097AD  2B81               	dw	11137
  1410  0097AF  2CBB               	dw	11451
  1411  0097B1  2E03               	dw	11779
  1412  0097B3  2F5A               	dw	12122
  1413  0097B5  30C0               	dw	12480
  1414  0097B7  3236               	dw	12854
  1415  0097B9  33BD               	dw	13245
  1416  0097BB  3557               	dw	13655
  1417  0097BD  35F5               	dw	13813
  1418  0097BF  3661               	dw	13921
  1419  0097C1  36CD               	dw	14029
  1420  0097C3  373B               	dw	14139
  1421  0097C5  37AA               	dw	14250
  1422  0097C7  381B               	dw	14363
  1423  0097C9  388C               	dw	14476
  1424  0097CB  3900               	dw	14592
  1425  0097CD  3974               	dw	14708
  1426  0097CF  39EA               	dw	14826
  1427  0097D1  3A62               	dw	14946
  1428  0097D3  3ADB               	dw	15067
  1429  0097D5  3B55               	dw	15189
  1430  0097D7  3BD1               	dw	15313
  1431  0097D9  3C4E               	dw	15438
  1432  0097DB  3CCD               	dw	15565
  1433  0097DD  3D4E               	dw	15694
  1434  0097DF  3DD0               	dw	15824
  1435  0097E1  3E54               	dw	15956
  1436  0097E3  3EDA               	dw	16090
  1437  0097E5  3F61               	dw	16225
  1438  0097E7  3FEA               	dw	16362
  1439  0097E9  4074               	dw	16500
  1440  0097EB  4101               	dw	16641
  1441  0097ED  418F               	dw	16783
  1442  0097EF  421F               	dw	16927
  1443  0097F1  42B1               	dw	17073
  1444  0097F3  4345               	dw	17221
  1445  0097F5  43DB               	dw	17371
  1446  0097F7  4473               	dw	17523
  1447  0097F9  450D               	dw	17677
  1448  0097FB  45A9               	dw	17833
  1449  0097FD  4647               	dw	17991
  1450  0097FF  46E7               	dw	18151
  1451  009801  4789               	dw	18313
  1452  009803  482E               	dw	18478
  1453  009805  48D5               	dw	18645
  1454  009807  497E               	dw	18814
  1455  009809  4A29               	dw	18985
  1456  00980B  4AD7               	dw	19159
  1457  00980D  4B87               	dw	19335
  1458  00980F  4C3A               	dw	19514
  1459  009811  4CEF               	dw	19695
  1460  009813  4DA6               	dw	19878
  1461  009815  4E61               	dw	20065
  1462  009817  4F1E               	dw	20254
  1463  009819  4FDD               	dw	20445
  1464  00981B  50A0               	dw	20640
  1465  00981D  5165               	dw	20837
  1466  00981F  522D               	dw	21037
  1467  009821  52F8               	dw	21240
  1468  009823  53C6               	dw	21446
  1469  009825  5497               	dw	21655
  1470  009827  556B               	dw	21867
  1471  009829  5642               	dw	22082
  1472  00982B  571C               	dw	22300
  1473  00982D  57FA               	dw	22522
  1474  00982F                     __end_of_motor_steps_lookup:
  1475                           	opt stack 0
  1476  00982F                     _motor_postscaler_lookup:
  1477                           	opt stack 0
  1478  00982F  0C                 	db	12
  1479  009830  07                 	db	7
  1480  009831  05                 	db	5
  1481  009832  04                 	db	4
  1482  009833  04                 	db	4
  1483  009834  03                 	db	3
  1484  009835  03                 	db	3
  1485  009836  03                 	db	3
  1486  009837  02                 	db	2
  1487  009838  02                 	db	2
  1488  009839  02                 	db	2
  1489  00983A  02                 	db	2
  1490  00983B  02                 	db	2
  1491  00983C  02                 	db	2
  1492  00983D  01                 	db	1
  1493  00983E  01                 	db	1
  1494  00983F  01                 	db	1
  1495  009840  01                 	db	1
  1496  009841  01                 	db	1
  1497  009842  01                 	db	1
  1498  009843  01                 	db	1
  1499  009844  01                 	db	1
  1500  009845  01                 	db	1
  1501  009846  01                 	db	1
  1502  009847  01                 	db	1
  1503  009848  01                 	db	1
  1504  009849  01                 	db	1
  1505  00984A  01                 	db	1
  1506  00984B  01                 	db	1
  1507  00984C  01                 	db	1
  1508  00984D  01                 	db	1
  1509  00984E  01                 	db	1
  1510  00984F  01                 	db	1
  1511  009850  01                 	db	1
  1512  009851  01                 	db	1
  1513  009852  01                 	db	1
  1514  009853  01                 	db	1
  1515  009854  01                 	db	1
  1516  009855  01                 	db	1
  1517  009856  01                 	db	1
  1518  009857  01                 	db	1
  1519  009858  01                 	db	1
  1520  009859  01                 	db	1
  1521  00985A  01                 	db	1
  1522  00985B  01                 	db	1
  1523  00985C  01                 	db	1
  1524  00985D  01                 	db	1
  1525  00985E  01                 	db	1
  1526  00985F  01                 	db	1
  1527  009860  01                 	db	1
  1528  009861  01                 	db	1
  1529  009862  01                 	db	1
  1530  009863  01                 	db	1
  1531  009864  01                 	db	1
  1532  009865  01                 	db	1
  1533  009866  01                 	db	1
  1534  009867  01                 	db	1
  1535  009868  01                 	db	1
  1536  009869  01                 	db	1
  1537  00986A  01                 	db	1
  1538  00986B  01                 	db	1
  1539  00986C  01                 	db	1
  1540  00986D  01                 	db	1
  1541  00986E  01                 	db	1
  1542  00986F  01                 	db	1
  1543  009870  01                 	db	1
  1544  009871  01                 	db	1
  1545  009872  01                 	db	1
  1546  009873  01                 	db	1
  1547  009874  01                 	db	1
  1548  009875  01                 	db	1
  1549  009876  01                 	db	1
  1550  009877  01                 	db	1
  1551  009878  01                 	db	1
  1552  009879  01                 	db	1
  1553  00987A  01                 	db	1
  1554  00987B  01                 	db	1
  1555  00987C  01                 	db	1
  1556  00987D  01                 	db	1
  1557  00987E  01                 	db	1
  1558  00987F  01                 	db	1
  1559  009880  01                 	db	1
  1560  009881  01                 	db	1
  1561  009882  01                 	db	1
  1562  009883  01                 	db	1
  1563  009884  01                 	db	1
  1564  009885  01                 	db	1
  1565  009886  01                 	db	1
  1566  009887  01                 	db	1
  1567  009888  01                 	db	1
  1568  009889  01                 	db	1
  1569  00988A  00                 	db	0
  1570  00988B  00                 	db	0
  1571  00988C  00                 	db	0
  1572  00988D  00                 	db	0
  1573  00988E  00                 	db	0
  1574  00988F  00                 	db	0
  1575  009890  00                 	db	0
  1576  009891  00                 	db	0
  1577  009892  00                 	db	0
  1578  009893  00                 	db	0
  1579  009894  00                 	db	0
  1580  009895  00                 	db	0
  1581  009896  00                 	db	0
  1582  009897  00                 	db	0
  1583  009898  00                 	db	0
  1584  009899  00                 	db	0
  1585  00989A  00                 	db	0
  1586  00989B  00                 	db	0
  1587  00989C  00                 	db	0
  1588  00989D  00                 	db	0
  1589  00989E  00                 	db	0
  1590  00989F  00                 	db	0
  1591  0098A0  00                 	db	0
  1592  0098A1  00                 	db	0
  1593  0098A2  00                 	db	0
  1594  0098A3  00                 	db	0
  1595  0098A4  00                 	db	0
  1596  0098A5  00                 	db	0
  1597  0098A6  00                 	db	0
  1598  0098A7  00                 	db	0
  1599  0098A8  00                 	db	0
  1600  0098A9  00                 	db	0
  1601  0098AA  00                 	db	0
  1602  0098AB  00                 	db	0
  1603  0098AC  00                 	db	0
  1604  0098AD  00                 	db	0
  1605  0098AE  00                 	db	0
  1606  0098AF  00                 	db	0
  1607  0098B0  00                 	db	0
  1608  0098B1  00                 	db	0
  1609  0098B2  00                 	db	0
  1610  0098B3  00                 	db	0
  1611  0098B4  00                 	db	0
  1612  0098B5  00                 	db	0
  1613  0098B6  00                 	db	0
  1614  0098B7  00                 	db	0
  1615  0098B8  00                 	db	0
  1616  0098B9  00                 	db	0
  1617  0098BA  00                 	db	0
  1618  0098BB  00                 	db	0
  1619  0098BC  00                 	db	0
  1620  0098BD  00                 	db	0
  1621  0098BE  00                 	db	0
  1622  0098BF  00                 	db	0
  1623  0098C0  00                 	db	0
  1624  0098C1  00                 	db	0
  1625  0098C2  00                 	db	0
  1626  0098C3  00                 	db	0
  1627  0098C4  00                 	db	0
  1628  0098C5  00                 	db	0
  1629  0098C6  00                 	db	0
  1630  0098C7  00                 	db	0
  1631  0098C8  00                 	db	0
  1632  0098C9  00                 	db	0
  1633  0098CA  00                 	db	0
  1634  0098CB  00                 	db	0
  1635  0098CC  00                 	db	0
  1636  0098CD  00                 	db	0
  1637  0098CE  00                 	db	0
  1638  0098CF  00                 	db	0
  1639  0098D0  00                 	db	0
  1640  0098D1  00                 	db	0
  1641  0098D2  00                 	db	0
  1642  0098D3  00                 	db	0
  1643  0098D4  00                 	db	0
  1644  0098D5  00                 	db	0
  1645  0098D6  00                 	db	0
  1646  0098D7  00                 	db	0
  1647  0098D8  00                 	db	0
  1648  0098D9  00                 	db	0
  1649  0098DA  00                 	db	0
  1650  0098DB  00                 	db	0
  1651  0098DC  00                 	db	0
  1652  0098DD  00                 	db	0
  1653  0098DE  00                 	db	0
  1654  0098DF  00                 	db	0
  1655  0098E0  00                 	db	0
  1656  0098E1  00                 	db	0
  1657  0098E2  00                 	db	0
  1658  0098E3  00                 	db	0
  1659  0098E4  00                 	db	0
  1660  0098E5  00                 	db	0
  1661  0098E6  00                 	db	0
  1662  0098E7  00                 	db	0
  1663  0098E8  00                 	db	0
  1664  0098E9  00                 	db	0
  1665  0098EA  00                 	db	0
  1666  0098EB  00                 	db	0
  1667  0098EC  00                 	db	0
  1668  0098ED  00                 	db	0
  1669  0098EE  00                 	db	0
  1670  0098EF  00                 	db	0
  1671  0098F0  00                 	db	0
  1672  0098F1  00                 	db	0
  1673  0098F2  00                 	db	0
  1674  0098F3  00                 	db	0
  1675  0098F4  00                 	db	0
  1676  0098F5  00                 	db	0
  1677  0098F6  00                 	db	0
  1678  0098F7  00                 	db	0
  1679  0098F8  00                 	db	0
  1680  0098F9  00                 	db	0
  1681  0098FA  00                 	db	0
  1682  0098FB  00                 	db	0
  1683  0098FC  00                 	db	0
  1684  0098FD  00                 	db	0
  1685  0098FE  00                 	db	0
  1686  0098FF  00                 	db	0
  1687  009900  00                 	db	0
  1688  009901  00                 	db	0
  1689  009902  00                 	db	0
  1690  009903  00                 	db	0
  1691  009904  00                 	db	0
  1692  009905  00                 	db	0
  1693  009906  00                 	db	0
  1694  009907  00                 	db	0
  1695  009908  00                 	db	0
  1696  009909  00                 	db	0
  1697  00990A  00                 	db	0
  1698  00990B  00                 	db	0
  1699  00990C  00                 	db	0
  1700  00990D  00                 	db	0
  1701  00990E  00                 	db	0
  1702  00990F  00                 	db	0
  1703  009910  00                 	db	0
  1704  009911  00                 	db	0
  1705  009912  00                 	db	0
  1706  009913  00                 	db	0
  1707  009914  00                 	db	0
  1708  009915  00                 	db	0
  1709  009916  00                 	db	0
  1710  009917  00                 	db	0
  1711  009918  00                 	db	0
  1712  009919  00                 	db	0
  1713  00991A  00                 	db	0
  1714  00991B  00                 	db	0
  1715  00991C  00                 	db	0
  1716  00991D  00                 	db	0
  1717  00991E  00                 	db	0
  1718  00991F  00                 	db	0
  1719  009920  00                 	db	0
  1720  009921  00                 	db	0
  1721  009922  00                 	db	0
  1722  009923  00                 	db	0
  1723  009924  00                 	db	0
  1724  009925  00                 	db	0
  1725  009926  00                 	db	0
  1726  009927  00                 	db	0
  1727  009928  00                 	db	0
  1728  009929  00                 	db	0
  1729  00992A  00                 	db	0
  1730  00992B  00                 	db	0
  1731  00992C  00                 	db	0
  1732  00992D  00                 	db	0
  1733  00992E  00                 	db	0
  1734  00992F  00                 	db	0
  1735  009930  00                 	db	0
  1736  009931  00                 	db	0
  1737  009932  00                 	db	0
  1738  009933  00                 	db	0
  1739  009934  00                 	db	0
  1740  009935  00                 	db	0
  1741  009936  00                 	db	0
  1742  009937  00                 	db	0
  1743  009938  00                 	db	0
  1744  009939  00                 	db	0
  1745  00993A  00                 	db	0
  1746  00993B  00                 	db	0
  1747  00993C  00                 	db	0
  1748  00993D  00                 	db	0
  1749  00993E  00                 	db	0
  1750  00993F  00                 	db	0
  1751  009940  00                 	db	0
  1752  009941  00                 	db	0
  1753  009942  00                 	db	0
  1754  009943  00                 	db	0
  1755  009944  00                 	db	0
  1756  009945  00                 	db	0
  1757  009946  00                 	db	0
  1758  009947  00                 	db	0
  1759  009948  00                 	db	0
  1760  009949  00                 	db	0
  1761  00994A  00                 	db	0
  1762  00994B  00                 	db	0
  1763  00994C  00                 	db	0
  1764  00994D  00                 	db	0
  1765  00994E  00                 	db	0
  1766  00994F  00                 	db	0
  1767  009950  00                 	db	0
  1768  009951  00                 	db	0
  1769  009952  00                 	db	0
  1770  009953  00                 	db	0
  1771  009954  00                 	db	0
  1772  009955  00                 	db	0
  1773  009956  00                 	db	0
  1774  009957  00                 	db	0
  1775  009958  00                 	db	0
  1776  009959  00                 	db	0
  1777  00995A  00                 	db	0
  1778  00995B  00                 	db	0
  1779  00995C  00                 	db	0
  1780  00995D  00                 	db	0
  1781  00995E  00                 	db	0
  1782  00995F  00                 	db	0
  1783  009960  00                 	db	0
  1784  009961  00                 	db	0
  1785  009962  00                 	db	0
  1786  009963  00                 	db	0
  1787  009964  00                 	db	0
  1788  009965  00                 	db	0
  1789  009966  00                 	db	0
  1790  009967  00                 	db	0
  1791  009968  00                 	db	0
  1792  009969  00                 	db	0
  1793  00996A  00                 	db	0
  1794  00996B  00                 	db	0
  1795  00996C  00                 	db	0
  1796  00996D  00                 	db	0
  1797  00996E  00                 	db	0
  1798  00996F  00                 	db	0
  1799  009970  00                 	db	0
  1800  009971  00                 	db	0
  1801  009972  00                 	db	0
  1802  009973  00                 	db	0
  1803  009974  00                 	db	0
  1804  009975  00                 	db	0
  1805  009976  00                 	db	0
  1806  009977  00                 	db	0
  1807  009978  00                 	db	0
  1808  009979  00                 	db	0
  1809  00997A  00                 	db	0
  1810  00997B  00                 	db	0
  1811  00997C  00                 	db	0
  1812  00997D  00                 	db	0
  1813  00997E  00                 	db	0
  1814  00997F  00                 	db	0
  1815  009980  00                 	db	0
  1816  009981  00                 	db	0
  1817  009982  00                 	db	0
  1818  009983  00                 	db	0
  1819  009984  00                 	db	0
  1820  009985  00                 	db	0
  1821  009986  00                 	db	0
  1822  009987  00                 	db	0
  1823  009988  00                 	db	0
  1824  009989  00                 	db	0
  1825  00998A  00                 	db	0
  1826  00998B  00                 	db	0
  1827  00998C  00                 	db	0
  1828  00998D  00                 	db	0
  1829  00998E  00                 	db	0
  1830  00998F  00                 	db	0
  1831  009990  00                 	db	0
  1832  009991  00                 	db	0
  1833  009992  00                 	db	0
  1834  009993  00                 	db	0
  1835  009994  00                 	db	0
  1836  009995  00                 	db	0
  1837  009996  00                 	db	0
  1838  009997  00                 	db	0
  1839  009998  00                 	db	0
  1840  009999  00                 	db	0
  1841  00999A  00                 	db	0
  1842  00999B  00                 	db	0
  1843  00999C  00                 	db	0
  1844  00999D  00                 	db	0
  1845  00999E  00                 	db	0
  1846  00999F  00                 	db	0
  1847  0099A0  00                 	db	0
  1848  0099A1  00                 	db	0
  1849  0099A2  00                 	db	0
  1850  0099A3  00                 	db	0
  1851  0099A4  00                 	db	0
  1852  0099A5  00                 	db	0
  1853  0099A6  00                 	db	0
  1854  0099A7  00                 	db	0
  1855  0099A8  00                 	db	0
  1856  0099A9  00                 	db	0
  1857  0099AA  00                 	db	0
  1858  0099AB  00                 	db	0
  1859  0099AC  00                 	db	0
  1860  0099AD  00                 	db	0
  1861  0099AE  00                 	db	0
  1862  0099AF  00                 	db	0
  1863  0099B0  00                 	db	0
  1864  0099B1  00                 	db	0
  1865  0099B2  00                 	db	0
  1866  0099B3  00                 	db	0
  1867  0099B4  00                 	db	0
  1868  0099B5  00                 	db	0
  1869  0099B6  00                 	db	0
  1870  0099B7  00                 	db	0
  1871  0099B8  00                 	db	0
  1872  0099B9  00                 	db	0
  1873  0099BA  00                 	db	0
  1874  0099BB  00                 	db	0
  1875  0099BC  00                 	db	0
  1876  0099BD  00                 	db	0
  1877  0099BE  00                 	db	0
  1878  0099BF  00                 	db	0
  1879  0099C0  00                 	db	0
  1880  0099C1  00                 	db	0
  1881  0099C2  00                 	db	0
  1882  0099C3  00                 	db	0
  1883  0099C4  00                 	db	0
  1884  0099C5  00                 	db	0
  1885  0099C6  00                 	db	0
  1886  0099C7  00                 	db	0
  1887  0099C8  00                 	db	0
  1888  0099C9  00                 	db	0
  1889  0099CA  00                 	db	0
  1890  0099CB  00                 	db	0
  1891  0099CC  00                 	db	0
  1892  0099CD  00                 	db	0
  1893  0099CE  00                 	db	0
  1894  0099CF  00                 	db	0
  1895  0099D0  00                 	db	0
  1896  0099D1  00                 	db	0
  1897  0099D2  00                 	db	0
  1898  0099D3  00                 	db	0
  1899  0099D4  00                 	db	0
  1900  0099D5  00                 	db	0
  1901  0099D6  00                 	db	0
  1902  0099D7  00                 	db	0
  1903  0099D8  00                 	db	0
  1904  0099D9  00                 	db	0
  1905  0099DA  00                 	db	0
  1906  0099DB  00                 	db	0
  1907  0099DC  00                 	db	0
  1908  0099DD  00                 	db	0
  1909  0099DE  00                 	db	0
  1910  0099DF  00                 	db	0
  1911  0099E0  00                 	db	0
  1912  0099E1  00                 	db	0
  1913  0099E2  00                 	db	0
  1914  0099E3  00                 	db	0
  1915  0099E4  00                 	db	0
  1916  0099E5  00                 	db	0
  1917  0099E6  00                 	db	0
  1918  0099E7  00                 	db	0
  1919  0099E8  00                 	db	0
  1920  0099E9  00                 	db	0
  1921  0099EA  00                 	db	0
  1922  0099EB  00                 	db	0
  1923  0099EC  00                 	db	0
  1924  0099ED  00                 	db	0
  1925  0099EE  00                 	db	0
  1926  0099EF  00                 	db	0
  1927  0099F0  00                 	db	0
  1928  0099F1  00                 	db	0
  1929  0099F2  00                 	db	0
  1930  0099F3  00                 	db	0
  1931  0099F4  00                 	db	0
  1932  0099F5  00                 	db	0
  1933  0099F6  00                 	db	0
  1934  0099F7  00                 	db	0
  1935  0099F8  00                 	db	0
  1936  0099F9  00                 	db	0
  1937  0099FA  00                 	db	0
  1938  0099FB  00                 	db	0
  1939  0099FC  00                 	db	0
  1940  0099FD  00                 	db	0
  1941  0099FE  00                 	db	0
  1942  0099FF  00                 	db	0
  1943  009A00  00                 	db	0
  1944  009A01  00                 	db	0
  1945  009A02  00                 	db	0
  1946  009A03  00                 	db	0
  1947  009A04  00                 	db	0
  1948  009A05  00                 	db	0
  1949  009A06  00                 	db	0
  1950  009A07  00                 	db	0
  1951  009A08  00                 	db	0
  1952  009A09  00                 	db	0
  1953  009A0A  00                 	db	0
  1954  009A0B  00                 	db	0
  1955  009A0C  00                 	db	0
  1956  009A0D  00                 	db	0
  1957  009A0E  00                 	db	0
  1958  009A0F  00                 	db	0
  1959  009A10  00                 	db	0
  1960  009A11  00                 	db	0
  1961  009A12  00                 	db	0
  1962  009A13  00                 	db	0
  1963  009A14  00                 	db	0
  1964  009A15  00                 	db	0
  1965  009A16                     __end_of_motor_postscaler_lookup:
  1966                           	opt stack 0
  1967  009A16                     _motor_period_lookup:
  1968                           	opt stack 0
  1969  009A16  EC                 	db	236
  1970  009A17  F2                 	db	242
  1971  009A18  F6                 	db	246
  1972  009A19  F4                 	db	244
  1973  009A1A  D2                 	db	210
  1974  009A1B  E8                 	db	232
  1975  009A1C  D2                 	db	210
  1976  009A1D  C0                 	db	192
  1977  009A1E  EC                 	db	236
  1978  009A1F  DC                 	db	220
  1979  009A20  CF                 	db	207
  1980  009A21  C3                 	db	195
  1981  009A22  B9                 	db	185
  1982  009A23  B0                 	db	176
  1983  009A24  FC                 	db	252
  1984  009A25  F2                 	db	242
  1985  009A26  E8                 	db	232
  1986  009A27  DF                 	db	223
  1987  009A28  D7                 	db	215
  1988  009A29  D0                 	db	208
  1989  009A2A  CA                 	db	202
  1990  009A2B  C3                 	db	195
  1991  009A2C  BE                 	db	190
  1992  009A2D  B8                 	db	184
  1993  009A2E  B3                 	db	179
  1994  009A2F  AF                 	db	175
  1995  009A30  AA                 	db	170
  1996  009A31  A6                 	db	166
  1997  009A32  A2                 	db	162
  1998  009A33  9F                 	db	159
  1999  009A34  9B                 	db	155
  2000  009A35  98                 	db	152
  2001  009A36  95                 	db	149
  2002  009A37  92                 	db	146
  2003  009A38  8F                 	db	143
  2004  009A39  8C                 	db	140
  2005  009A3A  8A                 	db	138
  2006  009A3B  87                 	db	135
  2007  009A3C  85                 	db	133
  2008  009A3D  83                 	db	131
  2009  009A3E  81                 	db	129
  2010  009A3F  7F                 	db	127
  2011  009A40  7D                 	db	125
  2012  009A41  7B                 	db	123
  2013  009A42  79                 	db	121
  2014  009A43  77                 	db	119
  2015  009A44  75                 	db	117
  2016  009A45  74                 	db	116
  2017  009A46  72                 	db	114
  2018  009A47  71                 	db	113
  2019  009A48  6F                 	db	111
  2020  009A49  6E                 	db	110
  2021  009A4A  6C                 	db	108
  2022  009A4B  6B                 	db	107
  2023  009A4C  6A                 	db	106
  2024  009A4D  68                 	db	104
  2025  009A4E  67                 	db	103
  2026  009A4F  66                 	db	102
  2027  009A50  65                 	db	101
  2028  009A51  64                 	db	100
  2029  009A52  62                 	db	98
  2030  009A53  61                 	db	97
  2031  009A54  60                 	db	96
  2032  009A55  5F                 	db	95
  2033  009A56  5E                 	db	94
  2034  009A57  5D                 	db	93
  2035  009A58  5C                 	db	92
  2036  009A59  5B                 	db	91
  2037  009A5A  59                 	db	89
  2038  009A5B  57                 	db	87
  2039  009A5C  56                 	db	86
  2040  009A5D  54                 	db	84
  2041  009A5E  53                 	db	83
  2042  009A5F  51                 	db	81
  2043  009A60  50                 	db	80
  2044  009A61  4F                 	db	79
  2045  009A62  4E                 	db	78
  2046  009A63  4C                 	db	76
  2047  009A64  4B                 	db	75
  2048  009A65  4A                 	db	74
  2049  009A66  49                 	db	73
  2050  009A67  48                 	db	72
  2051  009A68  47                 	db	71
  2052  009A69  46                 	db	70
  2053  009A6A  45                 	db	69
  2054  009A6B  44                 	db	68
  2055  009A6C  43                 	db	67
  2056  009A6D  42                 	db	66
  2057  009A6E  41                 	db	65
  2058  009A6F  40                 	db	64
  2059  009A70  3F                 	db	63
  2060  009A71  FE                 	db	254
  2061  009A72  FB                 	db	251
  2062  009A73  F8                 	db	248
  2063  009A74  F6                 	db	246
  2064  009A75  F3                 	db	243
  2065  009A76  F0                 	db	240
  2066  009A77  EE                 	db	238
  2067  009A78  EC                 	db	236
  2068  009A79  E9                 	db	233
  2069  009A7A  E7                 	db	231
  2070  009A7B  E5                 	db	229
  2071  009A7C  E3                 	db	227
  2072  009A7D  E0                 	db	224
  2073  009A7E  DE                 	db	222
  2074  009A7F  DC                 	db	220
  2075  009A80  DA                 	db	218
  2076  009A81  D8                 	db	216
  2077  009A82  D7                 	db	215
  2078  009A83  D5                 	db	213
  2079  009A84  D3                 	db	211
  2080  009A85  D1                 	db	209
  2081  009A86  CF                 	db	207
  2082  009A87  CE                 	db	206
  2083  009A88  CC                 	db	204
  2084  009A89  CA                 	db	202
  2085  009A8A  C9                 	db	201
  2086  009A8B  C7                 	db	199
  2087  009A8C  C6                 	db	198
  2088  009A8D  C4                 	db	196
  2089  009A8E  C3                 	db	195
  2090  009A8F  C1                 	db	193
  2091  009A90  C0                 	db	192
  2092  009A91  BE                 	db	190
  2093  009A92  BD                 	db	189
  2094  009A93  BC                 	db	188
  2095  009A94  BA                 	db	186
  2096  009A95  B8                 	db	184
  2097  009A96  B6                 	db	182
  2098  009A97  B4                 	db	180
  2099  009A98  B3                 	db	179
  2100  009A99  B1                 	db	177
  2101  009A9A  AF                 	db	175
  2102  009A9B  AE                 	db	174
  2103  009A9C  AC                 	db	172
  2104  009A9D  AA                 	db	170
  2105  009A9E  A9                 	db	169
  2106  009A9F  A7                 	db	167
  2107  009AA0  A6                 	db	166
  2108  009AA1  A4                 	db	164
  2109  009AA2  A3                 	db	163
  2110  009AA3  A1                 	db	161
  2111  009AA4  A0                 	db	160
  2112  009AA5  9F                 	db	159
  2113  009AA6  9D                 	db	157
  2114  009AA7  9C                 	db	156
  2115  009AA8  9B                 	db	155
  2116  009AA9  9A                 	db	154
  2117  009AAA  98                 	db	152
  2118  009AAB  97                 	db	151
  2119  009AAC  96                 	db	150
  2120  009AAD  95                 	db	149
  2121  009AAE  94                 	db	148
  2122  009AAF  93                 	db	147
  2123  009AB0  92                 	db	146
  2124  009AB1  90                 	db	144
  2125  009AB2  8F                 	db	143
  2126  009AB3  8E                 	db	142
  2127  009AB4  8D                 	db	141
  2128  009AB5  8C                 	db	140
  2129  009AB6  8B                 	db	139
  2130  009AB7  8A                 	db	138
  2131  009AB8  89                 	db	137
  2132  009AB9  88                 	db	136
  2133  009ABA  87                 	db	135
  2134  009ABB  86                 	db	134
  2135  009ABC  85                 	db	133
  2136  009ABD  84                 	db	132
  2137  009ABE  83                 	db	131
  2138  009ABF  82                 	db	130
  2139  009AC0  81                 	db	129
  2140  009AC1  80                 	db	128
  2141  009AC2  7F                 	db	127
  2142  009AC3  7E                 	db	126
  2143  009AC4  7D                 	db	125
  2144  009AC5  7C                 	db	124
  2145  009AC6  7B                 	db	123
  2146  009AC7  7A                 	db	122
  2147  009AC8  79                 	db	121
  2148  009AC9  78                 	db	120
  2149  009ACA  77                 	db	119
  2150  009ACB  76                 	db	118
  2151  009ACC  75                 	db	117
  2152  009ACD  74                 	db	116
  2153  009ACE  73                 	db	115
  2154  009ACF  72                 	db	114
  2155  009AD0  71                 	db	113
  2156  009AD1  70                 	db	112
  2157  009AD2  6F                 	db	111
  2158  009AD3  6E                 	db	110
  2159  009AD4  6D                 	db	109
  2160  009AD5  6C                 	db	108
  2161  009AD6  6B                 	db	107
  2162  009AD7  6A                 	db	106
  2163  009AD8  69                 	db	105
  2164  009AD9  68                 	db	104
  2165  009ADA  67                 	db	103
  2166  009ADB  66                 	db	102
  2167  009ADC  65                 	db	101
  2168  009ADD  64                 	db	100
  2169  009ADE  63                 	db	99
  2170  009ADF  62                 	db	98
  2171  009AE0  61                 	db	97
  2172  009AE1  60                 	db	96
  2173  009AE2  5F                 	db	95
  2174  009AE3  5E                 	db	94
  2175  009AE4  5D                 	db	93
  2176  009AE5  5C                 	db	92
  2177  009AE6  5B                 	db	91
  2178  009AE7  5A                 	db	90
  2179  009AE8  59                 	db	89
  2180  009AE9  58                 	db	88
  2181  009AEA  57                 	db	87
  2182  009AEB  56                 	db	86
  2183  009AEC  55                 	db	85
  2184  009AED  54                 	db	84
  2185  009AEE  53                 	db	83
  2186  009AEF  52                 	db	82
  2187  009AF0  51                 	db	81
  2188  009AF1  50                 	db	80
  2189  009AF2  4F                 	db	79
  2190  009AF3  4E                 	db	78
  2191  009AF4  4D                 	db	77
  2192  009AF5  4C                 	db	76
  2193  009AF6  4B                 	db	75
  2194  009AF7  4A                 	db	74
  2195  009AF8  49                 	db	73
  2196  009AF9  48                 	db	72
  2197  009AFA  47                 	db	71
  2198  009AFB  46                 	db	70
  2199  009AFC  45                 	db	69
  2200  009AFD  44                 	db	68
  2201  009AFE  43                 	db	67
  2202  009AFF  42                 	db	66
  2203  009B00  41                 	db	65
  2204  009B01  40                 	db	64
  2205  009B02  3F                 	db	63
  2206  009B03  FF                 	db	255
  2207  009B04  FE                 	db	254
  2208  009B05  FD                 	db	253
  2209  009B06  FC                 	db	252
  2210  009B07  FB                 	db	251
  2211  009B08  FA                 	db	250
  2212  009B09  F9                 	db	249
  2213  009B0A  F8                 	db	248
  2214  009B0B  F7                 	db	247
  2215  009B0C  F6                 	db	246
  2216  009B0D  F5                 	db	245
  2217  009B0E  F4                 	db	244
  2218  009B0F  F3                 	db	243
  2219  009B10  F2                 	db	242
  2220  009B11  F1                 	db	241
  2221  009B12  F0                 	db	240
  2222  009B13  EF                 	db	239
  2223  009B14  EE                 	db	238
  2224  009B15  ED                 	db	237
  2225  009B16  EC                 	db	236
  2226  009B17  EB                 	db	235
  2227  009B18  EA                 	db	234
  2228  009B19  E9                 	db	233
  2229  009B1A  E8                 	db	232
  2230  009B1B  E7                 	db	231
  2231  009B1C  E6                 	db	230
  2232  009B1D  E5                 	db	229
  2233  009B1E  E4                 	db	228
  2234  009B1F  E3                 	db	227
  2235  009B20  E2                 	db	226
  2236  009B21  E1                 	db	225
  2237  009B22  E0                 	db	224
  2238  009B23  DF                 	db	223
  2239  009B24  DE                 	db	222
  2240  009B25  DD                 	db	221
  2241  009B26  DC                 	db	220
  2242  009B27  DB                 	db	219
  2243  009B28  DA                 	db	218
  2244  009B29  D9                 	db	217
  2245  009B2A  D8                 	db	216
  2246  009B2B  D7                 	db	215
  2247  009B2C  D6                 	db	214
  2248  009B2D  D5                 	db	213
  2249  009B2E  D4                 	db	212
  2250  009B2F  D3                 	db	211
  2251  009B30  D2                 	db	210
  2252  009B31  D1                 	db	209
  2253  009B32  D0                 	db	208
  2254  009B33  CF                 	db	207
  2255  009B34  CE                 	db	206
  2256  009B35  CD                 	db	205
  2257  009B36  CC                 	db	204
  2258  009B37  CB                 	db	203
  2259  009B38  CA                 	db	202
  2260  009B39  C9                 	db	201
  2261  009B3A  C8                 	db	200
  2262  009B3B  C7                 	db	199
  2263  009B3C  C6                 	db	198
  2264  009B3D  C5                 	db	197
  2265  009B3E  C4                 	db	196
  2266  009B3F  C3                 	db	195
  2267  009B40  C2                 	db	194
  2268  009B41  C1                 	db	193
  2269  009B42  C0                 	db	192
  2270  009B43  BF                 	db	191
  2271  009B44  BE                 	db	190
  2272  009B45  BD                 	db	189
  2273  009B46  BC                 	db	188
  2274  009B47  BB                 	db	187
  2275  009B48  BA                 	db	186
  2276  009B49  B9                 	db	185
  2277  009B4A  B8                 	db	184
  2278  009B4B  B7                 	db	183
  2279  009B4C  B6                 	db	182
  2280  009B4D  B5                 	db	181
  2281  009B4E  B4                 	db	180
  2282  009B4F  B3                 	db	179
  2283  009B50  B2                 	db	178
  2284  009B51  B1                 	db	177
  2285  009B52  B0                 	db	176
  2286  009B53  AF                 	db	175
  2287  009B54  AE                 	db	174
  2288  009B55  AD                 	db	173
  2289  009B56  AC                 	db	172
  2290  009B57  AB                 	db	171
  2291  009B58  AA                 	db	170
  2292  009B59  A9                 	db	169
  2293  009B5A  A8                 	db	168
  2294  009B5B  A7                 	db	167
  2295  009B5C  A6                 	db	166
  2296  009B5D  A5                 	db	165
  2297  009B5E  A4                 	db	164
  2298  009B5F  A3                 	db	163
  2299  009B60  A2                 	db	162
  2300  009B61  A1                 	db	161
  2301  009B62  A0                 	db	160
  2302  009B63  9F                 	db	159
  2303  009B64  9E                 	db	158
  2304  009B65  9D                 	db	157
  2305  009B66  9C                 	db	156
  2306  009B67  9B                 	db	155
  2307  009B68  9A                 	db	154
  2308  009B69  99                 	db	153
  2309  009B6A  98                 	db	152
  2310  009B6B  97                 	db	151
  2311  009B6C  96                 	db	150
  2312  009B6D  95                 	db	149
  2313  009B6E  94                 	db	148
  2314  009B6F  93                 	db	147
  2315  009B70  92                 	db	146
  2316  009B71  91                 	db	145
  2317  009B72  90                 	db	144
  2318  009B73  8F                 	db	143
  2319  009B74  8E                 	db	142
  2320  009B75  8D                 	db	141
  2321  009B76  8C                 	db	140
  2322  009B77  8B                 	db	139
  2323  009B78  8A                 	db	138
  2324  009B79  89                 	db	137
  2325  009B7A  88                 	db	136
  2326  009B7B  87                 	db	135
  2327  009B7C  86                 	db	134
  2328  009B7D  85                 	db	133
  2329  009B7E  84                 	db	132
  2330  009B7F  83                 	db	131
  2331  009B80  82                 	db	130
  2332  009B81  81                 	db	129
  2333  009B82  80                 	db	128
  2334  009B83  7F                 	db	127
  2335  009B84  7E                 	db	126
  2336  009B85  7D                 	db	125
  2337  009B86  7C                 	db	124
  2338  009B87  7B                 	db	123
  2339  009B88  7A                 	db	122
  2340  009B89  79                 	db	121
  2341  009B8A  78                 	db	120
  2342  009B8B  77                 	db	119
  2343  009B8C  76                 	db	118
  2344  009B8D  75                 	db	117
  2345  009B8E  74                 	db	116
  2346  009B8F  73                 	db	115
  2347  009B90  72                 	db	114
  2348  009B91  71                 	db	113
  2349  009B92  70                 	db	112
  2350  009B93  6F                 	db	111
  2351  009B94  6E                 	db	110
  2352  009B95  6D                 	db	109
  2353  009B96  6C                 	db	108
  2354  009B97  6B                 	db	107
  2355  009B98  6A                 	db	106
  2356  009B99  69                 	db	105
  2357  009B9A  68                 	db	104
  2358  009B9B  67                 	db	103
  2359  009B9C  66                 	db	102
  2360  009B9D  65                 	db	101
  2361  009B9E  64                 	db	100
  2362  009B9F  63                 	db	99
  2363  009BA0  62                 	db	98
  2364  009BA1  61                 	db	97
  2365  009BA2  60                 	db	96
  2366  009BA3  5F                 	db	95
  2367  009BA4  5E                 	db	94
  2368  009BA5  5D                 	db	93
  2369  009BA6  5C                 	db	92
  2370  009BA7  5B                 	db	91
  2371  009BA8  5A                 	db	90
  2372  009BA9  59                 	db	89
  2373  009BAA  58                 	db	88
  2374  009BAB  57                 	db	87
  2375  009BAC  56                 	db	86
  2376  009BAD  55                 	db	85
  2377  009BAE  54                 	db	84
  2378  009BAF  53                 	db	83
  2379  009BB0  52                 	db	82
  2380  009BB1  51                 	db	81
  2381  009BB2  50                 	db	80
  2382  009BB3  4F                 	db	79
  2383  009BB4  4E                 	db	78
  2384  009BB5  4D                 	db	77
  2385  009BB6  4C                 	db	76
  2386  009BB7  4B                 	db	75
  2387  009BB8  4A                 	db	74
  2388  009BB9  49                 	db	73
  2389  009BBA  48                 	db	72
  2390  009BBB  47                 	db	71
  2391  009BBC  46                 	db	70
  2392  009BBD  45                 	db	69
  2393  009BBE  44                 	db	68
  2394  009BBF  43                 	db	67
  2395  009BC0  42                 	db	66
  2396  009BC1  41                 	db	65
  2397  009BC2  40                 	db	64
  2398  009BC3  3F                 	db	63
  2399  009BC4  FF                 	db	255
  2400  009BC5  FE                 	db	254
  2401  009BC6  FD                 	db	253
  2402  009BC7  FC                 	db	252
  2403  009BC8  FB                 	db	251
  2404  009BC9  FA                 	db	250
  2405  009BCA  F9                 	db	249
  2406  009BCB  F8                 	db	248
  2407  009BCC  F7                 	db	247
  2408  009BCD  F6                 	db	246
  2409  009BCE  F5                 	db	245
  2410  009BCF  F4                 	db	244
  2411  009BD0  F3                 	db	243
  2412  009BD1  F2                 	db	242
  2413  009BD2  F1                 	db	241
  2414  009BD3  F0                 	db	240
  2415  009BD4  EF                 	db	239
  2416  009BD5  EE                 	db	238
  2417  009BD6  ED                 	db	237
  2418  009BD7  EC                 	db	236
  2419  009BD8  EB                 	db	235
  2420  009BD9  EA                 	db	234
  2421  009BDA  E9                 	db	233
  2422  009BDB  E8                 	db	232
  2423  009BDC  E7                 	db	231
  2424  009BDD  E6                 	db	230
  2425  009BDE  E5                 	db	229
  2426  009BDF  E4                 	db	228
  2427  009BE0  E3                 	db	227
  2428  009BE1  E2                 	db	226
  2429  009BE2  E1                 	db	225
  2430  009BE3  E0                 	db	224
  2431  009BE4  DF                 	db	223
  2432  009BE5  DE                 	db	222
  2433  009BE6  DD                 	db	221
  2434  009BE7  DC                 	db	220
  2435  009BE8  DB                 	db	219
  2436  009BE9  DA                 	db	218
  2437  009BEA  D9                 	db	217
  2438  009BEB  D8                 	db	216
  2439  009BEC  D7                 	db	215
  2440  009BED  D6                 	db	214
  2441  009BEE  D5                 	db	213
  2442  009BEF  D4                 	db	212
  2443  009BF0  D3                 	db	211
  2444  009BF1  D2                 	db	210
  2445  009BF2  D1                 	db	209
  2446  009BF3  D0                 	db	208
  2447  009BF4  CF                 	db	207
  2448  009BF5  CE                 	db	206
  2449  009BF6  CD                 	db	205
  2450  009BF7  CC                 	db	204
  2451  009BF8  CB                 	db	203
  2452  009BF9  CA                 	db	202
  2453  009BFA  C9                 	db	201
  2454  009BFB  C8                 	db	200
  2455  009BFC  C7                 	db	199
  2456  009BFD                     __end_of_motor_period_lookup:
  2457                           	opt stack 0
  2458  009BFD                     _motor_prescaler_lookup:
  2459                           	opt stack 0
  2460  009BFD  02                 	db	2
  2461  009BFE  02                 	db	2
  2462  009BFF  02                 	db	2
  2463  009C00  02                 	db	2
  2464  009C01  02                 	db	2
  2465  009C02  02                 	db	2
  2466  009C03  02                 	db	2
  2467  009C04  02                 	db	2
  2468  009C05  02                 	db	2
  2469  009C06  02                 	db	2
  2470  009C07  02                 	db	2
  2471  009C08  02                 	db	2
  2472  009C09  02                 	db	2
  2473  009C0A  02                 	db	2
  2474  009C0B  02                 	db	2
  2475  009C0C  02                 	db	2
  2476  009C0D  02                 	db	2
  2477  009C0E  02                 	db	2
  2478  009C0F  02                 	db	2
  2479  009C10  02                 	db	2
  2480  009C11  02                 	db	2
  2481  009C12  02                 	db	2
  2482  009C13  02                 	db	2
  2483  009C14  02                 	db	2
  2484  009C15  02                 	db	2
  2485  009C16  02                 	db	2
  2486  009C17  02                 	db	2
  2487  009C18  02                 	db	2
  2488  009C19  02                 	db	2
  2489  009C1A  02                 	db	2
  2490  009C1B  02                 	db	2
  2491  009C1C  02                 	db	2
  2492  009C1D  02                 	db	2
  2493  009C1E  02                 	db	2
  2494  009C1F  02                 	db	2
  2495  009C20  02                 	db	2
  2496  009C21  02                 	db	2
  2497  009C22  02                 	db	2
  2498  009C23  02                 	db	2
  2499  009C24  02                 	db	2
  2500  009C25  02                 	db	2
  2501  009C26  02                 	db	2
  2502  009C27  02                 	db	2
  2503  009C28  02                 	db	2
  2504  009C29  02                 	db	2
  2505  009C2A  02                 	db	2
  2506  009C2B  02                 	db	2
  2507  009C2C  02                 	db	2
  2508  009C2D  02                 	db	2
  2509  009C2E  02                 	db	2
  2510  009C2F  02                 	db	2
  2511  009C30  02                 	db	2
  2512  009C31  02                 	db	2
  2513  009C32  02                 	db	2
  2514  009C33  02                 	db	2
  2515  009C34  02                 	db	2
  2516  009C35  02                 	db	2
  2517  009C36  02                 	db	2
  2518  009C37  02                 	db	2
  2519  009C38  02                 	db	2
  2520  009C39  02                 	db	2
  2521  009C3A  02                 	db	2
  2522  009C3B  02                 	db	2
  2523  009C3C  02                 	db	2
  2524  009C3D  02                 	db	2
  2525  009C3E  02                 	db	2
  2526  009C3F  02                 	db	2
  2527  009C40  02                 	db	2
  2528  009C41  02                 	db	2
  2529  009C42  02                 	db	2
  2530  009C43  02                 	db	2
  2531  009C44  02                 	db	2
  2532  009C45  02                 	db	2
  2533  009C46  02                 	db	2
  2534  009C47  02                 	db	2
  2535  009C48  02                 	db	2
  2536  009C49  02                 	db	2
  2537  009C4A  02                 	db	2
  2538  009C4B  02                 	db	2
  2539  009C4C  02                 	db	2
  2540  009C4D  02                 	db	2
  2541  009C4E  02                 	db	2
  2542  009C4F  02                 	db	2
  2543  009C50  02                 	db	2
  2544  009C51  02                 	db	2
  2545  009C52  02                 	db	2
  2546  009C53  02                 	db	2
  2547  009C54  02                 	db	2
  2548  009C55  02                 	db	2
  2549  009C56  02                 	db	2
  2550  009C57  02                 	db	2
  2551  009C58  02                 	db	2
  2552  009C59  02                 	db	2
  2553  009C5A  02                 	db	2
  2554  009C5B  02                 	db	2
  2555  009C5C  02                 	db	2
  2556  009C5D  02                 	db	2
  2557  009C5E  02                 	db	2
  2558  009C5F  02                 	db	2
  2559  009C60  02                 	db	2
  2560  009C61  02                 	db	2
  2561  009C62  02                 	db	2
  2562  009C63  02                 	db	2
  2563  009C64  02                 	db	2
  2564  009C65  02                 	db	2
  2565  009C66  02                 	db	2
  2566  009C67  02                 	db	2
  2567  009C68  02                 	db	2
  2568  009C69  02                 	db	2
  2569  009C6A  02                 	db	2
  2570  009C6B  02                 	db	2
  2571  009C6C  02                 	db	2
  2572  009C6D  02                 	db	2
  2573  009C6E  02                 	db	2
  2574  009C6F  02                 	db	2
  2575  009C70  02                 	db	2
  2576  009C71  02                 	db	2
  2577  009C72  02                 	db	2
  2578  009C73  02                 	db	2
  2579  009C74  02                 	db	2
  2580  009C75  02                 	db	2
  2581  009C76  02                 	db	2
  2582  009C77  02                 	db	2
  2583  009C78  02                 	db	2
  2584  009C79  02                 	db	2
  2585  009C7A  02                 	db	2
  2586  009C7B  02                 	db	2
  2587  009C7C  02                 	db	2
  2588  009C7D  02                 	db	2
  2589  009C7E  02                 	db	2
  2590  009C7F  02                 	db	2
  2591  009C80  02                 	db	2
  2592  009C81  02                 	db	2
  2593  009C82  02                 	db	2
  2594  009C83  02                 	db	2
  2595  009C84  02                 	db	2
  2596  009C85  02                 	db	2
  2597  009C86  02                 	db	2
  2598  009C87  02                 	db	2
  2599  009C88  02                 	db	2
  2600  009C89  02                 	db	2
  2601  009C8A  02                 	db	2
  2602  009C8B  02                 	db	2
  2603  009C8C  02                 	db	2
  2604  009C8D  02                 	db	2
  2605  009C8E  02                 	db	2
  2606  009C8F  02                 	db	2
  2607  009C90  02                 	db	2
  2608  009C91  02                 	db	2
  2609  009C92  02                 	db	2
  2610  009C93  02                 	db	2
  2611  009C94  02                 	db	2
  2612  009C95  02                 	db	2
  2613  009C96  02                 	db	2
  2614  009C97  02                 	db	2
  2615  009C98  02                 	db	2
  2616  009C99  02                 	db	2
  2617  009C9A  02                 	db	2
  2618  009C9B  02                 	db	2
  2619  009C9C  02                 	db	2
  2620  009C9D  02                 	db	2
  2621  009C9E  02                 	db	2
  2622  009C9F  02                 	db	2
  2623  009CA0  02                 	db	2
  2624  009CA1  02                 	db	2
  2625  009CA2  02                 	db	2
  2626  009CA3  02                 	db	2
  2627  009CA4  02                 	db	2
  2628  009CA5  02                 	db	2
  2629  009CA6  02                 	db	2
  2630  009CA7  02                 	db	2
  2631  009CA8  02                 	db	2
  2632  009CA9  02                 	db	2
  2633  009CAA  02                 	db	2
  2634  009CAB  02                 	db	2
  2635  009CAC  02                 	db	2
  2636  009CAD  02                 	db	2
  2637  009CAE  02                 	db	2
  2638  009CAF  02                 	db	2
  2639  009CB0  02                 	db	2
  2640  009CB1  02                 	db	2
  2641  009CB2  02                 	db	2
  2642  009CB3  02                 	db	2
  2643  009CB4  02                 	db	2
  2644  009CB5  02                 	db	2
  2645  009CB6  02                 	db	2
  2646  009CB7  02                 	db	2
  2647  009CB8  02                 	db	2
  2648  009CB9  02                 	db	2
  2649  009CBA  02                 	db	2
  2650  009CBB  02                 	db	2
  2651  009CBC  02                 	db	2
  2652  009CBD  02                 	db	2
  2653  009CBE  02                 	db	2
  2654  009CBF  02                 	db	2
  2655  009CC0  02                 	db	2
  2656  009CC1  02                 	db	2
  2657  009CC2  02                 	db	2
  2658  009CC3  02                 	db	2
  2659  009CC4  02                 	db	2
  2660  009CC5  02                 	db	2
  2661  009CC6  02                 	db	2
  2662  009CC7  02                 	db	2
  2663  009CC8  02                 	db	2
  2664  009CC9  02                 	db	2
  2665  009CCA  02                 	db	2
  2666  009CCB  02                 	db	2
  2667  009CCC  02                 	db	2
  2668  009CCD  02                 	db	2
  2669  009CCE  02                 	db	2
  2670  009CCF  02                 	db	2
  2671  009CD0  02                 	db	2
  2672  009CD1  02                 	db	2
  2673  009CD2  02                 	db	2
  2674  009CD3  02                 	db	2
  2675  009CD4  02                 	db	2
  2676  009CD5  02                 	db	2
  2677  009CD6  02                 	db	2
  2678  009CD7  02                 	db	2
  2679  009CD8  02                 	db	2
  2680  009CD9  02                 	db	2
  2681  009CDA  02                 	db	2
  2682  009CDB  02                 	db	2
  2683  009CDC  02                 	db	2
  2684  009CDD  02                 	db	2
  2685  009CDE  02                 	db	2
  2686  009CDF  02                 	db	2
  2687  009CE0  02                 	db	2
  2688  009CE1  02                 	db	2
  2689  009CE2  02                 	db	2
  2690  009CE3  02                 	db	2
  2691  009CE4  02                 	db	2
  2692  009CE5  02                 	db	2
  2693  009CE6  02                 	db	2
  2694  009CE7  02                 	db	2
  2695  009CE8  02                 	db	2
  2696  009CE9  02                 	db	2
  2697  009CEA  01                 	db	1
  2698  009CEB  01                 	db	1
  2699  009CEC  01                 	db	1
  2700  009CED  01                 	db	1
  2701  009CEE  01                 	db	1
  2702  009CEF  01                 	db	1
  2703  009CF0  01                 	db	1
  2704  009CF1  01                 	db	1
  2705  009CF2  01                 	db	1
  2706  009CF3  01                 	db	1
  2707  009CF4  01                 	db	1
  2708  009CF5  01                 	db	1
  2709  009CF6  01                 	db	1
  2710  009CF7  01                 	db	1
  2711  009CF8  01                 	db	1
  2712  009CF9  01                 	db	1
  2713  009CFA  01                 	db	1
  2714  009CFB  01                 	db	1
  2715  009CFC  01                 	db	1
  2716  009CFD  01                 	db	1
  2717  009CFE  01                 	db	1
  2718  009CFF  01                 	db	1
  2719  009D00  01                 	db	1
  2720  009D01  01                 	db	1
  2721  009D02  01                 	db	1
  2722  009D03  01                 	db	1
  2723  009D04  01                 	db	1
  2724  009D05  01                 	db	1
  2725  009D06  01                 	db	1
  2726  009D07  01                 	db	1
  2727  009D08  01                 	db	1
  2728  009D09  01                 	db	1
  2729  009D0A  01                 	db	1
  2730  009D0B  01                 	db	1
  2731  009D0C  01                 	db	1
  2732  009D0D  01                 	db	1
  2733  009D0E  01                 	db	1
  2734  009D0F  01                 	db	1
  2735  009D10  01                 	db	1
  2736  009D11  01                 	db	1
  2737  009D12  01                 	db	1
  2738  009D13  01                 	db	1
  2739  009D14  01                 	db	1
  2740  009D15  01                 	db	1
  2741  009D16  01                 	db	1
  2742  009D17  01                 	db	1
  2743  009D18  01                 	db	1
  2744  009D19  01                 	db	1
  2745  009D1A  01                 	db	1
  2746  009D1B  01                 	db	1
  2747  009D1C  01                 	db	1
  2748  009D1D  01                 	db	1
  2749  009D1E  01                 	db	1
  2750  009D1F  01                 	db	1
  2751  009D20  01                 	db	1
  2752  009D21  01                 	db	1
  2753  009D22  01                 	db	1
  2754  009D23  01                 	db	1
  2755  009D24  01                 	db	1
  2756  009D25  01                 	db	1
  2757  009D26  01                 	db	1
  2758  009D27  01                 	db	1
  2759  009D28  01                 	db	1
  2760  009D29  01                 	db	1
  2761  009D2A  01                 	db	1
  2762  009D2B  01                 	db	1
  2763  009D2C  01                 	db	1
  2764  009D2D  01                 	db	1
  2765  009D2E  01                 	db	1
  2766  009D2F  01                 	db	1
  2767  009D30  01                 	db	1
  2768  009D31  01                 	db	1
  2769  009D32  01                 	db	1
  2770  009D33  01                 	db	1
  2771  009D34  01                 	db	1
  2772  009D35  01                 	db	1
  2773  009D36  01                 	db	1
  2774  009D37  01                 	db	1
  2775  009D38  01                 	db	1
  2776  009D39  01                 	db	1
  2777  009D3A  01                 	db	1
  2778  009D3B  01                 	db	1
  2779  009D3C  01                 	db	1
  2780  009D3D  01                 	db	1
  2781  009D3E  01                 	db	1
  2782  009D3F  01                 	db	1
  2783  009D40  01                 	db	1
  2784  009D41  01                 	db	1
  2785  009D42  01                 	db	1
  2786  009D43  01                 	db	1
  2787  009D44  01                 	db	1
  2788  009D45  01                 	db	1
  2789  009D46  01                 	db	1
  2790  009D47  01                 	db	1
  2791  009D48  01                 	db	1
  2792  009D49  01                 	db	1
  2793  009D4A  01                 	db	1
  2794  009D4B  01                 	db	1
  2795  009D4C  01                 	db	1
  2796  009D4D  01                 	db	1
  2797  009D4E  01                 	db	1
  2798  009D4F  01                 	db	1
  2799  009D50  01                 	db	1
  2800  009D51  01                 	db	1
  2801  009D52  01                 	db	1
  2802  009D53  01                 	db	1
  2803  009D54  01                 	db	1
  2804  009D55  01                 	db	1
  2805  009D56  01                 	db	1
  2806  009D57  01                 	db	1
  2807  009D58  01                 	db	1
  2808  009D59  01                 	db	1
  2809  009D5A  01                 	db	1
  2810  009D5B  01                 	db	1
  2811  009D5C  01                 	db	1
  2812  009D5D  01                 	db	1
  2813  009D5E  01                 	db	1
  2814  009D5F  01                 	db	1
  2815  009D60  01                 	db	1
  2816  009D61  01                 	db	1
  2817  009D62  01                 	db	1
  2818  009D63  01                 	db	1
  2819  009D64  01                 	db	1
  2820  009D65  01                 	db	1
  2821  009D66  01                 	db	1
  2822  009D67  01                 	db	1
  2823  009D68  01                 	db	1
  2824  009D69  01                 	db	1
  2825  009D6A  01                 	db	1
  2826  009D6B  01                 	db	1
  2827  009D6C  01                 	db	1
  2828  009D6D  01                 	db	1
  2829  009D6E  01                 	db	1
  2830  009D6F  01                 	db	1
  2831  009D70  01                 	db	1
  2832  009D71  01                 	db	1
  2833  009D72  01                 	db	1
  2834  009D73  01                 	db	1
  2835  009D74  01                 	db	1
  2836  009D75  01                 	db	1
  2837  009D76  01                 	db	1
  2838  009D77  01                 	db	1
  2839  009D78  01                 	db	1
  2840  009D79  01                 	db	1
  2841  009D7A  01                 	db	1
  2842  009D7B  01                 	db	1
  2843  009D7C  01                 	db	1
  2844  009D7D  01                 	db	1
  2845  009D7E  01                 	db	1
  2846  009D7F  01                 	db	1
  2847  009D80  01                 	db	1
  2848  009D81  01                 	db	1
  2849  009D82  01                 	db	1
  2850  009D83  01                 	db	1
  2851  009D84  01                 	db	1
  2852  009D85  01                 	db	1
  2853  009D86  01                 	db	1
  2854  009D87  01                 	db	1
  2855  009D88  01                 	db	1
  2856  009D89  01                 	db	1
  2857  009D8A  01                 	db	1
  2858  009D8B  01                 	db	1
  2859  009D8C  01                 	db	1
  2860  009D8D  01                 	db	1
  2861  009D8E  01                 	db	1
  2862  009D8F  01                 	db	1
  2863  009D90  01                 	db	1
  2864  009D91  01                 	db	1
  2865  009D92  01                 	db	1
  2866  009D93  01                 	db	1
  2867  009D94  01                 	db	1
  2868  009D95  01                 	db	1
  2869  009D96  01                 	db	1
  2870  009D97  01                 	db	1
  2871  009D98  01                 	db	1
  2872  009D99  01                 	db	1
  2873  009D9A  01                 	db	1
  2874  009D9B  01                 	db	1
  2875  009D9C  01                 	db	1
  2876  009D9D  01                 	db	1
  2877  009D9E  01                 	db	1
  2878  009D9F  01                 	db	1
  2879  009DA0  01                 	db	1
  2880  009DA1  01                 	db	1
  2881  009DA2  01                 	db	1
  2882  009DA3  01                 	db	1
  2883  009DA4  01                 	db	1
  2884  009DA5  01                 	db	1
  2885  009DA6  01                 	db	1
  2886  009DA7  01                 	db	1
  2887  009DA8  01                 	db	1
  2888  009DA9  01                 	db	1
  2889  009DAA  01                 	db	1
  2890  009DAB  00                 	db	0
  2891  009DAC  00                 	db	0
  2892  009DAD  00                 	db	0
  2893  009DAE  00                 	db	0
  2894  009DAF  00                 	db	0
  2895  009DB0  00                 	db	0
  2896  009DB1  00                 	db	0
  2897  009DB2  00                 	db	0
  2898  009DB3  00                 	db	0
  2899  009DB4  00                 	db	0
  2900  009DB5  00                 	db	0
  2901  009DB6  00                 	db	0
  2902  009DB7  00                 	db	0
  2903  009DB8  00                 	db	0
  2904  009DB9  00                 	db	0
  2905  009DBA  00                 	db	0
  2906  009DBB  00                 	db	0
  2907  009DBC  00                 	db	0
  2908  009DBD  00                 	db	0
  2909  009DBE  00                 	db	0
  2910  009DBF  00                 	db	0
  2911  009DC0  00                 	db	0
  2912  009DC1  00                 	db	0
  2913  009DC2  00                 	db	0
  2914  009DC3  00                 	db	0
  2915  009DC4  00                 	db	0
  2916  009DC5  00                 	db	0
  2917  009DC6  00                 	db	0
  2918  009DC7  00                 	db	0
  2919  009DC8  00                 	db	0
  2920  009DC9  00                 	db	0
  2921  009DCA  00                 	db	0
  2922  009DCB  00                 	db	0
  2923  009DCC  00                 	db	0
  2924  009DCD  00                 	db	0
  2925  009DCE  00                 	db	0
  2926  009DCF  00                 	db	0
  2927  009DD0  00                 	db	0
  2928  009DD1  00                 	db	0
  2929  009DD2  00                 	db	0
  2930  009DD3  00                 	db	0
  2931  009DD4  00                 	db	0
  2932  009DD5  00                 	db	0
  2933  009DD6  00                 	db	0
  2934  009DD7  00                 	db	0
  2935  009DD8  00                 	db	0
  2936  009DD9  00                 	db	0
  2937  009DDA  00                 	db	0
  2938  009DDB  00                 	db	0
  2939  009DDC  00                 	db	0
  2940  009DDD  00                 	db	0
  2941  009DDE  00                 	db	0
  2942  009DDF  00                 	db	0
  2943  009DE0  00                 	db	0
  2944  009DE1  00                 	db	0
  2945  009DE2  00                 	db	0
  2946  009DE3  00                 	db	0
  2947  009DE4                     __end_of_motor_prescaler_lookup:
  2948                           	opt stack 0
  2949  009DE4                     _USB_SD_Ptr:
  2950                           	opt stack 0
  2951  009DE4  E5                 	db	low _sd000
  2952  009DE5  A2                 	db	high _sd000
  2953  009DE6  FE                 	db	low _sd001
  2954  009DE7  A0                 	db	high _sd001
  2955  009DE8  32                 	db	low _sd002
  2956  009DE9  A1                 	db	high _sd002
  2957  009DEA  A1                 	db	low _sd003
  2958  009DEB  A1                 	db	high _sd003
  2959  009DEC                     __end_of_USB_SD_Ptr:
  2960                           	opt stack 0
  2961  009DEC                     _USB_CD_Ptr:
  2962                           	opt stack 0
  2963  009DEC  BE                 	db	low _configDescriptor1
  2964  009DED  A0                 	db	high _configDescriptor1
  2965  009DEE                     __end_of_USB_CD_Ptr:
  2966                           	opt stack 0
  2967  009DEE                     _dc_manual:
  2968                           	opt stack 0
  2969  009DEE  4D                 	db	77
  2970  009DEF  61                 	db	97
  2971  009DF0  6E                 	db	110
  2972  009DF1  75                 	db	117
  2973  009DF2  61                 	db	97
  2974  009DF3  6C                 	db	108
  2975  009DF4  20                 	db	32
  2976  009DF5  4D                 	db	77
  2977  009DF6  6F                 	db	111
  2978  009DF7  64                 	db	100
  2979  009DF8  65                 	db	101
  2980  009DF9  20                 	db	32
  2981  009DFA  20                 	db	32
  2982  009DFB  20                 	db	32
  2983  009DFC  20                 	db	32
  2984  009DFD  20                 	db	32
  2985  009DFE  20                 	db	32
  2986  009DFF  20                 	db	32
  2987  009E00  20                 	db	32
  2988  009E01  20                 	db	32
  2989  009E02  43                 	db	67
  2990  009E03  75                 	db	117
  2991  009E04  72                 	db	114
  2992  009E05  72                 	db	114
  2993  009E06  65                 	db	101
  2994  009E07  6E                 	db	110
  2995  009E08  74                 	db	116
  2996  009E09  20                 	db	32
  2997  009E0A  70                 	db	112
  2998  009E0B  6F                 	db	111
  2999  009E0C  73                 	db	115
  3000  009E0D  3A                 	db	58
  3001  009E0E  20                 	db	32
  3002  009E0F  20                 	db	32
  3003  009E10  20                 	db	32
  3004  009E11  20                 	db	32
  3005  009E12  20                 	db	32
  3006  009E13  20                 	db	32
  3007  009E14  20                 	db	32
  3008  009E15  01                 	db	1
  3009  009E16  54                 	db	84
  3010  009E17  75                 	db	117
  3011  009E18  72                 	db	114
  3012  009E19  6E                 	db	110
  3013  009E1A  20                 	db	32
  3014  009E1B  43                 	db	67
  3015  009E1C  43                 	db	67
  3016  009E1D  57                 	db	87
  3017  009E1E  20                 	db	32
  3018  009E1F  00                 	db	0
  3019  009E20  20                 	db	32
  3020  009E21  53                 	db	83
  3021  009E22  70                 	db	112
  3022  009E23  65                 	db	101
  3023  009E24  65                 	db	101
  3024  009E25  64                 	db	100
  3025  009E26  20                 	db	32
  3026  009E27  20                 	db	32
  3027  009E28  20                 	db	32
  3028  009E29  20                 	db	32
  3029  009E2A  53                 	db	83
  3030  009E2B  74                 	db	116
  3031  009E2C  61                 	db	97
  3032  009E2D  72                 	db	114
  3033  009E2E  74                 	db	116
  3034  009E2F  20                 	db	32
  3035  009E30  20                 	db	32
  3036  009E31  20                 	db	32
  3037  009E32  20                 	db	32
  3038  009E33  00                 	db	0
  3039  009E34  20                 	db	32
  3040  009E35  20                 	db	32
  3041  009E36  20                 	db	32
  3042  009E37  20                 	db	32
  3043  009E38  20                 	db	32
  3044  009E39  20                 	db	32
  3045  009E3A  20                 	db	32
  3046  009E3B  20                 	db	32
  3047  009E3C  20                 	db	32
  3048  009E3D  20                 	db	32
  3049  009E3E                     __end_of_dc_manual:
  3050                           	opt stack 0
  3051  009E3E                     _dc_zero:
  3052                           	opt stack 0
  3053  009E3E  52                 	db	82
  3054  009E3F  65                 	db	101
  3055  009E40  74                 	db	116
  3056  009E41  75                 	db	117
  3057  009E42  72                 	db	114
  3058  009E43  6E                 	db	110
  3059  009E44  20                 	db	32
  3060  009E45  74                 	db	116
  3061  009E46  6F                 	db	111
  3062  009E47  20                 	db	32
  3063  009E48  5A                 	db	90
  3064  009E49  65                 	db	101
  3065  009E4A  72                 	db	114
  3066  009E4B  6F                 	db	111
  3067  009E4C  3F                 	db	63
  3068  009E4D  20                 	db	32
  3069  009E4E  20                 	db	32
  3070  009E4F  20                 	db	32
  3071  009E50  20                 	db	32
  3072  009E51  20                 	db	32
  3073  009E52  43                 	db	67
  3074  009E53  75                 	db	117
  3075  009E54  72                 	db	114
  3076  009E55  72                 	db	114
  3077  009E56  65                 	db	101
  3078  009E57  6E                 	db	110
  3079  009E58  74                 	db	116
  3080  009E59  20                 	db	32
  3081  009E5A  70                 	db	112
  3082  009E5B  6F                 	db	111
  3083  009E5C  73                 	db	115
  3084  009E5D  3A                 	db	58
  3085  009E5E  20                 	db	32
  3086  009E5F  20                 	db	32
  3087  009E60  20                 	db	32
  3088  009E61  20                 	db	32
  3089  009E62  20                 	db	32
  3090  009E63  20                 	db	32
  3091  009E64  20                 	db	32
  3092  009E65  20                 	db	32
  3093  009E66  20                 	db	32
  3094  009E67  20                 	db	32
  3095  009E68  20                 	db	32
  3096  009E69  20                 	db	32
  3097  009E6A  20                 	db	32
  3098  009E6B  20                 	db	32
  3099  009E6C  20                 	db	32
  3100  009E6D  20                 	db	32
  3101  009E6E  20                 	db	32
  3102  009E6F  20                 	db	32
  3103  009E70  20                 	db	32
  3104  009E71  20                 	db	32
  3105  009E72  20                 	db	32
  3106  009E73  20                 	db	32
  3107  009E74  20                 	db	32
  3108  009E75  20                 	db	32
  3109  009E76  20                 	db	32
  3110  009E77  20                 	db	32
  3111  009E78  20                 	db	32
  3112  009E79  20                 	db	32
  3113  009E7A  20                 	db	32
  3114  009E7B  59                 	db	89
  3115  009E7C  65                 	db	101
  3116  009E7D  73                 	db	115
  3117  009E7E  20                 	db	32
  3118  009E7F  20                 	db	32
  3119  009E80  20                 	db	32
  3120  009E81  20                 	db	32
  3121  009E82  20                 	db	32
  3122  009E83  20                 	db	32
  3123  009E84  20                 	db	32
  3124  009E85  20                 	db	32
  3125  009E86  20                 	db	32
  3126  009E87  20                 	db	32
  3127  009E88  20                 	db	32
  3128  009E89  20                 	db	32
  3129  009E8A  4E                 	db	78
  3130  009E8B  6F                 	db	111
  3131  009E8C  20                 	db	32
  3132  009E8D  20                 	db	32
  3133  009E8E                     __end_of_dc_zero:
  3134                           	opt stack 0
  3135  009E8E                     _dc_arc2:
  3136                           	opt stack 0
  3137  009E8E  41                 	db	65
  3138  009E8F  72                 	db	114
  3139  009E90  63                 	db	99
  3140  009E91  3A                 	db	58
  3141  009E92  20                 	db	32
  3142  009E93  53                 	db	83
  3143  009E94  69                 	db	105
  3144  009E95  7A                 	db	122
  3145  009E96  65                 	db	101
  3146  009E97  3D                 	db	61
  3147  009E98  20                 	db	32
  3148  009E99  20                 	db	32
  3149  009E9A  20                 	db	32
  3150  009E9B  20                 	db	32
  3151  009E9C  20                 	db	32
  3152  009E9D  20                 	db	32
  3153  009E9E  20                 	db	32
  3154  009E9F  20                 	db	32
  3155  009EA0  20                 	db	32
  3156  009EA1  20                 	db	32
  3157  009EA2  43                 	db	67
  3158  009EA3  75                 	db	117
  3159  009EA4  72                 	db	114
  3160  009EA5  72                 	db	114
  3161  009EA6  65                 	db	101
  3162  009EA7  6E                 	db	110
  3163  009EA8  74                 	db	116
  3164  009EA9  20                 	db	32
  3165  009EAA  70                 	db	112
  3166  009EAB  6F                 	db	111
  3167  009EAC  73                 	db	115
  3168  009EAD  3A                 	db	58
  3169  009EAE  20                 	db	32
  3170  009EAF  20                 	db	32
  3171  009EB0  20                 	db	32
  3172  009EB1  20                 	db	32
  3173  009EB2  20                 	db	32
  3174  009EB3  20                 	db	32
  3175  009EB4  20                 	db	32
  3176  009EB5  01                 	db	1
  3177  009EB6  54                 	db	84
  3178  009EB7  75                 	db	117
  3179  009EB8  72                 	db	114
  3180  009EB9  6E                 	db	110
  3181  009EBA  20                 	db	32
  3182  009EBB  43                 	db	67
  3183  009EBC  43                 	db	67
  3184  009EBD  57                 	db	87
  3185  009EBE  20                 	db	32
  3186  009EBF  00                 	db	0
  3187  009EC0  20                 	db	32
  3188  009EC1  53                 	db	83
  3189  009EC2  70                 	db	112
  3190  009EC3  65                 	db	101
  3191  009EC4  65                 	db	101
  3192  009EC5  64                 	db	100
  3193  009EC6  20                 	db	32
  3194  009EC7  20                 	db	32
  3195  009EC8  20                 	db	32
  3196  009EC9  20                 	db	32
  3197  009ECA  53                 	db	83
  3198  009ECB  74                 	db	116
  3199  009ECC  61                 	db	97
  3200  009ECD  72                 	db	114
  3201  009ECE  74                 	db	116
  3202  009ECF  20                 	db	32
  3203  009ED0  20                 	db	32
  3204  009ED1  20                 	db	32
  3205  009ED2  20                 	db	32
  3206  009ED3  00                 	db	0
  3207  009ED4  20                 	db	32
  3208  009ED5  20                 	db	32
  3209  009ED6  20                 	db	32
  3210  009ED7  20                 	db	32
  3211  009ED8  20                 	db	32
  3212  009ED9  20                 	db	32
  3213  009EDA  20                 	db	32
  3214  009EDB  20                 	db	32
  3215  009EDC  20                 	db	32
  3216  009EDD  20                 	db	32
  3217  009EDE                     __end_of_dc_arc2:
  3218                           	opt stack 0
  3219  009EDE                     _dc_arc1:
  3220                           	opt stack 0
  3221  009EDE  41                 	db	65
  3222  009EDF  72                 	db	114
  3223  009EE0  63                 	db	99
  3224  009EE1  3A                 	db	58
  3225  009EE2  20                 	db	32
  3226  009EE3  53                 	db	83
  3227  009EE4  65                 	db	101
  3228  009EE5  74                 	db	116
  3229  009EE6  20                 	db	32
  3230  009EE7  61                 	db	97
  3231  009EE8  72                 	db	114
  3232  009EE9  63                 	db	99
  3233  009EEA  20                 	db	32
  3234  009EEB  73                 	db	115
  3235  009EEC  69                 	db	105
  3236  009EED  7A                 	db	122
  3237  009EEE  65                 	db	101
  3238  009EEF  20                 	db	32
  3239  009EF0  20                 	db	32
  3240  009EF1  20                 	db	32
  3241  009EF2  41                 	db	65
  3242  009EF3  72                 	db	114
  3243  009EF4  63                 	db	99
  3244  009EF5  20                 	db	32
  3245  009EF6  73                 	db	115
  3246  009EF7  69                 	db	105
  3247  009EF8  7A                 	db	122
  3248  009EF9  65                 	db	101
  3249  009EFA  3A                 	db	58
  3250  009EFB  20                 	db	32
  3251  009EFC  20                 	db	32
  3252  009EFD  20                 	db	32
  3253  009EFE  20                 	db	32
  3254  009EFF  20                 	db	32
  3255  009F00  20                 	db	32
  3256  009F01  20                 	db	32
  3257  009F02  20                 	db	32
  3258  009F03  20                 	db	32
  3259  009F04  20                 	db	32
  3260  009F05  20                 	db	32
  3261  009F06  53                 	db	83
  3262  009F07  74                 	db	116
  3263  009F08  65                 	db	101
  3264  009F09  70                 	db	112
  3265  009F0A  20                 	db	32
  3266  009F0B  73                 	db	115
  3267  009F0C  69                 	db	105
  3268  009F0D  7A                 	db	122
  3269  009F0E  65                 	db	101
  3270  009F0F  20                 	db	32
  3271  009F10  00                 	db	0
  3272  009F11  20                 	db	32
  3273  009F12  20                 	db	32
  3274  009F13  43                 	db	67
  3275  009F14  6F                 	db	111
  3276  009F15  6E                 	db	110
  3277  009F16  66                 	db	102
  3278  009F17  69                 	db	105
  3279  009F18  72                 	db	114
  3280  009F19  6D                 	db	109
  3281  009F1A  20                 	db	32
  3282  009F1B  20                 	db	32
  3283  009F1C  20                 	db	32
  3284  009F1D  20                 	db	32
  3285  009F1E  20                 	db	32
  3286  009F1F  20                 	db	32
  3287  009F20  20                 	db	32
  3288  009F21  20                 	db	32
  3289  009F22  20                 	db	32
  3290  009F23  20                 	db	32
  3291  009F24  00                 	db	0
  3292  009F25  20                 	db	32
  3293  009F26  20                 	db	32
  3294  009F27  43                 	db	67
  3295  009F28  61                 	db	97
  3296  009F29  6E                 	db	110
  3297  009F2A  63                 	db	99
  3298  009F2B  65                 	db	101
  3299  009F2C  6C                 	db	108
  3300  009F2D  20                 	db	32
  3301  009F2E                     __end_of_dc_arc1:
  3302                           	opt stack 0
  3303  009F2E                     _dc_divide2:
  3304                           	opt stack 0
  3305  009F2E  44                 	db	68
  3306  009F2F  69                 	db	105
  3307  009F30  76                 	db	118
  3308  009F31  69                 	db	105
  3309  009F32  64                 	db	100
  3310  009F33  65                 	db	101
  3311  009F34  3A                 	db	58
  3312  009F35  20                 	db	32
  3313  009F36  20                 	db	32
  3314  009F37  20                 	db	32
  3315  009F38  20                 	db	32
  3316  009F39  20                 	db	32
  3317  009F3A  20                 	db	32
  3318  009F3B  20                 	db	32
  3319  009F3C  20                 	db	32
  3320  009F3D  20                 	db	32
  3321  009F3E  20                 	db	32
  3322  009F3F  20                 	db	32
  3323  009F40  20                 	db	32
  3324  009F41  20                 	db	32
  3325  009F42  50                 	db	80
  3326  009F43  6F                 	db	111
  3327  009F44  73                 	db	115
  3328  009F45  3A                 	db	58
  3329  009F46  20                 	db	32
  3330  009F47  20                 	db	32
  3331  009F48  20                 	db	32
  3332  009F49  20                 	db	32
  3333  009F4A  20                 	db	32
  3334  009F4B  20                 	db	32
  3335  009F4C  20                 	db	32
  3336  009F4D  20                 	db	32
  3337  009F4E  20                 	db	32
  3338  009F4F  20                 	db	32
  3339  009F50  20                 	db	32
  3340  009F51  20                 	db	32
  3341  009F52  20                 	db	32
  3342  009F53  20                 	db	32
  3343  009F54  20                 	db	32
  3344  009F55  20                 	db	32
  3345  009F56  4A                 	db	74
  3346  009F57  75                 	db	117
  3347  009F58  6D                 	db	109
  3348  009F59  70                 	db	112
  3349  009F5A  20                 	db	32
  3350  009F5B  73                 	db	115
  3351  009F5C  69                 	db	105
  3352  009F5D  7A                 	db	122
  3353  009F5E  65                 	db	101
  3354  009F5F  3A                 	db	58
  3355  009F60  20                 	db	32
  3356  009F61  20                 	db	32
  3357  009F62  20                 	db	32
  3358  009F63  20                 	db	32
  3359  009F64  20                 	db	32
  3360  009F65  20                 	db	32
  3361  009F66  20                 	db	32
  3362  009F67  20                 	db	32
  3363  009F68  20                 	db	32
  3364  009F69  20                 	db	32
  3365  009F6A  50                 	db	80
  3366  009F6B  72                 	db	114
  3367  009F6C  65                 	db	101
  3368  009F6D  73                 	db	115
  3369  009F6E  73                 	db	115
  3370  009F6F  54                 	db	84
  3371  009F70  6F                 	db	111
  3372  009F71  4A                 	db	74
  3373  009F72  75                 	db	117
  3374  009F73  6D                 	db	109
  3375  009F74  70                 	db	112
  3376  009F75  20                 	db	32
  3377  009F76  00                 	db	0
  3378  009F77  20                 	db	32
  3379  009F78  43                 	db	67
  3380  009F79  61                 	db	97
  3381  009F7A  6E                 	db	110
  3382  009F7B  63                 	db	99
  3383  009F7C  65                 	db	101
  3384  009F7D  6C                 	db	108
  3385  009F7E                     __end_of_dc_divide2:
  3386                           	opt stack 0
  3387  009F7E                     _dc_divide1:
  3388                           	opt stack 0
  3389  009F7E  44                 	db	68
  3390  009F7F  69                 	db	105
  3391  009F80  76                 	db	118
  3392  009F81  69                 	db	105
  3393  009F82  64                 	db	100
  3394  009F83  65                 	db	101
  3395  009F84  3A                 	db	58
  3396  009F85  20                 	db	32
  3397  009F86  53                 	db	83
  3398  009F87  65                 	db	101
  3399  009F88  74                 	db	116
  3400  009F89  20                 	db	32
  3401  009F8A  64                 	db	100
  3402  009F8B  69                 	db	105
  3403  009F8C  76                 	db	118
  3404  009F8D  69                 	db	105
  3405  009F8E  73                 	db	115
  3406  009F8F  69                 	db	105
  3407  009F90  6F                 	db	111
  3408  009F91  6E                 	db	110
  3409  009F92  20                 	db	32
  3410  009F93  20                 	db	32
  3411  009F94  20                 	db	32
  3412  009F95  20                 	db	32
  3413  009F96  20                 	db	32
  3414  009F97  20                 	db	32
  3415  009F98  20                 	db	32
  3416  009F99  20                 	db	32
  3417  009F9A  20                 	db	32
  3418  009F9B  20                 	db	32
  3419  009F9C  20                 	db	32
  3420  009F9D  20                 	db	32
  3421  009F9E  20                 	db	32
  3422  009F9F  20                 	db	32
  3423  009FA0  20                 	db	32
  3424  009FA1  20                 	db	32
  3425  009FA2  20                 	db	32
  3426  009FA3  20                 	db	32
  3427  009FA4  20                 	db	32
  3428  009FA5  20                 	db	32
  3429  009FA6  20                 	db	32
  3430  009FA7  20                 	db	32
  3431  009FA8  20                 	db	32
  3432  009FA9  2F                 	db	47
  3433  009FAA  73                 	db	115
  3434  009FAB  74                 	db	116
  3435  009FAC  65                 	db	101
  3436  009FAD  70                 	db	112
  3437  009FAE  20                 	db	32
  3438  009FAF  20                 	db	32
  3439  009FB0  00                 	db	0
  3440  009FB1  20                 	db	32
  3441  009FB2  20                 	db	32
  3442  009FB3  43                 	db	67
  3443  009FB4  6F                 	db	111
  3444  009FB5  6E                 	db	110
  3445  009FB6  66                 	db	102
  3446  009FB7  69                 	db	105
  3447  009FB8  72                 	db	114
  3448  009FB9  6D                 	db	109
  3449  009FBA  31                 	db	49
  3450  009FBB  32                 	db	50
  3451  009FBC  33                 	db	51
  3452  009FBD  34                 	db	52
  3453  009FBE  20                 	db	32
  3454  009FBF  20                 	db	32
  3455  009FC0  20                 	db	32
  3456  009FC1  20                 	db	32
  3457  009FC2  20                 	db	32
  3458  009FC3  20                 	db	32
  3459  009FC4  00                 	db	0
  3460  009FC5  20                 	db	32
  3461  009FC6  20                 	db	32
  3462  009FC7  43                 	db	67
  3463  009FC8  61                 	db	97
  3464  009FC9  6E                 	db	110
  3465  009FCA  63                 	db	99
  3466  009FCB  65                 	db	101
  3467  009FCC  6C                 	db	108
  3468  009FCD  20                 	db	32
  3469  009FCE                     __end_of_dc_divide1:
  3470                           	opt stack 0
  3471  009FCE                     _dc_setup2:
  3472                           	opt stack 0
  3473  009FCE  53                 	db	83
  3474  009FCF  65                 	db	101
  3475  009FD0  74                 	db	116
  3476  009FD1  75                 	db	117
  3477  009FD2  70                 	db	112
  3478  009FD3  3A                 	db	58
  3479  009FD4  20                 	db	32
  3480  009FD5  53                 	db	83
  3481  009FD6  65                 	db	101
  3482  009FD7  74                 	db	116
  3483  009FD8  20                 	db	32
  3484  009FD9  64                 	db	100
  3485  009FDA  69                 	db	105
  3486  009FDB  72                 	db	114
  3487  009FDC  65                 	db	101
  3488  009FDD  63                 	db	99
  3489  009FDE  74                 	db	116
  3490  009FDF  69                 	db	105
  3491  009FE0  6F                 	db	111
  3492  009FE1  6E                 	db	110
  3493  009FE2  20                 	db	32
  3494  009FE3  20                 	db	32
  3495  009FE4  20                 	db	32
  3496  009FE5  20                 	db	32
  3497  009FE6  20                 	db	32
  3498  009FE7  20                 	db	32
  3499  009FE8  20                 	db	32
  3500  009FE9  20                 	db	32
  3501  009FEA  20                 	db	32
  3502  009FEB  20                 	db	32
  3503  009FEC  20                 	db	32
  3504  009FED  20                 	db	32
  3505  009FEE  20                 	db	32
  3506  009FEF  20                 	db	32
  3507  009FF0  20                 	db	32
  3508  009FF1  20                 	db	32
  3509  009FF2  20                 	db	32
  3510  009FF3  20                 	db	32
  3511  009FF4  20                 	db	32
  3512  009FF5  20                 	db	32
  3513  009FF6  20                 	db	32
  3514  009FF7  43                 	db	67
  3515  009FF8  6F                 	db	111
  3516  009FF9  75                 	db	117
  3517  009FFA  6E                 	db	110
  3518  009FFB  74                 	db	116
  3519  009FFC  65                 	db	101
  3520  009FFD  72                 	db	114
  3521  009FFE  43                 	db	67
  3522  009FFF  6C                 	db	108
  3523  00A000  6F                 	db	111
  3524  00A001  63                 	db	99
  3525  00A002  6B                 	db	107
  3526  00A003  77                 	db	119
  3527  00A004  69                 	db	105
  3528  00A005  73                 	db	115
  3529  00A006  65                 	db	101
  3530  00A007  20                 	db	32
  3531  00A008  20                 	db	32
  3532  00A009  20                 	db	32
  3533  00A00A  20                 	db	32
  3534  00A00B  43                 	db	67
  3535  00A00C  6C                 	db	108
  3536  00A00D  6F                 	db	111
  3537  00A00E  63                 	db	99
  3538  00A00F  6B                 	db	107
  3539  00A010  77                 	db	119
  3540  00A011  69                 	db	105
  3541  00A012  73                 	db	115
  3542  00A013  65                 	db	101
  3543  00A014  20                 	db	32
  3544  00A015  20                 	db	32
  3545  00A016  20                 	db	32
  3546  00A017  20                 	db	32
  3547  00A018  20                 	db	32
  3548  00A019  20                 	db	32
  3549  00A01A  20                 	db	32
  3550  00A01B  20                 	db	32
  3551  00A01C  20                 	db	32
  3552  00A01D  20                 	db	32
  3553  00A01E                     __end_of_dc_setup2:
  3554                           	opt stack 0
  3555  00A01E                     _dc_setup1:
  3556                           	opt stack 0
  3557  00A01E  53                 	db	83
  3558  00A01F  65                 	db	101
  3559  00A020  74                 	db	116
  3560  00A021  75                 	db	117
  3561  00A022  70                 	db	112
  3562  00A023  3A                 	db	58
  3563  00A024  20                 	db	32
  3564  00A025  53                 	db	83
  3565  00A026  65                 	db	101
  3566  00A027  74                 	db	116
  3567  00A028  20                 	db	32
  3568  00A029  7A                 	db	122
  3569  00A02A  65                 	db	101
  3570  00A02B  72                 	db	114
  3571  00A02C  6F                 	db	111
  3572  00A02D  20                 	db	32
  3573  00A02E  70                 	db	112
  3574  00A02F  6F                 	db	111
  3575  00A030  73                 	db	115
  3576  00A031  2E                 	db	46
  3577  00A032  20                 	db	32
  3578  00A033  20                 	db	32
  3579  00A034  20                 	db	32
  3580  00A035  20                 	db	32
  3581  00A036  20                 	db	32
  3582  00A037  20                 	db	32
  3583  00A038  20                 	db	32
  3584  00A039  20                 	db	32
  3585  00A03A  20                 	db	32
  3586  00A03B  20                 	db	32
  3587  00A03C  20                 	db	32
  3588  00A03D  20                 	db	32
  3589  00A03E  20                 	db	32
  3590  00A03F  20                 	db	32
  3591  00A040  20                 	db	32
  3592  00A041  20                 	db	32
  3593  00A042  20                 	db	32
  3594  00A043  20                 	db	32
  3595  00A044  20                 	db	32
  3596  00A045  20                 	db	32
  3597  00A046  53                 	db	83
  3598  00A047  74                 	db	116
  3599  00A048  65                 	db	101
  3600  00A049  70                 	db	112
  3601  00A04A  20                 	db	32
  3602  00A04B  73                 	db	115
  3603  00A04C  69                 	db	105
  3604  00A04D  7A                 	db	122
  3605  00A04E  65                 	db	101
  3606  00A04F  20                 	db	32
  3607  00A050  00                 	db	0
  3608  00A051  20                 	db	32
  3609  00A052  20                 	db	32
  3610  00A053  43                 	db	67
  3611  00A054  6F                 	db	111
  3612  00A055  6E                 	db	110
  3613  00A056  66                 	db	102
  3614  00A057  69                 	db	105
  3615  00A058  72                 	db	114
  3616  00A059  6D                 	db	109
  3617  00A05A  20                 	db	32
  3618  00A05B  78                 	db	120
  3619  00A05C  2E                 	db	46
  3620  00A05D  78                 	db	120
  3621  00A05E  78                 	db	120
  3622  00A05F  01                 	db	1
  3623  00A060  20                 	db	32
  3624  00A061  20                 	db	32
  3625  00A062  20                 	db	32
  3626  00A063  20                 	db	32
  3627  00A064  00                 	db	0
  3628  00A065  20                 	db	32
  3629  00A066  20                 	db	32
  3630  00A067  43                 	db	67
  3631  00A068  61                 	db	97
  3632  00A069  6E                 	db	110
  3633  00A06A  63                 	db	99
  3634  00A06B  65                 	db	101
  3635  00A06C  6C                 	db	108
  3636  00A06D  20                 	db	32
  3637  00A06E                     __end_of_dc_setup1:
  3638                           	opt stack 0
  3639  00A06E                     _dc_main:
  3640                           	opt stack 0
  3641  00A06E  4D                 	db	77
  3642  00A06F  61                 	db	97
  3643  00A070  69                 	db	105
  3644  00A071  6E                 	db	110
  3645  00A072  20                 	db	32
  3646  00A073  4D                 	db	77
  3647  00A074  65                 	db	101
  3648  00A075  6E                 	db	110
  3649  00A076  75                 	db	117
  3650  00A077  3A                 	db	58
  3651  00A078  20                 	db	32
  3652  00A079  20                 	db	32
  3653  00A07A  20                 	db	32
  3654  00A07B  20                 	db	32
  3655  00A07C  20                 	db	32
  3656  00A07D  20                 	db	32
  3657  00A07E  20                 	db	32
  3658  00A07F  20                 	db	32
  3659  00A080  20                 	db	32
  3660  00A081  20                 	db	32
  3661  00A082  20                 	db	32
  3662  00A083  53                 	db	83
  3663  00A084  65                 	db	101
  3664  00A085  74                 	db	116
  3665  00A086  75                 	db	117
  3666  00A087  70                 	db	112
  3667  00A088  20                 	db	32
  3668  00A089  20                 	db	32
  3669  00A08A  20                 	db	32
  3670  00A08B  20                 	db	32
  3671  00A08C  44                 	db	68
  3672  00A08D  69                 	db	105
  3673  00A08E  76                 	db	118
  3674  00A08F  69                 	db	105
  3675  00A090  64                 	db	100
  3676  00A091  65                 	db	101
  3677  00A092  20                 	db	32
  3678  00A093  20                 	db	32
  3679  00A094  20                 	db	32
  3680  00A095  20                 	db	32
  3681  00A096  20                 	db	32
  3682  00A097  41                 	db	65
  3683  00A098  72                 	db	114
  3684  00A099  63                 	db	99
  3685  00A09A  20                 	db	32
  3686  00A09B  20                 	db	32
  3687  00A09C  20                 	db	32
  3688  00A09D  20                 	db	32
  3689  00A09E  20                 	db	32
  3690  00A09F  20                 	db	32
  3691  00A0A0  4D                 	db	77
  3692  00A0A1  61                 	db	97
  3693  00A0A2  6E                 	db	110
  3694  00A0A3  75                 	db	117
  3695  00A0A4  61                 	db	97
  3696  00A0A5  6C                 	db	108
  3697  00A0A6  20                 	db	32
  3698  00A0A7  20                 	db	32
  3699  00A0A8  20                 	db	32
  3700  00A0A9  20                 	db	32
  3701  00A0AA  20                 	db	32
  3702  00A0AB  47                 	db	71
  3703  00A0AC  6F                 	db	111
  3704  00A0AD  32                 	db	50
  3705  00A0AE  5A                 	db	90
  3706  00A0AF  65                 	db	101
  3707  00A0B0  72                 	db	114
  3708  00A0B1  6F                 	db	111
  3709  00A0B2  20                 	db	32
  3710  00A0B3  20                 	db	32
  3711  00A0B4  20                 	db	32
  3712  00A0B5  20                 	db	32
  3713  00A0B6  20                 	db	32
  3714  00A0B7  20                 	db	32
  3715  00A0B8  20                 	db	32
  3716  00A0B9  20                 	db	32
  3717  00A0BA  20                 	db	32
  3718  00A0BB  20                 	db	32
  3719  00A0BC  20                 	db	32
  3720  00A0BD  20                 	db	32
  3721  00A0BE                     __end_of_dc_main:
  3722                           	opt stack 0
  3723  00A0BE                     _configDescriptor1:
  3724                           	opt stack 0
  3725  00A0BE  09                 	db	9
  3726  00A0BF  02                 	db	2
  3727  00A0C0  40                 	db	64
  3728  00A0C1  00                 	db	0
  3729  00A0C2  02                 	db	2
  3730  00A0C3  01                 	db	1
  3731  00A0C4  00                 	db	0
  3732  00A0C5  C0                 	db	192
  3733  00A0C6  32                 	db	50
  3734  00A0C7  09                 	db	9
  3735  00A0C8  04                 	db	4
  3736  00A0C9  00                 	db	0
  3737  00A0CA  00                 	db	0
  3738  00A0CB  02                 	db	2
  3739  00A0CC  03                 	db	3
  3740  00A0CD  00                 	db	0
  3741  00A0CE  00                 	db	0
  3742  00A0CF  00                 	db	0
  3743  00A0D0  09                 	db	9
  3744  00A0D1  21                 	db	33
  3745  00A0D2  11                 	db	17
  3746  00A0D3  01                 	db	1
  3747  00A0D4  00                 	db	0
  3748  00A0D5  01                 	db	1
  3749  00A0D6  22                 	db	34
  3750  00A0D7  1D                 	db	29
  3751  00A0D8  00                 	db	0
  3752  00A0D9  07                 	db	7
  3753  00A0DA  05                 	db	5
  3754  00A0DB  81                 	db	129
  3755  00A0DC  03                 	db	3
  3756  00A0DD  40                 	db	64
  3757  00A0DE  00                 	db	0
  3758  00A0DF  01                 	db	1
  3759  00A0E0  07                 	db	7
  3760  00A0E1  05                 	db	5
  3761  00A0E2  01                 	db	1
  3762  00A0E3  03                 	db	3
  3763  00A0E4  40                 	db	64
  3764  00A0E5  00                 	db	0
  3765  00A0E6  01                 	db	1
  3766  00A0E7  09                 	db	9
  3767  00A0E8  04                 	db	4
  3768  00A0E9  01                 	db	1
  3769  00A0EA  00                 	db	0
  3770  00A0EB  02                 	db	2
  3771  00A0EC  08                 	db	8
  3772  00A0ED  06                 	db	6
  3773  00A0EE  50                 	db	80
  3774  00A0EF  00                 	db	0
  3775  00A0F0  07                 	db	7
  3776  00A0F1  05                 	db	5
  3777  00A0F2  82                 	db	130
  3778  00A0F3  02                 	db	2
  3779  00A0F4  40                 	db	64
  3780  00A0F5  00                 	db	0
  3781  00A0F6  01                 	db	1
  3782  00A0F7  07                 	db	7
  3783  00A0F8  05                 	db	5
  3784  00A0F9  02                 	db	2
  3785  00A0FA  02                 	db	2
  3786  00A0FB  40                 	db	64
  3787  00A0FC  00                 	db	0
  3788  00A0FD  01                 	db	1
  3789  00A0FE                     __end_of_configDescriptor1:
  3790                           	opt stack 0
  3791  00A0FE                     _sd001:
  3792                           	opt stack 0
  3793  00A0FE  34                 	db	52
  3794  00A0FF  03                 	db	3
  3795  00A100  0053               	dw	83
  3796  00A102  006F               	dw	111
  3797  00A104  006C               	dw	108
  3798  00A106  0064               	dw	100
  3799  00A108  0065               	dw	101
  3800  00A10A  0072               	dw	114
  3801  00A10C  006E               	dw	110
  3802  00A10E  0065               	dw	101
  3803  00A110  0072               	dw	114
  3804  00A112  0064               	dw	100
  3805  00A114  002E               	dw	46
  3806  00A116  0063               	dw	99
  3807  00A118  006F               	dw	111
  3808  00A11A  006D               	dw	109
  3809  00A11C  0020               	dw	32
  3810  00A11E  0020               	dw	32
  3811  00A120  0020               	dw	32
  3812  00A122  0020               	dw	32
  3813  00A124  0020               	dw	32
  3814  00A126  0020               	dw	32
  3815  00A128  0020               	dw	32
  3816  00A12A  0020               	dw	32
  3817  00A12C  0020               	dw	32
  3818  00A12E  0020               	dw	32
  3819  00A130  0020               	dw	32
  3820  00A132                     __end_of_sd001:
  3821                           	opt stack 0
  3822  00A132                     _sd002:
  3823                           	opt stack 0
  3824  00A132  2E                 	db	46
  3825  00A133  03                 	db	3
  3826  00A134  0053               	dw	83
  3827  00A136  0074               	dw	116
  3828  00A138  0065               	dw	101
  3829  00A13A  0070               	dw	112
  3830  00A13C  0070               	dw	112
  3831  00A13E  0065               	dw	101
  3832  00A140  0072               	dw	114
  3833  00A142  004D               	dw	77
  3834  00A144  006F               	dw	111
  3835  00A146  0074               	dw	116
  3836  00A148  006F               	dw	111
  3837  00A14A  0072               	dw	114
  3838  00A14C  0043               	dw	67
  3839  00A14E  006F               	dw	111
  3840  00A150  006E               	dw	110
  3841  00A152  0074               	dw	116
  3842  00A154  0072               	dw	114
  3843  00A156  006F               	dw	111
  3844  00A158  006C               	dw	108
  3845  00A15A  006C               	dw	108
  3846  00A15C  0065               	dw	101
  3847  00A15E  0072               	dw	114
  3848  00A160                     __end_of_sd002:
  3849                           	opt stack 0
  3850  00A160                     _inq_resp:
  3851                           	opt stack 0
  3852  00A160  00                 	db	0
  3853  00A161  80                 	db	128
  3854  00A162  04                 	db	4
  3855  00A163  02                 	db	2
  3856  00A164  20                 	db	32
  3857  00A165  00                 	db	0
  3858  00A166  00                 	db	0
  3859  00A167  00                 	db	0
  3860  00A168  4D                 	db	77
  3861  00A169  69                 	db	105
  3862  00A16A  63                 	db	99
  3863  00A16B  72                 	db	114
  3864  00A16C  6F                 	db	111
  3865  00A16D  63                 	db	99
  3866  00A16E  68                 	db	104
  3867  00A16F  70                 	db	112
  3868  00A170  4D                 	db	77
  3869  00A171  61                 	db	97
  3870  00A172  73                 	db	115
  3871  00A173  73                 	db	115
  3872  00A174  20                 	db	32
  3873  00A175  53                 	db	83
  3874  00A176  74                 	db	116
  3875  00A177  6F                 	db	111
  3876  00A178  72                 	db	114
  3877  00A179  61                 	db	97
  3878  00A17A  67                 	db	103
  3879  00A17B  65                 	db	101
  3880  00A17C  20                 	db	32
  3881  00A17D  20                 	db	32
  3882  00A17E  20                 	db	32
  3883  00A17F  20                 	db	32
  3884  00A180  30                 	db	48
  3885  00A181  30                 	db	48
  3886  00A182  30                 	db	48
  3887  00A183  31                 	db	49
  3888  00A184                     __end_of_inq_resp:
  3889                           	opt stack 0
  3890  00A184                     _hid_rpt01:
  3891                           	opt stack 0
  3892  00A184  06                 	db	6
  3893  00A185  00                 	db	0
  3894  00A186  FF                 	db	255
  3895  00A187  09                 	db	9
  3896  00A188  01                 	db	1
  3897  00A189  A1                 	db	161
  3898  00A18A  01                 	db	1
  3899  00A18B  19                 	db	25
  3900  00A18C  01                 	db	1
  3901  00A18D  29                 	db	41
  3902  00A18E  40                 	db	64
  3903  00A18F  15                 	db	21
  3904  00A190  00                 	db	0
  3905  00A191  26                 	db	38
  3906  00A192  FF                 	db	255
  3907  00A193  00                 	db	0
  3908  00A194  75                 	db	117
  3909  00A195  08                 	db	8
  3910  00A196  95                 	db	149
  3911  00A197  40                 	db	64
  3912  00A198  81                 	db	129
  3913  00A199  00                 	db	0
  3914  00A19A  19                 	db	25
  3915  00A19B  01                 	db	1
  3916  00A19C  29                 	db	41
  3917  00A19D  40                 	db	64
  3918  00A19E  91                 	db	145
  3919  00A19F  00                 	db	0
  3920  00A1A0  C0                 	db	192
  3921  00A1A1                     __end_of_hid_rpt01:
  3922                           	opt stack 0
  3923  00A1A1                     _sd003:
  3924                           	opt stack 0
  3925  00A1A1  1A                 	db	26
  3926  00A1A2  03                 	db	3
  3927  00A1A3  0031               	dw	49
  3928  00A1A5  0032               	dw	50
  3929  00A1A7  0033               	dw	51
  3930  00A1A9  0034               	dw	52
  3931  00A1AB  0035               	dw	53
  3932  00A1AD  0036               	dw	54
  3933  00A1AF  0037               	dw	55
  3934  00A1B1  0038               	dw	56
  3935  00A1B3  0039               	dw	57
  3936  00A1B5  0030               	dw	48
  3937  00A1B7  0039               	dw	57
  3938  00A1B9  0039               	dw	57
  3939  00A1BB                     __end_of_sd003:
  3940                           	opt stack 0
  3941  00A1BB                     _overshoot_cost_in_steps_string:
  3942                           	opt stack 0
  3943  00A1BB  4F                 	db	79
  3944  00A1BC  56                 	db	86
  3945  00A1BD  45                 	db	69
  3946  00A1BE  52                 	db	82
  3947  00A1BF  53                 	db	83
  3948  00A1C0  48                 	db	72
  3949  00A1C1  4F                 	db	79
  3950  00A1C2  4F                 	db	79
  3951  00A1C3  54                 	db	84
  3952  00A1C4  5F                 	db	95
  3953  00A1C5  43                 	db	67
  3954  00A1C6  4F                 	db	79
  3955  00A1C7  53                 	db	83
  3956  00A1C8  54                 	db	84
  3957  00A1C9  5F                 	db	95
  3958  00A1CA  49                 	db	73
  3959  00A1CB  4E                 	db	78
  3960  00A1CC  5F                 	db	95
  3961  00A1CD  53                 	db	83
  3962  00A1CE  54                 	db	84
  3963  00A1CF  45                 	db	69
  3964  00A1D0  50                 	db	80
  3965  00A1D1  53                 	db	83
  3966  00A1D2  00                 	db	0
  3967  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3968                           	opt stack 0
  3969  00A1D3                     _maximum_speed_manual_string:
  3970                           	opt stack 0
  3971  00A1D3  4D                 	db	77
  3972  00A1D4  41                 	db	65
  3973  00A1D5  58                 	db	88
  3974  00A1D6  49                 	db	73
  3975  00A1D7  4D                 	db	77
  3976  00A1D8  55                 	db	85
  3977  00A1D9  4D                 	db	77
  3978  00A1DA  5F                 	db	95
  3979  00A1DB  53                 	db	83
  3980  00A1DC  50                 	db	80
  3981  00A1DD  45                 	db	69
  3982  00A1DE  45                 	db	69
  3983  00A1DF  44                 	db	68
  3984  00A1E0  5F                 	db	95
  3985  00A1E1  4D                 	db	77
  3986  00A1E2  41                 	db	65
  3987  00A1E3  4E                 	db	78
  3988  00A1E4  55                 	db	85
  3989  00A1E5  41                 	db	65
  3990  00A1E6  4C                 	db	76
  3991  00A1E7  00                 	db	0
  3992  00A1E8                     __end_of_maximum_speed_manual_string:
  3993                           	opt stack 0
  3994  00A1E8                     _initial_speed_manual_string:
  3995                           	opt stack 0
  3996  00A1E8  49                 	db	73
  3997  00A1E9  4E                 	db	78
  3998  00A1EA  49                 	db	73
  3999  00A1EB  54                 	db	84
  4000  00A1EC  49                 	db	73
  4001  00A1ED  41                 	db	65
  4002  00A1EE  4C                 	db	76
  4003  00A1EF  5F                 	db	95
  4004  00A1F0  53                 	db	83
  4005  00A1F1  50                 	db	80
  4006  00A1F2  45                 	db	69
  4007  00A1F3  45                 	db	69
  4008  00A1F4  44                 	db	68
  4009  00A1F5  5F                 	db	95
  4010  00A1F6  4D                 	db	77
  4011  00A1F7  41                 	db	65
  4012  00A1F8  4E                 	db	78
  4013  00A1F9  55                 	db	85
  4014  00A1FA  41                 	db	65
  4015  00A1FB  4C                 	db	76
  4016  00A1FC  00                 	db	0
  4017  00A1FD                     __end_of_initial_speed_manual_string:
  4018                           	opt stack 0
  4019  00A1FD                     _full_circle_in_steps_string:
  4020                           	opt stack 0
  4021  00A1FD  46                 	db	70
  4022  00A1FE  55                 	db	85
  4023  00A1FF  4C                 	db	76
  4024  00A200  4C                 	db	76
  4025  00A201  5F                 	db	95
  4026  00A202  43                 	db	67
  4027  00A203  49                 	db	73
  4028  00A204  52                 	db	82
  4029  00A205  43                 	db	67
  4030  00A206  4C                 	db	76
  4031  00A207  45                 	db	69
  4032  00A208  5F                 	db	95
  4033  00A209  49                 	db	73
  4034  00A20A  4E                 	db	78
  4035  00A20B  5F                 	db	95
  4036  00A20C  53                 	db	83
  4037  00A20D  54                 	db	84
  4038  00A20E  45                 	db	69
  4039  00A20F  50                 	db	80
  4040  00A210  53                 	db	83
  4041  00A211  00                 	db	0
  4042  00A212                     __end_of_full_circle_in_steps_string:
  4043                           	opt stack 0
  4044  00A212                     _overshoot_in_steps_string:
  4045                           	opt stack 0
  4046  00A212  4F                 	db	79
  4047  00A213  56                 	db	86
  4048  00A214  45                 	db	69
  4049  00A215  52                 	db	82
  4050  00A216  53                 	db	83
  4051  00A217  48                 	db	72
  4052  00A218  4F                 	db	79
  4053  00A219  4F                 	db	79
  4054  00A21A  54                 	db	84
  4055  00A21B  5F                 	db	95
  4056  00A21C  49                 	db	73
  4057  00A21D  4E                 	db	78
  4058  00A21E  5F                 	db	95
  4059  00A21F  53                 	db	83
  4060  00A220  54                 	db	84
  4061  00A221  45                 	db	69
  4062  00A222  50                 	db	80
  4063  00A223  53                 	db	83
  4064  00A224  00                 	db	0
  4065  00A225                     __end_of_overshoot_in_steps_string:
  4066                           	opt stack 0
  4067  00A225                     _maximum_speed_arc_string:
  4068                           	opt stack 0
  4069  00A225  4D                 	db	77
  4070  00A226  41                 	db	65
  4071  00A227  58                 	db	88
  4072  00A228  49                 	db	73
  4073  00A229  4D                 	db	77
  4074  00A22A  55                 	db	85
  4075  00A22B  4D                 	db	77
  4076  00A22C  5F                 	db	95
  4077  00A22D  53                 	db	83
  4078  00A22E  50                 	db	80
  4079  00A22F  45                 	db	69
  4080  00A230  45                 	db	69
  4081  00A231  44                 	db	68
  4082  00A232  5F                 	db	95
  4083  00A233  41                 	db	65
  4084  00A234  52                 	db	82
  4085  00A235  43                 	db	67
  4086  00A236  00                 	db	0
  4087  00A237                     __end_of_maximum_speed_arc_string:
  4088                           	opt stack 0
  4089  00A237                     _initial_speed_arc_string:
  4090                           	opt stack 0
  4091  00A237  49                 	db	73
  4092  00A238  4E                 	db	78
  4093  00A239  49                 	db	73
  4094  00A23A  54                 	db	84
  4095  00A23B  49                 	db	73
  4096  00A23C  41                 	db	65
  4097  00A23D  4C                 	db	76
  4098  00A23E  5F                 	db	95
  4099  00A23F  53                 	db	83
  4100  00A240  50                 	db	80
  4101  00A241  45                 	db	69
  4102  00A242  45                 	db	69
  4103  00A243  44                 	db	68
  4104  00A244  5F                 	db	95
  4105  00A245  41                 	db	65
  4106  00A246  52                 	db	82
  4107  00A247  43                 	db	67
  4108  00A248  00                 	db	0
  4109  00A249                     __end_of_initial_speed_arc_string:
  4110                           	opt stack 0
  4111  00A249                     _inverse_direction_string:
  4112                           	opt stack 0
  4113  00A249  49                 	db	73
  4114  00A24A  4E                 	db	78
  4115  00A24B  56                 	db	86
  4116  00A24C  45                 	db	69
  4117  00A24D  52                 	db	82
  4118  00A24E  53                 	db	83
  4119  00A24F  45                 	db	69
  4120  00A250  5F                 	db	95
  4121  00A251  44                 	db	68
  4122  00A252  49                 	db	73
  4123  00A253  52                 	db	82
  4124  00A254  45                 	db	69
  4125  00A255  43                 	db	67
  4126  00A256  54                 	db	84
  4127  00A257  49                 	db	73
  4128  00A258  4F                 	db	79
  4129  00A259  4E                 	db	78
  4130  00A25A  00                 	db	0
  4131  00A25B                     __end_of_inverse_direction_string:
  4132                           	opt stack 0
  4133  00A25B                     _device_dsc:
  4134                           	opt stack 0
  4135  00A25B  12                 	db	18
  4136  00A25C  01                 	db	1
  4137  00A25D  0200               	dw	512
  4138  00A25F  00                 	db	0
  4139  00A260  00                 	db	0
  4140  00A261  00                 	db	0
  4141  00A262  08                 	db	8
  4142  00A263  04D8               	dw	1240
  4143  00A265  EDCF               	dw	60879
  4144  00A267  0100               	dw	256
  4145  00A269  01                 	db	1
  4146  00A26A  02                 	db	2
  4147  00A26B  00                 	db	0
  4148  00A26C  01                 	db	1
  4149  00A26D                     __end_of_device_dsc:
  4150                           	opt stack 0
  4151  00A26D                     _use_ccw_limit_string:
  4152                           	opt stack 0
  4153  00A26D  55                 	db	85
  4154  00A26E  53                 	db	83
  4155  00A26F  45                 	db	69
  4156  00A270  5F                 	db	95
  4157  00A271  43                 	db	67
  4158  00A272  43                 	db	67
  4159  00A273  57                 	db	87
  4160  00A274  5F                 	db	95
  4161  00A275  4C                 	db	76
  4162  00A276  49                 	db	73
  4163  00A277  4D                 	db	77
  4164  00A278  49                 	db	73
  4165  00A279  54                 	db	84
  4166  00A27A  00                 	db	0
  4167  00A27B                     __end_of_use_ccw_limit_string:
  4168                           	opt stack 0
  4169  00A27B                     _beep_duration_string:
  4170                           	opt stack 0
  4171  00A27B  42                 	db	66
  4172  00A27C  45                 	db	69
  4173  00A27D  45                 	db	69
  4174  00A27E  50                 	db	80
  4175  00A27F  5F                 	db	95
  4176  00A280  44                 	db	68
  4177  00A281  55                 	db	85
  4178  00A282  52                 	db	82
  4179  00A283  41                 	db	65
  4180  00A284  54                 	db	84
  4181  00A285  49                 	db	73
  4182  00A286  4F                 	db	79
  4183  00A287  4E                 	db	78
  4184  00A288  00                 	db	0
  4185  00A289                     __end_of_beep_duration_string:
  4186                           	opt stack 0
  4187  00A289                     _maximum_speed_string:
  4188                           	opt stack 0
  4189  00A289  4D                 	db	77
  4190  00A28A  41                 	db	65
  4191  00A28B  58                 	db	88
  4192  00A28C  49                 	db	73
  4193  00A28D  4D                 	db	77
  4194  00A28E  55                 	db	85
  4195  00A28F  4D                 	db	77
  4196  00A290  5F                 	db	95
  4197  00A291  53                 	db	83
  4198  00A292  50                 	db	80
  4199  00A293  45                 	db	69
  4200  00A294  45                 	db	69
  4201  00A295  44                 	db	68
  4202  00A296  00                 	db	0
  4203  00A297                     __end_of_maximum_speed_string:
  4204                           	opt stack 0
  4205  00A297                     _minimum_speed_string:
  4206                           	opt stack 0
  4207  00A297  4D                 	db	77
  4208  00A298  49                 	db	73
  4209  00A299  4E                 	db	78
  4210  00A29A  49                 	db	73
  4211  00A29B  4D                 	db	77
  4212  00A29C  55                 	db	85
  4213  00A29D  4D                 	db	77
  4214  00A29E  5F                 	db	95
  4215  00A29F  53                 	db	83
  4216  00A2A0  50                 	db	80
  4217  00A2A1  45                 	db	69
  4218  00A2A2  45                 	db	69
  4219  00A2A3  44                 	db	68
  4220  00A2A4  00                 	db	0
  4221  00A2A5                     __end_of_minimum_speed_string:
  4222                           	opt stack 0
  4223  00A2A5                     _use_cw_limit_string:
  4224                           	opt stack 0
  4225  00A2A5  55                 	db	85
  4226  00A2A6  53                 	db	83
  4227  00A2A7  45                 	db	69
  4228  00A2A8  5F                 	db	95
  4229  00A2A9  43                 	db	67
  4230  00A2AA  57                 	db	87
  4231  00A2AB  5F                 	db	95
  4232  00A2AC  4C                 	db	76
  4233  00A2AD  49                 	db	73
  4234  00A2AE  4D                 	db	77
  4235  00A2AF  49                 	db	73
  4236  00A2B0  54                 	db	84
  4237  00A2B1  00                 	db	0
  4238  00A2B2                     __end_of_use_cw_limit_string:
  4239                           	opt stack 0
  4240  00A2B2                     _ccw_limit_string:
  4241                           	opt stack 0
  4242  00A2B2  43                 	db	67
  4243  00A2B3  43                 	db	67
  4244  00A2B4  57                 	db	87
  4245  00A2B5  5F                 	db	95
  4246  00A2B6  4C                 	db	76
  4247  00A2B7  49                 	db	73
  4248  00A2B8  4D                 	db	77
  4249  00A2B9  49                 	db	73
  4250  00A2BA  54                 	db	84
  4251  00A2BB  00                 	db	0
  4252  00A2BC                     __end_of_ccw_limit_string:
  4253                           	opt stack 0
  4254  00A2BC                     _cw_limit_string:
  4255                           	opt stack 0
  4256  00A2BC  43                 	db	67
  4257  00A2BD  57                 	db	87
  4258  00A2BE  5F                 	db	95
  4259  00A2BF  4C                 	db	76
  4260  00A2C0  49                 	db	73
  4261  00A2C1  4D                 	db	77
  4262  00A2C2  49                 	db	73
  4263  00A2C3  54                 	db	84
  4264  00A2C4  00                 	db	0
  4265  00A2C5                     __end_of_cw_limit_string:
  4266                           	opt stack 0
  4267  00A2C5                     _bit_pattern_ae:
  4268                           	opt stack 0
  4269  00A2C5  0A                 	db	10
  4270  00A2C6  00                 	db	0
  4271  00A2C7  0E                 	db	14
  4272  00A2C8  01                 	db	1
  4273  00A2C9  0F                 	db	15
  4274  00A2CA  11                 	db	17
  4275  00A2CB  0F                 	db	15
  4276  00A2CC  00                 	db	0
  4277  00A2CD                     __end_of_bit_pattern_ae:
  4278                           	opt stack 0
  4279  00A2CD                     _bit_pattern_degree:
  4280                           	opt stack 0
  4281  00A2CD  18                 	db	24
  4282  00A2CE  18                 	db	24
  4283  00A2CF  00                 	db	0
  4284  00A2D0  00                 	db	0
  4285  00A2D1  00                 	db	0
  4286  00A2D2  00                 	db	0
  4287  00A2D3  00                 	db	0
  4288  00A2D4  00                 	db	0
  4289  00A2D5                     __end_of_bit_pattern_degree:
  4290                           	opt stack 0
  4291  00A2D5                     _bit_pattern_verticalbar:
  4292                           	opt stack 0
  4293  00A2D5  04                 	db	4
  4294  00A2D6  04                 	db	4
  4295  00A2D7  04                 	db	4
  4296  00A2D8  04                 	db	4
  4297  00A2D9  04                 	db	4
  4298  00A2DA  04                 	db	4
  4299  00A2DB  04                 	db	4
  4300  00A2DC  04                 	db	4
  4301  00A2DD                     __end_of_bit_pattern_verticalbar:
  4302                           	opt stack 0
  4303  00A2DD                     _flash_command_pagesize_528:
  4304                           	opt stack 0
  4305  00A2DD  3D                 	db	61
  4306  00A2DE  2A                 	db	42
  4307  00A2DF  80                 	db	128
  4308  00A2E0  A7                 	db	167
  4309  00A2E1                     __end_of_flash_command_pagesize_528:
  4310                           	opt stack 0
  4311  00A2E1                     _flash_command_pagesize_512:
  4312                           	opt stack 0
  4313  00A2E1  3D                 	db	61
  4314  00A2E2  2A                 	db	42
  4315  00A2E3  80                 	db	128
  4316  00A2E4  A6                 	db	166
  4317  00A2E5                     __end_of_flash_command_pagesize_512:
  4318                           	opt stack 0
  4319  00A2E5                     _sd000:
  4320                           	opt stack 0
  4321  00A2E5  04                 	db	4
  4322  00A2E6  03                 	db	3
  4323  00A2E7  0409               	dw	1033
  4324  00A2E9                     __end_of_sd000:
  4325                           	opt stack 0
  4326  0000                     _RPINR22	set	3837
  4327  0000                     _RPOR23	set	3799
  4328  0000                     _RPOR21	set	3797
  4329  0000                     _RPINR21	set	3836
  4330  0000                     _RPOR4	set	3780
  4331  0000                     _PPSCONbits	set	3775
  4332  0000                     _CCPTMRS0bits	set	3922
  4333  0000                     _ANCON0bits	set	3912
  4334  0000                     _ANCON1bits	set	3913
  4335  0000                     _UEP0bits	set	3878
  4336  0000                     _UIEbits	set	3894
  4337  0000                     _UADDR	set	3896
  4338  0000                     _UIE	set	3894
  4339  0000                     _UEIE	set	3895
  4340  0000                     _UCFG	set	3897
  4341  0000                     _UEP1	set	3879
  4342  0000                     _UEP0	set	3878
  4343  0000                     _ADRESL	set	4035
  4344  0000                     _ADRESH	set	4036
  4345  0000                     _ADCON1bits	set	4033
  4346  0000                     _ADCON0bits	set	4034
  4347  0000                     _PORTA	set	3968
  4348  0000                     _PORTE	set	3972
  4349  0000                     _TMR2	set	4044
  4350  0000                     _PIE1bits	set	3997
  4351  0000                     _CCPR1L	set	4027
  4352  0000                     _PR2	set	4043
  4353  0000                     _T2CONbits	set	4042
  4354  0000                     _CCP1CONbits	set	4026
  4355  0000                     _RXADDRL	set	3945
  4356  0000                     _RXADDRH	set	3944
  4357  0000                     _DMABCL	set	3943
  4358  0000                     _DMABCH	set	3942
  4359  0000                     _TXADDRL	set	3947
  4360  0000                     _TXADDRH	set	3946
  4361  0000                     _DMACON2bits	set	3974
  4362  0000                     _DMACON1bits	set	3976
  4363  0000                     _SSP2CON1bits	set	3954
  4364  0000                     _SSP2STATbits	set	3955
  4365  0000                     _PORTDbits	set	3971
  4366  0000                     _PORTEbits	set	3972
  4367  0000                     _SSP1BUF	set	4041
  4368  0000                     _SSP1CON2bits	set	4037
  4369  0000                     _SSP1CON1bits	set	4038
  4370  0000                     _SSP1ADD	set	4040
  4371  0000                     _SSP1STATbits	set	4039
  4372  0000                     _PORTAbits	set	3968
  4373  0000                     _T0CONbits	set	4053
  4374  0000                     _TRISEbits	set	3990
  4375  0000                     _EECON2	set	4007
  4376  0000                     _LATBbits	set	3978
  4377  0000                     _LATAbits	set	3977
  4378  0000                     _TRISAbits	set	3986
  4379  0000                     _LATCbits	set	3979
  4380  0000                     _TRISCbits	set	3988
  4381  0000                     _TRISBbits	set	3987
  4382  0000                     _LATDbits	set	3980
  4383  0000                     _TRISDbits	set	3989
  4384  0000                     _TMR0L	set	4054
  4385  0000                     _TMR0H	set	4055
  4386  0000                     _PIR1bits	set	3998
  4387  0000                     _OSCCON	set	4051
  4388  0000                     _OSCTUNEbits	set	3995
  4389  0000                     _INTCONbits	set	4082
  4390  0000                     _IPR2bits	set	4002
  4391  0000                     _RCONbits	set	4048
  4392  0000                     _UCON	set	3941
  4393  0000                     _USTAT	set	3940
  4394  0000                     _PIR2bits	set	4001
  4395  0000                     _UIRbits	set	3938
  4396  0000                     _UCONbits	set	3941
  4397  0000                     _UIR	set	3938
  4398  0000                     _UEIR	set	3939
  4399  0000                     _PIE2bits	set	4000
  4400  00A2E9                     
  4401                           ; BSR set to: 1
  4402  00A2E9  68                 	db	104	;'h'
  4403  00A2EA  65                 	db	101	;'e'
  4404  00A2EB  6C                 	db	108	;'l'
  4405  00A2EC  6C                 	db	108	;'l'
  4406  00A2ED  6F                 	db	111	;'o'
  4407  00A2EE  20                 	db	32
  4408  00A2EF  77                 	db	119	;'w'
  4409  00A2F0  6F                 	db	111	;'o'
  4410  00A2F1  72                 	db	114	;'r'
  4411  00A2F2  6C                 	db	108	;'l'
  4412  00A2F3  64                 	db	100	;'d'
  4413  00A2F4  21                 	db	33
  4414  00A2F5  00                 	db	0
  4415  00A2F6                     
  4416                           ; BSR set to: 1
  4417  00A2F6  53                 	db	83	;'S'
  4418  00A2F7  74                 	db	116	;'t'
  4419  00A2F8  65                 	db	101	;'e'
  4420  00A2F9  70                 	db	112	;'p'
  4421  00A2FA  70                 	db	112	;'p'
  4422  00A2FB  65                 	db	101	;'e'
  4423  00A2FC  72                 	db	114	;'r'
  4424  00A2FD  43                 	db	67	;'C'
  4425  00A2FE  74                 	db	116	;'t'
  4426  00A2FF  72                 	db	114	;'r'
  4427  00A300  6C                 	db	108	;'l'
  4428  00A301  00                 	db	0
  4429  00A302                     
  4430                           ; BSR set to: 1
  4431  00A302  46                 	db	70	;'F'
  4432  00A303  49                 	db	73	;'I'
  4433  00A304  4C                 	db	76	;'L'
  4434  00A305  45                 	db	69	;'E'
  4435  00A306  20                 	db	32
  4436  00A307  20                 	db	32
  4437  00A308  20                 	db	32
  4438  00A309  20                 	db	32
  4439  00A30A  00                 	db	0
  4440  00A30B                     STR_7:
  4441                           
  4442                           ; BSR set to: 1
  4443  00A30B  4D                 	db	77	;'M'
  4444  00A30C  53                 	db	83	;'S'
  4445  00A30D  44                 	db	68	;'D'
  4446  00A30E  4F                 	db	79	;'O'
  4447  00A30F  53                 	db	83	;'S'
  4448  00A310  35                 	db	53	;'5'
  4449  00A311  2E                 	db	46
  4450  00A312  30                 	db	48	;'0'
  4451  00A313  00                 	db	0
  4452  00A314                     STR_1:
  4453                           
  4454                           ; BSR set to: 1
  4455  00A314  20                 	db	32
  4456  00A315  20                 	db	32
  4457  00A316  20                 	db	32
  4458  00A317  20                 	db	32
  4459  00A318  20                 	db	32
  4460  00A319  20                 	db	32
  4461  00A31A  20                 	db	32
  4462  00A31B  20                 	db	32
  4463  00A31C  00                 	db	0
  4464  00A31D                     STR_2:
  4465                           
  4466                           ; BSR set to: 1
  4467  00A31D  43                 	db	67	;'C'
  4468  00A31E  61                 	db	97	;'a'
  4469  00A31F  6E                 	db	110	;'n'
  4470  00A320  63                 	db	99	;'c'
  4471  00A321  65                 	db	101	;'e'
  4472  00A322  6C                 	db	108	;'l'
  4473  00A323  00                 	db	0
  4474  00A324                     STR_6:
  4475                           
  4476                           ; BSR set to: 1
  4477  00A324  53                 	db	83	;'S'
  4478  00A325  74                 	db	116	;'t'
  4479  00A326  6F                 	db	111	;'o'
  4480  00A327  70                 	db	112	;'p'
  4481  00A328  20                 	db	32
  4482  00A329  00                 	db	0
  4483  00A32A                     
  4484                           ; BSR set to: 1
  4485  00A32A  54                 	db	84	;'T'
  4486  00A32B  58                 	db	88	;'X'
  4487  00A32C  54                 	db	84	;'T'
  4488  00A32D  00                 	db	0
  4489  0000                     
  4490                           ; #config settings
  4491  00A32E  00                 	db	0	; dummy byte at the end
  4492  0000                     
  4493                           	psect	cinit
  4494  013990                     __pcinit:
  4495                           	opt stack 0
  4496  013990                     start_initialization:
  4497                           	opt stack 0
  4498  013990                     __initialization:
  4499                           	opt stack 0
  4500                           
  4501                           ; Initialize objects allocated to BANK4 (80 bytes)
  4502                           ; load TBLPTR registers with __pidataBANK4
  4503  013990  0ED2               	movlw	low __pidataBANK4
  4504  013992  6EF6               	movwf	tblptrl,c
  4505  013994  0E4F               	movlw	high __pidataBANK4
  4506  013996  6EF7               	movwf	tblptrh,c
  4507  013998  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4508  01399A  6EF8               	movwf	tblptru,c
  4509  01399C  EE04  F000         	lfsr	0,__pdataBANK4
  4510  0139A0  EE10 F050          	lfsr	1,80
  4511  0139A4                     copy_data0:
  4512  0139A4  0009               	tblrd		*+
  4513  0139A6  CFF5 FFEE          	movff	tablat,postinc0
  4514  0139AA  50E5               	movf	postdec1,w,c
  4515  0139AC  50E1               	movf	fsr1l,w,c
  4516  0139AE  E1FA               	bnz	copy_data0
  4517                           
  4518                           ; Initialize objects allocated to BANK2 (77 bytes)
  4519                           ; load TBLPTR registers with __pidataBANK2
  4520  0139B0  0EB2               	movlw	low __pidataBANK2
  4521  0139B2  6EF6               	movwf	tblptrl,c
  4522  0139B4  0E51               	movlw	high __pidataBANK2
  4523  0139B6  6EF7               	movwf	tblptrh,c
  4524  0139B8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4525  0139BA  6EF8               	movwf	tblptru,c
  4526  0139BC  EE02  F097         	lfsr	0,__pdataBANK2
  4527  0139C0  EE10 F04D          	lfsr	1,77
  4528  0139C4                     copy_data1:
  4529  0139C4  0009               	tblrd		*+
  4530  0139C6  CFF5 FFEE          	movff	tablat,postinc0
  4531  0139CA  50E5               	movf	postdec1,w,c
  4532  0139CC  50E1               	movf	fsr1l,w,c
  4533  0139CE  E1FA               	bnz	copy_data1
  4534                           
  4535                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4536  0139D0  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4537  0139D4  EE14 F000          	lfsr	1,1024
  4538  0139D8                     clear_0:
  4539  0139D8  6AEE               	clrf	postinc0,c
  4540  0139DA  50E5               	movf	postdec1,w,c
  4541  0139DC  50E1               	movf	fsr1l,w,c
  4542  0139DE  E1FC               	bnz	clear_0
  4543  0139E0  50E2               	movf	fsr1h,w,c
  4544  0139E2  E1FA               	bnz	clear_0
  4545                           
  4546                           ; Clear objects allocated to BANK3 (192 bytes)
  4547  0139E4  EE03  F000         	lfsr	0,__pbssBANK3
  4548  0139E8  0EC0               	movlw	192
  4549  0139EA                     clear_1:
  4550  0139EA  6AEE               	clrf	postinc0,c
  4551  0139EC  06E8               	decf	wreg,f,c
  4552  0139EE  E1FD               	bnz	clear_1
  4553                           
  4554                           ; Clear objects allocated to BANK2 (151 bytes)
  4555  0139F0  EE02  F000         	lfsr	0,__pbssBANK2
  4556  0139F4  0E97               	movlw	151
  4557  0139F6                     clear_2:
  4558  0139F6  6AEE               	clrf	postinc0,c
  4559  0139F8  06E8               	decf	wreg,f,c
  4560  0139FA  E1FD               	bnz	clear_2
  4561                           
  4562                           ; Clear objects allocated to BANK1 (196 bytes)
  4563  0139FC  EE01  F000         	lfsr	0,__pbssBANK1
  4564  013A00  0EC4               	movlw	196
  4565  013A02                     clear_3:
  4566  013A02  6AEE               	clrf	postinc0,c
  4567  013A04  06E8               	decf	wreg,f,c
  4568  013A06  E1FD               	bnz	clear_3
  4569                           
  4570                           ; Clear objects allocated to BANK0 (2 bytes)
  4571  013A08  0100               	movlb	0
  4572  013A0A  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4573  013A0C  6BFE               	clrf	__pbssBANK0& (0+255),b
  4574                           
  4575                           ; Clear objects allocated to COMRAM (12 bytes)
  4576  013A0E  EE00  F053         	lfsr	0,__pbssCOMRAM
  4577  013A12  0E0C               	movlw	12
  4578  013A14                     clear_4:
  4579  013A14  6AEE               	clrf	postinc0,c
  4580  013A16  06E8               	decf	wreg,f,c
  4581  013A18  E1FD               	bnz	clear_4
  4582  013A1A                     end_of_initialization:
  4583                           	opt stack 0
  4584  013A1A                     __end_of__initialization:
  4585                           	opt stack 0
  4586  013A1A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4587  013A1C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4588  013A1E  0100               	movlb	0
  4589  013A20  EF7D  F09C         	goto	_main	;jump to C main() function
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           postinc0	equ	0xFEE
  4595                           wreg	equ	0xFE8
  4596                           postdec1	equ	0xFE5
  4597                           fsr1h	equ	0xFE2
  4598                           fsr1l	equ	0xFE1
  4599                           
  4600                           	psect	bssCOMRAM
  4601  000053                     __pbssCOMRAM:
  4602                           	opt stack 0
  4603  000053                     _inPipes:
  4604                           	opt stack 0
  4605  000053                     	ds	6
  4606  000059                     _pBDTEntryEP0OutNext:
  4607                           	opt stack 0
  4608  000059                     	ds	2
  4609  00005B                     _pBDTEntryEP0OutCurrent:
  4610                           	opt stack 0
  4611  00005B                     	ds	2
  4612  00005D                     _USBDeviceState:
  4613                           	opt stack 0
  4614  00005D                     	ds	1
  4615  00005E                     _USTATcopy:
  4616                           	opt stack 0
  4617  00005E                     	ds	1
  4618                           tblptru	equ	0xFF8
  4619                           tblptrh	equ	0xFF7
  4620                           tblptrl	equ	0xFF6
  4621                           tablat	equ	0xFF5
  4622                           postinc0	equ	0xFEE
  4623                           wreg	equ	0xFE8
  4624                           postdec1	equ	0xFE5
  4625                           fsr1h	equ	0xFE2
  4626                           fsr1l	equ	0xFE1
  4627                           
  4628                           	psect	bssBANK0
  4629  0000FE                     __pbssBANK0:
  4630                           	opt stack 0
  4631  0000FE                     _motor_current_speed:
  4632                           	opt stack 0
  4633  0000FE                     	ds	2
  4634                           tblptru	equ	0xFF8
  4635                           tblptrh	equ	0xFF7
  4636                           tblptrl	equ	0xFF6
  4637                           tablat	equ	0xFF5
  4638                           postinc0	equ	0xFEE
  4639                           wreg	equ	0xFE8
  4640                           postdec1	equ	0xFE5
  4641                           fsr1h	equ	0xFE2
  4642                           fsr1l	equ	0xFE1
  4643                           
  4644                           	psect	bssBANK1
  4645  000100                     __pbssBANK1:
  4646                           	opt stack 0
  4647  000100                     _outPipes:
  4648                           	opt stack 0
  4649  000100                     	ds	9
  4650  000109                     _pBDTEntryIn:
  4651                           	opt stack 0
  4652  000109                     	ds	6
  4653  00010F                     _pBDTEntryOut:
  4654                           	opt stack 0
  4655  00010F                     	ds	6
  4656  000115                     _motor_next_speed_check:
  4657                           	opt stack 0
  4658  000115                     	ds	4
  4659  000119                     _motor_final_stepcount:
  4660                           	opt stack 0
  4661  000119                     	ds	4
  4662  00011D                     _motor_current_stepcount:
  4663                           	opt stack 0
  4664  00011D                     	ds	4
  4665  000121                     _LBA:
  4666                           	opt stack 0
  4667  000121                     	ds	4
  4668  000125                     _USB1msTickCount:
  4669                           	opt stack 0
  4670  000125                     	ds	4
  4671  000129                     _config_external:
  4672                           	opt stack 0
  4673  000129                     	ds	3
  4674  00012C                     _config_internal:
  4675                           	opt stack 0
  4676  00012C                     	ds	3
  4677  00012F                     _ep_data_out:
  4678                           	opt stack 0
  4679  00012F                     	ds	3
  4680  000132                     _ep_data_in:
  4681                           	opt stack 0
  4682  000132                     	ds	3
  4683  000135                     _motor_maximum_speed:
  4684                           	opt stack 0
  4685  000135                     	ds	2
  4686  000137                     _USBInHandle:
  4687                           	opt stack 0
  4688  000137                     	ds	2
  4689  000139                     _USBOutHandle:
  4690                           	opt stack 0
  4691  000139                     	ds	2
  4692  00013B                     _TransferLength:
  4693                           	opt stack 0
  4694  00013B                     	ds	2
  4695  00013D                     _gblMediaPresent:
  4696                           	opt stack 0
  4697  00013D                     	ds	2
  4698  00013F                     _USBMSDInHandle:
  4699                           	opt stack 0
  4700  00013F                     	ds	2
  4701  000141                     _USBMSDOutHandle:
  4702                           	opt stack 0
  4703  000141                     	ds	2
  4704  000143                     _ptrNextData:
  4705                           	opt stack 0
  4706  000143                     	ds	2
  4707  000145                     _pDst:
  4708                           	opt stack 0
  4709  000145                     	ds	2
  4710  000147                     _enc2:
  4711                           	opt stack 0
  4712  000147                     	ds	1
  4713  000148                     _enc1:
  4714                           	opt stack 0
  4715  000148                     	ds	1
  4716  000149                     _motor_mode:
  4717                           	opt stack 0
  4718  000149                     	ds	1
  4719  00014A                     _motor_direction:
  4720                           	opt stack 0
  4721  00014A                     	ds	1
  4722  00014B                     _motor_move_type:
  4723                           	opt stack 0
  4724  00014B                     	ds	1
  4725  00014C                     _motor_cue_write_index:
  4726                           	opt stack 0
  4727  00014C                     	ds	1
  4728  00014D                     _motor_cue_read_index:
  4729                           	opt stack 0
  4730  00014D                     	ds	1
  4731  00014E                     _active_configuration:
  4732                           	opt stack 0
  4733  00014E                     	ds	1
  4734  00014F                     _power_state:
  4735                           	opt stack 0
  4736  00014F                     	ds	1
  4737  000150                     _MSDCBWValid:
  4738                           	opt stack 0
  4739  000150                     	ds	1
  4740  000151                     _MSDHostNoData:
  4741                           	opt stack 0
  4742  000151                     	ds	1
  4743  000152                     _SoftDetach:
  4744                           	opt stack 0
  4745  000152                     	ds	1
  4746  000153                     _gblCBWLength:
  4747                           	opt stack 0
  4748  000153                     	ds	1
  4749  000154                     _MSDRetryAttempt:
  4750                           	opt stack 0
  4751  000154                     	ds	1
  4752  000155                     _MSDWriteState:
  4753                           	opt stack 0
  4754  000155                     	ds	1
  4755  000156                     _MSDReadState:
  4756                           	opt stack 0
  4757  000156                     	ds	1
  4758  000157                     _MSDCommandState:
  4759                           	opt stack 0
  4760  000157                     	ds	1
  4761  000158                     _MSD_State:
  4762                           	opt stack 0
  4763  000158                     	ds	1
  4764  000159                     _USBTicksSinceSuspendEnd:
  4765                           	opt stack 0
  4766  000159                     	ds	1
  4767  00015A                     _USBDeferOUTDataStagePackets:
  4768                           	opt stack 0
  4769  00015A                     	ds	1
  4770  00015B                     _USBDeferINDataStagePackets:
  4771                           	opt stack 0
  4772  00015B                     	ds	1
  4773  00015C                     _USBStatusStageEnabledFlag2:
  4774                           	opt stack 0
  4775  00015C                     	ds	1
  4776  00015D                     _USBStatusStageEnabledFlag1:
  4777                           	opt stack 0
  4778  00015D                     	ds	1
  4779  00015E                     _USBDeferStatusStagePacket:
  4780                           	opt stack 0
  4781  00015E                     	ds	1
  4782  00015F                     _USBStatusStageTimeoutCounter:
  4783                           	opt stack 0
  4784  00015F                     	ds	1
  4785  000160                     _BothEP0OutUOWNsSet:
  4786                           	opt stack 0
  4787  000160                     	ds	1
  4788  000161                     _endpoint_number:
  4789                           	opt stack 0
  4790  000161                     	ds	1
  4791  000162                     _USBBusIsSuspended:
  4792                           	opt stack 0
  4793  000162                     	ds	1
  4794  000163                     _RemoteWakeup:
  4795                           	opt stack 0
  4796  000163                     	ds	1
  4797  000164                     _controlTransferState:
  4798                           	opt stack 0
  4799  000164                     	ds	1
  4800  000165                     _shortPacketStatus:
  4801                           	opt stack 0
  4802  000165                     	ds	1
  4803  000166                     _os:
  4804                           	opt stack 0
  4805  000166                     	ds	49
  4806  000197                     _config:
  4807                           	opt stack 0
  4808  000197                     	ds	40
  4809  0001BF                     _USBAlternateInterface:
  4810                           	opt stack 0
  4811  0001BF                     	ds	2
  4812  0001C1                     _active_protocol:
  4813                           	opt stack 0
  4814  0001C1                     	ds	1
  4815  0001C2                     _idle_rate:
  4816                           	opt stack 0
  4817  0001C2                     	ds	1
  4818  0001C3                     _USBActiveConfiguration:
  4819                           	opt stack 0
  4820  0001C3                     	ds	1
  4821                           tblptru	equ	0xFF8
  4822                           tblptrh	equ	0xFF7
  4823                           tblptrl	equ	0xFF6
  4824                           tablat	equ	0xFF5
  4825                           postinc0	equ	0xFEE
  4826                           wreg	equ	0xFE8
  4827                           postdec1	equ	0xFE5
  4828                           fsr1h	equ	0xFE2
  4829                           fsr1l	equ	0xFE1
  4830                           
  4831                           	psect	bssBANK2
  4832  000200                     __pbssBANK2:
  4833                           	opt stack 0
  4834  000200                     _gblCBW:
  4835                           	opt stack 0
  4836  000200                     	ds	31
  4837  00021F                     _gblSenseData:
  4838                           	opt stack 0
  4839  00021F                     	ds	18
  4840  000231                     _params:
  4841                           	opt stack 0
  4842  000231                     	ds	7
  4843  000238                     _gblBLKLen:
  4844                           	opt stack 0
  4845  000238                     	ds	4
  4846  00023C                     _gblNumBLKS:
  4847                           	opt stack 0
  4848  00023C                     	ds	4
  4849  000240                     _MSBBufferIndex:
  4850                           	opt stack 0
  4851  000240                     	ds	2
  4852  000242                     _display_content:
  4853                           	opt stack 0
  4854  000242                     	ds	80
  4855  000292                     _mediaInformation:
  4856                           	opt stack 0
  4857  000292                     	ds	5
  4858                           tblptru	equ	0xFF8
  4859                           tblptrh	equ	0xFF7
  4860                           tblptrl	equ	0xFF6
  4861                           tablat	equ	0xFF5
  4862                           postinc0	equ	0xFEE
  4863                           wreg	equ	0xFE8
  4864                           postdec1	equ	0xFE5
  4865                           fsr1h	equ	0xFE2
  4866                           fsr1l	equ	0xFE1
  4867                           
  4868                           	psect	dataBANK2
  4869  000297                     __pdataBANK2:
  4870                           	opt stack 0
  4871  000297                     _LUN:
  4872                           	opt stack 0
  4873  000297                     	ds	29
  4874  0002B4                     i2c_display_init@F7092:
  4875                           	opt stack 0
  4876  0002B4                     	ds	9
  4877  0002BD                     __i2c_display_send_init_sequence@F7089:
  4878                           	opt stack 0
  4879  0002BD                     	ds	9
  4880  0002C6                     	ds	8
  4881  0002CE                     _configFile_used_name:
  4882                           	opt stack 0
  4883  0002CE                     	ds	8
  4884  0002D6                     _configFile_name:
  4885                           	opt stack 0
  4886  0002D6                     	ds	8
  4887  0002DE                     _configFile_used_extention:
  4888                           	opt stack 0
  4889  0002DE                     	ds	3
  4890  0002E1                     _configFile_extention:
  4891                           	opt stack 0
  4892  0002E1                     	ds	3
  4893                           tblptru	equ	0xFF8
  4894                           tblptrh	equ	0xFF7
  4895                           tblptrl	equ	0xFF6
  4896                           tablat	equ	0xFF5
  4897                           postinc0	equ	0xFEE
  4898                           wreg	equ	0xFE8
  4899                           postdec1	equ	0xFE5
  4900                           fsr1h	equ	0xFE2
  4901                           fsr1l	equ	0xFE1
  4902                           
  4903                           	psect	bssBANK3
  4904  000300                     __pbssBANK3:
  4905                           	opt stack 0
  4906  000300                     _motor_command_cue:
  4907                           	opt stack 0
  4908  000300                     	ds	64
  4909  000340                     _ToSendDataBuffer:
  4910                           	opt stack 0
  4911  000340                     	ds	64
  4912  000380                     _ReceivedDataBuffer:
  4913                           	opt stack 0
  4914  000380                     	ds	64
  4915                           tblptru	equ	0xFF8
  4916                           tblptrh	equ	0xFF7
  4917                           tblptrl	equ	0xFF6
  4918                           tablat	equ	0xFF5
  4919                           postinc0	equ	0xFEE
  4920                           wreg	equ	0xFE8
  4921                           postdec1	equ	0xFE5
  4922                           fsr1h	equ	0xFE2
  4923                           fsr1l	equ	0xFE1
  4924                           
  4925                           	psect	dataBANK4
  4926  000400                     __pdataBANK4:
  4927                           	opt stack 0
  4928  000400                     _dc_startup:
  4929                           	opt stack 0
  4930  000400                     	ds	80
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           postinc0	equ	0xFEE
  4936                           wreg	equ	0xFE8
  4937                           postdec1	equ	0xFE5
  4938                           fsr1h	equ	0xFE2
  4939                           fsr1l	equ	0xFE1
  4940                           
  4941                           	psect	bssBIGRAMll
  4942  000800                     __pbssBIGRAMll:
  4943                           	opt stack 0
  4944  000800                     _ConfigFile_buffer:
  4945                           	opt stack 0
  4946  000800                     	ds	512
  4947  000A00                     _buffer:
  4948                           	opt stack 0
  4949  000A00                     	ds	512
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           postinc0	equ	0xFEE
  4955                           wreg	equ	0xFE8
  4956                           postdec1	equ	0xFE5
  4957                           fsr1h	equ	0xFE2
  4958                           fsr1l	equ	0xFE1
  4959                           
  4960                           	psect	cstackBANK1
  4961  0001C4                     __pcstackBANK1:
  4962                           	opt stack 0
  4963  0001C4                     ??_configFile_read:
  4964                           
  4965                           ; 1 bytes @ 0x0
  4966  0001C4                     	ds	8
  4967  0001CC                     configFile_read@item_string:
  4968                           	opt stack 0
  4969                           
  4970                           ; 31 bytes @ 0x8
  4971  0001CC                     	ds	31
  4972  0001EB                     configFile_read@value_string:
  4973                           	opt stack 0
  4974                           
  4975                           ; 12 bytes @ 0x27
  4976  0001EB                     	ds	12
  4977  0001F7                     configFile_read@file_size:
  4978                           	opt stack 0
  4979                           
  4980                           ; 4 bytes @ 0x33
  4981  0001F7                     	ds	4
  4982  0001FB                     configFile_read@file_number:
  4983                           	opt stack 0
  4984                           
  4985                           ; 1 bytes @ 0x37
  4986  0001FB                     	ds	1
  4987  0001FC                     configFile_read@position:
  4988                           	opt stack 0
  4989                           
  4990                           ; 4 bytes @ 0x38
  4991  0001FC                     	ds	4
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           postinc0	equ	0xFEE
  4997                           wreg	equ	0xFE8
  4998                           postdec1	equ	0xFE5
  4999                           fsr1h	equ	0xFE2
  5000                           fsr1l	equ	0xFE1
  5001                           
  5002                           	psect	cstackBANK0
  5003  000060                     __pcstackBANK0:
  5004                           	opt stack 0
  5005  000060                     ??_motor_stop:
  5006  000060                     ??_isdigit:
  5007  000060                     ??__i2c_wait_idle:
  5008  000060                     ??__display_clear:
  5009  000060                     ??__divide_jump_size_increment:
  5010  000060                     ??__divide_jump_size_decrement:
  5011  000060                     ?_USBTransferOnePacket:
  5012                           	opt stack 0
  5013  000060                     ?_ExternalFlash_MediaInitialize:
  5014                           	opt stack 0
  5015  000060                     ?_ExternalFlash_SectorSizeRead:
  5016                           	opt stack 0
  5017  000060                     ?_strlen:
  5018                           	opt stack 0
  5019  000060                     ?_strncmp:
  5020                           	opt stack 0
  5021  000060                     ?__sector_from_file_number:
  5022                           	opt stack 0
  5023  000060                     ?__offset_from_file_number:
  5024                           	opt stack 0
  5025  000060                     ?__data_sector_from_cluster:
  5026                           	opt stack 0
  5027  000060                     ?__fat_sector_from_cluster:
  5028                           	opt stack 0
  5029  000060                     ?__fat_offset_from_cluster:
  5030                           	opt stack 0
  5031  000060                     ?__cluster_from_sector_and_offset:
  5032                           	opt stack 0
  5033  000060                     ?__get_available_offset_from_buffer:
  5034                           	opt stack 0
  5035  000060                     ?__read_value_from_offset:
  5036                           	opt stack 0
  5037  000060                     ?__get_time:
  5038                           	opt stack 0
  5039  000060                     ?__get_date:
  5040                           	opt stack 0
  5041  000060                     ?__encoder_next_setup_stepsize:
  5042                           	opt stack 0
  5043  000060                     ?__encoder_next_arc_step_size:
  5044                           	opt stack 0
  5045  000060                     ?___wmul:
  5046                           	opt stack 0
  5047  000060                     ?___lwdiv:
  5048                           	opt stack 0
  5049  000060                     ?___lwmod:
  5050                           	opt stack 0
  5051  000060                     ?_ExternalFlash_CapacityRead:
  5052                           	opt stack 0
  5053  000060                     ?__motor_calculate_distance:
  5054                           	opt stack 0
  5055  000060                     ?___lmul:
  5056                           	opt stack 0
  5057  000060                     ?___lldiv:
  5058                           	opt stack 0
  5059  000060                     ?___aldiv:
  5060                           	opt stack 0
  5061  000060                     ?___almod:
  5062                           	opt stack 0
  5063  000060                     ?___fltol:
  5064                           	opt stack 0
  5065  000060                     ?___llmod:
  5066                           	opt stack 0
  5067  000060                     USBTransferOnePacket@dir:
  5068                           	opt stack 0
  5069  000060                     USBStallEndpoint@dir:
  5070                           	opt stack 0
  5071  000060                     __i2c_send@dat:
  5072                           	opt stack 0
  5073  000060                     display_get_character@position:
  5074                           	opt stack 0
  5075  000060                     __encoder_next_divide_step_size@old_stepsize:
  5076                           	opt stack 0
  5077  000060                     toupper@c:
  5078                           	opt stack 0
  5079  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5080                           	opt stack 0
  5081  000060                     SYSTEM_Initialize@pll_startup_counter:
  5082                           	opt stack 0
  5083  000060                     ExternalFlash_MediaInitialize@config:
  5084                           	opt stack 0
  5085  000060                     ExternalFlash_SectorSizeRead@config:
  5086                           	opt stack 0
  5087  000060                     ExternalFlash_CapacityRead@config:
  5088                           	opt stack 0
  5089  000060                     ExternalFlash_MediaDetect@config:
  5090                           	opt stack 0
  5091  000060                     ExternalFlash_WriteProtectStateGet@config:
  5092                           	opt stack 0
  5093  000060                     __data_sector_from_cluster@fat_cluster:
  5094                           	opt stack 0
  5095  000060                     __fat_sector_from_cluster@cluster:
  5096                           	opt stack 0
  5097  000060                     __fat_offset_from_cluster@cluster:
  5098                           	opt stack 0
  5099  000060                     __cluster_from_sector_and_offset@sector:
  5100                           	opt stack 0
  5101  000060                     __get_available_offset_from_buffer@minimum_offset:
  5102                           	opt stack 0
  5103  000060                     __read_value_from_offset@offset:
  5104                           	opt stack 0
  5105  000060                     __write_value_to_offset@offset:
  5106                           	opt stack 0
  5107  000060                     __get_mbr@idx:
  5108                           	opt stack 0
  5109  000060                     __get_fbr@idx:
  5110                           	opt stack 0
  5111  000060                     spi_tx@data:
  5112                           	opt stack 0
  5113  000060                     spi_tx_tx@command:
  5114                           	opt stack 0
  5115  000060                     spi_tx_rx@command:
  5116                           	opt stack 0
  5117  000060                     __fill_buffer_get_mode_details@outBuffer:
  5118                           	opt stack 0
  5119  000060                     motor_change_speed@new_speed:
  5120                           	opt stack 0
  5121  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5122                           	opt stack 0
  5123  000060                     __encoder_next_arc_step_size@old_stepsize:
  5124                           	opt stack 0
  5125  000060                     __get_item@item_string:
  5126                           	opt stack 0
  5127  000060                     ___wmul@multiplier:
  5128                           	opt stack 0
  5129  000060                     ___lwdiv@dividend:
  5130                           	opt stack 0
  5131  000060                     ___lwmod@dividend:
  5132                           	opt stack 0
  5133  000060                     memcpy@d1:
  5134                           	opt stack 0
  5135  000060                     memset@p1:
  5136                           	opt stack 0
  5137  000060                     strlen@s:
  5138                           	opt stack 0
  5139  000060                     strncmp@s1:
  5140                           	opt stack 0
  5141  000060                     __spi_init@details:
  5142                           	opt stack 0
  5143  000060                     __motor_run@distance_in_steps:
  5144                           	opt stack 0
  5145  000060                     __motor_schedule_command@distance_in_steps:
  5146                           	opt stack 0
  5147  000060                     __motor_calculate_distance@target_position:
  5148                           	opt stack 0
  5149  000060                     ___lmul@multiplier:
  5150                           	opt stack 0
  5151  000060                     ___lldiv@dividend:
  5152                           	opt stack 0
  5153  000060                     ___aldiv@dividend:
  5154                           	opt stack 0
  5155  000060                     ___almod@dividend:
  5156                           	opt stack 0
  5157  000060                     ___fltol@f1:
  5158                           	opt stack 0
  5159  000060                     ___llmod@dividend:
  5160                           	opt stack 0
  5161                           
  5162                           ; 4 bytes @ 0x0
  5163  000060                     	ds	1
  5164  000061                     ??_USBStallEndpoint:
  5165  000061                     ??_display_get_character:
  5166  000061                     ?_stricmp:
  5167                           	opt stack 0
  5168  000061                     _isdigit$8422:
  5169                           	opt stack 0
  5170  000061                     USBTransferOnePacket@data:
  5171                           	opt stack 0
  5172  000061                     stricmp@s1:
  5173                           	opt stack 0
  5174                           
  5175                           ; 2 bytes @ 0x1
  5176  000061                     	ds	1
  5177  000062                     ??_MSDComputeDeviceInAndResidue:
  5178  000062                     ??_strlen:
  5179  000062                     ??__fill_buffer_get_mode_details:
  5180  000062                     ??__get_mbr:
  5181  000062                     ??__get_fbr:
  5182  000062                     ??__encoder_next_setup_stepsize:
  5183  000062                     ??__encoder_next_arc_step_size:
  5184  000062                     __display_clear@row:
  5185                           	opt stack 0
  5186  000062                     __sector_from_file_number@file_number:
  5187                           	opt stack 0
  5188  000062                     __offset_from_file_number@file_number:
  5189                           	opt stack 0
  5190  000062                     isdigit@c:
  5191                           	opt stack 0
  5192  000062                     SYSTEM_Initialize@pll_startup_counter_3140:
  5193                           	opt stack 0
  5194  000062                     __cluster_from_sector_and_offset@offset:
  5195                           	opt stack 0
  5196  000062                     __get_available_offset_from_buffer@buffer:
  5197                           	opt stack 0
  5198  000062                     __read_value_from_offset@buffer:
  5199                           	opt stack 0
  5200  000062                     __write_value_to_offset@buffer:
  5201                           	opt stack 0
  5202  000062                     spi_tx@length:
  5203                           	opt stack 0
  5204  000062                     spi_tx_tx@command_length:
  5205                           	opt stack 0
  5206  000062                     spi_tx_rx@command_length:
  5207                           	opt stack 0
  5208  000062                     motor_set_manual_speed@new_speed:
  5209                           	opt stack 0
  5210  000062                     __get_item@value_string:
  5211                           	opt stack 0
  5212  000062                     ___wmul@multiplicand:
  5213                           	opt stack 0
  5214  000062                     ___lwdiv@divisor:
  5215                           	opt stack 0
  5216  000062                     ___lwmod@divisor:
  5217                           	opt stack 0
  5218  000062                     memcpy@s1:
  5219                           	opt stack 0
  5220  000062                     memset@c:
  5221                           	opt stack 0
  5222  000062                     strncmp@s2:
  5223                           	opt stack 0
  5224                           
  5225                           ; 2 bytes @ 0x2
  5226  000062                     	ds	1
  5227  000063                     USBTransferOnePacket@len:
  5228                           	opt stack 0
  5229  000063                     __display_clear@col:
  5230                           	opt stack 0
  5231  000063                     display_get_character@line:
  5232                           	opt stack 0
  5233  000063                     spi_init@configuration:
  5234                           	opt stack 0
  5235  000063                     __sector_from_file_number@sector:
  5236                           	opt stack 0
  5237  000063                     __offset_from_file_number@offset:
  5238                           	opt stack 0
  5239  000063                     stricmp@s2:
  5240                           	opt stack 0
  5241                           
  5242                           ; 2 bytes @ 0x3
  5243  000063                     	ds	1
  5244  000064                     ??_USBTransferOnePacket:
  5245  000064                     ??_spi_tx:
  5246  000064                     ??__motor_calculate_distance:
  5247  000064                     ??__get_available_offset_from_buffer:
  5248  000064                     ??__read_value_from_offset:
  5249  000064                     ??___fltol:
  5250  000064                     SYSTEM_Initialize@state:
  5251                           	opt stack 0
  5252  000064                     ___lwmod@counter:
  5253                           	opt stack 0
  5254  000064                     __write_value_to_offset@value:
  5255                           	opt stack 0
  5256  000064                     spi_tx_tx@data:
  5257                           	opt stack 0
  5258  000064                     spi_tx_rx@data:
  5259                           	opt stack 0
  5260  000064                     __fill_buffer_get_display@outBuffer:
  5261                           	opt stack 0
  5262  000064                     __parse_set_manual_speed@data:
  5263                           	opt stack 0
  5264  000064                     __motor_run@speed:
  5265                           	opt stack 0
  5266  000064                     __motor_schedule_command@speed:
  5267                           	opt stack 0
  5268  000064                     __get_item@buffer:
  5269                           	opt stack 0
  5270  000064                     ___wmul@product:
  5271                           	opt stack 0
  5272  000064                     ___lwdiv@quotient:
  5273                           	opt stack 0
  5274  000064                     memcpy@n:
  5275                           	opt stack 0
  5276  000064                     memset@n:
  5277                           	opt stack 0
  5278  000064                     strlen@cp:
  5279                           	opt stack 0
  5280  000064                     strncmp@len:
  5281                           	opt stack 0
  5282  000064                     ___lmul@multiplicand:
  5283                           	opt stack 0
  5284  000064                     ___lldiv@divisor:
  5285                           	opt stack 0
  5286  000064                     ___aldiv@divisor:
  5287                           	opt stack 0
  5288  000064                     ___almod@divisor:
  5289                           	opt stack 0
  5290  000064                     ___llmod@divisor:
  5291                           	opt stack 0
  5292                           
  5293                           ; 4 bytes @ 0x4
  5294  000064                     	ds	1
  5295  000065                     ??_stricmp:
  5296  000065                     USBStallEndpoint@ep:
  5297                           	opt stack 0
  5298  000065                     __i2c_eeprom_busy@busy:
  5299                           	opt stack 0
  5300  000065                     __i2c_write@data:
  5301                           	opt stack 0
  5302  000065                     __i2c_read@data:
  5303                           	opt stack 0
  5304  000065                     i2c_display_write_fixed@data:
  5305                           	opt stack 0
  5306                           
  5307                           ; 2 bytes @ 0x5
  5308  000065                     	ds	1
  5309  000066                     ??_strncmp:
  5310  000066                     ??__write_value_to_offset:
  5311  000066                     ??__get_item:
  5312  000066                     ?_atoi:
  5313                           	opt stack 0
  5314  000066                     __fill_buffer_get_display@secondHalf:
  5315                           	opt stack 0
  5316  000066                     __motor_run@type:
  5317                           	opt stack 0
  5318  000066                     __motor_schedule_command@type:
  5319                           	opt stack 0
  5320  000066                     ___lwdiv@counter:
  5321                           	opt stack 0
  5322  000066                     stricmp@r:
  5323                           	opt stack 0
  5324  000066                     USBStallEndpoint@p:
  5325                           	opt stack 0
  5326  000066                     __get_available_offset_from_buffer@offset:
  5327                           	opt stack 0
  5328  000066                     spi_tx_tx@data_length:
  5329                           	opt stack 0
  5330  000066                     spi_tx_rx@data_length:
  5331                           	opt stack 0
  5332  000066                     __parse_set_manual_speed@out_buffer:
  5333                           	opt stack 0
  5334  000066                     atoi@s:
  5335                           	opt stack 0
  5336  000066                     memcpy@d:
  5337                           	opt stack 0
  5338  000066                     memset@p:
  5339                           	opt stack 0
  5340                           
  5341                           ; 2 bytes @ 0x6
  5342  000066                     	ds	1
  5343  000067                     ??__fill_buffer_get_display:
  5344  000067                     ??__motor_run:
  5345  000067                     __i2c_write@length:
  5346                           	opt stack 0
  5347  000067                     __i2c_read@length:
  5348                           	opt stack 0
  5349  000067                     i2c_display_write_fixed@length:
  5350                           	opt stack 0
  5351  000067                     __motor_schedule_command@direction:
  5352                           	opt stack 0
  5353  000067                     __read_value_from_offset@value:
  5354                           	opt stack 0
  5355  000067                     utoa@buf:
  5356                           	opt stack 0
  5357                           
  5358                           ; 2 bytes @ 0x7
  5359  000067                     	ds	1
  5360  000068                     ??_spi_tx_rx:
  5361  000068                     ??_spi_tx_tx:
  5362  000068                     ??_atoi:
  5363  000068                     ??__i2c_read:
  5364  000068                     USBDeviceInit@i:
  5365                           	opt stack 0
  5366  000068                     USBTransferOnePacket@ep:
  5367                           	opt stack 0
  5368  000068                     MSDErrorHandler@ErrorCase:
  5369                           	opt stack 0
  5370  000068                     __i2c_write@slave_address:
  5371                           	opt stack 0
  5372  000068                     i2c_display_write_fixed@pos:
  5373                           	opt stack 0
  5374  000068                     __flash_wakeup@command:
  5375                           	opt stack 0
  5376  000068                     __motor_move_back_forth@return_value_1:
  5377                           	opt stack 0
  5378  000068                     __motor_calculate_distance@direction:
  5379                           	opt stack 0
  5380  000068                     ___aldiv@counter:
  5381                           	opt stack 0
  5382  000068                     ___almod@counter:
  5383                           	opt stack 0
  5384  000068                     ___fltol@sign1:
  5385                           	opt stack 0
  5386  000068                     ___llmod@counter:
  5387                           	opt stack 0
  5388  000068                     __parse_set_manual_speed@out_idx_ptr:
  5389                           	opt stack 0
  5390  000068                     memcpy@s:
  5391                           	opt stack 0
  5392  000068                     ___lmul@product:
  5393                           	opt stack 0
  5394  000068                     ___lldiv@quotient:
  5395                           	opt stack 0
  5396                           
  5397                           ; 4 bytes @ 0x8
  5398  000068                     	ds	1
  5399  000069                     MSDErrorHandler@OldMSD_State:
  5400                           	opt stack 0
  5401  000069                     __i2c_write@cntr:
  5402                           	opt stack 0
  5403  000069                     __motor_move_back_forth@return_value_2:
  5404                           	opt stack 0
  5405  000069                     __get_item@value_ctr:
  5406                           	opt stack 0
  5407  000069                     ___aldiv@sign:
  5408                           	opt stack 0
  5409  000069                     ___almod@sign:
  5410                           	opt stack 0
  5411  000069                     ___fltol@exp1:
  5412                           	opt stack 0
  5413  000069                     USBTransferOnePacket@handle:
  5414                           	opt stack 0
  5415  000069                     utoa@val:
  5416                           	opt stack 0
  5417  000069                     __motor_calculate_distance@distance:
  5418                           	opt stack 0
  5419                           
  5420                           ; 4 bytes @ 0x9
  5421  000069                     	ds	1
  5422  00006A                     ??__parse_set_manual_speed:
  5423  00006A                     ??_i2c_display_init:
  5424  00006A                     ?___xxtofl:
  5425                           	opt stack 0
  5426  00006A                     __ic2_display_set_ddram_address@address:
  5427                           	opt stack 0
  5428  00006A                     motor_set_zero@direction:
  5429                           	opt stack 0
  5430  00006A                     __get_item@item_ctr:
  5431                           	opt stack 0
  5432  00006A                     atoi@sign:
  5433                           	opt stack 0
  5434  00006A                     memcpy@tmp:
  5435                           	opt stack 0
  5436  00006A                     __ic2_display_set_cgram_address@data_array:
  5437                           	opt stack 0
  5438  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5439                           	opt stack 0
  5440  00006A                     ___aldiv@quotient:
  5441                           	opt stack 0
  5442  00006A                     ___xxtofl@val:
  5443                           	opt stack 0
  5444                           
  5445                           ; 4 bytes @ 0xA
  5446  00006A                     	ds	1
  5447  00006B                     __motor_run@direction:
  5448                           	opt stack 0
  5449  00006B                     __ic2_display_set_ddram_address@data_array:
  5450                           	opt stack 0
  5451  00006B                     __fill_buffer_get_status@outBuffer:
  5452                           	opt stack 0
  5453  00006B                     __parse_set_manual_speed@new_speed:
  5454                           	opt stack 0
  5455  00006B                     atoi@a:
  5456                           	opt stack 0
  5457  00006B                     utoa@base:
  5458                           	opt stack 0
  5459  00006B                     i2c_display_init@init_sequence:
  5460                           	opt stack 0
  5461                           
  5462                           ; 9 bytes @ 0xB
  5463  00006B                     	ds	1
  5464  00006C                     ?__flash_get_status:
  5465                           	opt stack 0
  5466  00006C                     ?__motor_distance_to_limit:
  5467                           	opt stack 0
  5468  00006C                     ?_atol:
  5469                           	opt stack 0
  5470  00006C                     __fill_buffer_get_display@cntr:
  5471                           	opt stack 0
  5472  00006C                     ___lldiv@counter:
  5473                           	opt stack 0
  5474  00006C                     atol@s:
  5475                           	opt stack 0
  5476                           
  5477                           ; 2 bytes @ 0xC
  5478  00006C                     	ds	1
  5479  00006D                     __ic2_display_set_cgram_address@address:
  5480                           	opt stack 0
  5481  00006D                     i2c_display_cursor@position:
  5482                           	opt stack 0
  5483  00006D                     __fill_buffer_get_display@line:
  5484                           	opt stack 0
  5485  00006D                     utoa@v:
  5486                           	opt stack 0
  5487  00006D                     ultoa@buf:
  5488                           	opt stack 0
  5489                           
  5490                           ; 2 bytes @ 0xD
  5491  00006D                     	ds	1
  5492  00006E                     ??___xxtofl:
  5493  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5494                           	opt stack 0
  5495  00006E                     i2c_display_cursor@line:
  5496                           	opt stack 0
  5497  00006E                     __flash_get_status@command:
  5498                           	opt stack 0
  5499  00006E                     __fill_buffer_get_display@start_line:
  5500                           	opt stack 0
  5501  00006E                     i2c_display_program_custom_character@bit_pattern:
  5502                           	opt stack 0
  5503                           
  5504                           ; 2 bytes @ 0xE
  5505  00006E                     	ds	1
  5506  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5507                           	opt stack 0
  5508  00006F                     __i2c_read@slave_address:
  5509                           	opt stack 0
  5510  00006F                     i2c_display_cursor@address:
  5511                           	opt stack 0
  5512  00006F                     __fill_buffer_get_display@position:
  5513                           	opt stack 0
  5514  00006F                     utoa@c:
  5515                           	opt stack 0
  5516  00006F                     __flash_get_status@status:
  5517                           	opt stack 0
  5518  00006F                     ultoa@val:
  5519                           	opt stack 0
  5520                           
  5521                           ; 4 bytes @ 0xF
  5522  00006F                     	ds	1
  5523  000070                     ??__motor_distance_to_limit:
  5524  000070                     ??_atol:
  5525  000070                     ??_i2c_display_program_custom_character:
  5526  000070                     MSDCheckForErrorCases@DeviceNoData:
  5527                           	opt stack 0
  5528  000070                     __i2c_read@cntr:
  5529                           	opt stack 0
  5530  000070                     display_update@line:
  5531                           	opt stack 0
  5532  000070                     api_prepare@inBuffer:
  5533                           	opt stack 0
  5534  000070                     itoa@buf:
  5535                           	opt stack 0
  5536                           
  5537                           ; 2 bytes @ 0x10
  5538  000070                     	ds	1
  5539  000071                     i2c_eeprom_read@address:
  5540                           	opt stack 0
  5541  000071                     __flash_is_busy@status:
  5542                           	opt stack 0
  5543                           
  5544                           ; 2 bytes @ 0x11
  5545  000071                     	ds	1
  5546  000072                     ___xxtofl@sign:
  5547                           	opt stack 0
  5548  000072                     api_prepare@outBuffer:
  5549                           	opt stack 0
  5550  000072                     itoa@val:
  5551                           	opt stack 0
  5552                           
  5553                           ; 2 bytes @ 0x12
  5554  000072                     	ds	1
  5555  000073                     ___xxtofl@exp:
  5556                           	opt stack 0
  5557  000073                     i2c_eeprom_read@data:
  5558                           	opt stack 0
  5559  000073                     __flash_copy_page_to_buffer@page:
  5560                           	opt stack 0
  5561  000073                     __flash_compare_page_to_buffer@page:
  5562                           	opt stack 0
  5563  000073                     __flash_write_to_buffer@start:
  5564                           	opt stack 0
  5565  000073                     __flash_write_page_from_buffer@page:
  5566                           	opt stack 0
  5567  000073                     __flash_partial_read@page:
  5568                           	opt stack 0
  5569  000073                     ultoa@base:
  5570                           	opt stack 0
  5571  000073                     __flash_set_page_size@command:
  5572                           	opt stack 0
  5573                           
  5574                           ; 4 bytes @ 0x13
  5575  000073                     	ds	1
  5576  000074                     api_prepare@command:
  5577                           	opt stack 0
  5578  000074                     atol@sign:
  5579                           	opt stack 0
  5580  000074                     itoa@base:
  5581                           	opt stack 0
  5582  000074                     __motor_distance_to_limit@distance_to_limit_in_steps:
  5583                           	opt stack 0
  5584  000074                     ___xxtofl@arg:
  5585                           	opt stack 0
  5586  000074                     i2c_display_program_custom_character@data_array:
  5587                           	opt stack 0
  5588                           
  5589                           ; 11 bytes @ 0x14
  5590  000074                     	ds	1
  5591  000075                     i2c_eeprom_read@length:
  5592                           	opt stack 0
  5593  000075                     __flash_copy_page_to_buffer@buffer:
  5594                           	opt stack 0
  5595  000075                     __flash_compare_page_to_buffer@buffer:
  5596                           	opt stack 0
  5597  000075                     __flash_write_page_from_buffer@buffer:
  5598                           	opt stack 0
  5599  000075                     __flash_write_to_buffer@data:
  5600                           	opt stack 0
  5601  000075                     __flash_partial_read@start:
  5602                           	opt stack 0
  5603  000075                     atol@a:
  5604                           	opt stack 0
  5605  000075                     ultoa@v:
  5606                           	opt stack 0
  5607                           
  5608                           ; 4 bytes @ 0x15
  5609  000075                     	ds	1
  5610  000076                     ??_i2c_eeprom_read:
  5611  000076                     ??__flash_copy_page_to_buffer:
  5612  000076                     ??__flash_compare_page_to_buffer:
  5613  000076                     ??__flash_write_page_from_buffer:
  5614  000076                     itoa@cp:
  5615                           	opt stack 0
  5616                           
  5617                           ; 2 bytes @ 0x16
  5618  000076                     	ds	1
  5619  000077                     i2c_eeprom_read@addr:
  5620                           	opt stack 0
  5621  000077                     __flash_set_page_size@size:
  5622                           	opt stack 0
  5623  000077                     __flash_write_to_buffer@data_length:
  5624                           	opt stack 0
  5625  000077                     __flash_partial_read@length:
  5626                           	opt stack 0
  5627                           
  5628                           ; 2 bytes @ 0x17
  5629  000077                     	ds	1
  5630  000078                     ?___fldiv:
  5631                           	opt stack 0
  5632  000078                     ?___flmul:
  5633                           	opt stack 0
  5634  000078                     ?___flneg:
  5635                           	opt stack 0
  5636  000078                     i2c_eeprom_read@slave_address:
  5637                           	opt stack 0
  5638  000078                     __motor_distance_to_limit@direction:
  5639                           	opt stack 0
  5640  000078                     __display_padded_itoa@value:
  5641                           	opt stack 0
  5642  000078                     __display_itoa_u16@value:
  5643                           	opt stack 0
  5644  000078                     ___flge@ff1:
  5645                           	opt stack 0
  5646  000078                     ___flneg@f1:
  5647                           	opt stack 0
  5648  000078                     ___fldiv@b:
  5649                           	opt stack 0
  5650  000078                     ___flmul@b:
  5651                           	opt stack 0
  5652                           
  5653                           ; 4 bytes @ 0x18
  5654  000078                     	ds	1
  5655  000079                     __flash_write_to_buffer@buffer:
  5656                           	opt stack 0
  5657  000079                     atol@c:
  5658                           	opt stack 0
  5659  000079                     ultoa@c:
  5660                           	opt stack 0
  5661  000079                     __flash_compare_page_to_buffer@status:
  5662                           	opt stack 0
  5663  000079                     __flash_partial_read@data:
  5664                           	opt stack 0
  5665  000079                     __flash_copy_page_to_buffer@command:
  5666                           	opt stack 0
  5667  000079                     __flash_write_page_from_buffer@command:
  5668                           	opt stack 0
  5669  000079                     __motor_distance_to_limit@absolute_position_in_steps:
  5670                           	opt stack 0
  5671  000079                     i2c_eeprom_recover_position@buffer:
  5672                           	opt stack 0
  5673                           
  5674                           ; 7 bytes @ 0x19
  5675  000079                     	ds	1
  5676  00007A                     __display_padded_itoa@length:
  5677                           	opt stack 0
  5678  00007A                     __display_itoa_u16@text:
  5679                           	opt stack 0
  5680  00007A                     ltoa@buf:
  5681                           	opt stack 0
  5682  00007A                     __flash_write_to_buffer@command:
  5683                           	opt stack 0
  5684                           
  5685                           ; 4 bytes @ 0x1A
  5686  00007A                     	ds	1
  5687  00007B                     ??__flash_partial_read:
  5688  00007B                     __display_padded_itoa@text:
  5689                           	opt stack 0
  5690  00007B                     __flash_compare_page_to_buffer@command:
  5691                           	opt stack 0
  5692                           
  5693                           ; 4 bytes @ 0x1B
  5694  00007B                     	ds	1
  5695  00007C                     ?___fladd:
  5696                           	opt stack 0
  5697  00007C                     __display_start@cntr:
  5698                           	opt stack 0
  5699  00007C                     ___flge@ff2:
  5700                           	opt stack 0
  5701  00007C                     ___fladd@b:
  5702                           	opt stack 0
  5703  00007C                     ___fldiv@a:
  5704                           	opt stack 0
  5705  00007C                     ___flmul@a:
  5706                           	opt stack 0
  5707  00007C                     ltoa@val:
  5708                           	opt stack 0
  5709                           
  5710                           ; 4 bytes @ 0x1C
  5711  00007C                     	ds	1
  5712  00007D                     ??__display_padded_itoa:
  5713  00007D                     __motor_move_steps@distance_in_steps:
  5714                           	opt stack 0
  5715  00007D                     __motor_decide_direction@target_position_in_steps:
  5716                           	opt stack 0
  5717                           
  5718                           ; 4 bytes @ 0x1D
  5719  00007D                     	ds	2
  5720  00007F                     i2c_display_program_custom_character@address:
  5721                           	opt stack 0
  5722  00007F                     flash_sector_write@page:
  5723                           	opt stack 0
  5724  00007F                     flash_partial_write@page:
  5725                           	opt stack 0
  5726  00007F                     __flash_partial_read@command:
  5727                           	opt stack 0
  5728                           
  5729                           ; 4 bytes @ 0x1F
  5730  00007F                     	ds	1
  5731  000080                     ??___fldiv:
  5732  000080                     ??___flmul:
  5733  000080                     ??___flge:
  5734  000080                     i2c_display_program_custom_character@cntr:
  5735                           	opt stack 0
  5736  000080                     ltoa@base:
  5737                           	opt stack 0
  5738  000080                     ___fladd@a:
  5739                           	opt stack 0
  5740                           
  5741                           ; 4 bytes @ 0x20
  5742  000080                     	ds	1
  5743  000081                     __motor_decide_direction@overshoot:
  5744                           	opt stack 0
  5745  000081                     flash_sector_write@data:
  5746                           	opt stack 0
  5747  000081                     flash_partial_write@start:
  5748                           	opt stack 0
  5749  000081                     __motor_move_steps@speed:
  5750                           	opt stack 0
  5751                           
  5752                           ; 2 bytes @ 0x21
  5753  000081                     	ds	1
  5754  000082                     ltoa@cp:
  5755                           	opt stack 0
  5756  000082                     __motor_decide_direction@distance_to_limit_cw:
  5757                           	opt stack 0
  5758  000082                     __display_padded_itoa@tmp:
  5759                           	opt stack 0
  5760                           
  5761                           ; 10 bytes @ 0x22
  5762  000082                     	ds	1
  5763  000083                     flash_sector_write@match:
  5764                           	opt stack 0
  5765  000083                     __motor_move_steps@overshoot:
  5766                           	opt stack 0
  5767  000083                     flash_partial_write@length:
  5768                           	opt stack 0
  5769  000083                     __flash_partial_read@address:
  5770                           	opt stack 0
  5771                           
  5772                           ; 4 bytes @ 0x23
  5773  000083                     	ds	1
  5774  000084                     ??___fladd:
  5775  000084                     __motor_move_steps@type:
  5776                           	opt stack 0
  5777  000084                     ___flmul@sign:
  5778                           	opt stack 0
  5779  000084                     ExternalFlash_SectorWrite@config:
  5780                           	opt stack 0
  5781  000084                     fat_restore_mbr_fbr@cntr:
  5782                           	opt stack 0
  5783  000084                     __add_item@item_string:
  5784                           	opt stack 0
  5785  000084                     ___fldiv@rem:
  5786                           	opt stack 0
  5787                           
  5788                           ; 4 bytes @ 0x24
  5789  000084                     	ds	1
  5790  000085                     __motor_move_steps@return_value_1:
  5791                           	opt stack 0
  5792  000085                     flash_partial_write@data:
  5793                           	opt stack 0
  5794  000085                     ___flmul@grs:
  5795                           	opt stack 0
  5796                           
  5797                           ; 4 bytes @ 0x25
  5798  000085                     	ds	1
  5799  000086                     __motor_move_steps@return_value_2:
  5800                           	opt stack 0
  5801  000086                     ExternalFlash_SectorWrite@sector_addr:
  5802                           	opt stack 0
  5803  000086                     __motor_decide_direction@distance_to_limit_ccw:
  5804                           	opt stack 0
  5805  000086                     __add_item@value:
  5806                           	opt stack 0
  5807                           
  5808                           ; 4 bytes @ 0x26
  5809  000086                     	ds	1
  5810  000087                     flash_partial_write@match:
  5811                           	opt stack 0
  5812  000087                     flash_sector_read@page:
  5813                           	opt stack 0
  5814  000087                     flash_partial_read@page:
  5815                           	opt stack 0
  5816  000087                     __motor_move_steps@distance_to_limit:
  5817                           	opt stack 0
  5818                           
  5819                           ; 4 bytes @ 0x27
  5820  000087                     	ds	1
  5821  000088                     ___fldiv@sign:
  5822                           	opt stack 0
  5823  000088                     __write_root@data:
  5824                           	opt stack 0
  5825                           
  5826                           ; 2 bytes @ 0x28
  5827  000088                     	ds	1
  5828  000089                     ___flmul@aexp:
  5829                           	opt stack 0
  5830  000089                     flash_sector_read@data:
  5831                           	opt stack 0
  5832  000089                     flash_partial_read@start:
  5833                           	opt stack 0
  5834  000089                     ___fldiv@new_exp:
  5835                           	opt stack 0
  5836                           
  5837                           ; 2 bytes @ 0x29
  5838  000089                     	ds	1
  5839  00008A                     ___flmul@bexp:
  5840                           	opt stack 0
  5841  00008A                     ExternalFlash_SectorWrite@buffer:
  5842                           	opt stack 0
  5843  00008A                     __write_root@sector:
  5844                           	opt stack 0
  5845  00008A                     __add_item@buffer:
  5846                           	opt stack 0
  5847  00008A                     __motor_decide_direction@distance_to_target_cw:
  5848                           	opt stack 0
  5849                           
  5850                           ; 4 bytes @ 0x2A
  5851  00008A                     	ds	1
  5852  00008B                     ??_fat_get_format_status:
  5853  00008B                     ?__get_available_cluster:
  5854                           	opt stack 0
  5855  00008B                     __motor_move_steps@direction:
  5856                           	opt stack 0
  5857  00008B                     flash_partial_read@length:
  5858                           	opt stack 0
  5859  00008B                     ExternalFlash_SectorRead@config:
  5860                           	opt stack 0
  5861  00008B                     __get_available_cluster@first_sector:
  5862                           	opt stack 0
  5863  00008B                     fat_find_file@name:
  5864                           	opt stack 0
  5865  00008B                     ___fldiv@grs:
  5866                           	opt stack 0
  5867  00008B                     ___flmul@prod:
  5868                           	opt stack 0
  5869                           
  5870                           ; 4 bytes @ 0x2B
  5871  00008B                     	ds	1
  5872  00008C                     ??__add_item:
  5873  00008C                     __display_padded_itoa@len:
  5874                           	opt stack 0
  5875  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5876                           	opt stack 0
  5877  00008C                     ___fladd@signs:
  5878                           	opt stack 0
  5879  00008C                     __write_root@offset:
  5880                           	opt stack 0
  5881  00008C                     motor_move_endless@speed:
  5882                           	opt stack 0
  5883  00008C                     motor_move_steps@distance:
  5884                           	opt stack 0
  5885                           
  5886                           ; 4 bytes @ 0x2C
  5887  00008C                     	ds	1
  5888  00008D                     __display_padded_itoa@pos:
  5889                           	opt stack 0
  5890  00008D                     ___fladd@aexp:
  5891                           	opt stack 0
  5892  00008D                     flash_partial_read@data:
  5893                           	opt stack 0
  5894  00008D                     ExternalFlash_SectorWrite@page:
  5895                           	opt stack 0
  5896  00008D                     __get_available_cluster@skip_sector:
  5897                           	opt stack 0
  5898  00008D                     fat_find_file@extension:
  5899                           	opt stack 0
  5900  00008D                     fat_get_format_status@cntr:
  5901                           	opt stack 0
  5902  00008D                     ExternalFlash_SectorRead@sector_addr:
  5903                           	opt stack 0
  5904                           
  5905                           ; 4 bytes @ 0x2D
  5906  00008D                     	ds	1
  5907  00008E                     __display_padded_itoa@padding:
  5908                           	opt stack 0
  5909  00008E                     __write_root@file_number:
  5910                           	opt stack 0
  5911  00008E                     motor_move_endless@direction:
  5912                           	opt stack 0
  5913  00008E                     __add_item@length:
  5914                           	opt stack 0
  5915  00008E                     ___fladd@bexp:
  5916                           	opt stack 0
  5917  00008E                     __motor_decide_direction@distance_to_target_ccw:
  5918                           	opt stack 0
  5919                           
  5920                           ; 4 bytes @ 0x2E
  5921  00008E                     	ds	1
  5922  00008F                     ??_MSDWriteHandler:
  5923  00008F                     ??_fat_find_file:
  5924  00008F                     ?__read_fat:
  5925                           	opt stack 0
  5926  00008F                     ___fladd@grs:
  5927                           	opt stack 0
  5928  00008F                     ___fldiv@bexp:
  5929                           	opt stack 0
  5930  00008F                     __display_signed_itoa@value:
  5931                           	opt stack 0
  5932  00008F                     __get_available_cluster@cluster:
  5933                           	opt stack 0
  5934  00008F                     __root_is_available@root_sector:
  5935                           	opt stack 0
  5936  00008F                     __read_fat@cluster:
  5937                           	opt stack 0
  5938  00008F                     fat_get_file_information@data:
  5939                           	opt stack 0
  5940  00008F                     ___flmul@temp:
  5941                           	opt stack 0
  5942                           
  5943                           ; 2 bytes @ 0x2F
  5944  00008F                     	ds	1
  5945  000090                     ___fldiv@aexp:
  5946                           	opt stack 0
  5947  000090                     motor_move_steps@speed:
  5948                           	opt stack 0
  5949                           
  5950                           ; 2 bytes @ 0x30
  5951  000090                     	ds	1
  5952  000091                     ??_adc_read_temperature:
  5953  000091                     ?__motor_get_speed_in_degrees:
  5954                           	opt stack 0
  5955  000091                     ?__steps_from_degrees:
  5956                           	opt stack 0
  5957  000091                     ?__motor_steps_from_degrees_int:
  5958                           	opt stack 0
  5959  000091                     ?__step_position_from_divide_position:
  5960                           	opt stack 0
  5961  000091                     fat_find_file@file_number:
  5962                           	opt stack 0
  5963  000091                     __display_signed_itoa@text:
  5964                           	opt stack 0
  5965  000091                     ExternalFlash_SectorRead@buffer:
  5966                           	opt stack 0
  5967  000091                     __get_available_cluster@offset:
  5968                           	opt stack 0
  5969  000091                     __root_is_available@offset:
  5970                           	opt stack 0
  5971  000091                     __read_fat@sector:
  5972                           	opt stack 0
  5973  000091                     __motor_steps_from_degrees_int@degrees:
  5974                           	opt stack 0
  5975  000091                     __motor_get_speed_in_degrees@speed_index:
  5976                           	opt stack 0
  5977  000091                     __step_position_from_divide_position@divide_position:
  5978                           	opt stack 0
  5979  000091                     motor_calculate_position_in_degrees@tmp:
  5980                           	opt stack 0
  5981  000091                     __steps_from_degrees@degrees:
  5982                           	opt stack 0
  5983                           
  5984                           ; 4 bytes @ 0x31
  5985  000091                     	ds	1
  5986  000092                     motor_move_steps@overshoot:
  5987                           	opt stack 0
  5988  000092                     fat_find_file@sector:
  5989                           	opt stack 0
  5990  000092                     fat_get_file_information@root_sector:
  5991                           	opt stack 0
  5992  000092                     motor_goto_steps@position:
  5993                           	opt stack 0
  5994                           
  5995                           ; 4 bytes @ 0x32
  5996  000092                     	ds	1
  5997  000093                     ??__motor_get_speed_in_degrees:
  5998  000093                     __root_is_available@file_number:
  5999                           	opt stack 0
  6000  000093                     motor_move_steps@direction:
  6001                           	opt stack 0
  6002  000093                     ExternalFlash_SectorRead@page:
  6003                           	opt stack 0
  6004  000093                     __get_available_cluster@sector:
  6005                           	opt stack 0
  6006  000093                     __read_fat@offset:
  6007                           	opt stack 0
  6008  000093                     adc_read_temperature@adc_result:
  6009                           	opt stack 0
  6010                           
  6011                           ; 2 bytes @ 0x33
  6012  000093                     	ds	1
  6013  000094                     __root_is_available@first_byte:
  6014                           	opt stack 0
  6015  000094                     motor_arc_move@direction:
  6016                           	opt stack 0
  6017  000094                     fat_find_file@offset:
  6018                           	opt stack 0
  6019  000094                     fat_get_file_information@offset:
  6020                           	opt stack 0
  6021  000094                     __parse_jump_steps@data:
  6022                           	opt stack 0
  6023  000094                     __parse_jump_steps_with_overshoot@data:
  6024                           	opt stack 0
  6025                           
  6026                           ; 2 bytes @ 0x34
  6027  000094                     	ds	1
  6028  000095                     ??_MSDReadHandler:
  6029  000095                     ?__make_cluster_chain:
  6030                           	opt stack 0
  6031  000095                     ?_fat_get_file_size:
  6032                           	opt stack 0
  6033  000095                     __get_available_root_entry@file_number:
  6034                           	opt stack 0
  6035  000095                     __make_cluster_chain@first_cluster:
  6036                           	opt stack 0
  6037  000095                     __read_fat@value:
  6038                           	opt stack 0
  6039  000095                     __motor_steps_from_degrees_int@temp:
  6040                           	opt stack 0
  6041  000095                     __motor_get_speed_in_degrees@speed:
  6042                           	opt stack 0
  6043  000095                     __step_position_from_divide_position@target_position:
  6044                           	opt stack 0
  6045  000095                     motor_arc_move@arc_in_steps:
  6046                           	opt stack 0
  6047  000095                     adc_read_temperature@temperature:
  6048                           	opt stack 0
  6049  000095                     __steps_from_degrees@temp:
  6050                           	opt stack 0
  6051                           
  6052                           ; 4 bytes @ 0x35
  6053  000095                     	ds	1
  6054  000096                     fat_get_file_information@file_number:
  6055                           	opt stack 0
  6056  000096                     __parse_jump_steps@out_buffer:
  6057                           	opt stack 0
  6058  000096                     __parse_jump_steps_with_overshoot@out_buffer:
  6059                           	opt stack 0
  6060  000096                     motor_goto_steps@speed:
  6061                           	opt stack 0
  6062                           
  6063                           ; 2 bytes @ 0x36
  6064  000096                     	ds	1
  6065  000097                     ?__find_nth_cluster:
  6066                           	opt stack 0
  6067  000097                     __find_nth_cluster@cluster:
  6068                           	opt stack 0
  6069  000097                     __make_cluster_chain@number_of_clusters:
  6070                           	opt stack 0
  6071                           
  6072                           ; 2 bytes @ 0x37
  6073  000097                     	ds	1
  6074  000098                     motor_goto_steps@overshoot:
  6075                           	opt stack 0
  6076  000098                     __parse_jump_steps@out_idx_ptr:
  6077                           	opt stack 0
  6078  000098                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6079                           	opt stack 0
  6080                           
  6081                           ; 2 bytes @ 0x38
  6082  000098                     	ds	1
  6083  000099                     ??_MSDProcessCommandMediaPresent:
  6084  000099                     ??__make_cluster_chain:
  6085  000099                     __find_nth_cluster@n:
  6086                           	opt stack 0
  6087  000099                     fat_get_file_size@sector:
  6088                           	opt stack 0
  6089  000099                     motor_move_degrees_int@distance:
  6090                           	opt stack 0
  6091  000099                     __parse_item@item_string:
  6092                           	opt stack 0
  6093  000099                     __motor_get_speed_in_degrees@lookup:
  6094                           	opt stack 0
  6095  000099                     motor_goto_steps@distance_in_steps:
  6096                           	opt stack 0
  6097                           
  6098                           ; 4 bytes @ 0x39
  6099  000099                     	ds	1
  6100  00009A                     ??__parse_jump_steps:
  6101  00009A                     ??__parse_jump_steps_with_overshoot:
  6102                           
  6103                           ; 1 bytes @ 0x3A
  6104  00009A                     	ds	1
  6105  00009B                     __parse_jump_steps@return_value:
  6106                           	opt stack 0
  6107  00009B                     __parse_jump_steps_with_overshoot@return_value:
  6108                           	opt stack 0
  6109  00009B                     _MSDProcessCommandMediaPresent$2606:
  6110                           	opt stack 0
  6111  00009B                     __find_nth_cluster@offset:
  6112                           	opt stack 0
  6113  00009B                     __make_cluster_chain@next_offset:
  6114                           	opt stack 0
  6115  00009B                     fat_get_file_size@offset:
  6116                           	opt stack 0
  6117  00009B                     motor_move_degrees_int@speed:
  6118                           	opt stack 0
  6119  00009B                     __parse_item@value_string:
  6120                           	opt stack 0
  6121                           
  6122                           ; 2 bytes @ 0x3B
  6123  00009B                     	ds	1
  6124  00009C                     __parse_jump_steps@number_of_steps:
  6125                           	opt stack 0
  6126  00009C                     __parse_jump_steps_with_overshoot@number_of_steps:
  6127                           	opt stack 0
  6128                           
  6129                           ; 4 bytes @ 0x3C
  6130  00009C                     	ds	1
  6131  00009D                     ?_motor_speed_from_index:
  6132                           	opt stack 0
  6133  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6134                           	opt stack 0
  6135  00009D                     motor_move_degrees_int@overshoot:
  6136                           	opt stack 0
  6137  00009D                     motor_goto_steps@direction:
  6138                           	opt stack 0
  6139  00009D                     __find_nth_cluster@sector_in_buffer:
  6140                           	opt stack 0
  6141  00009D                     __make_cluster_chain@minimum_sector:
  6142                           	opt stack 0
  6143  00009D                     motor_speed_from_index@speed_index:
  6144                           	opt stack 0
  6145  00009D                     fat_get_file_size@file_size:
  6146                           	opt stack 0
  6147                           
  6148                           ; 4 bytes @ 0x3D
  6149  00009D                     	ds	1
  6150  00009E                     ??_motor_divide_jump:
  6151  00009E                     __parse_command_short@cmd:
  6152                           	opt stack 0
  6153  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6154                           	opt stack 0
  6155  00009E                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6156                           	opt stack 0
  6157  00009E                     motor_move_degrees_int@distance_in_steps:
  6158                           	opt stack 0
  6159                           
  6160                           ; 4 bytes @ 0x3E
  6161  00009E                     	ds	1
  6162  00009F                     __display_itoa@value:
  6163                           	opt stack 0
  6164  00009F                     __find_nth_cluster@sector:
  6165                           	opt stack 0
  6166  00009F                     __make_cluster_chain@different_sector_cluster:
  6167                           	opt stack 0
  6168  00009F                     motor_divide_jump@target_position_in_steps:
  6169                           	opt stack 0
  6170                           
  6171                           ; 4 bytes @ 0x3F
  6172  00009F                     	ds	1
  6173  0000A0                     __parse_command_long@data:
  6174                           	opt stack 0
  6175                           
  6176                           ; 2 bytes @ 0x40
  6177  0000A0                     	ds	1
  6178  0000A1                     __display_itoa@decimals:
  6179                           	opt stack 0
  6180  0000A1                     __make_cluster_chain@data_changed:
  6181                           	opt stack 0
  6182  0000A1                     fat_get_file_size@file_number:
  6183                           	opt stack 0
  6184  0000A1                     fat_read_from_file_fast@start_byte:
  6185                           	opt stack 0
  6186  0000A1                     fat_modify_file@start_byte:
  6187                           	opt stack 0
  6188                           
  6189                           ; 4 bytes @ 0x41
  6190  0000A1                     	ds	1
  6191  0000A2                     motor_move_degrees_int@direction:
  6192                           	opt stack 0
  6193  0000A2                     __display_itoa@text:
  6194                           	opt stack 0
  6195  0000A2                     __make_cluster_chain@remaining_clusters:
  6196                           	opt stack 0
  6197  0000A2                     __parse_command_long@out_buffer:
  6198                           	opt stack 0
  6199  0000A2                     motor_divide_jump_to_nearest@nearest_divide_position:
  6200                           	opt stack 0
  6201  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6202                           	opt stack 0
  6203                           
  6204                           ; 4 bytes @ 0x42
  6205  0000A2                     	ds	1
  6206  0000A3                     motor_divide_jump@target_divide_position:
  6207                           	opt stack 0
  6208                           
  6209                           ; 2 bytes @ 0x43
  6210  0000A3                     	ds	1
  6211  0000A4                     ??__display_itoa:
  6212  0000A4                     __make_cluster_chain@sector:
  6213                           	opt stack 0
  6214  0000A4                     __parse_command_long@out_idx_ptr:
  6215                           	opt stack 0
  6216  0000A4                     motor_divide_jump_to_nearest@divide_position_float:
  6217                           	opt stack 0
  6218                           
  6219                           ; 4 bytes @ 0x44
  6220  0000A4                     	ds	1
  6221  0000A5                     fat_modify_file@length:
  6222                           	opt stack 0
  6223  0000A5                     fat_read_from_file_fast@length:
  6224                           	opt stack 0
  6225                           
  6226                           ; 4 bytes @ 0x45
  6227  0000A5                     	ds	1
  6228  0000A6                     MSDProcessCommandMediaPresent@i:
  6229                           	opt stack 0
  6230  0000A6                     __parse_command_long@length:
  6231                           	opt stack 0
  6232  0000A6                     __make_cluster_chain@sector_in_buffer:
  6233                           	opt stack 0
  6234                           
  6235                           ; 2 bytes @ 0x46
  6236  0000A6                     	ds	1
  6237  0000A7                     ??_MSDProcessCommand:
  6238  0000A7                     fat_modify_file@data:
  6239                           	opt stack 0
  6240  0000A7                     api_parse@inBuffer:
  6241                           	opt stack 0
  6242                           
  6243                           ; 2 bytes @ 0x47
  6244  0000A7                     	ds	1
  6245  0000A8                     ??_encoder_statemachine:
  6246  0000A8                     __make_cluster_chain@offset:
  6247                           	opt stack 0
  6248                           
  6249                           ; 2 bytes @ 0x48
  6250  0000A8                     	ds	1
  6251  0000A9                     ??_fat_modify_file:
  6252  0000A9                     api_parse@receivedDataLength:
  6253                           	opt stack 0
  6254  0000A9                     fat_read_from_file_fast@data:
  6255                           	opt stack 0
  6256                           
  6257                           ; 2 bytes @ 0x49
  6258  0000A9                     	ds	1
  6259  0000AA                     __make_cluster_chain@next_cluster:
  6260                           	opt stack 0
  6261  0000AA                     api_parse@outBuffer:
  6262                           	opt stack 0
  6263  0000AA                     __display_itoa@tmp:
  6264                           	opt stack 0
  6265                           
  6266                           ; 10 bytes @ 0x4A
  6267  0000AA                     	ds	1
  6268  0000AB                     fat_read_from_file_fast@cluster:
  6269                           	opt stack 0
  6270                           
  6271                           ; 2 bytes @ 0x4B
  6272  0000AB                     	ds	1
  6273  0000AC                     ??_api_parse:
  6274  0000AC                     ??_MSDTasks:
  6275  0000AC                     fat_create_file@name:
  6276                           	opt stack 0
  6277  0000AC                     fat_resize_file@new_file_size:
  6278                           	opt stack 0
  6279                           
  6280                           ; 4 bytes @ 0x4C
  6281  0000AC                     	ds	1
  6282  0000AD                     _MSDTasks$2588:
  6283                           	opt stack 0
  6284  0000AD                     fat_read_from_file_fast@cluster_number:
  6285                           	opt stack 0
  6286                           
  6287                           ; 2 bytes @ 0x4D
  6288  0000AD                     	ds	1
  6289  0000AE                     fat_create_file@extension:
  6290                           	opt stack 0
  6291  0000AE                     api_parse@out_idx_ptr:
  6292                           	opt stack 0
  6293                           
  6294                           ; 2 bytes @ 0x4E
  6295  0000AE                     	ds	1
  6296  0000AF                     ??_fat_read_from_file_fast:
  6297  0000AF                     _MSDTasks$2589:
  6298                           	opt stack 0
  6299                           
  6300                           ; 2 bytes @ 0x4F
  6301  0000AF                     	ds	1
  6302  0000B0                     ??_fat_resize_file:
  6303  0000B0                     api_parse@out_idx:
  6304                           	opt stack 0
  6305  0000B0                     fat_create_file@size:
  6306                           	opt stack 0
  6307                           
  6308                           ; 4 bytes @ 0x50
  6309  0000B0                     	ds	1
  6310  0000B1                     MSDTasks@i:
  6311                           	opt stack 0
  6312  0000B1                     api_parse@in_idx:
  6313                           	opt stack 0
  6314                           
  6315                           ; 1 bytes @ 0x51
  6316  0000B1                     	ds	1
  6317  0000B2                     
  6318                           ; 1 bytes @ 0x52
  6319  0000B2                     	ds	2
  6320  0000B4                     ??_fat_create_file:
  6321  0000B4                     __display_itoa@len:
  6322                           	opt stack 0
  6323  0000B4                     fat_resize_file@old_number_of_clusters:
  6324                           	opt stack 0
  6325                           
  6326                           ; 2 bytes @ 0x54
  6327  0000B4                     	ds	1
  6328  0000B5                     __display_itoa@missing:
  6329                           	opt stack 0
  6330  0000B5                     fat_modify_file@sector:
  6331                           	opt stack 0
  6332                           
  6333                           ; 2 bytes @ 0x55
  6334  0000B5                     	ds	1
  6335  0000B6                     __display_itoa@pos:
  6336                           	opt stack 0
  6337  0000B6                     fat_resize_file@new_number_of_clusters:
  6338                           	opt stack 0
  6339                           
  6340                           ; 2 bytes @ 0x56
  6341  0000B6                     	ds	1
  6342  0000B7                     fat_modify_file@file_number:
  6343                           	opt stack 0
  6344  0000B7                     __display_itoa_long@value:
  6345                           	opt stack 0
  6346                           
  6347                           ; 4 bytes @ 0x57
  6348  0000B7                     	ds	1
  6349  0000B8                     fat_modify_file@return_code:
  6350                           	opt stack 0
  6351  0000B8                     fat_create_file@number_of_clusters:
  6352                           	opt stack 0
  6353  0000B8                     fat_resize_file@first_cluster:
  6354                           	opt stack 0
  6355                           
  6356                           ; 2 bytes @ 0x58
  6357  0000B8                     	ds	1
  6358  0000B9                     fat_modify_file@cluster:
  6359                           	opt stack 0
  6360                           
  6361                           ; 2 bytes @ 0x59
  6362  0000B9                     	ds	1
  6363  0000BA                     fat_resize_file@file_number:
  6364                           	opt stack 0
  6365  0000BA                     fat_create_file@first_cluster:
  6366                           	opt stack 0
  6367                           
  6368                           ; 2 bytes @ 0x5A
  6369  0000BA                     	ds	1
  6370  0000BB                     __display_itoa_long@decimals:
  6371                           	opt stack 0
  6372  0000BB                     fat_read_from_file_fast@sector:
  6373                           	opt stack 0
  6374  0000BB                     fat_modify_file@offset:
  6375                           	opt stack 0
  6376  0000BB                     fat_resize_file@root:
  6377                           	opt stack 0
  6378                           
  6379                           ; 32 bytes @ 0x5B
  6380  0000BB                     	ds	1
  6381  0000BC                     fat_create_file@file_number:
  6382                           	opt stack 0
  6383  0000BC                     __display_itoa_long@text:
  6384                           	opt stack 0
  6385                           
  6386                           ; 2 bytes @ 0x5C
  6387  0000BC                     	ds	1
  6388  0000BD                     fat_read_from_file_fast@working_cluster:
  6389                           	opt stack 0
  6390  0000BD                     fat_modify_file@number_of_bytes:
  6391                           	opt stack 0
  6392  0000BD                     fat_create_file@root_entry:
  6393                           	opt stack 0
  6394                           
  6395                           ; 32 bytes @ 0x5D
  6396  0000BD                     	ds	1
  6397  0000BE                     ??__display_itoa_long:
  6398                           
  6399                           ; 1 bytes @ 0x5E
  6400  0000BE                     	ds	1
  6401  0000BF                     fat_read_from_file_fast@offset:
  6402                           	opt stack 0
  6403  0000BF                     fat_modify_file@position:
  6404                           	opt stack 0
  6405                           
  6406                           ; 4 bytes @ 0x5F
  6407  0000BF                     	ds	2
  6408  0000C1                     fat_read_from_file_fast@needed_cluster:
  6409                           	opt stack 0
  6410                           
  6411                           ; 2 bytes @ 0x61
  6412  0000C1                     	ds	1
  6413  0000C2                     __display_itoa_long@length:
  6414                           	opt stack 0
  6415                           
  6416                           ; 1 bytes @ 0x62
  6417  0000C2                     	ds	1
  6418  0000C3                     __display_itoa_long@short_value:
  6419                           	opt stack 0
  6420  0000C3                     fat_read_from_file_fast@read_length:
  6421                           	opt stack 0
  6422  0000C3                     fat_modify_file@root:
  6423                           	opt stack 0
  6424                           
  6425                           ; 32 bytes @ 0x63
  6426  0000C3                     	ds	2
  6427  0000C5                     __display_itoa_long@last_digit:
  6428                           	opt stack 0
  6429  0000C5                     fat_read_from_file_fast@position:
  6430                           	opt stack 0
  6431                           
  6432                           ; 4 bytes @ 0x65
  6433  0000C5                     	ds	1
  6434  0000C6                     ??_display_prepare:
  6435                           
  6436                           ; 1 bytes @ 0x66
  6437  0000C6                     	ds	2
  6438  0000C8                     display_prepare@temp:
  6439                           	opt stack 0
  6440                           
  6441                           ; 10 bytes @ 0x68
  6442  0000C8                     	ds	1
  6443  0000C9                     fat_read_from_file@start_byte:
  6444                           	opt stack 0
  6445                           
  6446                           ; 4 bytes @ 0x69
  6447  0000C9                     	ds	4
  6448  0000CD                     fat_read_from_file@length:
  6449                           	opt stack 0
  6450                           
  6451                           ; 4 bytes @ 0x6D
  6452  0000CD                     	ds	4
  6453  0000D1                     fat_read_from_file@data:
  6454                           	opt stack 0
  6455                           
  6456                           ; 2 bytes @ 0x71
  6457  0000D1                     	ds	1
  6458  0000D2                     display_prepare@space:
  6459                           	opt stack 0
  6460                           
  6461                           ; 1 bytes @ 0x72
  6462  0000D2                     	ds	1
  6463  0000D3                     ??_fat_read_from_file:
  6464  0000D3                     display_prepare@cntr:
  6465                           	opt stack 0
  6466                           
  6467                           ; 1 bytes @ 0x73
  6468  0000D3                     	ds	4
  6469  0000D7                     fat_read_from_file@file_number:
  6470                           	opt stack 0
  6471                           
  6472                           ; 1 bytes @ 0x77
  6473  0000D7                     	ds	1
  6474  0000D8                     fat_read_from_file@return_code:
  6475                           	opt stack 0
  6476                           
  6477                           ; 1 bytes @ 0x78
  6478  0000D8                     	ds	1
  6479  0000D9                     fat_read_from_file@cluster:
  6480                           	opt stack 0
  6481                           
  6482                           ; 2 bytes @ 0x79
  6483  0000D9                     	ds	2
  6484  0000DB                     fat_read_from_file@cluster_number:
  6485                           	opt stack 0
  6486                           
  6487                           ; 2 bytes @ 0x7B
  6488  0000DB                     	ds	2
  6489  0000DD                     fat_read_from_file@root:
  6490                           	opt stack 0
  6491                           
  6492                           ; 32 bytes @ 0x7D
  6493  0000DD                     	ds	6
  6494  0000E3                     ??_configFile_write:
  6495                           
  6496                           ; 1 bytes @ 0x83
  6497  0000E3                     	ds	1
  6498  0000E4                     configFile_write@file_number:
  6499                           	opt stack 0
  6500                           
  6501                           ; 1 bytes @ 0x84
  6502  0000E4                     	ds	1
  6503  0000E5                     configFile_write@file_size:
  6504                           	opt stack 0
  6505                           
  6506                           ; 4 bytes @ 0x85
  6507  0000E5                     	ds	24
  6508  0000FD                     main@startup_timer:
  6509                           	opt stack 0
  6510                           
  6511                           ; 1 bytes @ 0x9D
  6512  0000FD                     	ds	1
  6513                           tblptru	equ	0xFF8
  6514                           tblptrh	equ	0xFF7
  6515                           tblptrl	equ	0xFF6
  6516                           tablat	equ	0xFF5
  6517                           postinc0	equ	0xFEE
  6518                           wreg	equ	0xFE8
  6519                           postdec1	equ	0xFE5
  6520                           fsr1h	equ	0xFE2
  6521                           fsr1l	equ	0xFE1
  6522                           
  6523                           	psect	cstackCOMRAM
  6524  000001                     __pcstackCOMRAM:
  6525                           	opt stack 0
  6526  000001                     ??_USBStdGetDscHandler:
  6527  000001                     ??_USBStdGetStatusHandler:
  6528  000001                     ??i2__i2c_wait_idle:
  6529  000001                     ?i2_USBTransferOnePacket:
  6530                           	opt stack 0
  6531  000001                     ?i2_ExternalFlash_MediaInitialize:
  6532                           	opt stack 0
  6533  000001                     USBConfigureEndpoint@direction:
  6534                           	opt stack 0
  6535  000001                     USBCtrlTrfTxService@byteToSend:
  6536                           	opt stack 0
  6537  000001                     USBCtrlTrfRxService@i:
  6538                           	opt stack 0
  6539  000001                     i2USBTransferOnePacket@dir:
  6540                           	opt stack 0
  6541  000001                     i2USBStallEndpoint@dir:
  6542                           	opt stack 0
  6543  000001                     i2__i2c_send@dat:
  6544                           	opt stack 0
  6545  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6546                           	opt stack 0
  6547  000001                     i2ExternalFlash_MediaInitialize@config:
  6548                           	opt stack 0
  6549  000001                     i2ExternalFlash_MediaDetect@config:
  6550                           	opt stack 0
  6551  000001                     i2memcpy@d1:
  6552                           	opt stack 0
  6553  000001                     i2memset@p1:
  6554                           	opt stack 0
  6555                           
  6556                           ; 2 bytes @ 0x0
  6557  000001                     	ds	1
  6558  000002                     ??_USBConfigureEndpoint:
  6559  000002                     ??i2_USBStallEndpoint:
  6560  000002                     USBCtrlTrfRxService@byteToRead:
  6561                           	opt stack 0
  6562  000002                     USBCtrlTrfInHandler@lastDTS:
  6563                           	opt stack 0
  6564  000002                     USBStdGetStatusHandler@p:
  6565                           	opt stack 0
  6566  000002                     i2USBTransferOnePacket@data:
  6567                           	opt stack 0
  6568                           
  6569                           ; 2 bytes @ 0x1
  6570  000002                     	ds	1
  6571  000003                     i2SYSTEM_Initialize@pll_startup_counter_3140:
  6572                           	opt stack 0
  6573  000003                     i2memcpy@s1:
  6574                           	opt stack 0
  6575  000003                     i2memset@c:
  6576                           	opt stack 0
  6577                           
  6578                           ; 2 bytes @ 0x2
  6579  000003                     	ds	1
  6580  000004                     i2USBTransferOnePacket@len:
  6581                           	opt stack 0
  6582                           
  6583                           ; 1 bytes @ 0x3
  6584  000004                     	ds	1
  6585  000005                     ??i2_USBTransferOnePacket:
  6586  000005                     i2SYSTEM_Initialize@state:
  6587                           	opt stack 0
  6588  000005                     i2memcpy@n:
  6589                           	opt stack 0
  6590  000005                     i2memset@n:
  6591                           	opt stack 0
  6592                           
  6593                           ; 2 bytes @ 0x4
  6594  000005                     	ds	1
  6595  000006                     USBConfigureEndpoint@EPNum:
  6596                           	opt stack 0
  6597  000006                     i2USBStallEndpoint@ep:
  6598                           	opt stack 0
  6599  000006                     i2__i2c_eeprom_busy@busy:
  6600                           	opt stack 0
  6601  000006                     i2__i2c_write@data:
  6602                           	opt stack 0
  6603                           
  6604                           ; 2 bytes @ 0x5
  6605  000006                     	ds	1
  6606  000007                     USBConfigureEndpoint@handle:
  6607                           	opt stack 0
  6608  000007                     i2USBStallEndpoint@p:
  6609                           	opt stack 0
  6610  000007                     i2memcpy@d:
  6611                           	opt stack 0
  6612  000007                     i2memset@p:
  6613                           	opt stack 0
  6614                           
  6615                           ; 2 bytes @ 0x6
  6616  000007                     	ds	1
  6617  000008                     i2__i2c_write@length:
  6618                           	opt stack 0
  6619                           
  6620                           ; 1 bytes @ 0x7
  6621  000008                     	ds	1
  6622  000009                     USBEnableEndpoint@options:
  6623                           	opt stack 0
  6624  000009                     i2USBDeviceInit@i:
  6625                           	opt stack 0
  6626  000009                     i2USBTransferOnePacket@ep:
  6627                           	opt stack 0
  6628  000009                     i2__i2c_write@slave_address:
  6629                           	opt stack 0
  6630  000009                     i2memcpy@s:
  6631                           	opt stack 0
  6632                           
  6633                           ; 2 bytes @ 0x8
  6634  000009                     	ds	1
  6635  00000A                     i2__i2c_write@cntr:
  6636                           	opt stack 0
  6637  00000A                     USBEnableEndpoint@p:
  6638                           	opt stack 0
  6639  00000A                     i2USBTransferOnePacket@handle:
  6640                           	opt stack 0
  6641                           
  6642                           ; 2 bytes @ 0x9
  6643  00000A                     	ds	1
  6644  00000B                     i2memcpy@tmp:
  6645                           	opt stack 0
  6646  00000B                     i2c_eeprom_write@address:
  6647                           	opt stack 0
  6648                           
  6649                           ; 2 bytes @ 0xA
  6650  00000B                     	ds	1
  6651  00000C                     ??_USBMSDInit:
  6652  00000C                     USBEnableEndpoint@ep:
  6653                           	opt stack 0
  6654  00000C                     _USBCheckMSDRequest$2534:
  6655                           	opt stack 0
  6656  00000C                     MSDTransferTerminated@handle:
  6657                           	opt stack 0
  6658                           
  6659                           ; 2 bytes @ 0xB
  6660  00000C                     	ds	1
  6661  00000D                     i2c_eeprom_write@data:
  6662                           	opt stack 0
  6663                           
  6664                           ; 2 bytes @ 0xC
  6665  00000D                     	ds	1
  6666  00000E                     _USBCheckMSDRequest$2535:
  6667                           	opt stack 0
  6668  00000E                     _MSDTransferTerminated$2623:
  6669                           	opt stack 0
  6670                           
  6671                           ; 2 bytes @ 0xD
  6672  00000E                     	ds	1
  6673  00000F                     i2c_eeprom_write@length:
  6674                           	opt stack 0
  6675                           
  6676                           ; 1 bytes @ 0xE
  6677  00000F                     	ds	1
  6678  000010                     ??_i2c_eeprom_write:
  6679  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6680                           	opt stack 0
  6681                           
  6682                           ; 2 bytes @ 0xF
  6683  000010                     	ds	2
  6684  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6685                           	opt stack 0
  6686                           
  6687                           ; 2 bytes @ 0x11
  6688  000012                     	ds	1
  6689  000013                     i2c_eeprom_write@dat:
  6690                           	opt stack 0
  6691                           
  6692                           ; 17 bytes @ 0x12
  6693  000013                     	ds	1
  6694  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6695                           	opt stack 0
  6696                           
  6697                           ; 2 bytes @ 0x13
  6698  000014                     	ds	2
  6699  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6700                           
  6701                           ; 1 bytes @ 0x15
  6702  000016                     	ds	2
  6703  000018                     ??_USBStdFeatureReqHandler:
  6704  000018                     USBStdSetCfgHandler@i:
  6705                           	opt stack 0
  6706                           
  6707                           ; 1 bytes @ 0x17
  6708  000018                     	ds	1
  6709  000019                     USBStdFeatureReqHandler@pUEP:
  6710                           	opt stack 0
  6711                           
  6712                           ; 2 bytes @ 0x18
  6713  000019                     	ds	2
  6714  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6715                           	opt stack 0
  6716                           
  6717                           ; 1 bytes @ 0x1A
  6718  00001B                     	ds	1
  6719  00001C                     USBStdFeatureReqHandler@p:
  6720                           	opt stack 0
  6721                           
  6722                           ; 2 bytes @ 0x1B
  6723  00001C                     	ds	2
  6724  00001E                     ??_USBCtrlEPService:
  6725  00001E                     
  6726                           ; 1 bytes @ 0x1D
  6727  00001E                     	ds	1
  6728  00001F                     USBDeviceTasks@i:
  6729                           	opt stack 0
  6730                           
  6731                           ; 1 bytes @ 0x1E
  6732  00001F                     	ds	5
  6733  000024                     i2c_eeprom_write@slave_address:
  6734                           	opt stack 0
  6735                           
  6736                           ; 1 bytes @ 0x23
  6737  000024                     	ds	1
  6738  000025                     i2c_eeprom_write@cntr:
  6739                           	opt stack 0
  6740                           
  6741                           ; 1 bytes @ 0x24
  6742  000025                     	ds	1
  6743  000026                     i2c_eeprom_save_position@buffer:
  6744                           	opt stack 0
  6745                           
  6746                           ; 7 bytes @ 0x25
  6747  000026                     	ds	7
  6748  00002D                     ??_motor_isr:
  6749                           
  6750                           ; 1 bytes @ 0x2C
  6751  00002D                     	ds	16
  6752  00003D                     motor_isr@steps_until_standstill:
  6753                           	opt stack 0
  6754                           
  6755                           ; 2 bytes @ 0x3C
  6756  00003D                     	ds	2
  6757  00003F                     motor_isr@steps_until_standstill_if_accelerate:
  6758                           	opt stack 0
  6759                           
  6760                           ; 2 bytes @ 0x3E
  6761  00003F                     	ds	2
  6762  000041                     motor_isr@steps_remaining:
  6763                           	opt stack 0
  6764                           
  6765                           ; 4 bytes @ 0x40
  6766  000041                     	ds	4
  6767  000045                     ??_SYS_InterruptHigh:
  6768                           
  6769                           ; 1 bytes @ 0x44
  6770  000045                     	ds	14
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           postinc0	equ	0xFEE
  6776                           wreg	equ	0xFE8
  6777                           postdec1	equ	0xFE5
  6778                           fsr1h	equ	0xFE2
  6779                           fsr1l	equ	0xFE1
  6780                           
  6781 ;;
  6782 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6783 ;;
  6784 ;; *************** function _main *****************
  6785 ;; Defined at:
  6786 ;;		line 49 in file "main.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;		None
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;Total ram usage:        1 bytes
  6805 ;; Hardware stack levels required when called:   22
  6806 ;; This function calls:
  6807 ;;		_APP_DeviceCustomHIDTasks
  6808 ;;		_APP_DeviceMSDTasks
  6809 ;;		_SYSTEM_Initialize
  6810 ;;		_USBDeviceAttach
  6811 ;;		_USBDeviceInit
  6812 ;;		_adc_read_temperature
  6813 ;;		_display_prepare
  6814 ;;		_display_update
  6815 ;;		_encoder_statemachine
  6816 ;;		_motor_calculate_position_in_degrees
  6817 ;;		_motor_process_cue
  6818 ;;		_system_init
  6819 ;; This function is called by:
  6820 ;;		Startup code after reset
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text0
  6825  0138FA                     __ptext0:
  6826                           	opt stack 0
  6827  0138FA                     _main:
  6828                           	opt stack 9
  6829                           
  6830                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6831                           
  6832                           ;incstack = 0
  6833  0138FA  ECD7  F082         	call	_system_init	;wreg free
  6834                           
  6835                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6836  0138FE  0E00               	movlw	0
  6837  013900  EC34  F0A5         	call	_SYSTEM_Initialize
  6838                           
  6839                           ;main.c: 59: USBDeviceInit();
  6840  013904  EC6A  F07E         	call	_USBDeviceInit	;wreg free
  6841                           
  6842                           ;main.c: 60: USBDeviceAttach();
  6843  013908  ECEC  F0AB         	call	_USBDeviceAttach	;wreg free
  6844                           
  6845                           ;main.c: 63: startup_timer = 150;
  6846  01390C  0E96               	movlw	150
  6847  01390E  0100               	movlb	0	; () banked
  6848  013910  6FFD               	movwf	main@startup_timer& (0+255),b
  6849                           
  6850                           ;main.c: 64: while(startup_timer)
  6851  013912  D00D               	goto	l863
  6852  013914                     
  6853                           ; BSR set to: 0
  6854                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6855                           
  6856                           ; BSR set to: 0
  6857  013914  EC9E  F0AE         	call	_APP_DeviceMSDTasks	;wreg free
  6858                           
  6859                           ;main.c: 69: if(!os.done)
  6860  013918  0101               	movlb	1	; () banked
  6861  01391A  5168               	movf	(_os+2)& (0+255),w,b	;volatile
  6862  01391C  A4D8               	btfss	status,2,c
  6863  01391E  D007               	goto	l863
  6864                           
  6865                           ; BSR set to: 1
  6866                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6867  013920  EC07  F09A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6868                           
  6869                           ;main.c: 74: --startup_timer;
  6870  013924  0100               	movlb	0	; () banked
  6871  013926  07FD               	decf	main@startup_timer& (0+255),f,b
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;main.c: 75: os.done = 1;
  6875  013928  0E01               	movlw	1
  6876  01392A  0101               	movlb	1	; () banked
  6877  01392C  6F68               	movwf	(_os+2)& (0+255),b	;volatile
  6878  01392E                     l863:
  6879                           
  6880                           ; BSR set to: 1
  6881                           
  6882                           ; BSR set to: 1
  6883  01392E  0100               	movlb	0	; () banked
  6884  013930  51FD               	movf	main@startup_timer& (0+255),w,b
  6885  013932  A4D8               	btfss	status,2,c
  6886  013934  D7EF               	goto	l862
  6887  013936                     u19280:
  6888                           
  6889                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6890                           
  6891                           ; BSR set to: 0
  6892                           
  6893                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6894                           
  6895                           ; BSR set to: 0
  6896  013936  EC9E  F0AE         	call	_APP_DeviceMSDTasks	;wreg free
  6897                           
  6898                           ;main.c: 85: if(!os.done)
  6899  01393A  0101               	movlb	1	; () banked
  6900  01393C  5168               	movf	(_os+2)& (0+255),w,b	;volatile
  6901  01393E  A4D8               	btfss	status,2,c
  6902  013940  D7FA               	goto	u19280
  6903                           
  6904                           ; BSR set to: 1
  6905  013942  0004               	clrwdt		;# 
  6906                           
  6907                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6908  013944  EC07  F09A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6909                           
  6910                           ;main.c: 94: encoder_statemachine();
  6911  013948  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6912                           
  6913                           ;main.c: 97: motor_process_cue();
  6914  01394C  ECFE  F09A         	call	_motor_process_cue	;wreg free
  6915                           
  6916                           ;main.c: 100: adc_read_temperature();
  6917  013950  ECE4  F074         	call	_adc_read_temperature	;wreg free
  6918                           
  6919                           ;main.c: 103: switch(os.timeSlot)
  6920  013954  D008               	goto	l867
  6921  013956                     
  6922                           ;main.c: 114: motor_calculate_position_in_degrees();
  6923  013956  EC24  F091         	call	_motor_calculate_position_in_degrees	;wreg free
  6924  01395A                     
  6925                           ;main.c: 117: display_prepare();
  6926  01395A  EC98  F051         	call	_display_prepare	;wreg free
  6927                           
  6928                           ;main.c: 118: break;
  6929  01395E  D014               	goto	l869
  6930  013960                     
  6931                           ;main.c: 121: display_update();
  6932  013960  EC31  F0AB         	call	_display_update	;wreg free
  6933                           
  6934                           ;main.c: 123: }
  6935                           
  6936                           ;main.c: 122: break;
  6937  013964  D011               	goto	l869
  6938  013966                     l867:
  6939  013966  0101               	movlb	1	; () banked
  6940  013968  5167               	movf	(_os+1)& (0+255),w,b	;volatile
  6941                           
  6942                           ; Switch size 1, requested type "space"
  6943                           ; Number of cases is 5, Range of values is 0 to 7
  6944                           ; switch strategies available:
  6945                           ; Name         Instructions Cycles
  6946                           ; simple_byte           16     9 (average)
  6947                           ;	Chosen strategy is simple_byte
  6948  01396A  0A00               	xorlw	0	; case 0
  6949  01396C  B4D8               	btfsc	status,2,c
  6950  01396E  D00C               	goto	l869
  6951  013970  0A01               	xorlw	1	; case 1
  6952  013972  B4D8               	btfsc	status,2,c
  6953  013974  D009               	goto	l869
  6954  013976  0A04               	xorlw	4	; case 5
  6955  013978  B4D8               	btfsc	status,2,c
  6956  01397A  D7ED               	goto	l871
  6957  01397C  0A03               	xorlw	3	; case 6
  6958  01397E  B4D8               	btfsc	status,2,c
  6959  013980  D7EC               	goto	l872
  6960  013982  0A01               	xorlw	1	; case 7
  6961  013984  B4D8               	btfsc	status,2,c
  6962  013986  D7EC               	goto	l873
  6963  013988                     l869:
  6964                           
  6965                           ;main.c: 125: os.done = 1;
  6966                           
  6967                           ; BSR set to: 1
  6968  013988  0E01               	movlw	1
  6969  01398A  0101               	movlb	1	; () banked
  6970  01398C  6F68               	movwf	(_os+2)& (0+255),b	;volatile
  6971                           
  6972                           ; BSR set to: 1
  6973                           
  6974                           ; BSR set to: 1
  6975  01398E  D7D3               	goto	u19280
  6976  013990                     __end_of_main:
  6977                           	opt stack 0
  6978                           tblptru	equ	0xFF8
  6979                           tblptrh	equ	0xFF7
  6980                           tblptrl	equ	0xFF6
  6981                           tablat	equ	0xFF5
  6982                           postinc0	equ	0xFEE
  6983                           wreg	equ	0xFE8
  6984                           postdec1	equ	0xFE5
  6985                           fsr1h	equ	0xFE2
  6986                           fsr1l	equ	0xFE1
  6987                           status	equ	0xFD8
  6988                           
  6989 ;; *************** function _system_init *****************
  6990 ;; Defined at:
  6991 ;;		line 177 in file "os.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;Total ram usage:        0 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:   20
  7012 ;; This function calls:
  7013 ;;		__backlight_init
  7014 ;;		__system_pin_setup
  7015 ;;		__system_timer0_init
  7016 ;;		_adc_init
  7017 ;;		_configFile_read
  7018 ;;		_configFile_readDefault
  7019 ;;		_configFile_write
  7020 ;;		_display_init
  7021 ;;		_display_update
  7022 ;;		_encoder_init
  7023 ;;		_fat_init
  7024 ;;		_flash_init
  7025 ;;		_i2c_eeprom_recover_position
  7026 ;;		_i2c_init
  7027 ;;		_motor_calculate_position_in_degrees
  7028 ;;		_motor_init
  7029 ;; This function is called by:
  7030 ;;		_main
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text1
  7035  0105AE                     __ptext1:
  7036                           	opt stack 0
  7037  0105AE                     _system_init:
  7038                           	opt stack 10
  7039                           
  7040                           ;os.c: 180: _system_pin_setup();
  7041                           
  7042                           ; BSR set to: 1
  7043                           ;incstack = 0
  7044  0105AE  ECC1  F0A2         	call	__system_pin_setup	;wreg free
  7045                           
  7046                           ;os.c: 183: adc_init();
  7047  0105B2  ECE7  F0A5         	call	_adc_init	;wreg free
  7048                           
  7049                           ;os.c: 186: flash_init();
  7050  0105B6  ECBF  F0AE         	call	_flash_init	;wreg free
  7051                           
  7052                           ;os.c: 189: fat_init();
  7053  0105BA  ECA7  F0AE         	call	_fat_init	;wreg free
  7054                           
  7055                           ;os.c: 192: encoder_init();
  7056  0105BE  ECA2  F0AD         	call	_encoder_init	;wreg free
  7057                           
  7058                           ;os.c: 195: i2c_init();
  7059  0105C2  EC3B  F0AE         	call	_i2c_init	;wreg free
  7060                           
  7061                           ;os.c: 198: display_init();
  7062  0105C6  ECDB  F0AA         	call	_display_init	;wreg free
  7063                           
  7064                           ;os.c: 199: display_update();
  7065  0105CA  EC31  F0AB         	call	_display_update	;wreg free
  7066                           
  7067                           ;os.c: 200: _backlight_init();
  7068  0105CE  EC16  F0AF         	call	__backlight_init	;wreg free
  7069                           
  7070                           ;os.c: 203: motor_init();
  7071  0105D2  EC2C  F0AE         	call	_motor_init	;wreg free
  7072                           
  7073                           ;os.c: 206: configFile_readDefault();
  7074  0105D6  EC3D  F0A1         	call	_configFile_readDefault	;wreg free
  7075                           
  7076                           ;os.c: 209: configFile_read();
  7077  0105DA  EC5A  F079         	call	_configFile_read	;wreg free
  7078                           
  7079                           ;os.c: 212: configFile_write();
  7080  0105DE  EC99  F062         	call	_configFile_write	;wreg free
  7081                           
  7082                           ;os.c: 215: os.subTimeSlot = 0;
  7083  0105E2  0E00               	movlw	0
  7084  0105E4  0101               	movlb	1	; () banked
  7085  0105E6  6F66               	movwf	_os& (0+255),b	;volatile
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;os.c: 216: os.timeSlot = 0;
  7089  0105E8  0E00               	movlw	0
  7090  0105EA  6F67               	movwf	(_os+1)& (0+255),b	;volatile
  7091                           
  7092                           ; BSR set to: 1
  7093                           ;os.c: 217: os.done = 0;
  7094  0105EC  0E00               	movlw	0
  7095  0105EE  6F68               	movwf	(_os+2)& (0+255),b	;volatile
  7096                           
  7097                           ; BSR set to: 1
  7098                           ;os.c: 218: os.encoder1Count = 0;
  7099  0105F0  0E00               	movlw	0
  7100  0105F2  6F69               	movwf	(_os+3)& (0+255),b	;volatile
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;os.c: 219: os.button1 = 0;
  7104  0105F4  0E00               	movlw	0
  7105  0105F6  6F6A               	movwf	(_os+4)& (0+255),b	;volatile
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;os.c: 220: os.encoder2Count = 0;
  7109  0105F8  0E00               	movlw	0
  7110  0105FA  6F6B               	movwf	(_os+5)& (0+255),b	;volatile
  7111                           
  7112                           ; BSR set to: 1
  7113                           ;os.c: 221: os.button2 = 0;
  7114  0105FC  0E00               	movlw	0
  7115  0105FE  6F6C               	movwf	(_os+6)& (0+255),b	;volatile
  7116                           
  7117                           ; BSR set to: 1
  7118                           ;os.c: 222: os.current_position_in_steps = 0;
  7119  010600  0E00               	movlw	0
  7120  010602  6F6D               	movwf	(_os+7)& (0+255),b	;volatile
  7121  010604  0E00               	movlw	0
  7122  010606  6F6E               	movwf	(_os+8)& (0+255),b	;volatile
  7123  010608  0E00               	movlw	0
  7124  01060A  6F6F               	movwf	(_os+9)& (0+255),b	;volatile
  7125  01060C  0E00               	movlw	0
  7126  01060E  6F70               	movwf	(_os+10)& (0+255),b	;volatile
  7127                           
  7128                           ; BSR set to: 1
  7129                           ;os.c: 223: os.absolute_position = 0;
  7130  010610  0E00               	movlw	0
  7131  010612  6F72               	movwf	(_os+12)& (0+255),b	;volatile
  7132  010614  0E00               	movlw	0
  7133  010616  6F71               	movwf	(_os+11)& (0+255),b	;volatile
  7134                           
  7135                           ; BSR set to: 1
  7136                           ;os.c: 224: os.current_position_in_degrees = 0;
  7137  010618  0E00               	movlw	0
  7138  01061A  6F74               	movwf	(_os+14)& (0+255),b	;volatile
  7139  01061C  0E00               	movlw	0
  7140  01061E  6F73               	movwf	(_os+13)& (0+255),b	;volatile
  7141                           
  7142                           ; BSR set to: 1
  7143                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7144  010620  0E01               	movlw	1
  7145  010622  6F75               	movwf	(_os+15)& (0+255),b	;volatile
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;os.c: 226: os.busy = 0;
  7149  010624  0E00               	movlw	0
  7150  010626  6F76               	movwf	(_os+16)& (0+255),b	;volatile
  7151                           
  7152                           ; BSR set to: 1
  7153                           ;os.c: 227: os.setup_step_size = 0;
  7154  010628  0E00               	movlw	0
  7155  01062A  6F78               	movwf	(_os+18)& (0+255),b	;volatile
  7156  01062C  0E00               	movlw	0
  7157  01062E  6F77               	movwf	(_os+17)& (0+255),b	;volatile
  7158                           
  7159                           ; BSR set to: 1
  7160                           ;os.c: 228: os.approach_direction = MOTOR_DIRECTION_CW;
  7161  010630  0E01               	movlw	1
  7162  010632  6F79               	movwf	(_os+19)& (0+255),b	;volatile
  7163                           
  7164                           ; BSR set to: 1
  7165                           ;os.c: 229: os.division = 36;
  7166  010634  0E00               	movlw	0
  7167  010636  6F7B               	movwf	(_os+21)& (0+255),b	;volatile
  7168  010638  0E24               	movlw	36
  7169  01063A  6F7A               	movwf	(_os+20)& (0+255),b	;volatile
  7170                           
  7171                           ; BSR set to: 1
  7172                           ;os.c: 230: os.divide_step_size = 10;
  7173  01063C  0E0A               	movlw	10
  7174  01063E  6F7C               	movwf	(_os+22)& (0+255),b	;volatile
  7175                           
  7176                           ; BSR set to: 1
  7177                           ;os.c: 231: os.divide_position = 0;
  7178  010640  0E00               	movlw	0
  7179  010642  6F7E               	movwf	(_os+24)& (0+255),b	;volatile
  7180  010644  0E00               	movlw	0
  7181  010646  6F7D               	movwf	(_os+23)& (0+255),b	;volatile
  7182                           
  7183                           ; BSR set to: 1
  7184                           ;os.c: 232: os.divide_jump_size = 1;
  7185  010648  0E00               	movlw	0
  7186  01064A  6F80               	movwf	(_os+26)& (0+255),b	;volatile
  7187  01064C  0E01               	movlw	1
  7188  01064E  6F7F               	movwf	(_os+25)& (0+255),b	;volatile
  7189                           
  7190                           ; BSR set to: 1
  7191                           ;os.c: 233: os.arc_step_size = 1000;
  7192  010650  0E03               	movlw	3
  7193  010652  6F82               	movwf	(_os+28)& (0+255),b	;volatile
  7194  010654  0EE8               	movlw	232
  7195  010656  6F81               	movwf	(_os+27)& (0+255),b	;volatile
  7196                           
  7197                           ; BSR set to: 1
  7198                           ;os.c: 234: os.arc_size = 1000;
  7199  010658  0EE8               	movlw	232
  7200  01065A  6F83               	movwf	(_os+29)& (0+255),b	;volatile
  7201  01065C  0E03               	movlw	3
  7202  01065E  6F84               	movwf	(_os+30)& (0+255),b	;volatile
  7203  010660  0E00               	movlw	0
  7204  010662  6F85               	movwf	(_os+31)& (0+255),b	;volatile
  7205  010664  0E00               	movlw	0
  7206  010666  6F86               	movwf	(_os+32)& (0+255),b	;volatile
  7207                           
  7208                           ; BSR set to: 1
  7209                           ;os.c: 235: os.arc_speed = config.initial_speed_arc;
  7210  010668  C1A4  F187         	movff	_config+13,_os+33	;volatile
  7211  01066C  C1A5  F188         	movff	_config+14,_os+34	;volatile
  7212                           
  7213                           ; BSR set to: 1
  7214                           ;os.c: 236: os.arc_direction = MOTOR_DIRECTION_CW;
  7215  010670  0E01               	movlw	1
  7216  010672  6F89               	movwf	(_os+35)& (0+255),b	;volatile
  7217                           
  7218                           ; BSR set to: 1
  7219                           ;os.c: 237: os.manual_speed = config.initial_speed_manual;
  7220  010674  C1A8  F18A         	movff	_config+17,_os+36	;volatile
  7221  010678  C1A9  F18B         	movff	_config+18,_os+37	;volatile
  7222                           
  7223                           ; BSR set to: 1
  7224                           ;os.c: 238: os.manual_direction = MOTOR_DIRECTION_CW;
  7225  01067C  0E01               	movlw	1
  7226  01067E  6F8C               	movwf	(_os+38)& (0+255),b	;volatile
  7227                           
  7228                           ; BSR set to: 1
  7229                           ;os.c: 239: os.beep_count = 0;
  7230  010680  0E00               	movlw	0
  7231  010682  6F8D               	movwf	(_os+39)& (0+255),b	;volatile
  7232                           
  7233                           ; BSR set to: 1
  7234                           ;os.c: 240: os.temperature[0] = 0;
  7235  010684  0E00               	movlw	0
  7236  010686  6F8F               	movwf	(_os+41)& (0+255),b	;volatile
  7237  010688  0E00               	movlw	0
  7238  01068A  6F8E               	movwf	(_os+40)& (0+255),b	;volatile
  7239                           
  7240                           ; BSR set to: 1
  7241                           ;os.c: 241: os.temperature[1] = 0;
  7242  01068C  0E00               	movlw	0
  7243  01068E  6F91               	movwf	(_os+43)& (0+255),b	;volatile
  7244  010690  0E00               	movlw	0
  7245  010692  6F90               	movwf	(_os+42)& (0+255),b	;volatile
  7246                           
  7247                           ; BSR set to: 1
  7248                           ;os.c: 242: os.external_temperature_adc_sum = 0;
  7249  010694  0E00               	movlw	0
  7250  010696  6F93               	movwf	(_os+45)& (0+255),b	;volatile
  7251  010698  0E00               	movlw	0
  7252  01069A  6F92               	movwf	(_os+44)& (0+255),b	;volatile
  7253                           
  7254                           ; BSR set to: 1
  7255                           ;os.c: 243: os.external_temperature_count = 0;
  7256  01069C  0E00               	movlw	0
  7257  01069E  6F94               	movwf	(_os+46)& (0+255),b	;volatile
  7258                           
  7259                           ; BSR set to: 1
  7260                           ;os.c: 244: os.fan_on = 0;
  7261  0106A0  0E00               	movlw	0
  7262  0106A2  6F95               	movwf	(_os+47)& (0+255),b	;volatile
  7263                           
  7264                           ; BSR set to: 1
  7265                           ;os.c: 245: os.brake_on = 0;
  7266  0106A4  0E00               	movlw	0
  7267  0106A6  6F96               	movwf	(_os+48)& (0+255),b	;volatile
  7268                           
  7269                           ; BSR set to: 1
  7270                           ;os.c: 248: i2c_eeprom_recover_position();
  7271  0106A8  EC7E  F0A4         	call	_i2c_eeprom_recover_position	;wreg free
  7272                           
  7273                           ;os.c: 249: if(os.current_position_in_steps>config.full_circle_in_steps)
  7274  0106AC  0101               	movlb	1	; () banked
  7275  0106AE  516D               	movf	(_os+7)& (0+255),w,b	;volatile
  7276  0106B0  5D97               	subwf	_config& (0+255),w,b
  7277  0106B2  516E               	movf	(_os+8)& (0+255),w,b	;volatile
  7278  0106B4  5998               	subwfb	(_config+1)& (0+255),w,b
  7279  0106B6  516F               	movf	(_os+9)& (0+255),w,b	;volatile
  7280  0106B8  5999               	subwfb	(_config+2)& (0+255),w,b
  7281  0106BA  5170               	movf	(_os+10)& (0+255),w,b	;volatile
  7282  0106BC  599A               	subwfb	(_config+3)& (0+255),w,b
  7283  0106BE  B0D8               	btfsc	status,0,c
  7284  0106C0  D00C               	goto	l1082
  7285                           
  7286                           ; BSR set to: 1
  7287                           ;os.c: 250: {;os.c: 251: os.current_position_in_steps = 0;
  7288  0106C2  0E00               	movlw	0
  7289  0106C4  6F6D               	movwf	(_os+7)& (0+255),b	;volatile
  7290  0106C6  0E00               	movlw	0
  7291  0106C8  6F6E               	movwf	(_os+8)& (0+255),b	;volatile
  7292  0106CA  0E00               	movlw	0
  7293  0106CC  6F6F               	movwf	(_os+9)& (0+255),b	;volatile
  7294  0106CE  0E00               	movlw	0
  7295  0106D0  6F70               	movwf	(_os+10)& (0+255),b	;volatile
  7296                           
  7297                           ;os.c: 252: os.absolute_position = 0;
  7298  0106D2  0E00               	movlw	0
  7299  0106D4  6F72               	movwf	(_os+12)& (0+255),b	;volatile
  7300  0106D6  0E00               	movlw	0
  7301  0106D8  6F71               	movwf	(_os+11)& (0+255),b	;volatile
  7302  0106DA                     l1082:
  7303                           
  7304                           ; BSR set to: 1
  7305                           ;os.c: 253: };os.c: 254: motor_calculate_position_in_degrees();
  7306                           
  7307                           ; BSR set to: 1
  7308  0106DA  EC24  F091         	call	_motor_calculate_position_in_degrees	;wreg free
  7309                           
  7310                           ;os.c: 257: _system_timer0_init();
  7311  0106DE  ECC1  F0AC         	call	__system_timer0_init	;wreg free
  7312  0106E2  0012               	return		;funcret
  7313  0106E4                     __end_of_system_init:
  7314                           	opt stack 0
  7315                           tblptru	equ	0xFF8
  7316                           tblptrh	equ	0xFF7
  7317                           tblptrl	equ	0xFF6
  7318                           tablat	equ	0xFF5
  7319                           postinc0	equ	0xFEE
  7320                           wreg	equ	0xFE8
  7321                           postdec1	equ	0xFE5
  7322                           fsr1h	equ	0xFE2
  7323                           fsr1l	equ	0xFE1
  7324                           status	equ	0xFD8
  7325                           
  7326 ;; *************** function _motor_init *****************
  7327 ;; Defined at:
  7328 ;;		line 646 in file "motor.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, status,2
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7346 ;;Total ram usage:        0 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:   10
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_system_init
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text2
  7357  015C58                     __ptext2:
  7358                           	opt stack 0
  7359  015C58                     _motor_init:
  7360                           	opt stack 19
  7361                           
  7362                           ;motor.c: 649: motor_cue_read_index = 0;
  7363                           
  7364                           ;incstack = 0
  7365  015C58  0E00               	movlw	0
  7366  015C5A  0101               	movlb	1	; () banked
  7367  015C5C  6F4D               	movwf	_motor_cue_read_index& (0+255),b
  7368                           
  7369                           ;motor.c: 650: motor_cue_write_index = 0;
  7370  015C5E  0E00               	movlw	0
  7371  015C60  6F4C               	movwf	_motor_cue_write_index& (0+255),b
  7372                           
  7373                           ; BSR set to: 1
  7374                           ;motor.c: 656: CCPTMRS0bits.C2TSEL = 0b000;
  7375  015C62  010F               	movlb	15	; () banked
  7376  015C64  9752               	bcf	82,3,b	;volatile
  7377  015C66  9952               	bcf	82,4,b	;volatile
  7378  015C68  9B52               	bcf	82,5,b	;volatile
  7379                           
  7380                           ;motor.c: 661: CCP1CONbits.P1M = 0b00;
  7381  015C6A  0E3F               	movlw	-193
  7382  015C6C  16BA               	andwf	4026,f,c	;volatile
  7383                           
  7384                           ;motor.c: 664: CCP1CONbits.DC1B = 0b00;
  7385  015C6E  0ECF               	movlw	-49
  7386  015C70  16BA               	andwf	4026,f,c	;volatile
  7387                           
  7388                           ; BSR set to: 15
  7389                           ;motor.c: 667: LATBbits.LB0 = 0;
  7390  015C72  908A               	bcf	3978,0,c	;volatile
  7391                           
  7392                           ; BSR set to: 15
  7393  015C74  0012               	return		;funcret
  7394  015C76                     __end_of_motor_init:
  7395                           	opt stack 0
  7396                           tblptru	equ	0xFF8
  7397                           tblptrh	equ	0xFF7
  7398                           tblptrl	equ	0xFF6
  7399                           tablat	equ	0xFF5
  7400                           postinc0	equ	0xFEE
  7401                           wreg	equ	0xFE8
  7402                           postdec1	equ	0xFE5
  7403                           fsr1h	equ	0xFE2
  7404                           fsr1l	equ	0xFE1
  7405                           status	equ	0xFD8
  7406                           
  7407 ;; *************** function _motor_calculate_position_in_degrees *****************
  7408 ;; Defined at:
  7409 ;;		line 548 in file "motor.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  tmp             4   49[BANK0 ] float 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;Total ram usage:        4 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:   11
  7430 ;; This function calls:
  7431 ;;		___fldiv
  7432 ;;		___flmul
  7433 ;;		___fltol
  7434 ;;		___xxtofl
  7435 ;; This function is called by:
  7436 ;;		_main
  7437 ;;		_system_init
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text3
  7442  012248                     __ptext3:
  7443                           	opt stack 0
  7444  012248                     _motor_calculate_position_in_degrees:
  7445                           	opt stack 18
  7446                           
  7447                           ;motor.c: 550: float tmp;;motor.c: 552: tmp = (float) os.current_position_in_steps;
  7448                           
  7449                           ; BSR set to: 15
  7450                           ;incstack = 0
  7451  012248  C16D  F06A         	movff	_os+7,___xxtofl@val	;volatile
  7452  01224C  C16E  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
  7453  012250  C16F  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
  7454  012254  C170  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
  7455  012258  0E00               	movlw	0
  7456  01225A  ECFA  F080         	call	___xxtofl
  7457  01225E  C06A  F091         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
  7458  012262  C06B  F092         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
  7459  012266  C06C  F093         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
  7460  01226A  C06D  F094         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
  7461                           
  7462                           ;motor.c: 553: tmp *= 36000;
  7463  01226E  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
  7464  012272  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
  7465  012276  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
  7466  01227A  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
  7467  01227E  0E00               	movlw	0
  7468  012280  0100               	movlb	0	; () banked
  7469  012282  6F7C               	movwf	___flmul@a& (0+255),b
  7470  012284  0EA0               	movlw	160
  7471  012286  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  7472  012288  0E0C               	movlw	12
  7473  01228A  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  7474  01228C  0E47               	movlw	71
  7475  01228E  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  7476  012290  EC76  F064         	call	___flmul	;wreg free
  7477  012294  C078  F091         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
  7478  012298  C079  F092         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
  7479  01229C  C07A  F093         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
  7480  0122A0  C07B  F094         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
  7481                           
  7482                           ;motor.c: 554: tmp /= config.full_circle_in_steps;
  7483  0122A4  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
  7484  0122A8  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
  7485  0122AC  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
  7486  0122B0  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
  7487  0122B4  C197  F06A         	movff	_config,___xxtofl@val
  7488  0122B8  C198  F06B         	movff	_config+1,___xxtofl@val+1
  7489  0122BC  C199  F06C         	movff	_config+2,___xxtofl@val+2
  7490  0122C0  C19A  F06D         	movff	_config+3,___xxtofl@val+3
  7491  0122C4  0E00               	movlw	0
  7492  0122C6  ECFA  F080         	call	___xxtofl
  7493  0122CA  C06A  F07C         	movff	?___xxtofl,___fldiv@a
  7494  0122CE  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
  7495  0122D2  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
  7496  0122D6  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
  7497  0122DA  EC9E  F06A         	call	___fldiv	;wreg free
  7498  0122DE  C078  F091         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
  7499  0122E2  C079  F092         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
  7500  0122E6  C07A  F093         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
  7501  0122EA  C07B  F094         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
  7502                           
  7503                           ;motor.c: 556: os.current_position_in_degrees = (uint16_t) tmp;
  7504  0122EE  C091  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
  7505  0122F2  C092  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
  7506  0122F6  C093  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
  7507  0122FA  C094  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
  7508  0122FE  EC93  F091         	call	___fltol	;wreg free
  7509  012302  C060  F173         	movff	?___fltol,_os+13	;volatile
  7510  012306  C061  F174         	movff	?___fltol+1,_os+14	;volatile
  7511                           
  7512                           ;motor.c: 557: if(os.current_position_in_degrees==36000)
  7513  01230A  0EA0               	movlw	160
  7514  01230C  0101               	movlb	1	; () banked
  7515  01230E  1973               	xorwf	(_os+13)& (0+255),w,b	;volatile
  7516  012310  E109               	bnz	l2539
  7517  012312  0E8C               	movlw	140
  7518  012314  1974               	xorwf	(_os+14)& (0+255),w,b	;volatile
  7519  012316  A4D8               	btfss	status,2,c
  7520  012318  0012               	return	
  7521                           
  7522                           ; BSR set to: 1
  7523                           ;motor.c: 558: {;motor.c: 560: os.current_position_in_degrees = 0;
  7524  01231A  0E00               	movlw	0
  7525  01231C  6F74               	movwf	(_os+14)& (0+255),b	;volatile
  7526  01231E  0E00               	movlw	0
  7527  012320  6F73               	movwf	(_os+13)& (0+255),b	;volatile
  7528  012322  0012               	return	
  7529  012324                     l2539:
  7530                           
  7531                           ; BSR set to: 1
  7532  012324  0012               	return		;funcret
  7533  012326                     __end_of_motor_calculate_position_in_degrees:
  7534                           	opt stack 0
  7535                           tblptru	equ	0xFF8
  7536                           tblptrh	equ	0xFF7
  7537                           tblptrl	equ	0xFF6
  7538                           tablat	equ	0xFF5
  7539                           postinc0	equ	0xFEE
  7540                           wreg	equ	0xFE8
  7541                           postdec1	equ	0xFE5
  7542                           fsr1h	equ	0xFE2
  7543                           fsr1l	equ	0xFE1
  7544                           status	equ	0xFD8
  7545                           
  7546 ;; *************** function _i2c_init *****************
  7547 ;; Defined at:
  7548 ;;		line 26 in file "i2c.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1    wreg      void 
  7555 ;; Registers used:
  7556 ;;		wreg, status,2
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:   10
  7569 ;; This function calls:
  7570 ;;		Nothing
  7571 ;; This function is called by:
  7572 ;;		_system_init
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text4
  7577  015C76                     __ptext4:
  7578                           	opt stack 0
  7579  015C76                     _i2c_init:
  7580                           	opt stack 19
  7581                           
  7582                           ;i2c.c: 28: TRISBbits.TRISB5 = 1;
  7583                           
  7584                           ; BSR set to: 1
  7585                           ;incstack = 0
  7586  015C76  8A93               	bsf	3987,5,c	;volatile
  7587                           
  7588                           ;i2c.c: 29: TRISBbits.TRISB4 = 1;
  7589  015C78  8893               	bsf	3987,4,c	;volatile
  7590                           
  7591                           ;i2c.c: 31: SSP1STATbits.SMP = 1;
  7592  015C7A  8EC7               	bsf	4039,7,c	;volatile
  7593                           
  7594                           ;i2c.c: 32: SSP1STATbits.CKE = 0;
  7595  015C7C  9CC7               	bcf	4039,6,c	;volatile
  7596                           
  7597                           ;i2c.c: 34: SSP1ADD = 119;
  7598  015C7E  0E77               	movlw	119
  7599  015C80  6EC8               	movwf	4040,c	;volatile
  7600                           
  7601                           ;i2c.c: 36: SSP1CON1bits.WCOL = 0;
  7602  015C82  9EC6               	bcf	4038,7,c	;volatile
  7603                           
  7604                           ;i2c.c: 37: SSP1CON1bits.SSPOV = 0;
  7605  015C84  9CC6               	bcf	4038,6,c	;volatile
  7606                           
  7607                           ;i2c.c: 38: SSP1CON1bits.SSPM = 0b1000;
  7608  015C86  50C6               	movf	4038,w,c	;volatile
  7609  015C88  0BF0               	andlw	-16
  7610  015C8A  0908               	iorlw	8
  7611  015C8C  6EC6               	movwf	4038,c	;volatile
  7612                           
  7613                           ;i2c.c: 39: SSP1CON1bits.SSPEN = 1;
  7614  015C8E  8AC6               	bsf	4038,5,c	;volatile
  7615  015C90  0012               	return		;funcret
  7616  015C92                     __end_of_i2c_init:
  7617                           	opt stack 0
  7618                           tblptru	equ	0xFF8
  7619                           tblptrh	equ	0xFF7
  7620                           tblptrl	equ	0xFF6
  7621                           tablat	equ	0xFF5
  7622                           postinc0	equ	0xFEE
  7623                           wreg	equ	0xFE8
  7624                           postdec1	equ	0xFE5
  7625                           fsr1h	equ	0xFE2
  7626                           fsr1l	equ	0xFE1
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function _i2c_eeprom_recover_position *****************
  7630 ;; Defined at:
  7631 ;;		line 314 in file "i2c.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  buffer          7   25[BANK0 ] unsigned char [7]
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;Total ram usage:        7 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:   13
  7652 ;; This function calls:
  7653 ;;		_i2c_eeprom_read
  7654 ;;		_memcpy
  7655 ;; This function is called by:
  7656 ;;		_system_init
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text5
  7661  0148FC                     __ptext5:
  7662                           	opt stack 0
  7663  0148FC                     _i2c_eeprom_recover_position:
  7664                           	opt stack 16
  7665                           
  7666                           ;i2c.c: 316: uint8_t buffer[7];;i2c.c: 322: i2c_eeprom_read(0x200, &buffer[0], 7);
  7667                           
  7668                           ;incstack = 0
  7669  0148FC  0E02               	movlw	2
  7670  0148FE  0100               	movlb	0	; () banked
  7671  014900  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  7672  014902  0E00               	movlw	0
  7673  014904  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  7674  014906  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7675  014908  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7676  01490A  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7677  01490C  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7678  01490E  0E07               	movlw	7
  7679  014910  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7680  014912  EC97  F0A6         	call	_i2c_eeprom_read	;wreg free
  7681                           
  7682                           ;i2c.c: 325: memcpy(&os.current_position_in_steps, &buffer[0], 4);
  7683  014916  0E6D               	movlw	low (_os+7)
  7684  014918  0100               	movlb	0	; () banked
  7685  01491A  6F60               	movwf	memcpy@d1& (0+255),b
  7686  01491C  0E01               	movlw	high (_os+7)
  7687  01491E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7688  014920  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7689  014922  6F62               	movwf	memcpy@s1& (0+255),b
  7690  014924  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7691  014926  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7692  014928  0E00               	movlw	0
  7693  01492A  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7694  01492C  0E04               	movlw	4
  7695  01492E  6F64               	movwf	memcpy@n& (0+255),b
  7696  014930  ECEF  F0A3         	call	_memcpy	;wreg free
  7697                           
  7698                           ;i2c.c: 326: memcpy(&os.absolute_position, &buffer[4], 2);
  7699  014934  0E71               	movlw	low (_os+11)
  7700  014936  0100               	movlb	0	; () banked
  7701  014938  6F60               	movwf	memcpy@d1& (0+255),b
  7702  01493A  0E01               	movlw	high (_os+11)
  7703  01493C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7704  01493E  0E7D               	movlw	low (i2c_eeprom_recover_position@buffer+4)
  7705  014940  6F62               	movwf	memcpy@s1& (0+255),b
  7706  014942  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+4)
  7707  014944  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7708  014946  0E00               	movlw	0
  7709  014948  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7710  01494A  0E02               	movlw	2
  7711  01494C  6F64               	movwf	memcpy@n& (0+255),b
  7712  01494E  ECEF  F0A3         	call	_memcpy	;wreg free
  7713                           
  7714                           ;i2c.c: 327: os.approach_direction = buffer[6];
  7715  014952  C07F  F179         	movff	i2c_eeprom_recover_position@buffer+6,_os+19	;volatile
  7716  014956  0012               	return		;funcret
  7717  014958                     __end_of_i2c_eeprom_recover_position:
  7718                           	opt stack 0
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           postinc0	equ	0xFEE
  7724                           wreg	equ	0xFE8
  7725                           postdec1	equ	0xFE5
  7726                           fsr1h	equ	0xFE2
  7727                           fsr1l	equ	0xFE1
  7728                           status	equ	0xFD8
  7729                           
  7730 ;; *************** function _i2c_eeprom_read *****************
  7731 ;; Defined at:
  7732 ;;		line 277 in file "i2c.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  address         2   17[BANK0 ] unsigned int 
  7735 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7736 ;;		 -> i2c_eeprom_recover_position@buffer(7), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_r
      +eadUint16@data(2), 
  7737 ;;  length          1   21[BANK0 ] unsigned char 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7740 ;;  addr            1   23[BANK0 ] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7750 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7753 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7754 ;;Total ram usage:        8 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:   12
  7757 ;; This function calls:
  7758 ;;		__i2c_eeprom_busy
  7759 ;;		__i2c_read
  7760 ;;		__i2c_write
  7761 ;; This function is called by:
  7762 ;;		_i2c_eeprom_recover_position
  7763 ;;		_i2c_eeprom_readUint16
  7764 ;;		_i2c_eeprom_readUint32
  7765 ;;		_i2c_eeprom_readInt16
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text6
  7770  014D2E                     __ptext6:
  7771                           	opt stack 0
  7772  014D2E                     _i2c_eeprom_read:
  7773                           	opt stack 16
  7774                           
  7775                           ;i2c.c: 279: uint8_t slave_address;;i2c.c: 280: uint8_t addr;;i2c.c: 281: addr = address
      +                           & 0xFF;
  7776                           
  7777                           ;incstack = 0
  7778  014D2E  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7779                           
  7780                           ;i2c.c: 282: address &= 0b0000011100000000;
  7781  014D32  0100               	movlb	0	; () banked
  7782  014D34  0E00               	movlw	0
  7783  014D36  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7784  014D38  0E07               	movlw	7
  7785  014D3A  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7786                           
  7787                           ;i2c.c: 283: address >>= 7;
  7788  014D3C  0E07               	movlw	7
  7789  014D3E  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7790  014D40                     u15095:
  7791  014D40  90D8               	bcf	status,0,c
  7792  014D42  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7793  014D44  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7794  014D46  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7795  014D48  D7FB               	goto	u15095
  7796                           
  7797                           ;i2c.c: 284: slave_address = 0b10100000 | address;
  7798  014D4A  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7799  014D4C  09A0               	iorlw	160
  7800  014D4E  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7801  014D50                     
  7802                           ; BSR set to: 0
  7803                           
  7804                           ; BSR set to: 0
  7805  014D50  EC2C  F0AD         	call	__i2c_eeprom_busy	;wreg free
  7806  014D54  0900               	iorlw	0
  7807  014D56  A4D8               	btfss	status,2,c
  7808  014D58  D7FB               	goto	l1221
  7809                           
  7810                           ;i2c.c: 289: _i2c_write(slave_address, &addr, 1);
  7811  014D5A  0E77               	movlw	low i2c_eeprom_read@addr
  7812  014D5C  0100               	movlb	0	; () banked
  7813  014D5E  6F65               	movwf	__i2c_write@data& (0+255),b
  7814  014D60  0E00               	movlw	high i2c_eeprom_read@addr
  7815  014D62  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7816  014D64  0E01               	movlw	1
  7817  014D66  6F67               	movwf	__i2c_write@length& (0+255),b
  7818  014D68  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7819  014D6A  EC39  F0A8         	call	__i2c_write
  7820                           
  7821                           ;i2c.c: 290: _i2c_read(slave_address, &data[0], length);
  7822  014D6E  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7823  014D72  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7824  014D76  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7825  014D7A  0100               	movlb	0	; () banked
  7826  014D7C  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7827  014D7E  EC12  F09D         	call	__i2c_read
  7828  014D82  0012               	return		;funcret
  7829  014D84                     __end_of_i2c_eeprom_read:
  7830                           	opt stack 0
  7831                           tblptru	equ	0xFF8
  7832                           tblptrh	equ	0xFF7
  7833                           tblptrl	equ	0xFF6
  7834                           tablat	equ	0xFF5
  7835                           postinc0	equ	0xFEE
  7836                           wreg	equ	0xFE8
  7837                           postdec1	equ	0xFE5
  7838                           fsr1h	equ	0xFE2
  7839                           fsr1l	equ	0xFE1
  7840                           status	equ	0xFD8
  7841                           
  7842 ;; *************** function __i2c_read *****************
  7843 ;; Defined at:
  7844 ;;		line 105 in file "i2c.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  slave_addres    1    wreg     unsigned char 
  7847 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7848 ;;		 -> i2c_eeprom_recover_position@buffer(7), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_r
      +eadUint16@data(2), 
  7849 ;;		 -> i2c_eeprom_readByte@addr(1), 
  7850 ;;  length          1    7[BANK0 ] unsigned char 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7853 ;;  cntr            1   16[BANK0 ] unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7863 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7866 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;Total ram usage:       12 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:   11
  7870 ;; This function calls:
  7871 ;;		__i2c_acknowledge
  7872 ;;		__i2c_get
  7873 ;;		__i2c_not_acknowledge
  7874 ;;		__i2c_send
  7875 ;;		__i2c_start
  7876 ;;		__i2c_stop
  7877 ;;		__i2c_wait_idle
  7878 ;; This function is called by:
  7879 ;;		_i2c_eeprom_read
  7880 ;;		_i2c_eeprom_readByte
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text7
  7885  013A24                     __ptext7:
  7886                           	opt stack 0
  7887  013A24                     __i2c_read:
  7888                           	opt stack 16
  7889                           
  7890                           ;incstack = 0
  7891                           ;__i2c_read@slave_address stored from wreg
  7892  013A24  0100               	movlb	0	; () banked
  7893  013A26  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7894                           
  7895                           ;i2c.c: 107: uint8_t cntr;;i2c.c: 109: _i2c_wait_idle();
  7896  013A28  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
  7897                           
  7898                           ;i2c.c: 110: _i2c_start();
  7899  013A2C  EC06  F0AF         	call	__i2c_start	;wreg free
  7900                           
  7901                           ;i2c.c: 111: _i2c_wait_idle();
  7902  013A30  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
  7903                           
  7904                           ;i2c.c: 112: _i2c_send(slave_address | 0x01);
  7905  013A34  0100               	movlb	0	; () banked
  7906  013A36  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7907  013A38  0901               	iorlw	1
  7908  013A3A  ECF3  F0AE         	call	__i2c_send
  7909                           
  7910                           ;i2c.c: 113: _i2c_wait_idle();
  7911  013A3E  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
  7912                           
  7913                           ;i2c.c: 123: for(cntr=0; cntr<length-1; ++cntr)
  7914  013A42  0E00               	movlw	0
  7915  013A44  0100               	movlb	0	; () banked
  7916  013A46  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7917  013A48  D00F               	goto	l1166
  7918  013A4A                     
  7919                           ; BSR set to: 0
  7920                           ;i2c.c: 124: {;i2c.c: 125: data[cntr] = _i2c_get();
  7921                           
  7922                           ; BSR set to: 0
  7923  013A4A  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7924  013A4C  0D01               	mullw	1
  7925  013A4E  50F3               	movf	prodl,w,c
  7926  013A50  2565               	addwf	__i2c_read@data& (0+255),w,b
  7927  013A52  6ED9               	movwf	fsr2l,c
  7928  013A54  50F4               	movf	prodh,w,c
  7929  013A56  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7930  013A58  6EDA               	movwf	fsr2h,c
  7931  013A5A  ECE9  F0AE         	call	__i2c_get	;wreg free
  7932  013A5E  6EDF               	movwf	indf2,c
  7933                           
  7934                           ;i2c.c: 126: _i2c_acknowledge();
  7935  013A60  ECEE  F0AE         	call	__i2c_acknowledge	;wreg free
  7936  013A64  0100               	movlb	0	; () banked
  7937  013A66  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7938  013A68                     l1166:
  7939                           
  7940                           ; BSR set to: 0
  7941                           
  7942                           ; BSR set to: 0
  7943  013A68  0EFF               	movlw	255
  7944  013A6A  6F68               	movwf	??__i2c_read& (0+255),b
  7945  013A6C  0EFF               	movlw	255
  7946  013A6E  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7947  013A70  5167               	movf	__i2c_read@length& (0+255),w,b
  7948  013A72  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7949  013A74  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7950  013A76  5168               	movf	??__i2c_read& (0+255),w,b
  7951  013A78  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7952  013A7A  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7953  013A7C  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7954  013A7E  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7955  013A80  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7956  013A82  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7957  013A84  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7958  013A86  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7959  013A88  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7960  013A8A  0A80               	xorlw	128
  7961  013A8C  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7962  013A8E  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7963  013A90  0A80               	xorlw	128
  7964  013A92  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7965  013A94  A0D8               	btfss	status,0,c
  7966  013A96  D7D9               	goto	l1167
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;i2c.c: 127: };i2c.c: 128: data[cntr] = _i2c_get();
  7970                           
  7971                           ; BSR set to: 0
  7972  013A98  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7973  013A9A  0D01               	mullw	1
  7974  013A9C  50F3               	movf	prodl,w,c
  7975  013A9E  2565               	addwf	__i2c_read@data& (0+255),w,b
  7976  013AA0  6ED9               	movwf	fsr2l,c
  7977  013AA2  50F4               	movf	prodh,w,c
  7978  013AA4  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7979  013AA6  6EDA               	movwf	fsr2h,c
  7980  013AA8  ECE9  F0AE         	call	__i2c_get	;wreg free
  7981  013AAC  6EDF               	movwf	indf2,c
  7982                           
  7983                           ;i2c.c: 129: _i2c_not_acknowledge();
  7984  013AAE  ECE4  F0AE         	call	__i2c_not_acknowledge	;wreg free
  7985                           
  7986                           ;i2c.c: 131: _i2c_stop();
  7987  013AB2  EC02  F0AF         	call	__i2c_stop	;wreg free
  7988  013AB6  0012               	return		;funcret
  7989  013AB8                     __end_of__i2c_read:
  7990                           	opt stack 0
  7991                           tblptru	equ	0xFF8
  7992                           tblptrh	equ	0xFF7
  7993                           tblptrl	equ	0xFF6
  7994                           tablat	equ	0xFF5
  7995                           prodh	equ	0xFF4
  7996                           prodl	equ	0xFF3
  7997                           postinc0	equ	0xFEE
  7998                           wreg	equ	0xFE8
  7999                           postdec1	equ	0xFE5
  8000                           fsr1h	equ	0xFE2
  8001                           fsr1l	equ	0xFE1
  8002                           indf2	equ	0xFDF
  8003                           fsr2h	equ	0xFDA
  8004                           fsr2l	equ	0xFD9
  8005                           status	equ	0xFD8
  8006                           
  8007 ;; *************** function __i2c_not_acknowledge *****************
  8008 ;; Defined at:
  8009 ;;		line 78 in file "i2c.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;		None
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  1    wreg      void 
  8016 ;; Registers used:
  8017 ;;		None
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8027 ;;Total ram usage:        0 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:   10
  8030 ;; This function calls:
  8031 ;;		Nothing
  8032 ;; This function is called by:
  8033 ;;		__i2c_read
  8034 ;;		_i2c_adc_read
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text8
  8039  015DC8                     __ptext8:
  8040                           	opt stack 0
  8041  015DC8                     __i2c_not_acknowledge:
  8042                           	opt stack 16
  8043                           
  8044                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 1;
  8045                           
  8046                           ;incstack = 0
  8047  015DC8  8AC5               	bsf	4037,5,c	;volatile
  8048                           
  8049                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  8050  015DCA  88C5               	bsf	4037,4,c	;volatile
  8051  015DCC  A8C5               	btfss	4037,4,c	;volatile
  8052  015DCE  0012               	return	
  8053  015DD0  D7FD               	goto	l1155
  8054  015DD2                     __end_of__i2c_not_acknowledge:
  8055                           	opt stack 0
  8056                           tblptru	equ	0xFF8
  8057                           tblptrh	equ	0xFF7
  8058                           tblptrl	equ	0xFF6
  8059                           tablat	equ	0xFF5
  8060                           prodh	equ	0xFF4
  8061                           prodl	equ	0xFF3
  8062                           postinc0	equ	0xFEE
  8063                           wreg	equ	0xFE8
  8064                           postdec1	equ	0xFE5
  8065                           fsr1h	equ	0xFE2
  8066                           fsr1l	equ	0xFE1
  8067                           indf2	equ	0xFDF
  8068                           fsr2h	equ	0xFDA
  8069                           fsr2l	equ	0xFD9
  8070                           status	equ	0xFD8
  8071                           
  8072 ;; *************** function __i2c_get *****************
  8073 ;; Defined at:
  8074 ;;		line 58 in file "i2c.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      unsigned char 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:   10
  8095 ;; This function calls:
  8096 ;;		Nothing
  8097 ;; This function is called by:
  8098 ;;		__i2c_read
  8099 ;;		_i2c_adc_read
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text9
  8104  015DD2                     __ptext9:
  8105                           	opt stack 0
  8106  015DD2                     __i2c_get:
  8107                           	opt stack 16
  8108                           
  8109                           ;i2c.c: 60: SSP1CON2bits.RCEN = 1 ;
  8110                           
  8111                           ;incstack = 0
  8112  015DD2  86C5               	bsf	4037,3,c	;volatile
  8113  015DD4  B6C5               	btfsc	4037,3,c	;volatile
  8114  015DD6  D7FE               	goto	l1137
  8115                           
  8116                           ;i2c.c: 62: return SSP1BUF;
  8117  015DD8  50C9               	movf	4041,w,c	;volatile
  8118  015DDA  0012               	return	
  8119  015DDC                     __end_of__i2c_get:
  8120                           	opt stack 0
  8121                           tblptru	equ	0xFF8
  8122                           tblptrh	equ	0xFF7
  8123                           tblptrl	equ	0xFF6
  8124                           tablat	equ	0xFF5
  8125                           prodh	equ	0xFF4
  8126                           prodl	equ	0xFF3
  8127                           postinc0	equ	0xFEE
  8128                           wreg	equ	0xFE8
  8129                           postdec1	equ	0xFE5
  8130                           fsr1h	equ	0xFE2
  8131                           fsr1l	equ	0xFE1
  8132                           indf2	equ	0xFDF
  8133                           fsr2h	equ	0xFDA
  8134                           fsr2l	equ	0xFD9
  8135                           status	equ	0xFD8
  8136                           
  8137 ;; *************** function __i2c_acknowledge *****************
  8138 ;; Defined at:
  8139 ;;		line 71 in file "i2c.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      void 
  8146 ;; Registers used:
  8147 ;;		None
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;Total ram usage:        0 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:   10
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		__i2c_read
  8164 ;;		_i2c_adc_read
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text10
  8169  015DDC                     __ptext10:
  8170                           	opt stack 0
  8171  015DDC                     __i2c_acknowledge:
  8172                           	opt stack 16
  8173                           
  8174                           ;i2c.c: 73: SSP1CON2bits.ACKDT = 0;
  8175                           
  8176                           ;incstack = 0
  8177  015DDC  9AC5               	bcf	4037,5,c	;volatile
  8178                           
  8179                           ;i2c.c: 74: SSP1CON2bits.ACKEN = 1;
  8180  015DDE  88C5               	bsf	4037,4,c	;volatile
  8181  015DE0  A8C5               	btfss	4037,4,c	;volatile
  8182  015DE2  0012               	return	
  8183  015DE4  D7FD               	goto	l1149
  8184  015DE6                     __end_of__i2c_acknowledge:
  8185                           	opt stack 0
  8186                           tblptru	equ	0xFF8
  8187                           tblptrh	equ	0xFF7
  8188                           tblptrl	equ	0xFF6
  8189                           tablat	equ	0xFF5
  8190                           prodh	equ	0xFF4
  8191                           prodl	equ	0xFF3
  8192                           postinc0	equ	0xFEE
  8193                           wreg	equ	0xFE8
  8194                           postdec1	equ	0xFE5
  8195                           fsr1h	equ	0xFE2
  8196                           fsr1l	equ	0xFE1
  8197                           indf2	equ	0xFDF
  8198                           fsr2h	equ	0xFDA
  8199                           fsr2l	equ	0xFD9
  8200                           status	equ	0xFD8
  8201                           
  8202 ;; *************** function __i2c_eeprom_busy *****************
  8203 ;; Defined at:
  8204 ;;		line 171 in file "i2c.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;		None
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  busy            1    5[BANK0 ] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      unsigned char 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;Total ram usage:        1 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:   11
  8225 ;; This function calls:
  8226 ;;		__i2c_send
  8227 ;;		__i2c_start
  8228 ;;		__i2c_stop
  8229 ;;		__i2c_wait_idle
  8230 ;; This function is called by:
  8231 ;;		_i2c_eeprom_read
  8232 ;;		_i2c_eeprom_writeByte
  8233 ;;		_i2c_eeprom_readByte
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text11
  8238  015A58                     __ptext11:
  8239                           	opt stack 0
  8240  015A58                     __i2c_eeprom_busy:
  8241                           	opt stack 16
  8242                           
  8243                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
  8244                           
  8245                           ;incstack = 0
  8246  015A58  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
  8247                           
  8248                           ;i2c.c: 175: _i2c_start();
  8249  015A5C  EC06  F0AF         	call	__i2c_start	;wreg free
  8250                           
  8251                           ;i2c.c: 176: _i2c_wait_idle();
  8252  015A60  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
  8253                           
  8254                           ;i2c.c: 177: _i2c_send(0b10100000);
  8255  015A64  0EA0               	movlw	160
  8256  015A66  ECF3  F0AE         	call	__i2c_send
  8257                           
  8258                           ;i2c.c: 178: _i2c_wait_idle();
  8259  015A6A  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
  8260                           
  8261                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
  8262  015A6E  0E00               	movlw	0
  8263  015A70  BCC5               	btfsc	4037,6,c	;volatile
  8264  015A72  0E01               	movlw	1
  8265  015A74  0100               	movlb	0	; () banked
  8266  015A76  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;i2c.c: 183: _i2c_stop();
  8270  015A78  EC02  F0AF         	call	__i2c_stop	;wreg free
  8271                           
  8272                           ;i2c.c: 185: return 0;
  8273  015A7C  0E00               	movlw	0
  8274  015A7E  0012               	return	
  8275  015A80                     __end_of__i2c_eeprom_busy:
  8276                           	opt stack 0
  8277                           tblptru	equ	0xFF8
  8278                           tblptrh	equ	0xFF7
  8279                           tblptrl	equ	0xFF6
  8280                           tablat	equ	0xFF5
  8281                           prodh	equ	0xFF4
  8282                           prodl	equ	0xFF3
  8283                           postinc0	equ	0xFEE
  8284                           wreg	equ	0xFE8
  8285                           postdec1	equ	0xFE5
  8286                           fsr1h	equ	0xFE2
  8287                           fsr1l	equ	0xFE1
  8288                           indf2	equ	0xFDF
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function _flash_init *****************
  8294 ;; Defined at:
  8295 ;;		line 361 in file "flash.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      void 
  8302 ;; Registers used:
  8303 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;Total ram usage:        0 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:   14
  8316 ;; This function calls:
  8317 ;;		__flash_set_page_size
  8318 ;;		_spi_init
  8319 ;; This function is called by:
  8320 ;;		_system_init
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text12
  8325  015D7E                     __ptext12:
  8326                           	opt stack 0
  8327  015D7E                     _flash_init:
  8328                           	opt stack 15
  8329                           
  8330                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8331                           
  8332                           ;incstack = 0
  8333  015D7E  0E00               	movlw	0
  8334  015D80  EC40  F0AA         	call	_spi_init
  8335                           
  8336                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8337  015D84  0E00               	movlw	0
  8338  015D86  ECE7  F0A1         	call	__flash_set_page_size
  8339  015D8A  0012               	return		;funcret
  8340  015D8C                     __end_of_flash_init:
  8341                           	opt stack 0
  8342                           tblptru	equ	0xFF8
  8343                           tblptrh	equ	0xFF7
  8344                           tblptrl	equ	0xFF6
  8345                           tablat	equ	0xFF5
  8346                           prodh	equ	0xFF4
  8347                           prodl	equ	0xFF3
  8348                           postinc0	equ	0xFEE
  8349                           wreg	equ	0xFE8
  8350                           postdec1	equ	0xFE5
  8351                           fsr1h	equ	0xFE2
  8352                           fsr1l	equ	0xFE1
  8353                           indf2	equ	0xFDF
  8354                           fsr2h	equ	0xFDA
  8355                           fsr2l	equ	0xFD9
  8356                           status	equ	0xFD8
  8357                           
  8358 ;; *************** function _spi_init *****************
  8359 ;; Defined at:
  8360 ;;		line 89 in file "spi.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  configuratio    1    wreg     enum E6878
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  configuratio    1    3[BANK0 ] enum E6878
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg, status,2, status,0, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8377 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8378 ;;Total ram usage:        1 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:   11
  8381 ;; This function calls:
  8382 ;;		__spi_init
  8383 ;; This function is called by:
  8384 ;;		_flash_init
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text13
  8389  015480                     __ptext13:
  8390                           	opt stack 0
  8391  015480                     _spi_init:
  8392                           	opt stack 17
  8393                           
  8394                           ;incstack = 0
  8395                           ;spi_init@configuration stored from wreg
  8396  015480  0100               	movlb	0	; () banked
  8397  015482  6F63               	movwf	spi_init@configuration& (0+255),b
  8398                           
  8399                           ;spi.c: 91: switch(configuration)
  8400  015484  D012               	goto	l2183
  8401  015486                     
  8402                           ;spi.c: 94: _spi_init(config_internal);
  8403  015486  C12C  F060         	movff	_config_internal,__spi_init@details
  8404  01548A  C12D  F061         	movff	_config_internal+1,__spi_init@details+1
  8405  01548E  C12E  F062         	movff	_config_internal+2,__spi_init@details+2
  8406  015492  EC15  F0AB         	call	__spi_init	;wreg free
  8407                           
  8408                           ;spi.c: 95: break;
  8409  015496  D011               	goto	l2185
  8410  015498                     
  8411                           ;spi.c: 98: _spi_init(config_external);
  8412  015498  C129  F060         	movff	_config_external,__spi_init@details
  8413  01549C  C12A  F061         	movff	_config_external+1,__spi_init@details+1
  8414  0154A0  C12B  F062         	movff	_config_external+2,__spi_init@details+2
  8415  0154A4  EC15  F0AB         	call	__spi_init	;wreg free
  8416                           
  8417                           ;spi.c: 100: }
  8418                           
  8419                           ;spi.c: 99: break;
  8420  0154A8  D008               	goto	l2185
  8421  0154AA                     l2183:
  8422  0154AA  0100               	movlb	0	; () banked
  8423  0154AC  5163               	movf	spi_init@configuration& (0+255),w,b
  8424                           
  8425                           ; Switch size 1, requested type "space"
  8426                           ; Number of cases is 2, Range of values is 0 to 1
  8427                           ; switch strategies available:
  8428                           ; Name         Instructions Cycles
  8429                           ; simple_byte            7     4 (average)
  8430                           ;	Chosen strategy is simple_byte
  8431  0154AE  0A00               	xorlw	0	; case 0
  8432  0154B0  B4D8               	btfsc	status,2,c
  8433  0154B2  D7E9               	goto	l2184
  8434  0154B4  0A01               	xorlw	1	; case 1
  8435  0154B6  B4D8               	btfsc	status,2,c
  8436  0154B8  D7EF               	goto	l2186
  8437  0154BA                     l2185:
  8438                           
  8439                           ;spi.c: 102: active_configuration = configuration;
  8440  0154BA  C063  F14E         	movff	spi_init@configuration,_active_configuration
  8441  0154BE  0012               	return		;funcret
  8442  0154C0                     __end_of_spi_init:
  8443                           	opt stack 0
  8444                           tblptru	equ	0xFF8
  8445                           tblptrh	equ	0xFF7
  8446                           tblptrl	equ	0xFF6
  8447                           tablat	equ	0xFF5
  8448                           prodh	equ	0xFF4
  8449                           prodl	equ	0xFF3
  8450                           postinc0	equ	0xFEE
  8451                           wreg	equ	0xFE8
  8452                           postdec1	equ	0xFE5
  8453                           fsr1h	equ	0xFE2
  8454                           fsr1l	equ	0xFE1
  8455                           indf2	equ	0xFDF
  8456                           fsr2h	equ	0xFDA
  8457                           fsr2l	equ	0xFD9
  8458                           status	equ	0xFD8
  8459                           
  8460 ;; *************** function __spi_init *****************
  8461 ;; Defined at:
  8462 ;;		line 24 in file "spi.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;  details         3    0[BANK0 ] struct .
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8476 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8479 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8480 ;;Total ram usage:        3 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:   10
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_spi_init
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text14
  8491  01562A                     __ptext14:
  8492                           	opt stack 0
  8493  01562A                     __spi_init:
  8494                           	opt stack 17
  8495                           
  8496                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8497                           
  8498                           ;incstack = 0
  8499  01562A  0E55               	movlw	85
  8500  01562C  6EA7               	movwf	4007,c	;volsfr
  8501  01562E  0EAA               	movlw	170
  8502  015630  6EA7               	movwf	4007,c	;volsfr
  8503  015632  010E               	movlb	14	; () banked
  8504  015634  91BF               	bcf	191,0,b	;volatile
  8505                           
  8506                           ;spi.c: 31: RPINR21 = 22;
  8507  015636  0E16               	movlw	22
  8508  015638  6FFC               	movwf	252,b	;volatile
  8509                           
  8510                           ;spi.c: 32: RPOR21 = 10;
  8511  01563A  0E0A               	movlw	10
  8512  01563C  6FD5               	movwf	213,b	;volatile
  8513                           
  8514                           ;spi.c: 34: RPOR23 = 11;
  8515  01563E  0E0B               	movlw	11
  8516  015640  6FD7               	movwf	215,b	;volatile
  8517                           
  8518                           ;spi.c: 35: RPINR22 = 23;
  8519  015642  0E17               	movlw	23
  8520  015644  6FFD               	movwf	253,b	;volatile
  8521                           
  8522                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8523  015646  0E55               	movlw	85
  8524  015648  6EA7               	movwf	4007,c	;volsfr
  8525  01564A  0EAA               	movlw	170
  8526  01564C  6EA7               	movwf	4007,c	;volsfr
  8527                           
  8528                           ; BSR set to: 14
  8529  01564E  81BF               	bsf	191,0,b	;volatile
  8530                           
  8531                           ; BSR set to: 14
  8532                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8533  015650  8E73               	bsf	3955,7,c	;volatile
  8534                           
  8535                           ; BSR set to: 14
  8536                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8537  015652  8C73               	bsf	3955,6,c	;volatile
  8538                           
  8539                           ; BSR set to: 14
  8540                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8541  015654  9872               	bcf	3954,4,c	;volatile
  8542                           
  8543                           ; BSR set to: 14
  8544                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8545  015656  9072               	bcf	3954,0,c	;volatile
  8546  015658  9272               	bcf	3954,1,c	;volatile
  8547  01565A  9472               	bcf	3954,2,c	;volatile
  8548  01565C  9672               	bcf	3954,3,c	;volatile
  8549                           
  8550                           ; BSR set to: 14
  8551                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8552  01565E  8A72               	bsf	3954,5,c	;volatile
  8553                           
  8554                           ; BSR set to: 14
  8555  015660  0012               	return		;funcret
  8556  015662                     __end_of__spi_init:
  8557                           	opt stack 0
  8558                           tblptru	equ	0xFF8
  8559                           tblptrh	equ	0xFF7
  8560                           tblptrl	equ	0xFF6
  8561                           tablat	equ	0xFF5
  8562                           prodh	equ	0xFF4
  8563                           prodl	equ	0xFF3
  8564                           postinc0	equ	0xFEE
  8565                           wreg	equ	0xFE8
  8566                           postdec1	equ	0xFE5
  8567                           fsr1h	equ	0xFE2
  8568                           fsr1l	equ	0xFE1
  8569                           indf2	equ	0xFDF
  8570                           fsr2h	equ	0xFDA
  8571                           fsr2l	equ	0xFD9
  8572                           status	equ	0xFD8
  8573                           
  8574 ;; *************** function __flash_set_page_size *****************
  8575 ;; Defined at:
  8576 ;;		line 99 in file "flash.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  size            1    wreg     enum E7053
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  size            1   23[BANK0 ] enum E7053
  8581 ;;  command         4   19[BANK0 ] unsigned char [4]
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;Total ram usage:        5 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:   13
  8598 ;; This function calls:
  8599 ;;		__flash_is_busy
  8600 ;;		_memcpy
  8601 ;;		_spi_tx
  8602 ;; This function is called by:
  8603 ;;		_flash_init
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text15
  8608  0143CE                     __ptext15:
  8609                           	opt stack 0
  8610  0143CE                     __flash_set_page_size:
  8611                           	opt stack 15
  8612                           
  8613                           ; BSR set to: 14
  8614                           ;incstack = 0
  8615                           ;__flash_set_page_size@size stored from wreg
  8616  0143CE  0100               	movlb	0	; () banked
  8617  0143D0  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8618  0143D2                     
  8619                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8620  0143D2  ECC6  F0AD         	call	__flash_is_busy	;wreg free
  8621  0143D6  0900               	iorlw	0
  8622  0143D8  A4D8               	btfss	status,2,c
  8623  0143DA  D7FB               	goto	l16174
  8624                           
  8625                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8626  0143DC  0100               	movlb	0	; () banked
  8627  0143DE  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8628  0143E0  A4D8               	btfss	status,2,c
  8629  0143E2  D00E               	goto	l1536
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8633  0143E4  0E73               	movlw	low __flash_set_page_size@command
  8634  0143E6  6F60               	movwf	memcpy@d1& (0+255),b
  8635  0143E8  0E00               	movlw	high __flash_set_page_size@command
  8636  0143EA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8637  0143EC  0EE1               	movlw	low _flash_command_pagesize_512
  8638  0143EE  6F62               	movwf	memcpy@s1& (0+255),b
  8639  0143F0  0EA2               	movlw	high _flash_command_pagesize_512
  8640  0143F2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8641  0143F4  0E00               	movlw	0
  8642  0143F6  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8643  0143F8  0E04               	movlw	4
  8644  0143FA  6F64               	movwf	memcpy@n& (0+255),b
  8645  0143FC  ECEF  F0A3         	call	_memcpy	;wreg free
  8646  014400                     l1536:
  8647                           
  8648                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8649  014400  0100               	movlb	0	; () banked
  8650  014402  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8651  014404  A4D8               	btfss	status,2,c
  8652  014406  D00E               	goto	l1537
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8656  014408  0E73               	movlw	low __flash_set_page_size@command
  8657  01440A  6F60               	movwf	memcpy@d1& (0+255),b
  8658  01440C  0E00               	movlw	high __flash_set_page_size@command
  8659  01440E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8660  014410  0EDD               	movlw	low _flash_command_pagesize_528
  8661  014412  6F62               	movwf	memcpy@s1& (0+255),b
  8662  014414  0EA2               	movlw	high _flash_command_pagesize_528
  8663  014416  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8664  014418  0E00               	movlw	0
  8665  01441A  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8666  01441C  0E04               	movlw	4
  8667  01441E  6F64               	movwf	memcpy@n& (0+255),b
  8668  014420  ECEF  F0A3         	call	_memcpy	;wreg free
  8669  014424                     l1537:
  8670                           
  8671                           ;flash.c: 113: spi_tx(command, 4);
  8672  014424  0E73               	movlw	low __flash_set_page_size@command
  8673  014426  0100               	movlb	0	; () banked
  8674  014428  6F60               	movwf	spi_tx@data& (0+255),b
  8675  01442A  0E00               	movlw	high __flash_set_page_size@command
  8676  01442C  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8677  01442E  0E00               	movlw	0
  8678  014430  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8679  014432  0E04               	movlw	4
  8680  014434  6F62               	movwf	spi_tx@length& (0+255),b
  8681  014436  EC8E  F0A5         	call	_spi_tx	;wreg free
  8682  01443A  0012               	return		;funcret
  8683  01443C                     __end_of__flash_set_page_size:
  8684                           	opt stack 0
  8685                           tblptru	equ	0xFF8
  8686                           tblptrh	equ	0xFF7
  8687                           tblptrl	equ	0xFF6
  8688                           tablat	equ	0xFF5
  8689                           prodh	equ	0xFF4
  8690                           prodl	equ	0xFF3
  8691                           postinc0	equ	0xFEE
  8692                           wreg	equ	0xFE8
  8693                           postdec1	equ	0xFE5
  8694                           fsr1h	equ	0xFE2
  8695                           fsr1l	equ	0xFE1
  8696                           indf2	equ	0xFDF
  8697                           fsr2h	equ	0xFDA
  8698                           fsr2l	equ	0xFD9
  8699                           status	equ	0xFD8
  8700                           
  8701 ;; *************** function _fat_init *****************
  8702 ;; Defined at:
  8703 ;;		line 1404 in file "fat16.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;		None
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;		None
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      void 
  8710 ;; Registers used:
  8711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;Total ram usage:        0 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:   16
  8724 ;; This function calls:
  8725 ;;		_fat_get_format_status
  8726 ;;		_fat_restore_mbr_fbr
  8727 ;; This function is called by:
  8728 ;;		_system_init
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text16
  8733  015D4E                     __ptext16:
  8734                           	opt stack 0
  8735  015D4E                     _fat_init:
  8736                           	opt stack 13
  8737                           
  8738                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8739                           
  8740                           ;incstack = 0
  8741  015D4E  ECAF  F098         	call	_fat_get_format_status	;wreg free
  8742  015D52  0900               	iorlw	0
  8743  015D54  A4D8               	btfss	status,2,c
  8744  015D56  0012               	return	
  8745                           
  8746                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8747  015D58  ECA6  F09D         	call	_fat_restore_mbr_fbr	;wreg free
  8748  015D5C  0012               	return	
  8749  015D5E                     __end_of_fat_init:
  8750                           	opt stack 0
  8751                           tblptru	equ	0xFF8
  8752                           tblptrh	equ	0xFF7
  8753                           tblptrl	equ	0xFF6
  8754                           tablat	equ	0xFF5
  8755                           prodh	equ	0xFF4
  8756                           prodl	equ	0xFF3
  8757                           postinc0	equ	0xFEE
  8758                           wreg	equ	0xFE8
  8759                           postdec1	equ	0xFE5
  8760                           fsr1h	equ	0xFE2
  8761                           fsr1l	equ	0xFE1
  8762                           indf2	equ	0xFDF
  8763                           fsr2h	equ	0xFDA
  8764                           fsr2l	equ	0xFD9
  8765                           status	equ	0xFD8
  8766                           
  8767 ;; *************** function _fat_restore_mbr_fbr *****************
  8768 ;; Defined at:
  8769 ;;		line 1321 in file "fat16.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;		None
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;  cntr            2   36[BANK0 ] unsigned int 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  1    wreg      unsigned char 
  8776 ;; Registers used:
  8777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8787 ;;Total ram usage:        2 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; Hardware stack levels required when called:   15
  8790 ;; This function calls:
  8791 ;;		__get_fbr
  8792 ;;		__get_mbr
  8793 ;;		_flash_sector_write
  8794 ;; This function is called by:
  8795 ;;		_fat_init
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text17
  8800  013B4C                     __ptext17:
  8801                           	opt stack 0
  8802  013B4C                     _fat_restore_mbr_fbr:
  8803                           	opt stack 13
  8804                           
  8805                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8806                           
  8807                           ;incstack = 0
  8808  013B4C  0E00               	movlw	0
  8809  013B4E  0100               	movlb	0	; () banked
  8810  013B50  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8811  013B52  0E00               	movlw	0
  8812  013B54  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8813  013B56                     l16404:
  8814                           
  8815                           ; BSR set to: 0
  8816  013B56  0E02               	movlw	2
  8817  013B58  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8818  013B5A  B0D8               	btfsc	status,0,c
  8819  013B5C  D011               	goto	u15600
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8823                           
  8824                           ; BSR set to: 0
  8825                           
  8826                           ; BSR set to: 0
  8827  013B5E  0E00               	movlw	low _buffer
  8828  013B60  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8829  013B62  6ED9               	movwf	fsr2l,c
  8830  013B64  0E0A               	movlw	high _buffer
  8831  013B66  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8832  013B68  6EDA               	movwf	fsr2h,c
  8833  013B6A  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8834  013B6E  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8835  013B72  EC8C  F094         	call	__get_mbr	;wreg free
  8836  013B76  6EDF               	movwf	indf2,c
  8837  013B78  0100               	movlb	0	; () banked
  8838  013B7A  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8839  013B7C  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8840  013B7E  D7EB               	goto	l16404
  8841  013B80                     u15600:
  8842                           
  8843                           ; BSR set to: 0
  8844                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8845                           
  8846                           ; BSR set to: 0
  8847  013B80  0E00               	movlw	0
  8848  013B82  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8849  013B84  0E00               	movlw	0
  8850  013B86  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8851  013B88  0E00               	movlw	low _buffer
  8852  013B8A  6F81               	movwf	flash_sector_write@data& (0+255),b
  8853  013B8C  0E0A               	movlw	high _buffer
  8854  013B8E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8855  013B90  EC61  F0A8         	call	_flash_sector_write	;wreg free
  8856                           
  8857                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  8858  013B94  0E00               	movlw	0
  8859  013B96  0100               	movlb	0	; () banked
  8860  013B98  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8861  013B9A  0E00               	movlw	0
  8862  013B9C  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8863  013B9E                     l16418:
  8864                           
  8865                           ; BSR set to: 0
  8866  013B9E  0E02               	movlw	2
  8867  013BA0  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8868  013BA2  B0D8               	btfsc	status,0,c
  8869  013BA4  D011               	goto	u15620
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  8873                           
  8874                           ; BSR set to: 0
  8875                           
  8876                           ; BSR set to: 0
  8877  013BA6  0E00               	movlw	low _buffer
  8878  013BA8  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8879  013BAA  6ED9               	movwf	fsr2l,c
  8880  013BAC  0E0A               	movlw	high _buffer
  8881  013BAE  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8882  013BB0  6EDA               	movwf	fsr2h,c
  8883  013BB2  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  8884  013BB6  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  8885  013BBA  EC39  F06D         	call	__get_fbr	;wreg free
  8886  013BBE  6EDF               	movwf	indf2,c
  8887  013BC0  0100               	movlb	0	; () banked
  8888  013BC2  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8889  013BC4  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8890  013BC6  D7EB               	goto	l16418
  8891  013BC8                     u15620:
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  8895                           
  8896                           ; BSR set to: 0
  8897  013BC8  0E00               	movlw	0
  8898  013BCA  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8899  013BCC  0E01               	movlw	1
  8900  013BCE  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8901  013BD0  0E00               	movlw	low _buffer
  8902  013BD2  6F81               	movwf	flash_sector_write@data& (0+255),b
  8903  013BD4  0E0A               	movlw	high _buffer
  8904  013BD6  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8905  013BD8  EC61  F0A8         	call	_flash_sector_write	;wreg free
  8906  013BDC  0012               	return	
  8907  013BDE                     __end_of_fat_restore_mbr_fbr:
  8908                           	opt stack 0
  8909                           tblptru	equ	0xFF8
  8910                           tblptrh	equ	0xFF7
  8911                           tblptrl	equ	0xFF6
  8912                           tablat	equ	0xFF5
  8913                           prodh	equ	0xFF4
  8914                           prodl	equ	0xFF3
  8915                           postinc0	equ	0xFEE
  8916                           wreg	equ	0xFE8
  8917                           postdec1	equ	0xFE5
  8918                           fsr1h	equ	0xFE2
  8919                           fsr1l	equ	0xFE1
  8920                           indf2	equ	0xFDF
  8921                           fsr2h	equ	0xFDA
  8922                           fsr2l	equ	0xFD9
  8923                           status	equ	0xFD8
  8924                           
  8925 ;; *************** function _fat_get_format_status *****************
  8926 ;; Defined at:
  8927 ;;		line 1293 in file "fat16.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  cntr            2   45[BANK0 ] unsigned int 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      enum E7027
  8934 ;; Registers used:
  8935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8942 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8943 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;Total ram usage:        4 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:   15
  8948 ;; This function calls:
  8949 ;;		__get_fbr
  8950 ;;		__get_mbr
  8951 ;;		_flash_sector_read
  8952 ;; This function is called by:
  8953 ;;		_fat_init
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text18
  8958  01315E                     __ptext18:
  8959                           	opt stack 0
  8960  01315E                     _fat_get_format_status:
  8961                           	opt stack 13
  8962                           
  8963                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  8964                           
  8965                           ;incstack = 0
  8966  01315E  0E00               	movlw	0
  8967  013160  0100               	movlb	0	; () banked
  8968  013162  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8969  013164  0E00               	movlw	0
  8970  013166  6F87               	movwf	flash_sector_read@page& (0+255),b
  8971  013168  0E00               	movlw	low _buffer
  8972  01316A  6F89               	movwf	flash_sector_read@data& (0+255),b
  8973  01316C  0E0A               	movlw	high _buffer
  8974  01316E  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8975  013170  EC68  F0AD         	call	_flash_sector_read	;wreg free
  8976                           
  8977                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  8978  013174  0E00               	movlw	0
  8979  013176  0100               	movlb	0	; () banked
  8980  013178  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8981  01317A  0E00               	movlw	0
  8982  01317C  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8983  01317E                     l16366:
  8984                           
  8985                           ; BSR set to: 0
  8986  01317E  0E02               	movlw	2
  8987  013180  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8988  013182  B0D8               	btfsc	status,0,c
  8989  013184  D017               	goto	u15550
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  8993                           
  8994                           ; BSR set to: 0
  8995                           
  8996                           ; BSR set to: 0
  8997  013186  0E00               	movlw	low _buffer
  8998  013188  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8999  01318A  6ED9               	movwf	fsr2l,c
  9000  01318C  0E0A               	movlw	high _buffer
  9001  01318E  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9002  013190  6EDA               	movwf	fsr2h,c
  9003  013192  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  9004  013196  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  9005  01319A  EC8C  F094         	call	__get_mbr	;wreg free
  9006  01319E  0100               	movlb	0	; () banked
  9007  0131A0  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9008  0131A2  50DE               	movf	postinc2,w,c
  9009  0131A4  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9010  0131A6  B4D8               	btfsc	status,2,c
  9011  0131A8  D002               	goto	l2060
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  9015  0131AA  0E00               	movlw	0
  9016                           
  9017                           ; BSR set to: 0
  9018  0131AC  0012               	return	
  9019  0131AE                     l2060:
  9020                           
  9021                           ; BSR set to: 0
  9022                           
  9023                           ; BSR set to: 0
  9024  0131AE  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9025  0131B0  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9026  0131B2  D7E5               	goto	l16366
  9027  0131B4                     u15550:
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  9031                           
  9032                           ; BSR set to: 0
  9033  0131B4  0E00               	movlw	0
  9034  0131B6  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9035  0131B8  0E01               	movlw	1
  9036  0131BA  6F87               	movwf	flash_sector_read@page& (0+255),b
  9037  0131BC  0E00               	movlw	low _buffer
  9038  0131BE  6F89               	movwf	flash_sector_read@data& (0+255),b
  9039  0131C0  0E0A               	movlw	high _buffer
  9040  0131C2  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9041  0131C4  EC68  F0AD         	call	_flash_sector_read	;wreg free
  9042                           
  9043                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  9044  0131C8  0E00               	movlw	0
  9045  0131CA  0100               	movlb	0	; () banked
  9046  0131CC  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9047  0131CE  0E00               	movlw	0
  9048  0131D0  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9049  0131D2                     l16384:
  9050                           
  9051                           ; BSR set to: 0
  9052  0131D2  0E02               	movlw	2
  9053  0131D4  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9054  0131D6  B0D8               	btfsc	status,0,c
  9055  0131D8  D017               	goto	u15580
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  9059                           
  9060                           ; BSR set to: 0
  9061                           
  9062                           ; BSR set to: 0
  9063  0131DA  0E00               	movlw	low _buffer
  9064  0131DC  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9065  0131DE  6ED9               	movwf	fsr2l,c
  9066  0131E0  0E0A               	movlw	high _buffer
  9067  0131E2  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9068  0131E4  6EDA               	movwf	fsr2h,c
  9069  0131E6  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  9070  0131EA  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  9071  0131EE  EC39  F06D         	call	__get_fbr	;wreg free
  9072  0131F2  0100               	movlb	0	; () banked
  9073  0131F4  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9074  0131F6  50DE               	movf	postinc2,w,c
  9075  0131F8  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9076  0131FA  B4D8               	btfsc	status,2,c
  9077  0131FC  D002               	goto	l2064
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  9081  0131FE  0E00               	movlw	0
  9082                           
  9083                           ; BSR set to: 0
  9084  013200  0012               	return	
  9085  013202                     l2064:
  9086                           
  9087                           ; BSR set to: 0
  9088                           
  9089                           ; BSR set to: 0
  9090  013202  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9091  013204  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9092  013206  D7E5               	goto	l16384
  9093  013208                     u15580:
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  9097                           
  9098                           ; BSR set to: 0
  9099  013208  0E01               	movlw	1
  9100  01320A  0012               	return	
  9101  01320C                     __end_of_fat_get_format_status:
  9102                           	opt stack 0
  9103                           tblptru	equ	0xFF8
  9104                           tblptrh	equ	0xFF7
  9105                           tblptrl	equ	0xFF6
  9106                           tablat	equ	0xFF5
  9107                           prodh	equ	0xFF4
  9108                           prodl	equ	0xFF3
  9109                           postinc0	equ	0xFEE
  9110                           wreg	equ	0xFE8
  9111                           postdec1	equ	0xFE5
  9112                           fsr1h	equ	0xFE2
  9113                           fsr1l	equ	0xFE1
  9114                           indf2	equ	0xFDF
  9115                           postinc2	equ	0xFDE
  9116                           fsr2h	equ	0xFDA
  9117                           fsr2l	equ	0xFD9
  9118                           status	equ	0xFD8
  9119                           
  9120 ;; *************** function __get_mbr *****************
  9121 ;; Defined at:
  9122 ;;		line 1038 in file "fat16.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;  idx             2    0[BANK0 ] unsigned int 
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;		None
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      unsigned char 
  9129 ;; Registers used:
  9130 ;;		wreg, status,2, status,0
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9139 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9140 ;;Total ram usage:        4 bytes
  9141 ;; Hardware stack levels used:    1
  9142 ;; Hardware stack levels required when called:   10
  9143 ;; This function calls:
  9144 ;;		Nothing
  9145 ;; This function is called by:
  9146 ;;		_fat_get_format_status
  9147 ;;		_fat_restore_mbr_fbr
  9148 ;;		_fat_format
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           	psect	text19
  9153  012918                     __ptext19:
  9154                           	opt stack 0
  9155  012918                     __get_mbr:
  9156                           	opt stack 17
  9157                           
  9158                           ;fat16.c: 1040: switch (idx)
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;incstack = 0
  9162  012918  D026               	goto	l1932
  9163  01291A                     
  9164                           ;fat16.c: 1043: return 0x80;
  9165  01291A  0E80               	movlw	128
  9166  01291C  0012               	return	
  9167  01291E                     
  9168                           ;fat16.c: 1045: return 0;
  9169  01291E  0E00               	movlw	0
  9170  012920  0012               	return	
  9171  012922                     
  9172                           ;fat16.c: 1047: return 2;
  9173  012922  0E02               	movlw	2
  9174  012924  0012               	return	
  9175  012926                     
  9176                           ;fat16.c: 1049: return 0;
  9177  012926  0E00               	movlw	0
  9178  012928  0012               	return	
  9179  01292A                     
  9180                           ;fat16.c: 1051: return 0x04;
  9181  01292A  0E04               	movlw	4
  9182  01292C  0012               	return	
  9183  01292E                     
  9184                           ;fat16.c: 1053: return 2;
  9185  01292E  0E02               	movlw	2
  9186  012930  0012               	return	
  9187  012932                     
  9188                           ;fat16.c: 1055: return 3;
  9189  012932  0E03               	movlw	3
  9190  012934  0012               	return	
  9191  012936                     
  9192                           ;fat16.c: 1057: return 8;
  9193  012936  0E08               	movlw	8
  9194  012938  0012               	return	
  9195  01293A                     
  9196                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9197  01293A  0E01               	movlw	1
  9198  01293C  0012               	return	
  9199  01293E                     
  9200                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9201  01293E  0E00               	movlw	0
  9202  012940  0012               	return	
  9203  012942                     
  9204                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9205  012942  0E00               	movlw	0
  9206  012944  0012               	return	
  9207  012946                     
  9208                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9209  012946  0E00               	movlw	0
  9210  012948  0012               	return	
  9211  01294A                     
  9212                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9213  01294A  0EFF               	movlw	255
  9214  01294C  0012               	return	
  9215  01294E                     
  9216                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9217  01294E  0E1F               	movlw	31
  9218  012950  0012               	return	
  9219  012952                     
  9220                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9221  012952  0E00               	movlw	0
  9222  012954  0012               	return	
  9223  012956                     
  9224                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9225  012956  0E00               	movlw	0
  9226  012958  0012               	return	
  9227  01295A                     
  9228                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9229  01295A  0E55               	movlw	85
  9230  01295C  0012               	return	
  9231  01295E                     
  9232                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9233  01295E  0EAA               	movlw	170
  9234  012960  0012               	return	
  9235  012962                     
  9236                           ;fat16.c: 1079: return 0X00;
  9237  012962  0E00               	movlw	0
  9238                           
  9239                           ;fat16.c: 1080: }
  9240  012964  0012               	return	
  9241  012966                     l1932:
  9242  012966  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9243  01296A  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9244                           
  9245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9246                           ; Switch size 1, requested type "space"
  9247                           ; Number of cases is 1, Range of values is 1 to 1
  9248                           ; switch strategies available:
  9249                           ; Name         Instructions Cycles
  9250                           ; simple_byte            4     3 (average)
  9251                           ;	Chosen strategy is simple_byte
  9252  01296E  0100               	movlb	0	; () banked
  9253  012970  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9254  012972  0A01               	xorlw	1	; case 1
  9255  012974  A4D8               	btfss	status,2,c
  9256  012976  D7F5               	goto	l1952
  9257                           
  9258                           ; BSR set to: 0
  9259                           ; Switch size 1, requested type "space"
  9260                           ; Number of cases is 18, Range of values is 190 to 255
  9261                           ; switch strategies available:
  9262                           ; Name         Instructions Cycles
  9263                           ; simple_byte           55    28 (average)
  9264                           ;	Chosen strategy is simple_byte
  9265  012978  5162               	movf	??__get_mbr& (0+255),w,b
  9266  01297A  0ABE               	xorlw	190	; case 190
  9267  01297C  B4D8               	btfsc	status,2,c
  9268  01297E  D7CD               	goto	l1933
  9269  012980  0A01               	xorlw	1	; case 191
  9270  012982  B4D8               	btfsc	status,2,c
  9271  012984  D7CC               	goto	l1935
  9272  012986  0A7F               	xorlw	127	; case 192
  9273  012988  B4D8               	btfsc	status,2,c
  9274  01298A  D7CB               	goto	l1936
  9275  01298C  0A01               	xorlw	1	; case 193
  9276  01298E  B4D8               	btfsc	status,2,c
  9277  012990  D7CA               	goto	l1937
  9278  012992  0A03               	xorlw	3	; case 194
  9279  012994  B4D8               	btfsc	status,2,c
  9280  012996  D7C9               	goto	l1938
  9281  012998  0A01               	xorlw	1	; case 195
  9282  01299A  B4D8               	btfsc	status,2,c
  9283  01299C  D7C8               	goto	l1939
  9284  01299E  0A07               	xorlw	7	; case 196
  9285  0129A0  B4D8               	btfsc	status,2,c
  9286  0129A2  D7C7               	goto	l1940
  9287  0129A4  0A01               	xorlw	1	; case 197
  9288  0129A6  B4D8               	btfsc	status,2,c
  9289  0129A8  D7C6               	goto	l1941
  9290  0129AA  0A03               	xorlw	3	; case 198
  9291  0129AC  B4D8               	btfsc	status,2,c
  9292  0129AE  D7C5               	goto	l1942
  9293  0129B0  0A01               	xorlw	1	; case 199
  9294  0129B2  B4D8               	btfsc	status,2,c
  9295  0129B4  D7C4               	goto	l1943
  9296  0129B6  0A0F               	xorlw	15	; case 200
  9297  0129B8  B4D8               	btfsc	status,2,c
  9298  0129BA  D7C3               	goto	l1944
  9299  0129BC  0A01               	xorlw	1	; case 201
  9300  0129BE  B4D8               	btfsc	status,2,c
  9301  0129C0  D7C2               	goto	l1945
  9302  0129C2  0A03               	xorlw	3	; case 202
  9303  0129C4  B4D8               	btfsc	status,2,c
  9304  0129C6  D7C1               	goto	l1946
  9305  0129C8  0A01               	xorlw	1	; case 203
  9306  0129CA  B4D8               	btfsc	status,2,c
  9307  0129CC  D7C0               	goto	l1947
  9308  0129CE  0A07               	xorlw	7	; case 204
  9309  0129D0  B4D8               	btfsc	status,2,c
  9310  0129D2  D7BF               	goto	l1948
  9311  0129D4  0A01               	xorlw	1	; case 205
  9312  0129D6  B4D8               	btfsc	status,2,c
  9313  0129D8  D7BE               	goto	l1949
  9314  0129DA  0A33               	xorlw	51	; case 254
  9315  0129DC  B4D8               	btfsc	status,2,c
  9316  0129DE  D7BD               	goto	l1950
  9317  0129E0  0A01               	xorlw	1	; case 255
  9318  0129E2  B4D8               	btfsc	status,2,c
  9319  0129E4  D7BC               	goto	l1951
  9320  0129E6  D7BD               	goto	l1952
  9321  0129E8                     __end_of__get_mbr:
  9322                           	opt stack 0
  9323                           tblptru	equ	0xFF8
  9324                           tblptrh	equ	0xFF7
  9325                           tblptrl	equ	0xFF6
  9326                           tablat	equ	0xFF5
  9327                           prodh	equ	0xFF4
  9328                           prodl	equ	0xFF3
  9329                           postinc0	equ	0xFEE
  9330                           wreg	equ	0xFE8
  9331                           postdec1	equ	0xFE5
  9332                           fsr1h	equ	0xFE2
  9333                           fsr1l	equ	0xFE1
  9334                           indf2	equ	0xFDF
  9335                           postinc2	equ	0xFDE
  9336                           fsr2h	equ	0xFDA
  9337                           fsr2l	equ	0xFD9
  9338                           status	equ	0xFD8
  9339                           
  9340 ;; *************** function __get_fbr *****************
  9341 ;; Defined at:
  9342 ;;		line 1083 in file "fat16.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  idx             2    0[BANK0 ] unsigned int 
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      unsigned char 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9358 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9359 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9360 ;;Total ram usage:        4 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:   10
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_fat_get_format_status
  9367 ;;		_fat_restore_mbr_fbr
  9368 ;;		_fat_format
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           	psect	text20
  9373  00DA72                     __ptext20:
  9374                           	opt stack 0
  9375  00DA72                     __get_fbr:
  9376                           	opt stack 17
  9377                           
  9378                           ;fat16.c: 1085: switch (idx)
  9379                           
  9380                           ;incstack = 0
  9381  00DA72  D098               	goto	l1956
  9382  00DA74                     
  9383                           ;fat16.c: 1088: return 0xEB;
  9384  00DA74  0EEB               	movlw	235
  9385  00DA76  0012               	return	
  9386  00DA78                     
  9387                           ;fat16.c: 1090: return 0x3C;
  9388  00DA78  0E3C               	movlw	60
  9389  00DA7A  0012               	return	
  9390  00DA7C                     
  9391                           ;fat16.c: 1092: return 0x90;
  9392  00DA7C  0E90               	movlw	144
  9393  00DA7E  0012               	return	
  9394  00DA80                     
  9395                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9396  00DA80  0E0B               	movlw	low STR_7
  9397  00DA82  6EF6               	movwf	tblptrl,c
  9398  00DA84                     	if	1	;There is more than 1 active tblptr byte
  9399  00DA84  0EA3               	movlw	high STR_7
  9400  00DA86  6EF7               	movwf	tblptrh,c
  9401  00DA88                     	endif
  9402  00DA88                     	if	1	;There are 3 active tblptr bytes
  9403  00DA88  0E00               	movlw	low (STR_7 shr (0+16))
  9404  00DA8A  6EF8               	movwf	tblptru,c
  9405  00DA8C                     	endif
  9406  00DA8C  0008               	tblrd		*
  9407  00DA8E  50F5               	movf	tablat,w,c
  9408  00DA90  0012               	return	
  9409  00DA92                     
  9410                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9411  00DA92  0E0C               	movlw	low (STR_7+1)
  9412  00DA94  6EF6               	movwf	tblptrl,c
  9413  00DA96  0EA3               	movlw	high (STR_7+1)
  9414  00DA98  6EF7               	movwf	tblptrh,c
  9415  00DA9A                     	if	0	;tblptru may be non-zero
  9416  00DA9A                     	endif
  9417  00DA9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9418  00DA9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9419  00DA9C  6EF8               	movwf	tblptru,c
  9420  00DA9E                     	endif
  9421  00DA9E  0008               	tblrd		*
  9422  00DAA0  50F5               	movf	tablat,w,c
  9423  00DAA2  0012               	return	
  9424  00DAA4                     
  9425                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9426  00DAA4  0E0D               	movlw	low (STR_7+2)
  9427  00DAA6  6EF6               	movwf	tblptrl,c
  9428  00DAA8  0EA3               	movlw	high (STR_7+2)
  9429  00DAAA  6EF7               	movwf	tblptrh,c
  9430  00DAAC                     	if	0	;tblptru may be non-zero
  9431  00DAAC                     	endif
  9432  00DAAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9433  00DAAC  0E00               	movlw	low (__mediumconst shr (0+16))
  9434  00DAAE  6EF8               	movwf	tblptru,c
  9435  00DAB0                     	endif
  9436  00DAB0  0008               	tblrd		*
  9437  00DAB2  50F5               	movf	tablat,w,c
  9438  00DAB4  0012               	return	
  9439  00DAB6                     
  9440                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9441  00DAB6  0E0E               	movlw	low (STR_7+3)
  9442  00DAB8  6EF6               	movwf	tblptrl,c
  9443  00DABA  0EA3               	movlw	high (STR_7+3)
  9444  00DABC  6EF7               	movwf	tblptrh,c
  9445  00DABE                     	if	0	;tblptru may be non-zero
  9446  00DABE                     	endif
  9447  00DABE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9448  00DABE  0E00               	movlw	low (__mediumconst shr (0+16))
  9449  00DAC0  6EF8               	movwf	tblptru,c
  9450  00DAC2                     	endif
  9451  00DAC2  0008               	tblrd		*
  9452  00DAC4  50F5               	movf	tablat,w,c
  9453  00DAC6  0012               	return	
  9454  00DAC8                     
  9455                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9456  00DAC8  0E0F               	movlw	low (STR_7+4)
  9457  00DACA  6EF6               	movwf	tblptrl,c
  9458  00DACC  0EA3               	movlw	high (STR_7+4)
  9459  00DACE  6EF7               	movwf	tblptrh,c
  9460  00DAD0                     	if	0	;tblptru may be non-zero
  9461  00DAD0                     	endif
  9462  00DAD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9463  00DAD0  0E00               	movlw	low (__mediumconst shr (0+16))
  9464  00DAD2  6EF8               	movwf	tblptru,c
  9465  00DAD4                     	endif
  9466  00DAD4  0008               	tblrd		*
  9467  00DAD6  50F5               	movf	tablat,w,c
  9468  00DAD8  0012               	return	
  9469  00DADA                     
  9470                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9471  00DADA  0E10               	movlw	low (STR_7+5)
  9472  00DADC  6EF6               	movwf	tblptrl,c
  9473  00DADE  0EA3               	movlw	high (STR_7+5)
  9474  00DAE0  6EF7               	movwf	tblptrh,c
  9475  00DAE2                     	if	0	;tblptru may be non-zero
  9476  00DAE2                     	endif
  9477  00DAE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9478  00DAE2  0E00               	movlw	low (__mediumconst shr (0+16))
  9479  00DAE4  6EF8               	movwf	tblptru,c
  9480  00DAE6                     	endif
  9481  00DAE6  0008               	tblrd		*
  9482  00DAE8  50F5               	movf	tablat,w,c
  9483  00DAEA  0012               	return	
  9484  00DAEC                     
  9485                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9486  00DAEC  0E11               	movlw	low (STR_7+6)
  9487  00DAEE  6EF6               	movwf	tblptrl,c
  9488  00DAF0  0EA3               	movlw	high (STR_7+6)
  9489  00DAF2  6EF7               	movwf	tblptrh,c
  9490  00DAF4                     	if	0	;tblptru may be non-zero
  9491  00DAF4                     	endif
  9492  00DAF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9493  00DAF4  0E00               	movlw	low (__mediumconst shr (0+16))
  9494  00DAF6  6EF8               	movwf	tblptru,c
  9495  00DAF8                     	endif
  9496  00DAF8  0008               	tblrd		*
  9497  00DAFA  50F5               	movf	tablat,w,c
  9498  00DAFC  0012               	return	
  9499  00DAFE                     
  9500                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9501  00DAFE  0E12               	movlw	low (STR_7+7)
  9502  00DB00  6EF6               	movwf	tblptrl,c
  9503  00DB02  0EA3               	movlw	high (STR_7+7)
  9504  00DB04  6EF7               	movwf	tblptrh,c
  9505  00DB06                     	if	0	;tblptru may be non-zero
  9506  00DB06                     	endif
  9507  00DB06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9508  00DB06  0E00               	movlw	low (__mediumconst shr (0+16))
  9509  00DB08  6EF8               	movwf	tblptru,c
  9510  00DB0A                     	endif
  9511  00DB0A  0008               	tblrd		*
  9512  00DB0C  50F5               	movf	tablat,w,c
  9513  00DB0E  0012               	return	
  9514  00DB10                     
  9515                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9516  00DB10  0E00               	movlw	0
  9517  00DB12  0012               	return	
  9518  00DB14                     
  9519                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9520  00DB14  0E02               	movlw	2
  9521  00DB16  0012               	return	
  9522  00DB18                     
  9523                           ;fat16.c: 1114: return 1;
  9524  00DB18  0E01               	movlw	1
  9525  00DB1A  0012               	return	
  9526  00DB1C                     
  9527                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9528  00DB1C  0E01               	movlw	1
  9529  00DB1E  0012               	return	
  9530  00DB20                     
  9531                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9532  00DB20  0E00               	movlw	0
  9533  00DB22  0012               	return	
  9534  00DB24                     
  9535                           ;fat16.c: 1120: return 1;
  9536  00DB24  0E01               	movlw	1
  9537  00DB26  0012               	return	
  9538  00DB28                     
  9539                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9540  00DB28  0E40               	movlw	64
  9541  00DB2A  0012               	return	
  9542  00DB2C                     
  9543                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9544  00DB2C  0E00               	movlw	0
  9545  00DB2E  0012               	return	
  9546  00DB30                     
  9547                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9548  00DB30  0EFF               	movlw	255
  9549  00DB32  0012               	return	
  9550  00DB34                     
  9551                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9552  00DB34  0E1F               	movlw	31
  9553  00DB36  0012               	return	
  9554  00DB38                     
  9555                           ;fat16.c: 1130: return 0XF8;
  9556  00DB38  0EF8               	movlw	248
  9557  00DB3A  0012               	return	
  9558  00DB3C                     
  9559                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9560  00DB3C  0E20               	movlw	32
  9561  00DB3E  0012               	return	
  9562  00DB40                     
  9563                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9564  00DB40  0E00               	movlw	0
  9565  00DB42  0012               	return	
  9566  00DB44                     
  9567                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9568  00DB44  0E3F               	movlw	63
  9569  00DB46  0012               	return	
  9570  00DB48                     
  9571                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9572  00DB48  0E00               	movlw	0
  9573  00DB4A  0012               	return	
  9574  00DB4C                     
  9575                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9576  00DB4C  0E10               	movlw	16
  9577  00DB4E  0012               	return	
  9578  00DB50                     
  9579                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9580  00DB50  0E00               	movlw	0
  9581  00DB52  0012               	return	
  9582  00DB54                     
  9583                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9584  00DB54  0E00               	movlw	0
  9585  00DB56  0012               	return	
  9586  00DB58                     
  9587                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9588  00DB58  0E00               	movlw	0
  9589  00DB5A  0012               	return	
  9590  00DB5C                     
  9591                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9592  00DB5C  0E00               	movlw	0
  9593  00DB5E  0012               	return	
  9594  00DB60                     
  9595                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9596  00DB60  0E00               	movlw	0
  9597  00DB62  0012               	return	
  9598  00DB64                     
  9599                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9600  00DB64  0E01               	movlw	1
  9601  00DB66  0012               	return	
  9602  00DB68                     
  9603                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9604  00DB68  0E00               	movlw	0
  9605  00DB6A  0012               	return	
  9606  00DB6C                     
  9607                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9608  00DB6C  0E22               	movlw	34
  9609  00DB6E  0012               	return	
  9610  00DB70                     
  9611                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9612  00DB70  0E00               	movlw	0
  9613  00DB72  0012               	return	
  9614  00DB74                     
  9615                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9616                           
  9617                           ;fat16.c: 1161: case 0x2F:
  9618  00DB74  0E00               	movlw	0
  9619  00DB76  0012               	return	
  9620  00DB78                     
  9621                           ;fat16.c: 1164: return 'F';
  9622  00DB78  0E46               	movlw	70
  9623  00DB7A  0012               	return	
  9624  00DB7C                     
  9625                           ;fat16.c: 1166: return 'A';
  9626  00DB7C  0E41               	movlw	65
  9627  00DB7E  0012               	return	
  9628  00DB80                     
  9629                           ;fat16.c: 1168: return 'T';
  9630  00DB80  0E54               	movlw	84
  9631  00DB82  0012               	return	
  9632  00DB84                     
  9633                           ;fat16.c: 1170: return '1';
  9634  00DB84  0E31               	movlw	49
  9635  00DB86  0012               	return	
  9636  00DB88                     
  9637                           ;fat16.c: 1172: return '6';
  9638  00DB88  0E36               	movlw	54
  9639  00DB8A  0012               	return	
  9640  00DB8C                     
  9641                           ;fat16.c: 1174: return ' ';
  9642  00DB8C  0E20               	movlw	32
  9643  00DB8E  0012               	return	
  9644  00DB90                     
  9645                           ;fat16.c: 1176: return ' ';
  9646  00DB90  0E20               	movlw	32
  9647  00DB92  0012               	return	
  9648  00DB94                     
  9649                           ;fat16.c: 1178: return ' ';
  9650  00DB94  0E20               	movlw	32
  9651  00DB96  0012               	return	
  9652  00DB98                     
  9653                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9654  00DB98  0E55               	movlw	85
  9655  00DB9A  0012               	return	
  9656  00DB9C                     
  9657                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9658  00DB9C  0EAA               	movlw	170
  9659  00DB9E  0012               	return	
  9660  00DBA0                     
  9661                           ;fat16.c: 1184: return 0X00;
  9662  00DBA0  0E00               	movlw	0
  9663                           
  9664                           ;fat16.c: 1185: }
  9665  00DBA2  0012               	return	
  9666  00DBA4                     l1956:
  9667  00DBA4  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9668  00DBA8  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9669                           
  9670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9671                           ; Switch size 1, requested type "space"
  9672                           ; Number of cases is 2, Range of values is 0 to 1
  9673                           ; switch strategies available:
  9674                           ; Name         Instructions Cycles
  9675                           ; simple_byte            7     4 (average)
  9676                           ;	Chosen strategy is simple_byte
  9677  00DBAC  0100               	movlb	0	; () banked
  9678  00DBAE  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9679  00DBB0  0A00               	xorlw	0	; case 0
  9680  00DBB2  B4D8               	btfsc	status,2,c
  9681  00DBB4  D004               	goto	l20016
  9682  00DBB6  0A01               	xorlw	1	; case 1
  9683  00DBB8  B4D8               	btfsc	status,2,c
  9684  00DBBA  D08D               	goto	l20018
  9685  00DBBC  D7F1               	goto	l2006
  9686  00DBBE                     l20016:
  9687                           
  9688                           ; BSR set to: 0
  9689                           ; Switch size 1, requested type "space"
  9690                           ; Number of cases is 46, Range of values is 0 to 61
  9691                           ; switch strategies available:
  9692                           ; Name         Instructions Cycles
  9693                           ; simple_byte          139    70 (average)
  9694                           ;	Chosen strategy is simple_byte
  9695  00DBBE  5162               	movf	??__get_fbr& (0+255),w,b
  9696  00DBC0  0A00               	xorlw	0	; case 0
  9697  00DBC2  B4D8               	btfsc	status,2,c
  9698  00DBC4  D757               	goto	l1957
  9699  00DBC6  0A01               	xorlw	1	; case 1
  9700  00DBC8  B4D8               	btfsc	status,2,c
  9701  00DBCA  D756               	goto	l1959
  9702  00DBCC  0A03               	xorlw	3	; case 2
  9703  00DBCE  B4D8               	btfsc	status,2,c
  9704  00DBD0  D755               	goto	l1960
  9705  00DBD2  0A01               	xorlw	1	; case 3
  9706  00DBD4  B4D8               	btfsc	status,2,c
  9707  00DBD6  D754               	goto	l1961
  9708  00DBD8  0A07               	xorlw	7	; case 4
  9709  00DBDA  B4D8               	btfsc	status,2,c
  9710  00DBDC  D75A               	goto	l1962
  9711  00DBDE  0A01               	xorlw	1	; case 5
  9712  00DBE0  B4D8               	btfsc	status,2,c
  9713  00DBE2  D760               	goto	l1963
  9714  00DBE4  0A03               	xorlw	3	; case 6
  9715  00DBE6  B4D8               	btfsc	status,2,c
  9716  00DBE8  D766               	goto	l1964
  9717  00DBEA  0A01               	xorlw	1	; case 7
  9718  00DBEC  B4D8               	btfsc	status,2,c
  9719  00DBEE  D76C               	goto	l1965
  9720  00DBF0  0A0F               	xorlw	15	; case 8
  9721  00DBF2  B4D8               	btfsc	status,2,c
  9722  00DBF4  D772               	goto	l1966
  9723  00DBF6  0A01               	xorlw	1	; case 9
  9724  00DBF8  B4D8               	btfsc	status,2,c
  9725  00DBFA  D778               	goto	l1967
  9726  00DBFC  0A03               	xorlw	3	; case 10
  9727  00DBFE  B4D8               	btfsc	status,2,c
  9728  00DC00  D77E               	goto	l1968
  9729  00DC02  0A01               	xorlw	1	; case 11
  9730  00DC04  B4D8               	btfsc	status,2,c
  9731  00DC06  D784               	goto	l1969
  9732  00DC08  0A07               	xorlw	7	; case 12
  9733  00DC0A  B4D8               	btfsc	status,2,c
  9734  00DC0C  D783               	goto	l1970
  9735  00DC0E  0A01               	xorlw	1	; case 13
  9736  00DC10  B4D8               	btfsc	status,2,c
  9737  00DC12  D782               	goto	l1971
  9738  00DC14  0A03               	xorlw	3	; case 14
  9739  00DC16  B4D8               	btfsc	status,2,c
  9740  00DC18  D781               	goto	l1972
  9741  00DC1A  0A01               	xorlw	1	; case 15
  9742  00DC1C  B4D8               	btfsc	status,2,c
  9743  00DC1E  D780               	goto	l1973
  9744  00DC20  0A1F               	xorlw	31	; case 16
  9745  00DC22  B4D8               	btfsc	status,2,c
  9746  00DC24  D77F               	goto	l1974
  9747  00DC26  0A01               	xorlw	1	; case 17
  9748  00DC28  B4D8               	btfsc	status,2,c
  9749  00DC2A  D77E               	goto	l1975
  9750  00DC2C  0A03               	xorlw	3	; case 18
  9751  00DC2E  B4D8               	btfsc	status,2,c
  9752  00DC30  D77D               	goto	l1976
  9753  00DC32  0A01               	xorlw	1	; case 19
  9754  00DC34  B4D8               	btfsc	status,2,c
  9755  00DC36  D77C               	goto	l1977
  9756  00DC38  0A07               	xorlw	7	; case 20
  9757  00DC3A  B4D8               	btfsc	status,2,c
  9758  00DC3C  D77B               	goto	l1978
  9759  00DC3E  0A01               	xorlw	1	; case 21
  9760  00DC40  B4D8               	btfsc	status,2,c
  9761  00DC42  D77A               	goto	l1979
  9762  00DC44  0A03               	xorlw	3	; case 22
  9763  00DC46  B4D8               	btfsc	status,2,c
  9764  00DC48  D779               	goto	l1980
  9765  00DC4A  0A01               	xorlw	1	; case 23
  9766  00DC4C  B4D8               	btfsc	status,2,c
  9767  00DC4E  D778               	goto	l1981
  9768  00DC50  0A0F               	xorlw	15	; case 24
  9769  00DC52  B4D8               	btfsc	status,2,c
  9770  00DC54  D777               	goto	l1982
  9771  00DC56  0A01               	xorlw	1	; case 25
  9772  00DC58  B4D8               	btfsc	status,2,c
  9773  00DC5A  D776               	goto	l1983
  9774  00DC5C  0A03               	xorlw	3	; case 26
  9775  00DC5E  B4D8               	btfsc	status,2,c
  9776  00DC60  D775               	goto	l1984
  9777  00DC62  0A01               	xorlw	1	; case 27
  9778  00DC64  B4D8               	btfsc	status,2,c
  9779  00DC66  D774               	goto	l1985
  9780  00DC68  0A07               	xorlw	7	; case 28
  9781  00DC6A  B4D8               	btfsc	status,2,c
  9782  00DC6C  D773               	goto	l1986
  9783  00DC6E  0A01               	xorlw	1	; case 29
  9784  00DC70  B4D8               	btfsc	status,2,c
  9785  00DC72  D772               	goto	l1987
  9786  00DC74  0A03               	xorlw	3	; case 30
  9787  00DC76  B4D8               	btfsc	status,2,c
  9788  00DC78  D771               	goto	l1988
  9789  00DC7A  0A01               	xorlw	1	; case 31
  9790  00DC7C  B4D8               	btfsc	status,2,c
  9791  00DC7E  D770               	goto	l1989
  9792  00DC80  0A37               	xorlw	55	; case 40
  9793  00DC82  B4D8               	btfsc	status,2,c
  9794  00DC84  D76F               	goto	l1990
  9795  00DC86  0A01               	xorlw	1	; case 41
  9796  00DC88  B4D8               	btfsc	status,2,c
  9797  00DC8A  D76E               	goto	l1991
  9798  00DC8C  0A05               	xorlw	5	; case 44
  9799  00DC8E  B4D8               	btfsc	status,2,c
  9800  00DC90  D76D               	goto	l1992
  9801  00DC92  0A01               	xorlw	1	; case 45
  9802  00DC94  B4D8               	btfsc	status,2,c
  9803  00DC96  D76C               	goto	l1993
  9804  00DC98  0A03               	xorlw	3	; case 46
  9805  00DC9A  B4D8               	btfsc	status,2,c
  9806  00DC9C  D76B               	goto	l1994
  9807  00DC9E  0A01               	xorlw	1	; case 47
  9808  00DCA0  B4D8               	btfsc	status,2,c
  9809  00DCA2  D768               	goto	l1994
  9810  00DCA4  0A19               	xorlw	25	; case 54
  9811  00DCA6  B4D8               	btfsc	status,2,c
  9812  00DCA8  D767               	goto	l1996
  9813  00DCAA  0A01               	xorlw	1	; case 55
  9814  00DCAC  B4D8               	btfsc	status,2,c
  9815  00DCAE  D766               	goto	l1997
  9816  00DCB0  0A0F               	xorlw	15	; case 56
  9817  00DCB2  B4D8               	btfsc	status,2,c
  9818  00DCB4  D765               	goto	l1998
  9819  00DCB6  0A01               	xorlw	1	; case 57
  9820  00DCB8  B4D8               	btfsc	status,2,c
  9821  00DCBA  D764               	goto	l1999
  9822  00DCBC  0A03               	xorlw	3	; case 58
  9823  00DCBE  B4D8               	btfsc	status,2,c
  9824  00DCC0  D763               	goto	l2000
  9825  00DCC2  0A01               	xorlw	1	; case 59
  9826  00DCC4  B4D8               	btfsc	status,2,c
  9827  00DCC6  D762               	goto	l2001
  9828  00DCC8  0A07               	xorlw	7	; case 60
  9829  00DCCA  B4D8               	btfsc	status,2,c
  9830  00DCCC  D761               	goto	l2002
  9831  00DCCE  0A01               	xorlw	1	; case 61
  9832  00DCD0  B4D8               	btfsc	status,2,c
  9833  00DCD2  D760               	goto	l2003
  9834  00DCD4  D765               	goto	l2006
  9835  00DCD6                     l20018:
  9836                           
  9837                           ; BSR set to: 0
  9838                           ; Switch size 1, requested type "space"
  9839                           ; Number of cases is 2, Range of values is 254 to 255
  9840                           ; switch strategies available:
  9841                           ; Name         Instructions Cycles
  9842                           ; simple_byte            7     4 (average)
  9843                           ;	Chosen strategy is simple_byte
  9844  00DCD6  5162               	movf	??__get_fbr& (0+255),w,b
  9845  00DCD8  0AFE               	xorlw	254	; case 254
  9846  00DCDA  B4D8               	btfsc	status,2,c
  9847  00DCDC  D75D               	goto	l2004
  9848  00DCDE  0A01               	xorlw	1	; case 255
  9849  00DCE0  B4D8               	btfsc	status,2,c
  9850  00DCE2  D75C               	goto	l2005
  9851  00DCE4  D75D               	goto	l2006
  9852  00DCE6                     __end_of__get_fbr:
  9853                           	opt stack 0
  9854                           tblptru	equ	0xFF8
  9855                           tblptrh	equ	0xFF7
  9856                           tblptrl	equ	0xFF6
  9857                           tablat	equ	0xFF5
  9858                           prodh	equ	0xFF4
  9859                           prodl	equ	0xFF3
  9860                           postinc0	equ	0xFEE
  9861                           wreg	equ	0xFE8
  9862                           postdec1	equ	0xFE5
  9863                           fsr1h	equ	0xFE2
  9864                           fsr1l	equ	0xFE1
  9865                           indf2	equ	0xFDF
  9866                           postinc2	equ	0xFDE
  9867                           fsr2h	equ	0xFDA
  9868                           fsr2l	equ	0xFD9
  9869                           status	equ	0xFD8
  9870                           
  9871 ;; *************** function _encoder_init *****************
  9872 ;; Defined at:
  9873 ;;		line 92 in file "encoder.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;Total ram usage:        0 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:   10
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_system_init
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text21
  9902  015B44                     __ptext21:
  9903                           	opt stack 0
  9904  015B44                     _encoder_init:
  9905                           	opt stack 19
  9906                           
  9907                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9908                           
  9909                           ;incstack = 0
  9910  015B44  5084               	movf	3972,w,c	;volatile
  9911  015B46  0B07               	andlw	7
  9912  015B48  0101               	movlb	1	; () banked
  9913  015B4A  6F48               	movwf	_enc1& (0+255),b
  9914                           
  9915                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9916  015B4C  5080               	movf	3968,w,c	;volatile
  9917  015B4E  0B07               	andlw	7
  9918  015B50  6F47               	movwf	_enc2& (0+255),b
  9919                           
  9920                           ; BSR set to: 1
  9921                           ;encoder.c: 96: os.encoder1Count = 0;
  9922  015B52  0E00               	movlw	0
  9923  015B54  6F69               	movwf	(_os+3)& (0+255),b	;volatile
  9924                           
  9925                           ; BSR set to: 1
  9926                           ;encoder.c: 97: os.encoder2Count = 0;
  9927  015B56  0E00               	movlw	0
  9928  015B58  6F6B               	movwf	(_os+5)& (0+255),b	;volatile
  9929                           
  9930                           ; BSR set to: 1
  9931                           ;encoder.c: 98: os.button1 = 0;
  9932  015B5A  0E00               	movlw	0
  9933  015B5C  6F6A               	movwf	(_os+4)& (0+255),b	;volatile
  9934                           
  9935                           ; BSR set to: 1
  9936                           ;encoder.c: 99: os.button2 = 0;
  9937  015B5E  0E00               	movlw	0
  9938  015B60  6F6C               	movwf	(_os+6)& (0+255),b	;volatile
  9939                           
  9940                           ; BSR set to: 1
  9941                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9942  015B62  0E01               	movlw	1
  9943  015B64  6F75               	movwf	(_os+15)& (0+255),b	;volatile
  9944                           
  9945                           ; BSR set to: 1
  9946  015B66  0012               	return		;funcret
  9947  015B68                     __end_of_encoder_init:
  9948                           	opt stack 0
  9949                           tblptru	equ	0xFF8
  9950                           tblptrh	equ	0xFF7
  9951                           tblptrl	equ	0xFF6
  9952                           tablat	equ	0xFF5
  9953                           prodh	equ	0xFF4
  9954                           prodl	equ	0xFF3
  9955                           postinc0	equ	0xFEE
  9956                           wreg	equ	0xFE8
  9957                           postdec1	equ	0xFE5
  9958                           fsr1h	equ	0xFE2
  9959                           fsr1l	equ	0xFE1
  9960                           indf2	equ	0xFDF
  9961                           postinc2	equ	0xFDE
  9962                           fsr2h	equ	0xFDA
  9963                           fsr2l	equ	0xFD9
  9964                           status	equ	0xFD8
  9965                           
  9966 ;; *************** function _display_update *****************
  9967 ;; Defined at:
  9968 ;;		line 618 in file "display.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;		None
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  line            1   16[BANK0 ] unsigned char 
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9986 ;;Total ram usage:        1 bytes
  9987 ;; Hardware stack levels used:    1
  9988 ;; Hardware stack levels required when called:   14
  9989 ;; This function calls:
  9990 ;;		_i2c_display_cursor
  9991 ;;		_i2c_display_write_fixed
  9992 ;; This function is called by:
  9993 ;;		_main
  9994 ;;		_system_init
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           	psect	text22
  9999  015662                     __ptext22:
 10000                           	opt stack 0
 10001  015662                     _display_update:
 10002                           	opt stack 15
 10003                           
 10004                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
 10005                           
 10006                           ; BSR set to: 1
 10007                           ;incstack = 0
 10008  015662  0E00               	movlw	0
 10009  015664  0100               	movlb	0	; () banked
 10010  015666  6F70               	movwf	display_update@line& (0+255),b
 10011  015668                     l17142:
 10012                           
 10013                           ; BSR set to: 0
 10014  015668  0E03               	movlw	3
 10015  01566A  6570               	cpfsgt	display_update@line& (0+255),b
 10016  01566C  D001               	goto	l1499
 10017  01566E  0012               	return	
 10018  015670                     l1499:
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
 10022                           
 10023                           ; BSR set to: 0
 10024  015670  0E00               	movlw	0
 10025  015672  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10026  015674  5170               	movf	display_update@line& (0+255),w,b
 10027  015676  ECD8  F0AD         	call	_i2c_display_cursor
 10028                           
 10029                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
 10030  01567A  0100               	movlb	0	; () banked
 10031  01567C  5170               	movf	display_update@line& (0+255),w,b
 10032  01567E  0D14               	mullw	20
 10033  015680  0E42               	movlw	low _display_content
 10034  015682  24F3               	addwf	prodl,w,c
 10035  015684  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10036  015686  0E02               	movlw	high _display_content
 10037  015688  20F4               	addwfc	prodh,w,c
 10038  01568A  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10039  01568C  0E14               	movlw	20
 10040  01568E  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10041  015690  EC18  F0A7         	call	_i2c_display_write_fixed	;wreg free
 10042  015694  0100               	movlb	0	; () banked
 10043  015696  2B70               	incf	display_update@line& (0+255),f,b
 10044  015698  D7E7               	goto	l17142
 10045  01569A                     __end_of_display_update:
 10046                           	opt stack 0
 10047                           tblptru	equ	0xFF8
 10048                           tblptrh	equ	0xFF7
 10049                           tblptrl	equ	0xFF6
 10050                           tablat	equ	0xFF5
 10051                           prodh	equ	0xFF4
 10052                           prodl	equ	0xFF3
 10053                           postinc0	equ	0xFEE
 10054                           wreg	equ	0xFE8
 10055                           postdec1	equ	0xFE5
 10056                           fsr1h	equ	0xFE2
 10057                           fsr1l	equ	0xFE1
 10058                           indf2	equ	0xFDF
 10059                           postinc2	equ	0xFDE
 10060                           fsr2h	equ	0xFDA
 10061                           fsr2l	equ	0xFD9
 10062                           status	equ	0xFD8
 10063                           
 10064 ;; *************** function _i2c_display_write_fixed *****************
 10065 ;; Defined at:
 10066 ;;		line 475 in file "i2c.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10069 ;;		 -> display_content(80), 
 10070 ;;  length          1    7[BANK0 ] unsigned char 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  pos             1    8[BANK0 ] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      void 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10082 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10086 ;;Total ram usage:        4 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:   11
 10089 ;; This function calls:
 10090 ;;		__i2c_send
 10091 ;;		__i2c_start
 10092 ;;		__i2c_stop
 10093 ;;		__i2c_wait_idle
 10094 ;; This function is called by:
 10095 ;;		_display_update
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           	psect	text23
 10100  014E30                     __ptext23:
 10101                           	opt stack 0
 10102  014E30                     _i2c_display_write_fixed:
 10103                           	opt stack 17
 10104                           
 10105                           ;i2c.c: 477: uint8_t pos;;i2c.c: 482: _i2c_wait_idle();
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;incstack = 0
 10109  014E30  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10110                           
 10111                           ;i2c.c: 483: _i2c_start();
 10112  014E34  EC06  F0AF         	call	__i2c_start	;wreg free
 10113                           
 10114                           ;i2c.c: 484: _i2c_wait_idle();
 10115  014E38  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10116                           
 10117                           ;i2c.c: 485: _i2c_send(0b01111000);
 10118  014E3C  0E78               	movlw	120
 10119  014E3E  ECF3  F0AE         	call	__i2c_send
 10120                           
 10121                           ;i2c.c: 486: _i2c_wait_idle();
 10122  014E42  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10123                           
 10124                           ;i2c.c: 487: _i2c_send(0b01000000);
 10125  014E46  0E40               	movlw	64
 10126  014E48  ECF3  F0AE         	call	__i2c_send
 10127                           
 10128                           ;i2c.c: 488: _i2c_wait_idle();
 10129  014E4C  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10130                           
 10131                           ;i2c.c: 491: for(pos=0; pos<length; ++pos)
 10132  014E50  0E00               	movlw	0
 10133  014E52  0100               	movlb	0	; () banked
 10134  014E54  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10135  014E56  D00F               	goto	l1257
 10136  014E58                     
 10137                           ; BSR set to: 0
 10138                           ;i2c.c: 492: {;i2c.c: 493: _i2c_send(data[pos]);
 10139                           
 10140                           ; BSR set to: 0
 10141  014E58  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10142  014E5A  0D01               	mullw	1
 10143  014E5C  50F3               	movf	prodl,w,c
 10144  014E5E  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10145  014E60  6ED9               	movwf	fsr2l,c
 10146  014E62  50F4               	movf	prodh,w,c
 10147  014E64  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10148  014E66  6EDA               	movwf	fsr2h,c
 10149  014E68  50DF               	movf	indf2,w,c
 10150  014E6A  ECF3  F0AE         	call	__i2c_send
 10151                           
 10152                           ;i2c.c: 494: _i2c_wait_idle();
 10153  014E6E  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10154  014E72  0100               	movlb	0	; () banked
 10155  014E74  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10156  014E76                     l1257:
 10157                           
 10158                           ; BSR set to: 0
 10159                           
 10160                           ; BSR set to: 0
 10161  014E76  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10162  014E78  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10163  014E7A  A0D8               	btfss	status,0,c
 10164  014E7C  D7ED               	goto	l1258
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;i2c.c: 495: };i2c.c: 497: _i2c_stop();
 10168                           
 10169                           ; BSR set to: 0
 10170  014E7E  EC02  F0AF         	call	__i2c_stop	;wreg free
 10171  014E82  0012               	return		;funcret
 10172  014E84                     __end_of_i2c_display_write_fixed:
 10173                           	opt stack 0
 10174                           tblptru	equ	0xFF8
 10175                           tblptrh	equ	0xFF7
 10176                           tblptrl	equ	0xFF6
 10177                           tablat	equ	0xFF5
 10178                           prodh	equ	0xFF4
 10179                           prodl	equ	0xFF3
 10180                           postinc0	equ	0xFEE
 10181                           wreg	equ	0xFE8
 10182                           postdec1	equ	0xFE5
 10183                           fsr1h	equ	0xFE2
 10184                           fsr1l	equ	0xFE1
 10185                           indf2	equ	0xFDF
 10186                           postinc2	equ	0xFDE
 10187                           fsr2h	equ	0xFDA
 10188                           fsr2l	equ	0xFD9
 10189                           status	equ	0xFD8
 10190                           
 10191 ;; *************** function _i2c_display_cursor *****************
 10192 ;; Defined at:
 10193 ;;		line 435 in file "i2c.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;  line            1    wreg     unsigned char 
 10196 ;;  position        1   13[BANK0 ] unsigned char 
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  line            1   14[BANK0 ] unsigned char 
 10199 ;;  address         1   15[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  1    wreg      void 
 10202 ;; Registers used:
 10203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10209 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;Total ram usage:        3 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:   13
 10216 ;; This function calls:
 10217 ;;		__ic2_display_set_ddram_address
 10218 ;; This function is called by:
 10219 ;;		_display_update
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text24
 10224  015BB0                     __ptext24:
 10225                           	opt stack 0
 10226  015BB0                     _i2c_display_cursor:
 10227                           	opt stack 15
 10228                           
 10229                           ;incstack = 0
 10230                           ;i2c_display_cursor@line stored from wreg
 10231  015BB0  0100               	movlb	0	; () banked
 10232  015BB2  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10233                           
 10234                           ;i2c.c: 437: uint8_t address;;i2c.c: 440: line &= 0b11;
 10235  015BB4  0E03               	movlw	3
 10236  015BB6  0100               	movlb	0	; () banked
 10237  015BB8  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10238                           
 10239                           ;i2c.c: 441: address = line<<5;
 10240  015BBA  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10241  015BBC  46E8               	rlncf	wreg,f,c
 10242  015BBE  0BE0               	andlw	224
 10243  015BC0  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10244                           
 10245                           ;i2c.c: 442: position &= 0b11111;
 10246  015BC2  0E1F               	movlw	31
 10247  015BC4  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10248                           
 10249                           ;i2c.c: 443: address |= position;
 10250  015BC6  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10251  015BC8  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;i2c.c: 449: _ic2_display_set_ddram_address(address);
 10255  015BCA  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10256  015BCC  ECB4  F0AD         	call	__ic2_display_set_ddram_address
 10257  015BD0  0012               	return		;funcret
 10258  015BD2                     __end_of_i2c_display_cursor:
 10259                           	opt stack 0
 10260                           tblptru	equ	0xFF8
 10261                           tblptrh	equ	0xFF7
 10262                           tblptrl	equ	0xFF6
 10263                           tablat	equ	0xFF5
 10264                           prodh	equ	0xFF4
 10265                           prodl	equ	0xFF3
 10266                           postinc0	equ	0xFEE
 10267                           wreg	equ	0xFE8
 10268                           postdec1	equ	0xFE5
 10269                           fsr1h	equ	0xFE2
 10270                           fsr1l	equ	0xFE1
 10271                           indf2	equ	0xFDF
 10272                           postinc2	equ	0xFDE
 10273                           fsr2h	equ	0xFDA
 10274                           fsr2l	equ	0xFD9
 10275                           status	equ	0xFD8
 10276                           
 10277 ;; *************** function __ic2_display_set_ddram_address *****************
 10278 ;; Defined at:
 10279 ;;		line 406 in file "i2c.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  address         1    wreg     unsigned char 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;  address         1   10[BANK0 ] unsigned char 
 10284 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1    wreg      void 
 10287 ;; Registers used:
 10288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10295 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10297 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10298 ;;Total ram usage:        3 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; Hardware stack levels required when called:   12
 10301 ;; This function calls:
 10302 ;;		__i2c_write
 10303 ;; This function is called by:
 10304 ;;		_i2c_display_cursor
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text25
 10309  015B68                     __ptext25:
 10310                           	opt stack 0
 10311  015B68                     __ic2_display_set_ddram_address:
 10312                           	opt stack 15
 10313                           
 10314                           ;incstack = 0
 10315                           ;__ic2_display_set_ddram_address@address stored from wreg
 10316  015B68  0100               	movlb	0	; () banked
 10317  015B6A  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10318                           
 10319                           ;i2c.c: 408: uint8_t data_array[2];;i2c.c: 409: data_array[0] = 0b00000000;
 10320  015B6C  0E00               	movlw	0
 10321  015B6E  0100               	movlb	0	; () banked
 10322  015B70  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;i2c.c: 410: data_array[1] = 0b10000000 | address;
 10326  015B72  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10327  015B74  0980               	iorlw	128
 10328  015B76  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;i2c.c: 416: _i2c_write(0b01111000, &data_array[0], 2);
 10332  015B78  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10333  015B7A  6F65               	movwf	__i2c_write@data& (0+255),b
 10334  015B7C  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10335  015B7E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10336  015B80  0E02               	movlw	2
 10337  015B82  6F67               	movwf	__i2c_write@length& (0+255),b
 10338  015B84  0E78               	movlw	120
 10339  015B86  EC39  F0A8         	call	__i2c_write
 10340  015B8A  0012               	return		;funcret
 10341  015B8C                     __end_of__ic2_display_set_ddram_address:
 10342                           	opt stack 0
 10343                           tblptru	equ	0xFF8
 10344                           tblptrh	equ	0xFF7
 10345                           tblptrl	equ	0xFF6
 10346                           tablat	equ	0xFF5
 10347                           prodh	equ	0xFF4
 10348                           prodl	equ	0xFF3
 10349                           postinc0	equ	0xFEE
 10350                           wreg	equ	0xFE8
 10351                           postdec1	equ	0xFE5
 10352                           fsr1h	equ	0xFE2
 10353                           fsr1l	equ	0xFE1
 10354                           indf2	equ	0xFDF
 10355                           postinc2	equ	0xFDE
 10356                           fsr2h	equ	0xFDA
 10357                           fsr2l	equ	0xFD9
 10358                           status	equ	0xFD8
 10359                           
 10360 ;; *************** function _display_init *****************
 10361 ;; Defined at:
 10362 ;;		line 256 in file "display.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;		None
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;		None
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10380 ;;Total ram usage:        0 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:   15
 10383 ;; This function calls:
 10384 ;;		__display_start
 10385 ;;		_i2c_display_init
 10386 ;;		_i2c_display_program_custom_character
 10387 ;; This function is called by:
 10388 ;;		_system_init
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text26
 10393  0155B6                     __ptext26:
 10394                           	opt stack 0
 10395  0155B6                     _display_init:
 10396                           	opt stack 14
 10397                           
 10398                           ;display.c: 258: i2c_display_init();
 10399                           
 10400                           ;incstack = 0
 10401  0155B6  EC11  F0A8         	call	_i2c_display_init	;wreg free
 10402                           
 10403                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10404  0155BA  0ED5               	movlw	low _bit_pattern_verticalbar
 10405  0155BC  0100               	movlb	0	; () banked
 10406  0155BE  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10407  0155C0  0EA2               	movlw	high _bit_pattern_verticalbar
 10408  0155C2  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10409  0155C4  0E00               	movlw	0
 10410  0155C6  EC0A  F0A0         	call	_i2c_display_program_custom_character
 10411                           
 10412                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10413  0155CA  0ECD               	movlw	low _bit_pattern_degree
 10414  0155CC  0100               	movlb	0	; () banked
 10415  0155CE  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10416  0155D0  0EA2               	movlw	high _bit_pattern_degree
 10417  0155D2  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10418  0155D4  0E01               	movlw	1
 10419  0155D6  EC0A  F0A0         	call	_i2c_display_program_custom_character
 10420                           
 10421                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10422  0155DA  0EC5               	movlw	low _bit_pattern_ae
 10423  0155DC  0100               	movlb	0	; () banked
 10424  0155DE  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10425  0155E0  0EA2               	movlw	high _bit_pattern_ae
 10426  0155E2  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10427  0155E4  0E02               	movlw	2
 10428  0155E6  EC0A  F0A0         	call	_i2c_display_program_custom_character
 10429                           
 10430                           ;display.c: 263: _display_start();
 10431  0155EA  EC56  F098         	call	__display_start	;wreg free
 10432  0155EE  0012               	return		;funcret
 10433  0155F0                     __end_of_display_init:
 10434                           	opt stack 0
 10435                           tblptru	equ	0xFF8
 10436                           tblptrh	equ	0xFF7
 10437                           tblptrl	equ	0xFF6
 10438                           tablat	equ	0xFF5
 10439                           prodh	equ	0xFF4
 10440                           prodl	equ	0xFF3
 10441                           postinc0	equ	0xFEE
 10442                           wreg	equ	0xFE8
 10443                           postdec1	equ	0xFE5
 10444                           fsr1h	equ	0xFE2
 10445                           fsr1l	equ	0xFE1
 10446                           indf2	equ	0xFDF
 10447                           postinc2	equ	0xFDE
 10448                           fsr2h	equ	0xFDA
 10449                           fsr2l	equ	0xFD9
 10450                           status	equ	0xFD8
 10451                           
 10452 ;; *************** function _i2c_display_program_custom_character *****************
 10453 ;; Defined at:
 10454 ;;		line 500 in file "i2c.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;  address         1    wreg     unsigned char 
 10457 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10458 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;  address         1   31[BANK0 ] unsigned char 
 10461 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10462 ;;  cntr            1   32[BANK0 ] unsigned char 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10473 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10474 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;Total ram usage:       19 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; Hardware stack levels required when called:   13
 10479 ;; This function calls:
 10480 ;;		__i2c_write
 10481 ;;		__ic2_display_set_cgram_address
 10482 ;; This function is called by:
 10483 ;;		_display_init
 10484 ;; This function uses a non-reentrant model
 10485 ;;
 10486                           
 10487                           	psect	text27
 10488  014014                     __ptext27:
 10489                           	opt stack 0
 10490  014014                     _i2c_display_program_custom_character:
 10491                           	opt stack 15
 10492                           
 10493                           ;incstack = 0
 10494                           ;i2c_display_program_custom_character@address stored from wreg
 10495  014014  0100               	movlb	0	; () banked
 10496  014016  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10497                           
 10498                           ;i2c.c: 502: uint8_t cntr;;i2c.c: 503: uint8_t data_array[11];;i2c.c: 506: _ic2_display_
      +                          set_cgram_address(address<<3);
 10499  014018  0100               	movlb	0	; () banked
 10500  01401A  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10501  01401C  42E8               	rrncf	wreg,f,c
 10502  01401E  0BF8               	andlw	248
 10503  014020  ECED  F0AC         	call	__ic2_display_set_cgram_address
 10504                           
 10505                           ;i2c.c: 509: data_array[0] = 0b01000000;
 10506  014024  0E40               	movlw	64
 10507  014026  0100               	movlb	0	; () banked
 10508  014028  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;i2c.c: 510: for(cntr=0; cntr<8; ++cntr)
 10512  01402A  0E00               	movlw	0
 10513  01402C  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10514  01402E                     l16058:
 10515                           
 10516                           ; BSR set to: 0
 10517  01402E  0E07               	movlw	7
 10518  014030  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10519  014032  D001               	goto	l1263
 10520  014034  D023               	goto	u15140
 10521  014036                     l1263:
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;i2c.c: 511: {;i2c.c: 512: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10525                           
 10526                           ; BSR set to: 0
 10527  014036  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10528  014038  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10529  01403A  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10530  01403C  0E01               	movlw	1
 10531  01403E  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10532  014040  0E00               	movlw	0
 10533  014042  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10534  014044  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10535  014046  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10536  014048  6ED9               	movwf	fsr2l,c
 10537  01404A  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10538  01404C  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10539  01404E  6EDA               	movwf	fsr2h,c
 10540  014050  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10541  014052  0D01               	mullw	1
 10542  014054  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10543  014058  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10544  01405C  50F3               	movf	prodl,w,c
 10545  01405E  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10546  014060  50F4               	movf	prodh,w,c
 10547  014062  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10548  014064  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10549  014068  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10550  01406C                     	if	0	;tblptru may be non-zero
 10551  01406C                     	endif
 10552  01406C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10553  01406C  0E00               	movlw	low (__mediumconst shr (0+16))
 10554  01406E  6EF8               	movwf	tblptru,c
 10555  014070                     	endif
 10556  014070  0008               	tblrd		*
 10557  014072  50F5               	movf	tablat,w,c
 10558  014074  0B1F               	andlw	31
 10559  014076  6EDF               	movwf	indf2,c
 10560                           
 10561                           ; BSR set to: 0
 10562  014078  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10563  01407A  D7D9               	goto	l16058
 10564  01407C                     u15140:
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;i2c.c: 513: };i2c.c: 514: _i2c_write(0b01111000, data_array, 9);
 10568                           
 10569                           ; BSR set to: 0
 10570  01407C  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10571  01407E  6F65               	movwf	__i2c_write@data& (0+255),b
 10572  014080  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10573  014082  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10574  014084  0E09               	movlw	9
 10575  014086  6F67               	movwf	__i2c_write@length& (0+255),b
 10576  014088  0E78               	movlw	120
 10577  01408A  EC39  F0A8         	call	__i2c_write
 10578  01408E  0012               	return		;funcret
 10579  014090                     __end_of_i2c_display_program_custom_character:
 10580                           	opt stack 0
 10581                           tblptru	equ	0xFF8
 10582                           tblptrh	equ	0xFF7
 10583                           tblptrl	equ	0xFF6
 10584                           tablat	equ	0xFF5
 10585                           prodh	equ	0xFF4
 10586                           prodl	equ	0xFF3
 10587                           postinc0	equ	0xFEE
 10588                           wreg	equ	0xFE8
 10589                           postdec1	equ	0xFE5
 10590                           fsr1h	equ	0xFE2
 10591                           fsr1l	equ	0xFE1
 10592                           indf2	equ	0xFDF
 10593                           postinc2	equ	0xFDE
 10594                           fsr2h	equ	0xFDA
 10595                           fsr2l	equ	0xFD9
 10596                           status	equ	0xFD8
 10597                           
 10598 ;; *************** function __ic2_display_set_cgram_address *****************
 10599 ;; Defined at:
 10600 ;;		line 419 in file "i2c.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;  address         1    wreg     unsigned char 
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;  address         1   13[BANK0 ] unsigned char 
 10605 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      void 
 10608 ;; Registers used:
 10609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10616 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10618 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10619 ;;Total ram usage:        4 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:   12
 10622 ;; This function calls:
 10623 ;;		__i2c_write
 10624 ;; This function is called by:
 10625 ;;		_i2c_display_program_custom_character
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629                           	psect	text28
 10630  0159DA                     __ptext28:
 10631                           	opt stack 0
 10632  0159DA                     __ic2_display_set_cgram_address:
 10633                           	opt stack 15
 10634                           
 10635                           ;incstack = 0
 10636                           ;__ic2_display_set_cgram_address@address stored from wreg
 10637  0159DA  0100               	movlb	0	; () banked
 10638  0159DC  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10639                           
 10640                           ;i2c.c: 421: uint8_t data_array[3];;i2c.c: 426: address &= 0b001111111;
 10641  0159DE  0100               	movlb	0	; () banked
 10642  0159E0  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;i2c.c: 427: data_array[0] = 0b00000000;
 10646  0159E2  0E00               	movlw	0
 10647  0159E4  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;i2c.c: 428: data_array[1] = 0b00111000;
 10651  0159E6  0E38               	movlw	56
 10652  0159E8  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10653                           
 10654                           ;i2c.c: 429: data_array[2] = 0b01000000 | address;
 10655  0159EA  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10656  0159EC  0940               	iorlw	64
 10657  0159EE  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;i2c.c: 432: _i2c_write(0b01111000, data_array, 3);
 10661  0159F0  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10662  0159F2  6F65               	movwf	__i2c_write@data& (0+255),b
 10663  0159F4  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10664  0159F6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10665  0159F8  0E03               	movlw	3
 10666  0159FA  6F67               	movwf	__i2c_write@length& (0+255),b
 10667  0159FC  0E78               	movlw	120
 10668  0159FE  EC39  F0A8         	call	__i2c_write
 10669  015A02  0012               	return		;funcret
 10670  015A04                     __end_of__ic2_display_set_cgram_address:
 10671                           	opt stack 0
 10672                           tblptru	equ	0xFF8
 10673                           tblptrh	equ	0xFF7
 10674                           tblptrl	equ	0xFF6
 10675                           tablat	equ	0xFF5
 10676                           prodh	equ	0xFF4
 10677                           prodl	equ	0xFF3
 10678                           postinc0	equ	0xFEE
 10679                           wreg	equ	0xFE8
 10680                           postdec1	equ	0xFE5
 10681                           fsr1h	equ	0xFE2
 10682                           fsr1l	equ	0xFE1
 10683                           indf2	equ	0xFDF
 10684                           postinc2	equ	0xFDE
 10685                           fsr2h	equ	0xFDA
 10686                           fsr2l	equ	0xFD9
 10687                           status	equ	0xFD8
 10688                           
 10689 ;; *************** function _i2c_display_init *****************
 10690 ;; Defined at:
 10691 ;;		line 377 in file "i2c.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;		None
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      void 
 10698 ;; Registers used:
 10699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10706 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10708 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10709 ;;Total ram usage:       10 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:   12
 10712 ;; This function calls:
 10713 ;;		__i2c_write
 10714 ;; This function is called by:
 10715 ;;		_display_init
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text29
 10720  015022                     __ptext29:
 10721                           	opt stack 0
 10722  015022                     _i2c_display_init:
 10723                           	opt stack 16
 10724                           
 10725                           ;i2c.c: 379: uint8_t init_sequence[9] = {;i2c.c: 380: 0x3A,;i2c.c: 382: 0b00011110,;i2c.
      +                          c: 383: 0x39,;i2c.c: 385: 0b00001100,;i2c.c: 386: 0x74,;i2c.c: 387: 0b1011100,;i2c.c: 38
      +                          8: 0x6d,;i2c.c: 389: 0x0c,;i2c.c: 390: 0x01;i2c.c: 391: };
 10726                           
 10727                           ;incstack = 0
 10728  015022  EE22  F0B4         	lfsr	2,i2c_display_init@F7092
 10729  015026  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10730  01502A  0E08               	movlw	8
 10731  01502C                     u15111:
 10732  01502C  CFDB FFE3          	movff	plusw2,plusw1
 10733  015030  06E8               	decf	wreg,f,c
 10734  015032  E2FC               	bc	u15111
 10735                           
 10736                           ;i2c.c: 394: LATAbits.LA3 = 0;
 10737  015034  9689               	bcf	3977,3,c	;volatile
 10738                           
 10739                           ;i2c.c: 395: _delay((unsigned long)((10)*(8000000/4000.0)));
 10740  015036  0E1A               	movlw	26
 10741  015038  0100               	movlb	0	; () banked
 10742  01503A  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10743  01503C  0EF8               	movlw	248
 10744  01503E                     u19907:
 10745  01503E  2EE8               	decfsz	wreg,f,c
 10746  015040  D7FE               	bra	u19907
 10747  015042  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10748  015044  D7FC               	bra	u19907
 10749  015046  F000               	nop	
 10750                           
 10751                           ;i2c.c: 396: LATAbits.LA3 = 1;
 10752  015048  8689               	bsf	3977,3,c	;volatile
 10753                           
 10754                           ;i2c.c: 397: _delay((unsigned long)((50)*(8000000/4000.0)));
 10755  01504A  0E82               	movlw	130
 10756  01504C  0100               	movlb	0	; () banked
 10757  01504E  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10758  015050  0EDD               	movlw	221
 10759  015052                     u19917:
 10760  015052  2EE8               	decfsz	wreg,f,c
 10761  015054  D7FE               	bra	u19917
 10762  015056  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10763  015058  D7FC               	bra	u19917
 10764  01505A  D000               	nop2	
 10765                           
 10766                           ;i2c.c: 403: _i2c_write(0b01111000, &init_sequence[0], 9);
 10767  01505C  0E6B               	movlw	low i2c_display_init@init_sequence
 10768  01505E  0100               	movlb	0	; () banked
 10769  015060  6F65               	movwf	__i2c_write@data& (0+255),b
 10770  015062  0E00               	movlw	high i2c_display_init@init_sequence
 10771  015064  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10772  015066  0E09               	movlw	9
 10773  015068  6F67               	movwf	__i2c_write@length& (0+255),b
 10774  01506A  0E78               	movlw	120
 10775  01506C  EC39  F0A8         	call	__i2c_write
 10776  015070  0012               	return		;funcret
 10777  015072                     __end_of_i2c_display_init:
 10778                           	opt stack 0
 10779                           tblptru	equ	0xFF8
 10780                           tblptrh	equ	0xFF7
 10781                           tblptrl	equ	0xFF6
 10782                           tablat	equ	0xFF5
 10783                           prodh	equ	0xFF4
 10784                           prodl	equ	0xFF3
 10785                           postinc0	equ	0xFEE
 10786                           wreg	equ	0xFE8
 10787                           postdec1	equ	0xFE5
 10788                           plusw1	equ	0xFE3
 10789                           fsr1h	equ	0xFE2
 10790                           fsr1l	equ	0xFE1
 10791                           indf2	equ	0xFDF
 10792                           postinc2	equ	0xFDE
 10793                           plusw2	equ	0xFDB
 10794                           fsr2h	equ	0xFDA
 10795                           fsr2l	equ	0xFD9
 10796                           status	equ	0xFD8
 10797                           
 10798 ;; *************** function __i2c_write *****************
 10799 ;; Defined at:
 10800 ;;		line 86 in file "i2c.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  slave_addres    1    wreg     unsigned char 
 10803 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10804 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10805 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10806 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10807 ;;  length          1    7[BANK0 ] unsigned char 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10810 ;;  cntr            1    9[BANK0 ] unsigned char 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10820 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10823 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10824 ;;Total ram usage:        5 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:   11
 10827 ;; This function calls:
 10828 ;;		__i2c_send
 10829 ;;		__i2c_start
 10830 ;;		__i2c_stop
 10831 ;;		__i2c_wait_idle
 10832 ;; This function is called by:
 10833 ;;		_i2c_eeprom_read
 10834 ;;		_i2c_display_init
 10835 ;;		__ic2_display_set_ddram_address
 10836 ;;		__ic2_display_set_cgram_address
 10837 ;;		_i2c_display_program_custom_character
 10838 ;;		_i2c_adc_start
 10839 ;;		_i2c_eeprom_writeByte
 10840 ;;		_i2c_eeprom_readByte
 10841 ;;		__i2c_display_send_init_sequence
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845                           	psect	text30
 10846  015072                     __ptext30:
 10847                           	opt stack 0
 10848  015072                     __i2c_write:
 10849                           	opt stack 16
 10850                           
 10851                           ;incstack = 0
 10852                           ;__i2c_write@slave_address stored from wreg
 10853  015072  0100               	movlb	0	; () banked
 10854  015074  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10855                           
 10856                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 10857  015076  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10858                           
 10859                           ;i2c.c: 91: _i2c_start();
 10860  01507A  EC06  F0AF         	call	__i2c_start	;wreg free
 10861                           
 10862                           ;i2c.c: 92: _i2c_wait_idle();
 10863  01507E  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10864                           
 10865                           ;i2c.c: 93: _i2c_send(slave_address);
 10866  015082  0100               	movlb	0	; () banked
 10867  015084  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10868  015086  ECF3  F0AE         	call	__i2c_send
 10869                           
 10870                           ;i2c.c: 94: _i2c_wait_idle();
 10871  01508A  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10872                           
 10873                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 10874  01508E  0E00               	movlw	0
 10875  015090  0100               	movlb	0	; () banked
 10876  015092  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10877  015094  D00F               	goto	l1160
 10878  015096                     
 10879                           ; BSR set to: 0
 10880                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 10881                           
 10882                           ; BSR set to: 0
 10883  015096  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10884  015098  0D01               	mullw	1
 10885  01509A  50F3               	movf	prodl,w,c
 10886  01509C  2565               	addwf	__i2c_write@data& (0+255),w,b
 10887  01509E  6ED9               	movwf	fsr2l,c
 10888  0150A0  50F4               	movf	prodh,w,c
 10889  0150A2  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10890  0150A4  6EDA               	movwf	fsr2h,c
 10891  0150A6  50DF               	movf	indf2,w,c
 10892  0150A8  ECF3  F0AE         	call	__i2c_send
 10893                           
 10894                           ;i2c.c: 99: _i2c_wait_idle();
 10895  0150AC  EC2A  F0A3         	call	__i2c_wait_idle	;wreg free
 10896  0150B0  0100               	movlb	0	; () banked
 10897  0150B2  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10898  0150B4                     l1160:
 10899                           
 10900                           ; BSR set to: 0
 10901                           
 10902                           ; BSR set to: 0
 10903  0150B4  5167               	movf	__i2c_write@length& (0+255),w,b
 10904  0150B6  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10905  0150B8  A0D8               	btfss	status,0,c
 10906  0150BA  D7ED               	goto	l1161
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 10910                           
 10911                           ; BSR set to: 0
 10912  0150BC  EC02  F0AF         	call	__i2c_stop	;wreg free
 10913  0150C0  0012               	return		;funcret
 10914  0150C2                     __end_of__i2c_write:
 10915                           	opt stack 0
 10916                           tblptru	equ	0xFF8
 10917                           tblptrh	equ	0xFF7
 10918                           tblptrl	equ	0xFF6
 10919                           tablat	equ	0xFF5
 10920                           prodh	equ	0xFF4
 10921                           prodl	equ	0xFF3
 10922                           postinc0	equ	0xFEE
 10923                           wreg	equ	0xFE8
 10924                           postdec1	equ	0xFE5
 10925                           plusw1	equ	0xFE3
 10926                           fsr1h	equ	0xFE2
 10927                           fsr1l	equ	0xFE1
 10928                           indf2	equ	0xFDF
 10929                           postinc2	equ	0xFDE
 10930                           plusw2	equ	0xFDB
 10931                           fsr2h	equ	0xFDA
 10932                           fsr2l	equ	0xFD9
 10933                           status	equ	0xFD8
 10934                           
 10935 ;; *************** function __i2c_wait_idle *****************
 10936 ;; Defined at:
 10937 ;;		line 42 in file "i2c.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;		None
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;		None
 10942 ;; Return value:  Size  Location     Type
 10943 ;;                  1    wreg      void 
 10944 ;; Registers used:
 10945 ;;		wreg, status,2, status,0
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10953 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10954 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10955 ;;Total ram usage:        5 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:   10
 10958 ;; This function calls:
 10959 ;;		Nothing
 10960 ;; This function is called by:
 10961 ;;		__i2c_write
 10962 ;;		__i2c_read
 10963 ;;		__i2c_eeprom_busy
 10964 ;;		_i2c_display_write_fixed
 10965 ;;		_i2c_adc_read
 10966 ;;		_i2c_display_write
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           	psect	text31
 10971  014654                     __ptext31:
 10972                           	opt stack 0
 10973  014654                     __i2c_wait_idle:
 10974                           	opt stack 16
 10975                           
 10976                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 10977                           
 10978                           ;incstack = 0
 10979  014654  A4C7               	btfss	4039,2,c	;volatile
 10980  014656  D004               	goto	u11420
 10981  014658  0100               	movlb	0	; () banked
 10982  01465A  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10983  01465C  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 10984  01465E  D002               	goto	u11428
 10985  014660                     u11420:
 10986  014660  0100               	movlb	0	; () banked
 10987  014662  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10988  014664                     u11428:
 10989  014664  A0C5               	btfss	4037,0,c	;volatile
 10990  014666  D003               	goto	u11430
 10991  014668  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10992  01466A  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 10993  01466C  D002               	goto	u11438
 10994  01466E                     u11430:
 10995  01466E  0100               	movlb	0	; () banked
 10996  014670  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10997  014672                     u11438:
 10998  014672  A2C5               	btfss	4037,1,c	;volatile
 10999  014674  D003               	goto	u11440
 11000  014676  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11001  014678  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11002  01467A  D002               	goto	u11448
 11003  01467C                     u11440:
 11004  01467C  0100               	movlb	0	; () banked
 11005  01467E  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11006  014680                     u11448:
 11007  014680  A4C5               	btfss	4037,2,c	;volatile
 11008  014682  D003               	goto	u11450
 11009  014684  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11010  014686  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11011  014688  D002               	goto	u11458
 11012  01468A                     u11450:
 11013  01468A  0100               	movlb	0	; () banked
 11014  01468C  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11015  01468E                     u11458:
 11016  01468E  A6C5               	btfss	4037,3,c	;volatile
 11017  014690  D003               	goto	u11460
 11018  014692  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11019  014694  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11020  014696  D002               	goto	u11468
 11021  014698                     u11460:
 11022  014698  0100               	movlb	0	; () banked
 11023  01469A  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11024  01469C                     u11468:
 11025  01469C  A8C5               	btfss	4037,4,c	;volatile
 11026  01469E  D002               	goto	u11470
 11027  0146A0  0E01               	movlw	1
 11028  0146A2  D001               	goto	u11476
 11029  0146A4                     u11470:
 11030  0146A4  0E00               	movlw	0
 11031  0146A6                     u11476:
 11032  0146A6  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11033  0146A8  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11034  0146AA  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11035  0146AC  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11036  0146AE  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11037  0146B0  0900               	iorlw	0
 11038  0146B2  B4D8               	btfsc	status,2,c
 11039  0146B4  0012               	return	
 11040  0146B6  D7CE               	goto	__i2c_wait_idle
 11041  0146B8                     __end_of__i2c_wait_idle:
 11042                           	opt stack 0
 11043                           tblptru	equ	0xFF8
 11044                           tblptrh	equ	0xFF7
 11045                           tblptrl	equ	0xFF6
 11046                           tablat	equ	0xFF5
 11047                           prodh	equ	0xFF4
 11048                           prodl	equ	0xFF3
 11049                           postinc0	equ	0xFEE
 11050                           wreg	equ	0xFE8
 11051                           postdec1	equ	0xFE5
 11052                           plusw1	equ	0xFE3
 11053                           fsr1h	equ	0xFE2
 11054                           fsr1l	equ	0xFE1
 11055                           indf2	equ	0xFDF
 11056                           postinc2	equ	0xFDE
 11057                           plusw2	equ	0xFDB
 11058                           fsr2h	equ	0xFDA
 11059                           fsr2l	equ	0xFD9
 11060                           status	equ	0xFD8
 11061                           
 11062 ;; *************** function __i2c_stop *****************
 11063 ;; Defined at:
 11064 ;;		line 65 in file "i2c.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;		None
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;		None
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      void 
 11071 ;; Registers used:
 11072 ;;		None
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11082 ;;Total ram usage:        0 bytes
 11083 ;; Hardware stack levels used:    1
 11084 ;; Hardware stack levels required when called:   10
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		__i2c_write
 11089 ;;		__i2c_read
 11090 ;;		__i2c_eeprom_busy
 11091 ;;		_i2c_display_write_fixed
 11092 ;;		_i2c_adc_read
 11093 ;;		_i2c_display_write
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text32
 11098  015E04                     __ptext32:
 11099                           	opt stack 0
 11100  015E04                     __i2c_stop:
 11101                           	opt stack 16
 11102                           
 11103                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;incstack = 0
 11107  015E04  84C5               	bsf	4037,2,c	;volatile
 11108  015E06  A4C5               	btfss	4037,2,c	;volatile
 11109  015E08  0012               	return	
 11110  015E0A  D7FD               	goto	l1143
 11111  015E0C                     __end_of__i2c_stop:
 11112                           	opt stack 0
 11113                           tblptru	equ	0xFF8
 11114                           tblptrh	equ	0xFF7
 11115                           tblptrl	equ	0xFF6
 11116                           tablat	equ	0xFF5
 11117                           prodh	equ	0xFF4
 11118                           prodl	equ	0xFF3
 11119                           postinc0	equ	0xFEE
 11120                           wreg	equ	0xFE8
 11121                           postdec1	equ	0xFE5
 11122                           plusw1	equ	0xFE3
 11123                           fsr1h	equ	0xFE2
 11124                           fsr1l	equ	0xFE1
 11125                           indf2	equ	0xFDF
 11126                           postinc2	equ	0xFDE
 11127                           plusw2	equ	0xFDB
 11128                           fsr2h	equ	0xFDA
 11129                           fsr2l	equ	0xFD9
 11130                           status	equ	0xFD8
 11131                           
 11132 ;; *************** function __i2c_start *****************
 11133 ;; Defined at:
 11134 ;;		line 47 in file "i2c.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;		None
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;		None
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  1    wreg      void 
 11141 ;; Registers used:
 11142 ;;		None
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11152 ;;Total ram usage:        0 bytes
 11153 ;; Hardware stack levels used:    1
 11154 ;; Hardware stack levels required when called:   10
 11155 ;; This function calls:
 11156 ;;		Nothing
 11157 ;; This function is called by:
 11158 ;;		__i2c_write
 11159 ;;		__i2c_read
 11160 ;;		__i2c_eeprom_busy
 11161 ;;		_i2c_display_write_fixed
 11162 ;;		_i2c_adc_read
 11163 ;;		_i2c_display_write
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text33
 11168  015E0C                     __ptext33:
 11169                           	opt stack 0
 11170  015E0C                     __i2c_start:
 11171                           	opt stack 16
 11172                           
 11173                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 11174                           
 11175                           ;incstack = 0
 11176  015E0C  80C5               	bsf	4037,0,c	;volatile
 11177  015E0E  A0C5               	btfss	4037,0,c	;volatile
 11178  015E10  0012               	return	
 11179  015E12  D7FD               	goto	l1128
 11180  015E14                     __end_of__i2c_start:
 11181                           	opt stack 0
 11182                           tblptru	equ	0xFF8
 11183                           tblptrh	equ	0xFF7
 11184                           tblptrl	equ	0xFF6
 11185                           tablat	equ	0xFF5
 11186                           prodh	equ	0xFF4
 11187                           prodl	equ	0xFF3
 11188                           postinc0	equ	0xFEE
 11189                           wreg	equ	0xFE8
 11190                           postdec1	equ	0xFE5
 11191                           plusw1	equ	0xFE3
 11192                           fsr1h	equ	0xFE2
 11193                           fsr1l	equ	0xFE1
 11194                           indf2	equ	0xFDF
 11195                           postinc2	equ	0xFDE
 11196                           plusw2	equ	0xFDB
 11197                           fsr2h	equ	0xFDA
 11198                           fsr2l	equ	0xFD9
 11199                           status	equ	0xFD8
 11200                           
 11201 ;; *************** function __i2c_send *****************
 11202 ;; Defined at:
 11203 ;;		line 53 in file "i2c.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;  dat             1    wreg     unsigned char 
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;  dat             1    0[BANK0 ] unsigned char 
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  1    wreg      void 
 11210 ;; Registers used:
 11211 ;;		wreg
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11220 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11221 ;;Total ram usage:        1 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:   10
 11224 ;; This function calls:
 11225 ;;		Nothing
 11226 ;; This function is called by:
 11227 ;;		__i2c_write
 11228 ;;		__i2c_read
 11229 ;;		__i2c_eeprom_busy
 11230 ;;		_i2c_display_write_fixed
 11231 ;;		_i2c_adc_read
 11232 ;;		_i2c_display_write
 11233 ;; This function uses a non-reentrant model
 11234 ;;
 11235                           
 11236                           	psect	text34
 11237  015DE6                     __ptext34:
 11238                           	opt stack 0
 11239  015DE6                     __i2c_send:
 11240                           	opt stack 16
 11241                           
 11242                           ;incstack = 0
 11243                           ;__i2c_send@dat stored from wreg
 11244  015DE6  0100               	movlb	0	; () banked
 11245  015DE8  6F60               	movwf	__i2c_send@dat& (0+255),b
 11246                           
 11247                           ;i2c.c: 55: SSP1BUF = dat;
 11248  015DEA  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11249  015DEE  0012               	return		;funcret
 11250  015DF0                     __end_of__i2c_send:
 11251                           	opt stack 0
 11252                           tblptru	equ	0xFF8
 11253                           tblptrh	equ	0xFF7
 11254                           tblptrl	equ	0xFF6
 11255                           tablat	equ	0xFF5
 11256                           prodh	equ	0xFF4
 11257                           prodl	equ	0xFF3
 11258                           postinc0	equ	0xFEE
 11259                           wreg	equ	0xFE8
 11260                           postdec1	equ	0xFE5
 11261                           plusw1	equ	0xFE3
 11262                           fsr1h	equ	0xFE2
 11263                           fsr1l	equ	0xFE1
 11264                           indf2	equ	0xFDF
 11265                           postinc2	equ	0xFDE
 11266                           plusw2	equ	0xFDB
 11267                           fsr2h	equ	0xFDA
 11268                           fsr2l	equ	0xFD9
 11269                           status	equ	0xFD8
 11270                           
 11271 ;; *************** function __display_start *****************
 11272 ;; Defined at:
 11273 ;;		line 266 in file "display.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;		None
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;  cntr            1   28[BANK0 ] unsigned char 
 11278 ;; Return value:  Size  Location     Type
 11279 ;;                  1    wreg      void 
 11280 ;; Registers used:
 11281 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : 0/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11291 ;;Total ram usage:        1 bytes
 11292 ;; Hardware stack levels used:    1
 11293 ;; Hardware stack levels required when called:   14
 11294 ;; This function calls:
 11295 ;;		__display_itoa_u16
 11296 ;;		_memcpy
 11297 ;; This function is called by:
 11298 ;;		_display_init
 11299 ;; This function uses a non-reentrant model
 11300 ;;
 11301                           
 11302                           	psect	text35
 11303  0130AC                     __ptext35:
 11304                           	opt stack 0
 11305  0130AC                     __display_start:
 11306                           	opt stack 14
 11307                           
 11308                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11309                           
 11310                           ;incstack = 0
 11311  0130AC  0E42               	movlw	low _display_content
 11312  0130AE  0100               	movlb	0	; () banked
 11313  0130B0  6F60               	movwf	memcpy@d1& (0+255),b
 11314  0130B2  0E02               	movlw	high _display_content
 11315  0130B4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11316  0130B6  0E00               	movlw	low _dc_startup
 11317  0130B8  6F62               	movwf	memcpy@s1& (0+255),b
 11318  0130BA  0E04               	movlw	high _dc_startup
 11319  0130BC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11320  0130BE  0E00               	movlw	0
 11321  0130C0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11322  0130C2  0E50               	movlw	80
 11323  0130C4  6F64               	movwf	memcpy@n& (0+255),b
 11324  0130C6  ECEF  F0A3         	call	_memcpy	;wreg free
 11325                           
 11326                           ;display.c: 270: cntr = 6;
 11327  0130CA  0E06               	movlw	6
 11328  0130CC  0100               	movlb	0	; () banked
 11329  0130CE  6F7C               	movwf	__display_start@cntr& (0+255),b
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11333  0130D0  0E00               	movlw	0
 11334  0130D2  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11335  0130D4  0E00               	movlw	0
 11336  0130D6  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11337  0130D8  517C               	movf	__display_start@cntr& (0+255),w,b
 11338  0130DA  0D01               	mullw	1
 11339  0130DC  0E6A               	movlw	low (_display_content+40)
 11340  0130DE  24F3               	addwf	prodl,w,c
 11341  0130E0  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11342  0130E2  0E02               	movlw	high (_display_content+40)
 11343  0130E4  20F4               	addwfc	prodh,w,c
 11344  0130E6  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11345  0130E8  ECFC  F097         	call	__display_itoa_u16	;wreg free
 11346  0130EC  0100               	movlb	0	; () banked
 11347  0130EE  277C               	addwf	__display_start@cntr& (0+255),f,b
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;display.c: 272: display_content[2][cntr++] = '.';
 11351  0130F0  517C               	movf	__display_start@cntr& (0+255),w,b
 11352  0130F2  0D01               	mullw	1
 11353  0130F4  0E6A               	movlw	low (_display_content+40)
 11354  0130F6  24F3               	addwf	prodl,w,c
 11355  0130F8  6ED9               	movwf	fsr2l,c
 11356  0130FA  0E02               	movlw	high (_display_content+40)
 11357  0130FC  20F4               	addwfc	prodh,w,c
 11358  0130FE  6EDA               	movwf	fsr2h,c
 11359  013100  0E2E               	movlw	46
 11360  013102  6EDF               	movwf	indf2,c
 11361                           
 11362                           ; BSR set to: 0
 11363  013104  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;display.c: 273: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11367  013106  0E00               	movlw	0
 11368  013108  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11369  01310A  0E06               	movlw	6
 11370  01310C  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11371  01310E  517C               	movf	__display_start@cntr& (0+255),w,b
 11372  013110  0D01               	mullw	1
 11373  013112  0E6A               	movlw	low (_display_content+40)
 11374  013114  24F3               	addwf	prodl,w,c
 11375  013116  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11376  013118  0E02               	movlw	high (_display_content+40)
 11377  01311A  20F4               	addwfc	prodh,w,c
 11378  01311C  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11379  01311E  ECFC  F097         	call	__display_itoa_u16	;wreg free
 11380  013122  0100               	movlb	0	; () banked
 11381  013124  277C               	addwf	__display_start@cntr& (0+255),f,b
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;display.c: 274: display_content[2][cntr++] = '.';
 11385  013126  517C               	movf	__display_start@cntr& (0+255),w,b
 11386  013128  0D01               	mullw	1
 11387  01312A  0E6A               	movlw	low (_display_content+40)
 11388  01312C  24F3               	addwf	prodl,w,c
 11389  01312E  6ED9               	movwf	fsr2l,c
 11390  013130  0E02               	movlw	high (_display_content+40)
 11391  013132  20F4               	addwfc	prodh,w,c
 11392  013134  6EDA               	movwf	fsr2h,c
 11393  013136  0E2E               	movlw	46
 11394  013138  6EDF               	movwf	indf2,c
 11395                           
 11396                           ; BSR set to: 0
 11397  01313A  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;display.c: 275: cntr += _display_itoa_u16(0x01, &display_content[2][cntr]);
 11401  01313C  0E00               	movlw	0
 11402  01313E  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11403  013140  0E01               	movlw	1
 11404  013142  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11405  013144  517C               	movf	__display_start@cntr& (0+255),w,b
 11406  013146  0D01               	mullw	1
 11407  013148  0E6A               	movlw	low (_display_content+40)
 11408  01314A  24F3               	addwf	prodl,w,c
 11409  01314C  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11410  01314E  0E02               	movlw	high (_display_content+40)
 11411  013150  20F4               	addwfc	prodh,w,c
 11412  013152  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11413  013154  ECFC  F097         	call	__display_itoa_u16	;wreg free
 11414  013158  0100               	movlb	0	; () banked
 11415  01315A  277C               	addwf	__display_start@cntr& (0+255),f,b
 11416                           
 11417                           ; BSR set to: 0
 11418  01315C  0012               	return		;funcret
 11419  01315E                     __end_of__display_start:
 11420                           	opt stack 0
 11421                           tblptru	equ	0xFF8
 11422                           tblptrh	equ	0xFF7
 11423                           tblptrl	equ	0xFF6
 11424                           tablat	equ	0xFF5
 11425                           prodh	equ	0xFF4
 11426                           prodl	equ	0xFF3
 11427                           postinc0	equ	0xFEE
 11428                           wreg	equ	0xFE8
 11429                           postdec1	equ	0xFE5
 11430                           plusw1	equ	0xFE3
 11431                           fsr1h	equ	0xFE2
 11432                           fsr1l	equ	0xFE1
 11433                           indf2	equ	0xFDF
 11434                           postinc2	equ	0xFDE
 11435                           plusw2	equ	0xFDB
 11436                           fsr2h	equ	0xFDA
 11437                           fsr2l	equ	0xFD9
 11438                           status	equ	0xFD8
 11439                           
 11440 ;; *************** function __display_itoa_u16 *****************
 11441 ;; Defined at:
 11442 ;;		line 226 in file "display.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;  value           2   24[BANK0 ] unsigned int 
 11445 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11446 ;;		 -> display_content(80), 
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;		None
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      unsigned char 
 11451 ;; Registers used:
 11452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11461 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11462 ;;Total ram usage:        4 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:   13
 11465 ;; This function calls:
 11466 ;;		_itoa
 11467 ;; This function is called by:
 11468 ;;		__display_start
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text36
 11473  012FF8                     __ptext36:
 11474                           	opt stack 0
 11475  012FF8                     __display_itoa_u16:
 11476                           	opt stack 14
 11477                           
 11478                           ;display.c: 228: itoa(text, value, 10);
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;incstack = 0
 11482  012FF8  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11483  012FFC  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11484  013000  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11485  013004  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11486  013008  0E00               	movlw	0
 11487  01300A  0100               	movlb	0	; () banked
 11488  01300C  6F75               	movwf	(itoa@base+1)& (0+255),b
 11489  01300E  0E0A               	movlw	10
 11490  013010  6F74               	movwf	itoa@base& (0+255),b
 11491  013012  ECDA  F0A9         	call	_itoa	;wreg free
 11492                           
 11493                           ;display.c: 229: if(value>9999)
 11494  013016  0E10               	movlw	16
 11495  013018  0100               	movlb	0	; () banked
 11496  01301A  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11497  01301C  0E27               	movlw	39
 11498  01301E  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11499  013020  A0D8               	btfss	status,0,c
 11500  013022  D00A               	goto	l1373
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 11504  013024  EE20 F005          	lfsr	2,5
 11505  013028  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11506  01302A  26D9               	addwf	fsr2l,f,c
 11507  01302C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11508  01302E  22DA               	addwfc	fsr2h,f,c
 11509  013030  0E20               	movlw	32
 11510  013032  6EDF               	movwf	indf2,c
 11511                           
 11512                           ; BSR set to: 0
 11513                           ;display.c: 232: return 5;
 11514  013034  0E05               	movlw	5
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;display.c: 233: }
 11518                           
 11519                           ; BSR set to: 0
 11520  013036  0012               	return	
 11521  013038                     l1373:
 11522                           
 11523                           ; BSR set to: 0
 11524                           ;display.c: 234: else if (value>999)
 11525                           
 11526                           ; BSR set to: 0
 11527  013038  0EE8               	movlw	232
 11528  01303A  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11529  01303C  0E03               	movlw	3
 11530  01303E  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11531  013040  A0D8               	btfss	status,0,c
 11532  013042  D00A               	goto	l1376
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 11536  013044  EE20 F004          	lfsr	2,4
 11537  013048  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11538  01304A  26D9               	addwf	fsr2l,f,c
 11539  01304C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11540  01304E  22DA               	addwfc	fsr2h,f,c
 11541  013050  0E20               	movlw	32
 11542  013052  6EDF               	movwf	indf2,c
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;display.c: 237: return 4;
 11546  013054  0E04               	movlw	4
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;display.c: 238: }
 11550                           
 11551                           ; BSR set to: 0
 11552  013056  0012               	return	
 11553  013058                     l1376:
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;display.c: 239: else if (value>99)
 11557                           
 11558                           ; BSR set to: 0
 11559  013058  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11560  01305A  E104               	bnz	u13820
 11561  01305C  0E64               	movlw	100
 11562  01305E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11563  013060  A0D8               	btfss	status,0,c
 11564  013062  D00A               	goto	l1378
 11565  013064                     u13820:
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 11569  013064  EE20 F003          	lfsr	2,3
 11570  013068  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11571  01306A  26D9               	addwf	fsr2l,f,c
 11572  01306C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11573  01306E  22DA               	addwfc	fsr2h,f,c
 11574  013070  0E20               	movlw	32
 11575  013072  6EDF               	movwf	indf2,c
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;display.c: 242: return 3;
 11579  013074  0E03               	movlw	3
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;display.c: 243: }
 11583                           
 11584                           ; BSR set to: 0
 11585  013076  0012               	return	
 11586  013078                     l1378:
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;display.c: 244: else if (value>9)
 11590                           
 11591                           ; BSR set to: 0
 11592  013078  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11593  01307A  E104               	bnz	u13830
 11594  01307C  0E0A               	movlw	10
 11595  01307E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11596  013080  A0D8               	btfss	status,0,c
 11597  013082  D00A               	goto	l1380
 11598  013084                     u13830:
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 11602  013084  EE20 F002          	lfsr	2,2
 11603  013088  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11604  01308A  26D9               	addwf	fsr2l,f,c
 11605  01308C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11606  01308E  22DA               	addwfc	fsr2h,f,c
 11607  013090  0E20               	movlw	32
 11608  013092  6EDF               	movwf	indf2,c
 11609                           
 11610                           ; BSR set to: 0
 11611                           ;display.c: 247: return 2;
 11612  013094  0E02               	movlw	2
 11613                           
 11614                           ; BSR set to: 0
 11615                           ;display.c: 248: }
 11616                           
 11617                           ; BSR set to: 0
 11618  013096  0012               	return	
 11619  013098                     l1380:
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 11623                           
 11624                           ; BSR set to: 0
 11625  013098  EE20 F001          	lfsr	2,1
 11626  01309C  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11627  01309E  26D9               	addwf	fsr2l,f,c
 11628  0130A0  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11629  0130A2  22DA               	addwfc	fsr2h,f,c
 11630  0130A4  0E20               	movlw	32
 11631  0130A6  6EDF               	movwf	indf2,c
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;display.c: 252: return 1;
 11635  0130A8  0E01               	movlw	1
 11636                           
 11637                           ; BSR set to: 0
 11638                           
 11639                           ; BSR set to: 0
 11640                           
 11641                           ; BSR set to: 0
 11642                           
 11643                           ; BSR set to: 0
 11644  0130AA  0012               	return	
 11645  0130AC                     __end_of__display_itoa_u16:
 11646                           	opt stack 0
 11647                           tblptru	equ	0xFF8
 11648                           tblptrh	equ	0xFF7
 11649                           tblptrl	equ	0xFF6
 11650                           tablat	equ	0xFF5
 11651                           prodh	equ	0xFF4
 11652                           prodl	equ	0xFF3
 11653                           postinc0	equ	0xFEE
 11654                           wreg	equ	0xFE8
 11655                           postdec1	equ	0xFE5
 11656                           plusw1	equ	0xFE3
 11657                           fsr1h	equ	0xFE2
 11658                           fsr1l	equ	0xFE1
 11659                           indf2	equ	0xFDF
 11660                           postinc2	equ	0xFDE
 11661                           plusw2	equ	0xFDB
 11662                           fsr2h	equ	0xFDA
 11663                           fsr2l	equ	0xFD9
 11664                           status	equ	0xFD8
 11665                           
 11666 ;; *************** function _configFile_write *****************
 11667 ;; Defined at:
 11668 ;;		line 305 in file "config_file.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;		None
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;  file_size       4  133[BANK0 ] unsigned long 
 11673 ;;  file_number     1  132[BANK0 ] unsigned char 
 11674 ;; Return value:  Size  Location     Type
 11675 ;;                  1    wreg      void 
 11676 ;; Registers used:
 11677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11678 ;; Tracked objects:
 11679 ;;		On entry : 0/0
 11680 ;;		On exit  : 0/0
 11681 ;;		Unchanged: 0/0
 11682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11684 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11686 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11687 ;;Total ram usage:        6 bytes
 11688 ;; Hardware stack levels used:    1
 11689 ;; Hardware stack levels required when called:   18
 11690 ;; This function calls:
 11691 ;;		__add_item
 11692 ;;		_fat_create_file
 11693 ;;		_fat_find_file
 11694 ;;		_fat_modify_file
 11695 ;;		_fat_resize_file
 11696 ;; This function is called by:
 11697 ;;		_system_init
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           	psect	text37
 11702  00C532                     __ptext37:
 11703                           	opt stack 0
 11704  00C532                     _configFile_write:
 11705                           	opt stack 11
 11706                           
 11707                           ;config_file.c: 307: uint8_t file_number;;config_file.c: 308: uint32_t file_size;;config
      +                          _file.c: 310: file_size = 0;
 11708                           
 11709                           ; BSR set to: 0
 11710                           ;incstack = 0
 11711  00C532  0E00               	movlw	0
 11712  00C534  0100               	movlb	0	; () banked
 11713  00C536  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11714  00C538  0E00               	movlw	0
 11715  00C53A  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11716  00C53C  0E00               	movlw	0
 11717  00C53E  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11718  00C540  0E00               	movlw	0
 11719  00C542  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;config_file.c: 311: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11723  00C544  0EFD               	movlw	low _full_circle_in_steps_string
 11724  00C546  6F84               	movwf	__add_item@item_string& (0+255),b
 11725  00C548  0EA1               	movlw	high _full_circle_in_steps_string
 11726  00C54A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11727  00C54C  C197  F086         	movff	_config,__add_item@value
 11728  00C550  C198  F087         	movff	_config+1,__add_item@value+1
 11729  00C554  C199  F088         	movff	_config+2,__add_item@value+2
 11730  00C558  C19A  F089         	movff	_config+3,__add_item@value+3
 11731  00C55C  0E00               	movlw	low _ConfigFile_buffer
 11732  00C55E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11733  00C560  6F8A               	movwf	__add_item@buffer& (0+255),b
 11734  00C562  0E08               	movlw	high _ConfigFile_buffer
 11735  00C564  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11736  00C566  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11737  00C568  EC8A  F08C         	call	__add_item	;wreg free
 11738  00C56C  0100               	movlb	0	; () banked
 11739  00C56E  6FE3               	movwf	??_configFile_write& (0+255),b
 11740  00C570  51E3               	movf	??_configFile_write& (0+255),w,b
 11741  00C572  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11742  00C574  0E00               	movlw	0
 11743  00C576  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11744  00C578  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11745  00C57A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;config_file.c: 312: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11749  00C57C  0E49               	movlw	low _inverse_direction_string
 11750  00C57E  6F84               	movwf	__add_item@item_string& (0+255),b
 11751  00C580  0EA2               	movlw	high _inverse_direction_string
 11752  00C582  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11753  00C584  0101               	movlb	1	; () banked
 11754  00C586  519B               	movf	(_config+4)& (0+255),w,b
 11755  00C588  0100               	movlb	0	; () banked
 11756  00C58A  6F86               	movwf	__add_item@value& (0+255),b
 11757  00C58C  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11758  00C58E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11759  00C590  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11760  00C592  0E00               	movlw	low _ConfigFile_buffer
 11761  00C594  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11762  00C596  6F8A               	movwf	__add_item@buffer& (0+255),b
 11763  00C598  0E08               	movlw	high _ConfigFile_buffer
 11764  00C59A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11765  00C59C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11766  00C59E  EC8A  F08C         	call	__add_item	;wreg free
 11767  00C5A2  0100               	movlb	0	; () banked
 11768  00C5A4  6FE3               	movwf	??_configFile_write& (0+255),b
 11769  00C5A6  51E3               	movf	??_configFile_write& (0+255),w,b
 11770  00C5A8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11771  00C5AA  0E00               	movlw	0
 11772  00C5AC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11773  00C5AE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11774  00C5B0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;config_file.c: 313: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11778  00C5B2  0E12               	movlw	low _overshoot_in_steps_string
 11779  00C5B4  6F84               	movwf	__add_item@item_string& (0+255),b
 11780  00C5B6  0EA2               	movlw	high _overshoot_in_steps_string
 11781  00C5B8  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11782  00C5BA  C19C  F086         	movff	_config+5,__add_item@value
 11783  00C5BE  C19D  F087         	movff	_config+6,__add_item@value+1
 11784  00C5C2  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11785  00C5C4  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11786  00C5C6  0E00               	movlw	low _ConfigFile_buffer
 11787  00C5C8  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11788  00C5CA  6F8A               	movwf	__add_item@buffer& (0+255),b
 11789  00C5CC  0E08               	movlw	high _ConfigFile_buffer
 11790  00C5CE  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11791  00C5D0  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11792  00C5D2  EC8A  F08C         	call	__add_item	;wreg free
 11793  00C5D6  0100               	movlb	0	; () banked
 11794  00C5D8  6FE3               	movwf	??_configFile_write& (0+255),b
 11795  00C5DA  51E3               	movf	??_configFile_write& (0+255),w,b
 11796  00C5DC  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11797  00C5DE  0E00               	movlw	0
 11798  00C5E0  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11799  00C5E2  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11800  00C5E4  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;config_file.c: 314: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11804  00C5E6  0EBB               	movlw	low _overshoot_cost_in_steps_string
 11805  00C5E8  6F84               	movwf	__add_item@item_string& (0+255),b
 11806  00C5EA  0EA1               	movlw	high _overshoot_cost_in_steps_string
 11807  00C5EC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11808  00C5EE  C19E  F086         	movff	_config+7,__add_item@value
 11809  00C5F2  C19F  F087         	movff	_config+8,__add_item@value+1
 11810  00C5F6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11811  00C5F8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11812  00C5FA  0E00               	movlw	low _ConfigFile_buffer
 11813  00C5FC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11814  00C5FE  6F8A               	movwf	__add_item@buffer& (0+255),b
 11815  00C600  0E08               	movlw	high _ConfigFile_buffer
 11816  00C602  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11817  00C604  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11818  00C606  EC8A  F08C         	call	__add_item	;wreg free
 11819  00C60A  0100               	movlb	0	; () banked
 11820  00C60C  6FE3               	movwf	??_configFile_write& (0+255),b
 11821  00C60E  51E3               	movf	??_configFile_write& (0+255),w,b
 11822  00C610  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11823  00C612  0E00               	movlw	0
 11824  00C614  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11825  00C616  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11826  00C618  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;config_file.c: 315: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11830  00C61A  0E97               	movlw	low _minimum_speed_string
 11831  00C61C  6F84               	movwf	__add_item@item_string& (0+255),b
 11832  00C61E  0EA2               	movlw	high _minimum_speed_string
 11833  00C620  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11834  00C622  C1A0  F086         	movff	_config+9,__add_item@value
 11835  00C626  C1A1  F087         	movff	_config+10,__add_item@value+1
 11836  00C62A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11837  00C62C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11838  00C62E  0E00               	movlw	low _ConfigFile_buffer
 11839  00C630  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11840  00C632  6F8A               	movwf	__add_item@buffer& (0+255),b
 11841  00C634  0E08               	movlw	high _ConfigFile_buffer
 11842  00C636  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11843  00C638  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11844  00C63A  EC8A  F08C         	call	__add_item	;wreg free
 11845  00C63E  0100               	movlb	0	; () banked
 11846  00C640  6FE3               	movwf	??_configFile_write& (0+255),b
 11847  00C642  51E3               	movf	??_configFile_write& (0+255),w,b
 11848  00C644  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11849  00C646  0E00               	movlw	0
 11850  00C648  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11851  00C64A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11852  00C64C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;config_file.c: 316: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11856  00C64E  0E89               	movlw	low _maximum_speed_string
 11857  00C650  6F84               	movwf	__add_item@item_string& (0+255),b
 11858  00C652  0EA2               	movlw	high _maximum_speed_string
 11859  00C654  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11860  00C656  C1A2  F086         	movff	_config+11,__add_item@value
 11861  00C65A  C1A3  F087         	movff	_config+12,__add_item@value+1
 11862  00C65E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11863  00C660  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11864  00C662  0E00               	movlw	low _ConfigFile_buffer
 11865  00C664  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11866  00C666  6F8A               	movwf	__add_item@buffer& (0+255),b
 11867  00C668  0E08               	movlw	high _ConfigFile_buffer
 11868  00C66A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11869  00C66C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11870  00C66E  EC8A  F08C         	call	__add_item	;wreg free
 11871  00C672  0100               	movlb	0	; () banked
 11872  00C674  6FE3               	movwf	??_configFile_write& (0+255),b
 11873  00C676  51E3               	movf	??_configFile_write& (0+255),w,b
 11874  00C678  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11875  00C67A  0E00               	movlw	0
 11876  00C67C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11877  00C67E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11878  00C680  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11879                           
 11880                           ; BSR set to: 0
 11881                           ;config_file.c: 317: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11882  00C682  0E37               	movlw	low _initial_speed_arc_string
 11883  00C684  6F84               	movwf	__add_item@item_string& (0+255),b
 11884  00C686  0EA2               	movlw	high _initial_speed_arc_string
 11885  00C688  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11886  00C68A  C1A4  F086         	movff	_config+13,__add_item@value
 11887  00C68E  C1A5  F087         	movff	_config+14,__add_item@value+1
 11888  00C692  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11889  00C694  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11890  00C696  0E00               	movlw	low _ConfigFile_buffer
 11891  00C698  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11892  00C69A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11893  00C69C  0E08               	movlw	high _ConfigFile_buffer
 11894  00C69E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11895  00C6A0  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11896  00C6A2  EC8A  F08C         	call	__add_item	;wreg free
 11897  00C6A6  0100               	movlb	0	; () banked
 11898  00C6A8  6FE3               	movwf	??_configFile_write& (0+255),b
 11899  00C6AA  51E3               	movf	??_configFile_write& (0+255),w,b
 11900  00C6AC  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11901  00C6AE  0E00               	movlw	0
 11902  00C6B0  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11903  00C6B2  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11904  00C6B4  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;config_file.c: 318: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11908  00C6B6  0E25               	movlw	low _maximum_speed_arc_string
 11909  00C6B8  6F84               	movwf	__add_item@item_string& (0+255),b
 11910  00C6BA  0EA2               	movlw	high _maximum_speed_arc_string
 11911  00C6BC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11912  00C6BE  C1A6  F086         	movff	_config+15,__add_item@value
 11913  00C6C2  C1A7  F087         	movff	_config+16,__add_item@value+1
 11914  00C6C6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11915  00C6C8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11916  00C6CA  0E00               	movlw	low _ConfigFile_buffer
 11917  00C6CC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11918  00C6CE  6F8A               	movwf	__add_item@buffer& (0+255),b
 11919  00C6D0  0E08               	movlw	high _ConfigFile_buffer
 11920  00C6D2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11921  00C6D4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11922  00C6D6  EC8A  F08C         	call	__add_item	;wreg free
 11923  00C6DA  0100               	movlb	0	; () banked
 11924  00C6DC  6FE3               	movwf	??_configFile_write& (0+255),b
 11925  00C6DE  51E3               	movf	??_configFile_write& (0+255),w,b
 11926  00C6E0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11927  00C6E2  0E00               	movlw	0
 11928  00C6E4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11929  00C6E6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11930  00C6E8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;config_file.c: 319: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11934  00C6EA  0EE8               	movlw	low _initial_speed_manual_string
 11935  00C6EC  6F84               	movwf	__add_item@item_string& (0+255),b
 11936  00C6EE  0EA1               	movlw	high _initial_speed_manual_string
 11937  00C6F0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11938  00C6F2  C1A8  F086         	movff	_config+17,__add_item@value
 11939  00C6F6  C1A9  F087         	movff	_config+18,__add_item@value+1
 11940  00C6FA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11941  00C6FC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11942  00C6FE  0E00               	movlw	low _ConfigFile_buffer
 11943  00C700  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11944  00C702  6F8A               	movwf	__add_item@buffer& (0+255),b
 11945  00C704  0E08               	movlw	high _ConfigFile_buffer
 11946  00C706  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11947  00C708  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11948  00C70A  EC8A  F08C         	call	__add_item	;wreg free
 11949  00C70E  0100               	movlb	0	; () banked
 11950  00C710  6FE3               	movwf	??_configFile_write& (0+255),b
 11951  00C712  51E3               	movf	??_configFile_write& (0+255),w,b
 11952  00C714  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11953  00C716  0E00               	movlw	0
 11954  00C718  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11955  00C71A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11956  00C71C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;config_file.c: 320: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11960  00C71E  0ED3               	movlw	low _maximum_speed_manual_string
 11961  00C720  6F84               	movwf	__add_item@item_string& (0+255),b
 11962  00C722  0EA1               	movlw	high _maximum_speed_manual_string
 11963  00C724  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11964  00C726  C1AA  F086         	movff	_config+19,__add_item@value
 11965  00C72A  C1AB  F087         	movff	_config+20,__add_item@value+1
 11966  00C72E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11967  00C730  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11968  00C732  0E00               	movlw	low _ConfigFile_buffer
 11969  00C734  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11970  00C736  6F8A               	movwf	__add_item@buffer& (0+255),b
 11971  00C738  0E08               	movlw	high _ConfigFile_buffer
 11972  00C73A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11973  00C73C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11974  00C73E  EC8A  F08C         	call	__add_item	;wreg free
 11975  00C742  0100               	movlb	0	; () banked
 11976  00C744  6FE3               	movwf	??_configFile_write& (0+255),b
 11977  00C746  51E3               	movf	??_configFile_write& (0+255),w,b
 11978  00C748  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11979  00C74A  0E00               	movlw	0
 11980  00C74C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11981  00C74E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11982  00C750  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;config_file.c: 321: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 11986  00C752  0E6D               	movlw	low _use_ccw_limit_string
 11987  00C754  6F84               	movwf	__add_item@item_string& (0+255),b
 11988  00C756  0EA2               	movlw	high _use_ccw_limit_string
 11989  00C758  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11990  00C75A  0101               	movlb	1	; () banked
 11991  00C75C  51B6               	movf	(_config+31)& (0+255),w,b
 11992  00C75E  0100               	movlb	0	; () banked
 11993  00C760  6F86               	movwf	__add_item@value& (0+255),b
 11994  00C762  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11995  00C764  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11996  00C766  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11997  00C768  0E00               	movlw	low _ConfigFile_buffer
 11998  00C76A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11999  00C76C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12000  00C76E  0E08               	movlw	high _ConfigFile_buffer
 12001  00C770  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12002  00C772  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12003  00C774  EC8A  F08C         	call	__add_item	;wreg free
 12004  00C778  0100               	movlb	0	; () banked
 12005  00C77A  6FE3               	movwf	??_configFile_write& (0+255),b
 12006  00C77C  51E3               	movf	??_configFile_write& (0+255),w,b
 12007  00C77E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12008  00C780  0E00               	movlw	0
 12009  00C782  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12010  00C784  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12011  00C786  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;config_file.c: 322: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12015  00C788  0EB2               	movlw	low _ccw_limit_string
 12016  00C78A  6F84               	movwf	__add_item@item_string& (0+255),b
 12017  00C78C  0EA2               	movlw	high _ccw_limit_string
 12018  00C78E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12019  00C790  C1B7  F086         	movff	_config+32,__add_item@value
 12020  00C794  C1B8  F087         	movff	_config+33,__add_item@value+1
 12021  00C798  C1B9  F088         	movff	_config+34,__add_item@value+2
 12022  00C79C  C1BA  F089         	movff	_config+35,__add_item@value+3
 12023  00C7A0  0E00               	movlw	low _ConfigFile_buffer
 12024  00C7A2  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12025  00C7A4  6F8A               	movwf	__add_item@buffer& (0+255),b
 12026  00C7A6  0E08               	movlw	high _ConfigFile_buffer
 12027  00C7A8  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12028  00C7AA  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12029  00C7AC  EC8A  F08C         	call	__add_item	;wreg free
 12030  00C7B0  0100               	movlb	0	; () banked
 12031  00C7B2  6FE3               	movwf	??_configFile_write& (0+255),b
 12032  00C7B4  51E3               	movf	??_configFile_write& (0+255),w,b
 12033  00C7B6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12034  00C7B8  0E00               	movlw	0
 12035  00C7BA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12036  00C7BC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12037  00C7BE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12038                           
 12039                           ; BSR set to: 0
 12040                           ;config_file.c: 323: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12041  00C7C0  0EA5               	movlw	low _use_cw_limit_string
 12042  00C7C2  6F84               	movwf	__add_item@item_string& (0+255),b
 12043  00C7C4  0EA2               	movlw	high _use_cw_limit_string
 12044  00C7C6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12045  00C7C8  0101               	movlb	1	; () banked
 12046  00C7CA  51AD               	movf	(_config+22)& (0+255),w,b
 12047  00C7CC  0100               	movlb	0	; () banked
 12048  00C7CE  6F86               	movwf	__add_item@value& (0+255),b
 12049  00C7D0  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12050  00C7D2  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12051  00C7D4  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12052  00C7D6  0E00               	movlw	low _ConfigFile_buffer
 12053  00C7D8  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12054  00C7DA  6F8A               	movwf	__add_item@buffer& (0+255),b
 12055  00C7DC  0E08               	movlw	high _ConfigFile_buffer
 12056  00C7DE  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12057  00C7E0  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12058  00C7E2  EC8A  F08C         	call	__add_item	;wreg free
 12059  00C7E6  0100               	movlb	0	; () banked
 12060  00C7E8  6FE3               	movwf	??_configFile_write& (0+255),b
 12061  00C7EA  51E3               	movf	??_configFile_write& (0+255),w,b
 12062  00C7EC  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12063  00C7EE  0E00               	movlw	0
 12064  00C7F0  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12065  00C7F2  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12066  00C7F4  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;config_file.c: 324: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12070  00C7F6  0EBC               	movlw	low _cw_limit_string
 12071  00C7F8  6F84               	movwf	__add_item@item_string& (0+255),b
 12072  00C7FA  0EA2               	movlw	high _cw_limit_string
 12073  00C7FC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12074  00C7FE  C1AE  F086         	movff	_config+23,__add_item@value
 12075  00C802  C1AF  F087         	movff	_config+24,__add_item@value+1
 12076  00C806  C1B0  F088         	movff	_config+25,__add_item@value+2
 12077  00C80A  C1B1  F089         	movff	_config+26,__add_item@value+3
 12078  00C80E  0E00               	movlw	low _ConfigFile_buffer
 12079  00C810  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12080  00C812  6F8A               	movwf	__add_item@buffer& (0+255),b
 12081  00C814  0E08               	movlw	high _ConfigFile_buffer
 12082  00C816  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12083  00C818  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12084  00C81A  EC8A  F08C         	call	__add_item	;wreg free
 12085  00C81E  0100               	movlb	0	; () banked
 12086  00C820  6FE3               	movwf	??_configFile_write& (0+255),b
 12087  00C822  51E3               	movf	??_configFile_write& (0+255),w,b
 12088  00C824  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12089  00C826  0E00               	movlw	0
 12090  00C828  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12091  00C82A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12092  00C82C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;config_file.c: 325: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12096  00C82E  0E7B               	movlw	low _beep_duration_string
 12097  00C830  6F84               	movwf	__add_item@item_string& (0+255),b
 12098  00C832  0EA2               	movlw	high _beep_duration_string
 12099  00C834  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12100  00C836  0101               	movlb	1	; () banked
 12101  00C838  51AC               	movf	(_config+21)& (0+255),w,b
 12102  00C83A  0100               	movlb	0	; () banked
 12103  00C83C  6F86               	movwf	__add_item@value& (0+255),b
 12104  00C83E  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12105  00C840  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12106  00C842  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12107  00C844  0E00               	movlw	low _ConfigFile_buffer
 12108  00C846  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12109  00C848  6F8A               	movwf	__add_item@buffer& (0+255),b
 12110  00C84A  0E08               	movlw	high _ConfigFile_buffer
 12111  00C84C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12112  00C84E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12113  00C850  EC8A  F08C         	call	__add_item	;wreg free
 12114  00C854  0100               	movlb	0	; () banked
 12115  00C856  6FE3               	movwf	??_configFile_write& (0+255),b
 12116  00C858  51E3               	movf	??_configFile_write& (0+255),w,b
 12117  00C85A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12118  00C85C  0E00               	movlw	0
 12119  00C85E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12120  00C860  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12121  00C862  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;config_file.c: 328: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12125  00C864  0ECE               	movlw	low _configFile_used_name
 12126  00C866  6F8B               	movwf	fat_find_file@name& (0+255),b
 12127  00C868  0E02               	movlw	high _configFile_used_name
 12128  00C86A  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12129  00C86C  0EDE               	movlw	low _configFile_used_extention
 12130  00C86E  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12131  00C870  0E02               	movlw	high _configFile_used_extention
 12132  00C872  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12133  00C874  ECEA  F08E         	call	_fat_find_file	;wreg free
 12134  00C878  0100               	movlb	0	; () banked
 12135  00C87A  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;config_file.c: 329: if(file_number==0xFF)
 12139  00C87C  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12140  00C87E  A4D8               	btfss	status,2,c
 12141  00C880  D015               	goto	l3075
 12142                           
 12143                           ; BSR set to: 0
 12144                           ;config_file.c: 330: {;config_file.c: 331: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12145  00C882  0ECE               	movlw	low _configFile_used_name
 12146  00C884  6FAC               	movwf	fat_create_file@name& (0+255),b
 12147  00C886  0E02               	movlw	high _configFile_used_name
 12148  00C888  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12149  00C88A  0EDE               	movlw	low _configFile_used_extention
 12150  00C88C  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12151  00C88E  0E02               	movlw	high _configFile_used_extention
 12152  00C890  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12153  00C892  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12154  00C896  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12155  00C89A  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12156  00C89E  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12157  00C8A2  EC9C  F081         	call	_fat_create_file	;wreg free
 12158  00C8A6  0100               	movlb	0	; () banked
 12159  00C8A8  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12160                           
 12161                           ;config_file.c: 332: }
 12162  00C8AA  D00B               	goto	l3076
 12163  00C8AC                     l3075:
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;config_file.c: 333: else;config_file.c: 334: {;config_file.c: 335: fat_resize_file(file
      +                          _number, file_size);
 12167                           
 12168                           ; BSR set to: 0
 12169  00C8AC  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12170  00C8B0  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12171  00C8B4  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12172  00C8B8  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12173  00C8BC  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12174  00C8BE  EC0E  F08B         	call	_fat_resize_file
 12175  00C8C2                     l3076:
 12176                           
 12177                           ;config_file.c: 336: };config_file.c: 339: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12178  00C8C2  0E00               	movlw	0
 12179  00C8C4  0100               	movlb	0	; () banked
 12180  00C8C6  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12181  00C8C8  0E00               	movlw	0
 12182  00C8CA  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12183  00C8CC  0E00               	movlw	0
 12184  00C8CE  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12185  00C8D0  0E00               	movlw	0
 12186  00C8D2  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12187  00C8D4  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12188  00C8D8  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12189  00C8DC  0E00               	movlw	low _ConfigFile_buffer
 12190  00C8DE  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12191  00C8E0  0E08               	movlw	high _ConfigFile_buffer
 12192  00C8E2  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12193  00C8E4  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12194  00C8E6  ECA6  F06F         	call	_fat_modify_file
 12195  00C8EA  0012               	return		;funcret
 12196  00C8EC                     __end_of_configFile_write:
 12197                           	opt stack 0
 12198                           tblptru	equ	0xFF8
 12199                           tblptrh	equ	0xFF7
 12200                           tblptrl	equ	0xFF6
 12201                           tablat	equ	0xFF5
 12202                           prodh	equ	0xFF4
 12203                           prodl	equ	0xFF3
 12204                           postinc0	equ	0xFEE
 12205                           wreg	equ	0xFE8
 12206                           postdec1	equ	0xFE5
 12207                           plusw1	equ	0xFE3
 12208                           fsr1h	equ	0xFE2
 12209                           fsr1l	equ	0xFE1
 12210                           indf2	equ	0xFDF
 12211                           postinc2	equ	0xFDE
 12212                           plusw2	equ	0xFDB
 12213                           fsr2h	equ	0xFDA
 12214                           fsr2l	equ	0xFD9
 12215                           status	equ	0xFD8
 12216                           
 12217 ;; *************** function _fat_resize_file *****************
 12218 ;; Defined at:
 12219 ;;		line 911 in file "fat16.c"
 12220 ;; Parameters:    Size  Location     Type
 12221 ;;  file_number     1    wreg     unsigned char 
 12222 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;  file_number     1   90[BANK0 ] unsigned char 
 12225 ;;  root           32   91[BANK0 ] struct .
 12226 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12227 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12228 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  1    wreg      unsigned char 
 12231 ;; Registers used:
 12232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/0
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12238 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12239 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12240 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12241 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12242 ;;Total ram usage:       47 bytes
 12243 ;; Hardware stack levels used:    1
 12244 ;; Hardware stack levels required when called:   17
 12245 ;; This function calls:
 12246 ;;		__make_cluster_chain
 12247 ;;		__root_is_available
 12248 ;;		__write_root
 12249 ;;		_fat_get_file_information
 12250 ;; This function is called by:
 12251 ;;		_configFile_write
 12252 ;;		_fat_append_to_file
 12253 ;; This function uses a non-reentrant model
 12254 ;;
 12255                           
 12256                           	psect	text38
 12257  01161C                     __ptext38:
 12258                           	opt stack 0
 12259  01161C                     _fat_resize_file:
 12260                           	opt stack 11
 12261                           
 12262                           ;incstack = 0
 12263                           ;fat_resize_file@file_number stored from wreg
 12264  01161C  0100               	movlb	0	; () banked
 12265  01161E  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12266                           
 12267                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 12268  011620  0E3F               	movlw	63
 12269  011622  0100               	movlb	0	; () banked
 12270  011624  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12271  011626  D002               	goto	l1914
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 12275  011628  0EFF               	movlw	255
 12276                           
 12277                           ; BSR set to: 0
 12278  01162A  0012               	return	
 12279  01162C                     l1914:
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 12283                           
 12284                           ; BSR set to: 0
 12285  01162C  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12286  01162E  EC8B  F0A2         	call	__root_is_available
 12287  011632  0900               	iorlw	0
 12288  011634  B4D8               	btfsc	status,2,c
 12289  011636  D002               	goto	l1916
 12290                           
 12291                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 12292  011638  0EFE               	movlw	254
 12293  01163A  0012               	return	
 12294  01163C                     l1916:
 12295                           
 12296                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 12297  01163C  0EBB               	movlw	low fat_resize_file@root
 12298  01163E  0100               	movlb	0	; () banked
 12299  011640  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12300  011642  0E00               	movlw	high fat_resize_file@root
 12301  011644  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12302  011646  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12303  011648  EC86  F0A0         	call	_fat_get_file_information
 12304                           
 12305                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12306  01164C  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12307  011650  0EFF               	movlw	255
 12308  011652  24DE               	addwf	postinc2,w,c
 12309  011654  0100               	movlb	0	; () banked
 12310  011656  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12311  011658  0E01               	movlw	1
 12312  01165A  20DE               	addwfc	postinc2,w,c
 12313  01165C  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12314  01165E  0E00               	movlw	0
 12315  011660  20DE               	addwfc	postinc2,w,c
 12316  011662  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12317  011664  0E00               	movlw	0
 12318  011666  20DE               	addwfc	postinc2,w,c
 12319  011668  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12320  01166A  0E0A               	movlw	10
 12321  01166C  D005               	goto	u15390
 12322  01166E                     u15395:
 12323  01166E  90D8               	bcf	status,0,c
 12324  011670  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12325  011672  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12326  011674  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12327  011676  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12328  011678                     u15390:
 12329  011678  2EE8               	decfsz	wreg,f,c
 12330  01167A  D7F9               	goto	u15395
 12331  01167C  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12332  011680  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 12336  011684  0EFF               	movlw	255
 12337  011686  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12338  011688  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12339  01168A  0E01               	movlw	1
 12340  01168C  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12341  01168E  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12342  011690  0E00               	movlw	0
 12343  011692  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12344  011694  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12345  011696  0E00               	movlw	0
 12346  011698  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12347  01169A  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12348  01169C  0E0A               	movlw	10
 12349  01169E  D005               	goto	u15400
 12350  0116A0                     u15405:
 12351  0116A0  90D8               	bcf	status,0,c
 12352  0116A2  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12353  0116A4  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12354  0116A6  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12355  0116A8  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12356  0116AA                     u15400:
 12357  0116AA  2EE8               	decfsz	wreg,f,c
 12358  0116AC  D7F9               	goto	u15405
 12359  0116AE  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12360  0116B2  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12364  0116B6  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12365  0116B8  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12366  0116BA  E104               	bnz	u15410
 12367  0116BC  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12368  0116BE  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12369  0116C0  B4D8               	btfsc	status,2,c
 12370  0116C2  D01A               	goto	l1917
 12371  0116C4                     u15410:
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12375  0116C4  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12376  0116C8  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12377  0116CC  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12378  0116D0  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12379  0116D4  EC33  F069         	call	__make_cluster_chain	;wreg free
 12380  0116D8  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12381  0116DC  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12382                           
 12383                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12384  0116E0  0100               	movlb	0	; () banked
 12385  0116E2  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12386  0116E4  E105               	bnz	l1918
 12387  0116E6  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12388  0116E8  A4D8               	btfss	status,2,c
 12389  0116EA  D002               	goto	l1918
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12393  0116EC  0EFD               	movlw	253
 12394                           
 12395                           ; BSR set to: 0
 12396  0116EE  0012               	return	
 12397  0116F0                     l1918:
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12401  0116F0  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12402  0116F4  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12403  0116F8                     l1917:
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12407  0116F8  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12408  0116FC  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12409  011700  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12410  011704  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;fat16.c: 957: _write_root(file_number, &root);
 12414  011708  0EBB               	movlw	low fat_resize_file@root
 12415  01170A  6F88               	movwf	__write_root@data& (0+255),b
 12416  01170C  0E00               	movlw	high fat_resize_file@root
 12417  01170E  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12418  011710  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12419  011712  EC00  F0A9         	call	__write_root
 12420                           
 12421                           ;fat16.c: 960: return 0x00;
 12422  011716  0E00               	movlw	0
 12423  011718  0012               	return	
 12424  01171A                     __end_of_fat_resize_file:
 12425                           	opt stack 0
 12426                           tblptru	equ	0xFF8
 12427                           tblptrh	equ	0xFF7
 12428                           tblptrl	equ	0xFF6
 12429                           tablat	equ	0xFF5
 12430                           prodh	equ	0xFF4
 12431                           prodl	equ	0xFF3
 12432                           postinc0	equ	0xFEE
 12433                           wreg	equ	0xFE8
 12434                           postdec1	equ	0xFE5
 12435                           plusw1	equ	0xFE3
 12436                           fsr1h	equ	0xFE2
 12437                           fsr1l	equ	0xFE1
 12438                           indf2	equ	0xFDF
 12439                           postinc2	equ	0xFDE
 12440                           plusw2	equ	0xFDB
 12441                           fsr2h	equ	0xFDA
 12442                           fsr2l	equ	0xFD9
 12443                           status	equ	0xFD8
 12444                           
 12445 ;; *************** function _fat_modify_file *****************
 12446 ;; Defined at:
 12447 ;;		line 963 in file "fat16.c"
 12448 ;; Parameters:    Size  Location     Type
 12449 ;;  file_number     1    wreg     unsigned char 
 12450 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12451 ;;  length          2   69[BANK0 ] unsigned int 
 12452 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12453 ;;		 -> ConfigFile_buffer(512), 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;  file_number     1   87[BANK0 ] unsigned char 
 12456 ;;  root           32   99[BANK0 ] struct .
 12457 ;;  position        4   95[BANK0 ] unsigned long 
 12458 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12459 ;;  offset          2   91[BANK0 ] unsigned int 
 12460 ;;  cluster         2   89[BANK0 ] unsigned int 
 12461 ;;  sector          2   85[BANK0 ] unsigned int 
 12462 ;;  return_code     1   88[BANK0 ] unsigned char 
 12463 ;; Return value:  Size  Location     Type
 12464 ;;                  1    wreg      unsigned char 
 12465 ;; Registers used:
 12466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12467 ;; Tracked objects:
 12468 ;;		On entry : 0/0
 12469 ;;		On exit  : 0/0
 12470 ;;		Unchanged: 0/0
 12471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12472 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12473 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12474 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12475 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12476 ;;Total ram usage:       66 bytes
 12477 ;; Hardware stack levels used:    1
 12478 ;; Hardware stack levels required when called:   17
 12479 ;; This function calls:
 12480 ;;		__data_sector_from_cluster
 12481 ;;		__find_nth_cluster
 12482 ;;		__read_fat
 12483 ;;		_fat_get_file_information
 12484 ;;		_flash_partial_write
 12485 ;; This function is called by:
 12486 ;;		_configFile_write
 12487 ;;		_fat_append_to_file
 12488 ;; This function uses a non-reentrant model
 12489 ;;
 12490                           
 12491                           	psect	text39
 12492  00DF4C                     __ptext39:
 12493                           	opt stack 0
 12494  00DF4C                     _fat_modify_file:
 12495                           	opt stack 11
 12496                           
 12497                           ;incstack = 0
 12498                           ;fat_modify_file@file_number stored from wreg
 12499  00DF4C  0100               	movlb	0	; () banked
 12500  00DF4E  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12501                           
 12502                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12503  00DF50  0EC3               	movlw	low fat_modify_file@root
 12504  00DF52  0100               	movlb	0	; () banked
 12505  00DF54  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12506  00DF56  0E00               	movlw	high fat_modify_file@root
 12507  00DF58  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12508  00DF5A  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12509  00DF5C  EC86  F0A0         	call	_fat_get_file_information
 12510  00DF60  0100               	movlb	0	; () banked
 12511  00DF62  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;fat16.c: 975: if(return_code!=0x00)
 12515  00DF64  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12516  00DF66  A4D8               	btfss	status,2,c
 12517  00DF68  0012               	return	
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12521                           
 12522                           ; BSR set to: 0
 12523                           
 12524                           ; BSR set to: 0
 12525                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12526  00DF6A  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12527  00DF6C  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12528  00DF6E  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12529  00DF70  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12530  00DF72  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12531  00DF74  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12532  00DF76  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12533  00DF78  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12534  00DF7A  A0D8               	btfss	status,0,c
 12535  00DF7C  0012               	return	
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12539                           
 12540                           ; BSR set to: 0
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12544  00DF7E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12545  00DF80  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12546  00DF82  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12547  00DF84  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12548  00DF86  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12549  00DF88  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12550  00DF8A  0E00               	movlw	0
 12551  00DF8C  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12552  00DF8E  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12553  00DF90  0E00               	movlw	0
 12554  00DF92  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12555  00DF94  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12556  00DF96  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12557  00DF98  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12558  00DF9A  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12559  00DF9C  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12560  00DF9E  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12561  00DFA0  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12562  00DFA2  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12563  00DFA4  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12564  00DFA6  B0D8               	btfsc	status,0,c
 12565  00DFA8  D00E               	goto	l1924
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12569  00DFAA  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12570  00DFAE  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12571  00DFB2  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12572  00DFB4  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12573  00DFB6  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12574  00DFB8  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12575  00DFBA  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12576  00DFBC  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12577  00DFBE  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12578  00DFC0  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12579  00DFC2  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12580  00DFC4  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12581  00DFC6                     l1924:
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12585                           
 12586                           ; BSR set to: 0
 12587  00DFC6  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12588  00DFCA  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12589  00DFCE  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12590  00DFD2  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12591  00DFD6  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12592  00DFDA  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12593  00DFDE  0E0A               	movlw	10
 12594  00DFE0  D005               	goto	u15460
 12595  00DFE2                     u15465:
 12596  00DFE2  90D8               	bcf	status,0,c
 12597  00DFE4  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12598  00DFE6  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12599  00DFE8  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12600  00DFEA  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12601  00DFEC                     u15460:
 12602  00DFEC  2EE8               	decfsz	wreg,f,c
 12603  00DFEE  D7F9               	goto	u15465
 12604  00DFF0  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12605  00DFF4  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12606  00DFF8  EC5B  F09A         	call	__find_nth_cluster	;wreg free
 12607  00DFFC  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12608  00E000  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12609                           
 12610                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12611  00E004  0E00               	movlw	0
 12612  00E006  0100               	movlb	0	; () banked
 12613  00E008  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12614  00E00A  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12615  00E00C  0EFE               	movlw	254
 12616  00E00E  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12617  00E010  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12618  00E012  0EFF               	movlw	255
 12619  00E014  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12620  00E016  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12621  00E018  0EFF               	movlw	255
 12622  00E01A  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12623  00E01C  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12627  00E01E  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12628  00E022  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12629  00E026  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12630  00E028  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12631  00E02A  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12632  00E02C  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12633  00E02E  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12634  00E030  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12635  00E032  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12636  00E034  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12637  00E036  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12638  00E038  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;fat16.c: 1004: position = 0;
 12642  00E03A  0E00               	movlw	0
 12643  00E03C  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12644  00E03E  0E00               	movlw	0
 12645  00E040  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12646  00E042  0E00               	movlw	0
 12647  00E044  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12648  00E046  0E00               	movlw	0
 12649  00E048  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12650                           
 12651                           ;fat16.c: 1005: while(position < length)
 12652  00E04A  D089               	goto	l1925
 12653  00E04C                     
 12654                           ; BSR set to: 0
 12655                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12656                           
 12657                           ; BSR set to: 0
 12658  00E04C  0E02               	movlw	2
 12659  00E04E  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12660  00E050  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12661  00E052  A4D8               	btfss	status,2,c
 12662  00E054  D00F               	goto	l1927
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12666  00E056  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12667  00E05A  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12668  00E05E  ECBB  F0A5         	call	__read_fat	;wreg free
 12669  00E062  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12670  00E066  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12671                           
 12672                           ;fat16.c: 1013: offset = 0;
 12673  00E06A  0E00               	movlw	0
 12674  00E06C  0100               	movlb	0	; () banked
 12675  00E06E  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12676  00E070  0E00               	movlw	0
 12677  00E072  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12678  00E074                     l1927:
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12682                           
 12683                           ; BSR set to: 0
 12684  00E074  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12685  00E078  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12686  00E07C  ECAF  F0AE         	call	__data_sector_from_cluster	;wreg free
 12687  00E080  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12688  00E084  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12689                           
 12690                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12691  00E088  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12692  00E08C  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12693  00E090  0100               	movlb	0	; () banked
 12694  00E092  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12695  00E094  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12696  00E096  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12697  00E098  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12698  00E09A  0E00               	movlw	0
 12699  00E09C  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12700  00E09E  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12701  00E0A0  0E02               	movlw	2
 12702  00E0A2  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12703  00E0A4  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12707  00E0A6  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12708  00E0A8  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12709  00E0AA  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12710  00E0AC  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12711  00E0AE  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12712  00E0B0  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12713  00E0B2  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12714  00E0B6  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12715  00E0BA  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12716  00E0BE  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12717  00E0C2  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12718  00E0C4  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12719  00E0C6  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12720  00E0C8  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12721  00E0CA  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12722  00E0CC  0E00               	movlw	0
 12723  00E0CE  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12724  00E0D0  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12725  00E0D2  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12726  00E0D4  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12727  00E0D6  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12728  00E0D8  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12729  00E0DA  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12730  00E0DC  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12731  00E0DE  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12732  00E0E0  0E00               	movlw	0
 12733  00E0E2  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12734  00E0E4  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12735  00E0E6  0E00               	movlw	0
 12736  00E0E8  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12737  00E0EA  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12738  00E0EC  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12739  00E0EE  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12740  00E0F0  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12741  00E0F2  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12742  00E0F4  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12743  00E0F6  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12744  00E0F8  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12745  00E0FA  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12746  00E0FC  B0D8               	btfsc	status,0,c
 12747  00E0FE  D00E               	goto	l1928
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12751  00E100  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12752  00E104  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12753  00E108  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12754  00E10A  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12755  00E10C  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12756  00E10E  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12757  00E110  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12758  00E112  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12759  00E114  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12760  00E116  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12761  00E118  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12762  00E11A  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12763  00E11C                     l1928:
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12767                           
 12768                           ; BSR set to: 0
 12769  00E11C  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12770  00E120  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12771  00E124  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12772  00E128  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12773  00E12C  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12774  00E130  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12775  00E134  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12776  00E136  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12777  00E138  6F85               	movwf	flash_partial_write@data& (0+255),b
 12778  00E13A  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12779  00E13C  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12780  00E13E  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12781  00E140  EC55  F0A2         	call	_flash_partial_write	;wreg free
 12782                           
 12783                           ;fat16.c: 1030: position += number_of_bytes;
 12784  00E144  0100               	movlb	0	; () banked
 12785  00E146  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12786  00E148  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12787  00E14A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12788  00E14C  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12789  00E14E  0E00               	movlw	0
 12790  00E150  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12791  00E152  0E00               	movlw	0
 12792  00E154  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;fat16.c: 1031: offset += number_of_bytes;
 12796  00E156  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12797  00E158  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12798  00E15A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12799  00E15C  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12800  00E15E                     l1925:
 12801                           
 12802                           ; BSR set to: 0
 12803                           
 12804                           ; BSR set to: 0
 12805  00E15E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12806  00E160  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12807  00E162  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12808  00E164  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12809  00E166  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12810  00E168  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12811  00E16A  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12812  00E16C  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12813  00E16E  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12814  00E170  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12815  00E172  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12816  00E174  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12817  00E176  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12818  00E178  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12819  00E17A  B0D8               	btfsc	status,0,c
 12820  00E17C  0012               	return	
 12821  00E17E  D766               	goto	l1926
 12822  00E180                     __end_of_fat_modify_file:
 12823                           	opt stack 0
 12824                           tblptru	equ	0xFF8
 12825                           tblptrh	equ	0xFF7
 12826                           tblptrl	equ	0xFF6
 12827                           tablat	equ	0xFF5
 12828                           prodh	equ	0xFF4
 12829                           prodl	equ	0xFF3
 12830                           postinc0	equ	0xFEE
 12831                           wreg	equ	0xFE8
 12832                           postdec1	equ	0xFE5
 12833                           plusw1	equ	0xFE3
 12834                           fsr1h	equ	0xFE2
 12835                           fsr1l	equ	0xFE1
 12836                           indf2	equ	0xFDF
 12837                           postinc2	equ	0xFDE
 12838                           plusw2	equ	0xFDB
 12839                           fsr2h	equ	0xFDA
 12840                           fsr2l	equ	0xFD9
 12841                           status	equ	0xFD8
 12842                           
 12843 ;; *************** function _fat_create_file *****************
 12844 ;; Defined at:
 12845 ;;		line 587 in file "fat16.c"
 12846 ;; Parameters:    Size  Location     Type
 12847 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12848 ;;		 -> configFile_used_name(8), 
 12849 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12850 ;;		 -> configFile_used_extention(3), 
 12851 ;;  size            4   80[BANK0 ] unsigned long 
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;  root_entry     32   93[BANK0 ] struct .
 12854 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12855 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12856 ;;  file_number     1   92[BANK0 ] unsigned char 
 12857 ;; Return value:  Size  Location     Type
 12858 ;;                  1    wreg      unsigned char 
 12859 ;; Registers used:
 12860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12866 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12867 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12868 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12869 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12870 ;;Total ram usage:       49 bytes
 12871 ;; Hardware stack levels used:    1
 12872 ;; Hardware stack levels required when called:   17
 12873 ;; This function calls:
 12874 ;;		__get_available_root_entry
 12875 ;;		__get_date
 12876 ;;		__get_time
 12877 ;;		__make_cluster_chain
 12878 ;;		__write_root
 12879 ;;		_fat_find_file
 12880 ;;		_memcpy
 12881 ;; This function is called by:
 12882 ;;		_configFile_write
 12883 ;;		_fat_copy_file
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           
 12887                           	psect	text40
 12888  010338                     __ptext40:
 12889                           	opt stack 0
 12890  010338                     _fat_create_file:
 12891                           	opt stack 11
 12892                           
 12893                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;incstack = 0
 12897  010338  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12898  01033C  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12899  010340  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12900  010344  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12901  010348  ECEA  F08E         	call	_fat_find_file	;wreg free
 12902  01034C  0AFF               	xorlw	255
 12903  01034E  B4D8               	btfsc	status,2,c
 12904  010350  D002               	goto	l1863
 12905                           
 12906                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12907  010352  0EFF               	movlw	255
 12908  010354  0012               	return	
 12909  010356                     l1863:
 12910                           
 12911                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12912  010356  EC02  F0AD         	call	__get_available_root_entry	;wreg free
 12913  01035A  0100               	movlb	0	; () banked
 12914  01035C  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;fat16.c: 606: if(file_number == 0xFF)
 12918  01035E  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12919  010360  A4D8               	btfss	status,2,c
 12920  010362  D002               	goto	l1865
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12924  010364  0EFE               	movlw	254
 12925                           
 12926                           ; BSR set to: 0
 12927  010366  0012               	return	
 12928  010368                     l1865:
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12932                           
 12933                           ; BSR set to: 0
 12934  010368  0EFF               	movlw	255
 12935  01036A  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12936  01036C  6FB4               	movwf	??_fat_create_file& (0+255),b
 12937  01036E  0E01               	movlw	1
 12938  010370  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 12939  010372  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 12940  010374  0E00               	movlw	0
 12941  010376  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 12942  010378  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 12943  01037A  0E00               	movlw	0
 12944  01037C  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 12945  01037E  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 12946  010380  0E0A               	movlw	10
 12947  010382  D005               	goto	u15350
 12948  010384                     u15355:
 12949  010384  90D8               	bcf	status,0,c
 12950  010386  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 12951  010388  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 12952  01038A  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 12953  01038C  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 12954  01038E                     u15350:
 12955  01038E  2EE8               	decfsz	wreg,f,c
 12956  010390  D7F9               	goto	u15355
 12957  010392  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 12958  010396  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 12962  01039A  0E00               	movlw	0
 12963  01039C  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 12964  01039E  0E00               	movlw	0
 12965  0103A0  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 12966  0103A2  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 12967  0103A6  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 12968  0103AA  EC33  F069         	call	__make_cluster_chain	;wreg free
 12969  0103AE  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 12970  0103B2  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 12971                           
 12972                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 12973  0103B6  0100               	movlb	0	; () banked
 12974  0103B8  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 12975  0103BA  E105               	bnz	l16232
 12976  0103BC  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 12977  0103BE  A4D8               	btfss	status,2,c
 12978  0103C0  D002               	goto	l1866
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 12982  0103C2  0EFD               	movlw	253
 12983                           
 12984                           ; BSR set to: 0
 12985  0103C4  0012               	return	
 12986  0103C6                     l1866:
 12987  0103C6                     l16232:
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 12991  0103C6  0EBD               	movlw	low fat_create_file@root_entry
 12992  0103C8  6F60               	movwf	memcpy@d1& (0+255),b
 12993  0103CA  0E00               	movlw	high fat_create_file@root_entry
 12994  0103CC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12995  0103CE  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 12996  0103D2  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 12997  0103D6  0E00               	movlw	0
 12998  0103D8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12999  0103DA  0E08               	movlw	8
 13000  0103DC  6F64               	movwf	memcpy@n& (0+255),b
 13001  0103DE  ECEF  F0A3         	call	_memcpy	;wreg free
 13002                           
 13003                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 13004  0103E2  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13005  0103E4  0100               	movlb	0	; () banked
 13006  0103E6  6F60               	movwf	memcpy@d1& (0+255),b
 13007  0103E8  0E00               	movlw	high (fat_create_file@root_entry+8)
 13008  0103EA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13009  0103EC  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13010  0103F0  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13011  0103F4  0E00               	movlw	0
 13012  0103F6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13013  0103F8  0E03               	movlw	3
 13014  0103FA  6F64               	movwf	memcpy@n& (0+255),b
 13015  0103FC  ECEF  F0A3         	call	_memcpy	;wreg free
 13016                           
 13017                           ;fat16.c: 630: root_entry.attributes = 0x00;
 13018  010400  0E00               	movlw	0
 13019  010402  0100               	movlb	0	; () banked
 13020  010404  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 13024  010406  0E00               	movlw	0
 13025  010408  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 13029  01040A  0E00               	movlw	0
 13030  01040C  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 13034  01040E  ECC6  F0AE         	call	__get_time	;wreg free
 13035  010412  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13036  010416  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13037                           
 13038                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 13039  01041A  ECCC  F0AE         	call	__get_date	;wreg free
 13040  01041E  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13041  010422  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13042                           
 13043                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 13044  010426  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13045  01042A  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13046                           
 13047                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 13048  01042E  0E00               	movlw	0
 13049  010430  0100               	movlb	0	; () banked
 13050  010432  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13051  010434  0E00               	movlw	0
 13052  010436  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 13056  010438  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13057  01043C  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 13061  010440  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13062  010444  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 13066  010448  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13067  01044C  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13068                           
 13069                           ; BSR set to: 0
 13070                           ;fat16.c: 640: root_entry.fileSize = size;
 13071  010450  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13072  010454  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13073  010458  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13074  01045C  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 13078  010460  0EBD               	movlw	low fat_create_file@root_entry
 13079  010462  6F88               	movwf	__write_root@data& (0+255),b
 13080  010464  0E00               	movlw	high fat_create_file@root_entry
 13081  010466  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13082  010468  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13083  01046A  EC00  F0A9         	call	__write_root
 13084                           
 13085                           ;fat16.c: 645: return file_number;
 13086  01046E  0100               	movlb	0	; () banked
 13087  010470  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13088  010472  0012               	return	
 13089  010474                     __end_of_fat_create_file:
 13090                           	opt stack 0
 13091                           tblptru	equ	0xFF8
 13092                           tblptrh	equ	0xFF7
 13093                           tblptrl	equ	0xFF6
 13094                           tablat	equ	0xFF5
 13095                           prodh	equ	0xFF4
 13096                           prodl	equ	0xFF3
 13097                           postinc0	equ	0xFEE
 13098                           wreg	equ	0xFE8
 13099                           postdec1	equ	0xFE5
 13100                           plusw1	equ	0xFE3
 13101                           fsr1h	equ	0xFE2
 13102                           fsr1l	equ	0xFE1
 13103                           indf2	equ	0xFDF
 13104                           postinc2	equ	0xFDE
 13105                           plusw2	equ	0xFDB
 13106                           fsr2h	equ	0xFDA
 13107                           fsr2l	equ	0xFD9
 13108                           status	equ	0xFD8
 13109                           
 13110 ;; *************** function __write_root *****************
 13111 ;; Defined at:
 13112 ;;		line 474 in file "fat16.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  file_number     1    wreg     unsigned char 
 13115 ;;  data            2   40[BANK0 ] PTR struct .
 13116 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  file_number     1   46[BANK0 ] unsigned char 
 13119 ;;  offset          2   44[BANK0 ] unsigned int 
 13120 ;;  sector          2   42[BANK0 ] unsigned int 
 13121 ;; Return value:  Size  Location     Type
 13122 ;;                  1    wreg      void 
 13123 ;; Registers used:
 13124 ;;		wreg, status,2, status,0, cstack
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13131 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13133 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13134 ;;Total ram usage:        7 bytes
 13135 ;; Hardware stack levels used:    1
 13136 ;; Hardware stack levels required when called:   15
 13137 ;; This function calls:
 13138 ;;		__offset_from_file_number
 13139 ;;		__sector_from_file_number
 13140 ;;		_flash_partial_write
 13141 ;; This function is called by:
 13142 ;;		_fat_create_file
 13143 ;;		_fat_resize_file
 13144 ;;		_fat_rename_file
 13145 ;; This function uses a non-reentrant model
 13146 ;;
 13147                           
 13148                           	psect	text41
 13149  015200                     __ptext41:
 13150                           	opt stack 0
 13151  015200                     __write_root:
 13152                           	opt stack 12
 13153                           
 13154                           ;incstack = 0
 13155                           ;__write_root@file_number stored from wreg
 13156  015200  0100               	movlb	0	; () banked
 13157  015202  6F8E               	movwf	__write_root@file_number& (0+255),b
 13158                           
 13159                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 13160  015204  0100               	movlb	0	; () banked
 13161  015206  518E               	movf	__write_root@file_number& (0+255),w,b
 13162  015208  EC05  F0AC         	call	__sector_from_file_number
 13163  01520C  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13164  015210  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13165                           
 13166                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 13167  015214  0100               	movlb	0	; () banked
 13168  015216  518E               	movf	__write_root@file_number& (0+255),w,b
 13169  015218  EC17  F0AD         	call	__offset_from_file_number
 13170  01521C  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13171  015220  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13172                           
 13173                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 13174  015224  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13175  015228  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13176  01522C  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13177  015230  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13178  015234  0E00               	movlw	0
 13179  015236  0100               	movlb	0	; () banked
 13180  015238  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13181  01523A  0E20               	movlw	32
 13182  01523C  6F83               	movwf	flash_partial_write@length& (0+255),b
 13183  01523E  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13184  015242  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13185  015246  EC55  F0A2         	call	_flash_partial_write	;wreg free
 13186  01524A  0012               	return		;funcret
 13187  01524C                     __end_of__write_root:
 13188                           	opt stack 0
 13189                           tblptru	equ	0xFF8
 13190                           tblptrh	equ	0xFF7
 13191                           tblptrl	equ	0xFF6
 13192                           tablat	equ	0xFF5
 13193                           prodh	equ	0xFF4
 13194                           prodl	equ	0xFF3
 13195                           postinc0	equ	0xFEE
 13196                           wreg	equ	0xFE8
 13197                           postdec1	equ	0xFE5
 13198                           plusw1	equ	0xFE3
 13199                           fsr1h	equ	0xFE2
 13200                           fsr1l	equ	0xFE1
 13201                           indf2	equ	0xFDF
 13202                           postinc2	equ	0xFDE
 13203                           plusw2	equ	0xFDB
 13204                           fsr2h	equ	0xFDA
 13205                           fsr2l	equ	0xFD9
 13206                           status	equ	0xFD8
 13207                           
 13208 ;; *************** function _flash_partial_write *****************
 13209 ;; Defined at:
 13210 ;;		line 460 in file "flash.c"
 13211 ;; Parameters:    Size  Location     Type
 13212 ;;  page            2   31[BANK0 ] unsigned int 
 13213 ;;  start           2   33[BANK0 ] unsigned int 
 13214 ;;  length          2   35[BANK0 ] unsigned int 
 13215 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13216 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13217 ;;		 -> _delete_root@deleted_value(1), 
 13218 ;; Auto vars:     Size  Location     Type
 13219 ;;  match           1   39[BANK0 ] enum E7061
 13220 ;; Return value:  Size  Location     Type
 13221 ;;                  1    wreg      void 
 13222 ;; Registers used:
 13223 ;;		wreg, status,2, status,0, cstack
 13224 ;; Tracked objects:
 13225 ;;		On entry : 0/0
 13226 ;;		On exit  : 0/0
 13227 ;;		Unchanged: 0/0
 13228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13229 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13232 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13233 ;;Total ram usage:        9 bytes
 13234 ;; Hardware stack levels used:    1
 13235 ;; Hardware stack levels required when called:   14
 13236 ;; This function calls:
 13237 ;;		__flash_compare_page_to_buffer
 13238 ;;		__flash_copy_page_to_buffer
 13239 ;;		__flash_is_busy
 13240 ;;		__flash_write_page_from_buffer
 13241 ;;		__flash_write_to_buffer
 13242 ;; This function is called by:
 13243 ;;		__write_root
 13244 ;;		_fat_modify_file
 13245 ;;		__delete_root
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249                           	psect	text42
 13250  0144AA                     __ptext42:
 13251                           	opt stack 0
 13252  0144AA                     _flash_partial_write:
 13253                           	opt stack 12
 13254                           
 13255                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13256                           
 13257                           ;incstack = 0
 13258  0144AA  ECC6  F0AD         	call	__flash_is_busy	;wreg free
 13259  0144AE  0900               	iorlw	0
 13260  0144B0  A4D8               	btfss	status,2,c
 13261  0144B2  D7FB               	goto	_flash_partial_write
 13262                           
 13263                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13264  0144B4  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13265  0144B8  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13266  0144BC  0E00               	movlw	0
 13267  0144BE  0100               	movlb	0	; () banked
 13268  0144C0  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13269  0144C2  ECDA  F0A4         	call	__flash_copy_page_to_buffer	;wreg free
 13270                           
 13271                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13272  0144C6  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13273  0144CA  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13274  0144CE  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13275  0144D2  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13276  0144D6  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13277  0144DA  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13278  0144DE  0E00               	movlw	0
 13279  0144E0  0100               	movlb	0	; () banked
 13280  0144E2  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13281  0144E4  ECC0  F0A7         	call	__flash_write_to_buffer	;wreg free
 13282                           
 13283                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13284  0144E8  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13285  0144EC  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13286  0144F0  0E00               	movlw	0
 13287  0144F2  0100               	movlb	0	; () banked
 13288  0144F4  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13289  0144F6  EC48  F0A0         	call	__flash_compare_page_to_buffer	;wreg free
 13290  0144FA  0100               	movlb	0	; () banked
 13291  0144FC  6F87               	movwf	flash_partial_write@match& (0+255),b
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13295  0144FE  0587               	decf	flash_partial_write@match& (0+255),w,b
 13296  014500  A4D8               	btfss	status,2,c
 13297  014502  0012               	return	
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13301  014504  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13302  014508  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13303  01450C  0E00               	movlw	0
 13304  01450E  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13305  014510  EC61  F0A5         	call	__flash_write_page_from_buffer	;wreg free
 13306  014514  0012               	return	
 13307  014516                     __end_of_flash_partial_write:
 13308                           	opt stack 0
 13309                           tblptru	equ	0xFF8
 13310                           tblptrh	equ	0xFF7
 13311                           tblptrl	equ	0xFF6
 13312                           tablat	equ	0xFF5
 13313                           prodh	equ	0xFF4
 13314                           prodl	equ	0xFF3
 13315                           postinc0	equ	0xFEE
 13316                           wreg	equ	0xFE8
 13317                           postdec1	equ	0xFE5
 13318                           plusw1	equ	0xFE3
 13319                           fsr1h	equ	0xFE2
 13320                           fsr1l	equ	0xFE1
 13321                           indf2	equ	0xFDF
 13322                           postinc2	equ	0xFDE
 13323                           plusw2	equ	0xFDB
 13324                           fsr2h	equ	0xFDA
 13325                           fsr2l	equ	0xFD9
 13326                           status	equ	0xFD8
 13327                           
 13328 ;; *************** function __flash_copy_page_to_buffer *****************
 13329 ;; Defined at:
 13330 ;;		line 154 in file "flash.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  page            2   19[BANK0 ] unsigned int 
 13333 ;;  buffer          1   21[BANK0 ] enum E7057
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;  command         4   25[BANK0 ] unsigned char [4]
 13336 ;; Return value:  Size  Location     Type
 13337 ;;                  1    wreg      void 
 13338 ;; Registers used:
 13339 ;;		wreg, status,2, status,0, cstack
 13340 ;; Tracked objects:
 13341 ;;		On entry : 0/0
 13342 ;;		On exit  : 0/0
 13343 ;;		Unchanged: 0/0
 13344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13345 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13346 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13347 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13348 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13349 ;;Total ram usage:       10 bytes
 13350 ;; Hardware stack levels used:    1
 13351 ;; Hardware stack levels required when called:   13
 13352 ;; This function calls:
 13353 ;;		__flash_is_busy
 13354 ;;		_spi_tx
 13355 ;; This function is called by:
 13356 ;;		_flash_partial_write
 13357 ;;		_flash_copy_page_to_buffer
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text43
 13362  0149B4                     __ptext43:
 13363                           	opt stack 0
 13364  0149B4                     __flash_copy_page_to_buffer:
 13365                           	opt stack 12
 13366                           
 13367                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13368                           
 13369                           ;incstack = 0
 13370  0149B4  ECC6  F0AD         	call	__flash_is_busy	;wreg free
 13371  0149B8  0900               	iorlw	0
 13372  0149BA  A4D8               	btfss	status,2,c
 13373  0149BC  D7FB               	goto	__flash_copy_page_to_buffer
 13374                           
 13375                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13376  0149BE  0100               	movlb	0	; () banked
 13377  0149C0  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13378  0149C2  A4D8               	btfss	status,2,c
 13379  0149C4  D002               	goto	l1554
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;flash.c: 163: command[0] = 0x53;
 13383  0149C6  0E53               	movlw	83
 13384  0149C8  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13385  0149CA                     l1554:
 13386                           
 13387                           ; BSR set to: 0
 13388                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13389                           
 13390                           ; BSR set to: 0
 13391  0149CA  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13392  0149CC  A4D8               	btfss	status,2,c
 13393  0149CE  D002               	goto	l1555
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;flash.c: 165: command[0] = 0x55;
 13397  0149D0  0E55               	movlw	85
 13398  0149D2  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13399  0149D4                     l1555:
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13403                           
 13404                           ; BSR set to: 0
 13405  0149D4  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13406  0149D8  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13407  0149DC  0E07               	movlw	7
 13408  0149DE  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13409  0149E0                     u11545:
 13410  0149E0  90D8               	bcf	status,0,c
 13411  0149E2  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13412  0149E4  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13413  0149E6  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13414  0149E8  D7FB               	goto	u11545
 13415  0149EA  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13416  0149EC  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13420  0149EE  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13421  0149F0  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13422  0149F2  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13423                           
 13424                           ;flash.c: 169: command[3] = 0x00;
 13425  0149F4  0E00               	movlw	0
 13426  0149F6  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;flash.c: 172: spi_tx(command, 4);
 13430  0149F8  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13431  0149FA  6F60               	movwf	spi_tx@data& (0+255),b
 13432  0149FC  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13433  0149FE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13434  014A00  0E00               	movlw	0
 13435  014A02  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13436  014A04  0E04               	movlw	4
 13437  014A06  6F62               	movwf	spi_tx@length& (0+255),b
 13438  014A08  EC8E  F0A5         	call	_spi_tx	;wreg free
 13439  014A0C  0012               	return		;funcret
 13440  014A0E                     __end_of__flash_copy_page_to_buffer:
 13441                           	opt stack 0
 13442                           tblptru	equ	0xFF8
 13443                           tblptrh	equ	0xFF7
 13444                           tblptrl	equ	0xFF6
 13445                           tablat	equ	0xFF5
 13446                           prodh	equ	0xFF4
 13447                           prodl	equ	0xFF3
 13448                           postinc0	equ	0xFEE
 13449                           wreg	equ	0xFE8
 13450                           postdec1	equ	0xFE5
 13451                           plusw1	equ	0xFE3
 13452                           fsr1h	equ	0xFE2
 13453                           fsr1l	equ	0xFE1
 13454                           indf2	equ	0xFDF
 13455                           postinc2	equ	0xFDE
 13456                           plusw2	equ	0xFDB
 13457                           fsr2h	equ	0xFDA
 13458                           fsr2l	equ	0xFD9
 13459                           status	equ	0xFD8
 13460                           
 13461 ;; *************** function __make_cluster_chain *****************
 13462 ;; Defined at:
 13463 ;;		line 214 in file "fat16.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13466 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13469 ;;  offset          2   72[BANK0 ] unsigned int 
 13470 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13471 ;;  sector          2   68[BANK0 ] unsigned int 
 13472 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13473 ;;  different_se    2   63[BANK0 ] unsigned int 
 13474 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13475 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13476 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  2   53[BANK0 ] unsigned int 
 13479 ;; Registers used:
 13480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13487 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13489 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13490 ;;Total ram usage:       23 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; Hardware stack levels required when called:   16
 13493 ;; This function calls:
 13494 ;;		__fat_offset_from_cluster
 13495 ;;		__fat_sector_from_cluster
 13496 ;;		__get_available_cluster
 13497 ;;		__get_available_offset_from_buffer
 13498 ;;		__read_value_from_offset
 13499 ;;		__write_value_to_offset
 13500 ;;		_flash_sector_read
 13501 ;;		_flash_sector_write
 13502 ;; This function is called by:
 13503 ;;		_fat_create_file
 13504 ;;		_fat_resize_file
 13505 ;;		_fat_delete_file
 13506 ;; This function uses a non-reentrant model
 13507 ;;
 13508                           
 13509                           	psect	text44
 13510  00D266                     __ptext44:
 13511                           	opt stack 0
 13512  00D266                     __make_cluster_chain:
 13513                           	opt stack 11
 13514                           
 13515                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13516                           
 13517                           ;incstack = 0
 13518  00D266  0E00               	movlw	0
 13519  00D268  0100               	movlb	0	; () banked
 13520  00D26A  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13521  00D26C  0E00               	movlw	0
 13522  00D26E  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13523                           
 13524                           ; BSR set to: 0
 13525                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13526  00D270  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13527  00D274  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13528                           
 13529                           ;fat16.c: 229: minimum_sector = 2;
 13530  00D278  0E00               	movlw	0
 13531  00D27A  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13532  00D27C  0E02               	movlw	2
 13533  00D27E  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13534                           
 13535                           ;fat16.c: 230: data_changed = 0;
 13536  00D280  0E00               	movlw	0
 13537  00D282  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13541  00D284  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13542  00D286  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13543  00D288  A4D8               	btfss	status,2,c
 13544  00D28A  D024               	goto	l1788
 13545                           
 13546                           ; BSR set to: 0
 13547  00D28C  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13548  00D28E  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13549  00D290  B4D8               	btfsc	status,2,c
 13550  00D292  D020               	goto	l1788
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13554  00D294  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13555  00D298  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13556  00D29C  0E00               	movlw	0
 13557  00D29E  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13558  00D2A0  0E00               	movlw	0
 13559  00D2A2  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13560  00D2A4  ECF4  F094         	call	__get_available_cluster	;wreg free
 13561  00D2A8  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13562  00D2AC  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13563                           
 13564                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13565  00D2B0  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13566  00D2B4  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13567  00D2B8  EC49  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13568  00D2BC  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13569  00D2C0  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13570                           
 13571                           ;fat16.c: 238: if(first_cluster == 0)
 13572  00D2C4  0100               	movlb	0	; () banked
 13573  00D2C6  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13574  00D2C8  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13575  00D2CA  A4D8               	btfss	status,2,c
 13576  00D2CC  D003               	goto	l1788
 13577                           
 13578                           ; BSR set to: 0
 13579                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13580  00D2CE  6995               	setf	?__make_cluster_chain& (0+255),b
 13581  00D2D0  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13582  00D2D2  0012               	return	
 13583  00D2D4                     l1788:
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13587                           
 13588                           ; BSR set to: 0
 13589  00D2D4  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13590  00D2D8  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13591                           
 13592                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13593  00D2DC  D103               	goto	l1805
 13594  00D2DE                     
 13595                           ; BSR set to: 0
 13596                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13597                           
 13598                           ; BSR set to: 0
 13599  00D2DE  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13600  00D2E2  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13601  00D2E6  EC49  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13602  00D2EA  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13603  00D2EE  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13604                           
 13605                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13606  00D2F2  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13607  00D2F6  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13608  00D2FA  EC56  F0AE         	call	__fat_offset_from_cluster	;wreg free
 13609  00D2FE  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13610  00D302  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13611                           
 13612                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13613  00D306  0100               	movlb	0	; () banked
 13614  00D308  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13615  00D30A  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13616  00D30C  E104               	bnz	u13870
 13617  00D30E  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13618  00D310  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13619  00D312  B4D8               	btfsc	status,2,c
 13620  00D314  D037               	goto	l1792
 13621  00D316                     u13870:
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13625  00D316  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13626  00D318  B4D8               	btfsc	status,2,c
 13627  00D31A  D00A               	goto	l1793
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13631  00D31C  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13632  00D320  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13633  00D324  0E00               	movlw	low _buffer
 13634  00D326  6F81               	movwf	flash_sector_write@data& (0+255),b
 13635  00D328  0E0A               	movlw	high _buffer
 13636  00D32A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13637  00D32C  EC61  F0A8         	call	_flash_sector_write	;wreg free
 13638  00D330                     l1793:
 13639                           
 13640                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13641  00D330  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13642  00D334  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13643  00D338  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13644  00D33C  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13645  00D340  ECF4  F094         	call	__get_available_cluster	;wreg free
 13646  00D344  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13647  00D348  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13648                           
 13649                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13650  00D34C  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13651  00D350  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13652  00D354  EC49  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13653  00D358  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13654  00D35C  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13655                           
 13656                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13657  00D360  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13658  00D364  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13659  00D368  0E00               	movlw	low _buffer
 13660  00D36A  0100               	movlb	0	; () banked
 13661  00D36C  6F89               	movwf	flash_sector_read@data& (0+255),b
 13662  00D36E  0E0A               	movlw	high _buffer
 13663  00D370  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13664  00D372  EC68  F0AD         	call	_flash_sector_read	;wreg free
 13665                           
 13666                           ;fat16.c: 280: sector_in_buffer = sector;
 13667  00D376  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13668  00D37A  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13669                           
 13670                           ;fat16.c: 281: data_changed = 0;
 13671  00D37E  0E00               	movlw	0
 13672  00D380  0100               	movlb	0	; () banked
 13673  00D382  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13674  00D384                     l1792:
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13678                           
 13679                           ; BSR set to: 0
 13680  00D384  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13681  00D386  E104               	bnz	u13890
 13682  00D388  0E02               	movlw	2
 13683  00D38A  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13684  00D38C  A0D8               	btfss	status,0,c
 13685  00D38E  D05E               	goto	l1794
 13686  00D390                     u13890:
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13690  00D390  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13691  00D394  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13692  00D398  0E00               	movlw	low _buffer
 13693  00D39A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13694  00D39C  0E0A               	movlw	high _buffer
 13695  00D39E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13696  00D3A0  EC70  F0A9         	call	__read_value_from_offset	;wreg free
 13697  00D3A4  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13698  00D3A8  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13699                           
 13700                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13701  00D3AC  0100               	movlb	0	; () banked
 13702  00D3AE  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13703  00D3B0  E104               	bnz	u13900
 13704  00D3B2  0E02               	movlw	2
 13705  00D3B4  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13706  00D3B6  A0D8               	btfss	status,0,c
 13707  00D3B8  D006               	goto	u13910
 13708  00D3BA                     u13900:
 13709                           
 13710                           ; BSR set to: 0
 13711  00D3BA  0EDA               	movlw	218
 13712  00D3BC  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13713  00D3BE  0E1F               	movlw	31
 13714  00D3C0  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13715  00D3C2  A0D8               	btfss	status,0,c
 13716  00D3C4  D06B               	goto	l1804
 13717  00D3C6                     u13910:
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13721                           
 13722                           ; BSR set to: 0
 13723  00D3C6  0E02               	movlw	2
 13724  00D3C8  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13725  00D3CA  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13726  00D3CC  0E00               	movlw	0
 13727  00D3CE  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13728  00D3D0  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13729  00D3D2  0E00               	movlw	low _buffer
 13730  00D3D4  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13731  00D3D6  0E0A               	movlw	high _buffer
 13732  00D3D8  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13733  00D3DA  EC4F  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 13734  00D3DE  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13735  00D3E2  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13736                           
 13737                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13738  00D3E6  0100               	movlb	0	; () banked
 13739  00D3E8  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13740  00D3EA  E103               	bnz	u13920
 13741  00D3EC  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13742  00D3EE  B4D8               	btfsc	status,2,c
 13743  00D3F0  D013               	goto	l1798
 13744  00D3F2                     u13920:
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13748  00D3F2  0EFE               	movlw	254
 13749  00D3F4  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13750  00D3F6  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13751  00D3F8  0EFF               	movlw	255
 13752  00D3FA  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13753  00D3FC  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;fat16.c: 300: next_cluster <<= 8;
 13757  00D3FE  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13758  00D400  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13759  00D402  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13763  00D404  90D8               	bcf	status,0,c
 13764  00D406  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13765  00D408  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13766  00D40A  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13767  00D40C  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13768  00D40E  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13769  00D410  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13770  00D412  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13771  00D414  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13772                           
 13773                           ;fat16.c: 302: }
 13774  00D416  D00B               	goto	l1801
 13775  00D418                     l1798:
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13779                           
 13780                           ; BSR set to: 0
 13781  00D418  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13782  00D41A  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13783  00D41C  A4D8               	btfss	status,2,c
 13784  00D41E  D003               	goto	l1800
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13788  00D420  6995               	setf	?__make_cluster_chain& (0+255),b
 13789  00D422  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13790  00D424  0012               	return	
 13791  00D426                     l1800:
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13795  00D426  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13796  00D42A  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13797  00D42E                     l1801:
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13801                           
 13802                           ; BSR set to: 0
 13803                           
 13804                           ; BSR set to: 0
 13805  00D42E  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13806  00D432  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13807  00D436  0E00               	movlw	low _buffer
 13808  00D438  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13809  00D43A  0E0A               	movlw	high _buffer
 13810  00D43C  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13811  00D43E  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13812  00D442  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13813  00D446  EC69  F0AB         	call	__write_value_to_offset	;wreg free
 13814  00D44A  D025               	goto	L86
 13815  00D44C                     l1794:
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13819                           
 13820                           ; BSR set to: 0
 13821  00D44C  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13822  00D44E  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13823  00D450  A4D8               	btfss	status,2,c
 13824  00D452  D028               	goto	l1803
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13828  00D454  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13829  00D458  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13830  00D45C  0E00               	movlw	low _buffer
 13831  00D45E  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13832  00D460  0E0A               	movlw	high _buffer
 13833  00D462  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13834  00D464  EC70  F0A9         	call	__read_value_from_offset	;wreg free
 13835  00D468  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13836  00D46C  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13837                           
 13838                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13839  00D470  0100               	movlb	0	; () banked
 13840  00D472  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13841  00D474  E103               	bnz	u13950
 13842  00D476  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13843  00D478  B4D8               	btfsc	status,2,c
 13844  00D47A  D010               	goto	l1804
 13845  00D47C                     u13950:
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13849  00D47C  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13850  00D480  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13851  00D484  0E00               	movlw	low _buffer
 13852  00D486  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13853  00D488  0E0A               	movlw	high _buffer
 13854  00D48A  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13855  00D48C  0EFF               	movlw	255
 13856  00D48E  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13857  00D490  6964               	setf	__write_value_to_offset@value& (0+255),b
 13858  00D492  EC69  F0AB         	call	__write_value_to_offset	;wreg free
 13859  00D496                     L86:
 13860                           
 13861                           ;fat16.c: 337: data_changed = 1;
 13862  00D496  0E01               	movlw	1
 13863  00D498  0100               	movlb	0	; () banked
 13864  00D49A  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13865  00D49C                     l1804:
 13866                           
 13867                           ; BSR set to: 0
 13868                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13869                           
 13870                           ; BSR set to: 0
 13871  00D49C  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13872  00D49E  A0D8               	btfss	status,0,c
 13873  00D4A0  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13874                           
 13875                           ;fat16.c: 342: }
 13876  00D4A2  D020               	goto	l1805
 13877  00D4A4                     l1803:
 13878                           
 13879                           ; BSR set to: 0
 13880                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13881                           
 13882                           ; BSR set to: 0
 13883  00D4A4  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13884  00D4A8  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13885  00D4AC  0E00               	movlw	low _buffer
 13886  00D4AE  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13887  00D4B0  0E0A               	movlw	high _buffer
 13888  00D4B2  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13889  00D4B4  EC70  F0A9         	call	__read_value_from_offset	;wreg free
 13890  00D4B8  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13891  00D4BC  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13892                           
 13893                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13894  00D4C0  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13895  00D4C4  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13896  00D4C8  0E00               	movlw	low _buffer
 13897  00D4CA  0100               	movlb	0	; () banked
 13898  00D4CC  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13899  00D4CE  0E0A               	movlw	high _buffer
 13900  00D4D0  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13901  00D4D2  0E00               	movlw	0
 13902  00D4D4  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13903  00D4D6  0E00               	movlw	0
 13904  00D4D8  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13905  00D4DA  EC69  F0AB         	call	__write_value_to_offset	;wreg free
 13906                           
 13907                           ;fat16.c: 353: data_changed = 1;
 13908  00D4DE  0E01               	movlw	1
 13909  00D4E0  0100               	movlb	0	; () banked
 13910  00D4E2  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13911  00D4E4                     l1805:
 13912                           
 13913                           ; BSR set to: 0
 13914                           
 13915                           ; BSR set to: 0
 13916                           
 13917                           ; BSR set to: 0
 13918                           
 13919                           ; BSR set to: 0
 13920  00D4E4  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13921  00D4E6  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13922  00D4E8  A4D8               	btfss	status,2,c
 13923  00D4EA  D6F9               	goto	l1791
 13924                           
 13925                           ; BSR set to: 0
 13926  00D4EC  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13927  00D4EE  E104               	bnz	u13970
 13928  00D4F0  0E02               	movlw	2
 13929  00D4F2  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13930  00D4F4  A0D8               	btfss	status,0,c
 13931  00D4F6  D006               	goto	u13980
 13932  00D4F8                     u13970:
 13933                           
 13934                           ; BSR set to: 0
 13935  00D4F8  0EDA               	movlw	218
 13936  00D4FA  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13937  00D4FC  0E1F               	movlw	31
 13938  00D4FE  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13939  00D500  A0D8               	btfss	status,0,c
 13940  00D502  D6ED               	goto	l1791
 13941  00D504                     u13980:
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 13945                           
 13946                           ; BSR set to: 0
 13947                           
 13948                           ; BSR set to: 0
 13949  00D504  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13950  00D506  B4D8               	btfsc	status,2,c
 13951  00D508  D00A               	goto	l1809
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 13955  00D50A  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13956  00D50E  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13957  00D512  0E00               	movlw	low _buffer
 13958  00D514  6F81               	movwf	flash_sector_write@data& (0+255),b
 13959  00D516  0E0A               	movlw	high _buffer
 13960  00D518  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13961  00D51A  EC61  F0A8         	call	_flash_sector_write	;wreg free
 13962  00D51E                     l1809:
 13963                           
 13964                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 13965  00D51E  0100               	movlb	0	; () banked
 13966  00D520  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13967  00D522  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13968  00D524  B4D8               	btfsc	status,2,c
 13969  00D526  D005               	goto	l1810
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 13973  00D528  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 13974  00D52C  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;fat16.c: 368: }
 13978  00D530  0012               	return	
 13979  00D532                     l1810:
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 13983                           
 13984                           ; BSR set to: 0
 13985  00D532  0E00               	movlw	0
 13986  00D534  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 13987  00D536  0E00               	movlw	0
 13988  00D538  6F95               	movwf	?__make_cluster_chain& (0+255),b
 13989                           
 13990                           ; BSR set to: 0
 13991  00D53A  0012               	return	
 13992  00D53C                     __end_of__make_cluster_chain:
 13993                           	opt stack 0
 13994                           tblptru	equ	0xFF8
 13995                           tblptrh	equ	0xFF7
 13996                           tblptrl	equ	0xFF6
 13997                           tablat	equ	0xFF5
 13998                           prodh	equ	0xFF4
 13999                           prodl	equ	0xFF3
 14000                           postinc0	equ	0xFEE
 14001                           wreg	equ	0xFE8
 14002                           postdec1	equ	0xFE5
 14003                           plusw1	equ	0xFE3
 14004                           fsr1h	equ	0xFE2
 14005                           fsr1l	equ	0xFE1
 14006                           indf2	equ	0xFDF
 14007                           postinc2	equ	0xFDE
 14008                           plusw2	equ	0xFDB
 14009                           fsr2h	equ	0xFDA
 14010                           fsr2l	equ	0xFD9
 14011                           status	equ	0xFD8
 14012                           
 14013 ;; *************** function __write_value_to_offset *****************
 14014 ;; Defined at:
 14015 ;;		line 124 in file "fat16.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;  offset          2    0[BANK0 ] unsigned int 
 14018 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14019 ;;		 -> buffer(512), 
 14020 ;;  value           2    4[BANK0 ] unsigned int 
 14021 ;; Auto vars:     Size  Location     Type
 14022 ;;		None
 14023 ;; Return value:  Size  Location     Type
 14024 ;;                  1    wreg      void 
 14025 ;; Registers used:
 14026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14027 ;; Tracked objects:
 14028 ;;		On entry : 0/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14034 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14035 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14036 ;;Total ram usage:        8 bytes
 14037 ;; Hardware stack levels used:    1
 14038 ;; Hardware stack levels required when called:   10
 14039 ;; This function calls:
 14040 ;;		Nothing
 14041 ;; This function is called by:
 14042 ;;		__make_cluster_chain
 14043 ;; This function uses a non-reentrant model
 14044 ;;
 14045                           
 14046                           	psect	text45
 14047  0156D2                     __ptext45:
 14048                           	opt stack 0
 14049  0156D2                     __write_value_to_offset:
 14050                           	opt stack 16
 14051                           
 14052                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 14053                           
 14054                           ; BSR set to: 0
 14055                           ;incstack = 0
 14056  0156D2  0100               	movlb	0	; () banked
 14057  0156D4  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14058  0156D6  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14059  0156D8  6ED9               	movwf	fsr2l,c
 14060  0156DA  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14061  0156DC  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14062  0156DE  6EDA               	movwf	fsr2h,c
 14063  0156E0  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;fat16.c: 127: value >>= 8;
 14067  0156E4  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14068  0156E6  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14069  0156E8  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14073  0156EA  0E01               	movlw	1
 14074  0156EC  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14075  0156EE  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14076  0156F0  0E00               	movlw	0
 14077  0156F2  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14078  0156F4  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14079  0156F6  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14080  0156F8  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14081  0156FA  6ED9               	movwf	fsr2l,c
 14082  0156FC  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14083  0156FE  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14084  015700  6EDA               	movwf	fsr2h,c
 14085  015702  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14086                           
 14087                           ; BSR set to: 0
 14088  015706  0012               	return		;funcret
 14089  015708                     __end_of__write_value_to_offset:
 14090                           	opt stack 0
 14091                           tblptru	equ	0xFF8
 14092                           tblptrh	equ	0xFF7
 14093                           tblptrl	equ	0xFF6
 14094                           tablat	equ	0xFF5
 14095                           prodh	equ	0xFF4
 14096                           prodl	equ	0xFF3
 14097                           postinc0	equ	0xFEE
 14098                           wreg	equ	0xFE8
 14099                           postdec1	equ	0xFE5
 14100                           plusw1	equ	0xFE3
 14101                           fsr1h	equ	0xFE2
 14102                           fsr1l	equ	0xFE1
 14103                           indf2	equ	0xFDF
 14104                           postinc2	equ	0xFDE
 14105                           plusw2	equ	0xFDB
 14106                           fsr2h	equ	0xFDA
 14107                           fsr2l	equ	0xFD9
 14108                           status	equ	0xFD8
 14109                           
 14110 ;; *************** function __get_available_cluster *****************
 14111 ;; Defined at:
 14112 ;;		line 131 in file "fat16.c"
 14113 ;; Parameters:    Size  Location     Type
 14114 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14115 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14116 ;; Auto vars:     Size  Location     Type
 14117 ;;  sector          2   51[BANK0 ] unsigned int 
 14118 ;;  offset          2   49[BANK0 ] unsigned int 
 14119 ;;  cluster         2   47[BANK0 ] unsigned int 
 14120 ;; Return value:  Size  Location     Type
 14121 ;;                  2   43[BANK0 ] unsigned int 
 14122 ;; Registers used:
 14123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14124 ;; Tracked objects:
 14125 ;;		On entry : 0/0
 14126 ;;		On exit  : 0/0
 14127 ;;		Unchanged: 0/0
 14128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14130 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14132 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14133 ;;Total ram usage:       10 bytes
 14134 ;; Hardware stack levels used:    1
 14135 ;; Hardware stack levels required when called:   15
 14136 ;; This function calls:
 14137 ;;		__cluster_from_sector_and_offset
 14138 ;;		__get_available_offset_from_buffer
 14139 ;;		_flash_sector_read
 14140 ;; This function is called by:
 14141 ;;		__make_cluster_chain
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text46
 14146  0129E8                     __ptext46:
 14147                           	opt stack 0
 14148  0129E8                     __get_available_cluster:
 14149                           	opt stack 11
 14150                           
 14151                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;incstack = 0
 14155  0129E8  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14156  0129EC  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14157  0129F0  0100               	movlb	0	; () banked
 14158  0129F2  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14159  0129F4  E15B               	bnz	l13968
 14160  0129F6  0E22               	movlw	34
 14161  0129F8  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14162  0129FA  B0D8               	btfsc	status,0,c
 14163  0129FC  D057               	goto	u12610
 14164                           
 14165                           ; BSR set to: 0
 14166                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 14167                           
 14168                           ; BSR set to: 0
 14169                           
 14170                           ; BSR set to: 0
 14171  0129FE  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14172  012A00  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14173  012A02  E104               	bnz	l13944
 14174  012A04  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14175  012A06  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14176  012A08  B4D8               	btfsc	status,2,c
 14177  012A0A  D04D               	goto	l1776
 14178  012A0C                     l13944:
 14179                           
 14180                           ; BSR set to: 0
 14181                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 14182  012A0C  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14183  012A10  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14184  012A14  0E00               	movlw	low _buffer
 14185  012A16  6F89               	movwf	flash_sector_read@data& (0+255),b
 14186  012A18  0E0A               	movlw	high _buffer
 14187  012A1A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14188  012A1C  EC68  F0AD         	call	_flash_sector_read	;wreg free
 14189                           
 14190                           ;fat16.c: 150: if(sector == 2)
 14191  012A20  0E02               	movlw	2
 14192  012A22  0100               	movlb	0	; () banked
 14193  012A24  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14194  012A26  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14195  012A28  A4D8               	btfss	status,2,c
 14196  012A2A  D00B               	goto	l1771
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 14200  012A2C  0E00               	movlw	0
 14201  012A2E  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14202  012A30  0E04               	movlw	4
 14203  012A32  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14204  012A34  0E00               	movlw	low _buffer
 14205  012A36  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14206  012A38  0E0A               	movlw	high _buffer
 14207  012A3A  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14208  012A3C  EC4F  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 14209  012A40  D00B               	goto	L1
 14210  012A42                     l1771:
 14211                           
 14212                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14213  012A42  0E00               	movlw	0
 14214  012A44  0100               	movlb	0	; () banked
 14215  012A46  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14216  012A48  0E00               	movlw	0
 14217  012A4A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14218  012A4C  0E00               	movlw	low _buffer
 14219  012A4E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14220  012A50  0E0A               	movlw	high _buffer
 14221  012A52  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14222  012A54  EC4F  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 14223  012A58                     L1:
 14224  012A58  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14225  012A5C  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14226                           
 14227                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 14228  012A60  0100               	movlb	0	; () banked
 14229  012A62  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14230  012A64  E103               	bnz	u12590
 14231  012A66  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14232  012A68  B4D8               	btfsc	status,2,c
 14233  012A6A  D01D               	goto	l1776
 14234  012A6C                     u12590:
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14238  012A6C  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14239  012A70  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14240  012A74  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14241  012A78  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14242  012A7C  EC40  F0AD         	call	__cluster_from_sector_and_offset	;wreg free
 14243  012A80  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14244  012A84  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14245                           
 14246                           ;fat16.c: 166: if(cluster > 8191)
 14247  012A88  0E20               	movlw	32
 14248  012A8A  0100               	movlb	0	; () banked
 14249  012A8C  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14250  012A8E  A0D8               	btfss	status,0,c
 14251  012A90  D005               	goto	l1774
 14252                           
 14253                           ; BSR set to: 0
 14254                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 14255  012A92  0E00               	movlw	0
 14256  012A94  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14257  012A96  0E00               	movlw	0
 14258  012A98  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14259                           
 14260                           ; BSR set to: 0
 14261  012A9A  0012               	return	
 14262  012A9C                     l1774:
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 14266  012A9C  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14267  012AA0  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14268  012AA4  0012               	return	
 14269  012AA6                     l1776:
 14270                           
 14271                           ; BSR set to: 0
 14272                           
 14273                           ; BSR set to: 0
 14274                           
 14275                           ; BSR set to: 0
 14276                           
 14277                           ; BSR set to: 0
 14278  012AA6  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14279  012AA8  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14280  012AAA  D7A3               	goto	L2
 14281  012AAC                     u12610:
 14282  012AAC                     l13968:
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 14286  012AAC  0E00               	movlw	0
 14287  012AAE  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14288  012AB0  0E00               	movlw	0
 14289  012AB2  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14290  012AB4  0012               	return	
 14291  012AB6                     __end_of__get_available_cluster:
 14292                           	opt stack 0
 14293                           tblptru	equ	0xFF8
 14294                           tblptrh	equ	0xFF7
 14295                           tblptrl	equ	0xFF6
 14296                           tablat	equ	0xFF5
 14297                           prodh	equ	0xFF4
 14298                           prodl	equ	0xFF3
 14299                           postinc0	equ	0xFEE
 14300                           wreg	equ	0xFE8
 14301                           postdec1	equ	0xFE5
 14302                           plusw1	equ	0xFE3
 14303                           fsr1h	equ	0xFE2
 14304                           fsr1l	equ	0xFE1
 14305                           indf2	equ	0xFDF
 14306                           postinc2	equ	0xFDE
 14307                           plusw2	equ	0xFDB
 14308                           fsr2h	equ	0xFDA
 14309                           fsr2l	equ	0xFD9
 14310                           status	equ	0xFD8
 14311                           
 14312 ;; *************** function __get_available_offset_from_buffer *****************
 14313 ;; Defined at:
 14314 ;;		line 99 in file "fat16.c"
 14315 ;; Parameters:    Size  Location     Type
 14316 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14317 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14318 ;;		 -> buffer(512), 
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;  offset          2    6[BANK0 ] unsigned int 
 14321 ;; Return value:  Size  Location     Type
 14322 ;;                  2    0[BANK0 ] unsigned int 
 14323 ;; Registers used:
 14324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14325 ;; Tracked objects:
 14326 ;;		On entry : 0/0
 14327 ;;		On exit  : 0/0
 14328 ;;		Unchanged: 0/0
 14329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14330 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14331 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14332 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14333 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14334 ;;Total ram usage:        8 bytes
 14335 ;; Hardware stack levels used:    1
 14336 ;; Hardware stack levels required when called:   10
 14337 ;; This function calls:
 14338 ;;		Nothing
 14339 ;; This function is called by:
 14340 ;;		__get_available_cluster
 14341 ;;		__make_cluster_chain
 14342 ;; This function uses a non-reentrant model
 14343 ;;
 14344                           
 14345                           	psect	text47
 14346  01489E                     __ptext47:
 14347                           	opt stack 0
 14348  01489E                     __get_available_offset_from_buffer:
 14349                           	opt stack 16
 14350                           
 14351                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;incstack = 0
 14355  01489E  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14356  0148A2  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14357  0148A6  0E02               	movlw	2
 14358  0148A8  0100               	movlb	0	; () banked
 14359  0148AA  D022               	goto	L3
 14360  0148AC                     
 14361                           ; BSR set to: 0
 14362                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14363                           
 14364                           ; BSR set to: 0
 14365  0148AC  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14366  0148AE  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14367  0148B0  6ED9               	movwf	fsr2l,c
 14368  0148B2  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14369  0148B4  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14370  0148B6  6EDA               	movwf	fsr2h,c
 14371  0148B8  50DF               	movf	indf2,w,c
 14372  0148BA  A4D8               	btfss	status,2,c
 14373  0148BC  D014               	goto	l1757
 14374                           
 14375                           ; BSR set to: 0
 14376  0148BE  0E01               	movlw	1
 14377  0148C0  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14378  0148C2  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14379  0148C4  0E00               	movlw	0
 14380  0148C6  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14381  0148C8  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14382  0148CA  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14383  0148CC  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14384  0148CE  6ED9               	movwf	fsr2l,c
 14385  0148D0  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14386  0148D2  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14387  0148D4  6EDA               	movwf	fsr2h,c
 14388  0148D6  50DF               	movf	indf2,w,c
 14389  0148D8  A4D8               	btfss	status,2,c
 14390  0148DA  D005               	goto	l1757
 14391                           
 14392                           ; BSR set to: 0
 14393                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14394  0148DC  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14395  0148E0  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14396  0148E4  0012               	return	
 14397  0148E6                     l1757:
 14398                           
 14399                           ; BSR set to: 0
 14400                           
 14401                           ; BSR set to: 0
 14402  0148E6  0E02               	movlw	2
 14403  0148E8  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14404  0148EA  0E00               	movlw	0
 14405  0148EC  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14406  0148EE  0E02               	movlw	2
 14407  0148F0                     L3:
 14408  0148F0  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14409  0148F2  A0D8               	btfss	status,0,c
 14410  0148F4  D7DB               	goto	l1755
 14411                           
 14412                           ; BSR set to: 0
 14413                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14414  0148F6  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14415  0148F8  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14416                           
 14417                           ; BSR set to: 0
 14418  0148FA  0012               	return		;funcret
 14419  0148FC                     __end_of__get_available_offset_from_buffer:
 14420                           	opt stack 0
 14421                           tblptru	equ	0xFF8
 14422                           tblptrh	equ	0xFF7
 14423                           tblptrl	equ	0xFF6
 14424                           tablat	equ	0xFF5
 14425                           prodh	equ	0xFF4
 14426                           prodl	equ	0xFF3
 14427                           postinc0	equ	0xFEE
 14428                           wreg	equ	0xFE8
 14429                           postdec1	equ	0xFE5
 14430                           plusw1	equ	0xFE3
 14431                           fsr1h	equ	0xFE2
 14432                           fsr1l	equ	0xFE1
 14433                           indf2	equ	0xFDF
 14434                           postinc2	equ	0xFDE
 14435                           plusw2	equ	0xFDB
 14436                           fsr2h	equ	0xFDA
 14437                           fsr2l	equ	0xFD9
 14438                           status	equ	0xFD8
 14439                           
 14440 ;; *************** function __cluster_from_sector_and_offset *****************
 14441 ;; Defined at:
 14442 ;;		line 90 in file "fat16.c"
 14443 ;; Parameters:    Size  Location     Type
 14444 ;;  sector          2    0[BANK0 ] unsigned int 
 14445 ;;  offset          2    2[BANK0 ] unsigned int 
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;		None
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  2    0[BANK0 ] unsigned int 
 14450 ;; Registers used:
 14451 ;;		wreg, status,2, status,0
 14452 ;; Tracked objects:
 14453 ;;		On entry : 0/0
 14454 ;;		On exit  : 0/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14460 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14461 ;;Total ram usage:        4 bytes
 14462 ;; Hardware stack levels used:    1
 14463 ;; Hardware stack levels required when called:   10
 14464 ;; This function calls:
 14465 ;;		Nothing
 14466 ;; This function is called by:
 14467 ;;		__get_available_cluster
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           
 14471                           	psect	text48
 14472  015A80                     __ptext48:
 14473                           	opt stack 0
 14474  015A80                     __cluster_from_sector_and_offset:
 14475                           	opt stack 15
 14476                           
 14477                           ;fat16.c: 92: offset >>= 1;
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;incstack = 0
 14481  015A80  0100               	movlb	0	; () banked
 14482  015A82  90D8               	bcf	status,0,c
 14483  015A84  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14484  015A86  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14485                           
 14486                           ; BSR set to: 0
 14487                           ;fat16.c: 93: sector -= 2;
 14488  015A88  0E02               	movlw	2
 14489  015A8A  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14490  015A8C  0E00               	movlw	0
 14491  015A8E  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;fat16.c: 94: sector <<= 8;
 14495  015A90  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14496  015A92  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14497  015A94  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;fat16.c: 95: sector |= offset;
 14501  015A96  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14502  015A98  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14503  015A9A  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14504  015A9C  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14505                           
 14506                           ; BSR set to: 0
 14507                           ;fat16.c: 96: return sector;
 14508  015A9E  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14509  015AA2  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14510  015AA6  0012               	return	
 14511  015AA8                     __end_of__cluster_from_sector_and_offset:
 14512                           	opt stack 0
 14513                           tblptru	equ	0xFF8
 14514                           tblptrh	equ	0xFF7
 14515                           tblptrl	equ	0xFF6
 14516                           tablat	equ	0xFF5
 14517                           prodh	equ	0xFF4
 14518                           prodl	equ	0xFF3
 14519                           postinc0	equ	0xFEE
 14520                           wreg	equ	0xFE8
 14521                           postdec1	equ	0xFE5
 14522                           plusw1	equ	0xFE3
 14523                           fsr1h	equ	0xFE2
 14524                           fsr1l	equ	0xFE1
 14525                           indf2	equ	0xFDF
 14526                           postinc2	equ	0xFDE
 14527                           plusw2	equ	0xFDB
 14528                           fsr2h	equ	0xFDA
 14529                           fsr2l	equ	0xFD9
 14530                           status	equ	0xFD8
 14531                           
 14532 ;; *************** function __get_time *****************
 14533 ;; Defined at:
 14534 ;;		line 377 in file "fat16.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;		None
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;		None
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  2    0[BANK0 ] unsigned int 
 14541 ;; Registers used:
 14542 ;;		wreg, status,2
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14552 ;;Total ram usage:        2 bytes
 14553 ;; Hardware stack levels used:    1
 14554 ;; Hardware stack levels required when called:   10
 14555 ;; This function calls:
 14556 ;;		Nothing
 14557 ;; This function is called by:
 14558 ;;		_fat_create_file
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           	psect	text49
 14563  015D8C                     __ptext49:
 14564                           	opt stack 0
 14565  015D8C                     __get_time:
 14566                           	opt stack 17
 14567                           
 14568                           ;fat16.c: 389: return 0x0000;
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;incstack = 0
 14572  015D8C  0E00               	movlw	0
 14573  015D8E  0100               	movlb	0	; () banked
 14574  015D90  6F61               	movwf	(?__get_time+1)& (0+255),b
 14575  015D92  0E00               	movlw	0
 14576  015D94  6F60               	movwf	?__get_time& (0+255),b
 14577  015D96  0012               	return	
 14578  015D98                     __end_of__get_time:
 14579                           	opt stack 0
 14580                           tblptru	equ	0xFF8
 14581                           tblptrh	equ	0xFF7
 14582                           tblptrl	equ	0xFF6
 14583                           tablat	equ	0xFF5
 14584                           prodh	equ	0xFF4
 14585                           prodl	equ	0xFF3
 14586                           postinc0	equ	0xFEE
 14587                           wreg	equ	0xFE8
 14588                           postdec1	equ	0xFE5
 14589                           plusw1	equ	0xFE3
 14590                           fsr1h	equ	0xFE2
 14591                           fsr1l	equ	0xFE1
 14592                           indf2	equ	0xFDF
 14593                           postinc2	equ	0xFDE
 14594                           plusw2	equ	0xFDB
 14595                           fsr2h	equ	0xFDA
 14596                           fsr2l	equ	0xFD9
 14597                           status	equ	0xFD8
 14598                           
 14599 ;; *************** function __get_date *****************
 14600 ;; Defined at:
 14601 ;;		line 393 in file "fat16.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;		None
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;		None
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  2    0[BANK0 ] unsigned int 
 14608 ;; Registers used:
 14609 ;;		wreg, status,2
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14615 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14618 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14619 ;;Total ram usage:        2 bytes
 14620 ;; Hardware stack levels used:    1
 14621 ;; Hardware stack levels required when called:   10
 14622 ;; This function calls:
 14623 ;;		Nothing
 14624 ;; This function is called by:
 14625 ;;		_fat_create_file
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           	psect	text50
 14630  015D98                     __ptext50:
 14631                           	opt stack 0
 14632  015D98                     __get_date:
 14633                           	opt stack 17
 14634                           
 14635                           ;fat16.c: 405: return 0x0000;
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;incstack = 0
 14639  015D98  0E00               	movlw	0
 14640  015D9A  0100               	movlb	0	; () banked
 14641  015D9C  6F61               	movwf	(?__get_date+1)& (0+255),b
 14642  015D9E  0E00               	movlw	0
 14643  015DA0  6F60               	movwf	?__get_date& (0+255),b
 14644  015DA2  0012               	return	
 14645  015DA4                     __end_of__get_date:
 14646                           	opt stack 0
 14647                           tblptru	equ	0xFF8
 14648                           tblptrh	equ	0xFF7
 14649                           tblptrl	equ	0xFF6
 14650                           tablat	equ	0xFF5
 14651                           prodh	equ	0xFF4
 14652                           prodl	equ	0xFF3
 14653                           postinc0	equ	0xFEE
 14654                           wreg	equ	0xFE8
 14655                           postdec1	equ	0xFE5
 14656                           plusw1	equ	0xFE3
 14657                           fsr1h	equ	0xFE2
 14658                           fsr1l	equ	0xFE1
 14659                           indf2	equ	0xFDF
 14660                           postinc2	equ	0xFDE
 14661                           plusw2	equ	0xFDB
 14662                           fsr2h	equ	0xFDA
 14663                           fsr2l	equ	0xFD9
 14664                           status	equ	0xFD8
 14665                           
 14666 ;; *************** function __get_available_root_entry *****************
 14667 ;; Defined at:
 14668 ;;		line 443 in file "fat16.c"
 14669 ;; Parameters:    Size  Location     Type
 14670 ;;		None
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;  file_number     1   53[BANK0 ] unsigned char 
 14673 ;; Return value:  Size  Location     Type
 14674 ;;                  1    wreg      unsigned char 
 14675 ;; Registers used:
 14676 ;;		wreg, status,2, status,0, cstack
 14677 ;; Tracked objects:
 14678 ;;		On entry : 0/0
 14679 ;;		On exit  : 0/0
 14680 ;;		Unchanged: 0/0
 14681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14685 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14686 ;;Total ram usage:        1 bytes
 14687 ;; Hardware stack levels used:    1
 14688 ;; Hardware stack levels required when called:   16
 14689 ;; This function calls:
 14690 ;;		__root_is_available
 14691 ;; This function is called by:
 14692 ;;		_fat_create_file
 14693 ;; This function uses a non-reentrant model
 14694 ;;
 14695                           
 14696                           	psect	text51
 14697  015A04                     __ptext51:
 14698                           	opt stack 0
 14699  015A04                     __get_available_root_entry:
 14700                           	opt stack 11
 14701                           
 14702                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14703                           
 14704                           ; BSR set to: 0
 14705                           ;incstack = 0
 14706  015A04  0E00               	movlw	0
 14707  015A06  0100               	movlb	0	; () banked
 14708  015A08  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14709  015A0A                     l14956:
 14710                           
 14711                           ; BSR set to: 0
 14712  015A0A  0E3F               	movlw	63
 14713  015A0C  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14714  015A0E  D001               	goto	l1828
 14715  015A10  D00C               	goto	u14030
 14716  015A12                     l1828:
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14720                           
 14721                           ; BSR set to: 0
 14722  015A12  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14723  015A14  EC8B  F0A2         	call	__root_is_available
 14724  015A18  0900               	iorlw	0
 14725  015A1A  B4D8               	btfsc	status,2,c
 14726  015A1C  D003               	goto	l1830
 14727                           
 14728                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14729  015A1E  0100               	movlb	0	; () banked
 14730  015A20  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14731                           
 14732                           ; BSR set to: 0
 14733  015A22  0012               	return	
 14734  015A24                     l1830:
 14735                           
 14736                           ; BSR set to: 0
 14737  015A24  0100               	movlb	0	; () banked
 14738  015A26  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14739  015A28  D7F0               	goto	l14956
 14740  015A2A                     u14030:
 14741                           
 14742                           ; BSR set to: 0
 14743                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14744                           
 14745                           ; BSR set to: 0
 14746  015A2A  0EFF               	movlw	255
 14747  015A2C  0012               	return	
 14748  015A2E                     __end_of__get_available_root_entry:
 14749                           	opt stack 0
 14750                           tblptru	equ	0xFF8
 14751                           tblptrh	equ	0xFF7
 14752                           tblptrl	equ	0xFF6
 14753                           tablat	equ	0xFF5
 14754                           prodh	equ	0xFF4
 14755                           prodl	equ	0xFF3
 14756                           postinc0	equ	0xFEE
 14757                           wreg	equ	0xFE8
 14758                           postdec1	equ	0xFE5
 14759                           plusw1	equ	0xFE3
 14760                           fsr1h	equ	0xFE2
 14761                           fsr1l	equ	0xFE1
 14762                           indf2	equ	0xFDF
 14763                           postinc2	equ	0xFDE
 14764                           plusw2	equ	0xFDB
 14765                           fsr2h	equ	0xFDA
 14766                           fsr2l	equ	0xFD9
 14767                           status	equ	0xFD8
 14768                           
 14769 ;; *************** function __add_item *****************
 14770 ;; Defined at:
 14771 ;;		line 41 in file "config_file.c"
 14772 ;; Parameters:    Size  Location     Type
 14773 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14774 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 14775 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 14776 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 14777 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 14778 ;;  value           4   38[BANK0 ] long 
 14779 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14780 ;;		 -> ConfigFile_buffer(512), 
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;  length          1   46[BANK0 ] unsigned char 
 14783 ;; Return value:  Size  Location     Type
 14784 ;;                  1    wreg      unsigned char 
 14785 ;; Registers used:
 14786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14787 ;; Tracked objects:
 14788 ;;		On entry : 0/0
 14789 ;;		On exit  : 0/0
 14790 ;;		Unchanged: 0/0
 14791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14792 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14795 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14796 ;;Total ram usage:       11 bytes
 14797 ;; Hardware stack levels used:    1
 14798 ;; Hardware stack levels required when called:   13
 14799 ;; This function calls:
 14800 ;;		_ltoa
 14801 ;; This function is called by:
 14802 ;;		_configFile_write
 14803 ;; This function uses a non-reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text52
 14807  011914                     __ptext52:
 14808                           	opt stack 0
 14809  011914                     __add_item:
 14810                           	opt stack 15
 14811                           
 14812                           ;config_file.c: 43: uint8_t length = 0;
 14813                           
 14814                           ; BSR set to: 0
 14815                           ;incstack = 0
 14816  011914  0E00               	movlw	0
 14817  011916  0100               	movlb	0	; () banked
 14818  011918  6F8E               	movwf	__add_item@length& (0+255),b
 14819                           
 14820                           ;config_file.c: 46: while(item_string[length])
 14821  01191A  D01C               	goto	l3015
 14822  01191C                     
 14823                           ; BSR set to: 0
 14824                           ;config_file.c: 47: {;config_file.c: 48: buffer[length] = item_string[length];
 14825                           
 14826                           ; BSR set to: 0
 14827  01191C  518E               	movf	__add_item@length& (0+255),w,b
 14828  01191E  0D01               	mullw	1
 14829  011920  C084  F08C         	movff	__add_item@item_string,??__add_item
 14830  011924  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14831  011928  50F3               	movf	prodl,w,c
 14832  01192A  278C               	addwf	??__add_item& (0+255),f,b
 14833  01192C  50F4               	movf	prodh,w,c
 14834  01192E  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14835  011930  C08C  FFF6         	movff	??__add_item,tblptrl
 14836  011934  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14837  011938                     	if	0	;tblptru may be non-zero
 14838  011938                     	endif
 14839  011938                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14840  011938  0E00               	movlw	low (__mediumconst shr (0+16))
 14841  01193A  6EF8               	movwf	tblptru,c
 14842  01193C                     	endif
 14843  01193C  518E               	movf	__add_item@length& (0+255),w,b
 14844  01193E  0D01               	mullw	1
 14845  011940  50F3               	movf	prodl,w,c
 14846  011942  258A               	addwf	__add_item@buffer& (0+255),w,b
 14847  011944  6ED9               	movwf	fsr2l,c
 14848  011946  50F4               	movf	prodh,w,c
 14849  011948  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14850  01194A  6EDA               	movwf	fsr2h,c
 14851  01194C  0008               	tblrd		*
 14852  01194E  CFF5 FFDF          	movff	tablat,indf2
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;config_file.c: 49: ++length;
 14856  011952  2B8E               	incf	__add_item@length& (0+255),f,b
 14857  011954                     l3015:
 14858                           
 14859                           ; BSR set to: 0
 14860                           
 14861                           ; BSR set to: 0
 14862  011954  518E               	movf	__add_item@length& (0+255),w,b
 14863  011956  0D01               	mullw	1
 14864  011958  C084  F08C         	movff	__add_item@item_string,??__add_item
 14865  01195C  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14866  011960  50F3               	movf	prodl,w,c
 14867  011962  278C               	addwf	??__add_item& (0+255),f,b
 14868  011964  50F4               	movf	prodh,w,c
 14869  011966  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14870  011968  C08C  FFF6         	movff	??__add_item,tblptrl
 14871  01196C  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14872  011970                     	if	0	;tblptru may be non-zero
 14873  011970                     	endif
 14874  011970                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14875  011970  0E00               	movlw	low (__mediumconst shr (0+16))
 14876  011972  6EF8               	movwf	tblptru,c
 14877  011974                     	endif
 14878  011974  0008               	tblrd		*
 14879  011976  50F5               	movf	tablat,w,c
 14880  011978  0900               	iorlw	0
 14881  01197A  A4D8               	btfss	status,2,c
 14882  01197C  D7CF               	goto	l3016
 14883                           
 14884                           ; BSR set to: 0
 14885                           ;config_file.c: 50: };config_file.c: 53: buffer[length++] = '=';
 14886                           
 14887                           ; BSR set to: 0
 14888  01197E  518E               	movf	__add_item@length& (0+255),w,b
 14889  011980  0D01               	mullw	1
 14890  011982  50F3               	movf	prodl,w,c
 14891  011984  258A               	addwf	__add_item@buffer& (0+255),w,b
 14892  011986  6ED9               	movwf	fsr2l,c
 14893  011988  50F4               	movf	prodh,w,c
 14894  01198A  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14895  01198C  6EDA               	movwf	fsr2h,c
 14896  01198E  0E3D               	movlw	61
 14897  011990  6EDF               	movwf	indf2,c
 14898                           
 14899                           ; BSR set to: 0
 14900  011992  2B8E               	incf	__add_item@length& (0+255),f,b
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;config_file.c: 56: ltoa(&buffer[length], value, 10);
 14904  011994  518E               	movf	__add_item@length& (0+255),w,b
 14905  011996  0D01               	mullw	1
 14906  011998  50F3               	movf	prodl,w,c
 14907  01199A  258A               	addwf	__add_item@buffer& (0+255),w,b
 14908  01199C  6F7A               	movwf	ltoa@buf& (0+255),b
 14909  01199E  50F4               	movf	prodh,w,c
 14910  0119A0  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14911  0119A2  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14912  0119A4  C086  F07C         	movff	__add_item@value,ltoa@val
 14913  0119A8  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14914  0119AC  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14915  0119B0  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14916  0119B4  0E00               	movlw	0
 14917  0119B6  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14918  0119B8  0E0A               	movlw	10
 14919  0119BA  6F80               	movwf	ltoa@base& (0+255),b
 14920  0119BC  EC42  F0A7         	call	_ltoa	;wreg free
 14921                           
 14922                           ;config_file.c: 57: while(buffer[length])
 14923  0119C0  D002               	goto	l3018
 14924  0119C2                     
 14925                           ;config_file.c: 58: {;config_file.c: 59: ++length;
 14926  0119C2  0100               	movlb	0	; () banked
 14927  0119C4  2B8E               	incf	__add_item@length& (0+255),f,b
 14928  0119C6                     l3018:
 14929                           
 14930                           ; BSR set to: 0
 14931  0119C6  0100               	movlb	0	; () banked
 14932  0119C8  518E               	movf	__add_item@length& (0+255),w,b
 14933  0119CA  0D01               	mullw	1
 14934  0119CC  50F3               	movf	prodl,w,c
 14935  0119CE  258A               	addwf	__add_item@buffer& (0+255),w,b
 14936  0119D0  6ED9               	movwf	fsr2l,c
 14937  0119D2  50F4               	movf	prodh,w,c
 14938  0119D4  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14939  0119D6  6EDA               	movwf	fsr2h,c
 14940  0119D8  50DF               	movf	indf2,w,c
 14941  0119DA  A4D8               	btfss	status,2,c
 14942  0119DC  D7F2               	goto	l3019
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;config_file.c: 60: };config_file.c: 63: buffer[length++] = '\r';
 14946                           
 14947                           ; BSR set to: 0
 14948  0119DE  518E               	movf	__add_item@length& (0+255),w,b
 14949  0119E0  0D01               	mullw	1
 14950  0119E2  50F3               	movf	prodl,w,c
 14951  0119E4  258A               	addwf	__add_item@buffer& (0+255),w,b
 14952  0119E6  6ED9               	movwf	fsr2l,c
 14953  0119E8  50F4               	movf	prodh,w,c
 14954  0119EA  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14955  0119EC  6EDA               	movwf	fsr2h,c
 14956  0119EE  0E0D               	movlw	13
 14957  0119F0  6EDF               	movwf	indf2,c
 14958                           
 14959                           ; BSR set to: 0
 14960  0119F2  2B8E               	incf	__add_item@length& (0+255),f,b
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;config_file.c: 64: buffer[length++] = '\n';
 14964  0119F4  518E               	movf	__add_item@length& (0+255),w,b
 14965  0119F6  0D01               	mullw	1
 14966  0119F8  50F3               	movf	prodl,w,c
 14967  0119FA  258A               	addwf	__add_item@buffer& (0+255),w,b
 14968  0119FC  6ED9               	movwf	fsr2l,c
 14969  0119FE  50F4               	movf	prodh,w,c
 14970  011A00  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14971  011A02  6EDA               	movwf	fsr2h,c
 14972  011A04  0E0A               	movlw	10
 14973  011A06  6EDF               	movwf	indf2,c
 14974  011A08  2B8E               	incf	__add_item@length& (0+255),f,b
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;config_file.c: 67: return length;
 14978  011A0A  518E               	movf	__add_item@length& (0+255),w,b
 14979  011A0C  0012               	return	
 14980  011A0E                     __end_of__add_item:
 14981                           	opt stack 0
 14982                           tblptru	equ	0xFF8
 14983                           tblptrh	equ	0xFF7
 14984                           tblptrl	equ	0xFF6
 14985                           tablat	equ	0xFF5
 14986                           prodh	equ	0xFF4
 14987                           prodl	equ	0xFF3
 14988                           postinc0	equ	0xFEE
 14989                           wreg	equ	0xFE8
 14990                           postdec1	equ	0xFE5
 14991                           plusw1	equ	0xFE3
 14992                           fsr1h	equ	0xFE2
 14993                           fsr1l	equ	0xFE1
 14994                           indf2	equ	0xFDF
 14995                           postinc2	equ	0xFDE
 14996                           plusw2	equ	0xFDB
 14997                           fsr2h	equ	0xFDA
 14998                           fsr2l	equ	0xFD9
 14999                           status	equ	0xFD8
 15000                           
 15001 ;; *************** function _ltoa *****************
 15002 ;; Defined at:
 15003 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15004 ;; Parameters:    Size  Location     Type
 15005 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15006 ;;		 -> ConfigFile_buffer(512), 
 15007 ;;  val             4   28[BANK0 ] long 
 15008 ;;  base            2   32[BANK0 ] int 
 15009 ;; Auto vars:     Size  Location     Type
 15010 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15011 ;;		 -> ConfigFile_buffer(512), 
 15012 ;; Return value:  Size  Location     Type
 15013 ;;                  2   26[BANK0 ] PTR unsigned char 
 15014 ;; Registers used:
 15015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15016 ;; Tracked objects:
 15017 ;;		On entry : 0/0
 15018 ;;		On exit  : 0/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15021 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15024 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15025 ;;Total ram usage:       10 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; Hardware stack levels required when called:   12
 15028 ;; This function calls:
 15029 ;;		_ultoa
 15030 ;; This function is called by:
 15031 ;;		__add_item
 15032 ;; This function uses a non-reentrant model
 15033 ;;
 15034                           
 15035                           	psect	text53
 15036  014E84                     __ptext53:
 15037                           	opt stack 0
 15038  014E84                     _ltoa:
 15039                           	opt stack 15
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;incstack = 0
 15043  014E84  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15044  014E88  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15045  014E8C  0100               	movlb	0	; () banked
 15046  014E8E  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15047  014E90  D010               	goto	l3792
 15048                           
 15049                           ; BSR set to: 0
 15050  014E92  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15051  014E96  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15052  014E9A  0E2D               	movlw	45
 15053  014E9C  6EDF               	movwf	indf2,c
 15054                           
 15055                           ; BSR set to: 0
 15056  014E9E  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15057  014EA0  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15058                           
 15059                           ; BSR set to: 0
 15060  014EA2  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15061  014EA4  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15062  014EA6  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15063  014EA8  6D7C               	negf	ltoa@val& (0+255),b
 15064  014EAA  0E00               	movlw	0
 15065  014EAC  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15066  014EAE  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15067  014EB0  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15068  014EB2                     l3792:
 15069                           
 15070                           ; BSR set to: 0
 15071                           
 15072                           ; BSR set to: 0
 15073  014EB2  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15074  014EB6  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15075  014EBA  C07C  F06F         	movff	ltoa@val,ultoa@val
 15076  014EBE  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15077  014EC2  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15078  014EC6  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15079  014ECA  C080  F073         	movff	ltoa@base,ultoa@base
 15080  014ECE  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15081  014ED2  EC8D  F08B         	call	_ultoa	;wreg free
 15082  014ED6  0012               	return	
 15083  014ED8                     __end_of_ltoa:
 15084                           	opt stack 0
 15085                           tblptru	equ	0xFF8
 15086                           tblptrh	equ	0xFF7
 15087                           tblptrl	equ	0xFF6
 15088                           tablat	equ	0xFF5
 15089                           prodh	equ	0xFF4
 15090                           prodl	equ	0xFF3
 15091                           postinc0	equ	0xFEE
 15092                           wreg	equ	0xFE8
 15093                           postdec1	equ	0xFE5
 15094                           plusw1	equ	0xFE3
 15095                           fsr1h	equ	0xFE2
 15096                           fsr1l	equ	0xFE1
 15097                           indf2	equ	0xFDF
 15098                           postinc2	equ	0xFDE
 15099                           plusw2	equ	0xFDB
 15100                           fsr2h	equ	0xFDA
 15101                           fsr2l	equ	0xFD9
 15102                           status	equ	0xFD8
 15103                           
 15104 ;; *************** function _ultoa *****************
 15105 ;; Defined at:
 15106 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15107 ;; Parameters:    Size  Location     Type
 15108 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15109 ;;		 -> ConfigFile_buffer(512), 
 15110 ;;  val             4   15[BANK0 ] unsigned long 
 15111 ;;  base            2   19[BANK0 ] int 
 15112 ;; Auto vars:     Size  Location     Type
 15113 ;;  v               4   21[BANK0 ] unsigned long 
 15114 ;;  c               1   25[BANK0 ] unsigned char 
 15115 ;; Return value:  Size  Location     Type
 15116 ;;                  2   13[BANK0 ] PTR unsigned char 
 15117 ;; Registers used:
 15118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15119 ;; Tracked objects:
 15120 ;;		On entry : 0/0
 15121 ;;		On exit  : 0/0
 15122 ;;		Unchanged: 0/0
 15123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15124 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15125 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15127 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15128 ;;Total ram usage:       13 bytes
 15129 ;; Hardware stack levels used:    1
 15130 ;; Hardware stack levels required when called:   11
 15131 ;; This function calls:
 15132 ;;		___lldiv
 15133 ;;		___llmod
 15134 ;; This function is called by:
 15135 ;;		_ltoa
 15136 ;; This function uses a non-reentrant model
 15137 ;;
 15138                           
 15139                           	psect	text54
 15140  01171A                     __ptext54:
 15141                           	opt stack 0
 15142  01171A                     _ultoa:
 15143                           	opt stack 15
 15144                           
 15145                           ;incstack = 0
 15146  01171A  C06F  F075         	movff	ultoa@val,ultoa@v
 15147  01171E  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15148  011722  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15149  011726  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15150  01172A  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15151  01172E  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15152  011732  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15153  011736  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15154  01173A  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15155  01173E  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15156  011742  0100               	movlb	0	; () banked
 15157  011744  0E00               	movlw	0
 15158  011746  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15159  011748  0EFF               	movlw	-1
 15160  01174A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15161  01174C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15162  01174E  EC05  F09F         	call	___lldiv	;wreg free
 15163  011752  C060  F075         	movff	?___lldiv,ultoa@v
 15164  011756  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15165  01175A  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15166  01175E  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15167  011762  0100               	movlb	0	; () banked
 15168  011764  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15169  011766  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15170                           
 15171                           ; BSR set to: 0
 15172  011768  5175               	movf	ultoa@v& (0+255),w,b
 15173  01176A  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15174  01176C  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15175  01176E  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15176  011770  A4D8               	btfss	status,2,c
 15177  011772  D7DB               	goto	l3796
 15178                           
 15179                           ; BSR set to: 0
 15180                           
 15181                           ; BSR set to: 0
 15182  011774  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15183  011778  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15184  01177C  0E00               	movlw	0
 15185  01177E  6EDF               	movwf	indf2,c
 15186                           
 15187                           ; BSR set to: 0
 15188  011780  076D               	decf	ultoa@buf& (0+255),f,b
 15189  011782  A0D8               	btfss	status,0,c
 15190  011784  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15191  011786                     
 15192                           ; BSR set to: 0
 15193                           
 15194                           ; BSR set to: 0
 15195  011786  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15196  01178A  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15197  01178E  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15198  011792  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15199  011796  C073  F064         	movff	ultoa@base,___llmod@divisor
 15200  01179A  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15201  01179E  0E00               	movlw	0
 15202  0117A0  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15203  0117A2  0EFF               	movlw	-1
 15204  0117A4  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15205  0117A6  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15206  0117A8  ECF6  F0A2         	call	___llmod	;wreg free
 15207  0117AC  0100               	movlb	0	; () banked
 15208  0117AE  5160               	movf	?___llmod& (0+255),w,b
 15209  0117B0  6F79               	movwf	ultoa@c& (0+255),b
 15210                           
 15211                           ; BSR set to: 0
 15212  0117B2  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15213  0117B6  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15214  0117BA  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15215  0117BE  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15216  0117C2  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15217  0117C6  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15218  0117CA  0E00               	movlw	0
 15219  0117CC  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15220  0117CE  0EFF               	movlw	-1
 15221  0117D0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15222  0117D2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15223  0117D4  EC05  F09F         	call	___lldiv	;wreg free
 15224  0117D8  C060  F06F         	movff	?___lldiv,ultoa@val
 15225  0117DC  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15226  0117E0  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15227  0117E4  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15228  0117E8  0E09               	movlw	9
 15229  0117EA  0100               	movlb	0	; () banked
 15230  0117EC  6579               	cpfsgt	ultoa@c& (0+255),b
 15231  0117EE  D002               	goto	l3799
 15232                           
 15233                           ; BSR set to: 0
 15234  0117F0  0E07               	movlw	7
 15235  0117F2  2779               	addwf	ultoa@c& (0+255),f,b
 15236  0117F4                     l3799:
 15237                           
 15238                           ; BSR set to: 0
 15239  0117F4  0E30               	movlw	48
 15240  0117F6  2779               	addwf	ultoa@c& (0+255),f,b
 15241                           
 15242                           ; BSR set to: 0
 15243  0117F8  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15244  0117FC  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15245  011800  C079  FFDF         	movff	ultoa@c,indf2
 15246                           
 15247                           ; BSR set to: 0
 15248  011804  076D               	decf	ultoa@buf& (0+255),f,b
 15249  011806  A0D8               	btfss	status,0,c
 15250  011808  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15251                           
 15252                           ; BSR set to: 0
 15253  01180A  516F               	movf	ultoa@val& (0+255),w,b
 15254  01180C  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15255  01180E  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15256  011810  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15257  011812  B4D8               	btfsc	status,2,c
 15258  011814  0012               	return	
 15259  011816  D7B7               	goto	l3798
 15260  011818                     __end_of_ultoa:
 15261                           	opt stack 0
 15262                           tblptru	equ	0xFF8
 15263                           tblptrh	equ	0xFF7
 15264                           tblptrl	equ	0xFF6
 15265                           tablat	equ	0xFF5
 15266                           prodh	equ	0xFF4
 15267                           prodl	equ	0xFF3
 15268                           postinc0	equ	0xFEE
 15269                           wreg	equ	0xFE8
 15270                           postdec1	equ	0xFE5
 15271                           plusw1	equ	0xFE3
 15272                           fsr1h	equ	0xFE2
 15273                           fsr1l	equ	0xFE1
 15274                           indf2	equ	0xFDF
 15275                           postinc2	equ	0xFDE
 15276                           plusw2	equ	0xFDB
 15277                           fsr2h	equ	0xFDA
 15278                           fsr2l	equ	0xFD9
 15279                           status	equ	0xFD8
 15280                           
 15281 ;; *************** function ___llmod *****************
 15282 ;; Defined at:
 15283 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15284 ;; Parameters:    Size  Location     Type
 15285 ;;  dividend        4    0[BANK0 ] unsigned long 
 15286 ;;  divisor         4    4[BANK0 ] unsigned long 
 15287 ;; Auto vars:     Size  Location     Type
 15288 ;;  counter         1    8[BANK0 ] unsigned char 
 15289 ;; Return value:  Size  Location     Type
 15290 ;;                  4    0[BANK0 ] unsigned long 
 15291 ;; Registers used:
 15292 ;;		wreg, status,2, status,0
 15293 ;; Tracked objects:
 15294 ;;		On entry : 0/0
 15295 ;;		On exit  : 0/0
 15296 ;;		Unchanged: 0/0
 15297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15298 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15301 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15302 ;;Total ram usage:        9 bytes
 15303 ;; Hardware stack levels used:    1
 15304 ;; Hardware stack levels required when called:   10
 15305 ;; This function calls:
 15306 ;;		Nothing
 15307 ;; This function is called by:
 15308 ;;		_ultoa
 15309 ;; This function uses a non-reentrant model
 15310 ;;
 15311                           
 15312                           	psect	text55
 15313  0145EC                     __ptext55:
 15314                           	opt stack 0
 15315  0145EC                     ___llmod:
 15316                           	opt stack 15
 15317                           
 15318                           ; BSR set to: 0
 15319                           ;incstack = 0
 15320  0145EC  0100               	movlb	0	; () banked
 15321  0145EE  5164               	movf	___llmod@divisor& (0+255),w,b
 15322  0145F0  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15323  0145F2  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15324  0145F4  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15325  0145F6  B4D8               	btfsc	status,2,c
 15326  0145F8  D024               	goto	l3494
 15327                           
 15328                           ; BSR set to: 0
 15329  0145FA  0E01               	movlw	1
 15330  0145FC  6F68               	movwf	___llmod@counter& (0+255),b
 15331  0145FE  D006               	goto	l3489
 15332  014600                     
 15333                           ; BSR set to: 0
 15334                           
 15335                           ; BSR set to: 0
 15336  014600  90D8               	bcf	status,0,c
 15337  014602  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15338  014604  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15339  014606  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15340  014608  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15341  01460A  2B68               	incf	___llmod@counter& (0+255),f,b
 15342  01460C                     l3489:
 15343                           
 15344                           ; BSR set to: 0
 15345                           
 15346                           ; BSR set to: 0
 15347  01460C  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15348  01460E  D7F8               	goto	l3490
 15349  014610                     u11840:
 15350                           
 15351                           ; BSR set to: 0
 15352                           
 15353                           ; BSR set to: 0
 15354                           
 15355                           ; BSR set to: 0
 15356  014610  5164               	movf	___llmod@divisor& (0+255),w,b
 15357  014612  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15358  014614  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15359  014616  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15360  014618  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15361  01461A  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15362  01461C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15363  01461E  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15364  014620  A0D8               	btfss	status,0,c
 15365  014622  D008               	goto	l3493
 15366                           
 15367                           ; BSR set to: 0
 15368  014624  5164               	movf	___llmod@divisor& (0+255),w,b
 15369  014626  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15370  014628  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15371  01462A  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15372  01462C  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15373  01462E  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15374  014630  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15375  014632  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15376  014634                     l3493:
 15377                           
 15378                           ; BSR set to: 0
 15379                           
 15380                           ; BSR set to: 0
 15381  014634  90D8               	bcf	status,0,c
 15382  014636  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15383  014638  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15384  01463A  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15385  01463C  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15386                           
 15387                           ; BSR set to: 0
 15388  01463E  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15389  014640  D7E7               	goto	u11840
 15390  014642                     l3494:
 15391                           
 15392                           ; BSR set to: 0
 15393                           
 15394                           ; BSR set to: 0
 15395  014642  C060  F060         	movff	___llmod@dividend,?___llmod
 15396  014646  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15397  01464A  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15398  01464E  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15399                           
 15400                           ; BSR set to: 0
 15401  014652  0012               	return		;funcret
 15402  014654                     __end_of___llmod:
 15403                           	opt stack 0
 15404                           tblptru	equ	0xFF8
 15405                           tblptrh	equ	0xFF7
 15406                           tblptrl	equ	0xFF6
 15407                           tablat	equ	0xFF5
 15408                           prodh	equ	0xFF4
 15409                           prodl	equ	0xFF3
 15410                           postinc0	equ	0xFEE
 15411                           wreg	equ	0xFE8
 15412                           postdec1	equ	0xFE5
 15413                           plusw1	equ	0xFE3
 15414                           fsr1h	equ	0xFE2
 15415                           fsr1l	equ	0xFE1
 15416                           indf2	equ	0xFDF
 15417                           postinc2	equ	0xFDE
 15418                           plusw2	equ	0xFDB
 15419                           fsr2h	equ	0xFDA
 15420                           fsr2l	equ	0xFD9
 15421                           status	equ	0xFD8
 15422                           
 15423 ;; *************** function ___lldiv *****************
 15424 ;; Defined at:
 15425 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;  dividend        4    0[BANK0 ] unsigned long 
 15428 ;;  divisor         4    4[BANK0 ] unsigned long 
 15429 ;; Auto vars:     Size  Location     Type
 15430 ;;  quotient        4    8[BANK0 ] unsigned long 
 15431 ;;  counter         1   12[BANK0 ] unsigned char 
 15432 ;; Return value:  Size  Location     Type
 15433 ;;                  4    0[BANK0 ] unsigned long 
 15434 ;; Registers used:
 15435 ;;		wreg, status,2, status,0
 15436 ;; Tracked objects:
 15437 ;;		On entry : 0/0
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15441 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15442 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15444 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15445 ;;Total ram usage:       13 bytes
 15446 ;; Hardware stack levels used:    1
 15447 ;; Hardware stack levels required when called:   10
 15448 ;; This function calls:
 15449 ;;		Nothing
 15450 ;; This function is called by:
 15451 ;;		_ultoa
 15452 ;; This function uses a non-reentrant model
 15453 ;;
 15454                           
 15455                           	psect	text56
 15456  013E0A                     __ptext56:
 15457                           	opt stack 0
 15458  013E0A                     ___lldiv:
 15459                           	opt stack 15
 15460                           
 15461                           ; BSR set to: 0
 15462                           ;incstack = 0
 15463  013E0A  0E00               	movlw	0
 15464  013E0C  0100               	movlb	0	; () banked
 15465  013E0E  6F68               	movwf	___lldiv@quotient& (0+255),b
 15466  013E10  0E00               	movlw	0
 15467  013E12  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15468  013E14  0E00               	movlw	0
 15469  013E16  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15470  013E18  0E00               	movlw	0
 15471  013E1A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15472                           
 15473                           ; BSR set to: 0
 15474  013E1C  5164               	movf	___lldiv@divisor& (0+255),w,b
 15475  013E1E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15476  013E20  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15477  013E22  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15478  013E24  B4D8               	btfsc	status,2,c
 15479  013E26  D02A               	goto	l3113
 15480                           
 15481                           ; BSR set to: 0
 15482  013E28  0E01               	movlw	1
 15483  013E2A  6F6C               	movwf	___lldiv@counter& (0+255),b
 15484  013E2C  D006               	goto	l3108
 15485  013E2E                     
 15486                           ; BSR set to: 0
 15487                           
 15488                           ; BSR set to: 0
 15489  013E2E  90D8               	bcf	status,0,c
 15490  013E30  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15491  013E32  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15492  013E34  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15493  013E36  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15494  013E38  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15495  013E3A                     l3108:
 15496                           
 15497                           ; BSR set to: 0
 15498                           
 15499                           ; BSR set to: 0
 15500  013E3A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15501  013E3C  D7F8               	goto	l3109
 15502  013E3E                     u11810:
 15503                           
 15504                           ; BSR set to: 0
 15505                           
 15506                           ; BSR set to: 0
 15507                           
 15508                           ; BSR set to: 0
 15509  013E3E  90D8               	bcf	status,0,c
 15510  013E40  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15511  013E42  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15512  013E44  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15513  013E46  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15514                           
 15515                           ; BSR set to: 0
 15516  013E48  5164               	movf	___lldiv@divisor& (0+255),w,b
 15517  013E4A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15518  013E4C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15519  013E4E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15520  013E50  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15521  013E52  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15522  013E54  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15523  013E56  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15524  013E58  A0D8               	btfss	status,0,c
 15525  013E5A  D009               	goto	l3112
 15526                           
 15527                           ; BSR set to: 0
 15528  013E5C  5164               	movf	___lldiv@divisor& (0+255),w,b
 15529  013E5E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15530  013E60  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15531  013E62  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15532  013E64  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15533  013E66  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15534  013E68  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15535  013E6A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15536                           
 15537                           ; BSR set to: 0
 15538  013E6C  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15539  013E6E                     l3112:
 15540                           
 15541                           ; BSR set to: 0
 15542                           
 15543                           ; BSR set to: 0
 15544  013E6E  90D8               	bcf	status,0,c
 15545  013E70  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15546  013E72  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15547  013E74  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15548  013E76  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15549                           
 15550                           ; BSR set to: 0
 15551  013E78  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15552  013E7A  D7E1               	goto	u11810
 15553  013E7C                     l3113:
 15554                           
 15555                           ; BSR set to: 0
 15556                           
 15557                           ; BSR set to: 0
 15558  013E7C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15559  013E80  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15560  013E84  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15561  013E88  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15562                           
 15563                           ; BSR set to: 0
 15564  013E8C  0012               	return		;funcret
 15565  013E8E                     __end_of___lldiv:
 15566                           	opt stack 0
 15567                           tblptru	equ	0xFF8
 15568                           tblptrh	equ	0xFF7
 15569                           tblptrl	equ	0xFF6
 15570                           tablat	equ	0xFF5
 15571                           prodh	equ	0xFF4
 15572                           prodl	equ	0xFF3
 15573                           postinc0	equ	0xFEE
 15574                           wreg	equ	0xFE8
 15575                           postdec1	equ	0xFE5
 15576                           plusw1	equ	0xFE3
 15577                           fsr1h	equ	0xFE2
 15578                           fsr1l	equ	0xFE1
 15579                           indf2	equ	0xFDF
 15580                           postinc2	equ	0xFDE
 15581                           plusw2	equ	0xFDB
 15582                           fsr2h	equ	0xFDA
 15583                           fsr2l	equ	0xFD9
 15584                           status	equ	0xFD8
 15585                           
 15586 ;; *************** function _configFile_readDefault *****************
 15587 ;; Defined at:
 15588 ;;		line 244 in file "config_file.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;		None
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;		None
 15593 ;; Return value:  Size  Location     Type
 15594 ;;                  1    wreg      void 
 15595 ;; Registers used:
 15596 ;;		wreg, status,2
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/0
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15606 ;;Total ram usage:        0 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; Hardware stack levels required when called:   10
 15609 ;; This function calls:
 15610 ;;		Nothing
 15611 ;; This function is called by:
 15612 ;;		_system_init
 15613 ;; This function uses a non-reentrant model
 15614 ;;
 15615                           
 15616                           	psect	text57
 15617  01427A                     __ptext57:
 15618                           	opt stack 0
 15619  01427A                     _configFile_readDefault:
 15620                           	opt stack 19
 15621                           
 15622                           ;config_file.c: 246: config.full_circle_in_steps = 576000;
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;incstack = 0
 15626  01427A  0E00               	movlw	0
 15627  01427C  0101               	movlb	1	; () banked
 15628  01427E  6F97               	movwf	_config& (0+255),b
 15629  014280  0ECA               	movlw	202
 15630  014282  6F98               	movwf	(_config+1)& (0+255),b
 15631  014284  0E08               	movlw	8
 15632  014286  6F99               	movwf	(_config+2)& (0+255),b
 15633  014288  0E00               	movlw	0
 15634  01428A  6F9A               	movwf	(_config+3)& (0+255),b
 15635                           
 15636                           ;config_file.c: 247: config.inverse_direction = 1;
 15637  01428C  0E01               	movlw	1
 15638  01428E  6F9B               	movwf	(_config+4)& (0+255),b
 15639                           
 15640                           ;config_file.c: 248: config.overshoot_in_steps = 6400;
 15641  014290  0E19               	movlw	25
 15642  014292  6F9D               	movwf	(_config+6)& (0+255),b
 15643  014294  0E00               	movlw	0
 15644  014296  6F9C               	movwf	(_config+5)& (0+255),b
 15645                           
 15646                           ;config_file.c: 249: config.overshoot_cost_in_steps = 3000;
 15647  014298  0E0B               	movlw	11
 15648  01429A  6F9F               	movwf	(_config+8)& (0+255),b
 15649  01429C  0EB8               	movlw	184
 15650  01429E  6F9E               	movwf	(_config+7)& (0+255),b
 15651                           
 15652                           ;config_file.c: 250: config.minimum_speed = 1;
 15653  0142A0  0E00               	movlw	0
 15654  0142A2  6FA1               	movwf	(_config+10)& (0+255),b
 15655  0142A4  0E01               	movlw	1
 15656  0142A6  6FA0               	movwf	(_config+9)& (0+255),b
 15657                           
 15658                           ;config_file.c: 251: config.maximum_speed = 380;
 15659  0142A8  0E01               	movlw	1
 15660  0142AA  6FA3               	movwf	(_config+12)& (0+255),b
 15661  0142AC  0E7C               	movlw	124
 15662  0142AE  6FA2               	movwf	(_config+11)& (0+255),b
 15663                           
 15664                           ;config_file.c: 252: config.maximum_speed_arc = 305;
 15665  0142B0  0E01               	movlw	1
 15666  0142B2  6FA7               	movwf	(_config+16)& (0+255),b
 15667  0142B4  0E31               	movlw	49
 15668  0142B6  6FA6               	movwf	(_config+15)& (0+255),b
 15669                           
 15670                           ;config_file.c: 253: config.maximum_speed_manual = 305;
 15671  0142B8  0E01               	movlw	1
 15672  0142BA  6FAB               	movwf	(_config+20)& (0+255),b
 15673  0142BC  0E31               	movlw	49
 15674  0142BE  6FAA               	movwf	(_config+19)& (0+255),b
 15675                           
 15676                           ;config_file.c: 254: config.use_ccw_limit = 0;
 15677  0142C0  0E00               	movlw	0
 15678  0142C2  6FB6               	movwf	(_config+31)& (0+255),b
 15679                           
 15680                           ;config_file.c: 255: config.ccw_limit = 35500;
 15681  0142C4  0EAC               	movlw	172
 15682  0142C6  6FB7               	movwf	(_config+32)& (0+255),b
 15683  0142C8  0E8A               	movlw	138
 15684  0142CA  6FB8               	movwf	(_config+33)& (0+255),b
 15685  0142CC  0E00               	movlw	0
 15686  0142CE  6FB9               	movwf	(_config+34)& (0+255),b
 15687  0142D0  0E00               	movlw	0
 15688  0142D2  6FBA               	movwf	(_config+35)& (0+255),b
 15689                           
 15690                           ;config_file.c: 256: config.use_cw_limit = 0;
 15691  0142D4  0E00               	movlw	0
 15692  0142D6  6FAD               	movwf	(_config+22)& (0+255),b
 15693                           
 15694                           ;config_file.c: 257: config.cw_limit = 500;
 15695  0142D8  0EF4               	movlw	244
 15696  0142DA  6FAE               	movwf	(_config+23)& (0+255),b
 15697  0142DC  0E01               	movlw	1
 15698  0142DE  6FAF               	movwf	(_config+24)& (0+255),b
 15699  0142E0  0E00               	movlw	0
 15700  0142E2  6FB0               	movwf	(_config+25)& (0+255),b
 15701  0142E4  0E00               	movlw	0
 15702  0142E6  6FB1               	movwf	(_config+26)& (0+255),b
 15703                           
 15704                           ;config_file.c: 258: config.beep_duration = 10;
 15705  0142E8  0E0A               	movlw	10
 15706  0142EA  6FAC               	movwf	(_config+21)& (0+255),b
 15707                           
 15708                           ; BSR set to: 1
 15709  0142EC  0012               	return		;funcret
 15710  0142EE                     __end_of_configFile_readDefault:
 15711                           	opt stack 0
 15712                           tblptru	equ	0xFF8
 15713                           tblptrh	equ	0xFF7
 15714                           tblptrl	equ	0xFF6
 15715                           tablat	equ	0xFF5
 15716                           prodh	equ	0xFF4
 15717                           prodl	equ	0xFF3
 15718                           postinc0	equ	0xFEE
 15719                           wreg	equ	0xFE8
 15720                           postdec1	equ	0xFE5
 15721                           plusw1	equ	0xFE3
 15722                           fsr1h	equ	0xFE2
 15723                           fsr1l	equ	0xFE1
 15724                           indf2	equ	0xFDF
 15725                           postinc2	equ	0xFDE
 15726                           plusw2	equ	0xFDB
 15727                           fsr2h	equ	0xFDA
 15728                           fsr2l	equ	0xFD9
 15729                           status	equ	0xFD8
 15730                           
 15731 ;; *************** function _configFile_read *****************
 15732 ;; Defined at:
 15733 ;;		line 262 in file "config_file.c"
 15734 ;; Parameters:    Size  Location     Type
 15735 ;;		None
 15736 ;; Auto vars:     Size  Location     Type
 15737 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15738 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15739 ;;  position        4   56[BANK1 ] unsigned long 
 15740 ;;  file_size       4   51[BANK1 ] unsigned long 
 15741 ;;  file_number     1   55[BANK1 ] unsigned char 
 15742 ;; Return value:  Size  Location     Type
 15743 ;;                  1    wreg      void 
 15744 ;; Registers used:
 15745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15752 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15753 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15754 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15755 ;;Total ram usage:       60 bytes
 15756 ;; Hardware stack levels used:    1
 15757 ;; Hardware stack levels required when called:   19
 15758 ;; This function calls:
 15759 ;;		__get_item
 15760 ;;		__parse_item
 15761 ;;		_fat_find_file
 15762 ;;		_fat_get_file_size
 15763 ;;		_fat_read_from_file
 15764 ;; This function is called by:
 15765 ;;		_system_init
 15766 ;; This function uses a non-reentrant model
 15767 ;;
 15768                           
 15769                           	psect	text58
 15770  00F2B4                     __ptext58:
 15771                           	opt stack 0
 15772  00F2B4                     _configFile_read:
 15773                           	opt stack 10
 15774                           
 15775                           ;config_file.c: 264: uint8_t file_number;;config_file.c: 265: uint32_t file_size;;config
      +                          _file.c: 266: uint32_t position;;config_file.c: 267: char item_string[31];;config_file.c
      +                          : 268: char value_string[12];;config_file.c: 271: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15776                           
 15777                           ; BSR set to: 1
 15778                           ;incstack = 0
 15779  00F2B4  0ED6               	movlw	low _configFile_name
 15780  00F2B6  0100               	movlb	0	; () banked
 15781  00F2B8  6F8B               	movwf	fat_find_file@name& (0+255),b
 15782  00F2BA  0E02               	movlw	high _configFile_name
 15783  00F2BC  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15784  00F2BE  0EE1               	movlw	low _configFile_extention
 15785  00F2C0  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15786  00F2C2  0E02               	movlw	high _configFile_extention
 15787  00F2C4  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15788  00F2C6  ECEA  F08E         	call	_fat_find_file	;wreg free
 15789  00F2CA  0101               	movlb	1	; () banked
 15790  00F2CC  6FFB               	movwf	configFile_read@file_number& (0+255),b
 15791                           
 15792                           ; BSR set to: 1
 15793                           ;config_file.c: 272: if(file_number==0xFF)
 15794  00F2CE  29FB               	incf	configFile_read@file_number& (0+255),w,b
 15795  00F2D0  B4D8               	btfsc	status,2,c
 15796  00F2D2  0012               	return	
 15797                           
 15798                           ; BSR set to: 1
 15799                           ;config_file.c: 276: };config_file.c: 279: file_size = fat_get_file_size(file_number);
 15800                           
 15801                           ; BSR set to: 1
 15802                           
 15803                           ; BSR set to: 1
 15804                           ;config_file.c: 273: {;config_file.c: 275: return;
 15805  00F2D4  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15806  00F2D6  ECC3  F0A0         	call	_fat_get_file_size
 15807  00F2DA  C095  F1F7         	movff	?_fat_get_file_size,configFile_read@file_size
 15808  00F2DE  C096  F1F8         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15809  00F2E2  C097  F1F9         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15810  00F2E6  C098  F1FA         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15811                           
 15812                           ;config_file.c: 282: position = 0;
 15813  00F2EA  0E00               	movlw	0
 15814  00F2EC  0101               	movlb	1	; () banked
 15815  00F2EE  6FFC               	movwf	configFile_read@position& (0+255),b
 15816  00F2F0  0E00               	movlw	0
 15817  00F2F2  6FFD               	movwf	(configFile_read@position+1)& (0+255),b
 15818  00F2F4  0E00               	movlw	0
 15819  00F2F6  6FFE               	movwf	(configFile_read@position+2)& (0+255),b
 15820  00F2F8  0E00               	movlw	0
 15821  00F2FA  6FFF               	movwf	(configFile_read@position+3)& (0+255),b
 15822                           
 15823                           ;config_file.c: 283: while((file_size-position)>3)
 15824  00F2FC  D086               	goto	l3068
 15825  00F2FE                     
 15826                           ; BSR set to: 1
 15827                           ;config_file.c: 284: {;config_file.c: 285: if((position+45) > file_size)
 15828                           
 15829                           ; BSR set to: 1
 15830  00F2FE  0E2D               	movlw	45
 15831  00F300  25FC               	addwf	configFile_read@position& (0+255),w,b
 15832  00F302  6FC4               	movwf	??_configFile_read& (0+255),b
 15833  00F304  0E00               	movlw	0
 15834  00F306  21FD               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15835  00F308  6FC5               	movwf	(??_configFile_read+1)& (0+255),b
 15836  00F30A  0E00               	movlw	0
 15837  00F30C  21FE               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15838  00F30E  6FC6               	movwf	(??_configFile_read+2)& (0+255),b
 15839  00F310  0E00               	movlw	0
 15840  00F312  21FF               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15841  00F314  6FC7               	movwf	(??_configFile_read+3)& (0+255),b
 15842  00F316  51C4               	movf	??_configFile_read& (0+255),w,b
 15843  00F318  5DF7               	subwf	configFile_read@file_size& (0+255),w,b
 15844  00F31A  51C5               	movf	(??_configFile_read+1)& (0+255),w,b
 15845  00F31C  59F8               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15846  00F31E  51C6               	movf	(??_configFile_read+2)& (0+255),w,b
 15847  00F320  59F9               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15848  00F322  51C7               	movf	(??_configFile_read+3)& (0+255),w,b
 15849  00F324  59FA               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15850  00F326  B0D8               	btfsc	status,0,c
 15851  00F328  D035               	goto	l3070
 15852                           
 15853                           ; BSR set to: 1
 15854                           ;config_file.c: 286: {;config_file.c: 288: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15855  00F32A  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15856  00F32E  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15857  00F332  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15858  00F336  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15859  00F33A  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15860  00F33E  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15861  00F342  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15862  00F346  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15863  00F34A  1FC4               	comf	??_configFile_read& (0+255),f,b
 15864  00F34C  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15865  00F34E  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15866  00F350  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15867  00F352  2BC4               	incf	??_configFile_read& (0+255),f,b
 15868  00F354  0E00               	movlw	0
 15869  00F356  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15870  00F358  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15871  00F35A  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15872  00F35C  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15873  00F35E  25C4               	addwf	??_configFile_read& (0+255),w,b
 15874  00F360  0100               	movlb	0	; () banked
 15875  00F362  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15876  00F364  0101               	movlb	1	; () banked
 15877  00F366  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15878  00F368  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15879  00F36A  0100               	movlb	0	; () banked
 15880  00F36C  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15881  00F36E  0101               	movlb	1	; () banked
 15882  00F370  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15883  00F372  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15884  00F374  0100               	movlb	0	; () banked
 15885  00F376  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15886  00F378  0101               	movlb	1	; () banked
 15887  00F37A  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15888  00F37C  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15889  00F37E  0100               	movlb	0	; () banked
 15890  00F380  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15891  00F382  0E00               	movlw	low _ConfigFile_buffer
 15892  00F384  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15893  00F386  0E08               	movlw	high _ConfigFile_buffer
 15894  00F388  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15895  00F38A  0101               	movlb	1	; () banked
 15896  00F38C  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15897  00F38E  EC5E  F08F         	call	_fat_read_from_file
 15898                           
 15899                           ;config_file.c: 289: }
 15900  00F392  D019               	goto	l3071
 15901  00F394                     l3070:
 15902                           
 15903                           ;config_file.c: 290: else;config_file.c: 291: {;config_file.c: 293: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15904  00F394  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15905  00F398  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15906  00F39C  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15907  00F3A0  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15908  00F3A4  0E2D               	movlw	45
 15909  00F3A6  0100               	movlb	0	; () banked
 15910  00F3A8  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15911  00F3AA  0E00               	movlw	0
 15912  00F3AC  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15913  00F3AE  0E00               	movlw	0
 15914  00F3B0  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15915  00F3B2  0E00               	movlw	0
 15916  00F3B4  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15917  00F3B6  0E00               	movlw	low _ConfigFile_buffer
 15918  00F3B8  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15919  00F3BA  0E08               	movlw	high _ConfigFile_buffer
 15920  00F3BC  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15921  00F3BE  0101               	movlb	1	; () banked
 15922  00F3C0  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15923  00F3C2  EC5E  F08F         	call	_fat_read_from_file
 15924  00F3C6                     l3071:
 15925                           
 15926                           ;config_file.c: 294: };config_file.c: 297: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15927  00F3C6  0ECC               	movlw	low configFile_read@item_string
 15928  00F3C8  0100               	movlb	0	; () banked
 15929  00F3CA  6F60               	movwf	__get_item@item_string& (0+255),b
 15930  00F3CC  0E01               	movlw	high configFile_read@item_string
 15931  00F3CE  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15932  00F3D0  0EEB               	movlw	low configFile_read@value_string
 15933  00F3D2  6F62               	movwf	__get_item@value_string& (0+255),b
 15934  00F3D4  0E01               	movlw	high configFile_read@value_string
 15935  00F3D6  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 15936  00F3D8  0E00               	movlw	low _ConfigFile_buffer
 15937  00F3DA  6F64               	movwf	__get_item@buffer& (0+255),b
 15938  00F3DC  0E08               	movlw	high _ConfigFile_buffer
 15939  00F3DE  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 15940  00F3E0  ECF7  F07A         	call	__get_item	;wreg free
 15941  00F3E4  0101               	movlb	1	; () banked
 15942  00F3E6  6FC4               	movwf	??_configFile_read& (0+255),b
 15943  00F3E8  51C4               	movf	??_configFile_read& (0+255),w,b
 15944  00F3EA  27FC               	addwf	configFile_read@position& (0+255),f,b
 15945  00F3EC  0E00               	movlw	0
 15946  00F3EE  23FD               	addwfc	(configFile_read@position+1)& (0+255),f,b
 15947  00F3F0  23FE               	addwfc	(configFile_read@position+2)& (0+255),f,b
 15948  00F3F2  23FF               	addwfc	(configFile_read@position+3)& (0+255),f,b
 15949                           
 15950                           ; BSR set to: 1
 15951                           ;config_file.c: 300: _parse_item(&item_string[0], &value_string[0]);
 15952  00F3F4  0ECC               	movlw	low configFile_read@item_string
 15953  00F3F6  0100               	movlb	0	; () banked
 15954  00F3F8  6F99               	movwf	__parse_item@item_string& (0+255),b
 15955  00F3FA  0E01               	movlw	high configFile_read@item_string
 15956  00F3FC  6F9A               	movwf	(__parse_item@item_string+1)& (0+255),b
 15957  00F3FE  0EEB               	movlw	low configFile_read@value_string
 15958  00F400  6F9B               	movwf	__parse_item@value_string& (0+255),b
 15959  00F402  0E01               	movlw	high configFile_read@value_string
 15960  00F404  6F9C               	movwf	(__parse_item@value_string+1)& (0+255),b
 15961  00F406  ECB9  F060         	call	__parse_item	;wreg free
 15962  00F40A                     l3068:
 15963  00F40A  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15964  00F40E  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15965  00F412  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15966  00F416  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15967  00F41A  0101               	movlb	1	; () banked
 15968  00F41C  1FC4               	comf	??_configFile_read& (0+255),f,b
 15969  00F41E  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15970  00F420  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15971  00F422  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15972  00F424  2BC4               	incf	??_configFile_read& (0+255),f,b
 15973  00F426  0E00               	movlw	0
 15974  00F428  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15975  00F42A  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15976  00F42C  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15977  00F42E  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15978  00F430  25C4               	addwf	??_configFile_read& (0+255),w,b
 15979  00F432  6FC8               	movwf	(??_configFile_read+4)& (0+255),b
 15980  00F434  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15981  00F436  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15982  00F438  6FC9               	movwf	(??_configFile_read+5)& (0+255),b
 15983  00F43A  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15984  00F43C  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15985  00F43E  6FCA               	movwf	(??_configFile_read+6)& (0+255),b
 15986  00F440  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15987  00F442  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15988  00F444  6FCB               	movwf	(??_configFile_read+7)& (0+255),b
 15989  00F446  51CB               	movf	(??_configFile_read+7)& (0+255),w,b
 15990  00F448  11CA               	iorwf	(??_configFile_read+6)& (0+255),w,b
 15991  00F44A  11C9               	iorwf	(??_configFile_read+5)& (0+255),w,b
 15992  00F44C  E104               	bnz	u16941
 15993  00F44E  0E04               	movlw	4
 15994  00F450  5DC8               	subwf	(??_configFile_read+4)& (0+255),w,b
 15995  00F452  A0D8               	btfss	status,0,c
 15996  00F454  0012               	return	
 15997  00F456                     u16941:
 15998  00F456  D753               	goto	l3069
 15999  00F458                     __end_of_configFile_read:
 16000                           	opt stack 0
 16001                           tblptru	equ	0xFF8
 16002                           tblptrh	equ	0xFF7
 16003                           tblptrl	equ	0xFF6
 16004                           tablat	equ	0xFF5
 16005                           prodh	equ	0xFF4
 16006                           prodl	equ	0xFF3
 16007                           postinc0	equ	0xFEE
 16008                           wreg	equ	0xFE8
 16009                           postdec1	equ	0xFE5
 16010                           plusw1	equ	0xFE3
 16011                           fsr1h	equ	0xFE2
 16012                           fsr1l	equ	0xFE1
 16013                           indf2	equ	0xFDF
 16014                           postinc2	equ	0xFDE
 16015                           plusw2	equ	0xFDB
 16016                           fsr2h	equ	0xFDA
 16017                           fsr2l	equ	0xFD9
 16018                           status	equ	0xFD8
 16019                           
 16020 ;; *************** function _fat_read_from_file *****************
 16021 ;; Defined at:
 16022 ;;		line 752 in file "fat16.c"
 16023 ;; Parameters:    Size  Location     Type
 16024 ;;  file_number     1    wreg     unsigned char 
 16025 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16026 ;;  length          4  109[BANK0 ] unsigned long 
 16027 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16028 ;;		 -> ConfigFile_buffer(512), 
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;  file_number     1  119[BANK0 ] unsigned char 
 16031 ;;  root           32  125[BANK0 ] struct .
 16032 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16033 ;;  cluster         2  121[BANK0 ] unsigned int 
 16034 ;;  return_code     1  120[BANK0 ] unsigned char 
 16035 ;; Return value:  Size  Location     Type
 16036 ;;                  1    wreg      unsigned char 
 16037 ;; Registers used:
 16038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16039 ;; Tracked objects:
 16040 ;;		On entry : 0/0
 16041 ;;		On exit  : 0/0
 16042 ;;		Unchanged: 0/0
 16043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16044 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16045 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16046 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16047 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16048 ;;Total ram usage:       52 bytes
 16049 ;; Hardware stack levels used:    1
 16050 ;; Hardware stack levels required when called:   18
 16051 ;; This function calls:
 16052 ;;		_fat_get_file_information
 16053 ;;		_fat_read_from_file_fast
 16054 ;; This function is called by:
 16055 ;;		_configFile_read
 16056 ;; This function uses a non-reentrant model
 16057 ;;
 16058                           
 16059                           	psect	text59
 16060  011EBC                     __ptext59:
 16061                           	opt stack 0
 16062  011EBC                     _fat_read_from_file:
 16063                           	opt stack 10
 16064                           
 16065                           ; BSR set to: 1
 16066                           ;incstack = 0
 16067                           ;fat_read_from_file@file_number stored from wreg
 16068  011EBC  0100               	movlb	0	; () banked
 16069  011EBE  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16070                           
 16071                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16072  011EC0  0EDD               	movlw	low fat_read_from_file@root
 16073  011EC2  0100               	movlb	0	; () banked
 16074  011EC4  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16075  011EC6  0E00               	movlw	high fat_read_from_file@root
 16076  011EC8  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16077  011ECA  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16078  011ECC  EC86  F0A0         	call	_fat_get_file_information
 16079  011ED0  0100               	movlb	0	; () banked
 16080  011ED2  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;fat16.c: 761: if(return_code!=0x00)
 16084  011ED4  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16085  011ED6  A4D8               	btfss	status,2,c
 16086  011ED8  0012               	return	
 16087                           
 16088                           ; BSR set to: 0
 16089                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 16090                           
 16091                           ; BSR set to: 0
 16092                           
 16093                           ; BSR set to: 0
 16094                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16095  011EDA  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16096  011EDC  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16097  011EDE  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16098  011EE0  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16099  011EE2  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16100  011EE4  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16101  011EE6  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16102  011EE8  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16103  011EEA  A0D8               	btfss	status,0,c
 16104  011EEC  0012               	return	
 16105                           
 16106                           ; BSR set to: 0
 16107                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 16108                           
 16109                           ; BSR set to: 0
 16110                           
 16111                           ; BSR set to: 0
 16112                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16113  011EEE  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16114  011EF0  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16115  011EF2  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16116  011EF4  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16117  011EF6  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16118  011EF8  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16119  011EFA  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16120  011EFC  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16121  011EFE  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16122  011F00  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16123  011F02  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16124  011F04  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16125  011F06  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16126  011F08  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16127  011F0A  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16128  011F0C  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16129  011F0E  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16130  011F10  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16131  011F12  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16132  011F14  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16133  011F16  B0D8               	btfsc	status,0,c
 16134  011F18  D01D               	goto	l1891
 16135                           
 16136                           ; BSR set to: 0
 16137                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 16138  011F1A  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16139  011F1E  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16140  011F22  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16141  011F26  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16142  011F2A  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16143  011F2C  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16144  011F2E  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16145  011F30  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16146  011F32  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16147  011F34  0E00               	movlw	0
 16148  011F36  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16149  011F38  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16150  011F3A  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16151  011F3C  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16152  011F3E  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16153  011F40  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16154  011F42  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16155  011F44  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16156  011F46  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16157  011F48  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16158  011F4A  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16159  011F4C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16160  011F4E  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16161  011F50  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16162  011F52  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16163  011F54                     l1891:
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 16167                           
 16168                           ; BSR set to: 0
 16169  011F54  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16170  011F58  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;fat16.c: 782: cluster_number = 0;
 16174  011F5C  0E00               	movlw	0
 16175  011F5E  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16176  011F60  0E00               	movlw	0
 16177  011F62  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16178                           
 16179                           ; BSR set to: 0
 16180                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16181  011F64  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16182  011F68  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16183  011F6C  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16184  011F70  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16185  011F74  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16186  011F78  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16187  011F7C  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16188  011F80  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16189  011F84  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16190  011F88  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16191  011F8C  0ED9               	movlw	low fat_read_from_file@cluster
 16192  011F8E  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16193  011F90  0E00               	movlw	high fat_read_from_file@cluster
 16194  011F92  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16195  011F94  0EDB               	movlw	low fat_read_from_file@cluster_number
 16196  011F96  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16197  011F98  0E00               	movlw	high fat_read_from_file@cluster_number
 16198  011F9A  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16199  011F9C  ECC0  F070         	call	_fat_read_from_file_fast	;wreg free
 16200  011FA0  0012               	return	
 16201  011FA2                     __end_of_fat_read_from_file:
 16202                           	opt stack 0
 16203                           tblptru	equ	0xFF8
 16204                           tblptrh	equ	0xFF7
 16205                           tblptrl	equ	0xFF6
 16206                           tablat	equ	0xFF5
 16207                           prodh	equ	0xFF4
 16208                           prodl	equ	0xFF3
 16209                           postinc0	equ	0xFEE
 16210                           wreg	equ	0xFE8
 16211                           postdec1	equ	0xFE5
 16212                           plusw1	equ	0xFE3
 16213                           fsr1h	equ	0xFE2
 16214                           fsr1l	equ	0xFE1
 16215                           indf2	equ	0xFDF
 16216                           postinc2	equ	0xFDE
 16217                           plusw2	equ	0xFDB
 16218                           fsr2h	equ	0xFDA
 16219                           fsr2l	equ	0xFD9
 16220                           status	equ	0xFD8
 16221                           
 16222 ;; *************** function _fat_read_from_file_fast *****************
 16223 ;; Defined at:
 16224 ;;		line 788 in file "fat16.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16227 ;;  length          4   69[BANK0 ] unsigned long 
 16228 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16229 ;;		 -> ConfigFile_buffer(512), 
 16230 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16231 ;;		 -> fat_read_from_file@cluster(2), 
 16232 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16233 ;;		 -> fat_read_from_file@cluster_number(2), 
 16234 ;; Auto vars:     Size  Location     Type
 16235 ;;  position        4  101[BANK0 ] unsigned long 
 16236 ;;  read_length     2   99[BANK0 ] unsigned int 
 16237 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16238 ;;  offset          2   95[BANK0 ] unsigned int 
 16239 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16240 ;;  sector          2   91[BANK0 ] unsigned int 
 16241 ;; Return value:  Size  Location     Type
 16242 ;;                  1    wreg      unsigned char 
 16243 ;; Registers used:
 16244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16245 ;; Tracked objects:
 16246 ;;		On entry : 0/0
 16247 ;;		On exit  : 0/0
 16248 ;;		Unchanged: 0/0
 16249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16250 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16251 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16252 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16253 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16254 ;;Total ram usage:       40 bytes
 16255 ;; Hardware stack levels used:    1
 16256 ;; Hardware stack levels required when called:   17
 16257 ;; This function calls:
 16258 ;;		__data_sector_from_cluster
 16259 ;;		__find_nth_cluster
 16260 ;;		__read_fat
 16261 ;;		_flash_partial_read
 16262 ;; This function is called by:
 16263 ;;		_fat_read_from_file
 16264 ;; This function uses a non-reentrant model
 16265 ;;
 16266                           
 16267                           	psect	text60
 16268  00E180                     __ptext60:
 16269                           	opt stack 0
 16270  00E180                     _fat_read_from_file_fast:
 16271                           	opt stack 10
 16272                           
 16273                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16274                           
 16275                           ;incstack = 0
 16276  00E180  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16277  00E184  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16278  00E188  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16279  00E18C  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16280  00E190  0E0A               	movlw	10
 16281  00E192  D006               	goto	u14150
 16282  00E194                     u14155:
 16283  00E194  0100               	movlb	0	; () banked
 16284  00E196  90D8               	bcf	status,0,c
 16285  00E198  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16286  00E19A  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16287  00E19C  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16288  00E19E  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16289  00E1A0                     u14150:
 16290  00E1A0  2EE8               	decfsz	wreg,f,c
 16291  00E1A2  D7F8               	goto	u14155
 16292  00E1A4  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16293  00E1A8  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16294                           
 16295                           ; BSR set to: 0
 16296                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 16297  00E1AC  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16298  00E1B0  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16299  00E1B4  50DE               	movf	postinc2,w,c
 16300  00E1B6  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16301  00E1B8  50DE               	movf	postinc2,w,c
 16302  00E1BA  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16303  00E1BC  B0D8               	btfsc	status,0,c
 16304  00E1BE  D002               	goto	l1894
 16305                           
 16306                           ; BSR set to: 0
 16307                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 16308  00E1C0  0EFF               	movlw	255
 16309                           
 16310                           ; BSR set to: 0
 16311  00E1C2  0012               	return	
 16312  00E1C4                     l1894:
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16316                           
 16317                           ; BSR set to: 0
 16318  00E1C4  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16319  00E1C8  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16320  00E1CC  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16321  00E1D0  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16322  00E1D4  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16323  00E1D8  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16324  00E1DC  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16325  00E1E0  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16326  00E1E4  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16327  00E1E6  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16328  00E1E8  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16329  00E1EA  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16330  00E1EC  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16331  00E1EE  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16332  00E1F0  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16333  00E1F2  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16334  00E1F4  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16335  00E1F6  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16336  00E1F8  EC5B  F09A         	call	__find_nth_cluster	;wreg free
 16337  00E1FC  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16338  00E200  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16339  00E204  0100               	movlb	0	; () banked
 16340  00E206  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16341  00E20A  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 16345  00E20E  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16346  00E212  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16347  00E216  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16348  00E21A  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;fat16.c: 814: working_cluster = (*cluster);
 16352  00E21E  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16353  00E222  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16354  00E226  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16355  00E22A  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;fat16.c: 817: position = (needed_cluster << 9);
 16359  00E22E  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16360  00E232  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16361  00E236  0E09               	movlw	9
 16362  00E238                     u14175:
 16363  00E238  90D8               	bcf	status,0,c
 16364  00E23A  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16365  00E23C  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16366  00E23E  2EE8               	decfsz	wreg,f,c
 16367  00E240  D7FB               	goto	u14175
 16368  00E242  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16369  00E246  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16370  00E24A  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16371  00E24C  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;fat16.c: 818: offset = start_byte - position;
 16375  00E24E  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16376  00E252  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16377  00E256  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16378  00E258  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16379  00E25A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16380  00E25C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16381  00E25E  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16382  00E260  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16383  00E262  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16384  00E264  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16385  00E266  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16386  00E268  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;fat16.c: 821: position = 0;
 16390  00E26A  0E00               	movlw	0
 16391  00E26C  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16392  00E26E  0E00               	movlw	0
 16393  00E270  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16394  00E272  0E00               	movlw	0
 16395  00E274  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16396  00E276  0E00               	movlw	0
 16397  00E278  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16398                           
 16399                           ;fat16.c: 822: while(position < length)
 16400  00E27A  D089               	goto	l1896
 16401  00E27C                     
 16402                           ; BSR set to: 0
 16403                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16404                           
 16405                           ; BSR set to: 0
 16406  00E27C  0E02               	movlw	2
 16407  00E27E  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16408  00E280  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16409  00E282  A4D8               	btfss	status,2,c
 16410  00E284  D00F               	goto	l1898
 16411                           
 16412                           ; BSR set to: 0
 16413                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16414  00E286  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16415  00E28A  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16416  00E28E  ECBB  F0A5         	call	__read_fat	;wreg free
 16417  00E292  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16418  00E296  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16419                           
 16420                           ;fat16.c: 829: offset = 0;
 16421  00E29A  0E00               	movlw	0
 16422  00E29C  0100               	movlb	0	; () banked
 16423  00E29E  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16424  00E2A0  0E00               	movlw	0
 16425  00E2A2  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16426  00E2A4                     l1898:
 16427                           
 16428                           ; BSR set to: 0
 16429                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16430                           
 16431                           ; BSR set to: 0
 16432  00E2A4  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16433  00E2A8  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16434  00E2AC  ECAF  F0AE         	call	__data_sector_from_cluster	;wreg free
 16435  00E2B0  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16436  00E2B4  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16437                           
 16438                           ;fat16.c: 836: read_length = 512 - offset;
 16439  00E2B8  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16440  00E2BC  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16441  00E2C0  0100               	movlb	0	; () banked
 16442  00E2C2  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16443  00E2C4  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16444  00E2C6  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16445  00E2C8  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16446  00E2CA  0E00               	movlw	0
 16447  00E2CC  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16448  00E2CE  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16449  00E2D0  0E02               	movlw	2
 16450  00E2D2  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16451  00E2D4  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;fat16.c: 837: if(read_length > (length-position))
 16455  00E2D6  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16456  00E2D8  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16457  00E2DA  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16458  00E2DC  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16459  00E2DE  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16460  00E2E0  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16461  00E2E2  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16462  00E2E6  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16463  00E2EA  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16464  00E2EE  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16465  00E2F2  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16466  00E2F4  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16467  00E2F6  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16468  00E2F8  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16469  00E2FA  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16470  00E2FC  0E00               	movlw	0
 16471  00E2FE  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16472  00E300  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16473  00E302  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16474  00E304  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16475  00E306  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16476  00E308  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16477  00E30A  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16478  00E30C  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16479  00E30E  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16480  00E310  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16481  00E312  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16482  00E314  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16483  00E316  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16484  00E318  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16485  00E31A  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16486  00E31C  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16487  00E31E  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16488  00E320  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16489  00E322  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16490  00E324  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16491  00E326  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16492  00E328  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16493  00E32A  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16494  00E32C  B0D8               	btfsc	status,0,c
 16495  00E32E  D00E               	goto	l1899
 16496                           
 16497                           ; BSR set to: 0
 16498                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16499  00E330  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16500  00E334  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16501  00E338  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16502  00E33A  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16503  00E33C  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16504  00E33E  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16505  00E340  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16506  00E342  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16507  00E344  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16508  00E346  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16509  00E348  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16510  00E34A  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16511  00E34C                     l1899:
 16512                           
 16513                           ; BSR set to: 0
 16514                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16515                           
 16516                           ; BSR set to: 0
 16517  00E34C  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16518  00E350  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16519  00E354  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16520  00E358  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16521  00E35C  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16522  00E360  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16523  00E364  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16524  00E366  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16525  00E368  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16526  00E36A  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16527  00E36C  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16528  00E36E  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16529  00E370  EC7C  F0AD         	call	_flash_partial_read	;wreg free
 16530                           
 16531                           ;fat16.c: 847: position += read_length;
 16532  00E374  0100               	movlb	0	; () banked
 16533  00E376  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16534  00E378  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16535  00E37A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16536  00E37C  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16537  00E37E  0E00               	movlw	0
 16538  00E380  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16539  00E382  0E00               	movlw	0
 16540  00E384  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16541                           
 16542                           ; BSR set to: 0
 16543                           ;fat16.c: 848: offset += read_length;
 16544  00E386  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16545  00E388  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16546  00E38A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16547  00E38C  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16548  00E38E                     l1896:
 16549                           
 16550                           ; BSR set to: 0
 16551                           
 16552                           ; BSR set to: 0
 16553  00E38E  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16554  00E390  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16555  00E392  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16556  00E394  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16557  00E396  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16558  00E398  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16559  00E39A  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16560  00E39C  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16561  00E39E  A0D8               	btfss	status,0,c
 16562  00E3A0  D76D               	goto	l1897
 16563                           
 16564                           ; BSR set to: 0
 16565                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16566                           
 16567                           ; BSR set to: 0
 16568  00E3A2  0E00               	movlw	0
 16569  00E3A4  0012               	return	
 16570  00E3A6                     __end_of_fat_read_from_file_fast:
 16571                           	opt stack 0
 16572                           tblptru	equ	0xFF8
 16573                           tblptrh	equ	0xFF7
 16574                           tblptrl	equ	0xFF6
 16575                           tablat	equ	0xFF5
 16576                           prodh	equ	0xFF4
 16577                           prodl	equ	0xFF3
 16578                           postinc0	equ	0xFEE
 16579                           wreg	equ	0xFE8
 16580                           postdec1	equ	0xFE5
 16581                           plusw1	equ	0xFE3
 16582                           fsr1h	equ	0xFE2
 16583                           fsr1l	equ	0xFE1
 16584                           indf2	equ	0xFDF
 16585                           postinc2	equ	0xFDE
 16586                           postdec2	equ	0xFDD
 16587                           plusw2	equ	0xFDB
 16588                           fsr2h	equ	0xFDA
 16589                           fsr2l	equ	0xFD9
 16590                           status	equ	0xFD8
 16591                           
 16592 ;; *************** function __find_nth_cluster *****************
 16593 ;; Defined at:
 16594 ;;		line 183 in file "fat16.c"
 16595 ;; Parameters:    Size  Location     Type
 16596 ;;  cluster         2   55[BANK0 ] unsigned int 
 16597 ;;  n               2   57[BANK0 ] unsigned int 
 16598 ;; Auto vars:     Size  Location     Type
 16599 ;;  sector          2   63[BANK0 ] unsigned int 
 16600 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16601 ;;  offset          2   59[BANK0 ] unsigned int 
 16602 ;; Return value:  Size  Location     Type
 16603 ;;                  2   55[BANK0 ] unsigned int 
 16604 ;; Registers used:
 16605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16606 ;; Tracked objects:
 16607 ;;		On entry : 0/0
 16608 ;;		On exit  : 0/0
 16609 ;;		Unchanged: 0/0
 16610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16612 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16614 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16615 ;;Total ram usage:       10 bytes
 16616 ;; Hardware stack levels used:    1
 16617 ;; Hardware stack levels required when called:   16
 16618 ;; This function calls:
 16619 ;;		__fat_offset_from_cluster
 16620 ;;		__fat_sector_from_cluster
 16621 ;;		__read_fat
 16622 ;;		__read_value_from_offset
 16623 ;;		_flash_sector_read
 16624 ;; This function is called by:
 16625 ;;		_fat_read_from_file_fast
 16626 ;;		_fat_modify_file
 16627 ;;		_fat_copy_sector_to_buffer
 16628 ;; This function uses a non-reentrant model
 16629 ;;
 16630                           
 16631                           	psect	text61
 16632  0134B6                     __ptext61:
 16633                           	opt stack 0
 16634  0134B6                     __find_nth_cluster:
 16635                           	opt stack 11
 16636                           
 16637                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16638                           
 16639                           ; BSR set to: 0
 16640                           ;incstack = 0
 16641  0134B6  0E00               	movlw	0
 16642  0134B8  0100               	movlb	0	; () banked
 16643  0134BA  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16644  0134BC  0E00               	movlw	0
 16645  0134BE  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16646                           
 16647                           ; BSR set to: 0
 16648                           ;fat16.c: 190: if(n==1)
 16649  0134C0  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16650  0134C2  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16651  0134C4  A4D8               	btfss	status,2,c
 16652  0134C6  D040               	goto	l1781
 16653                           
 16654                           ; BSR set to: 0
 16655                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16656  0134C8  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16657  0134CC  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16658  0134D0  ECBB  F0A5         	call	__read_fat	;wreg free
 16659  0134D4  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16660  0134D8  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16661  0134DC  0012               	return	
 16662  0134DE                     
 16663                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16664  0134DE  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16665  0134E2  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16666  0134E6  EC49  F0AE         	call	__fat_sector_from_cluster	;wreg free
 16667  0134EA  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16668  0134EE  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16669                           
 16670                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16671  0134F2  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16672  0134F6  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16673  0134FA  EC56  F0AE         	call	__fat_offset_from_cluster	;wreg free
 16674  0134FE  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16675  013502  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16676                           
 16677                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16678  013506  0100               	movlb	0	; () banked
 16679  013508  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16680  01350A  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16681  01350C  E104               	bnz	u12630
 16682  01350E  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16683  013510  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16684  013512  B4D8               	btfsc	status,2,c
 16685  013514  D00A               	goto	l1783
 16686  013516                     u12630:
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16690  013516  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16691  01351A  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16692  01351E  0E00               	movlw	low _buffer
 16693  013520  6F89               	movwf	flash_sector_read@data& (0+255),b
 16694  013522  0E0A               	movlw	high _buffer
 16695  013524  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16696  013526  EC68  F0AD         	call	_flash_sector_read	;wreg free
 16697  01352A                     l1783:
 16698                           
 16699                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16700  01352A  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16701  01352E  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16702  013532  0E00               	movlw	low _buffer
 16703  013534  0100               	movlb	0	; () banked
 16704  013536  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16705  013538  0E0A               	movlw	high _buffer
 16706  01353A  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16707  01353C  EC70  F0A9         	call	__read_value_from_offset	;wreg free
 16708  013540  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16709  013544  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16710  013548                     l1781:
 16711  013548  0100               	movlb	0	; () banked
 16712  01354A  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16713  01354C  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16714  01354E  A4D8               	btfss	status,2,c
 16715  013550  D7C6               	goto	l1782
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16719  013552  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16720  013556  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16721  01355A  0012               	return		;funcret
 16722  01355C                     __end_of__find_nth_cluster:
 16723                           	opt stack 0
 16724                           tblptru	equ	0xFF8
 16725                           tblptrh	equ	0xFF7
 16726                           tblptrl	equ	0xFF6
 16727                           tablat	equ	0xFF5
 16728                           prodh	equ	0xFF4
 16729                           prodl	equ	0xFF3
 16730                           postinc0	equ	0xFEE
 16731                           wreg	equ	0xFE8
 16732                           postdec1	equ	0xFE5
 16733                           plusw1	equ	0xFE3
 16734                           fsr1h	equ	0xFE2
 16735                           fsr1l	equ	0xFE1
 16736                           indf2	equ	0xFDF
 16737                           postinc2	equ	0xFDE
 16738                           postdec2	equ	0xFDD
 16739                           plusw2	equ	0xFDB
 16740                           fsr2h	equ	0xFDA
 16741                           fsr2l	equ	0xFD9
 16742                           status	equ	0xFD8
 16743                           
 16744 ;; *************** function __read_value_from_offset *****************
 16745 ;; Defined at:
 16746 ;;		line 115 in file "fat16.c"
 16747 ;; Parameters:    Size  Location     Type
 16748 ;;  offset          2    0[BANK0 ] unsigned int 
 16749 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16750 ;;		 -> buffer(512), 
 16751 ;; Auto vars:     Size  Location     Type
 16752 ;;  value           2    7[BANK0 ] unsigned int 
 16753 ;; Return value:  Size  Location     Type
 16754 ;;                  2    0[BANK0 ] unsigned int 
 16755 ;; Registers used:
 16756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16757 ;; Tracked objects:
 16758 ;;		On entry : 0/0
 16759 ;;		On exit  : 0/0
 16760 ;;		Unchanged: 0/0
 16761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16763 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16764 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16765 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16766 ;;Total ram usage:        9 bytes
 16767 ;; Hardware stack levels used:    1
 16768 ;; Hardware stack levels required when called:   10
 16769 ;; This function calls:
 16770 ;;		Nothing
 16771 ;; This function is called by:
 16772 ;;		__find_nth_cluster
 16773 ;;		__make_cluster_chain
 16774 ;; This function uses a non-reentrant model
 16775 ;;
 16776                           
 16777                           	psect	text62
 16778  0152E0                     __ptext62:
 16779                           	opt stack 0
 16780  0152E0                     __read_value_from_offset:
 16781                           	opt stack 16
 16782                           
 16783                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16784                           
 16785                           ;incstack = 0
 16786  0152E0  0E01               	movlw	1
 16787  0152E2  0100               	movlb	0	; () banked
 16788  0152E4  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16789  0152E6  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16790  0152E8  0E00               	movlw	0
 16791  0152EA  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16792  0152EC  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16793  0152EE  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16794  0152F0  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16795  0152F2  6ED9               	movwf	fsr2l,c
 16796  0152F4  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16797  0152F6  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16798  0152F8  6EDA               	movwf	fsr2h,c
 16799  0152FA  50DF               	movf	indf2,w,c
 16800  0152FC  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16801  0152FE  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16802  015300  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16803  015302  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;fat16.c: 119: value <<= 8;
 16807  015304  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16808  015306  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16809  015308  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16810                           
 16811                           ; BSR set to: 0
 16812                           ;fat16.c: 120: value |= buffer[offset];
 16813  01530A  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16814  01530C  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16815  01530E  6ED9               	movwf	fsr2l,c
 16816  015310  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16817  015312  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16818  015314  6EDA               	movwf	fsr2h,c
 16819  015316  50DF               	movf	indf2,w,c
 16820  015318  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16821  01531A  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16822  01531C  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;fat16.c: 121: return value;
 16826  01531E  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16827  015322  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16828  015326  0012               	return	
 16829  015328                     __end_of__read_value_from_offset:
 16830                           	opt stack 0
 16831                           tblptru	equ	0xFF8
 16832                           tblptrh	equ	0xFF7
 16833                           tblptrl	equ	0xFF6
 16834                           tablat	equ	0xFF5
 16835                           prodh	equ	0xFF4
 16836                           prodl	equ	0xFF3
 16837                           postinc0	equ	0xFEE
 16838                           wreg	equ	0xFE8
 16839                           postdec1	equ	0xFE5
 16840                           plusw1	equ	0xFE3
 16841                           fsr1h	equ	0xFE2
 16842                           fsr1l	equ	0xFE1
 16843                           indf2	equ	0xFDF
 16844                           postinc2	equ	0xFDE
 16845                           postdec2	equ	0xFDD
 16846                           plusw2	equ	0xFDB
 16847                           fsr2h	equ	0xFDA
 16848                           fsr2l	equ	0xFD9
 16849                           status	equ	0xFD8
 16850                           
 16851 ;; *************** function __read_fat *****************
 16852 ;; Defined at:
 16853 ;;		line 457 in file "fat16.c"
 16854 ;; Parameters:    Size  Location     Type
 16855 ;;  cluster         2   47[BANK0 ] unsigned int 
 16856 ;; Auto vars:     Size  Location     Type
 16857 ;;  value           2   53[BANK0 ] unsigned int 
 16858 ;;  offset          2   51[BANK0 ] unsigned int 
 16859 ;;  sector          2   49[BANK0 ] unsigned int 
 16860 ;; Return value:  Size  Location     Type
 16861 ;;                  2   47[BANK0 ] unsigned int 
 16862 ;; Registers used:
 16863 ;;		wreg, status,2, status,0, cstack
 16864 ;; Tracked objects:
 16865 ;;		On entry : 0/0
 16866 ;;		On exit  : 0/0
 16867 ;;		Unchanged: 0/0
 16868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16870 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16872 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16873 ;;Total ram usage:        8 bytes
 16874 ;; Hardware stack levels used:    1
 16875 ;; Hardware stack levels required when called:   15
 16876 ;; This function calls:
 16877 ;;		__fat_offset_from_cluster
 16878 ;;		__fat_sector_from_cluster
 16879 ;;		_flash_partial_read
 16880 ;; This function is called by:
 16881 ;;		__find_nth_cluster
 16882 ;;		_fat_read_from_file_fast
 16883 ;;		_fat_modify_file
 16884 ;; This function uses a non-reentrant model
 16885 ;;
 16886                           
 16887                           	psect	text63
 16888  014B76                     __ptext63:
 16889                           	opt stack 0
 16890  014B76                     __read_fat:
 16891                           	opt stack 12
 16892                           
 16893                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16894                           
 16895                           ; BSR set to: 0
 16896                           ;incstack = 0
 16897  014B76  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16898  014B7A  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16899  014B7E  EC49  F0AE         	call	__fat_sector_from_cluster	;wreg free
 16900  014B82  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16901  014B86  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16902                           
 16903                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16904  014B8A  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16905  014B8E  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16906  014B92  EC56  F0AE         	call	__fat_offset_from_cluster	;wreg free
 16907  014B96  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16908  014B9A  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16909                           
 16910                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16911  014B9E  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16912  014BA2  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16913  014BA6  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16914  014BAA  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16915  014BAE  0E00               	movlw	0
 16916  014BB0  0100               	movlb	0	; () banked
 16917  014BB2  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16918  014BB4  0E02               	movlw	2
 16919  014BB6  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16920  014BB8  0E95               	movlw	low __read_fat@value
 16921  014BBA  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16922  014BBC  0E00               	movlw	high __read_fat@value
 16923  014BBE  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16924  014BC0  EC7C  F0AD         	call	_flash_partial_read	;wreg free
 16925                           
 16926                           ;fat16.c: 471: return value;
 16927  014BC4  C095  F08F         	movff	__read_fat@value,?__read_fat
 16928  014BC8  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16929  014BCC  0012               	return	
 16930  014BCE                     __end_of__read_fat:
 16931                           	opt stack 0
 16932                           tblptru	equ	0xFF8
 16933                           tblptrh	equ	0xFF7
 16934                           tblptrl	equ	0xFF6
 16935                           tablat	equ	0xFF5
 16936                           prodh	equ	0xFF4
 16937                           prodl	equ	0xFF3
 16938                           postinc0	equ	0xFEE
 16939                           wreg	equ	0xFE8
 16940                           postdec1	equ	0xFE5
 16941                           plusw1	equ	0xFE3
 16942                           fsr1h	equ	0xFE2
 16943                           fsr1l	equ	0xFE1
 16944                           indf2	equ	0xFDF
 16945                           postinc2	equ	0xFDE
 16946                           postdec2	equ	0xFDD
 16947                           plusw2	equ	0xFDB
 16948                           fsr2h	equ	0xFDA
 16949                           fsr2l	equ	0xFD9
 16950                           status	equ	0xFD8
 16951                           
 16952 ;; *************** function __fat_sector_from_cluster *****************
 16953 ;; Defined at:
 16954 ;;		line 76 in file "fat16.c"
 16955 ;; Parameters:    Size  Location     Type
 16956 ;;  cluster         2    0[BANK0 ] unsigned int 
 16957 ;; Auto vars:     Size  Location     Type
 16958 ;;		None
 16959 ;; Return value:  Size  Location     Type
 16960 ;;                  2    0[BANK0 ] unsigned int 
 16961 ;; Registers used:
 16962 ;;		wreg, status,2, status,0
 16963 ;; Tracked objects:
 16964 ;;		On entry : 0/0
 16965 ;;		On exit  : 0/0
 16966 ;;		Unchanged: 0/0
 16967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16971 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16972 ;;Total ram usage:        2 bytes
 16973 ;; Hardware stack levels used:    1
 16974 ;; Hardware stack levels required when called:   10
 16975 ;; This function calls:
 16976 ;;		Nothing
 16977 ;; This function is called by:
 16978 ;;		__find_nth_cluster
 16979 ;;		__make_cluster_chain
 16980 ;;		__read_fat
 16981 ;; This function uses a non-reentrant model
 16982 ;;
 16983                           
 16984                           	psect	text64
 16985  015C92                     __ptext64:
 16986                           	opt stack 0
 16987  015C92                     __fat_sector_from_cluster:
 16988                           	opt stack 16
 16989                           
 16990                           ;fat16.c: 78: cluster >>= 8;
 16991                           
 16992                           ;incstack = 0
 16993  015C92  0100               	movlb	0	; () banked
 16994  015C94  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 16995  015C96  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 16996  015C98  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 16997                           
 16998                           ; BSR set to: 0
 16999                           ;fat16.c: 79: cluster += 2;
 17000  015C9A  0E02               	movlw	2
 17001  015C9C  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17002  015C9E  0E00               	movlw	0
 17003  015CA0  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;fat16.c: 80: return cluster;
 17007  015CA2  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17008  015CA6  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17009  015CAA  0012               	return	
 17010  015CAC                     __end_of__fat_sector_from_cluster:
 17011                           	opt stack 0
 17012                           tblptru	equ	0xFF8
 17013                           tblptrh	equ	0xFF7
 17014                           tblptrl	equ	0xFF6
 17015                           tablat	equ	0xFF5
 17016                           prodh	equ	0xFF4
 17017                           prodl	equ	0xFF3
 17018                           postinc0	equ	0xFEE
 17019                           wreg	equ	0xFE8
 17020                           postdec1	equ	0xFE5
 17021                           plusw1	equ	0xFE3
 17022                           fsr1h	equ	0xFE2
 17023                           fsr1l	equ	0xFE1
 17024                           indf2	equ	0xFDF
 17025                           postinc2	equ	0xFDE
 17026                           postdec2	equ	0xFDD
 17027                           plusw2	equ	0xFDB
 17028                           fsr2h	equ	0xFDA
 17029                           fsr2l	equ	0xFD9
 17030                           status	equ	0xFD8
 17031                           
 17032 ;; *************** function __fat_offset_from_cluster *****************
 17033 ;; Defined at:
 17034 ;;		line 83 in file "fat16.c"
 17035 ;; Parameters:    Size  Location     Type
 17036 ;;  cluster         2    0[BANK0 ] unsigned int 
 17037 ;; Auto vars:     Size  Location     Type
 17038 ;;		None
 17039 ;; Return value:  Size  Location     Type
 17040 ;;                  2    0[BANK0 ] unsigned int 
 17041 ;; Registers used:
 17042 ;;		wreg, status,2, status,0
 17043 ;; Tracked objects:
 17044 ;;		On entry : 0/0
 17045 ;;		On exit  : 0/0
 17046 ;;		Unchanged: 0/0
 17047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17048 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17051 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17052 ;;Total ram usage:        2 bytes
 17053 ;; Hardware stack levels used:    1
 17054 ;; Hardware stack levels required when called:   10
 17055 ;; This function calls:
 17056 ;;		Nothing
 17057 ;; This function is called by:
 17058 ;;		__find_nth_cluster
 17059 ;;		__make_cluster_chain
 17060 ;;		__read_fat
 17061 ;; This function uses a non-reentrant model
 17062 ;;
 17063                           
 17064                           	psect	text65
 17065  015CAC                     __ptext65:
 17066                           	opt stack 0
 17067  015CAC                     __fat_offset_from_cluster:
 17068                           	opt stack 16
 17069                           
 17070                           ;fat16.c: 85: cluster &= 0xFF;
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;incstack = 0
 17074  015CAC  0EFF               	movlw	255
 17075  015CAE  0100               	movlb	0	; () banked
 17076  015CB0  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17077  015CB2  0E00               	movlw	0
 17078  015CB4  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17079                           
 17080                           ; BSR set to: 0
 17081                           ;fat16.c: 86: cluster <<= 1;
 17082  015CB6  90D8               	bcf	status,0,c
 17083  015CB8  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17084  015CBA  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17085                           
 17086                           ; BSR set to: 0
 17087                           ;fat16.c: 87: return cluster;
 17088  015CBC  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17089  015CC0  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17090  015CC4  0012               	return	
 17091  015CC6                     __end_of__fat_offset_from_cluster:
 17092                           	opt stack 0
 17093                           tblptru	equ	0xFF8
 17094                           tblptrh	equ	0xFF7
 17095                           tblptrl	equ	0xFF6
 17096                           tablat	equ	0xFF5
 17097                           prodh	equ	0xFF4
 17098                           prodl	equ	0xFF3
 17099                           postinc0	equ	0xFEE
 17100                           wreg	equ	0xFE8
 17101                           postdec1	equ	0xFE5
 17102                           plusw1	equ	0xFE3
 17103                           fsr1h	equ	0xFE2
 17104                           fsr1l	equ	0xFE1
 17105                           indf2	equ	0xFDF
 17106                           postinc2	equ	0xFDE
 17107                           postdec2	equ	0xFDD
 17108                           plusw2	equ	0xFDB
 17109                           fsr2h	equ	0xFDA
 17110                           fsr2l	equ	0xFD9
 17111                           status	equ	0xFD8
 17112                           
 17113 ;; *************** function __data_sector_from_cluster *****************
 17114 ;; Defined at:
 17115 ;;		line 71 in file "fat16.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;		None
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  2    0[BANK0 ] unsigned int 
 17122 ;; Registers used:
 17123 ;;		wreg, status,2, status,0
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17133 ;;Total ram usage:        2 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:   10
 17136 ;; This function calls:
 17137 ;;		Nothing
 17138 ;; This function is called by:
 17139 ;;		_fat_read_from_file_fast
 17140 ;;		_fat_modify_file
 17141 ;;		_fat_copy_sector_to_buffer
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           	psect	text66
 17146  015D5E                     __ptext66:
 17147                           	opt stack 0
 17148  015D5E                     __data_sector_from_cluster:
 17149                           	opt stack 17
 17150                           
 17151                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 17152                           
 17153                           ; BSR set to: 0
 17154                           ;incstack = 0
 17155  015D5E  0E24               	movlw	36
 17156  015D60  0100               	movlb	0	; () banked
 17157  015D62  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17158  015D64  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17159  015D66  0E00               	movlw	0
 17160  015D68  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17161  015D6A  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17162  015D6C  0012               	return	
 17163  015D6E                     __end_of__data_sector_from_cluster:
 17164                           	opt stack 0
 17165                           tblptru	equ	0xFF8
 17166                           tblptrh	equ	0xFF7
 17167                           tblptrl	equ	0xFF6
 17168                           tablat	equ	0xFF5
 17169                           prodh	equ	0xFF4
 17170                           prodl	equ	0xFF3
 17171                           postinc0	equ	0xFEE
 17172                           wreg	equ	0xFE8
 17173                           postdec1	equ	0xFE5
 17174                           plusw1	equ	0xFE3
 17175                           fsr1h	equ	0xFE2
 17176                           fsr1l	equ	0xFE1
 17177                           indf2	equ	0xFDF
 17178                           postinc2	equ	0xFDE
 17179                           postdec2	equ	0xFDD
 17180                           plusw2	equ	0xFDB
 17181                           fsr2h	equ	0xFDA
 17182                           fsr2l	equ	0xFD9
 17183                           status	equ	0xFD8
 17184                           
 17185 ;; *************** function _fat_get_file_information *****************
 17186 ;; Defined at:
 17187 ;;		line 1421 in file "fat16.c"
 17188 ;; Parameters:    Size  Location     Type
 17189 ;;  file_number     1    wreg     unsigned char 
 17190 ;;  data            2   47[BANK0 ] PTR struct .
 17191 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17192 ;; Auto vars:     Size  Location     Type
 17193 ;;  file_number     1   54[BANK0 ] unsigned char 
 17194 ;;  offset          2   52[BANK0 ] unsigned int 
 17195 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17196 ;; Return value:  Size  Location     Type
 17197 ;;                  1    wreg      unsigned char 
 17198 ;; Registers used:
 17199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17200 ;; Tracked objects:
 17201 ;;		On entry : 0/0
 17202 ;;		On exit  : 0/0
 17203 ;;		Unchanged: 0/0
 17204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17206 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17207 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17208 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17209 ;;Total ram usage:        8 bytes
 17210 ;; Hardware stack levels used:    1
 17211 ;; Hardware stack levels required when called:   15
 17212 ;; This function calls:
 17213 ;;		__offset_from_file_number
 17214 ;;		__sector_from_file_number
 17215 ;;		_flash_partial_read
 17216 ;; This function is called by:
 17217 ;;		_fat_read_from_file
 17218 ;;		_fat_resize_file
 17219 ;;		_fat_modify_file
 17220 ;;		_fat_rename_file
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           	psect	text67
 17225  01410C                     __ptext67:
 17226                           	opt stack 0
 17227  01410C                     _fat_get_file_information:
 17228                           	opt stack 12
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;incstack = 0
 17232                           ;fat_get_file_information@file_number stored from wreg
 17233  01410C  0100               	movlb	0	; () banked
 17234  01410E  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17235                           
 17236                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 17237  014110  0E3F               	movlw	63
 17238  014112  0100               	movlb	0	; () banked
 17239  014114  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17240  014116  D002               	goto	l2097
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 17244  014118  0E01               	movlw	1
 17245                           
 17246                           ; BSR set to: 0
 17247  01411A  0012               	return	
 17248  01411C                     l2097:
 17249                           
 17250                           ; BSR set to: 0
 17251                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 17252                           
 17253                           ; BSR set to: 0
 17254  01411C  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17255  01411E  EC05  F0AC         	call	__sector_from_file_number
 17256  014122  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17257  014126  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17258                           
 17259                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 17260  01412A  0100               	movlb	0	; () banked
 17261  01412C  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17262  01412E  EC17  F0AD         	call	__offset_from_file_number
 17263  014132  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17264  014136  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17265                           
 17266                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17267  01413A  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17268  01413E  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17269  014142  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17270  014146  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17271  01414A  0E00               	movlw	0
 17272  01414C  0100               	movlb	0	; () banked
 17273  01414E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17274  014150  0E20               	movlw	32
 17275  014152  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17276  014154  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17277  014158  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17278  01415C  EC7C  F0AD         	call	_flash_partial_read	;wreg free
 17279                           
 17280                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17281  014160  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17282  014164  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17283  014168  50DF               	movf	indf2,w,c
 17284  01416A  B4D8               	btfsc	status,2,c
 17285  01416C  D008               	goto	u14140
 17286  01416E  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17287  014172  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17288  014176  0EE5               	movlw	229
 17289  014178  18DE               	xorwf	postinc2,w,c
 17290  01417A  A4D8               	btfss	status,2,c
 17291  01417C  D002               	goto	l2099
 17292  01417E                     u14140:
 17293                           
 17294                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 17295  01417E  0E02               	movlw	2
 17296  014180  0012               	return	
 17297  014182                     l2099:
 17298                           
 17299                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 17300  014182  0E00               	movlw	0
 17301  014184  0012               	return	
 17302  014186                     __end_of_fat_get_file_information:
 17303                           	opt stack 0
 17304                           tblptru	equ	0xFF8
 17305                           tblptrh	equ	0xFF7
 17306                           tblptrl	equ	0xFF6
 17307                           tablat	equ	0xFF5
 17308                           prodh	equ	0xFF4
 17309                           prodl	equ	0xFF3
 17310                           postinc0	equ	0xFEE
 17311                           wreg	equ	0xFE8
 17312                           postdec1	equ	0xFE5
 17313                           plusw1	equ	0xFE3
 17314                           fsr1h	equ	0xFE2
 17315                           fsr1l	equ	0xFE1
 17316                           indf2	equ	0xFDF
 17317                           postinc2	equ	0xFDE
 17318                           postdec2	equ	0xFDD
 17319                           plusw2	equ	0xFDB
 17320                           fsr2h	equ	0xFDA
 17321                           fsr2l	equ	0xFD9
 17322                           status	equ	0xFD8
 17323                           
 17324 ;; *************** function _fat_get_file_size *****************
 17325 ;; Defined at:
 17326 ;;		line 563 in file "fat16.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  file_number     1    wreg     unsigned char 
 17329 ;; Auto vars:     Size  Location     Type
 17330 ;;  file_number     1   65[BANK0 ] unsigned char 
 17331 ;;  file_size       4   61[BANK0 ] unsigned long 
 17332 ;;  offset          2   59[BANK0 ] unsigned int 
 17333 ;;  sector          2   57[BANK0 ] unsigned int 
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  4   53[BANK0 ] unsigned long 
 17336 ;; Registers used:
 17337 ;;		wreg, status,2, status,0, cstack
 17338 ;; Tracked objects:
 17339 ;;		On entry : 0/0
 17340 ;;		On exit  : 0/0
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17343 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17344 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17346 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17347 ;;Total ram usage:       13 bytes
 17348 ;; Hardware stack levels used:    1
 17349 ;; Hardware stack levels required when called:   16
 17350 ;; This function calls:
 17351 ;;		__offset_from_file_number
 17352 ;;		__root_is_available
 17353 ;;		__sector_from_file_number
 17354 ;;		_flash_partial_read
 17355 ;; This function is called by:
 17356 ;;		_configFile_read
 17357 ;;		_fat_append_to_file
 17358 ;;		_fat_copy_file
 17359 ;;		_fat_copy_sector_to_buffer
 17360 ;;		_fat_write_sector_from_buffer
 17361 ;; This function uses a non-reentrant model
 17362 ;;
 17363                           
 17364                           	psect	text68
 17365  014186                     __ptext68:
 17366                           	opt stack 0
 17367  014186                     _fat_get_file_size:
 17368                           	opt stack 12
 17369                           
 17370                           ;incstack = 0
 17371                           ;fat_get_file_size@file_number stored from wreg
 17372  014186  0100               	movlb	0	; () banked
 17373  014188  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17374                           
 17375                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17376  01418A  0100               	movlb	0	; () banked
 17377  01418C  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17378  01418E  EC8B  F0A2         	call	__root_is_available
 17379  014192  0900               	iorlw	0
 17380  014194  B4D8               	btfsc	status,2,c
 17381  014196  D006               	goto	l1859
 17382                           
 17383                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17384  014198  0100               	movlb	0	; () banked
 17385  01419A  6995               	setf	?_fat_get_file_size& (0+255),b
 17386  01419C  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17387  01419E  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17388  0141A0  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17389  0141A2  0012               	return	
 17390  0141A4                     l1859:
 17391                           
 17392                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17393                           
 17394                           ; BSR set to: 0
 17395  0141A4  0100               	movlb	0	; () banked
 17396  0141A6  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17397  0141A8  EC05  F0AC         	call	__sector_from_file_number
 17398  0141AC  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17399  0141B0  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17400                           
 17401                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17402  0141B4  0100               	movlb	0	; () banked
 17403  0141B6  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17404  0141B8  EC17  F0AD         	call	__offset_from_file_number
 17405  0141BC  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17406  0141C0  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17407                           
 17408                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17409  0141C4  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17410  0141C8  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17411  0141CC  0E1C               	movlw	28
 17412  0141CE  0100               	movlb	0	; () banked
 17413  0141D0  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17414  0141D2  6F89               	movwf	flash_partial_read@start& (0+255),b
 17415  0141D4  0E00               	movlw	0
 17416  0141D6  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17417  0141D8  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17418  0141DA  0E00               	movlw	0
 17419  0141DC  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17420  0141DE  0E04               	movlw	4
 17421  0141E0  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17422  0141E2  0E9D               	movlw	low fat_get_file_size@file_size
 17423  0141E4  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17424  0141E6  0E00               	movlw	high fat_get_file_size@file_size
 17425  0141E8  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17426  0141EA  EC7C  F0AD         	call	_flash_partial_read	;wreg free
 17427                           
 17428                           ;fat16.c: 584: return file_size;
 17429  0141EE  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17430  0141F2  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17431  0141F6  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17432  0141FA  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17433  0141FE  0012               	return	
 17434  014200                     __end_of_fat_get_file_size:
 17435                           	opt stack 0
 17436                           tblptru	equ	0xFF8
 17437                           tblptrh	equ	0xFF7
 17438                           tblptrl	equ	0xFF6
 17439                           tablat	equ	0xFF5
 17440                           prodh	equ	0xFF4
 17441                           prodl	equ	0xFF3
 17442                           postinc0	equ	0xFEE
 17443                           wreg	equ	0xFE8
 17444                           postdec1	equ	0xFE5
 17445                           plusw1	equ	0xFE3
 17446                           fsr1h	equ	0xFE2
 17447                           fsr1l	equ	0xFE1
 17448                           indf2	equ	0xFDF
 17449                           postinc2	equ	0xFDE
 17450                           postdec2	equ	0xFDD
 17451                           plusw2	equ	0xFDB
 17452                           fsr2h	equ	0xFDA
 17453                           fsr2l	equ	0xFD9
 17454                           status	equ	0xFD8
 17455                           
 17456 ;; *************** function __root_is_available *****************
 17457 ;; Defined at:
 17458 ;;		line 409 in file "fat16.c"
 17459 ;; Parameters:    Size  Location     Type
 17460 ;;  file_number     1    wreg     unsigned char 
 17461 ;; Auto vars:     Size  Location     Type
 17462 ;;  file_number     1   51[BANK0 ] unsigned char 
 17463 ;;  offset          2   49[BANK0 ] unsigned int 
 17464 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17465 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17466 ;; Return value:  Size  Location     Type
 17467 ;;                  1    wreg      unsigned char 
 17468 ;; Registers used:
 17469 ;;		wreg, status,2, status,0, cstack
 17470 ;; Tracked objects:
 17471 ;;		On entry : 0/0
 17472 ;;		On exit  : 0/0
 17473 ;;		Unchanged: 0/0
 17474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17476 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17478 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17479 ;;Total ram usage:        6 bytes
 17480 ;; Hardware stack levels used:    1
 17481 ;; Hardware stack levels required when called:   15
 17482 ;; This function calls:
 17483 ;;		__offset_from_file_number
 17484 ;;		__sector_from_file_number
 17485 ;;		_flash_partial_read
 17486 ;; This function is called by:
 17487 ;;		__get_available_root_entry
 17488 ;;		_fat_get_file_size
 17489 ;;		_fat_resize_file
 17490 ;;		_fat_delete_file
 17491 ;;		_fat_append_to_file
 17492 ;;		_fat_copy_file
 17493 ;;		_fat_copy_sector_to_buffer
 17494 ;;		_fat_write_sector_from_buffer
 17495 ;; This function uses a non-reentrant model
 17496 ;;
 17497                           
 17498                           	psect	text69
 17499  014516                     __ptext69:
 17500                           	opt stack 0
 17501  014516                     __root_is_available:
 17502                           	opt stack 12
 17503                           
 17504                           ;incstack = 0
 17505                           ;__root_is_available@file_number stored from wreg
 17506  014516  0100               	movlb	0	; () banked
 17507  014518  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17508                           
 17509                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17510  01451A  0E3F               	movlw	63
 17511  01451C  0100               	movlb	0	; () banked
 17512  01451E  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17513  014520  D002               	goto	l1820
 17514                           
 17515                           ; BSR set to: 0
 17516                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17517  014522  0E00               	movlw	0
 17518                           
 17519                           ; BSR set to: 0
 17520  014524  0012               	return	
 17521  014526                     l1820:
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17525                           
 17526                           ; BSR set to: 0
 17527  014526  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17528  014528  EC05  F0AC         	call	__sector_from_file_number
 17529  01452C  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17530  014530  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17531                           
 17532                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17533  014534  0100               	movlb	0	; () banked
 17534  014536  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17535  014538  EC17  F0AD         	call	__offset_from_file_number
 17536  01453C  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17537  014540  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17538                           
 17539                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17540  014544  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17541  014548  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17542  01454C  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17543  014550  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17544  014554  0E00               	movlw	0
 17545  014556  0100               	movlb	0	; () banked
 17546  014558  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17547  01455A  0E01               	movlw	1
 17548  01455C  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17549  01455E  0E94               	movlw	low __root_is_available@first_byte
 17550  014560  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17551  014562  0E00               	movlw	high __root_is_available@first_byte
 17552  014564  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17553  014566  EC7C  F0AD         	call	_flash_partial_read	;wreg free
 17554                           
 17555                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17556  01456A  0100               	movlb	0	; () banked
 17557  01456C  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17558  01456E  B4D8               	btfsc	status,2,c
 17559  014570  D004               	goto	u12670
 17560                           
 17561                           ; BSR set to: 0
 17562  014572  0EE5               	movlw	229
 17563  014574  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17564  014576  A4D8               	btfss	status,2,c
 17565  014578  D002               	goto	l1822
 17566  01457A                     u12670:
 17567                           
 17568                           ; BSR set to: 0
 17569                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17570                           
 17571                           ; BSR set to: 0
 17572  01457A  0E01               	movlw	1
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;fat16.c: 435: }
 17576                           
 17577                           ; BSR set to: 0
 17578  01457C  0012               	return	
 17579  01457E                     l1822:
 17580                           
 17581                           ; BSR set to: 0
 17582                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17583                           
 17584                           ; BSR set to: 0
 17585  01457E  0E00               	movlw	0
 17586                           
 17587                           ; BSR set to: 0
 17588  014580  0012               	return	
 17589  014582                     __end_of__root_is_available:
 17590                           	opt stack 0
 17591                           tblptru	equ	0xFF8
 17592                           tblptrh	equ	0xFF7
 17593                           tblptrl	equ	0xFF6
 17594                           tablat	equ	0xFF5
 17595                           prodh	equ	0xFF4
 17596                           prodl	equ	0xFF3
 17597                           postinc0	equ	0xFEE
 17598                           wreg	equ	0xFE8
 17599                           postdec1	equ	0xFE5
 17600                           plusw1	equ	0xFE3
 17601                           fsr1h	equ	0xFE2
 17602                           fsr1l	equ	0xFE1
 17603                           indf2	equ	0xFDF
 17604                           postinc2	equ	0xFDE
 17605                           postdec2	equ	0xFDD
 17606                           plusw2	equ	0xFDB
 17607                           fsr2h	equ	0xFDA
 17608                           fsr2l	equ	0xFD9
 17609                           status	equ	0xFD8
 17610                           
 17611 ;; *************** function _flash_partial_read *****************
 17612 ;; Defined at:
 17613 ;;		line 452 in file "flash.c"
 17614 ;; Parameters:    Size  Location     Type
 17615 ;;  page            2   39[BANK0 ] unsigned int 
 17616 ;;  start           2   41[BANK0 ] unsigned int 
 17617 ;;  length          2   43[BANK0 ] unsigned int 
 17618 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17619 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17620 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17621 ;;		 -> _root_is_available@first_byte(1), 
 17622 ;; Auto vars:     Size  Location     Type
 17623 ;;		None
 17624 ;; Return value:  Size  Location     Type
 17625 ;;                  1    wreg      void 
 17626 ;; Registers used:
 17627 ;;		wreg, status,2, status,0, cstack
 17628 ;; Tracked objects:
 17629 ;;		On entry : 0/0
 17630 ;;		On exit  : 0/0
 17631 ;;		Unchanged: 0/0
 17632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17633 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17636 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17637 ;;Total ram usage:        8 bytes
 17638 ;; Hardware stack levels used:    1
 17639 ;; Hardware stack levels required when called:   14
 17640 ;; This function calls:
 17641 ;;		__flash_partial_read
 17642 ;; This function is called by:
 17643 ;;		__root_is_available
 17644 ;;		__read_fat
 17645 ;;		_fat_get_file_size
 17646 ;;		_fat_read_from_file_fast
 17647 ;;		_fat_get_file_information
 17648 ;;		__get_first_cluster
 17649 ;; This function uses a non-reentrant model
 17650 ;;
 17651                           
 17652                           	psect	text70
 17653  015AF8                     __ptext70:
 17654                           	opt stack 0
 17655  015AF8                     _flash_partial_read:
 17656                           	opt stack 12
 17657                           
 17658                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17659                           
 17660                           ; BSR set to: 0
 17661                           ;incstack = 0
 17662  015AF8  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17663  015AFC  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17664  015B00  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17665  015B04  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17666  015B08  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17667  015B0C  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17668  015B10  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17669  015B14  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17670  015B18  EC00  F0A1         	call	__flash_partial_read	;wreg free
 17671  015B1C  0012               	return		;funcret
 17672  015B1E                     __end_of_flash_partial_read:
 17673                           	opt stack 0
 17674                           tblptru	equ	0xFF8
 17675                           tblptrh	equ	0xFF7
 17676                           tblptrl	equ	0xFF6
 17677                           tablat	equ	0xFF5
 17678                           prodh	equ	0xFF4
 17679                           prodl	equ	0xFF3
 17680                           postinc0	equ	0xFEE
 17681                           wreg	equ	0xFE8
 17682                           postdec1	equ	0xFE5
 17683                           plusw1	equ	0xFE3
 17684                           fsr1h	equ	0xFE2
 17685                           fsr1l	equ	0xFE1
 17686                           indf2	equ	0xFDF
 17687                           postinc2	equ	0xFDE
 17688                           postdec2	equ	0xFDD
 17689                           plusw2	equ	0xFDB
 17690                           fsr2h	equ	0xFDA
 17691                           fsr2l	equ	0xFD9
 17692                           status	equ	0xFD8
 17693                           
 17694 ;; *************** function __sector_from_file_number *****************
 17695 ;; Defined at:
 17696 ;;		line 53 in file "fat16.c"
 17697 ;; Parameters:    Size  Location     Type
 17698 ;;  file_number     1    wreg     unsigned char 
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;  file_number     1    2[BANK0 ] unsigned char 
 17701 ;;  sector          2    3[BANK0 ] unsigned int 
 17702 ;; Return value:  Size  Location     Type
 17703 ;;                  2    0[BANK0 ] unsigned int 
 17704 ;; Registers used:
 17705 ;;		wreg, status,2, status,0
 17706 ;; Tracked objects:
 17707 ;;		On entry : 0/0
 17708 ;;		On exit  : 0/0
 17709 ;;		Unchanged: 0/0
 17710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17712 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17714 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17715 ;;Total ram usage:        5 bytes
 17716 ;; Hardware stack levels used:    1
 17717 ;; Hardware stack levels required when called:   10
 17718 ;; This function calls:
 17719 ;;		Nothing
 17720 ;; This function is called by:
 17721 ;;		__root_is_available
 17722 ;;		__write_root
 17723 ;;		_fat_get_file_size
 17724 ;;		_fat_get_file_information
 17725 ;;		__delete_root
 17726 ;;		__get_first_cluster
 17727 ;; This function uses a non-reentrant model
 17728 ;;
 17729                           
 17730                           	psect	text71
 17731  01580A                     __ptext71:
 17732                           	opt stack 0
 17733  01580A                     __sector_from_file_number:
 17734                           	opt stack 16
 17735                           
 17736                           ;incstack = 0
 17737                           ;__sector_from_file_number@file_number stored from wreg
 17738  01580A  0100               	movlb	0	; () banked
 17739  01580C  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17740                           
 17741                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17742  01580E  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17743  015812  0100               	movlb	0	; () banked
 17744  015814  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17745                           
 17746                           ; BSR set to: 0
 17747                           ;fat16.c: 57: sector >>= 4;
 17748  015816  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17749  015818  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17750  01581A  0E0F               	movlw	15
 17751  01581C  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17752  01581E  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17753  015820  0BF0               	andlw	240
 17754  015822  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17755  015824  0E0F               	movlw	15
 17756  015826  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17757                           
 17758                           ; BSR set to: 0
 17759                           ;fat16.c: 58: sector += 34;
 17760  015828  0E22               	movlw	34
 17761  01582A  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17762  01582C  0E00               	movlw	0
 17763  01582E  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17764                           
 17765                           ; BSR set to: 0
 17766                           ;fat16.c: 59: return sector;
 17767  015830  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17768  015834  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17769  015838  0012               	return	
 17770  01583A                     __end_of__sector_from_file_number:
 17771                           	opt stack 0
 17772                           tblptru	equ	0xFF8
 17773                           tblptrh	equ	0xFF7
 17774                           tblptrl	equ	0xFF6
 17775                           tablat	equ	0xFF5
 17776                           prodh	equ	0xFF4
 17777                           prodl	equ	0xFF3
 17778                           postinc0	equ	0xFEE
 17779                           wreg	equ	0xFE8
 17780                           postdec1	equ	0xFE5
 17781                           plusw1	equ	0xFE3
 17782                           fsr1h	equ	0xFE2
 17783                           fsr1l	equ	0xFE1
 17784                           indf2	equ	0xFDF
 17785                           postinc2	equ	0xFDE
 17786                           postdec2	equ	0xFDD
 17787                           plusw2	equ	0xFDB
 17788                           fsr2h	equ	0xFDA
 17789                           fsr2l	equ	0xFD9
 17790                           status	equ	0xFD8
 17791                           
 17792 ;; *************** function __offset_from_file_number *****************
 17793 ;; Defined at:
 17794 ;;		line 62 in file "fat16.c"
 17795 ;; Parameters:    Size  Location     Type
 17796 ;;  file_number     1    wreg     unsigned char 
 17797 ;; Auto vars:     Size  Location     Type
 17798 ;;  file_number     1    2[BANK0 ] unsigned char 
 17799 ;;  offset          2    3[BANK0 ] unsigned int 
 17800 ;; Return value:  Size  Location     Type
 17801 ;;                  2    0[BANK0 ] unsigned int 
 17802 ;; Registers used:
 17803 ;;		wreg, status,2, status,0
 17804 ;; Tracked objects:
 17805 ;;		On entry : 0/0
 17806 ;;		On exit  : 0/0
 17807 ;;		Unchanged: 0/0
 17808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17810 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17812 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17813 ;;Total ram usage:        5 bytes
 17814 ;; Hardware stack levels used:    1
 17815 ;; Hardware stack levels required when called:   10
 17816 ;; This function calls:
 17817 ;;		Nothing
 17818 ;; This function is called by:
 17819 ;;		__root_is_available
 17820 ;;		__write_root
 17821 ;;		_fat_get_file_size
 17822 ;;		_fat_get_file_information
 17823 ;;		__delete_root
 17824 ;;		__get_first_cluster
 17825 ;; This function uses a non-reentrant model
 17826 ;;
 17827                           
 17828                           	psect	text72
 17829  015A2E                     __ptext72:
 17830                           	opt stack 0
 17831  015A2E                     __offset_from_file_number:
 17832                           	opt stack 16
 17833                           
 17834                           ; BSR set to: 0
 17835                           ;incstack = 0
 17836                           ;__offset_from_file_number@file_number stored from wreg
 17837  015A2E  0100               	movlb	0	; () banked
 17838  015A30  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17839                           
 17840                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17841  015A32  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17842  015A36  0100               	movlb	0	; () banked
 17843  015A38  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;fat16.c: 66: offset &= 0b1111;
 17847  015A3A  0E0F               	movlw	15
 17848  015A3C  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17849  015A3E  0E00               	movlw	0
 17850  015A40  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;fat16.c: 67: offset <<= 5;
 17854  015A42  0E05               	movlw	5
 17855  015A44                     u11555:
 17856  015A44  90D8               	bcf	status,0,c
 17857  015A46  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17858  015A48  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17859  015A4A  2EE8               	decfsz	wreg,f,c
 17860  015A4C  D7FB               	goto	u11555
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;fat16.c: 68: return offset;
 17864  015A4E  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17865  015A52  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17866  015A56  0012               	return	
 17867  015A58                     __end_of__offset_from_file_number:
 17868                           	opt stack 0
 17869                           tblptru	equ	0xFF8
 17870                           tblptrh	equ	0xFF7
 17871                           tblptrl	equ	0xFF6
 17872                           tablat	equ	0xFF5
 17873                           prodh	equ	0xFF4
 17874                           prodl	equ	0xFF3
 17875                           postinc0	equ	0xFEE
 17876                           wreg	equ	0xFE8
 17877                           postdec1	equ	0xFE5
 17878                           plusw1	equ	0xFE3
 17879                           fsr1h	equ	0xFE2
 17880                           fsr1l	equ	0xFE1
 17881                           indf2	equ	0xFDF
 17882                           postinc2	equ	0xFDE
 17883                           postdec2	equ	0xFDD
 17884                           plusw2	equ	0xFDB
 17885                           fsr2h	equ	0xFDA
 17886                           fsr2l	equ	0xFD9
 17887                           status	equ	0xFD8
 17888                           
 17889 ;; *************** function _fat_find_file *****************
 17890 ;; Defined at:
 17891 ;;		line 518 in file "fat16.c"
 17892 ;; Parameters:    Size  Location     Type
 17893 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17894 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17895 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17896 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17897 ;; Auto vars:     Size  Location     Type
 17898 ;;  offset          2   52[BANK0 ] unsigned int 
 17899 ;;  sector          2   50[BANK0 ] unsigned int 
 17900 ;;  file_number     1   49[BANK0 ] unsigned char 
 17901 ;; Return value:  Size  Location     Type
 17902 ;;                  1    wreg      unsigned char 
 17903 ;; Registers used:
 17904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17905 ;; Tracked objects:
 17906 ;;		On entry : 0/0
 17907 ;;		On exit  : 0/0
 17908 ;;		Unchanged: 0/0
 17909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17911 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17913 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17914 ;;Total ram usage:       11 bytes
 17915 ;; Hardware stack levels used:    1
 17916 ;; Hardware stack levels required when called:   15
 17917 ;; This function calls:
 17918 ;;		_flash_sector_read
 17919 ;;		_strncmp
 17920 ;; This function is called by:
 17921 ;;		_fat_create_file
 17922 ;;		_configFile_read
 17923 ;;		_configFile_write
 17924 ;; This function uses a non-reentrant model
 17925 ;;
 17926                           
 17927                           	psect	text73
 17928  011DD4                     __ptext73:
 17929                           	opt stack 0
 17930  011DD4                     _fat_find_file:
 17931                           	opt stack 13
 17932                           
 17933                           ;fat16.c: 520: uint8_t file_number = 0;
 17934                           
 17935                           ; BSR set to: 0
 17936                           ;incstack = 0
 17937  011DD4  0E00               	movlw	0
 17938  011DD6  0100               	movlb	0	; () banked
 17939  011DD8  6F91               	movwf	fat_find_file@file_number& (0+255),b
 17940                           
 17941                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 17942  011DDA  0E00               	movlw	0
 17943  011DDC  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 17944  011DDE  0E22               	movlw	34
 17945  011DE0  6F92               	movwf	fat_find_file@sector& (0+255),b
 17946                           
 17947                           ; BSR set to: 0
 17948  011DE2  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17949  011DE4  E169               	bnz	l1847
 17950  011DE6  0E26               	movlw	38
 17951  011DE8  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 17952  011DEA  B0D8               	btfsc	status,0,c
 17953  011DEC  D065               	goto	u14110
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 17957                           
 17958                           ; BSR set to: 0
 17959                           
 17960                           ; BSR set to: 0
 17961  011DEE  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 17962  011DF2  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 17963  011DF6  0E00               	movlw	low _buffer
 17964  011DF8  6F89               	movwf	flash_sector_read@data& (0+255),b
 17965  011DFA  0E0A               	movlw	high _buffer
 17966  011DFC  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17967  011DFE  EC68  F0AD         	call	_flash_sector_read	;wreg free
 17968                           
 17969                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 17970  011E02  0E00               	movlw	0
 17971  011E04  0100               	movlb	0	; () banked
 17972  011E06  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 17973  011E08  0E00               	movlw	0
 17974  011E0A  6F94               	movwf	fat_find_file@offset& (0+255),b
 17975  011E0C                     l14986:
 17976                           
 17977                           ; BSR set to: 0
 17978  011E0C  0E02               	movlw	2
 17979  011E0E  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 17980  011E10  B0D8               	btfsc	status,0,c
 17981  011E12  D04D               	goto	u14100
 17982                           
 17983                           ; BSR set to: 0
 17984                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 17985                           
 17986                           ; BSR set to: 0
 17987                           
 17988                           ; BSR set to: 0
 17989  011E14  0E00               	movlw	low _buffer
 17990  011E16  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17991  011E18  6ED9               	movwf	fsr2l,c
 17992  011E1A  0E0A               	movlw	high _buffer
 17993  011E1C  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17994  011E1E  6EDA               	movwf	fsr2h,c
 17995  011E20  50DF               	movf	indf2,w,c
 17996  011E22  A4D8               	btfss	status,2,c
 17997  011E24  D002               	goto	l1850
 17998                           
 17999                           ; BSR set to: 0
 18000                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 18001  011E26  0EFF               	movlw	255
 18002                           
 18003                           ; BSR set to: 0
 18004  011E28  0012               	return	
 18005  011E2A                     l1850:
 18006                           
 18007                           ; BSR set to: 0
 18008                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 18009                           
 18010                           ; BSR set to: 0
 18011  011E2A  0E00               	movlw	low _buffer
 18012  011E2C  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18013  011E2E  6ED9               	movwf	fsr2l,c
 18014  011E30  0E0A               	movlw	high _buffer
 18015  011E32  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18016  011E34  6EDA               	movwf	fsr2h,c
 18017  011E36  0EE5               	movlw	229
 18018  011E38  18DE               	xorwf	postinc2,w,c
 18019  011E3A  B4D8               	btfsc	status,2,c
 18020  011E3C  D032               	goto	l1856
 18021                           
 18022                           ; BSR set to: 0
 18023                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18024                           
 18025                           ; BSR set to: 0
 18026                           
 18027                           ; BSR set to: 0
 18028                           ;fat16.c: 538: {;fat16.c: 542: }
 18029  011E3E  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18030  011E42  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18031  011E46  0E00               	movlw	low _buffer
 18032  011E48  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18033  011E4A  6F62               	movwf	strncmp@s2& (0+255),b
 18034  011E4C  0E0A               	movlw	high _buffer
 18035  011E4E  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18036  011E50  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18037  011E52  0E00               	movlw	0
 18038  011E54  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18039  011E56  0E08               	movlw	8
 18040  011E58  6F64               	movwf	strncmp@len& (0+255),b
 18041  011E5A  ECCA  F09F         	call	_strncmp	;wreg free
 18042  011E5E  0100               	movlb	0	; () banked
 18043  011E60  5160               	movf	?_strncmp& (0+255),w,b
 18044  011E62  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18045  011E64  A4D8               	btfss	status,2,c
 18046  011E66  D01D               	goto	l1856
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18050  011E68  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18051  011E6C  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18052  011E70  0E08               	movlw	8
 18053  011E72  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18054  011E74  6F8F               	movwf	??_fat_find_file& (0+255),b
 18055  011E76  0E00               	movlw	0
 18056  011E78  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18057  011E7A  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18058  011E7C  0E00               	movlw	low _buffer
 18059  011E7E  258F               	addwf	??_fat_find_file& (0+255),w,b
 18060  011E80  6F62               	movwf	strncmp@s2& (0+255),b
 18061  011E82  0E0A               	movlw	high _buffer
 18062  011E84  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18063  011E86  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18064  011E88  0E00               	movlw	0
 18065  011E8A  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18066  011E8C  0E03               	movlw	3
 18067  011E8E  6F64               	movwf	strncmp@len& (0+255),b
 18068  011E90  ECCA  F09F         	call	_strncmp	;wreg free
 18069  011E94  0100               	movlb	0	; () banked
 18070  011E96  5160               	movf	?_strncmp& (0+255),w,b
 18071  011E98  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18072  011E9A  A4D8               	btfss	status,2,c
 18073  011E9C  D002               	goto	l1856
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 18077  011E9E  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18078                           
 18079                           ; BSR set to: 0
 18080  011EA0  0012               	return	
 18081  011EA2                     l1856:
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 18085                           
 18086                           ; BSR set to: 0
 18087                           
 18088                           ; BSR set to: 0
 18089                           
 18090                           ; BSR set to: 0
 18091                           
 18092                           ; BSR set to: 0
 18093  011EA2  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18094                           
 18095                           ; BSR set to: 0
 18096  011EA4  0E20               	movlw	32
 18097  011EA6  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18098  011EA8  0E00               	movlw	0
 18099  011EAA  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18100  011EAC  D7AF               	goto	l14986
 18101  011EAE                     u14100:
 18102                           
 18103                           ; BSR set to: 0
 18104                           
 18105                           ; BSR set to: 0
 18106  011EAE  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18107  011EB0  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18108                           
 18109                           ; BSR set to: 0
 18110  011EB2  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18111  011EB4  E101               	bnz	l15020
 18112  011EB6  D797               	goto	L4
 18113  011EB8                     u14110:
 18114  011EB8                     l1847:
 18115  011EB8                     l15020:
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 18119  011EB8  0EFF               	movlw	255
 18120  011EBA  0012               	return	
 18121  011EBC                     __end_of_fat_find_file:
 18122                           	opt stack 0
 18123                           tblptru	equ	0xFF8
 18124                           tblptrh	equ	0xFF7
 18125                           tblptrl	equ	0xFF6
 18126                           tablat	equ	0xFF5
 18127                           prodh	equ	0xFF4
 18128                           prodl	equ	0xFF3
 18129                           postinc0	equ	0xFEE
 18130                           wreg	equ	0xFE8
 18131                           postdec1	equ	0xFE5
 18132                           plusw1	equ	0xFE3
 18133                           fsr1h	equ	0xFE2
 18134                           fsr1l	equ	0xFE1
 18135                           indf2	equ	0xFDF
 18136                           postinc2	equ	0xFDE
 18137                           postdec2	equ	0xFDD
 18138                           plusw2	equ	0xFDB
 18139                           fsr2h	equ	0xFDA
 18140                           fsr2l	equ	0xFD9
 18141                           status	equ	0xFD8
 18142                           
 18143 ;; *************** function _strncmp *****************
 18144 ;; Defined at:
 18145 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18146 ;; Parameters:    Size  Location     Type
 18147 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18148 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18149 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18150 ;;		 -> buffer(512), 
 18151 ;;  len             2    4[BANK0 ] unsigned int 
 18152 ;; Auto vars:     Size  Location     Type
 18153 ;;		None
 18154 ;; Return value:  Size  Location     Type
 18155 ;;                  2    0[BANK0 ] int 
 18156 ;; Registers used:
 18157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18158 ;; Tracked objects:
 18159 ;;		On entry : 0/0
 18160 ;;		On exit  : 0/0
 18161 ;;		Unchanged: 0/0
 18162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18163 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18165 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18166 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18167 ;;Total ram usage:        9 bytes
 18168 ;; Hardware stack levels used:    1
 18169 ;; Hardware stack levels required when called:   10
 18170 ;; This function calls:
 18171 ;;		Nothing
 18172 ;; This function is called by:
 18173 ;;		_fat_find_file
 18174 ;; This function uses a non-reentrant model
 18175 ;;
 18176                           
 18177                           	psect	text74
 18178  013F94                     __ptext74:
 18179                           	opt stack 0
 18180  013F94                     _strncmp:
 18181                           	opt stack 17
 18182                           
 18183                           ; BSR set to: 0
 18184                           ;incstack = 0
 18185  013F94  D031               	goto	l3832
 18186  013F96                     l14014:
 18187  013F96  C060  FFD9         	movff	strncmp@s1,fsr2l
 18188  013F9A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18189  013F9E  50DF               	movf	indf2,w,c
 18190  013FA0  B4D8               	btfsc	status,2,c
 18191  013FA2  D00C               	goto	u12690
 18192  013FA4  C062  FFD9         	movff	strncmp@s2,fsr2l
 18193  013FA8  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18194  013FAC  C060  FFE1         	movff	strncmp@s1,fsr1l
 18195  013FB0  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18196  013FB4  50DE               	movf	postinc2,w,c
 18197  013FB6  18E6               	xorwf	postinc1,w,c
 18198  013FB8  B4D8               	btfsc	status,2,c
 18199  013FBA  D019               	goto	l3834
 18200  013FBC                     u12690:
 18201  013FBC  C062  FFD9         	movff	strncmp@s2,fsr2l
 18202  013FC0  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18203  013FC4  50DF               	movf	indf2,w,c
 18204  013FC6  0100               	movlb	0	; () banked
 18205  013FC8  6F66               	movwf	??_strncmp& (0+255),b
 18206  013FCA  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18207  013FCC  1F66               	comf	??_strncmp& (0+255),f,b
 18208  013FCE  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18209  013FD0  4B66               	infsnz	??_strncmp& (0+255),f,b
 18210  013FD2  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18211  013FD4  C060  FFD9         	movff	strncmp@s1,fsr2l
 18212  013FD8  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18213  013FDC  50DF               	movf	indf2,w,c
 18214  013FDE  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18215  013FE0  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18216  013FE2  2566               	addwf	??_strncmp& (0+255),w,b
 18217  013FE4  6F60               	movwf	?_strncmp& (0+255),b
 18218  013FE6  0E00               	movlw	0
 18219  013FE8  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18220  013FEA  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18221                           
 18222                           ; BSR set to: 0
 18223  013FEC  0012               	return	
 18224  013FEE                     l3834:
 18225                           
 18226                           ; BSR set to: 0
 18227  013FEE  0100               	movlb	0	; () banked
 18228  013FF0  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18229  013FF2  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18230  013FF4  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18231  013FF6  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18232  013FF8                     l3832:
 18233                           
 18234                           ; BSR set to: 0
 18235  013FF8  0100               	movlb	0	; () banked
 18236  013FFA  0764               	decf	strncmp@len& (0+255),f,b
 18237  013FFC  A0D8               	btfss	status,0,c
 18238  013FFE  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18239  014000  2964               	incf	strncmp@len& (0+255),w,b
 18240  014002  E1C9               	bnz	l14014
 18241  014004  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18242  014006  A4D8               	btfss	status,2,c
 18243  014008  D7C6               	goto	l3833
 18244                           
 18245                           ; BSR set to: 0
 18246                           
 18247                           ; BSR set to: 0
 18248  01400A  0E00               	movlw	0
 18249  01400C  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18250  01400E  0E00               	movlw	0
 18251  014010  6F60               	movwf	?_strncmp& (0+255),b
 18252  014012  0012               	return	
 18253  014014                     __end_of_strncmp:
 18254                           	opt stack 0
 18255                           tblptru	equ	0xFF8
 18256                           tblptrh	equ	0xFF7
 18257                           tblptrl	equ	0xFF6
 18258                           tablat	equ	0xFF5
 18259                           prodh	equ	0xFF4
 18260                           prodl	equ	0xFF3
 18261                           postinc0	equ	0xFEE
 18262                           wreg	equ	0xFE8
 18263                           postinc1	equ	0xFE6
 18264                           postdec1	equ	0xFE5
 18265                           plusw1	equ	0xFE3
 18266                           fsr1h	equ	0xFE2
 18267                           fsr1l	equ	0xFE1
 18268                           indf2	equ	0xFDF
 18269                           postinc2	equ	0xFDE
 18270                           postdec2	equ	0xFDD
 18271                           plusw2	equ	0xFDB
 18272                           fsr2h	equ	0xFDA
 18273                           fsr2l	equ	0xFD9
 18274                           status	equ	0xFD8
 18275                           
 18276 ;; *************** function __parse_item *****************
 18277 ;; Defined at:
 18278 ;;		line 110 in file "config_file.c"
 18279 ;; Parameters:    Size  Location     Type
 18280 ;;  item_string     2   57[BANK0 ] PTR unsigned char 
 18281 ;;		 -> configFile_read@item_string(31), 
 18282 ;;  value_string    2   59[BANK0 ] PTR unsigned char 
 18283 ;;		 -> configFile_read@value_string(12), 
 18284 ;; Auto vars:     Size  Location     Type
 18285 ;;		None
 18286 ;; Return value:  Size  Location     Type
 18287 ;;                  1    wreg      unsigned char 
 18288 ;; Registers used:
 18289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18290 ;; Tracked objects:
 18291 ;;		On entry : 0/0
 18292 ;;		On exit  : 0/0
 18293 ;;		Unchanged: 0/0
 18294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18295 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18298 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18299 ;;Total ram usage:        4 bytes
 18300 ;; Hardware stack levels used:    1
 18301 ;; Hardware stack levels required when called:   12
 18302 ;; This function calls:
 18303 ;;		__steps_from_degrees
 18304 ;;		_atoi
 18305 ;;		_atol
 18306 ;;		_stricmp
 18307 ;; This function is called by:
 18308 ;;		_configFile_read
 18309 ;; This function uses a non-reentrant model
 18310 ;;
 18311                           
 18312                           	psect	text75
 18313  00C172                     __ptext75:
 18314                           	opt stack 0
 18315  00C172                     __parse_item:
 18316                           	opt stack 16
 18317                           
 18318                           ;config_file.c: 112: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18319                           
 18320                           ; BSR set to: 0
 18321                           ;incstack = 0
 18322  00C172  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18323  00C176  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18324  00C17A  0EFD               	movlw	low _full_circle_in_steps_string
 18325  00C17C  0100               	movlb	0	; () banked
 18326  00C17E  6F63               	movwf	stricmp@s2& (0+255),b
 18327  00C180  0EA1               	movlw	high _full_circle_in_steps_string
 18328  00C182  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18329  00C184  EC07  F0A5         	call	_stricmp	;wreg free
 18330  00C188  0100               	movlb	0	; () banked
 18331  00C18A  5161               	movf	?_stricmp& (0+255),w,b
 18332  00C18C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18333  00C18E  A4D8               	btfss	status,2,c
 18334  00C190  D00F               	goto	l3038
 18335                           
 18336                           ; BSR set to: 0
 18337                           ;config_file.c: 113: {;config_file.c: 114: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18338  00C192  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18339  00C196  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18340  00C19A  EC0C  F08C         	call	_atol	;wreg free
 18341  00C19E  C06C  F197         	movff	?_atol,_config
 18342  00C1A2  C06D  F198         	movff	?_atol+1,_config+1
 18343  00C1A6  C06E  F199         	movff	?_atol+2,_config+2
 18344  00C1AA  C06F  F19A         	movff	?_atol+3,_config+3
 18345                           
 18346                           ;config_file.c: 115: return 1;;	Return value of __parse_item is never used
 18347  00C1AE  0012               	return	
 18348  00C1B0                     l3038:
 18349                           
 18350                           ;config_file.c: 116: };config_file.c: 118: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18351  00C1B0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18352  00C1B4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18353  00C1B8  0E12               	movlw	low _overshoot_in_steps_string
 18354  00C1BA  0100               	movlb	0	; () banked
 18355  00C1BC  6F63               	movwf	stricmp@s2& (0+255),b
 18356  00C1BE  0EA2               	movlw	high _overshoot_in_steps_string
 18357  00C1C0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18358  00C1C2  EC07  F0A5         	call	_stricmp	;wreg free
 18359  00C1C6  0100               	movlb	0	; () banked
 18360  00C1C8  5161               	movf	?_stricmp& (0+255),w,b
 18361  00C1CA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18362  00C1CC  A4D8               	btfss	status,2,c
 18363  00C1CE  D00B               	goto	l3040
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;config_file.c: 119: {;config_file.c: 120: config.overshoot_in_steps = atoi(value_string
      +                          );
 18367  00C1D0  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18368  00C1D4  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18369  00C1D8  ECE0  F092         	call	_atoi	;wreg free
 18370  00C1DC  C066  F19C         	movff	?_atoi,_config+5
 18371  00C1E0  C067  F19D         	movff	?_atoi+1,_config+6
 18372                           
 18373                           ;config_file.c: 121: return 2;;	Return value of __parse_item is never used
 18374  00C1E4  0012               	return	
 18375  00C1E6                     l3040:
 18376                           
 18377                           ;config_file.c: 122: };config_file.c: 124: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18378  00C1E6  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18379  00C1EA  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18380  00C1EE  0E49               	movlw	low _inverse_direction_string
 18381  00C1F0  0100               	movlb	0	; () banked
 18382  00C1F2  6F63               	movwf	stricmp@s2& (0+255),b
 18383  00C1F4  0EA2               	movlw	high _inverse_direction_string
 18384  00C1F6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18385  00C1F8  EC07  F0A5         	call	_stricmp	;wreg free
 18386  00C1FC  0100               	movlb	0	; () banked
 18387  00C1FE  5161               	movf	?_stricmp& (0+255),w,b
 18388  00C200  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18389  00C202  A4D8               	btfss	status,2,c
 18390  00C204  D00B               	goto	l3041
 18391                           
 18392                           ; BSR set to: 0
 18393                           ;config_file.c: 125: {;config_file.c: 126: config.inverse_direction = atol(value_string)
      +                          ;
 18394  00C206  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18395  00C20A  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18396  00C20E  EC0C  F08C         	call	_atol	;wreg free
 18397  00C212  0100               	movlb	0	; () banked
 18398  00C214  516C               	movf	?_atol& (0+255),w,b
 18399  00C216  0101               	movlb	1	; () banked
 18400  00C218  6F9B               	movwf	(_config+4)& (0+255),b
 18401                           
 18402                           ; BSR set to: 1
 18403                           ;config_file.c: 127: return 3;;	Return value of __parse_item is never used
 18404  00C21A  0012               	return	
 18405  00C21C                     l3041:
 18406                           
 18407                           ;config_file.c: 128: };config_file.c: 130: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18408                           
 18409                           ; BSR set to: 1
 18410  00C21C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18411  00C220  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18412  00C224  0E12               	movlw	low _overshoot_in_steps_string
 18413  00C226  0100               	movlb	0	; () banked
 18414  00C228  6F63               	movwf	stricmp@s2& (0+255),b
 18415  00C22A  0EA2               	movlw	high _overshoot_in_steps_string
 18416  00C22C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18417  00C22E  EC07  F0A5         	call	_stricmp	;wreg free
 18418  00C232  0100               	movlb	0	; () banked
 18419  00C234  5161               	movf	?_stricmp& (0+255),w,b
 18420  00C236  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18421  00C238  A4D8               	btfss	status,2,c
 18422  00C23A  D00B               	goto	l3042
 18423                           
 18424                           ; BSR set to: 0
 18425                           ;config_file.c: 131: {;config_file.c: 132: config.overshoot_in_steps = atoi(value_string
      +                          );
 18426  00C23C  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18427  00C240  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18428  00C244  ECE0  F092         	call	_atoi	;wreg free
 18429  00C248  C066  F19C         	movff	?_atoi,_config+5
 18430  00C24C  C067  F19D         	movff	?_atoi+1,_config+6
 18431                           
 18432                           ;config_file.c: 133: return 4;;	Return value of __parse_item is never used
 18433  00C250  0012               	return	
 18434  00C252                     l3042:
 18435                           
 18436                           ;config_file.c: 134: };config_file.c: 136: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18437  00C252  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18438  00C256  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18439  00C25A  0EBB               	movlw	low _overshoot_cost_in_steps_string
 18440  00C25C  0100               	movlb	0	; () banked
 18441  00C25E  6F63               	movwf	stricmp@s2& (0+255),b
 18442  00C260  0EA1               	movlw	high _overshoot_cost_in_steps_string
 18443  00C262  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18444  00C264  EC07  F0A5         	call	_stricmp	;wreg free
 18445  00C268  0100               	movlb	0	; () banked
 18446  00C26A  5161               	movf	?_stricmp& (0+255),w,b
 18447  00C26C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18448  00C26E  A4D8               	btfss	status,2,c
 18449  00C270  D00B               	goto	l3043
 18450                           
 18451                           ; BSR set to: 0
 18452                           ;config_file.c: 137: {;config_file.c: 138: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18453  00C272  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18454  00C276  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18455  00C27A  ECE0  F092         	call	_atoi	;wreg free
 18456  00C27E  C066  F19E         	movff	?_atoi,_config+7
 18457  00C282  C067  F19F         	movff	?_atoi+1,_config+8
 18458                           
 18459                           ;config_file.c: 139: return 5;;	Return value of __parse_item is never used
 18460  00C286  0012               	return	
 18461  00C288                     l3043:
 18462                           
 18463                           ;config_file.c: 140: };config_file.c: 142: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18464  00C288  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18465  00C28C  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18466  00C290  0E97               	movlw	low _minimum_speed_string
 18467  00C292  0100               	movlb	0	; () banked
 18468  00C294  6F63               	movwf	stricmp@s2& (0+255),b
 18469  00C296  0EA2               	movlw	high _minimum_speed_string
 18470  00C298  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18471  00C29A  EC07  F0A5         	call	_stricmp	;wreg free
 18472  00C29E  0100               	movlb	0	; () banked
 18473  00C2A0  5161               	movf	?_stricmp& (0+255),w,b
 18474  00C2A2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18475  00C2A4  A4D8               	btfss	status,2,c
 18476  00C2A6  D00B               	goto	l3044
 18477                           
 18478                           ; BSR set to: 0
 18479                           ;config_file.c: 143: {;config_file.c: 144: config.minimum_speed = atoi(value_string);
 18480  00C2A8  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18481  00C2AC  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18482  00C2B0  ECE0  F092         	call	_atoi	;wreg free
 18483  00C2B4  C066  F1A0         	movff	?_atoi,_config+9
 18484  00C2B8  C067  F1A1         	movff	?_atoi+1,_config+10
 18485                           
 18486                           ;config_file.c: 145: return 6;;	Return value of __parse_item is never used
 18487  00C2BC  0012               	return	
 18488  00C2BE                     l3044:
 18489                           
 18490                           ;config_file.c: 146: };config_file.c: 148: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18491  00C2BE  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18492  00C2C2  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18493  00C2C6  0E89               	movlw	low _maximum_speed_string
 18494  00C2C8  0100               	movlb	0	; () banked
 18495  00C2CA  6F63               	movwf	stricmp@s2& (0+255),b
 18496  00C2CC  0EA2               	movlw	high _maximum_speed_string
 18497  00C2CE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18498  00C2D0  EC07  F0A5         	call	_stricmp	;wreg free
 18499  00C2D4  0100               	movlb	0	; () banked
 18500  00C2D6  5161               	movf	?_stricmp& (0+255),w,b
 18501  00C2D8  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18502  00C2DA  A4D8               	btfss	status,2,c
 18503  00C2DC  D00B               	goto	l3045
 18504                           
 18505                           ; BSR set to: 0
 18506                           ;config_file.c: 149: {;config_file.c: 150: config.maximum_speed = atoi(value_string);
 18507  00C2DE  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18508  00C2E2  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18509  00C2E6  ECE0  F092         	call	_atoi	;wreg free
 18510  00C2EA  C066  F1A2         	movff	?_atoi,_config+11
 18511  00C2EE  C067  F1A3         	movff	?_atoi+1,_config+12
 18512                           
 18513                           ;config_file.c: 151: return 7;;	Return value of __parse_item is never used
 18514  00C2F2  0012               	return	
 18515  00C2F4                     l3045:
 18516                           
 18517                           ;config_file.c: 152: };config_file.c: 154: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18518  00C2F4  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18519  00C2F8  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18520  00C2FC  0E37               	movlw	low _initial_speed_arc_string
 18521  00C2FE  0100               	movlb	0	; () banked
 18522  00C300  6F63               	movwf	stricmp@s2& (0+255),b
 18523  00C302  0EA2               	movlw	high _initial_speed_arc_string
 18524  00C304  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18525  00C306  EC07  F0A5         	call	_stricmp	;wreg free
 18526  00C30A  0100               	movlb	0	; () banked
 18527  00C30C  5161               	movf	?_stricmp& (0+255),w,b
 18528  00C30E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18529  00C310  A4D8               	btfss	status,2,c
 18530  00C312  D00B               	goto	l3046
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;config_file.c: 155: {;config_file.c: 156: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18534  00C314  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18535  00C318  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18536  00C31C  ECE0  F092         	call	_atoi	;wreg free
 18537  00C320  C066  F1A4         	movff	?_atoi,_config+13
 18538  00C324  C067  F1A5         	movff	?_atoi+1,_config+14
 18539                           
 18540                           ;config_file.c: 157: return 8;;	Return value of __parse_item is never used
 18541  00C328  0012               	return	
 18542  00C32A                     l3046:
 18543                           
 18544                           ;config_file.c: 158: };config_file.c: 160: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18545  00C32A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18546  00C32E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18547  00C332  0E25               	movlw	low _maximum_speed_arc_string
 18548  00C334  0100               	movlb	0	; () banked
 18549  00C336  6F63               	movwf	stricmp@s2& (0+255),b
 18550  00C338  0EA2               	movlw	high _maximum_speed_arc_string
 18551  00C33A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18552  00C33C  EC07  F0A5         	call	_stricmp	;wreg free
 18553  00C340  0100               	movlb	0	; () banked
 18554  00C342  5161               	movf	?_stricmp& (0+255),w,b
 18555  00C344  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18556  00C346  A4D8               	btfss	status,2,c
 18557  00C348  D00B               	goto	l3047
 18558                           
 18559                           ; BSR set to: 0
 18560                           ;config_file.c: 161: {;config_file.c: 162: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18561  00C34A  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18562  00C34E  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18563  00C352  ECE0  F092         	call	_atoi	;wreg free
 18564  00C356  C066  F1A6         	movff	?_atoi,_config+15
 18565  00C35A  C067  F1A7         	movff	?_atoi+1,_config+16
 18566                           
 18567                           ;config_file.c: 163: return 9;;	Return value of __parse_item is never used
 18568  00C35E  0012               	return	
 18569  00C360                     l3047:
 18570                           
 18571                           ;config_file.c: 164: };config_file.c: 166: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18572  00C360  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18573  00C364  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18574  00C368  0EE8               	movlw	low _initial_speed_manual_string
 18575  00C36A  0100               	movlb	0	; () banked
 18576  00C36C  6F63               	movwf	stricmp@s2& (0+255),b
 18577  00C36E  0EA1               	movlw	high _initial_speed_manual_string
 18578  00C370  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18579  00C372  EC07  F0A5         	call	_stricmp	;wreg free
 18580  00C376  0100               	movlb	0	; () banked
 18581  00C378  5161               	movf	?_stricmp& (0+255),w,b
 18582  00C37A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18583  00C37C  A4D8               	btfss	status,2,c
 18584  00C37E  D00B               	goto	l3048
 18585                           
 18586                           ; BSR set to: 0
 18587                           ;config_file.c: 167: {;config_file.c: 168: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18588  00C380  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18589  00C384  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18590  00C388  ECE0  F092         	call	_atoi	;wreg free
 18591  00C38C  C066  F1A8         	movff	?_atoi,_config+17
 18592  00C390  C067  F1A9         	movff	?_atoi+1,_config+18
 18593                           
 18594                           ;config_file.c: 169: return 10;;	Return value of __parse_item is never used
 18595  00C394  0012               	return	
 18596  00C396                     l3048:
 18597                           
 18598                           ;config_file.c: 170: };config_file.c: 172: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18599  00C396  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18600  00C39A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18601  00C39E  0ED3               	movlw	low _maximum_speed_manual_string
 18602  00C3A0  0100               	movlb	0	; () banked
 18603  00C3A2  6F63               	movwf	stricmp@s2& (0+255),b
 18604  00C3A4  0EA1               	movlw	high _maximum_speed_manual_string
 18605  00C3A6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18606  00C3A8  EC07  F0A5         	call	_stricmp	;wreg free
 18607  00C3AC  0100               	movlb	0	; () banked
 18608  00C3AE  5161               	movf	?_stricmp& (0+255),w,b
 18609  00C3B0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18610  00C3B2  A4D8               	btfss	status,2,c
 18611  00C3B4  D00B               	goto	l3049
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;config_file.c: 173: {;config_file.c: 174: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18615  00C3B6  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18616  00C3BA  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18617  00C3BE  ECE0  F092         	call	_atoi	;wreg free
 18618  00C3C2  C066  F1AA         	movff	?_atoi,_config+19
 18619  00C3C6  C067  F1AB         	movff	?_atoi+1,_config+20
 18620                           
 18621                           ;config_file.c: 175: return 11;;	Return value of __parse_item is never used
 18622  00C3CA  0012               	return	
 18623  00C3CC                     l3049:
 18624                           
 18625                           ;config_file.c: 176: };config_file.c: 178: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18626  00C3CC  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18627  00C3D0  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18628  00C3D4  0E7B               	movlw	low _beep_duration_string
 18629  00C3D6  0100               	movlb	0	; () banked
 18630  00C3D8  6F63               	movwf	stricmp@s2& (0+255),b
 18631  00C3DA  0EA2               	movlw	high _beep_duration_string
 18632  00C3DC  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18633  00C3DE  EC07  F0A5         	call	_stricmp	;wreg free
 18634  00C3E2  0100               	movlb	0	; () banked
 18635  00C3E4  5161               	movf	?_stricmp& (0+255),w,b
 18636  00C3E6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18637  00C3E8  A4D8               	btfss	status,2,c
 18638  00C3EA  D00B               	goto	l3050
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;config_file.c: 179: {;config_file.c: 180: config.beep_duration = atoi(value_string);
 18642  00C3EC  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18643  00C3F0  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18644  00C3F4  ECE0  F092         	call	_atoi	;wreg free
 18645  00C3F8  0100               	movlb	0	; () banked
 18646  00C3FA  5166               	movf	?_atoi& (0+255),w,b
 18647  00C3FC  0101               	movlb	1	; () banked
 18648  00C3FE  6FAC               	movwf	(_config+21)& (0+255),b
 18649                           
 18650                           ; BSR set to: 1
 18651                           ;config_file.c: 181: return 12;;	Return value of __parse_item is never used
 18652  00C400  0012               	return	
 18653  00C402                     l3050:
 18654                           
 18655                           ;config_file.c: 182: };config_file.c: 184: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18656                           
 18657                           ; BSR set to: 1
 18658  00C402  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18659  00C406  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18660  00C40A  0EA5               	movlw	low _use_cw_limit_string
 18661  00C40C  0100               	movlb	0	; () banked
 18662  00C40E  6F63               	movwf	stricmp@s2& (0+255),b
 18663  00C410  0EA2               	movlw	high _use_cw_limit_string
 18664  00C412  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18665  00C414  EC07  F0A5         	call	_stricmp	;wreg free
 18666  00C418  0100               	movlb	0	; () banked
 18667  00C41A  5161               	movf	?_stricmp& (0+255),w,b
 18668  00C41C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18669  00C41E  A4D8               	btfss	status,2,c
 18670  00C420  D00B               	goto	l3051
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;config_file.c: 185: {;config_file.c: 186: config.use_cw_limit = atol(value_string);
 18674  00C422  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18675  00C426  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18676  00C42A  EC0C  F08C         	call	_atol	;wreg free
 18677  00C42E  0100               	movlb	0	; () banked
 18678  00C430  516C               	movf	?_atol& (0+255),w,b
 18679  00C432  0101               	movlb	1	; () banked
 18680  00C434  6FAD               	movwf	(_config+22)& (0+255),b
 18681                           
 18682                           ; BSR set to: 1
 18683                           ;config_file.c: 187: return 13;;	Return value of __parse_item is never used
 18684  00C436  0012               	return	
 18685  00C438                     l3051:
 18686                           
 18687                           ;config_file.c: 188: };config_file.c: 190: if(stricmp(item_string, cw_limit_string)==0)
 18688                           
 18689                           ; BSR set to: 1
 18690  00C438  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18691  00C43C  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18692  00C440  0EBC               	movlw	low _cw_limit_string
 18693  00C442  0100               	movlb	0	; () banked
 18694  00C444  6F63               	movwf	stricmp@s2& (0+255),b
 18695  00C446  0EA2               	movlw	high _cw_limit_string
 18696  00C448  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18697  00C44A  EC07  F0A5         	call	_stricmp	;wreg free
 18698  00C44E  0100               	movlb	0	; () banked
 18699  00C450  5161               	movf	?_stricmp& (0+255),w,b
 18700  00C452  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18701  00C454  A4D8               	btfss	status,2,c
 18702  00C456  D021               	goto	l3052
 18703                           
 18704                           ; BSR set to: 0
 18705                           ;config_file.c: 191: {;config_file.c: 192: config.cw_limit = atol(value_string);
 18706  00C458  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18707  00C45C  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18708  00C460  EC0C  F08C         	call	_atol	;wreg free
 18709  00C464  C06C  F1AE         	movff	?_atol,_config+23
 18710  00C468  C06D  F1AF         	movff	?_atol+1,_config+24
 18711  00C46C  C06E  F1B0         	movff	?_atol+2,_config+25
 18712  00C470  C06F  F1B1         	movff	?_atol+3,_config+26
 18713                           
 18714                           ;config_file.c: 193: config.cw_limit_in_steps = _steps_from_degrees(config.cw_limit);
 18715  00C474  C1AE  F091         	movff	_config+23,__steps_from_degrees@degrees
 18716  00C478  C1AF  F092         	movff	_config+24,__steps_from_degrees@degrees+1
 18717  00C47C  C1B0  F093         	movff	_config+25,__steps_from_degrees@degrees+2
 18718  00C480  C1B1  F094         	movff	_config+26,__steps_from_degrees@degrees+3
 18719  00C484  ECA6  F077         	call	__steps_from_degrees	;wreg free
 18720  00C488  C091  F1B2         	movff	?__steps_from_degrees,_config+27
 18721  00C48C  C092  F1B3         	movff	?__steps_from_degrees+1,_config+28
 18722  00C490  C093  F1B4         	movff	?__steps_from_degrees+2,_config+29
 18723  00C494  C094  F1B5         	movff	?__steps_from_degrees+3,_config+30
 18724                           
 18725                           ;config_file.c: 194: return 14;;	Return value of __parse_item is never used
 18726  00C498  0012               	return	
 18727  00C49A                     l3052:
 18728                           
 18729                           ;config_file.c: 195: };config_file.c: 197: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18730  00C49A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18731  00C49E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18732  00C4A2  0E6D               	movlw	low _use_ccw_limit_string
 18733  00C4A4  0100               	movlb	0	; () banked
 18734  00C4A6  6F63               	movwf	stricmp@s2& (0+255),b
 18735  00C4A8  0EA2               	movlw	high _use_ccw_limit_string
 18736  00C4AA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18737  00C4AC  EC07  F0A5         	call	_stricmp	;wreg free
 18738  00C4B0  0100               	movlb	0	; () banked
 18739  00C4B2  5161               	movf	?_stricmp& (0+255),w,b
 18740  00C4B4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18741  00C4B6  A4D8               	btfss	status,2,c
 18742  00C4B8  D00B               	goto	l3053
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;config_file.c: 198: {;config_file.c: 199: config.use_ccw_limit = atol(value_string);
 18746  00C4BA  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18747  00C4BE  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18748  00C4C2  EC0C  F08C         	call	_atol	;wreg free
 18749  00C4C6  0100               	movlb	0	; () banked
 18750  00C4C8  516C               	movf	?_atol& (0+255),w,b
 18751  00C4CA  0101               	movlb	1	; () banked
 18752  00C4CC  6FB6               	movwf	(_config+31)& (0+255),b
 18753                           
 18754                           ; BSR set to: 1
 18755                           ;config_file.c: 200: return 15;;	Return value of __parse_item is never used
 18756  00C4CE  0012               	return	
 18757  00C4D0                     l3053:
 18758                           
 18759                           ;config_file.c: 201: };config_file.c: 203: if(stricmp(item_string, ccw_limit_string)==0)
 18760                           
 18761                           ; BSR set to: 1
 18762  00C4D0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18763  00C4D4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18764  00C4D8  0EB2               	movlw	low _ccw_limit_string
 18765  00C4DA  0100               	movlb	0	; () banked
 18766  00C4DC  6F63               	movwf	stricmp@s2& (0+255),b
 18767  00C4DE  0EA2               	movlw	high _ccw_limit_string
 18768  00C4E0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18769  00C4E2  EC07  F0A5         	call	_stricmp	;wreg free
 18770  00C4E6  0100               	movlb	0	; () banked
 18771  00C4E8  5161               	movf	?_stricmp& (0+255),w,b
 18772  00C4EA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18773  00C4EC  A4D8               	btfss	status,2,c
 18774  00C4EE  0012               	return	
 18775                           
 18776                           ; BSR set to: 0
 18777                           ;config_file.c: 204: {;config_file.c: 205: config.ccw_limit = atol(value_string);
 18778  00C4F0  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18779  00C4F4  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18780  00C4F8  EC0C  F08C         	call	_atol	;wreg free
 18781  00C4FC  C06C  F1B7         	movff	?_atol,_config+32
 18782  00C500  C06D  F1B8         	movff	?_atol+1,_config+33
 18783  00C504  C06E  F1B9         	movff	?_atol+2,_config+34
 18784  00C508  C06F  F1BA         	movff	?_atol+3,_config+35
 18785                           
 18786                           ;config_file.c: 206: config.ccw_limit_in_steps = _steps_from_degrees(config.ccw_limit);
 18787  00C50C  C1B7  F091         	movff	_config+32,__steps_from_degrees@degrees
 18788  00C510  C1B8  F092         	movff	_config+33,__steps_from_degrees@degrees+1
 18789  00C514  C1B9  F093         	movff	_config+34,__steps_from_degrees@degrees+2
 18790  00C518  C1BA  F094         	movff	_config+35,__steps_from_degrees@degrees+3
 18791  00C51C  ECA6  F077         	call	__steps_from_degrees	;wreg free
 18792  00C520  C091  F1BB         	movff	?__steps_from_degrees,_config+36
 18793  00C524  C092  F1BC         	movff	?__steps_from_degrees+1,_config+37
 18794  00C528  C093  F1BD         	movff	?__steps_from_degrees+2,_config+38
 18795  00C52C  C094  F1BE         	movff	?__steps_from_degrees+3,_config+39
 18796                           
 18797                           ;config_file.c: 207: return 16;;	Return value of __parse_item is never used
 18798  00C530  0012               	return	
 18799  00C532                     __end_of__parse_item:
 18800                           	opt stack 0
 18801                           tblptru	equ	0xFF8
 18802                           tblptrh	equ	0xFF7
 18803                           tblptrl	equ	0xFF6
 18804                           tablat	equ	0xFF5
 18805                           prodh	equ	0xFF4
 18806                           prodl	equ	0xFF3
 18807                           postinc0	equ	0xFEE
 18808                           wreg	equ	0xFE8
 18809                           postinc1	equ	0xFE6
 18810                           postdec1	equ	0xFE5
 18811                           plusw1	equ	0xFE3
 18812                           fsr1h	equ	0xFE2
 18813                           fsr1l	equ	0xFE1
 18814                           indf2	equ	0xFDF
 18815                           postinc2	equ	0xFDE
 18816                           postdec2	equ	0xFDD
 18817                           plusw2	equ	0xFDB
 18818                           fsr2h	equ	0xFDA
 18819                           fsr2l	equ	0xFD9
 18820                           status	equ	0xFD8
 18821                           
 18822 ;; *************** function _stricmp *****************
 18823 ;; Defined at:
 18824 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18825 ;; Parameters:    Size  Location     Type
 18826 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18827 ;;		 -> configFile_read@item_string(31), 
 18828 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18829 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 18830 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 18831 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 18832 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 18833 ;; Auto vars:     Size  Location     Type
 18834 ;;  r               1    6[BANK0 ] char 
 18835 ;; Return value:  Size  Location     Type
 18836 ;;                  2    1[BANK0 ] int 
 18837 ;; Registers used:
 18838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18839 ;; Tracked objects:
 18840 ;;		On entry : 0/0
 18841 ;;		On exit  : 0/0
 18842 ;;		Unchanged: 0/0
 18843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18844 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18847 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18848 ;;Total ram usage:        6 bytes
 18849 ;; Hardware stack levels used:    1
 18850 ;; Hardware stack levels required when called:   11
 18851 ;; This function calls:
 18852 ;;		_toupper
 18853 ;; This function is called by:
 18854 ;;		__parse_item
 18855 ;; This function uses a non-reentrant model
 18856 ;;
 18857                           
 18858                           	psect	text76
 18859  014A0E                     __ptext76:
 18860                           	opt stack 0
 18861  014A0E                     _stricmp:
 18862                           	opt stack 16
 18863                           
 18864                           ;incstack = 0
 18865  014A0E  D005               	goto	l3818
 18866  014A10  0100               	movlb	0	; () banked
 18867  014A12  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18868  014A14  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18869  014A16  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18870  014A18  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18871  014A1A                     l3818:
 18872                           
 18873                           ; BSR set to: 0
 18874  014A1A  C063  FFF6         	movff	stricmp@s2,tblptrl
 18875  014A1E  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18876  014A22                     	if	0	;tblptru may be non-zero
 18877  014A22                     	endif
 18878  014A22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18879  014A22  0E00               	movlw	low (__mediumconst shr (0+16))
 18880  014A24  6EF8               	movwf	tblptru,c
 18881  014A26                     	endif
 18882  014A26  0008               	tblrd		*
 18883  014A28  50F5               	movf	tablat,w,c
 18884  014A2A  EC7D  F0AE         	call	_toupper
 18885  014A2E  0800               	sublw	0
 18886  014A30  0100               	movlb	0	; () banked
 18887  014A32  6F65               	movwf	??_stricmp& (0+255),b
 18888  014A34  C061  FFD9         	movff	stricmp@s1,fsr2l
 18889  014A38  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18890  014A3C  50DF               	movf	indf2,w,c
 18891  014A3E  EC7D  F0AE         	call	_toupper
 18892  014A42  0100               	movlb	0	; () banked
 18893  014A44  2565               	addwf	??_stricmp& (0+255),w,b
 18894  014A46  6F66               	movwf	stricmp@r& (0+255),b
 18895  014A48  5166               	movf	stricmp@r& (0+255),w,b
 18896  014A4A  A4D8               	btfss	status,2,c
 18897  014A4C  D007               	goto	u14330
 18898                           
 18899                           ; BSR set to: 0
 18900  014A4E  C061  FFD9         	movff	stricmp@s1,fsr2l
 18901  014A52  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18902  014A56  50DF               	movf	indf2,w,c
 18903  014A58  A4D8               	btfss	status,2,c
 18904  014A5A  D7DA               	goto	l3819
 18905  014A5C                     u14330:
 18906                           
 18907                           ; BSR set to: 0
 18908                           
 18909                           ; BSR set to: 0
 18910                           
 18911                           ; BSR set to: 0
 18912  014A5C  5166               	movf	stricmp@r& (0+255),w,b
 18913  014A5E  6F61               	movwf	?_stricmp& (0+255),b
 18914  014A60  6B62               	clrf	(?_stricmp+1)& (0+255),b
 18915  014A62  BF61               	btfsc	?_stricmp& (0+255),7,b
 18916  014A64  0762               	decf	(?_stricmp+1)& (0+255),f,b
 18917  014A66  0012               	return	
 18918  014A68                     __end_of_stricmp:
 18919                           	opt stack 0
 18920                           tblptru	equ	0xFF8
 18921                           tblptrh	equ	0xFF7
 18922                           tblptrl	equ	0xFF6
 18923                           tablat	equ	0xFF5
 18924                           prodh	equ	0xFF4
 18925                           prodl	equ	0xFF3
 18926                           postinc0	equ	0xFEE
 18927                           wreg	equ	0xFE8
 18928                           postinc1	equ	0xFE6
 18929                           postdec1	equ	0xFE5
 18930                           plusw1	equ	0xFE3
 18931                           fsr1h	equ	0xFE2
 18932                           fsr1l	equ	0xFE1
 18933                           indf2	equ	0xFDF
 18934                           postinc2	equ	0xFDE
 18935                           postdec2	equ	0xFDD
 18936                           plusw2	equ	0xFDB
 18937                           fsr2h	equ	0xFDA
 18938                           fsr2l	equ	0xFD9
 18939                           status	equ	0xFD8
 18940                           
 18941 ;; *************** function _toupper *****************
 18942 ;; Defined at:
 18943 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 18944 ;; Parameters:    Size  Location     Type
 18945 ;;  c               1    wreg     unsigned char 
 18946 ;; Auto vars:     Size  Location     Type
 18947 ;;  c               1    0[BANK0 ] unsigned char 
 18948 ;; Return value:  Size  Location     Type
 18949 ;;                  1    wreg      unsigned char 
 18950 ;; Registers used:
 18951 ;;		wreg, status,2, status,0
 18952 ;; Tracked objects:
 18953 ;;		On entry : 0/0
 18954 ;;		On exit  : 0/0
 18955 ;;		Unchanged: 0/0
 18956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18960 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18961 ;;Total ram usage:        1 bytes
 18962 ;; Hardware stack levels used:    1
 18963 ;; Hardware stack levels required when called:   10
 18964 ;; This function calls:
 18965 ;;		Nothing
 18966 ;; This function is called by:
 18967 ;;		_stricmp
 18968 ;; This function uses a non-reentrant model
 18969 ;;
 18970                           
 18971                           	psect	text77
 18972  015CFA                     __ptext77:
 18973                           	opt stack 0
 18974  015CFA                     _toupper:
 18975                           	opt stack 16
 18976                           
 18977                           ; BSR set to: 0
 18978                           ;incstack = 0
 18979                           ;toupper@c stored from wreg
 18980  015CFA  0100               	movlb	0	; () banked
 18981  015CFC  6F60               	movwf	toupper@c& (0+255),b
 18982  015CFE  0E7B               	movlw	123
 18983  015D00  0100               	movlb	0	; () banked
 18984  015D02  6160               	cpfslt	toupper@c& (0+255),b
 18985  015D04  D004               	goto	l3841
 18986                           
 18987                           ; BSR set to: 0
 18988  015D06  0E60               	movlw	96
 18989  015D08  6560               	cpfsgt	toupper@c& (0+255),b
 18990  015D0A  D001               	goto	l3841
 18991                           
 18992                           ; BSR set to: 0
 18993  015D0C  9B60               	bcf	toupper@c& (0+255),5,b
 18994  015D0E                     l3841:
 18995                           
 18996                           ; BSR set to: 0
 18997                           
 18998                           ; BSR set to: 0
 18999  015D0E  5160               	movf	toupper@c& (0+255),w,b
 19000  015D10  0012               	return	
 19001  015D12                     __end_of_toupper:
 19002                           	opt stack 0
 19003                           tblptru	equ	0xFF8
 19004                           tblptrh	equ	0xFF7
 19005                           tblptrl	equ	0xFF6
 19006                           tablat	equ	0xFF5
 19007                           prodh	equ	0xFF4
 19008                           prodl	equ	0xFF3
 19009                           postinc0	equ	0xFEE
 19010                           wreg	equ	0xFE8
 19011                           postinc1	equ	0xFE6
 19012                           postdec1	equ	0xFE5
 19013                           plusw1	equ	0xFE3
 19014                           fsr1h	equ	0xFE2
 19015                           fsr1l	equ	0xFE1
 19016                           indf2	equ	0xFDF
 19017                           postinc2	equ	0xFDE
 19018                           postdec2	equ	0xFDD
 19019                           plusw2	equ	0xFDB
 19020                           fsr2h	equ	0xFDA
 19021                           fsr2l	equ	0xFD9
 19022                           status	equ	0xFD8
 19023                           
 19024 ;; *************** function _atol *****************
 19025 ;; Defined at:
 19026 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19027 ;; Parameters:    Size  Location     Type
 19028 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19029 ;;		 -> configFile_read@value_string(12), 
 19030 ;; Auto vars:     Size  Location     Type
 19031 ;;  a               4   21[BANK0 ] long 
 19032 ;;  c               1   25[BANK0 ] unsigned char 
 19033 ;;  sign            1   20[BANK0 ] unsigned char 
 19034 ;; Return value:  Size  Location     Type
 19035 ;;                  4   12[BANK0 ] long 
 19036 ;; Registers used:
 19037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19038 ;; Tracked objects:
 19039 ;;		On entry : 0/0
 19040 ;;		On exit  : 0/0
 19041 ;;		Unchanged: 0/0
 19042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19044 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19045 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19046 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19047 ;;Total ram usage:       14 bytes
 19048 ;; Hardware stack levels used:    1
 19049 ;; Hardware stack levels required when called:   11
 19050 ;; This function calls:
 19051 ;;		___lmul
 19052 ;;		_isdigit
 19053 ;; This function is called by:
 19054 ;;		__parse_item
 19055 ;; This function uses a non-reentrant model
 19056 ;;
 19057                           
 19058                           	psect	text78
 19059  011818                     __ptext78:
 19060                           	opt stack 0
 19061  011818                     _atol:
 19062                           	opt stack 16
 19063                           
 19064                           ; BSR set to: 0
 19065                           ;incstack = 0
 19066  011818  C06C  FFD9         	movff	atol@s,fsr2l
 19067  01181C  C06D  FFDA         	movff	atol@s+1,fsr2h
 19068  011820  50DF               	movf	indf2,w,c
 19069  011822  0100               	movlb	0	; () banked
 19070  011824  6F79               	movwf	atol@c& (0+255),b
 19071                           
 19072                           ; BSR set to: 0
 19073  011826  4B6C               	infsnz	atol@s& (0+255),f,b
 19074  011828  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19075                           
 19076                           ; BSR set to: 0
 19077  01182A  0E20               	movlw	32
 19078  01182C  1979               	xorwf	atol@c& (0+255),w,b
 19079  01182E  B4D8               	btfsc	status,2,c
 19080  011830  D7F3               	goto	_atol
 19081                           
 19082                           ; BSR set to: 0
 19083  011832  0E09               	movlw	9
 19084  011834  1979               	xorwf	atol@c& (0+255),w,b
 19085  011836  B4D8               	btfsc	status,2,c
 19086  011838  D7EF               	goto	_atol
 19087                           
 19088                           ; BSR set to: 0
 19089                           
 19090                           ; BSR set to: 0
 19091  01183A  0E00               	movlw	0
 19092  01183C  6F75               	movwf	atol@a& (0+255),b
 19093  01183E  0E00               	movlw	0
 19094  011840  6F76               	movwf	(atol@a+1)& (0+255),b
 19095  011842  0E00               	movlw	0
 19096  011844  6F77               	movwf	(atol@a+2)& (0+255),b
 19097  011846  0E00               	movlw	0
 19098  011848  6F78               	movwf	(atol@a+3)& (0+255),b
 19099  01184A  0E00               	movlw	0
 19100  01184C  6F74               	movwf	atol@sign& (0+255),b
 19101                           
 19102                           ; BSR set to: 0
 19103  01184E  0E2D               	movlw	45
 19104  011850  1979               	xorwf	atol@c& (0+255),w,b
 19105  011852  A4D8               	btfss	status,2,c
 19106  011854  D002               	goto	l3761
 19107                           
 19108                           ; BSR set to: 0
 19109  011856  2B74               	incf	atol@sign& (0+255),f,b
 19110  011858  D029               	goto	L87
 19111  01185A                     l3761:
 19112                           
 19113                           ; BSR set to: 0
 19114                           
 19115                           ; BSR set to: 0
 19116  01185A  0E2B               	movlw	43
 19117  01185C  1979               	xorwf	atol@c& (0+255),w,b
 19118  01185E  A4D8               	btfss	status,2,c
 19119  011860  D02D               	goto	l3764
 19120  011862  D024               	goto	L87
 19121  011864                     
 19122                           ; BSR set to: 0
 19123  011864  C075  F060         	movff	atol@a,___lmul@multiplier
 19124  011868  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19125  01186C  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19126  011870  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19127  011874  0E0A               	movlw	10
 19128  011876  0100               	movlb	0	; () banked
 19129  011878  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19130  01187A  0E00               	movlw	0
 19131  01187C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19132  01187E  0E00               	movlw	0
 19133  011880  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19134  011882  0E00               	movlw	0
 19135  011884  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19136  011886  EC3F  F0A6         	call	___lmul	;wreg free
 19137  01188A  C079  F070         	movff	atol@c,??_atol
 19138  01188E  0ED0               	movlw	208
 19139  011890  0100               	movlb	0	; () banked
 19140  011892  2770               	addwf	??_atol& (0+255),f,b
 19141  011894  5170               	movf	??_atol& (0+255),w,b
 19142  011896  2560               	addwf	?___lmul& (0+255),w,b
 19143  011898  6F75               	movwf	atol@a& (0+255),b
 19144  01189A  0E00               	movlw	0
 19145  01189C  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19146  01189E  6F76               	movwf	(atol@a+1)& (0+255),b
 19147  0118A0  0E00               	movlw	0
 19148  0118A2  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19149  0118A4  6F77               	movwf	(atol@a+2)& (0+255),b
 19150  0118A6  0E00               	movlw	0
 19151  0118A8  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19152  0118AA  6F78               	movwf	(atol@a+3)& (0+255),b
 19153  0118AC                     L87:
 19154                           
 19155                           ; BSR set to: 0
 19156  0118AC  C06C  FFD9         	movff	atol@s,fsr2l
 19157  0118B0  C06D  FFDA         	movff	atol@s+1,fsr2h
 19158  0118B4  50DF               	movf	indf2,w,c
 19159  0118B6  6F79               	movwf	atol@c& (0+255),b
 19160                           
 19161                           ; BSR set to: 0
 19162  0118B8  4B6C               	infsnz	atol@s& (0+255),f,b
 19163  0118BA  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19164  0118BC                     l3764:
 19165                           
 19166                           ; BSR set to: 0
 19167                           
 19168                           ; BSR set to: 0
 19169  0118BC  5179               	movf	atol@c& (0+255),w,b
 19170  0118BE  ECE9  F0AD         	call	_isdigit
 19171  0118C2  B0D8               	btfsc	status,0,c
 19172  0118C4  D7CF               	goto	l3765
 19173  0118C6  0100               	movlb	0	; () banked
 19174  0118C8  5174               	movf	atol@sign& (0+255),w,b
 19175  0118CA  B4D8               	btfsc	status,2,c
 19176  0118CC  D01A               	goto	l3767
 19177                           
 19178                           ; BSR set to: 0
 19179  0118CE  C075  F070         	movff	atol@a,??_atol
 19180  0118D2  C076  F071         	movff	atol@a+1,??_atol+1
 19181  0118D6  C077  F072         	movff	atol@a+2,??_atol+2
 19182  0118DA  C078  F073         	movff	atol@a+3,??_atol+3
 19183  0118DE  1F70               	comf	??_atol& (0+255),f,b
 19184  0118E0  1F71               	comf	(??_atol+1)& (0+255),f,b
 19185  0118E2  1F72               	comf	(??_atol+2)& (0+255),f,b
 19186  0118E4  1F73               	comf	(??_atol+3)& (0+255),f,b
 19187  0118E6  2B70               	incf	??_atol& (0+255),f,b
 19188  0118E8  0E00               	movlw	0
 19189  0118EA  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19190  0118EC  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19191  0118EE  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19192  0118F0  C070  F06C         	movff	??_atol,?_atol
 19193  0118F4  C071  F06D         	movff	??_atol+1,?_atol+1
 19194  0118F8  C072  F06E         	movff	??_atol+2,?_atol+2
 19195  0118FC  C073  F06F         	movff	??_atol+3,?_atol+3
 19196                           
 19197                           ; BSR set to: 0
 19198  011900  0012               	return	
 19199  011902                     l3767:
 19200                           
 19201                           ; BSR set to: 0
 19202  011902  C075  F06C         	movff	atol@a,?_atol
 19203  011906  C076  F06D         	movff	atol@a+1,?_atol+1
 19204  01190A  C077  F06E         	movff	atol@a+2,?_atol+2
 19205  01190E  C078  F06F         	movff	atol@a+3,?_atol+3
 19206                           
 19207                           ; BSR set to: 0
 19208  011912  0012               	return		;funcret
 19209  011914                     __end_of_atol:
 19210                           	opt stack 0
 19211                           tblptru	equ	0xFF8
 19212                           tblptrh	equ	0xFF7
 19213                           tblptrl	equ	0xFF6
 19214                           tablat	equ	0xFF5
 19215                           prodh	equ	0xFF4
 19216                           prodl	equ	0xFF3
 19217                           postinc0	equ	0xFEE
 19218                           wreg	equ	0xFE8
 19219                           postinc1	equ	0xFE6
 19220                           postdec1	equ	0xFE5
 19221                           plusw1	equ	0xFE3
 19222                           fsr1h	equ	0xFE2
 19223                           fsr1l	equ	0xFE1
 19224                           indf2	equ	0xFDF
 19225                           postinc2	equ	0xFDE
 19226                           postdec2	equ	0xFDD
 19227                           plusw2	equ	0xFDB
 19228                           fsr2h	equ	0xFDA
 19229                           fsr2l	equ	0xFD9
 19230                           status	equ	0xFD8
 19231                           
 19232 ;; *************** function _atoi *****************
 19233 ;; Defined at:
 19234 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19235 ;; Parameters:    Size  Location     Type
 19236 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19237 ;;		 -> configFile_read@value_string(12), 
 19238 ;; Auto vars:     Size  Location     Type
 19239 ;;  a               2   11[BANK0 ] int 
 19240 ;;  sign            1   10[BANK0 ] unsigned char 
 19241 ;; Return value:  Size  Location     Type
 19242 ;;                  2    6[BANK0 ] int 
 19243 ;; Registers used:
 19244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19245 ;; Tracked objects:
 19246 ;;		On entry : 0/0
 19247 ;;		On exit  : 0/0
 19248 ;;		Unchanged: 0/0
 19249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19251 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19252 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19253 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19254 ;;Total ram usage:        7 bytes
 19255 ;; Hardware stack levels used:    1
 19256 ;; Hardware stack levels required when called:   11
 19257 ;; This function calls:
 19258 ;;		___wmul
 19259 ;;		_isdigit
 19260 ;; This function is called by:
 19261 ;;		__parse_item
 19262 ;; This function uses a non-reentrant model
 19263 ;;
 19264                           
 19265                           	psect	text79
 19266  0125C0                     __ptext79:
 19267                           	opt stack 0
 19268  0125C0                     _atoi:
 19269                           	opt stack 16
 19270                           
 19271                           ; BSR set to: 0
 19272                           ;incstack = 0
 19273  0125C0  D003               	goto	l3744
 19274  0125C2  0100               	movlb	0	; () banked
 19275  0125C4  4B66               	infsnz	atoi@s& (0+255),f,b
 19276  0125C6  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19277  0125C8                     l3744:
 19278                           
 19279                           ; BSR set to: 0
 19280  0125C8  C066  FFD9         	movff	atoi@s,fsr2l
 19281  0125CC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19282  0125D0  0E20               	movlw	32
 19283  0125D2  18DE               	xorwf	postinc2,w,c
 19284  0125D4  B4D8               	btfsc	status,2,c
 19285  0125D6  D7F5               	goto	l3745
 19286  0125D8  C066  FFD9         	movff	atoi@s,fsr2l
 19287  0125DC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19288  0125E0  0E09               	movlw	9
 19289  0125E2  18DE               	xorwf	postinc2,w,c
 19290  0125E4  B4D8               	btfsc	status,2,c
 19291  0125E6  D7ED               	goto	l3745
 19292  0125E8  0E00               	movlw	0
 19293  0125EA  0100               	movlb	0	; () banked
 19294  0125EC  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19295  0125EE  0E00               	movlw	0
 19296  0125F0  6F6B               	movwf	atoi@a& (0+255),b
 19297  0125F2  0E00               	movlw	0
 19298  0125F4  6F6A               	movwf	atoi@sign& (0+255),b
 19299                           
 19300                           ; BSR set to: 0
 19301  0125F6  C066  FFD9         	movff	atoi@s,fsr2l
 19302  0125FA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19303  0125FE  0E2D               	movlw	45
 19304  012600  18DE               	xorwf	postinc2,w,c
 19305  012602  A4D8               	btfss	status,2,c
 19306  012604  D002               	goto	l3747
 19307                           
 19308                           ; BSR set to: 0
 19309  012606  2B6A               	incf	atoi@sign& (0+255),f,b
 19310  012608  D026               	goto	l15596
 19311  01260A                     l3747:
 19312                           
 19313                           ; BSR set to: 0
 19314                           
 19315                           ; BSR set to: 0
 19316  01260A  C066  FFD9         	movff	atoi@s,fsr2l
 19317  01260E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19318  012612  0E2B               	movlw	43
 19319  012614  18DE               	xorwf	postinc2,w,c
 19320  012616  A4D8               	btfss	status,2,c
 19321  012618  D020               	goto	l3750
 19322  01261A  D01D               	goto	l15596
 19323  01261C                     
 19324                           ; BSR set to: 0
 19325  01261C  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19326  012620  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19327  012624  0E00               	movlw	0
 19328  012626  0100               	movlb	0	; () banked
 19329  012628  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19330  01262A  0E0A               	movlw	10
 19331  01262C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19332  01262E  EC54  F0AD         	call	___wmul	;wreg free
 19333  012632  C066  FFD9         	movff	atoi@s,fsr2l
 19334  012636  C067  FFDA         	movff	atoi@s+1,fsr2h
 19335  01263A  50DF               	movf	indf2,w,c
 19336  01263C  0100               	movlb	0	; () banked
 19337  01263E  6F68               	movwf	??_atoi& (0+255),b
 19338  012640  6B69               	clrf	(??_atoi+1)& (0+255),b
 19339  012642  5160               	movf	?___wmul& (0+255),w,b
 19340  012644  2768               	addwf	??_atoi& (0+255),f,b
 19341  012646  5161               	movf	(?___wmul+1)& (0+255),w,b
 19342  012648  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19343  01264A  0ED0               	movlw	208
 19344  01264C  2568               	addwf	??_atoi& (0+255),w,b
 19345  01264E  6F6B               	movwf	atoi@a& (0+255),b
 19346  012650  0EFF               	movlw	255
 19347  012652  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19348  012654  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19349  012656                     l15596:
 19350                           
 19351                           ; BSR set to: 0
 19352  012656  4B66               	infsnz	atoi@s& (0+255),f,b
 19353  012658  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19354  01265A                     l3750:
 19355                           
 19356                           ; BSR set to: 0
 19357                           
 19358                           ; BSR set to: 0
 19359  01265A  C066  FFD9         	movff	atoi@s,fsr2l
 19360  01265E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19361  012662  50DF               	movf	indf2,w,c
 19362  012664  ECE9  F0AD         	call	_isdigit
 19363  012668  B0D8               	btfsc	status,0,c
 19364  01266A  D7D8               	goto	l3751
 19365  01266C  0100               	movlb	0	; () banked
 19366  01266E  516A               	movf	atoi@sign& (0+255),w,b
 19367  012670  B4D8               	btfsc	status,2,c
 19368  012672  D00D               	goto	l3753
 19369                           
 19370                           ; BSR set to: 0
 19371  012674  C06B  F068         	movff	atoi@a,??_atoi
 19372  012678  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19373  01267C  1F68               	comf	??_atoi& (0+255),f,b
 19374  01267E  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19375  012680  4B68               	infsnz	??_atoi& (0+255),f,b
 19376  012682  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19377  012684  C068  F066         	movff	??_atoi,?_atoi
 19378  012688  C069  F067         	movff	??_atoi+1,?_atoi+1
 19379  01268C  0012               	return	
 19380  01268E                     l3753:
 19381                           
 19382                           ; BSR set to: 0
 19383  01268E  C06B  F066         	movff	atoi@a,?_atoi
 19384  012692  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19385                           
 19386                           ; BSR set to: 0
 19387  012696  0012               	return		;funcret
 19388  012698                     __end_of_atoi:
 19389                           	opt stack 0
 19390                           tblptru	equ	0xFF8
 19391                           tblptrh	equ	0xFF7
 19392                           tblptrl	equ	0xFF6
 19393                           tablat	equ	0xFF5
 19394                           prodh	equ	0xFF4
 19395                           prodl	equ	0xFF3
 19396                           postinc0	equ	0xFEE
 19397                           wreg	equ	0xFE8
 19398                           postinc1	equ	0xFE6
 19399                           postdec1	equ	0xFE5
 19400                           plusw1	equ	0xFE3
 19401                           fsr1h	equ	0xFE2
 19402                           fsr1l	equ	0xFE1
 19403                           indf2	equ	0xFDF
 19404                           postinc2	equ	0xFDE
 19405                           postdec2	equ	0xFDD
 19406                           plusw2	equ	0xFDB
 19407                           fsr2h	equ	0xFDA
 19408                           fsr2l	equ	0xFD9
 19409                           status	equ	0xFD8
 19410                           
 19411 ;; *************** function _isdigit *****************
 19412 ;; Defined at:
 19413 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19414 ;; Parameters:    Size  Location     Type
 19415 ;;  c               1    wreg     unsigned char 
 19416 ;; Auto vars:     Size  Location     Type
 19417 ;;  c               1    2[BANK0 ] unsigned char 
 19418 ;; Return value:  Size  Location     Type
 19419 ;;		None               void
 19420 ;; Registers used:
 19421 ;;		wreg, status,2, status,0
 19422 ;; Tracked objects:
 19423 ;;		On entry : 0/0
 19424 ;;		On exit  : 0/0
 19425 ;;		Unchanged: 0/0
 19426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19429 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19430 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19431 ;;Total ram usage:        3 bytes
 19432 ;; Hardware stack levels used:    1
 19433 ;; Hardware stack levels required when called:   10
 19434 ;; This function calls:
 19435 ;;		Nothing
 19436 ;; This function is called by:
 19437 ;;		_atoi
 19438 ;;		_atol
 19439 ;; This function uses a non-reentrant model
 19440 ;;
 19441                           
 19442                           	psect	text80
 19443  015BD2                     __ptext80:
 19444                           	opt stack 0
 19445  015BD2                     _isdigit:
 19446                           	opt stack 16
 19447                           
 19448                           ; BSR set to: 0
 19449                           ;incstack = 0
 19450                           ;isdigit@c stored from wreg
 19451  015BD2  0100               	movlb	0	; () banked
 19452  015BD4  6F62               	movwf	isdigit@c& (0+255),b
 19453  015BD6  0E00               	movlw	0
 19454  015BD8  0100               	movlb	0	; () banked
 19455  015BDA  6F61               	movwf	_isdigit$8422& (0+255),b
 19456                           
 19457                           ; BSR set to: 0
 19458  015BDC  0E3A               	movlw	58
 19459  015BDE  6162               	cpfslt	isdigit@c& (0+255),b
 19460  015BE0  D005               	goto	l3772
 19461                           
 19462                           ; BSR set to: 0
 19463  015BE2  0E2F               	movlw	47
 19464  015BE4  6562               	cpfsgt	isdigit@c& (0+255),b
 19465  015BE6  D002               	goto	l3772
 19466                           
 19467                           ; BSR set to: 0
 19468  015BE8  0E01               	movlw	1
 19469  015BEA  6F61               	movwf	_isdigit$8422& (0+255),b
 19470  015BEC                     l3772:
 19471                           
 19472                           ; BSR set to: 0
 19473                           
 19474                           ; BSR set to: 0
 19475  015BEC  C061  F060         	movff	_isdigit$8422,??_isdigit
 19476  015BF0  3160               	rrcf	??_isdigit& (0+255),w,b
 19477  015BF2  0012               	return	
 19478  015BF4                     __end_of_isdigit:
 19479                           	opt stack 0
 19480                           tblptru	equ	0xFF8
 19481                           tblptrh	equ	0xFF7
 19482                           tblptrl	equ	0xFF6
 19483                           tablat	equ	0xFF5
 19484                           prodh	equ	0xFF4
 19485                           prodl	equ	0xFF3
 19486                           postinc0	equ	0xFEE
 19487                           wreg	equ	0xFE8
 19488                           postinc1	equ	0xFE6
 19489                           postdec1	equ	0xFE5
 19490                           plusw1	equ	0xFE3
 19491                           fsr1h	equ	0xFE2
 19492                           fsr1l	equ	0xFE1
 19493                           indf2	equ	0xFDF
 19494                           postinc2	equ	0xFDE
 19495                           postdec2	equ	0xFDD
 19496                           plusw2	equ	0xFDB
 19497                           fsr2h	equ	0xFDA
 19498                           fsr2l	equ	0xFD9
 19499                           status	equ	0xFD8
 19500                           
 19501 ;; *************** function ___wmul *****************
 19502 ;; Defined at:
 19503 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19504 ;; Parameters:    Size  Location     Type
 19505 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19506 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19507 ;; Auto vars:     Size  Location     Type
 19508 ;;  product         2    4[BANK0 ] unsigned int 
 19509 ;; Return value:  Size  Location     Type
 19510 ;;                  2    0[BANK0 ] unsigned int 
 19511 ;; Registers used:
 19512 ;;		wreg, status,2, status,0, prodl, prodh
 19513 ;; Tracked objects:
 19514 ;;		On entry : 0/0
 19515 ;;		On exit  : 0/0
 19516 ;;		Unchanged: 0/0
 19517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19521 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19522 ;;Total ram usage:        6 bytes
 19523 ;; Hardware stack levels used:    1
 19524 ;; Hardware stack levels required when called:   10
 19525 ;; This function calls:
 19526 ;;		Nothing
 19527 ;; This function is called by:
 19528 ;;		_atoi
 19529 ;; This function uses a non-reentrant model
 19530 ;;
 19531                           
 19532                           	psect	text81
 19533  015AA8                     __ptext81:
 19534                           	opt stack 0
 19535  015AA8                     ___wmul:
 19536                           	opt stack 16
 19537                           
 19538                           ; BSR set to: 0
 19539                           ;incstack = 0
 19540  015AA8  0100               	movlb	0	; () banked
 19541  015AAA  5160               	movf	___wmul@multiplier& (0+255),w,b
 19542  015AAC  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19543  015AAE  CFF3 F064          	movff	prodl,___wmul@product
 19544  015AB2  CFF4 F065          	movff	prodh,___wmul@product+1
 19545  015AB6  5160               	movf	___wmul@multiplier& (0+255),w,b
 19546  015AB8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19547  015ABA  50F3               	movf	prodl,w,c
 19548  015ABC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19549  015ABE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19550  015AC0  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19551  015AC2  50F3               	movf	prodl,w,c
 19552  015AC4  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19553                           
 19554                           ; BSR set to: 0
 19555  015AC6  C064  F060         	movff	___wmul@product,?___wmul
 19556  015ACA  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19557  015ACE  0012               	return	
 19558  015AD0                     __end_of___wmul:
 19559                           	opt stack 0
 19560                           tblptru	equ	0xFF8
 19561                           tblptrh	equ	0xFF7
 19562                           tblptrl	equ	0xFF6
 19563                           tablat	equ	0xFF5
 19564                           prodh	equ	0xFF4
 19565                           prodl	equ	0xFF3
 19566                           postinc0	equ	0xFEE
 19567                           wreg	equ	0xFE8
 19568                           postinc1	equ	0xFE6
 19569                           postdec1	equ	0xFE5
 19570                           plusw1	equ	0xFE3
 19571                           fsr1h	equ	0xFE2
 19572                           fsr1l	equ	0xFE1
 19573                           indf2	equ	0xFDF
 19574                           postinc2	equ	0xFDE
 19575                           postdec2	equ	0xFDD
 19576                           plusw2	equ	0xFDB
 19577                           fsr2h	equ	0xFDA
 19578                           fsr2l	equ	0xFD9
 19579                           status	equ	0xFD8
 19580                           
 19581 ;; *************** function __steps_from_degrees *****************
 19582 ;; Defined at:
 19583 ;;		line 213 in file "config_file.c"
 19584 ;; Parameters:    Size  Location     Type
 19585 ;;  degrees         4   49[BANK0 ] long 
 19586 ;; Auto vars:     Size  Location     Type
 19587 ;;  temp            4   53[BANK0 ] long 
 19588 ;; Return value:  Size  Location     Type
 19589 ;;                  4   49[BANK0 ] long 
 19590 ;; Registers used:
 19591 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19592 ;; Tracked objects:
 19593 ;;		On entry : 0/0
 19594 ;;		On exit  : 0/0
 19595 ;;		Unchanged: 0/0
 19596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19598 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19600 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19601 ;;Total ram usage:        8 bytes
 19602 ;; Hardware stack levels used:    1
 19603 ;; Hardware stack levels required when called:   11
 19604 ;; This function calls:
 19605 ;;		___fldiv
 19606 ;;		___flge
 19607 ;;		___flmul
 19608 ;;		___fltol
 19609 ;;		___xxtofl
 19610 ;; This function is called by:
 19611 ;;		__parse_item
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615                           	psect	text82
 19616  00EF4C                     __ptext82:
 19617                           	opt stack 0
 19618  00EF4C                     __steps_from_degrees:
 19619                           	opt stack 16
 19620                           
 19621                           ;config_file.c: 215: double temp;;config_file.c: 218: if(degrees==0)
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;incstack = 0
 19625  00EF4C  0100               	movlb	0	; () banked
 19626  00EF4E  5191               	movf	__steps_from_degrees@degrees& (0+255),w,b
 19627  00EF50  1192               	iorwf	(__steps_from_degrees@degrees+1)& (0+255),w,b
 19628  00EF52  1193               	iorwf	(__steps_from_degrees@degrees+2)& (0+255),w,b
 19629  00EF54  1194               	iorwf	(__steps_from_degrees@degrees+3)& (0+255),w,b
 19630  00EF56  A4D8               	btfss	status,2,c
 19631  00EF58  D009               	goto	l3057
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;config_file.c: 219: {;config_file.c: 220: return 0;
 19635  00EF5A  0E00               	movlw	0
 19636  00EF5C  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19637  00EF5E  0E00               	movlw	0
 19638  00EF60  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19639  00EF62  0E00               	movlw	0
 19640  00EF64  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19641  00EF66  0E00               	movlw	0
 19642  00EF68  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19643                           
 19644                           ; BSR set to: 0
 19645  00EF6A  0012               	return	
 19646  00EF6C                     l3057:
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;config_file.c: 221: };config_file.c: 224: temp = (float) degrees;
 19650                           
 19651                           ; BSR set to: 0
 19652  00EF6C  C091  F06A         	movff	__steps_from_degrees@degrees,___xxtofl@val
 19653  00EF70  C092  F06B         	movff	__steps_from_degrees@degrees+1,___xxtofl@val+1
 19654  00EF74  C093  F06C         	movff	__steps_from_degrees@degrees+2,___xxtofl@val+2
 19655  00EF78  C094  F06D         	movff	__steps_from_degrees@degrees+3,___xxtofl@val+3
 19656  00EF7C  0E01               	movlw	1
 19657  00EF7E  ECFA  F080         	call	___xxtofl
 19658  00EF82  C06A  F095         	movff	?___xxtofl,__steps_from_degrees@temp
 19659  00EF86  C06B  F096         	movff	?___xxtofl+1,__steps_from_degrees@temp+1
 19660  00EF8A  C06C  F097         	movff	?___xxtofl+2,__steps_from_degrees@temp+2
 19661  00EF8E  C06D  F098         	movff	?___xxtofl+3,__steps_from_degrees@temp+3
 19662                           
 19663                           ;config_file.c: 227: temp *= (float) config.full_circle_in_steps;
 19664  00EF92  C095  F078         	movff	__steps_from_degrees@temp,___flmul@b
 19665  00EF96  C096  F079         	movff	__steps_from_degrees@temp+1,___flmul@b+1
 19666  00EF9A  C097  F07A         	movff	__steps_from_degrees@temp+2,___flmul@b+2
 19667  00EF9E  C098  F07B         	movff	__steps_from_degrees@temp+3,___flmul@b+3
 19668  00EFA2  C197  F06A         	movff	_config,___xxtofl@val
 19669  00EFA6  C198  F06B         	movff	_config+1,___xxtofl@val+1
 19670  00EFAA  C199  F06C         	movff	_config+2,___xxtofl@val+2
 19671  00EFAE  C19A  F06D         	movff	_config+3,___xxtofl@val+3
 19672  00EFB2  0E00               	movlw	0
 19673  00EFB4  ECFA  F080         	call	___xxtofl
 19674  00EFB8  C06A  F07C         	movff	?___xxtofl,___flmul@a
 19675  00EFBC  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 19676  00EFC0  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 19677  00EFC4  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 19678  00EFC8  EC76  F064         	call	___flmul	;wreg free
 19679  00EFCC  C078  F095         	movff	?___flmul,__steps_from_degrees@temp
 19680  00EFD0  C079  F096         	movff	?___flmul+1,__steps_from_degrees@temp+1
 19681  00EFD4  C07A  F097         	movff	?___flmul+2,__steps_from_degrees@temp+2
 19682  00EFD8  C07B  F098         	movff	?___flmul+3,__steps_from_degrees@temp+3
 19683                           
 19684                           ;config_file.c: 228: temp /= 36000.0;
 19685  00EFDC  C095  F078         	movff	__steps_from_degrees@temp,___fldiv@b
 19686  00EFE0  C096  F079         	movff	__steps_from_degrees@temp+1,___fldiv@b+1
 19687  00EFE4  C097  F07A         	movff	__steps_from_degrees@temp+2,___fldiv@b+2
 19688  00EFE8  C098  F07B         	movff	__steps_from_degrees@temp+3,___fldiv@b+3
 19689  00EFEC  0E00               	movlw	0
 19690  00EFEE  0100               	movlb	0	; () banked
 19691  00EFF0  6F7C               	movwf	___fldiv@a& (0+255),b
 19692  00EFF2  0EA0               	movlw	160
 19693  00EFF4  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 19694  00EFF6  0E0C               	movlw	12
 19695  00EFF8  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 19696  00EFFA  0E47               	movlw	71
 19697  00EFFC  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 19698  00EFFE  EC9E  F06A         	call	___fldiv	;wreg free
 19699  00F002  C078  F095         	movff	?___fldiv,__steps_from_degrees@temp
 19700  00F006  C079  F096         	movff	?___fldiv+1,__steps_from_degrees@temp+1
 19701  00F00A  C07A  F097         	movff	?___fldiv+2,__steps_from_degrees@temp+2
 19702  00F00E  C07B  F098         	movff	?___fldiv+3,__steps_from_degrees@temp+3
 19703                           
 19704                           ;config_file.c: 231: if(((int32_t)temp)<-2147483648.0)
 19705  00F012  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19706  00F016  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19707  00F01A  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19708  00F01E  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19709  00F022  EC93  F091         	call	___fltol	;wreg free
 19710  00F026  C060  F06A         	movff	?___fltol,___xxtofl@val
 19711  00F02A  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19712  00F02E  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19713  00F032  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19714  00F036  0E01               	movlw	1
 19715  00F038  ECFA  F080         	call	___xxtofl
 19716  00F03C  C06A  F078         	movff	?___xxtofl,___flge@ff1
 19717  00F040  C06B  F079         	movff	?___xxtofl+1,___flge@ff1+1
 19718  00F044  C06C  F07A         	movff	?___xxtofl+2,___flge@ff1+2
 19719  00F048  C06D  F07B         	movff	?___xxtofl+3,___flge@ff1+3
 19720  00F04C  0E00               	movlw	0
 19721  00F04E  0100               	movlb	0	; () banked
 19722  00F050  6F7C               	movwf	___flge@ff2& (0+255),b
 19723  00F052  0E00               	movlw	0
 19724  00F054  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19725  00F056  0E00               	movlw	0
 19726  00F058  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19727  00F05A  0ECF               	movlw	207
 19728  00F05C  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19729  00F05E  EC37  F085         	call	___flge	;wreg free
 19730  00F062  0100               	movlb	0	; () banked
 19731  00F064  B0D8               	btfsc	status,0,c
 19732  00F066  D009               	goto	l3059
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;config_file.c: 232: {;config_file.c: 233: return -2147483648;
 19736  00F068  0E00               	movlw	0
 19737  00F06A  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19738  00F06C  0E00               	movlw	0
 19739  00F06E  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19740  00F070  0E00               	movlw	0
 19741  00F072  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19742  00F074  0E80               	movlw	128
 19743  00F076  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19744                           
 19745                           ; BSR set to: 0
 19746  00F078  0012               	return	
 19747  00F07A                     l3059:
 19748                           
 19749                           ; BSR set to: 0
 19750                           ;config_file.c: 234: };config_file.c: 235: if(((int32_t)temp)>2147483647.0)
 19751                           
 19752                           ; BSR set to: 0
 19753  00F07A  0E00               	movlw	0
 19754  00F07C  6F78               	movwf	___flge@ff1& (0+255),b
 19755  00F07E  0E00               	movlw	0
 19756  00F080  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19757  00F082  0E00               	movlw	0
 19758  00F084  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19759  00F086  0E4F               	movlw	79
 19760  00F088  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19761  00F08A  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19762  00F08E  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19763  00F092  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19764  00F096  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19765  00F09A  EC93  F091         	call	___fltol	;wreg free
 19766  00F09E  C060  F06A         	movff	?___fltol,___xxtofl@val
 19767  00F0A2  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19768  00F0A6  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19769  00F0AA  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19770  00F0AE  0E01               	movlw	1
 19771  00F0B0  ECFA  F080         	call	___xxtofl
 19772  00F0B4  C06A  F07C         	movff	?___xxtofl,___flge@ff2
 19773  00F0B8  C06B  F07D         	movff	?___xxtofl+1,___flge@ff2+1
 19774  00F0BC  C06C  F07E         	movff	?___xxtofl+2,___flge@ff2+2
 19775  00F0C0  C06D  F07F         	movff	?___xxtofl+3,___flge@ff2+3
 19776  00F0C4  EC37  F085         	call	___flge	;wreg free
 19777  00F0C8  0100               	movlb	0	; () banked
 19778  00F0CA  B0D8               	btfsc	status,0,c
 19779  00F0CC  D009               	goto	l3060
 19780                           
 19781                           ; BSR set to: 0
 19782                           ;config_file.c: 236: {;config_file.c: 237: return 2147483647;
 19783  00F0CE  0EFF               	movlw	255
 19784  00F0D0  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19785  00F0D2  0EFF               	movlw	255
 19786  00F0D4  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19787  00F0D6  0EFF               	movlw	255
 19788  00F0D8  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19789  00F0DA  0E7F               	movlw	127
 19790  00F0DC  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19791                           
 19792                           ; BSR set to: 0
 19793  00F0DE  0012               	return	
 19794  00F0E0                     l3060:
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;config_file.c: 238: };config_file.c: 241: return (int32_t) temp;
 19798                           
 19799                           ; BSR set to: 0
 19800  00F0E0  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19801  00F0E4  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19802  00F0E8  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19803  00F0EC  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19804  00F0F0  EC93  F091         	call	___fltol	;wreg free
 19805  00F0F4  C060  F091         	movff	?___fltol,?__steps_from_degrees
 19806  00F0F8  C061  F092         	movff	?___fltol+1,?__steps_from_degrees+1
 19807  00F0FC  C062  F093         	movff	?___fltol+2,?__steps_from_degrees+2
 19808  00F100  C063  F094         	movff	?___fltol+3,?__steps_from_degrees+3
 19809  00F104  0012               	return	
 19810  00F106                     __end_of__steps_from_degrees:
 19811                           	opt stack 0
 19812                           tblptru	equ	0xFF8
 19813                           tblptrh	equ	0xFF7
 19814                           tblptrl	equ	0xFF6
 19815                           tablat	equ	0xFF5
 19816                           prodh	equ	0xFF4
 19817                           prodl	equ	0xFF3
 19818                           postinc0	equ	0xFEE
 19819                           wreg	equ	0xFE8
 19820                           postinc1	equ	0xFE6
 19821                           postdec1	equ	0xFE5
 19822                           plusw1	equ	0xFE3
 19823                           fsr1h	equ	0xFE2
 19824                           fsr1l	equ	0xFE1
 19825                           indf2	equ	0xFDF
 19826                           postinc2	equ	0xFDE
 19827                           postdec2	equ	0xFDD
 19828                           plusw2	equ	0xFDB
 19829                           fsr2h	equ	0xFDA
 19830                           fsr2l	equ	0xFD9
 19831                           status	equ	0xFD8
 19832                           
 19833 ;; *************** function ___flge *****************
 19834 ;; Defined at:
 19835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 19836 ;; Parameters:    Size  Location     Type
 19837 ;;  ff1             4   24[BANK0 ] long 
 19838 ;;  ff2             4   28[BANK0 ] long 
 19839 ;; Auto vars:     Size  Location     Type
 19840 ;;		None
 19841 ;; Return value:  Size  Location     Type
 19842 ;;		None               void
 19843 ;; Registers used:
 19844 ;;		wreg, status,2, status,0
 19845 ;; Tracked objects:
 19846 ;;		On entry : 0/0
 19847 ;;		On exit  : 0/0
 19848 ;;		Unchanged: 0/0
 19849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19850 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19853 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19854 ;;Total ram usage:       12 bytes
 19855 ;; Hardware stack levels used:    1
 19856 ;; Hardware stack levels required when called:   10
 19857 ;; This function calls:
 19858 ;;		Nothing
 19859 ;; This function is called by:
 19860 ;;		__steps_from_degrees
 19861 ;;		_motor_goto_degrees_float
 19862 ;; This function uses a non-reentrant model
 19863 ;;
 19864                           
 19865                           	psect	text83
 19866  010A6E                     __ptext83:
 19867                           	opt stack 0
 19868  010A6E                     ___flge:
 19869                           	opt stack 16
 19870                           
 19871                           ;incstack = 0
 19872  010A6E  0E00               	movlw	0
 19873  010A70  0100               	movlb	0	; () banked
 19874  010A72  1578               	andwf	___flge@ff1& (0+255),w,b
 19875  010A74  6F80               	movwf	??___flge& (0+255),b
 19876  010A76  0E00               	movlw	0
 19877  010A78  1579               	andwf	(___flge@ff1+1)& (0+255),w,b
 19878  010A7A  6F81               	movwf	(??___flge+1)& (0+255),b
 19879  010A7C  0E80               	movlw	128
 19880  010A7E  157A               	andwf	(___flge@ff1+2)& (0+255),w,b
 19881  010A80  6F82               	movwf	(??___flge+2)& (0+255),b
 19882  010A82  0E7F               	movlw	127
 19883  010A84  157B               	andwf	(___flge@ff1+3)& (0+255),w,b
 19884  010A86  6F83               	movwf	(??___flge+3)& (0+255),b
 19885  010A88  5180               	movf	??___flge& (0+255),w,b
 19886  010A8A  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19887  010A8C  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19888  010A8E  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19889  010A90  A4D8               	btfss	status,2,c
 19890  010A92  D008               	goto	l3338
 19891                           
 19892                           ; BSR set to: 0
 19893  010A94  0E00               	movlw	0
 19894  010A96  6F78               	movwf	___flge@ff1& (0+255),b
 19895  010A98  0E00               	movlw	0
 19896  010A9A  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19897  010A9C  0E00               	movlw	0
 19898  010A9E  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19899  010AA0  0E00               	movlw	0
 19900  010AA2  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19901  010AA4                     l3338:
 19902                           
 19903                           ; BSR set to: 0
 19904                           
 19905                           ; BSR set to: 0
 19906  010AA4  0E00               	movlw	0
 19907  010AA6  157C               	andwf	___flge@ff2& (0+255),w,b
 19908  010AA8  6F80               	movwf	??___flge& (0+255),b
 19909  010AAA  0E00               	movlw	0
 19910  010AAC  157D               	andwf	(___flge@ff2+1)& (0+255),w,b
 19911  010AAE  6F81               	movwf	(??___flge+1)& (0+255),b
 19912  010AB0  0E80               	movlw	128
 19913  010AB2  157E               	andwf	(___flge@ff2+2)& (0+255),w,b
 19914  010AB4  6F82               	movwf	(??___flge+2)& (0+255),b
 19915  010AB6  0E7F               	movlw	127
 19916  010AB8  157F               	andwf	(___flge@ff2+3)& (0+255),w,b
 19917  010ABA  6F83               	movwf	(??___flge+3)& (0+255),b
 19918  010ABC  5180               	movf	??___flge& (0+255),w,b
 19919  010ABE  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19920  010AC0  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19921  010AC2  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19922  010AC4  A4D8               	btfss	status,2,c
 19923  010AC6  D008               	goto	l3339
 19924                           
 19925                           ; BSR set to: 0
 19926  010AC8  0E00               	movlw	0
 19927  010ACA  6F7C               	movwf	___flge@ff2& (0+255),b
 19928  010ACC  0E00               	movlw	0
 19929  010ACE  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19930  010AD0  0E00               	movlw	0
 19931  010AD2  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19932  010AD4  0E00               	movlw	0
 19933  010AD6  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19934  010AD8                     l3339:
 19935                           
 19936                           ; BSR set to: 0
 19937                           
 19938                           ; BSR set to: 0
 19939  010AD8  AF7B               	btfss	(___flge@ff1+3)& (0+255),7,b
 19940  010ADA  D01D               	goto	l3340
 19941                           
 19942                           ; BSR set to: 0
 19943  010ADC  C078  F080         	movff	___flge@ff1,??___flge
 19944  010AE0  C079  F081         	movff	___flge@ff1+1,??___flge+1
 19945  010AE4  C07A  F082         	movff	___flge@ff1+2,??___flge+2
 19946  010AE8  C07B  F083         	movff	___flge@ff1+3,??___flge+3
 19947  010AEC  1F80               	comf	??___flge& (0+255),f,b
 19948  010AEE  1F81               	comf	(??___flge+1)& (0+255),f,b
 19949  010AF0  1F82               	comf	(??___flge+2)& (0+255),f,b
 19950  010AF2  1F83               	comf	(??___flge+3)& (0+255),f,b
 19951  010AF4  2B80               	incf	??___flge& (0+255),f,b
 19952  010AF6  0E00               	movlw	0
 19953  010AF8  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19954  010AFA  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19955  010AFC  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19956  010AFE  0E00               	movlw	0
 19957  010B00  2580               	addwf	??___flge& (0+255),w,b
 19958  010B02  6F78               	movwf	___flge@ff1& (0+255),b
 19959  010B04  0E00               	movlw	0
 19960  010B06  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19961  010B08  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19962  010B0A  0E00               	movlw	0
 19963  010B0C  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19964  010B0E  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19965  010B10  0E80               	movlw	128
 19966  010B12  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19967  010B14  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19968  010B16                     l3340:
 19969                           
 19970                           ; BSR set to: 0
 19971                           
 19972                           ; BSR set to: 0
 19973  010B16  AF7F               	btfss	(___flge@ff2+3)& (0+255),7,b
 19974  010B18  D01D               	goto	l3341
 19975                           
 19976                           ; BSR set to: 0
 19977  010B1A  C07C  F080         	movff	___flge@ff2,??___flge
 19978  010B1E  C07D  F081         	movff	___flge@ff2+1,??___flge+1
 19979  010B22  C07E  F082         	movff	___flge@ff2+2,??___flge+2
 19980  010B26  C07F  F083         	movff	___flge@ff2+3,??___flge+3
 19981  010B2A  1F80               	comf	??___flge& (0+255),f,b
 19982  010B2C  1F81               	comf	(??___flge+1)& (0+255),f,b
 19983  010B2E  1F82               	comf	(??___flge+2)& (0+255),f,b
 19984  010B30  1F83               	comf	(??___flge+3)& (0+255),f,b
 19985  010B32  2B80               	incf	??___flge& (0+255),f,b
 19986  010B34  0E00               	movlw	0
 19987  010B36  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19988  010B38  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19989  010B3A  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19990  010B3C  0E00               	movlw	0
 19991  010B3E  2580               	addwf	??___flge& (0+255),w,b
 19992  010B40  6F7C               	movwf	___flge@ff2& (0+255),b
 19993  010B42  0E00               	movlw	0
 19994  010B44  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19995  010B46  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19996  010B48  0E00               	movlw	0
 19997  010B4A  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19998  010B4C  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19999  010B4E  0E80               	movlw	128
 20000  010B50  2183               	addwfc	(??___flge+3)& (0+255),w,b
 20001  010B52  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 20002  010B54                     l3341:
 20003                           
 20004                           ; BSR set to: 0
 20005  010B54  0E00               	movlw	0
 20006  010B56  1B78               	xorwf	___flge@ff1& (0+255),f,b
 20007  010B58  0E00               	movlw	0
 20008  010B5A  1B79               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20009  010B5C  0E00               	movlw	0
 20010  010B5E  1B7A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20011  010B60  0E80               	movlw	128
 20012  010B62  1B7B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20013  010B64  0E00               	movlw	0
 20014  010B66  1B7C               	xorwf	___flge@ff2& (0+255),f,b
 20015  010B68  0E00               	movlw	0
 20016  010B6A  1B7D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20017  010B6C  0E00               	movlw	0
 20018  010B6E  1B7E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20019  010B70  0E80               	movlw	128
 20020  010B72  1B7F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20021  010B74  517C               	movf	___flge@ff2& (0+255),w,b
 20022  010B76  5D78               	subwf	___flge@ff1& (0+255),w,b
 20023  010B78  517D               	movf	(___flge@ff2+1)& (0+255),w,b
 20024  010B7A  5979               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20025  010B7C  517E               	movf	(___flge@ff2+2)& (0+255),w,b
 20026  010B7E  597A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20027  010B80  517F               	movf	(___flge@ff2+3)& (0+255),w,b
 20028  010B82  597B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20029  010B84  B0D8               	btfsc	status,0,c
 20030  010B86  D002               	goto	l12064
 20031                           
 20032                           ; BSR set to: 0
 20033  010B88  90D8               	bcf	status,0,c
 20034  010B8A  0012               	return	
 20035  010B8C                     l12064:
 20036                           
 20037                           ; BSR set to: 0
 20038                           
 20039                           ; BSR set to: 0
 20040  010B8C  80D8               	bsf	status,0,c
 20041                           
 20042                           ; BSR set to: 0
 20043  010B8E  0012               	return	
 20044  010B90                     __end_of___flge:
 20045                           	opt stack 0
 20046                           tblptru	equ	0xFF8
 20047                           tblptrh	equ	0xFF7
 20048                           tblptrl	equ	0xFF6
 20049                           tablat	equ	0xFF5
 20050                           prodh	equ	0xFF4
 20051                           prodl	equ	0xFF3
 20052                           postinc0	equ	0xFEE
 20053                           wreg	equ	0xFE8
 20054                           postinc1	equ	0xFE6
 20055                           postdec1	equ	0xFE5
 20056                           plusw1	equ	0xFE3
 20057                           fsr1h	equ	0xFE2
 20058                           fsr1l	equ	0xFE1
 20059                           indf2	equ	0xFDF
 20060                           postinc2	equ	0xFDE
 20061                           postdec2	equ	0xFDD
 20062                           plusw2	equ	0xFDB
 20063                           fsr2h	equ	0xFDA
 20064                           fsr2l	equ	0xFD9
 20065                           status	equ	0xFD8
 20066                           
 20067 ;; *************** function __get_item *****************
 20068 ;; Defined at:
 20069 ;;		line 70 in file "config_file.c"
 20070 ;; Parameters:    Size  Location     Type
 20071 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20072 ;;		 -> configFile_read@item_string(31), 
 20073 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20074 ;;		 -> configFile_read@value_string(12), 
 20075 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20076 ;;		 -> ConfigFile_buffer(512), 
 20077 ;; Auto vars:     Size  Location     Type
 20078 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20079 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20080 ;; Return value:  Size  Location     Type
 20081 ;;                  1    wreg      unsigned char 
 20082 ;; Registers used:
 20083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20084 ;; Tracked objects:
 20085 ;;		On entry : 0/0
 20086 ;;		On exit  : 0/0
 20087 ;;		Unchanged: 0/0
 20088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20089 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20090 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20091 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20092 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20093 ;;Total ram usage:       11 bytes
 20094 ;; Hardware stack levels used:    1
 20095 ;; Hardware stack levels required when called:   10
 20096 ;; This function calls:
 20097 ;;		Nothing
 20098 ;; This function is called by:
 20099 ;;		_configFile_read
 20100 ;; This function uses a non-reentrant model
 20101 ;;
 20102                           
 20103                           	psect	text84
 20104  00F5EE                     __ptext84:
 20105                           	opt stack 0
 20106  00F5EE                     __get_item:
 20107                           	opt stack 18
 20108                           
 20109                           ;config_file.c: 72: uint8_t item_ctr;;config_file.c: 73: uint8_t value_ctr;;config_file.
      +                          c: 76: for(item_ctr=0;item_ctr<30;++item_ctr)
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;incstack = 0
 20113  00F5EE  0E00               	movlw	0
 20114  00F5F0  0100               	movlb	0	; () banked
 20115  00F5F2  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20116  00F5F4                     l16702:
 20117                           
 20118                           ; BSR set to: 0
 20119  00F5F4  0E1D               	movlw	29
 20120  00F5F6  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20121  00F5F8  D001               	goto	l3024
 20122  00F5FA  D020               	goto	u15770
 20123  00F5FC                     l3024:
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;config_file.c: 77: {;config_file.c: 79: if(buffer[item_ctr] == '=')
 20127                           
 20128                           ; BSR set to: 0
 20129  00F5FC  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20130  00F5FE  0D01               	mullw	1
 20131  00F600  50F3               	movf	prodl,w,c
 20132  00F602  2564               	addwf	__get_item@buffer& (0+255),w,b
 20133  00F604  6ED9               	movwf	fsr2l,c
 20134  00F606  50F4               	movf	prodh,w,c
 20135  00F608  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20136  00F60A  6EDA               	movwf	fsr2h,c
 20137  00F60C  0E3D               	movlw	61
 20138  00F60E  18DE               	xorwf	postinc2,w,c
 20139  00F610  B4D8               	btfsc	status,2,c
 20140  00F612  D014               	goto	u15770
 20141                           
 20142                           ; BSR set to: 0
 20143                           ;config_file.c: 82: };config_file.c: 83: item_string[item_ctr] = buffer[item_ctr];
 20144                           
 20145                           ; BSR set to: 0
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;config_file.c: 80: {;config_file.c: 81: break;
 20149  00F614  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20150  00F616  0D01               	mullw	1
 20151  00F618  50F3               	movf	prodl,w,c
 20152  00F61A  2564               	addwf	__get_item@buffer& (0+255),w,b
 20153  00F61C  6ED9               	movwf	fsr2l,c
 20154  00F61E  50F4               	movf	prodh,w,c
 20155  00F620  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20156  00F622  6EDA               	movwf	fsr2h,c
 20157  00F624  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20158  00F626  0D01               	mullw	1
 20159  00F628  50F3               	movf	prodl,w,c
 20160  00F62A  2560               	addwf	__get_item@item_string& (0+255),w,b
 20161  00F62C  6EE1               	movwf	fsr1l,c
 20162  00F62E  50F4               	movf	prodh,w,c
 20163  00F630  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20164  00F632  6EE2               	movwf	fsr1h,c
 20165  00F634  CFDF FFE7          	movff	indf2,indf1
 20166                           
 20167                           ; BSR set to: 0
 20168  00F638  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20169  00F63A  D7DC               	goto	l16702
 20170  00F63C                     u15770:
 20171                           
 20172                           ; BSR set to: 0
 20173                           ;config_file.c: 84: };config_file.c: 85: item_string[item_ctr++] = 0;
 20174                           
 20175                           ; BSR set to: 0
 20176  00F63C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20177  00F63E  0D01               	mullw	1
 20178  00F640  50F3               	movf	prodl,w,c
 20179  00F642  2560               	addwf	__get_item@item_string& (0+255),w,b
 20180  00F644  6ED9               	movwf	fsr2l,c
 20181  00F646  50F4               	movf	prodh,w,c
 20182  00F648  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20183  00F64A  6EDA               	movwf	fsr2h,c
 20184  00F64C  0E00               	movlw	0
 20185  00F64E  6EDF               	movwf	indf2,c
 20186                           
 20187                           ; BSR set to: 0
 20188  00F650  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;config_file.c: 88: for(value_ctr=0;value_ctr<11;++value_ctr)
 20192  00F652  0E00               	movlw	0
 20193  00F654  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20194  00F656                     l16722:
 20195                           
 20196                           ; BSR set to: 0
 20197  00F656  0E0A               	movlw	10
 20198  00F658  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20199  00F65A  D001               	goto	l3027
 20200  00F65C  D03B               	goto	u15810
 20201  00F65E                     l3027:
 20202                           
 20203                           ; BSR set to: 0
 20204                           ;config_file.c: 89: {;config_file.c: 91: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20205                           
 20206                           ; BSR set to: 0
 20207  00F65E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20208  00F660  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20209  00F664  6B67               	clrf	(??__get_item+1)& (0+255),b
 20210  00F666  2766               	addwf	??__get_item& (0+255),f,b
 20211  00F668  0E00               	movlw	0
 20212  00F66A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20213  00F66C  5166               	movf	??__get_item& (0+255),w,b
 20214  00F66E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20215  00F670  6ED9               	movwf	fsr2l,c
 20216  00F672  5167               	movf	(??__get_item+1)& (0+255),w,b
 20217  00F674  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20218  00F676  6EDA               	movwf	fsr2h,c
 20219  00F678  0E0D               	movlw	13
 20220  00F67A  18DE               	xorwf	postinc2,w,c
 20221  00F67C  B4D8               	btfsc	status,2,c
 20222  00F67E  D02A               	goto	u15810
 20223                           
 20224                           ; BSR set to: 0
 20225  00F680  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20226  00F682  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20227  00F686  6B67               	clrf	(??__get_item+1)& (0+255),b
 20228  00F688  2766               	addwf	??__get_item& (0+255),f,b
 20229  00F68A  0E00               	movlw	0
 20230  00F68C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20231  00F68E  5166               	movf	??__get_item& (0+255),w,b
 20232  00F690  2564               	addwf	__get_item@buffer& (0+255),w,b
 20233  00F692  6ED9               	movwf	fsr2l,c
 20234  00F694  5167               	movf	(??__get_item+1)& (0+255),w,b
 20235  00F696  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20236  00F698  6EDA               	movwf	fsr2h,c
 20237  00F69A  0E0A               	movlw	10
 20238  00F69C  18DE               	xorwf	postinc2,w,c
 20239  00F69E  B4D8               	btfsc	status,2,c
 20240  00F6A0  D019               	goto	u15810
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;config_file.c: 94: };config_file.c: 95: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20244                           
 20245                           ; BSR set to: 0
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;config_file.c: 92: {;config_file.c: 93: break;
 20249  00F6A2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20250  00F6A4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20251  00F6A8  6B67               	clrf	(??__get_item+1)& (0+255),b
 20252  00F6AA  2766               	addwf	??__get_item& (0+255),f,b
 20253  00F6AC  0E00               	movlw	0
 20254  00F6AE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20255  00F6B0  5166               	movf	??__get_item& (0+255),w,b
 20256  00F6B2  2564               	addwf	__get_item@buffer& (0+255),w,b
 20257  00F6B4  6ED9               	movwf	fsr2l,c
 20258  00F6B6  5167               	movf	(??__get_item+1)& (0+255),w,b
 20259  00F6B8  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20260  00F6BA  6EDA               	movwf	fsr2h,c
 20261  00F6BC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20262  00F6BE  0D01               	mullw	1
 20263  00F6C0  50F3               	movf	prodl,w,c
 20264  00F6C2  2562               	addwf	__get_item@value_string& (0+255),w,b
 20265  00F6C4  6EE1               	movwf	fsr1l,c
 20266  00F6C6  50F4               	movf	prodh,w,c
 20267  00F6C8  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20268  00F6CA  6EE2               	movwf	fsr1h,c
 20269  00F6CC  CFDF FFE7          	movff	indf2,indf1
 20270                           
 20271                           ; BSR set to: 0
 20272  00F6D0  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20273  00F6D2  D7C1               	goto	l16722
 20274  00F6D4                     u15810:
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;config_file.c: 96: };config_file.c: 97: value_string[value_ctr++] = 0;
 20278                           
 20279                           ; BSR set to: 0
 20280  00F6D4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20281  00F6D6  0D01               	mullw	1
 20282  00F6D8  50F3               	movf	prodl,w,c
 20283  00F6DA  2562               	addwf	__get_item@value_string& (0+255),w,b
 20284  00F6DC  6ED9               	movwf	fsr2l,c
 20285  00F6DE  50F4               	movf	prodh,w,c
 20286  00F6E0  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20287  00F6E2  6EDA               	movwf	fsr2h,c
 20288  00F6E4  0E00               	movlw	0
 20289  00F6E6  6EDF               	movwf	indf2,c
 20290  00F6E8                     
 20291                           ; BSR set to: 0
 20292                           ;config_file.c: 101: {;config_file.c: 102: ++value_ctr;
 20293                           
 20294                           ; BSR set to: 0
 20295                           
 20296                           ;config_file.c: 100: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_
      +                          ctr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20297                           
 20298                           ; BSR set to: 0
 20299  00F6E8  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20300                           
 20301                           ; BSR set to: 0
 20302                           
 20303                           ; BSR set to: 0
 20304  00F6EA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20305  00F6EC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20306  00F6F0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20307  00F6F2  2766               	addwf	??__get_item& (0+255),f,b
 20308  00F6F4  0E00               	movlw	0
 20309  00F6F6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20310  00F6F8  5166               	movf	??__get_item& (0+255),w,b
 20311  00F6FA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20312  00F6FC  6ED9               	movwf	fsr2l,c
 20313  00F6FE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20314  00F700  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20315  00F702  6EDA               	movwf	fsr2h,c
 20316  00F704  0E0D               	movlw	13
 20317  00F706  18DE               	xorwf	postinc2,w,c
 20318  00F708  B4D8               	btfsc	status,2,c
 20319  00F70A  D7EE               	goto	l16738
 20320                           
 20321                           ; BSR set to: 0
 20322  00F70C  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20323  00F70E  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20324  00F712  6B67               	clrf	(??__get_item+1)& (0+255),b
 20325  00F714  2766               	addwf	??__get_item& (0+255),f,b
 20326  00F716  0E00               	movlw	0
 20327  00F718  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20328  00F71A  5166               	movf	??__get_item& (0+255),w,b
 20329  00F71C  2564               	addwf	__get_item@buffer& (0+255),w,b
 20330  00F71E  6ED9               	movwf	fsr2l,c
 20331  00F720  5167               	movf	(??__get_item+1)& (0+255),w,b
 20332  00F722  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20333  00F724  6EDA               	movwf	fsr2h,c
 20334  00F726  0E0A               	movlw	10
 20335  00F728  18DE               	xorwf	postinc2,w,c
 20336  00F72A  B4D8               	btfsc	status,2,c
 20337  00F72C  D7DD               	goto	l16738
 20338                           
 20339                           ; BSR set to: 0
 20340  00F72E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20341  00F730  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20342  00F734  6B67               	clrf	(??__get_item+1)& (0+255),b
 20343  00F736  2766               	addwf	??__get_item& (0+255),f,b
 20344  00F738  0E00               	movlw	0
 20345  00F73A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20346  00F73C  5166               	movf	??__get_item& (0+255),w,b
 20347  00F73E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20348  00F740  6ED9               	movwf	fsr2l,c
 20349  00F742  5167               	movf	(??__get_item+1)& (0+255),w,b
 20350  00F744  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20351  00F746  6EDA               	movwf	fsr2h,c
 20352  00F748  0E09               	movlw	9
 20353  00F74A  18DE               	xorwf	postinc2,w,c
 20354  00F74C  B4D8               	btfsc	status,2,c
 20355  00F74E  D7CC               	goto	l16738
 20356                           
 20357                           ; BSR set to: 0
 20358  00F750  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20359  00F752  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20360  00F756  6B67               	clrf	(??__get_item+1)& (0+255),b
 20361  00F758  2766               	addwf	??__get_item& (0+255),f,b
 20362  00F75A  0E00               	movlw	0
 20363  00F75C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20364  00F75E  5166               	movf	??__get_item& (0+255),w,b
 20365  00F760  2564               	addwf	__get_item@buffer& (0+255),w,b
 20366  00F762  6ED9               	movwf	fsr2l,c
 20367  00F764  5167               	movf	(??__get_item+1)& (0+255),w,b
 20368  00F766  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20369  00F768  6EDA               	movwf	fsr2h,c
 20370  00F76A  0E20               	movlw	32
 20371  00F76C  18DE               	xorwf	postinc2,w,c
 20372  00F76E  B4D8               	btfsc	status,2,c
 20373  00F770  D7BB               	goto	l16738
 20374                           
 20375                           ; BSR set to: 0
 20376                           ;config_file.c: 103: };config_file.c: 106: return (item_ctr+value_ctr);
 20377                           
 20378                           ; BSR set to: 0
 20379  00F772  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20380  00F774  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20381  00F776  0012               	return	
 20382  00F778                     __end_of__get_item:
 20383                           	opt stack 0
 20384                           tblptru	equ	0xFF8
 20385                           tblptrh	equ	0xFF7
 20386                           tblptrl	equ	0xFF6
 20387                           tablat	equ	0xFF5
 20388                           prodh	equ	0xFF4
 20389                           prodl	equ	0xFF3
 20390                           postinc0	equ	0xFEE
 20391                           wreg	equ	0xFE8
 20392                           indf1	equ	0xFE7
 20393                           postinc1	equ	0xFE6
 20394                           postdec1	equ	0xFE5
 20395                           plusw1	equ	0xFE3
 20396                           fsr1h	equ	0xFE2
 20397                           fsr1l	equ	0xFE1
 20398                           indf2	equ	0xFDF
 20399                           postinc2	equ	0xFDE
 20400                           postdec2	equ	0xFDD
 20401                           plusw2	equ	0xFDB
 20402                           fsr2h	equ	0xFDA
 20403                           fsr2l	equ	0xFD9
 20404                           status	equ	0xFD8
 20405                           
 20406 ;; *************** function _adc_init *****************
 20407 ;; Defined at:
 20408 ;;		line 19 in file "adc.c"
 20409 ;; Parameters:    Size  Location     Type
 20410 ;;		None
 20411 ;; Auto vars:     Size  Location     Type
 20412 ;;		None
 20413 ;; Return value:  Size  Location     Type
 20414 ;;                  1    wreg      void 
 20415 ;; Registers used:
 20416 ;;		wreg, status,2
 20417 ;; Tracked objects:
 20418 ;;		On entry : 0/0
 20419 ;;		On exit  : 0/0
 20420 ;;		Unchanged: 0/0
 20421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20426 ;;Total ram usage:        0 bytes
 20427 ;; Hardware stack levels used:    1
 20428 ;; Hardware stack levels required when called:   10
 20429 ;; This function calls:
 20430 ;;		Nothing
 20431 ;; This function is called by:
 20432 ;;		_system_init
 20433 ;; This function uses a non-reentrant model
 20434 ;;
 20435                           
 20436                           	psect	text85
 20437  014BCE                     __ptext85:
 20438                           	opt stack 0
 20439  014BCE                     _adc_init:
 20440                           	opt stack 19
 20441                           
 20442                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;incstack = 0
 20446  014BCE  0E00               	movlw	0
 20447  014BD0  0101               	movlb	1	; () banked
 20448  014BD2  6F8F               	movwf	(_os+41)& (0+255),b	;volatile
 20449  014BD4  0E00               	movlw	0
 20450  014BD6  6F8E               	movwf	(_os+40)& (0+255),b	;volatile
 20451                           
 20452                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20453  014BD8  0E00               	movlw	0
 20454  014BDA  6F91               	movwf	(_os+43)& (0+255),b	;volatile
 20455  014BDC  0E00               	movlw	0
 20456  014BDE  6F90               	movwf	(_os+42)& (0+255),b	;volatile
 20457                           
 20458                           ;adc.c: 24: os.fan_on = 0;
 20459  014BE0  0E00               	movlw	0
 20460  014BE2  6F95               	movwf	(_os+47)& (0+255),b	;volatile
 20461                           
 20462                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20463  014BE4  0E00               	movlw	0
 20464  014BE6  0102               	movlb	2	; () banked
 20465  014BE8  6F31               	movwf	_params& (0+255),b
 20466                           
 20467                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20468  014BEA  0E00               	movlw	0
 20469  014BEC  6F33               	movwf	(_params+2)& (0+255),b
 20470  014BEE  0E00               	movlw	0
 20471  014BF0  6F32               	movwf	(_params+1)& (0+255),b
 20472                           
 20473                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20474  014BF2  0E00               	movlw	0
 20475  014BF4  6F36               	movwf	(_params+5)& (0+255),b
 20476                           
 20477                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20478  014BF6  0E00               	movlw	0
 20479  014BF8  6F35               	movwf	(_params+4)& (0+255),b
 20480  014BFA  0E00               	movlw	0
 20481  014BFC  6F34               	movwf	(_params+3)& (0+255),b
 20482                           
 20483                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20484  014BFE  0E00               	movlw	0
 20485  014C00  6F37               	movwf	(_params+6)& (0+255),b
 20486                           
 20487                           ; BSR set to: 2
 20488                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20489  014C02  9EC2               	bcf	4034,7,c	;volatile
 20490                           
 20491                           ; BSR set to: 2
 20492                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20493  014C04  9CC2               	bcf	4034,6,c	;volatile
 20494                           
 20495                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20496  014C06  50C2               	movf	4034,w,c	;volatile
 20497  014C08  0BC3               	andlw	-61
 20498  014C0A  0924               	iorlw	36
 20499  014C0C  6EC2               	movwf	4034,c	;volatile
 20500                           
 20501                           ; BSR set to: 2
 20502                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20503  014C0E  8EC1               	bsf	4033,7,c	;volatile
 20504                           
 20505                           ; BSR set to: 2
 20506                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20507  014C10  9CC1               	bcf	4033,6,c	;volatile
 20508                           
 20509                           ; BSR set to: 2
 20510                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20511  014C12  86C1               	bsf	4033,3,c	;volatile
 20512  014C14  88C1               	bsf	4033,4,c	;volatile
 20513  014C16  8AC1               	bsf	4033,5,c	;volatile
 20514                           
 20515                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20516  014C18  50C1               	movf	4033,w,c	;volatile
 20517  014C1A  0BF8               	andlw	-8
 20518  014C1C  0906               	iorlw	6
 20519  014C1E  6EC1               	movwf	4033,c	;volatile
 20520                           
 20521                           ; BSR set to: 2
 20522                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20523  014C20  80C2               	bsf	4034,0,c	;volatile
 20524                           
 20525                           ; BSR set to: 2
 20526                           ;adc.c: 41: ADCON0bits.GO = 1;
 20527  014C22  82C2               	bsf	4034,1,c	;volatile
 20528                           
 20529                           ; BSR set to: 2
 20530  014C24  0012               	return		;funcret
 20531  014C26                     __end_of_adc_init:
 20532                           	opt stack 0
 20533                           tblptru	equ	0xFF8
 20534                           tblptrh	equ	0xFF7
 20535                           tblptrl	equ	0xFF6
 20536                           tablat	equ	0xFF5
 20537                           prodh	equ	0xFF4
 20538                           prodl	equ	0xFF3
 20539                           postinc0	equ	0xFEE
 20540                           wreg	equ	0xFE8
 20541                           indf1	equ	0xFE7
 20542                           postinc1	equ	0xFE6
 20543                           postdec1	equ	0xFE5
 20544                           plusw1	equ	0xFE3
 20545                           fsr1h	equ	0xFE2
 20546                           fsr1l	equ	0xFE1
 20547                           indf2	equ	0xFDF
 20548                           postinc2	equ	0xFDE
 20549                           postdec2	equ	0xFDD
 20550                           plusw2	equ	0xFDB
 20551                           fsr2h	equ	0xFDA
 20552                           fsr2l	equ	0xFD9
 20553                           status	equ	0xFD8
 20554                           
 20555 ;; *************** function __system_timer0_init *****************
 20556 ;; Defined at:
 20557 ;;		line 125 in file "os.c"
 20558 ;; Parameters:    Size  Location     Type
 20559 ;;		None
 20560 ;; Auto vars:     Size  Location     Type
 20561 ;;		None
 20562 ;; Return value:  Size  Location     Type
 20563 ;;                  1    wreg      void 
 20564 ;; Registers used:
 20565 ;;		wreg, status,2
 20566 ;; Tracked objects:
 20567 ;;		On entry : 0/0
 20568 ;;		On exit  : 0/0
 20569 ;;		Unchanged: 0/0
 20570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20575 ;;Total ram usage:        0 bytes
 20576 ;; Hardware stack levels used:    1
 20577 ;; Hardware stack levels required when called:   10
 20578 ;; This function calls:
 20579 ;;		Nothing
 20580 ;; This function is called by:
 20581 ;;		_system_init
 20582 ;; This function uses a non-reentrant model
 20583 ;;
 20584                           
 20585                           	psect	text86
 20586  015982                     __ptext86:
 20587                           	opt stack 0
 20588  015982                     __system_timer0_init:
 20589                           	opt stack 19
 20590                           
 20591                           ;os.c: 130: T0CONbits.T0CS = 0;
 20592                           
 20593                           ; BSR set to: 2
 20594                           ;incstack = 0
 20595  015982  9AD5               	bcf	4053,5,c	;volatile
 20596                           
 20597                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20598  015984  9CD5               	bcf	4053,6,c	;volatile
 20599                           
 20600                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20601  015986  94D5               	bcf	4053,2,c	;volatile
 20602                           
 20603                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20604  015988  82D5               	bsf	4053,1,c	;volatile
 20605                           
 20606                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20607  01598A  90D5               	bcf	4053,0,c	;volatile
 20608                           
 20609                           ;os.c: 138: T0CONbits.PSA = 0;
 20610  01598C  96D5               	bcf	4053,3,c	;volatile
 20611                           
 20612                           ;os.c: 140: TMR0H = 0xFA;
 20613  01598E  0EFA               	movlw	250
 20614  015990  6ED7               	movwf	4055,c	;volatile
 20615                           
 20616                           ;os.c: 141: TMR0L = 0x24;
 20617  015992  0E24               	movlw	36
 20618  015994  6ED6               	movwf	4054,c	;volatile
 20619                           
 20620                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20621  015996  8ED5               	bsf	4053,7,c	;volatile
 20622                           
 20623                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20624  015998  94F2               	bcf	intcon,2,c	;volatile
 20625                           
 20626                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20627  01599A  8AF2               	bsf	intcon,5,c	;volatile
 20628                           
 20629                           ;os.c: 148: INTCONbits.GIE = 1;
 20630  01599C  8EF2               	bsf	intcon,7,c	;volatile
 20631                           
 20632                           ;os.c: 151: os.subTimeSlot = 0;
 20633  01599E  0E00               	movlw	0
 20634  0159A0  0101               	movlb	1	; () banked
 20635  0159A2  6F66               	movwf	_os& (0+255),b	;volatile
 20636                           
 20637                           ;os.c: 152: os.timeSlot = 0;
 20638  0159A4  0E00               	movlw	0
 20639  0159A6  6F67               	movwf	(_os+1)& (0+255),b	;volatile
 20640                           
 20641                           ;os.c: 153: os.done = 0;
 20642  0159A8  0E00               	movlw	0
 20643  0159AA  6F68               	movwf	(_os+2)& (0+255),b	;volatile
 20644                           
 20645                           ; BSR set to: 1
 20646  0159AC  0012               	return		;funcret
 20647  0159AE                     __end_of__system_timer0_init:
 20648                           	opt stack 0
 20649                           tblptru	equ	0xFF8
 20650                           tblptrh	equ	0xFF7
 20651                           tblptrl	equ	0xFF6
 20652                           tablat	equ	0xFF5
 20653                           prodh	equ	0xFF4
 20654                           prodl	equ	0xFF3
 20655                           intcon	equ	0xFF2
 20656                           postinc0	equ	0xFEE
 20657                           wreg	equ	0xFE8
 20658                           indf1	equ	0xFE7
 20659                           postinc1	equ	0xFE6
 20660                           postdec1	equ	0xFE5
 20661                           plusw1	equ	0xFE3
 20662                           fsr1h	equ	0xFE2
 20663                           fsr1l	equ	0xFE1
 20664                           indf2	equ	0xFDF
 20665                           postinc2	equ	0xFDE
 20666                           postdec2	equ	0xFDD
 20667                           plusw2	equ	0xFDB
 20668                           fsr2h	equ	0xFDA
 20669                           fsr2l	equ	0xFD9
 20670                           status	equ	0xFD8
 20671                           
 20672 ;; *************** function __system_pin_setup *****************
 20673 ;; Defined at:
 20674 ;;		line 59 in file "os.c"
 20675 ;; Parameters:    Size  Location     Type
 20676 ;;		None
 20677 ;; Auto vars:     Size  Location     Type
 20678 ;;		None
 20679 ;; Return value:  Size  Location     Type
 20680 ;;                  1    wreg      void 
 20681 ;; Registers used:
 20682 ;;		wreg, status,2
 20683 ;; Tracked objects:
 20684 ;;		On entry : 0/0
 20685 ;;		On exit  : 0/0
 20686 ;;		Unchanged: 0/0
 20687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20692 ;;Total ram usage:        0 bytes
 20693 ;; Hardware stack levels used:    1
 20694 ;; Hardware stack levels required when called:   10
 20695 ;; This function calls:
 20696 ;;		Nothing
 20697 ;; This function is called by:
 20698 ;;		_system_init
 20699 ;; This function uses a non-reentrant model
 20700 ;;
 20701                           
 20702                           	psect	text87
 20703  014582                     __ptext87:
 20704                           	opt stack 0
 20705  014582                     __system_pin_setup:
 20706                           	opt stack 19
 20707                           
 20708                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20709                           
 20710                           ; BSR set to: 1
 20711                           ;incstack = 0
 20712  014582  8A95               	bsf	3989,5,c	;volatile
 20713                           
 20714                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20715  014584  9895               	bcf	3989,4,c	;volatile
 20716                           
 20717                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20718  014586  9C95               	bcf	3989,6,c	;volatile
 20719                           
 20720                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20721  014588  9E95               	bcf	3989,7,c	;volatile
 20722                           
 20723                           ;os.c: 66: LATDbits.LD7 = 1;
 20724  01458A  8E8C               	bsf	3980,7,c	;volatile
 20725                           
 20726                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20727  01458C  8693               	bsf	3987,3,c	;volatile
 20728                           
 20729                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20730  01458E  010F               	movlb	15	; () banked
 20731  014590  9349               	bcf	73,1,b	;volatile
 20732                           
 20733                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20734  014592  9E94               	bcf	3988,7,c	;volatile
 20735                           
 20736                           ;os.c: 72: LATCbits.LC7 = 0;
 20737  014594  9E8B               	bcf	3979,7,c	;volatile
 20738                           
 20739                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20740  014596  9C94               	bcf	3988,6,c	;volatile
 20741                           
 20742                           ;os.c: 75: LATCbits.LC6 = 0;
 20743  014598  9C8B               	bcf	3979,6,c	;volatile
 20744                           
 20745                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20746  01459A  9692               	bcf	3986,3,c	;volatile
 20747                           
 20748                           ;os.c: 78: LATAbits.LA3 = 0;
 20749  01459C  9689               	bcf	3977,3,c	;volatile
 20750                           
 20751                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20752  01459E  9294               	bcf	3988,1,c	;volatile
 20753                           
 20754                           ;os.c: 81: LATCbits.LC1 = 0;
 20755  0145A0  928B               	bcf	3979,1,c	;volatile
 20756                           
 20757                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20758  0145A2  8A93               	bsf	3987,5,c	;volatile
 20759                           
 20760                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20761  0145A4  8893               	bsf	3987,4,c	;volatile
 20762                           
 20763                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20764  0145A6  9093               	bcf	3987,0,c	;volatile
 20765                           
 20766                           ;os.c: 90: LATBbits.LB0 = 1;
 20767  0145A8  808A               	bsf	3978,0,c	;volatile
 20768                           
 20769                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20770  0145AA  9493               	bcf	3987,2,c	;volatile
 20771                           
 20772                           ;os.c: 93: LATBbits.LB2 = 0;
 20773  0145AC  948A               	bcf	3978,2,c	;volatile
 20774                           
 20775                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20776  0145AE  9293               	bcf	3987,1,c	;volatile
 20777                           
 20778                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20779  0145B0  8549               	bsf	73,2,b	;volatile
 20780                           
 20781                           ;os.c: 97: LATBbits.LB1 = 0;
 20782  0145B2  928A               	bcf	3978,1,c	;volatile
 20783                           
 20784                           ; BSR set to: 15
 20785                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20786  0145B4  0E55               	movlw	85
 20787  0145B6  6EA7               	movwf	4007,c	;volsfr
 20788  0145B8  0EAA               	movlw	170
 20789  0145BA  6EA7               	movwf	4007,c	;volsfr
 20790                           
 20791                           ; BSR set to: 15
 20792  0145BC  010E               	movlb	14	; () banked
 20793  0145BE  91BF               	bcf	191,0,b	;volatile
 20794                           
 20795                           ;os.c: 99: RPOR4 = 14;
 20796  0145C0  0E0E               	movlw	14
 20797  0145C2  6FC4               	movwf	196,b	;volatile
 20798                           
 20799                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20800  0145C4  0E55               	movlw	85
 20801  0145C6  6EA7               	movwf	4007,c	;volsfr
 20802  0145C8  0EAA               	movlw	170
 20803  0145CA  6EA7               	movwf	4007,c	;volsfr
 20804                           
 20805                           ; BSR set to: 14
 20806  0145CC  81BF               	bsf	191,0,b	;volatile
 20807                           
 20808                           ; BSR set to: 14
 20809                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20810  0145CE  8495               	bsf	3989,2,c	;volatile
 20811                           
 20812                           ; BSR set to: 14
 20813                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20814  0145D0  8496               	bsf	3990,2,c	;volatile
 20815                           
 20816                           ; BSR set to: 14
 20817                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20818  0145D2  010F               	movlb	15	; () banked
 20819  0145D4  8F48               	bsf	72,7,b	;volatile
 20820                           
 20821                           ; BSR set to: 15
 20822                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20823  0145D6  8096               	bsf	3990,0,c	;volatile
 20824                           
 20825                           ; BSR set to: 15
 20826                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20827  0145D8  8B48               	bsf	72,5,b	;volatile
 20828                           
 20829                           ; BSR set to: 15
 20830                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20831  0145DA  8296               	bsf	3990,1,c	;volatile
 20832                           
 20833                           ; BSR set to: 15
 20834                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20835  0145DC  8D48               	bsf	72,6,b	;volatile
 20836                           
 20837                           ; BSR set to: 15
 20838                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20839  0145DE  8092               	bsf	3986,0,c	;volatile
 20840                           
 20841                           ; BSR set to: 15
 20842                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20843  0145E0  8148               	bsf	72,0,b	;volatile
 20844                           
 20845                           ; BSR set to: 15
 20846                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20847  0145E2  8492               	bsf	3986,2,c	;volatile
 20848                           
 20849                           ; BSR set to: 15
 20850                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20851  0145E4  8548               	bsf	72,2,b	;volatile
 20852                           
 20853                           ; BSR set to: 15
 20854                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20855  0145E6  8292               	bsf	3986,1,c	;volatile
 20856                           
 20857                           ; BSR set to: 15
 20858                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20859  0145E8  8348               	bsf	72,1,b	;volatile
 20860                           
 20861                           ; BSR set to: 15
 20862  0145EA  0012               	return		;funcret
 20863  0145EC                     __end_of__system_pin_setup:
 20864                           	opt stack 0
 20865                           tblptru	equ	0xFF8
 20866                           tblptrh	equ	0xFF7
 20867                           tblptrl	equ	0xFF6
 20868                           tablat	equ	0xFF5
 20869                           prodh	equ	0xFF4
 20870                           prodl	equ	0xFF3
 20871                           intcon	equ	0xFF2
 20872                           postinc0	equ	0xFEE
 20873                           wreg	equ	0xFE8
 20874                           indf1	equ	0xFE7
 20875                           postinc1	equ	0xFE6
 20876                           postdec1	equ	0xFE5
 20877                           plusw1	equ	0xFE3
 20878                           fsr1h	equ	0xFE2
 20879                           fsr1l	equ	0xFE1
 20880                           indf2	equ	0xFDF
 20881                           postinc2	equ	0xFDE
 20882                           postdec2	equ	0xFDD
 20883                           plusw2	equ	0xFDB
 20884                           fsr2h	equ	0xFDA
 20885                           fsr2l	equ	0xFD9
 20886                           status	equ	0xFD8
 20887                           
 20888 ;; *************** function __backlight_init *****************
 20889 ;; Defined at:
 20890 ;;		line 158 in file "os.c"
 20891 ;; Parameters:    Size  Location     Type
 20892 ;;		None
 20893 ;; Auto vars:     Size  Location     Type
 20894 ;;		None
 20895 ;; Return value:  Size  Location     Type
 20896 ;;                  1    wreg      void 
 20897 ;; Registers used:
 20898 ;;		None
 20899 ;; Tracked objects:
 20900 ;;		On entry : 0/0
 20901 ;;		On exit  : 0/0
 20902 ;;		Unchanged: 0/0
 20903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20908 ;;Total ram usage:        0 bytes
 20909 ;; Hardware stack levels used:    1
 20910 ;; Hardware stack levels required when called:   10
 20911 ;; This function calls:
 20912 ;;		Nothing
 20913 ;; This function is called by:
 20914 ;;		_system_init
 20915 ;; This function uses a non-reentrant model
 20916 ;;
 20917                           
 20918                           	psect	text88
 20919  015E2C                     __ptext88:
 20920                           	opt stack 0
 20921  015E2C                     __backlight_init:
 20922                           	opt stack 19
 20923                           
 20924                           ;os.c: 160: LATCbits.LC1 = 1;
 20925                           
 20926                           ; BSR set to: 15
 20927                           ;incstack = 0
 20928  015E2C  828B               	bsf	3979,1,c	;volatile
 20929  015E2E  0012               	return		;funcret
 20930  015E30                     __end_of__backlight_init:
 20931                           	opt stack 0
 20932                           tblptru	equ	0xFF8
 20933                           tblptrh	equ	0xFF7
 20934                           tblptrl	equ	0xFF6
 20935                           tablat	equ	0xFF5
 20936                           prodh	equ	0xFF4
 20937                           prodl	equ	0xFF3
 20938                           intcon	equ	0xFF2
 20939                           postinc0	equ	0xFEE
 20940                           wreg	equ	0xFE8
 20941                           indf1	equ	0xFE7
 20942                           postinc1	equ	0xFE6
 20943                           postdec1	equ	0xFE5
 20944                           plusw1	equ	0xFE3
 20945                           fsr1h	equ	0xFE2
 20946                           fsr1l	equ	0xFE1
 20947                           indf2	equ	0xFDF
 20948                           postinc2	equ	0xFDE
 20949                           postdec2	equ	0xFDD
 20950                           plusw2	equ	0xFDB
 20951                           fsr2h	equ	0xFDA
 20952                           fsr2l	equ	0xFD9
 20953                           status	equ	0xFD8
 20954                           
 20955 ;; *************** function _motor_process_cue *****************
 20956 ;; Defined at:
 20957 ;;		line 620 in file "motor.c"
 20958 ;; Parameters:    Size  Location     Type
 20959 ;;		None
 20960 ;; Auto vars:     Size  Location     Type
 20961 ;;		None
 20962 ;; Return value:  Size  Location     Type
 20963 ;;                  1    wreg      void 
 20964 ;; Registers used:
 20965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20966 ;; Tracked objects:
 20967 ;;		On entry : 0/0
 20968 ;;		On exit  : 0/0
 20969 ;;		Unchanged: 0/0
 20970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20975 ;;Total ram usage:        0 bytes
 20976 ;; Hardware stack levels used:    1
 20977 ;; Hardware stack levels required when called:   11
 20978 ;; This function calls:
 20979 ;;		__motor_run
 20980 ;;		_motor_items_in_cue
 20981 ;; This function is called by:
 20982 ;;		_main
 20983 ;; This function uses a non-reentrant model
 20984 ;;
 20985                           
 20986                           	psect	text89
 20987  0135FC                     __ptext89:
 20988                           	opt stack 0
 20989  0135FC                     _motor_process_cue:
 20990                           	opt stack 19
 20991                           
 20992                           ;motor.c: 622: if(motor_items_in_cue()==0)
 20993                           
 20994                           ;incstack = 0
 20995  0135FC  ECDE  F0AE         	call	_motor_items_in_cue	;wreg free
 20996  013600  0900               	iorlw	0
 20997  013602  B4D8               	btfsc	status,2,c
 20998  013604  0012               	return	
 20999                           
 21000                           ;motor.c: 626: };motor.c: 628: if(os.busy)
 21001                           
 21002                           ;motor.c: 623: {;motor.c: 625: return;
 21003  013606  0101               	movlb	1	; () banked
 21004  013608  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 21005  01360A  A4D8               	btfss	status,2,c
 21006  01360C  0012               	return	
 21007                           
 21008                           ; BSR set to: 1
 21009                           ;motor.c: 632: };motor.c: 635: _motor_run(;motor.c: 636: motor_command_cue[motor_cue_rea
      +                          d_index].direction,;motor.c: 637: motor_command_cue[motor_cue_read_index].distance,;moto
      +                          r.c: 638: motor_command_cue[motor_cue_read_index].speed,;motor.c: 639: motor_command_cue
      +                          [motor_cue_read_index].type;motor.c: 640: );
 21010                           
 21011                           ; BSR set to: 1
 21012                           
 21013                           ; BSR set to: 1
 21014                           ;motor.c: 629: {;motor.c: 631: return;
 21015  01360E  514D               	movf	_motor_cue_read_index& (0+255),w,b
 21016  013610  0D08               	mullw	8
 21017  013612  0E01               	movlw	1
 21018  013614  26F3               	addwf	prodl,f,c
 21019  013616  0E00               	movlw	0
 21020  013618  22F4               	addwfc	prodh,f,c
 21021  01361A  0E00               	movlw	low _motor_command_cue
 21022  01361C  24F3               	addwf	prodl,w,c
 21023  01361E  6ED9               	movwf	fsr2l,c
 21024  013620  0E03               	movlw	high _motor_command_cue
 21025  013622  20F4               	addwfc	prodh,w,c
 21026  013624  6EDA               	movwf	fsr2h,c
 21027  013626  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 21028  01362A  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 21029  01362E  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 21030  013632  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 21031  013636  514D               	movf	_motor_cue_read_index& (0+255),w,b
 21032  013638  0D08               	mullw	8
 21033  01363A  0E05               	movlw	5
 21034  01363C  26F3               	addwf	prodl,f,c
 21035  01363E  0E00               	movlw	0
 21036  013640  22F4               	addwfc	prodh,f,c
 21037  013642  0E00               	movlw	low _motor_command_cue
 21038  013644  24F3               	addwf	prodl,w,c
 21039  013646  6ED9               	movwf	fsr2l,c
 21040  013648  0E03               	movlw	high _motor_command_cue
 21041  01364A  20F4               	addwfc	prodh,w,c
 21042  01364C  6EDA               	movwf	fsr2h,c
 21043  01364E  CFDE F064          	movff	postinc2,__motor_run@speed
 21044  013652  CFDD F065          	movff	postdec2,__motor_run@speed+1
 21045  013656  514D               	movf	_motor_cue_read_index& (0+255),w,b
 21046  013658  0D08               	mullw	8
 21047  01365A  0E07               	movlw	7
 21048  01365C  26F3               	addwf	prodl,f,c
 21049  01365E  0E00               	movlw	0
 21050  013660  22F4               	addwfc	prodh,f,c
 21051  013662  0E00               	movlw	low _motor_command_cue
 21052  013664  24F3               	addwf	prodl,w,c
 21053  013666  6ED9               	movwf	fsr2l,c
 21054  013668  0E03               	movlw	high _motor_command_cue
 21055  01366A  20F4               	addwfc	prodh,w,c
 21056  01366C  6EDA               	movwf	fsr2h,c
 21057  01366E  50DF               	movf	indf2,w,c
 21058  013670  0100               	movlb	0	; () banked
 21059  013672  6F66               	movwf	__motor_run@type& (0+255),b
 21060  013674  0101               	movlb	1	; () banked
 21061  013676  514D               	movf	_motor_cue_read_index& (0+255),w,b
 21062  013678  0D08               	mullw	8
 21063  01367A  0E00               	movlw	low _motor_command_cue
 21064  01367C  24F3               	addwf	prodl,w,c
 21065  01367E  6ED9               	movwf	fsr2l,c
 21066  013680  0E03               	movlw	high _motor_command_cue
 21067  013682  20F4               	addwfc	prodh,w,c
 21068  013684  6EDA               	movwf	fsr2h,c
 21069  013686  50DF               	movf	indf2,w,c
 21070  013688  ECD3  F075         	call	__motor_run
 21071                           
 21072                           ;motor.c: 642: ++motor_cue_read_index;
 21073  01368C  0101               	movlb	1	; () banked
 21074  01368E  2B4D               	incf	_motor_cue_read_index& (0+255),f,b
 21075                           
 21076                           ; BSR set to: 1
 21077                           ;motor.c: 643: motor_cue_read_index &= 0b111;
 21078  013690  0E07               	movlw	7
 21079  013692  174D               	andwf	_motor_cue_read_index& (0+255),f,b
 21080  013694  0012               	return		;funcret
 21081  013696                     __end_of_motor_process_cue:
 21082                           	opt stack 0
 21083                           tblptru	equ	0xFF8
 21084                           tblptrh	equ	0xFF7
 21085                           tblptrl	equ	0xFF6
 21086                           tablat	equ	0xFF5
 21087                           prodh	equ	0xFF4
 21088                           prodl	equ	0xFF3
 21089                           intcon	equ	0xFF2
 21090                           postinc0	equ	0xFEE
 21091                           wreg	equ	0xFE8
 21092                           indf1	equ	0xFE7
 21093                           postinc1	equ	0xFE6
 21094                           postdec1	equ	0xFE5
 21095                           plusw1	equ	0xFE3
 21096                           fsr1h	equ	0xFE2
 21097                           fsr1l	equ	0xFE1
 21098                           indf2	equ	0xFDF
 21099                           postinc2	equ	0xFDE
 21100                           postdec2	equ	0xFDD
 21101                           plusw2	equ	0xFDB
 21102                           fsr2h	equ	0xFDA
 21103                           fsr2l	equ	0xFD9
 21104                           status	equ	0xFD8
 21105                           
 21106 ;; *************** function __motor_run *****************
 21107 ;; Defined at:
 21108 ;;		line 41 in file "motor.c"
 21109 ;; Parameters:    Size  Location     Type
 21110 ;;  direction       1    wreg     enum E6622
 21111 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 21112 ;;  speed           2    4[BANK0 ] unsigned int 
 21113 ;;  type            1    6[BANK0 ] enum E6631
 21114 ;; Auto vars:     Size  Location     Type
 21115 ;;  direction       1   11[BANK0 ] enum E6622
 21116 ;; Return value:  Size  Location     Type
 21117 ;;                  1    wreg      void 
 21118 ;; Registers used:
 21119 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 21120 ;; Tracked objects:
 21121 ;;		On entry : 0/0
 21122 ;;		On exit  : 0/0
 21123 ;;		Unchanged: 0/0
 21124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21125 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21127 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21128 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21129 ;;Total ram usage:       12 bytes
 21130 ;; Hardware stack levels used:    1
 21131 ;; Hardware stack levels required when called:   10
 21132 ;; This function calls:
 21133 ;;		Nothing
 21134 ;; This function is called by:
 21135 ;;		_motor_process_cue
 21136 ;; This function uses a non-reentrant model
 21137 ;;
 21138                           
 21139                           	psect	text90
 21140  00EBA6                     __ptext90:
 21141                           	opt stack 0
 21142  00EBA6                     __motor_run:
 21143                           	opt stack 19
 21144                           
 21145                           ;incstack = 0
 21146                           ;__motor_run@direction stored from wreg
 21147  00EBA6  0100               	movlb	0	; () banked
 21148  00EBA8  6F6B               	movwf	__motor_run@direction& (0+255),b
 21149                           
 21150                           ;motor.c: 48: motor_direction = direction;
 21151  00EBAA  C06B  F14A         	movff	__motor_run@direction,_motor_direction
 21152                           
 21153                           ;motor.c: 49: motor_final_stepcount = distance_in_steps;
 21154  00EBAE  C060  F119         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 21155  00EBB2  C061  F11A         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 21156  00EBB6  C062  F11B         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 21157  00EBBA  C063  F11C         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 21158                           
 21159                           ;motor.c: 50: motor_maximum_speed = speed;
 21160  00EBBE  C064  F135         	movff	__motor_run@speed,_motor_maximum_speed
 21161  00EBC2  C065  F136         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 21162                           
 21163                           ;motor.c: 51: motor_move_type = type;
 21164  00EBC6  C066  F14B         	movff	__motor_run@type,_motor_move_type
 21165                           
 21166                           ;motor.c: 54: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 21167  00EBCA  0101               	movlb	1	; () banked
 21168  00EBCC  054B               	decf	_motor_move_type& (0+255),w,b
 21169  00EBCE  A4D8               	btfss	status,2,c
 21170  00EBD0  D004               	goto	l2442
 21171                           
 21172                           ; BSR set to: 1
 21173                           ;motor.c: 55: {;motor.c: 56: motor_final_stepcount = 0xFFFFFFFF;
 21174  00EBD2  6919               	setf	_motor_final_stepcount& (0+255),b	;volatile
 21175  00EBD4  691A               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 21176  00EBD6  691B               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 21177  00EBD8  691C               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 21178  00EBDA                     l2442:
 21179                           
 21180                           ; BSR set to: 1
 21181                           ;motor.c: 57: };motor.c: 60: motor_current_speed = 0;
 21182                           
 21183                           ; BSR set to: 1
 21184  00EBDA  0E00               	movlw	0
 21185  00EBDC  0100               	movlb	0	; () banked
 21186  00EBDE  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 21187  00EBE0  0E00               	movlw	0
 21188  00EBE2  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 21189                           
 21190                           ;motor.c: 61: motor_current_stepcount = 0;
 21191  00EBE4  0E00               	movlw	0
 21192  00EBE6  0101               	movlb	1	; () banked
 21193  00EBE8  6F1D               	movwf	_motor_current_stepcount& (0+255),b	;volatile
 21194  00EBEA  0E00               	movlw	0
 21195  00EBEC  6F1E               	movwf	(_motor_current_stepcount+1)& (0+255),b	;volatile
 21196  00EBEE  0E00               	movlw	0
 21197  00EBF0  6F1F               	movwf	(_motor_current_stepcount+2)& (0+255),b	;volatile
 21198  00EBF2  0E00               	movlw	0
 21199  00EBF4  6F20               	movwf	(_motor_current_stepcount+3)& (0+255),b	;volatile
 21200                           
 21201                           ; BSR set to: 1
 21202                           ;motor.c: 62: motor_next_speed_check = motor_steps_lookup[1];
 21203  00EBF6  0E63               	movlw	low (_motor_steps_lookup+2)
 21204  00EBF8  6EF6               	movwf	tblptrl,c
 21205  00EBFA  0E94               	movlw	high (_motor_steps_lookup+2)
 21206  00EBFC  6EF7               	movwf	tblptrh,c
 21207  00EBFE                     	if	0	;tblptru may be non-zero
 21208  00EBFE                     	endif
 21209  00EBFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21210  00EBFE  0E00               	movlw	low (__mediumconst shr (0+16))
 21211  00EC00  6EF8               	movwf	tblptru,c
 21212  00EC02                     	endif
 21213  00EC02  0009               	tblrd		*+
 21214  00EC04  CFF5 F067          	movff	tablat,??__motor_run
 21215  00EC08  0009               	tblrd		*+
 21216  00EC0A  CFF5 F068          	movff	tablat,??__motor_run+1
 21217  00EC0E  C067  F115         	movff	??__motor_run,_motor_next_speed_check	;volatile
 21218  00EC12  C068  F116         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 21219  00EC16  6B17               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 21220  00EC18  6B18               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 21221                           
 21222                           ; BSR set to: 1
 21223                           ;motor.c: 65: CCP1CONbits.CCP1M = 0b0000;
 21224  00EC1A  90BA               	bcf	4026,0,c	;volatile
 21225  00EC1C  92BA               	bcf	4026,1,c	;volatile
 21226  00EC1E  94BA               	bcf	4026,2,c	;volatile
 21227  00EC20  96BA               	bcf	4026,3,c	;volatile
 21228                           
 21229                           ; BSR set to: 1
 21230                           ;motor.c: 68: LATBbits.LB0 = 0;
 21231  00EC22  908A               	bcf	3978,0,c	;volatile
 21232                           
 21233                           ; BSR set to: 1
 21234                           ;motor.c: 69: if(direction==MOTOR_DIRECTION_CCW)
 21235  00EC24  0100               	movlb	0	; () banked
 21236  00EC26  296B               	incf	__motor_run@direction& (0+255),w,b
 21237  00EC28  A4D8               	btfss	status,2,c
 21238  00EC2A  D005               	goto	l2443
 21239                           
 21240                           ; BSR set to: 0
 21241                           ;motor.c: 70: {;motor.c: 71: if(config.inverse_direction)
 21242  00EC2C  0101               	movlb	1	; () banked
 21243  00EC2E  519B               	movf	(_config+4)& (0+255),w,b
 21244  00EC30  B4D8               	btfsc	status,2,c
 21245  00EC32  D005               	goto	u17090
 21246  00EC34  D006               	goto	l2447
 21247  00EC36                     l2443:
 21248                           
 21249                           ;motor.c: 76: else;motor.c: 77: {;motor.c: 78: if(config.inverse_direction)
 21250                           
 21251                           ; BSR set to: 1
 21252  00EC36  0101               	movlb	1	; () banked
 21253  00EC38  519B               	movf	(_config+4)& (0+255),w,b
 21254  00EC3A  B4D8               	btfsc	status,2,c
 21255  00EC3C  D002               	goto	l2447
 21256  00EC3E                     u17090:
 21257                           
 21258                           ; BSR set to: 1
 21259                           ;motor.c: 79: LATBbits.LB2 = 0;
 21260  00EC3E  948A               	bcf	3978,2,c	;volatile
 21261  00EC40  D001               	goto	l2448
 21262  00EC42                     l2447:
 21263                           
 21264                           ; BSR set to: 1
 21265                           ;motor.c: 80: else;motor.c: 81: LATBbits.LB2 = 1;
 21266  00EC42  848A               	bsf	3978,2,c	;volatile
 21267  00EC44                     l2448:
 21268                           
 21269                           ; BSR set to: 1
 21270                           ;motor.c: 82: };motor.c: 85: LATBbits.LB1 = 1;
 21271                           
 21272                           ; BSR set to: 1
 21273  00EC44  828A               	bsf	3978,1,c	;volatile
 21274                           
 21275                           ; BSR set to: 1
 21276                           ;motor.c: 88: ++motor_current_stepcount;
 21277  00EC46  0E01               	movlw	1
 21278  00EC48  271D               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 21279  00EC4A  0E00               	movlw	0
 21280  00EC4C  231E               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 21281  00EC4E  231F               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 21282  00EC50  2320               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 21283                           
 21284                           ;motor.c: 91: os.current_position_in_steps += motor_direction;
 21285  00EC52  514A               	movf	_motor_direction& (0+255),w,b
 21286  00EC54  0100               	movlb	0	; () banked
 21287  00EC56  6F67               	movwf	??__motor_run& (0+255),b
 21288  00EC58  0E00               	movlw	0
 21289  00EC5A  BF67               	btfsc	??__motor_run& (0+255),7,b
 21290  00EC5C  0EFF               	movlw	255
 21291  00EC5E  6F68               	movwf	(??__motor_run+1)& (0+255),b
 21292  00EC60  6F69               	movwf	(??__motor_run+2)& (0+255),b
 21293  00EC62  6F6A               	movwf	(??__motor_run+3)& (0+255),b
 21294  00EC64  5167               	movf	??__motor_run& (0+255),w,b
 21295  00EC66  0101               	movlb	1	; () banked
 21296  00EC68  276D               	addwf	(_os+7)& (0+255),f,b	;volatile
 21297  00EC6A  0100               	movlb	0	; () banked
 21298  00EC6C  5168               	movf	(??__motor_run+1)& (0+255),w,b
 21299  00EC6E  0101               	movlb	1	; () banked
 21300  00EC70  236E               	addwfc	(_os+8)& (0+255),f,b	;volatile
 21301  00EC72  0100               	movlb	0	; () banked
 21302  00EC74  5169               	movf	(??__motor_run+2)& (0+255),w,b
 21303  00EC76  0101               	movlb	1	; () banked
 21304  00EC78  236F               	addwfc	(_os+9)& (0+255),f,b	;volatile
 21305  00EC7A  0100               	movlb	0	; () banked
 21306  00EC7C  516A               	movf	(??__motor_run+3)& (0+255),w,b
 21307  00EC7E  0101               	movlb	1	; () banked
 21308  00EC80  2370               	addwfc	(_os+10)& (0+255),f,b	;volatile
 21309                           
 21310                           ;motor.c: 92: if(os.current_position_in_steps==config.full_circle_in_steps)
 21311  00EC82  5197               	movf	_config& (0+255),w,b
 21312  00EC84  196D               	xorwf	(_os+7)& (0+255),w,b	;volatile
 21313  00EC86  E114               	bnz	l17610
 21314  00EC88  5198               	movf	(_config+1)& (0+255),w,b
 21315  00EC8A  196E               	xorwf	(_os+8)& (0+255),w,b	;volatile
 21316  00EC8C  E111               	bnz	l17610
 21317  00EC8E  5199               	movf	(_config+2)& (0+255),w,b
 21318  00EC90  196F               	xorwf	(_os+9)& (0+255),w,b	;volatile
 21319  00EC92  E10E               	bnz	l17610
 21320  00EC94  519A               	movf	(_config+3)& (0+255),w,b
 21321  00EC96  1970               	xorwf	(_os+10)& (0+255),w,b	;volatile
 21322  00EC98  A4D8               	btfss	status,2,c
 21323  00EC9A  D00A               	goto	l2449
 21324                           
 21325                           ; BSR set to: 1
 21326                           ;motor.c: 93: {;motor.c: 94: os.current_position_in_steps = 0;
 21327  00EC9C  0E00               	movlw	0
 21328  00EC9E  6F6D               	movwf	(_os+7)& (0+255),b	;volatile
 21329  00ECA0  0E00               	movlw	0
 21330  00ECA2  6F6E               	movwf	(_os+8)& (0+255),b	;volatile
 21331  00ECA4  0E00               	movlw	0
 21332  00ECA6  6F6F               	movwf	(_os+9)& (0+255),b	;volatile
 21333  00ECA8  0E00               	movlw	0
 21334  00ECAA  6F70               	movwf	(_os+10)& (0+255),b	;volatile
 21335                           
 21336                           ; BSR set to: 1
 21337                           ;motor.c: 95: ++os.absolute_position;
 21338  00ECAC  4B71               	infsnz	(_os+11)& (0+255),f,b	;volatile
 21339  00ECAE  2B72               	incf	(_os+12)& (0+255),f,b	;volatile
 21340  00ECB0                     l2449:
 21341  00ECB0                     l17610:
 21342                           
 21343                           ; BSR set to: 1
 21344                           ;motor.c: 96: };motor.c: 97: if(os.current_position_in_steps==0xFFFFFFFF)
 21345  00ECB0  296D               	incf	(_os+7)& (0+255),w,b	;volatile
 21346  00ECB2  E116               	bnz	l17616
 21347  00ECB4  296E               	incf	(_os+8)& (0+255),w,b	;volatile
 21348  00ECB6  E114               	bnz	l17616
 21349  00ECB8  296F               	incf	(_os+9)& (0+255),w,b	;volatile
 21350  00ECBA  E112               	bnz	l17616
 21351  00ECBC  2970               	incf	(_os+10)& (0+255),w,b	;volatile
 21352  00ECBE  A4D8               	btfss	status,2,c
 21353  00ECC0  D00F               	goto	l2450
 21354                           
 21355                           ; BSR set to: 1
 21356                           ;motor.c: 98: {;motor.c: 99: os.current_position_in_steps = (config.full_circle_in_steps
      +                          -1);
 21357  00ECC2  0EFF               	movlw	255
 21358  00ECC4  2597               	addwf	_config& (0+255),w,b
 21359  00ECC6  6F6D               	movwf	(_os+7)& (0+255),b	;volatile
 21360  00ECC8  0EFF               	movlw	255
 21361  00ECCA  2198               	addwfc	(_config+1)& (0+255),w,b
 21362  00ECCC  6F6E               	movwf	(_os+8)& (0+255),b	;volatile
 21363  00ECCE  0EFF               	movlw	255
 21364  00ECD0  2199               	addwfc	(_config+2)& (0+255),w,b
 21365  00ECD2  6F6F               	movwf	(_os+9)& (0+255),b	;volatile
 21366  00ECD4  0EFF               	movlw	255
 21367  00ECD6  219A               	addwfc	(_config+3)& (0+255),w,b
 21368  00ECD8  6F70               	movwf	(_os+10)& (0+255),b	;volatile
 21369                           
 21370                           ; BSR set to: 1
 21371                           ;motor.c: 100: --os.absolute_position;
 21372  00ECDA  0771               	decf	(_os+11)& (0+255),f,b	;volatile
 21373  00ECDC  A0D8               	btfss	status,0,c
 21374  00ECDE  0772               	decf	(_os+12)& (0+255),f,b	;volatile
 21375  00ECE0                     l2450:
 21376  00ECE0                     l17616:
 21377                           
 21378                           ; BSR set to: 1
 21379                           ;motor.c: 101: };motor.c: 104: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOL
      +                          OCK = 0;};
 21380  00ECE0  0E55               	movlw	85
 21381  00ECE2  6EA7               	movwf	4007,c	;volsfr
 21382                           
 21383                           ; BSR set to: 1
 21384  00ECE4  0EAA               	movlw	170
 21385  00ECE6  6EA7               	movwf	4007,c	;volsfr
 21386                           
 21387                           ; BSR set to: 1
 21388  00ECE8  010E               	movlb	14	; () banked
 21389  00ECEA  91BF               	bcf	191,0,b	;volatile
 21390                           
 21391                           ; BSR set to: 14
 21392                           ;motor.c: 105: RPOR4 = 0;
 21393  00ECEC  0E00               	movlw	0
 21394  00ECEE  6FC4               	movwf	196,b	;volatile
 21395                           
 21396                           ; BSR set to: 14
 21397                           ;motor.c: 106: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 21398  00ECF0  0E55               	movlw	85
 21399  00ECF2  6EA7               	movwf	4007,c	;volsfr
 21400                           
 21401                           ; BSR set to: 14
 21402  00ECF4  0EAA               	movlw	170
 21403  00ECF6  6EA7               	movwf	4007,c	;volsfr
 21404                           
 21405                           ; BSR set to: 14
 21406  00ECF8  81BF               	bsf	191,0,b	;volatile
 21407                           
 21408                           ; BSR set to: 14
 21409                           ;motor.c: 109: motor_mode = MOTOR_MODE_MANUAL;
 21410  00ECFA  0E00               	movlw	0
 21411  00ECFC  0101               	movlb	1	; () banked
 21412  00ECFE  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 21413                           
 21414                           ; BSR set to: 1
 21415                           ;motor.c: 113: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 21416  00ED00  0EFD               	movlw	low _motor_prescaler_lookup
 21417  00ED02  0100               	movlb	0	; () banked
 21418  00ED04  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21419  00ED06  6EF6               	movwf	tblptrl,c
 21420  00ED08  0E9B               	movlw	high _motor_prescaler_lookup
 21421  00ED0A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21422  00ED0C  6EF7               	movwf	tblptrh,c
 21423  00ED0E                     	if	1	;There are 3 active tblptr bytes
 21424  00ED0E  6AF8               	clrf	tblptru,c
 21425  00ED10  0E00               	movlw	low (__mediumconst shr (0+16))
 21426  00ED12  22F8               	addwfc	tblptru,f,c
 21427  00ED14                     	endif
 21428  00ED14  0008               	tblrd		*
 21429  00ED16  CFF5 F067          	movff	tablat,??__motor_run
 21430  00ED1A  50CA               	movf	4042,w,c	;volatile
 21431  00ED1C  1967               	xorwf	??__motor_run& (0+255),w,b
 21432  00ED1E  0BFC               	andlw	-4
 21433  00ED20  1967               	xorwf	??__motor_run& (0+255),w,b
 21434  00ED22  6ECA               	movwf	4042,c	;volatile
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;motor.c: 115: PR2 = motor_period_lookup[motor_current_speed];
 21438  00ED24  0E16               	movlw	low _motor_period_lookup
 21439  00ED26  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21440  00ED28  6EF6               	movwf	tblptrl,c
 21441  00ED2A  0E9A               	movlw	high _motor_period_lookup
 21442  00ED2C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21443  00ED2E  6EF7               	movwf	tblptrh,c
 21444  00ED30                     	if	1	;There are 3 active tblptr bytes
 21445  00ED30  6AF8               	clrf	tblptru,c
 21446  00ED32  0E00               	movlw	low (__mediumconst shr (0+16))
 21447  00ED34  22F8               	addwfc	tblptru,f,c
 21448  00ED36                     	endif
 21449  00ED36  0008               	tblrd		*
 21450  00ED38  CFF5 FFCB          	movff	tablat,4043	;volatile
 21451                           
 21452                           ; BSR set to: 0
 21453                           ;motor.c: 117: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 21454  00ED3C  0E2F               	movlw	low _motor_postscaler_lookup
 21455  00ED3E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21456  00ED40  6EF6               	movwf	tblptrl,c
 21457  00ED42  0E98               	movlw	high _motor_postscaler_lookup
 21458  00ED44  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21459  00ED46  6EF7               	movwf	tblptrh,c
 21460  00ED48                     	if	1	;There are 3 active tblptr bytes
 21461  00ED48  6AF8               	clrf	tblptru,c
 21462  00ED4A  0E00               	movlw	low (__mediumconst shr (0+16))
 21463  00ED4C  22F8               	addwfc	tblptru,f,c
 21464  00ED4E                     	endif
 21465  00ED4E  0008               	tblrd		*
 21466  00ED50  CFF5 F067          	movff	tablat,??__motor_run
 21467  00ED54  4767               	rlncf	??__motor_run& (0+255),f,b
 21468  00ED56  4767               	rlncf	??__motor_run& (0+255),f,b
 21469  00ED58  4767               	rlncf	??__motor_run& (0+255),f,b
 21470  00ED5A  50CA               	movf	4042,w,c	;volatile
 21471  00ED5C  1967               	xorwf	??__motor_run& (0+255),w,b
 21472  00ED5E  0B87               	andlw	-121
 21473  00ED60  1967               	xorwf	??__motor_run& (0+255),w,b
 21474  00ED62  6ECA               	movwf	4042,c	;volatile
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;motor.c: 119: CCPR1L = PR2>>1;
 21478  00ED64  90D8               	bcf	status,0,c
 21479  00ED66  30CB               	rrcf	4043,w,c	;volatile
 21480  00ED68  6EBB               	movwf	4027,c	;volatile
 21481                           
 21482                           ; BSR set to: 0
 21483                           ;motor.c: 122: PIR1bits.TMR2IF = 0;
 21484  00ED6A  929E               	bcf	3998,1,c	;volatile
 21485                           
 21486                           ; BSR set to: 0
 21487                           ;motor.c: 123: PIE1bits.TMR2IE = 1;
 21488  00ED6C  829D               	bsf	3997,1,c	;volatile
 21489                           
 21490                           ; BSR set to: 0
 21491                           ;motor.c: 126: TMR2 = 0;
 21492  00ED6E  0E00               	movlw	0
 21493  00ED70  6ECC               	movwf	4044,c	;volatile
 21494                           
 21495                           ; BSR set to: 0
 21496                           ;motor.c: 127: T2CONbits.TMR2ON = 1;
 21497  00ED72  84CA               	bsf	4042,2,c	;volatile
 21498                           
 21499                           ; BSR set to: 0
 21500                           ;motor.c: 130: os.busy = 1;
 21501  00ED74  0E01               	movlw	1
 21502  00ED76  0101               	movlb	1	; () banked
 21503  00ED78  6F76               	movwf	(_os+16)& (0+255),b	;volatile
 21504                           
 21505                           ; BSR set to: 1
 21506  00ED7A  0012               	return		;funcret
 21507  00ED7C                     __end_of__motor_run:
 21508                           	opt stack 0
 21509                           tblptru	equ	0xFF8
 21510                           tblptrh	equ	0xFF7
 21511                           tblptrl	equ	0xFF6
 21512                           tablat	equ	0xFF5
 21513                           prodh	equ	0xFF4
 21514                           prodl	equ	0xFF3
 21515                           intcon	equ	0xFF2
 21516                           postinc0	equ	0xFEE
 21517                           wreg	equ	0xFE8
 21518                           indf1	equ	0xFE7
 21519                           postinc1	equ	0xFE6
 21520                           postdec1	equ	0xFE5
 21521                           plusw1	equ	0xFE3
 21522                           fsr1h	equ	0xFE2
 21523                           fsr1l	equ	0xFE1
 21524                           indf2	equ	0xFDF
 21525                           postinc2	equ	0xFDE
 21526                           postdec2	equ	0xFDD
 21527                           plusw2	equ	0xFDB
 21528                           fsr2h	equ	0xFDA
 21529                           fsr2l	equ	0xFD9
 21530                           status	equ	0xFD8
 21531                           
 21532 ;; *************** function _encoder_statemachine *****************
 21533 ;; Defined at:
 21534 ;;		line 210 in file "encoder.c"
 21535 ;; Parameters:    Size  Location     Type
 21536 ;;		None
 21537 ;; Auto vars:     Size  Location     Type
 21538 ;;		None
 21539 ;; Return value:  Size  Location     Type
 21540 ;;                  1    wreg      void 
 21541 ;; Registers used:
 21542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21543 ;; Tracked objects:
 21544 ;;		On entry : 0/0
 21545 ;;		On exit  : 0/0
 21546 ;;		Unchanged: 0/0
 21547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21550 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21552 ;;Total ram usage:        4 bytes
 21553 ;; Hardware stack levels used:    1
 21554 ;; Hardware stack levels required when called:   15
 21555 ;; This function calls:
 21556 ;;		__divide_jump_size_decrement
 21557 ;;		__divide_jump_size_increment
 21558 ;;		__encoder_next_arc_step_size
 21559 ;;		__encoder_next_divide_step_size
 21560 ;;		__encoder_next_setup_stepsize
 21561 ;;		_motor_arc_move
 21562 ;;		_motor_change_speed
 21563 ;;		_motor_decrease_manual_speed
 21564 ;;		_motor_divide_jump
 21565 ;;		_motor_divide_jump_to_nearest
 21566 ;;		_motor_goto_steps
 21567 ;;		_motor_increase_manual_speed
 21568 ;;		_motor_move_degrees_int
 21569 ;;		_motor_move_endless
 21570 ;;		_motor_set_zero
 21571 ;;		_motor_stop
 21572 ;; This function is called by:
 21573 ;;		_main
 21574 ;; This function uses a non-reentrant model
 21575 ;;
 21576                           
 21577                           	psect	text91
 21578  00AF94                     __ptext91:
 21579                           	opt stack 0
 21580  00AF94                     _encoder_statemachine:
 21581                           	opt stack 15
 21582                           
 21583                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21584                           
 21585                           ; BSR set to: 1
 21586                           ;incstack = 0
 21587  00AF94  0101               	movlb	1	; () banked
 21588  00AF96  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 21589  00AF98  A4D8               	btfss	status,2,c
 21590  00AF9A  D3E2               	goto	l2772
 21591                           
 21592                           ; BSR set to: 1
 21593  00AF9C  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 21594  00AF9E  A4D8               	btfss	status,2,c
 21595  00AFA0  D3DF               	goto	l2772
 21596                           
 21597                           ; BSR set to: 1
 21598  00AFA2  516A               	movf	(_os+4)& (0+255),w,b	;volatile
 21599  00AFA4  A4D8               	btfss	status,2,c
 21600  00AFA6  D3DC               	goto	l2772
 21601                           
 21602                           ; BSR set to: 1
 21603  00AFA8  516C               	movf	(_os+6)& (0+255),w,b	;volatile
 21604  00AFAA  B4D8               	btfsc	status,2,c
 21605  00AFAC  0012               	return	
 21606  00AFAE  D3D8               	goto	l2772
 21607  00AFB0                     
 21608                           ; BSR set to: 1
 21609                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21610                           
 21611                           ; BSR set to: 1
 21612  00AFB0  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 21613  00AFB2  B4D8               	btfsc	status,2,c
 21614  00AFB4  D003               	goto	u17730
 21615                           
 21616                           ; BSR set to: 1
 21617  00AFB6  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 21618  00AFB8  A4D8               	btfss	status,2,c
 21619  00AFBA  D002               	goto	l2776
 21620  00AFBC                     u17730:
 21621                           
 21622                           ; BSR set to: 1
 21623                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21624                           
 21625                           ; BSR set to: 1
 21626  00AFBC  0E11               	movlw	17
 21627  00AFBE  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21628  00AFC0                     l2776:
 21629                           
 21630                           ; BSR set to: 1
 21631                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21632                           
 21633                           ; BSR set to: 1
 21634  00AFC0  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21635  00AFC4  0100               	movlb	0	; () banked
 21636  00AFC6  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21637  00AFC8  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21638  00AFCA  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21639  00AFCC  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21640  00AFD0  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21641  00AFD2  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21642  00AFD4  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21643  00AFD6  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21644  00AFD8  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21645  00AFDA  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21646  00AFDC  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21647  00AFDE  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21648  00AFE0  D008               	goto	l2779
 21649  00AFE2  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21650  00AFE4  E103               	bnz	u17740
 21651  00AFE6  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21652  00AFE8  A0D8               	btfss	status,0,c
 21653  00AFEA  D003               	goto	l2779
 21654  00AFEC                     u17740:
 21655                           
 21656                           ; BSR set to: 0
 21657                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21658  00AFEC  0E02               	movlw	2
 21659  00AFEE  0101               	movlb	1	; () banked
 21660  00AFF0  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21661  00AFF2                     l2779:
 21662                           
 21663                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21664                           
 21665                           ; BSR set to: 1
 21666  00AFF2  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21667  00AFF6  0100               	movlb	0	; () banked
 21668  00AFF8  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21669  00AFFA  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21670  00AFFC  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21671  00AFFE  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21672  00B002  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21673  00B004  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21674  00B006  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21675  00B008  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21676  00B00A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21677  00B00C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21678  00B00E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21679  00B010  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21680  00B012  D3CB               	goto	l2807
 21681                           
 21682                           ; BSR set to: 0
 21683                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21684  00B014  0E05               	movlw	5
 21685  00B016  D392               	goto	L22
 21686  00B018                     
 21687                           ; BSR set to: 1
 21688                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21689                           
 21690                           ; BSR set to: 1
 21691  00B018  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 21692  00B01A  B4D8               	btfsc	status,2,c
 21693  00B01C  D003               	goto	u17770
 21694                           
 21695                           ; BSR set to: 1
 21696  00B01E  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 21697  00B020  A4D8               	btfss	status,2,c
 21698  00B022  D002               	goto	l2783
 21699  00B024                     u17770:
 21700                           
 21701                           ; BSR set to: 1
 21702                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21703                           
 21704                           ; BSR set to: 1
 21705  00B024  0E31               	movlw	49
 21706  00B026  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21707  00B028                     l2783:
 21708                           
 21709                           ; BSR set to: 1
 21710                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21711                           
 21712                           ; BSR set to: 1
 21713  00B028  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21714  00B02C  0100               	movlb	0	; () banked
 21715  00B02E  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21716  00B030  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21717  00B032  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21718  00B034  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21719  00B038  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21720  00B03A  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21721  00B03C  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21722  00B03E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21723  00B040  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21724  00B042  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21725  00B044  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21726  00B046  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21727  00B048  D008               	goto	l2786
 21728  00B04A  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21729  00B04C  E103               	bnz	u17780
 21730  00B04E  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21731  00B050  A0D8               	btfss	status,0,c
 21732  00B052  D003               	goto	l2786
 21733  00B054                     u17780:
 21734                           
 21735                           ; BSR set to: 0
 21736                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21737  00B054  0E03               	movlw	3
 21738  00B056  0101               	movlb	1	; () banked
 21739  00B058  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21740  00B05A                     l2786:
 21741                           
 21742                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21743                           
 21744                           ; BSR set to: 1
 21745  00B05A  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21746  00B05E  0100               	movlb	0	; () banked
 21747  00B060  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21748  00B062  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21749  00B064  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21750  00B066  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21751  00B06A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21752  00B06C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21753  00B06E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21754  00B070  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21755  00B072  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21756  00B074  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21757  00B076  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21758  00B078  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21759  00B07A  D397               	goto	l2807
 21760                           
 21761                           ; BSR set to: 0
 21762                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21763  00B07C  0E01               	movlw	1
 21764  00B07E  D35E               	goto	L22
 21765  00B080                     
 21766                           ; BSR set to: 1
 21767                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21768                           
 21769                           ; BSR set to: 1
 21770  00B080  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 21771  00B082  B4D8               	btfsc	status,2,c
 21772  00B084  D003               	goto	u17810
 21773                           
 21774                           ; BSR set to: 1
 21775  00B086  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 21776  00B088  A4D8               	btfss	status,2,c
 21777  00B08A  D002               	goto	l2789
 21778  00B08C                     u17810:
 21779                           
 21780                           ; BSR set to: 1
 21781                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21782                           
 21783                           ; BSR set to: 1
 21784  00B08C  0E51               	movlw	81
 21785  00B08E  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21786  00B090                     l2789:
 21787                           
 21788                           ; BSR set to: 1
 21789                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21790                           
 21791                           ; BSR set to: 1
 21792  00B090  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21793  00B094  0100               	movlb	0	; () banked
 21794  00B096  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21795  00B098  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21796  00B09A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21797  00B09C  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21798  00B0A0  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21799  00B0A2  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21800  00B0A4  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21801  00B0A6  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21802  00B0A8  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21803  00B0AA  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21804  00B0AC  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21805  00B0AE  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21806  00B0B0  D008               	goto	l2792
 21807  00B0B2  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21808  00B0B4  E103               	bnz	u17820
 21809  00B0B6  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21810  00B0B8  A0D8               	btfss	status,0,c
 21811  00B0BA  D003               	goto	l2792
 21812  00B0BC                     u17820:
 21813                           
 21814                           ; BSR set to: 0
 21815                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21816  00B0BC  0E04               	movlw	4
 21817  00B0BE  0101               	movlb	1	; () banked
 21818  00B0C0  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21819  00B0C2                     l2792:
 21820                           
 21821                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21822                           
 21823                           ; BSR set to: 1
 21824  00B0C2  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21825  00B0C6  0100               	movlb	0	; () banked
 21826  00B0C8  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21827  00B0CA  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21828  00B0CC  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21829  00B0CE  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21830  00B0D2  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21831  00B0D4  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21832  00B0D6  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21833  00B0D8  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21834  00B0DA  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21835  00B0DC  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21836  00B0DE  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21837  00B0E0  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21838  00B0E2  D363               	goto	l2807
 21839                           
 21840                           ; BSR set to: 0
 21841                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21842  00B0E4  0E02               	movlw	2
 21843  00B0E6  D32A               	goto	L22
 21844  00B0E8                     
 21845                           ; BSR set to: 1
 21846                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21847                           
 21848                           ; BSR set to: 1
 21849  00B0E8  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 21850  00B0EA  B4D8               	btfsc	status,2,c
 21851  00B0EC  D003               	goto	u17850
 21852                           
 21853                           ; BSR set to: 1
 21854  00B0EE  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 21855  00B0F0  A4D8               	btfss	status,2,c
 21856  00B0F2  D002               	goto	l2795
 21857  00B0F4                     u17850:
 21858                           
 21859                           ; BSR set to: 1
 21860                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21861                           
 21862                           ; BSR set to: 1
 21863  00B0F4  0E82               	movlw	130
 21864  00B0F6  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21865  00B0F8                     l2795:
 21866                           
 21867                           ; BSR set to: 1
 21868                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21869                           
 21870                           ; BSR set to: 1
 21871  00B0F8  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21872  00B0FC  0100               	movlb	0	; () banked
 21873  00B0FE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21874  00B100  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21875  00B102  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21876  00B104  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21877  00B108  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21878  00B10A  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21879  00B10C  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21880  00B10E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21881  00B110  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21882  00B112  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21883  00B114  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21884  00B116  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21885  00B118  D008               	goto	l2798
 21886  00B11A  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21887  00B11C  E103               	bnz	u17860
 21888  00B11E  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21889  00B120  A0D8               	btfss	status,0,c
 21890  00B122  D003               	goto	l2798
 21891  00B124                     u17860:
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21895  00B124  0E05               	movlw	5
 21896  00B126  0101               	movlb	1	; () banked
 21897  00B128  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21898  00B12A                     l2798:
 21899                           
 21900                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21901                           
 21902                           ; BSR set to: 1
 21903  00B12A  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21904  00B12E  0100               	movlb	0	; () banked
 21905  00B130  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21906  00B132  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21907  00B134  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21908  00B136  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21909  00B13A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21910  00B13C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21911  00B13E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21912  00B140  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21913  00B142  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21914  00B144  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21915  00B146  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21916  00B148  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21917  00B14A  D32F               	goto	l2807
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21921  00B14C  0E03               	movlw	3
 21922  00B14E  D2F6               	goto	L22
 21923  00B150                     
 21924                           ; BSR set to: 1
 21925                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 21926                           
 21927                           ; BSR set to: 1
 21928  00B150  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 21929  00B152  B4D8               	btfsc	status,2,c
 21930  00B154  D003               	goto	u17890
 21931                           
 21932                           ; BSR set to: 1
 21933  00B156  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 21934  00B158  A4D8               	btfss	status,2,c
 21935  00B15A  D002               	goto	l2801
 21936  00B15C                     u17890:
 21937                           
 21938                           ; BSR set to: 1
 21939                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 21940                           
 21941                           ; BSR set to: 1
 21942  00B15C  0E71               	movlw	113
 21943  00B15E  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21944  00B160                     l2801:
 21945                           
 21946                           ; BSR set to: 1
 21947                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 21948                           
 21949                           ; BSR set to: 1
 21950  00B160  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21951  00B164  0100               	movlb	0	; () banked
 21952  00B166  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21953  00B168  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21954  00B16A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21955  00B16C  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21956  00B170  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21957  00B172  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21958  00B174  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21959  00B176  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21960  00B178  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21961  00B17A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21962  00B17C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21963  00B17E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21964  00B180  D008               	goto	l2804
 21965  00B182  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21966  00B184  E103               	bnz	u17900
 21967  00B186  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21968  00B188  A0D8               	btfss	status,0,c
 21969  00B18A  D003               	goto	l2804
 21970  00B18C                     u17900:
 21971                           
 21972                           ; BSR set to: 0
 21973                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21974  00B18C  0E01               	movlw	1
 21975  00B18E  0101               	movlb	1	; () banked
 21976  00B190  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 21977  00B192                     l2804:
 21978                           
 21979                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 21980                           
 21981                           ; BSR set to: 1
 21982  00B192  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21983  00B196  0100               	movlb	0	; () banked
 21984  00B198  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21985  00B19A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21986  00B19C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21987  00B19E  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21988  00B1A2  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21989  00B1A4  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21990  00B1A6  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21991  00B1A8  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21992  00B1AA  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21993  00B1AC  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21994  00B1AE  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21995  00B1B0  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21996  00B1B2  D2FB               	goto	l2807
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22000  00B1B4  0E04               	movlw	4
 22001  00B1B6  D2C2               	goto	L22
 22002  00B1B8                     
 22003                           ; BSR set to: 1
 22004  00B1B8  0101               	movlb	1	; () banked
 22005  00B1BA  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 22006                           
 22007                           ; Switch size 1, requested type "space"
 22008                           ; Number of cases is 6, Range of values is 1 to 240
 22009                           ; switch strategies available:
 22010                           ; Name         Instructions Cycles
 22011                           ; simple_byte           19    10 (average)
 22012                           ;	Chosen strategy is simple_byte
 22013  00B1BC  0A01               	xorlw	1	; case 1
 22014  00B1BE  B4D8               	btfsc	status,2,c
 22015  00B1C0  D6F7               	goto	l2775
 22016  00B1C2  0A03               	xorlw	3	; case 2
 22017  00B1C4  B4D8               	btfsc	status,2,c
 22018  00B1C6  D728               	goto	l2782
 22019  00B1C8  0A01               	xorlw	1	; case 3
 22020  00B1CA  B4D8               	btfsc	status,2,c
 22021  00B1CC  D759               	goto	l2788
 22022  00B1CE  0A07               	xorlw	7	; case 4
 22023  00B1D0  B4D8               	btfsc	status,2,c
 22024  00B1D2  D78A               	goto	l2794
 22025  00B1D4  0A01               	xorlw	1	; case 5
 22026  00B1D6  B4D8               	btfsc	status,2,c
 22027  00B1D8  D7BB               	goto	l2800
 22028  00B1DA  0AF5               	xorlw	245	; case 240
 22029                           
 22030                           ; BSR set to: 1
 22031                           ;encoder.c: 268: break;
 22032  00B1DC  D2E6               	goto	l2807
 22033  00B1DE                     
 22034                           ; BSR set to: 1
 22035                           ;encoder.c: 274: if(os.button1==1)
 22036                           
 22037                           ; BSR set to: 1
 22038  00B1DE  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22039  00B1E0  A4D8               	btfss	status,2,c
 22040  00B1E2  D00E               	goto	l2811
 22041                           
 22042                           ; BSR set to: 1
 22043                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 22044  00B1E4  0E00               	movlw	0
 22045  00B1E6  6F6D               	movwf	(_os+7)& (0+255),b	;volatile
 22046  00B1E8  0E00               	movlw	0
 22047  00B1EA  6F6E               	movwf	(_os+8)& (0+255),b	;volatile
 22048  00B1EC  0E00               	movlw	0
 22049  00B1EE  6F6F               	movwf	(_os+9)& (0+255),b	;volatile
 22050  00B1F0  0E00               	movlw	0
 22051  00B1F2  6F70               	movwf	(_os+10)& (0+255),b	;volatile
 22052                           
 22053                           ;encoder.c: 277: os.divide_position = 0;
 22054  00B1F4  0E00               	movlw	0
 22055  00B1F6  6F7E               	movwf	(_os+24)& (0+255),b	;volatile
 22056  00B1F8  0E00               	movlw	0
 22057  00B1FA  6F7D               	movwf	(_os+23)& (0+255),b	;volatile
 22058                           
 22059                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22060  00B1FC  0E21               	movlw	33
 22061  00B1FE  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22062  00B200                     l2811:
 22063                           
 22064                           ; BSR set to: 1
 22065                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 22066                           
 22067                           ; BSR set to: 1
 22068  00B200  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 22069  00B202  0A80               	xorlw	128
 22070  00B204  0F7F               	addlw	-129
 22071  00B206  A0D8               	btfss	status,0,c
 22072  00B208  D002               	goto	l2812
 22073                           
 22074                           ; BSR set to: 1
 22075                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22076  00B20A  0E12               	movlw	18
 22077  00B20C  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22078  00B20E                     l2812:
 22079                           
 22080                           ; BSR set to: 1
 22081                           ;encoder.c: 282: if(os.encoder1Count<0)
 22082                           
 22083                           ; BSR set to: 1
 22084  00B20E  AF69               	btfss	(_os+3)& (0+255),7,b	;volatile
 22085  00B210  D01B               	goto	l2814
 22086                           
 22087                           ; BSR set to: 1
 22088                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22089  00B212  0E12               	movlw	18
 22090  00B214  D00F               	goto	L10
 22091  00B216                     
 22092                           ; BSR set to: 1
 22093                           ;encoder.c: 286: if(os.button1==1)
 22094                           
 22095                           ; BSR set to: 1
 22096  00B216  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22097  00B218  A4D8               	btfss	status,2,c
 22098  00B21A  D002               	goto	l2816
 22099                           
 22100                           ; BSR set to: 1
 22101                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22102  00B21C  0E01               	movlw	1
 22103  00B21E  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22104  00B220                     l2816:
 22105                           
 22106                           ; BSR set to: 1
 22107                           ;encoder.c: 288: if(os.encoder1Count>0)
 22108                           
 22109                           ; BSR set to: 1
 22110  00B220  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 22111  00B222  0A80               	xorlw	128
 22112  00B224  0F7F               	addlw	-129
 22113  00B226  A0D8               	btfss	status,0,c
 22114  00B228  D002               	goto	l2817
 22115                           
 22116                           ; BSR set to: 1
 22117                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22118  00B22A  0E11               	movlw	17
 22119  00B22C  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22120  00B22E                     l2817:
 22121                           
 22122                           ; BSR set to: 1
 22123                           ;encoder.c: 290: if(os.encoder1Count<0)
 22124                           
 22125                           ; BSR set to: 1
 22126  00B22E  AF69               	btfss	(_os+3)& (0+255),7,b	;volatile
 22127  00B230  D00B               	goto	l2814
 22128                           
 22129                           ; BSR set to: 1
 22130                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22131  00B232  0E11               	movlw	17
 22132  00B234                     L10:
 22133  00B234  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22134                           
 22135                           ; BSR set to: 1
 22136                           ;encoder.c: 293: }
 22137                           
 22138                           ; BSR set to: 1
 22139                           ;encoder.c: 292: break;
 22140  00B236  D008               	goto	l2814
 22141  00B238                     
 22142                           ; BSR set to: 1
 22143  00B238  0101               	movlb	1	; () banked
 22144  00B23A  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 22145                           
 22146                           ; Switch size 1, requested type "space"
 22147                           ; Number of cases is 2, Range of values is 17 to 18
 22148                           ; switch strategies available:
 22149                           ; Name         Instructions Cycles
 22150                           ; simple_byte            7     4 (average)
 22151                           ;	Chosen strategy is simple_byte
 22152  00B23C  0A11               	xorlw	17	; case 17
 22153  00B23E  B4D8               	btfsc	status,2,c
 22154  00B240  D7CE               	goto	l2810
 22155  00B242  0A03               	xorlw	3	; case 18
 22156  00B244  B4D8               	btfsc	status,2,c
 22157  00B246  D7E7               	goto	l2815
 22158  00B248                     l2814:
 22159                           
 22160                           ; BSR set to: 1
 22161                           ;encoder.c: 294: if(os.button2==1)
 22162                           
 22163                           ; BSR set to: 1
 22164  00B248  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 22165  00B24A  A4D8               	btfss	status,2,c
 22166  00B24C  D00A               	goto	l2819
 22167                           
 22168                           ; BSR set to: 1
 22169                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 22170  00B24E  C177  F060         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize	;volatile
 22171  00B252  C178  F061         	movff	_os+18,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 22172  00B256  EC77  F0A1         	call	__encoder_next_setup_stepsize	;wreg free
 22173  00B25A  C060  F177         	movff	?__encoder_next_setup_stepsize,_os+17	;volatile
 22174  00B25E  C061  F178         	movff	?__encoder_next_setup_stepsize+1,_os+18	;volatile
 22175  00B262                     l2819:
 22176                           
 22177                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 22178  00B262  0101               	movlb	1	; () banked
 22179  00B264  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 22180  00B266  0A80               	xorlw	128
 22181  00B268  0F7F               	addlw	-129
 22182  00B26A  A0D8               	btfss	status,0,c
 22183  00B26C  D010               	goto	l2821
 22184                           
 22185                           ; BSR set to: 1
 22186                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 22187  00B26E  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 22188  00B270  A4D8               	btfss	status,2,c
 22189  00B272  D00D               	goto	l2821
 22190                           
 22191                           ; BSR set to: 1
 22192                           ;encoder.c: 302: motor_move_degrees_int(MOTOR_DIRECTION_CW, os.setup_step_size, 0xFFFF, 
      +                          MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22193  00B274  C177  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 22194  00B278  C178  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 22195  00B27C  0EFF               	movlw	255
 22196  00B27E  0100               	movlb	0	; () banked
 22197  00B280  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22198  00B282  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22199  00B284  0E01               	movlw	1
 22200  00B286  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22201  00B288  0E01               	movlw	1
 22202  00B28A  EC26  F0A9         	call	_motor_move_degrees_int
 22203  00B28E                     l2821:
 22204                           
 22205                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 22206  00B28E  0101               	movlb	1	; () banked
 22207  00B290  AF6B               	btfss	(_os+5)& (0+255),7,b	;volatile
 22208  00B292  D28B               	goto	l2807
 22209                           
 22210                           ; BSR set to: 1
 22211                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 22212  00B294  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 22213  00B296  A4D8               	btfss	status,2,c
 22214  00B298  D288               	goto	l2807
 22215                           
 22216                           ; BSR set to: 1
 22217                           ;encoder.c: 308: motor_move_degrees_int(MOTOR_DIRECTION_CCW, os.setup_step_size, 0xFFFF,
      +                           MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22218  00B29A  C177  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 22219  00B29E  C178  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 22220  00B2A2  0EFF               	movlw	255
 22221  00B2A4  0100               	movlb	0	; () banked
 22222  00B2A6  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22223  00B2A8  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22224  00B2AA  0E01               	movlw	1
 22225  00B2AC  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22226  00B2AE  0EFF               	movlw	255
 22227  00B2B0  EC26  F0A9         	call	_motor_move_degrees_int
 22228                           
 22229                           ;encoder.c: 309: };encoder.c: 310: break;
 22230  00B2B4  D27A               	goto	l2807
 22231  00B2B6                     
 22232                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 22233  00B2B6  0101               	movlb	1	; () banked
 22234  00B2B8  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22235  00B2BA  B4D8               	btfsc	status,2,c
 22236  00B2BC  D003               	goto	u18040
 22237                           
 22238                           ; BSR set to: 1
 22239  00B2BE  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 22240  00B2C0  A4D8               	btfss	status,2,c
 22241  00B2C2  D003               	goto	l2827
 22242  00B2C4                     u18040:
 22243                           
 22244                           ; BSR set to: 1
 22245                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 22246                           
 22247                           ; BSR set to: 1
 22248  00B2C4  0EFF               	movlw	255
 22249  00B2C6  EC9F  F0AA         	call	_motor_set_zero
 22250  00B2CA                     l2827:
 22251                           
 22252                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 22253  00B2CA  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22254  00B2CE  0100               	movlb	0	; () banked
 22255  00B2D0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22256  00B2D2  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22257  00B2D4  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22258  00B2D6  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22259  00B2DA  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22260  00B2DC  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22261  00B2DE  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22262  00B2E0  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22263  00B2E2  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22264  00B2E4  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22265  00B2E6  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22266  00B2E8  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22267  00B2EA  D008               	goto	l2830
 22268  00B2EC  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22269  00B2EE  E103               	bnz	u18050
 22270  00B2F0  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22271  00B2F2  A0D8               	btfss	status,0,c
 22272  00B2F4  D003               	goto	l2830
 22273  00B2F6                     u18050:
 22274                           
 22275                           ; BSR set to: 0
 22276                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22277  00B2F6  0E22               	movlw	34
 22278  00B2F8  0101               	movlb	1	; () banked
 22279  00B2FA  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22280  00B2FC                     l2830:
 22281                           
 22282                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 22283                           
 22284                           ; BSR set to: 1
 22285  00B2FC  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22286  00B300  0100               	movlb	0	; () banked
 22287  00B302  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22288  00B304  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22289  00B306  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22290  00B308  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22291  00B30C  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22292  00B30E  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22293  00B310  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22294  00B312  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22295  00B314  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22296  00B316  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22297  00B318  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22298  00B31A  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22299  00B31C  D246               	goto	l2807
 22300                           
 22301                           ; BSR set to: 0
 22302                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22303  00B31E  0E22               	movlw	34
 22304  00B320  D20D               	goto	L22
 22305  00B322                     
 22306                           ; BSR set to: 1
 22307                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 22308                           
 22309                           ; BSR set to: 1
 22310  00B322  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22311  00B324  B4D8               	btfsc	status,2,c
 22312  00B326  D003               	goto	u18080
 22313                           
 22314                           ; BSR set to: 1
 22315  00B328  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 22316  00B32A  A4D8               	btfss	status,2,c
 22317  00B32C  D003               	goto	l2834
 22318  00B32E                     u18080:
 22319                           
 22320                           ; BSR set to: 1
 22321                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22322                           
 22323                           ; BSR set to: 1
 22324  00B32E  0E01               	movlw	1
 22325  00B330  EC9F  F0AA         	call	_motor_set_zero
 22326  00B334                     l2834:
 22327                           
 22328                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22329  00B334  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22330  00B338  0100               	movlb	0	; () banked
 22331  00B33A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22332  00B33C  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22333  00B33E  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22334  00B340  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22335  00B344  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22336  00B346  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22337  00B348  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22338  00B34A  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22339  00B34C  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22340  00B34E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22341  00B350  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22342  00B352  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22343  00B354  D008               	goto	l2837
 22344  00B356  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22345  00B358  E103               	bnz	u18090
 22346  00B35A  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22347  00B35C  A0D8               	btfss	status,0,c
 22348  00B35E  D003               	goto	l2837
 22349  00B360                     u18090:
 22350                           
 22351                           ; BSR set to: 0
 22352                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22353  00B360  0E21               	movlw	33
 22354  00B362  0101               	movlb	1	; () banked
 22355  00B364  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22356  00B366                     l2837:
 22357                           
 22358                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22359                           
 22360                           ; BSR set to: 1
 22361  00B366  C16B  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22362  00B36A  0100               	movlb	0	; () banked
 22363  00B36C  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22364  00B36E  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22365  00B370  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22366  00B372  C169  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22367  00B376  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22368  00B378  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22369  00B37A  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22370  00B37C  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22371  00B37E  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22372  00B380  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22373  00B382  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22374  00B384  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22375  00B386  D211               	goto	l2807
 22376                           
 22377                           ; BSR set to: 0
 22378                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22379  00B388  0E21               	movlw	33
 22380  00B38A  D1D8               	goto	L22
 22381  00B38C                     
 22382                           ; BSR set to: 1
 22383  00B38C  0101               	movlb	1	; () banked
 22384  00B38E  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 22385                           
 22386                           ; Switch size 1, requested type "space"
 22387                           ; Number of cases is 2, Range of values is 33 to 34
 22388                           ; switch strategies available:
 22389                           ; Name         Instructions Cycles
 22390                           ; simple_byte            7     4 (average)
 22391                           ;	Chosen strategy is simple_byte
 22392  00B390  0A21               	xorlw	33	; case 33
 22393  00B392  B4D8               	btfsc	status,2,c
 22394  00B394  D790               	goto	l2826
 22395  00B396  0A03               	xorlw	3	; case 34
 22396  00B398  B4D8               	btfsc	status,2,c
 22397  00B39A  D7C3               	goto	l2833
 22398                           
 22399                           ; BSR set to: 1
 22400                           ;encoder.c: 336: break;
 22401  00B39C  D206               	goto	l2807
 22402  00B39E                     
 22403                           ; BSR set to: 1
 22404                           ;encoder.c: 342: if(os.button1==1)
 22405                           
 22406                           ; BSR set to: 1
 22407  00B39E  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22408  00B3A0  A4D8               	btfss	status,2,c
 22409  00B3A2  D005               	goto	l2842
 22410                           
 22411                           ; BSR set to: 1
 22412                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22413  00B3A4  ECBC  F07B         	call	_motor_divide_jump_to_nearest	;wreg free
 22414                           
 22415                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22416  00B3A8  0E41               	movlw	65
 22417  00B3AA  0101               	movlb	1	; () banked
 22418  00B3AC  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22419  00B3AE                     l2842:
 22420                           
 22421                           ; BSR set to: 1
 22422                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22423                           
 22424                           ; BSR set to: 1
 22425  00B3AE  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 22426  00B3B0  0A80               	xorlw	128
 22427  00B3B2  0F7F               	addlw	-129
 22428  00B3B4  A0D8               	btfss	status,0,c
 22429  00B3B6  D002               	goto	l2843
 22430                           
 22431                           ; BSR set to: 1
 22432                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22433  00B3B8  0E32               	movlw	50
 22434  00B3BA  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22435  00B3BC                     l2843:
 22436                           
 22437                           ; BSR set to: 1
 22438                           ;encoder.c: 350: if(os.encoder1Count<0)
 22439                           
 22440                           ; BSR set to: 1
 22441  00B3BC  AF69               	btfss	(_os+3)& (0+255),7,b	;volatile
 22442  00B3BE  D01B               	goto	l2845
 22443                           
 22444                           ; BSR set to: 1
 22445                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22446  00B3C0  0E32               	movlw	50
 22447  00B3C2  D00F               	goto	L13
 22448  00B3C4                     
 22449                           ; BSR set to: 1
 22450                           ;encoder.c: 354: if(os.button1==1)
 22451                           
 22452                           ; BSR set to: 1
 22453  00B3C4  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22454  00B3C6  A4D8               	btfss	status,2,c
 22455  00B3C8  D002               	goto	l2847
 22456                           
 22457                           ; BSR set to: 1
 22458                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22459  00B3CA  0E02               	movlw	2
 22460  00B3CC  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22461  00B3CE                     l2847:
 22462                           
 22463                           ; BSR set to: 1
 22464                           ;encoder.c: 356: if(os.encoder1Count>0)
 22465                           
 22466                           ; BSR set to: 1
 22467  00B3CE  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 22468  00B3D0  0A80               	xorlw	128
 22469  00B3D2  0F7F               	addlw	-129
 22470  00B3D4  A0D8               	btfss	status,0,c
 22471  00B3D6  D002               	goto	l2848
 22472                           
 22473                           ; BSR set to: 1
 22474                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22475  00B3D8  0E31               	movlw	49
 22476  00B3DA  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22477  00B3DC                     l2848:
 22478                           
 22479                           ; BSR set to: 1
 22480                           ;encoder.c: 358: if(os.encoder1Count<0)
 22481                           
 22482                           ; BSR set to: 1
 22483  00B3DC  AF69               	btfss	(_os+3)& (0+255),7,b	;volatile
 22484  00B3DE  D00B               	goto	l2845
 22485                           
 22486                           ; BSR set to: 1
 22487                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22488  00B3E0  0E31               	movlw	49
 22489  00B3E2                     L13:
 22490  00B3E2  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22491                           
 22492                           ; BSR set to: 1
 22493                           ;encoder.c: 361: }
 22494                           
 22495                           ; BSR set to: 1
 22496                           ;encoder.c: 360: break;
 22497  00B3E4  D008               	goto	l2845
 22498  00B3E6                     
 22499                           ; BSR set to: 1
 22500  00B3E6  0101               	movlb	1	; () banked
 22501  00B3E8  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 22502                           
 22503                           ; Switch size 1, requested type "space"
 22504                           ; Number of cases is 2, Range of values is 49 to 50
 22505                           ; switch strategies available:
 22506                           ; Name         Instructions Cycles
 22507                           ; simple_byte            7     4 (average)
 22508                           ;	Chosen strategy is simple_byte
 22509  00B3EA  0A31               	xorlw	49	; case 49
 22510  00B3EC  B4D8               	btfsc	status,2,c
 22511  00B3EE  D7D7               	goto	l2841
 22512  00B3F0  0A03               	xorlw	3	; case 50
 22513  00B3F2  B4D8               	btfsc	status,2,c
 22514  00B3F4  D7E7               	goto	l2846
 22515  00B3F6                     l2845:
 22516                           
 22517                           ; BSR set to: 1
 22518                           ;encoder.c: 362: if(os.button2==1)
 22519                           
 22520                           ; BSR set to: 1
 22521  00B3F6  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 22522  00B3F8  A4D8               	btfss	status,2,c
 22523  00B3FA  D005               	goto	l2850
 22524                           
 22525                           ; BSR set to: 1
 22526                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22527  00B3FC  517C               	movf	(_os+22)& (0+255),w,b	;volatile
 22528  00B3FE  EC65  F0AC         	call	__encoder_next_divide_step_size
 22529  00B402  0101               	movlb	1	; () banked
 22530  00B404  6F7C               	movwf	(_os+22)& (0+255),b	;volatile
 22531  00B406                     l2850:
 22532                           
 22533                           ; BSR set to: 1
 22534                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22535                           
 22536                           ; BSR set to: 1
 22537  00B406  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 22538  00B408  0A80               	xorlw	128
 22539  00B40A  0F7F               	addlw	-129
 22540  00B40C  A0D8               	btfss	status,0,c
 22541  00B40E  D004               	goto	l2851
 22542                           
 22543                           ; BSR set to: 1
 22544                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22545  00B410  517C               	movf	(_os+22)& (0+255),w,b	;volatile
 22546  00B412  277A               	addwf	(_os+20)& (0+255),f,b	;volatile
 22547  00B414  0E00               	movlw	0
 22548  00B416  237B               	addwfc	(_os+21)& (0+255),f,b	;volatile
 22549  00B418                     l2851:
 22550                           
 22551                           ; BSR set to: 1
 22552                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22553  00B418  AF6B               	btfss	(_os+5)& (0+255),7,b	;volatile
 22554  00B41A  D1C7               	goto	l2807
 22555                           
 22556                           ; BSR set to: 1
 22557                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22558  00B41C  517C               	movf	(_os+22)& (0+255),w,b	;volatile
 22559  00B41E  0100               	movlb	0	; () banked
 22560  00B420  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22561  00B422  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22562  00B424  0101               	movlb	1	; () banked
 22563  00B426  517A               	movf	(_os+20)& (0+255),w,b	;volatile
 22564  00B428  0100               	movlb	0	; () banked
 22565  00B42A  5DA8               	subwf	??_encoder_statemachine& (0+255),w,b
 22566  00B42C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22567  00B42E  0A80               	xorlw	128
 22568  00B430  6FAA               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22569  00B432  0101               	movlb	1	; () banked
 22570  00B434  517B               	movf	(_os+21)& (0+255),w,b	;volatile
 22571  00B436  0A80               	xorlw	128
 22572  00B438  0100               	movlb	0	; () banked
 22573  00B43A  59AA               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22574  00B43C  B0D8               	btfsc	status,0,c
 22575  00B43E  D006               	goto	l2853
 22576                           
 22577                           ; BSR set to: 0
 22578                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22579  00B440  0101               	movlb	1	; () banked
 22580  00B442  517C               	movf	(_os+22)& (0+255),w,b	;volatile
 22581  00B444  5F7A               	subwf	(_os+20)& (0+255),f,b	;volatile
 22582  00B446  0E00               	movlw	0
 22583  00B448  5B7B               	subwfb	(_os+21)& (0+255),f,b	;volatile
 22584                           
 22585                           ;encoder.c: 375: }
 22586  00B44A  D1AF               	goto	l2807
 22587  00B44C                     l2853:
 22588                           
 22589                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22590                           
 22591                           ; BSR set to: 1
 22592  00B44C  0E00               	movlw	0
 22593  00B44E  0101               	movlb	1	; () banked
 22594  00B450  6F7B               	movwf	(_os+21)& (0+255),b	;volatile
 22595  00B452  0E01               	movlw	1
 22596  00B454  6F7A               	movwf	(_os+20)& (0+255),b	;volatile
 22597                           
 22598                           ; BSR set to: 1
 22599                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22600                           
 22601                           ; BSR set to: 1
 22602  00B456  D1A9               	goto	l2807
 22603  00B458                     
 22604                           ;encoder.c: 384: if(os.button1==1)
 22605                           
 22606                           ; BSR set to: 1
 22607  00B458  0101               	movlb	1	; () banked
 22608  00B45A  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22609  00B45C  A4D8               	btfss	status,2,c
 22610  00B45E  D002               	goto	l2856
 22611                           
 22612                           ; BSR set to: 1
 22613                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22614  00B460  0E02               	movlw	2
 22615  00B462  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22616  00B464                     l2856:
 22617                           
 22618                           ; BSR set to: 1
 22619                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22620                           
 22621                           ; BSR set to: 1
 22622  00B464  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 22623  00B466  B4D8               	btfsc	status,2,c
 22624                           
 22625                           ; BSR set to: 1
 22626                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22627  00B468  EC44  F097         	call	_motor_divide_jump	;wreg free
 22628                           
 22629                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22630  00B46C  0101               	movlb	1	; () banked
 22631  00B46E  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 22632  00B470  0A80               	xorlw	128
 22633  00B472  0F7F               	addlw	-129
 22634  00B474  B0D8               	btfsc	status,0,c
 22635                           
 22636                           ; BSR set to: 1
 22637                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22638  00B476  EC60  F0AA         	call	__divide_jump_size_increment	;wreg free
 22639                           
 22640                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22641  00B47A  0101               	movlb	1	; () banked
 22642  00B47C  AF6B               	btfss	(_os+5)& (0+255),7,b	;volatile
 22643  00B47E  D195               	goto	l2807
 22644                           
 22645                           ; BSR set to: 1
 22646                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22647  00B480  EC1E  F0A2         	call	__divide_jump_size_decrement	;wreg free
 22648                           
 22649                           ;encoder.c: 399: };encoder.c: 400: break;
 22650  00B484  D192               	goto	l2807
 22651  00B486                     
 22652                           ;encoder.c: 406: if(os.button1==1)
 22653  00B486  0101               	movlb	1	; () banked
 22654  00B488  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22655  00B48A  A4D8               	btfss	status,2,c
 22656  00B48C  D002               	goto	l2863
 22657                           
 22658                           ; BSR set to: 1
 22659                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22660  00B48E  0E62               	movlw	98
 22661  00B490  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22662  00B492                     l2863:
 22663                           
 22664                           ; BSR set to: 1
 22665                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22666                           
 22667                           ; BSR set to: 1
 22668  00B492  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 22669  00B494  0A80               	xorlw	128
 22670  00B496  0F7F               	addlw	-129
 22671  00B498  A0D8               	btfss	status,0,c
 22672  00B49A  D002               	goto	l2864
 22673                           
 22674                           ; BSR set to: 1
 22675                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22676  00B49C  0E52               	movlw	82
 22677  00B49E  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22678  00B4A0                     l2864:
 22679                           
 22680                           ; BSR set to: 1
 22681                           ;encoder.c: 412: if(os.encoder1Count<0)
 22682                           
 22683                           ; BSR set to: 1
 22684  00B4A0  AF69               	btfss	(_os+3)& (0+255),7,b	;volatile
 22685  00B4A2  D01B               	goto	l2866
 22686                           
 22687                           ; BSR set to: 1
 22688                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22689  00B4A4  0E52               	movlw	82
 22690  00B4A6  D00F               	goto	L14
 22691  00B4A8                     
 22692                           ; BSR set to: 1
 22693                           ;encoder.c: 416: if(os.button1==1)
 22694                           
 22695                           ; BSR set to: 1
 22696  00B4A8  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 22697  00B4AA  A4D8               	btfss	status,2,c
 22698  00B4AC  D002               	goto	l2868
 22699                           
 22700                           ; BSR set to: 1
 22701                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22702  00B4AE  0E03               	movlw	3
 22703  00B4B0  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22704  00B4B2                     l2868:
 22705                           
 22706                           ; BSR set to: 1
 22707                           ;encoder.c: 418: if(os.encoder1Count>0)
 22708                           
 22709                           ; BSR set to: 1
 22710  00B4B2  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 22711  00B4B4  0A80               	xorlw	128
 22712  00B4B6  0F7F               	addlw	-129
 22713  00B4B8  A0D8               	btfss	status,0,c
 22714  00B4BA  D002               	goto	l2869
 22715                           
 22716                           ; BSR set to: 1
 22717                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22718  00B4BC  0E51               	movlw	81
 22719  00B4BE  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22720  00B4C0                     l2869:
 22721                           
 22722                           ; BSR set to: 1
 22723                           ;encoder.c: 420: if(os.encoder1Count<0)
 22724                           
 22725                           ; BSR set to: 1
 22726  00B4C0  AF69               	btfss	(_os+3)& (0+255),7,b	;volatile
 22727  00B4C2  D00B               	goto	l2866
 22728                           
 22729                           ; BSR set to: 1
 22730                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22731  00B4C4  0E51               	movlw	81
 22732  00B4C6                     L14:
 22733  00B4C6  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22734                           
 22735                           ; BSR set to: 1
 22736                           ;encoder.c: 423: }
 22737                           
 22738                           ; BSR set to: 1
 22739                           ;encoder.c: 422: break;
 22740  00B4C8  D008               	goto	l2866
 22741  00B4CA                     
 22742                           ; BSR set to: 1
 22743  00B4CA  0101               	movlb	1	; () banked
 22744  00B4CC  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 22745                           
 22746                           ; Switch size 1, requested type "space"
 22747                           ; Number of cases is 2, Range of values is 81 to 82
 22748                           ; switch strategies available:
 22749                           ; Name         Instructions Cycles
 22750                           ; simple_byte            7     4 (average)
 22751                           ;	Chosen strategy is simple_byte
 22752  00B4CE  0A51               	xorlw	81	; case 81
 22753  00B4D0  B4D8               	btfsc	status,2,c
 22754  00B4D2  D7D9               	goto	l2862
 22755  00B4D4  0A03               	xorlw	3	; case 82
 22756  00B4D6  B4D8               	btfsc	status,2,c
 22757  00B4D8  D7E7               	goto	l2867
 22758  00B4DA                     l2866:
 22759                           
 22760                           ; BSR set to: 1
 22761                           ;encoder.c: 424: if(os.button2==1)
 22762                           
 22763                           ; BSR set to: 1
 22764  00B4DA  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 22765  00B4DC  A4D8               	btfss	status,2,c
 22766  00B4DE  D00A               	goto	l2871
 22767                           
 22768                           ; BSR set to: 1
 22769                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22770  00B4E0  C181  F060         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize	;volatile
 22771  00B4E4  C182  F061         	movff	_os+28,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22772  00B4E8  ECAF  F0A1         	call	__encoder_next_arc_step_size	;wreg free
 22773  00B4EC  C060  F181         	movff	?__encoder_next_arc_step_size,_os+27	;volatile
 22774  00B4F0  C061  F182         	movff	?__encoder_next_arc_step_size+1,_os+28	;volatile
 22775  00B4F4                     l2871:
 22776                           
 22777                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22778  00B4F4  0101               	movlb	1	; () banked
 22779  00B4F6  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 22780  00B4F8  0A80               	xorlw	128
 22781  00B4FA  0F7F               	addlw	-129
 22782  00B4FC  A0D8               	btfss	status,0,c
 22783  00B4FE  D01C               	goto	l2873
 22784                           
 22785                           ; BSR set to: 1
 22786                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22787  00B500  5181               	movf	(_os+27)& (0+255),w,b	;volatile
 22788  00B502  2783               	addwf	(_os+29)& (0+255),f,b	;volatile
 22789  00B504  5182               	movf	(_os+28)& (0+255),w,b	;volatile
 22790  00B506  2384               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22791  00B508  0E00               	movlw	0
 22792  00B50A  2385               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22793  00B50C  0E00               	movlw	0
 22794  00B50E  2386               	addwfc	(_os+32)& (0+255),f,b	;volatile
 22795                           
 22796                           ; BSR set to: 1
 22797                           ;encoder.c: 431: if(os.arc_size>100000)
 22798  00B510  BF86               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22799  00B512  D012               	goto	l2873
 22800  00B514  5186               	movf	(_os+32)& (0+255),w,b	;volatile
 22801  00B516  E108               	bnz	u18330
 22802  00B518  0EA1               	movlw	161
 22803  00B51A  5D83               	subwf	(_os+29)& (0+255),w,b	;volatile
 22804  00B51C  0E86               	movlw	134
 22805  00B51E  5984               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22806  00B520  0E01               	movlw	1
 22807  00B522  5985               	subwfb	(_os+31)& (0+255),w,b	;volatile
 22808  00B524  A0D8               	btfss	status,0,c
 22809  00B526  D008               	goto	l2873
 22810  00B528                     u18330:
 22811                           
 22812                           ; BSR set to: 1
 22813                           ;encoder.c: 432: os.arc_size = 100000;
 22814  00B528  0EA0               	movlw	160
 22815  00B52A  6F83               	movwf	(_os+29)& (0+255),b	;volatile
 22816  00B52C  0E86               	movlw	134
 22817  00B52E  6F84               	movwf	(_os+30)& (0+255),b	;volatile
 22818  00B530  0E01               	movlw	1
 22819  00B532  6F85               	movwf	(_os+31)& (0+255),b	;volatile
 22820  00B534  0E00               	movlw	0
 22821  00B536  6F86               	movwf	(_os+32)& (0+255),b	;volatile
 22822  00B538                     l2873:
 22823                           
 22824                           ; BSR set to: 1
 22825                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22826                           
 22827                           ; BSR set to: 1
 22828                           
 22829                           ; BSR set to: 1
 22830  00B538  AF6B               	btfss	(_os+5)& (0+255),7,b	;volatile
 22831  00B53A  D137               	goto	l2807
 22832                           
 22833                           ; BSR set to: 1
 22834                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22835  00B53C  5181               	movf	(_os+27)& (0+255),w,b	;volatile
 22836  00B53E  0100               	movlb	0	; () banked
 22837  00B540  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22838  00B542  0101               	movlb	1	; () banked
 22839  00B544  5182               	movf	(_os+28)& (0+255),w,b	;volatile
 22840  00B546  0100               	movlb	0	; () banked
 22841  00B548  6FA9               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22842  00B54A  6BAA               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22843  00B54C  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22844  00B54E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22845  00B550  0101               	movlb	1	; () banked
 22846  00B552  5F83               	subwf	(_os+29)& (0+255),f,b	;volatile
 22847  00B554  0100               	movlb	0	; () banked
 22848  00B556  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22849  00B558  0101               	movlb	1	; () banked
 22850  00B55A  5B84               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22851  00B55C  0100               	movlb	0	; () banked
 22852  00B55E  51AA               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22853  00B560  0101               	movlb	1	; () banked
 22854  00B562  5B85               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22855  00B564  0100               	movlb	0	; () banked
 22856  00B566  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22857  00B568  0101               	movlb	1	; () banked
 22858  00B56A  5B86               	subwfb	(_os+32)& (0+255),f,b	;volatile
 22859                           
 22860                           ;encoder.c: 437: if(os.arc_size<1)
 22861  00B56C  BF86               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22862  00B56E  D007               	goto	u18350
 22863  00B570  5186               	movf	(_os+32)& (0+255),w,b	;volatile
 22864  00B572  1185               	iorwf	(_os+31)& (0+255),w,b	;volatile
 22865  00B574  1184               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22866  00B576  E102               	bnz	u18351
 22867  00B578  0583               	decf	(_os+29)& (0+255),w,b	;volatile
 22868  00B57A  B0D8               	btfsc	status,0,c
 22869  00B57C                     u18351:
 22870  00B57C  D116               	goto	l2807
 22871  00B57E                     u18350:
 22872                           
 22873                           ; BSR set to: 1
 22874                           ;encoder.c: 438: os.arc_size = 1;
 22875  00B57E  0E01               	movlw	1
 22876  00B580  6F83               	movwf	(_os+29)& (0+255),b	;volatile
 22877  00B582  0E00               	movlw	0
 22878  00B584  6F84               	movwf	(_os+30)& (0+255),b	;volatile
 22879  00B586  0E00               	movlw	0
 22880  00B588  6F85               	movwf	(_os+31)& (0+255),b	;volatile
 22881  00B58A  0E00               	movlw	0
 22882  00B58C  6F86               	movwf	(_os+32)& (0+255),b	;volatile
 22883                           
 22884                           ; BSR set to: 1
 22885                           ;encoder.c: 439: };encoder.c: 440: break;
 22886                           
 22887                           ; BSR set to: 1
 22888  00B58E  D10D               	goto	l2807
 22889  00B590                     
 22890                           ;encoder.c: 443: if(os.encoder1Count>0)
 22891                           
 22892                           ; BSR set to: 1
 22893  00B590  0101               	movlb	1	; () banked
 22894  00B592  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 22895  00B594  0A80               	xorlw	128
 22896  00B596  0F7F               	addlw	-129
 22897  00B598  A0D8               	btfss	status,0,c
 22898  00B59A  D011               	goto	l2879
 22899                           
 22900                           ; BSR set to: 1
 22901                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22902  00B59C  51A6               	movf	(_config+15)& (0+255),w,b
 22903  00B59E  5D87               	subwf	(_os+33)& (0+255),w,b	;volatile
 22904  00B5A0  51A7               	movf	(_config+16)& (0+255),w,b
 22905  00B5A2  5988               	subwfb	(_os+34)& (0+255),w,b	;volatile
 22906  00B5A4  B0D8               	btfsc	status,0,c
 22907  00B5A6  D002               	goto	l2878
 22908                           
 22909                           ; BSR set to: 1
 22910                           ;encoder.c: 446: ++os.arc_speed;
 22911  00B5A8  4B87               	infsnz	(_os+33)& (0+255),f,b	;volatile
 22912  00B5AA  2B88               	incf	(_os+34)& (0+255),f,b	;volatile
 22913  00B5AC                     l2878:
 22914                           
 22915                           ; BSR set to: 1
 22916                           ;encoder.c: 447: if(os.busy)
 22917                           
 22918                           ; BSR set to: 1
 22919  00B5AC  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 22920  00B5AE  B4D8               	btfsc	status,2,c
 22921  00B5B0  D006               	goto	l2879
 22922                           
 22923                           ; BSR set to: 1
 22924                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 22925  00B5B2  C187  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 22926  00B5B6  C188  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 22927  00B5BA  ECFD  F0AE         	call	_motor_change_speed	;wreg free
 22928  00B5BE                     l2879:
 22929                           
 22930                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 22931  00B5BE  0101               	movlb	1	; () banked
 22932  00B5C0  AF69               	btfss	(_os+3)& (0+255),7,b	;volatile
 22933  00B5C2  D046               	goto	l2883
 22934                           
 22935                           ; BSR set to: 1
 22936                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 22937  00B5C4  5187               	movf	(_os+33)& (0+255),w,b	;volatile
 22938  00B5C6  5DA0               	subwf	(_config+9)& (0+255),w,b
 22939  00B5C8  5188               	movf	(_os+34)& (0+255),w,b	;volatile
 22940  00B5CA  59A1               	subwfb	(_config+10)& (0+255),w,b
 22941  00B5CC  B0D8               	btfsc	status,0,c
 22942  00B5CE  D003               	goto	l2881
 22943                           
 22944                           ; BSR set to: 1
 22945                           ;encoder.c: 453: --os.arc_speed;
 22946  00B5D0  0787               	decf	(_os+33)& (0+255),f,b	;volatile
 22947  00B5D2  A0D8               	btfss	status,0,c
 22948  00B5D4  0788               	decf	(_os+34)& (0+255),f,b	;volatile
 22949  00B5D6                     l2881:
 22950                           
 22951                           ; BSR set to: 1
 22952                           ;encoder.c: 454: if(os.busy)
 22953                           
 22954                           ; BSR set to: 1
 22955  00B5D6  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 22956  00B5D8  B4D8               	btfsc	status,2,c
 22957  00B5DA  D03A               	goto	l2883
 22958                           
 22959                           ; BSR set to: 1
 22960                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 22961  00B5DC  C187  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 22962  00B5E0  C188  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 22963  00B5E4  ECFD  F0AE         	call	_motor_change_speed	;wreg free
 22964                           
 22965                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 22966  00B5E8  D033               	goto	l2883
 22967  00B5EA                     
 22968                           ;encoder.c: 460: if(os.button2==1)
 22969  00B5EA  0101               	movlb	1	; () banked
 22970  00B5EC  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 22971  00B5EE  A4D8               	btfss	status,2,c
 22972  00B5F0  D006               	goto	l2885
 22973                           
 22974                           ; BSR set to: 1
 22975                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 22976  00B5F2  0EFF               	movlw	255
 22977  00B5F4  ECD1  F08F         	call	_motor_arc_move
 22978                           
 22979                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22980  00B5F8  0E62               	movlw	98
 22981  00B5FA  0101               	movlb	1	; () banked
 22982  00B5FC  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 22983  00B5FE                     l2885:
 22984                           
 22985                           ; BSR set to: 1
 22986                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 22987                           
 22988                           ; BSR set to: 1
 22989  00B5FE  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 22990  00B600  0A80               	xorlw	128
 22991  00B602  0F7F               	addlw	-129
 22992  00B604  A0D8               	btfss	status,0,c
 22993  00B606  D0D1               	goto	l2807
 22994                           
 22995                           ; BSR set to: 1
 22996                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22997  00B608  0E62               	movlw	98
 22998  00B60A  D099               	goto	L21
 22999  00B60C                     
 23000                           ; BSR set to: 1
 23001                           ;encoder.c: 469: if(os.button2==1)
 23002                           
 23003                           ; BSR set to: 1
 23004  00B60C  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 23005  00B60E  A4D8               	btfss	status,2,c
 23006  00B610  D007               	goto	l2889
 23007                           
 23008                           ; BSR set to: 1
 23009                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 23010  00B612  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 23011  00B614  A4D8               	btfss	status,2,c
 23012                           
 23013                           ; BSR set to: 1
 23014                           ;encoder.c: 472: motor_stop();
 23015  00B616  EC89  F0A8         	call	_motor_stop	;wreg free
 23016                           
 23017                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 23018  00B61A  0E03               	movlw	3
 23019  00B61C  0101               	movlb	1	; () banked
 23020  00B61E  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23021  00B620                     l2889:
 23022                           
 23023                           ; BSR set to: 1
 23024                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 23025                           
 23026                           ; BSR set to: 1
 23027  00B620  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 23028  00B622  0A80               	xorlw	128
 23029  00B624  0F7F               	addlw	-129
 23030  00B626  A0D8               	btfss	status,0,c
 23031  00B628  D002               	goto	l2891
 23032                           
 23033                           ; BSR set to: 1
 23034                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 23035  00B62A  0E63               	movlw	99
 23036  00B62C  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23037  00B62E                     l2891:
 23038                           
 23039                           ; BSR set to: 1
 23040                           ;encoder.c: 477: if(os.encoder2Count<0)
 23041                           
 23042                           ; BSR set to: 1
 23043  00B62E  AF6B               	btfss	(_os+5)& (0+255),7,b	;volatile
 23044  00B630  D0BC               	goto	l2807
 23045                           
 23046                           ; BSR set to: 1
 23047                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 23048  00B632  0E61               	movlw	97
 23049  00B634  D084               	goto	L21
 23050  00B636                     
 23051                           ; BSR set to: 1
 23052                           ;encoder.c: 481: if(os.button2==1)
 23053                           
 23054                           ; BSR set to: 1
 23055  00B636  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 23056  00B638  A4D8               	btfss	status,2,c
 23057  00B63A  D006               	goto	l2894
 23058                           
 23059                           ; BSR set to: 1
 23060                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 23061  00B63C  0E01               	movlw	1
 23062  00B63E  ECD1  F08F         	call	_motor_arc_move
 23063                           
 23064                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23065  00B642  0E62               	movlw	98
 23066  00B644  0101               	movlb	1	; () banked
 23067  00B646  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23068  00B648                     l2894:
 23069                           
 23070                           ; BSR set to: 1
 23071                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 23072                           
 23073                           ; BSR set to: 1
 23074  00B648  AF6B               	btfss	(_os+5)& (0+255),7,b	;volatile
 23075  00B64A  D0AF               	goto	l2807
 23076                           
 23077                           ; BSR set to: 1
 23078                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23079  00B64C  0E62               	movlw	98
 23080  00B64E  D077               	goto	L21
 23081  00B650                     l2883:
 23082                           
 23083                           ; BSR set to: 1
 23084  00B650  0101               	movlb	1	; () banked
 23085  00B652  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 23086                           
 23087                           ; Switch size 1, requested type "space"
 23088                           ; Number of cases is 3, Range of values is 97 to 99
 23089                           ; switch strategies available:
 23090                           ; Name         Instructions Cycles
 23091                           ; simple_byte           10     6 (average)
 23092                           ;	Chosen strategy is simple_byte
 23093  00B654  0A61               	xorlw	97	; case 97
 23094  00B656  B4D8               	btfsc	status,2,c
 23095  00B658  D7C8               	goto	l2884
 23096  00B65A  0A03               	xorlw	3	; case 98
 23097  00B65C  B4D8               	btfsc	status,2,c
 23098  00B65E  D7D6               	goto	l2888
 23099  00B660  0A01               	xorlw	1	; case 99
 23100  00B662  B4D8               	btfsc	status,2,c
 23101  00B664  D7E8               	goto	l2893
 23102                           
 23103                           ; BSR set to: 1
 23104                           ;encoder.c: 490: break;
 23105  00B666  D0A1               	goto	l2807
 23106  00B668                     
 23107                           ;encoder.c: 493: if(os.button2==1)
 23108                           
 23109                           ; BSR set to: 1
 23110  00B668  0101               	movlb	1	; () banked
 23111  00B66A  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 23112  00B66C  A4D8               	btfss	status,2,c
 23113  00B66E  D018               	goto	l2897
 23114                           
 23115                           ; BSR set to: 1
 23116                           ;encoder.c: 494: {;encoder.c: 496: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF,
      +                           MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23117  00B670  0E00               	movlw	0
 23118  00B672  0100               	movlb	0	; () banked
 23119  00B674  6F92               	movwf	motor_goto_steps@position& (0+255),b
 23120  00B676  0E00               	movlw	0
 23121  00B678  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 23122  00B67A  0E00               	movlw	0
 23123  00B67C  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 23124  00B67E  0E00               	movlw	0
 23125  00B680  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 23126  00B682  0EFF               	movlw	255
 23127  00B684  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23128  00B686  6996               	setf	motor_goto_steps@speed& (0+255),b
 23129  00B688  0E00               	movlw	0
 23130  00B68A  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23131  00B68C  0E00               	movlw	0
 23132  00B68E  EC4B  F09B         	call	_motor_goto_steps
 23133                           
 23134                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23135  00B692  0E05               	movlw	5
 23136  00B694  0101               	movlb	1	; () banked
 23137  00B696  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23138                           
 23139                           ; BSR set to: 1
 23140                           ;encoder.c: 499: os.divide_position = 0;
 23141  00B698  0E00               	movlw	0
 23142  00B69A  6F7E               	movwf	(_os+24)& (0+255),b	;volatile
 23143  00B69C  0E00               	movlw	0
 23144  00B69E  6F7D               	movwf	(_os+23)& (0+255),b	;volatile
 23145  00B6A0                     l2897:
 23146                           
 23147                           ; BSR set to: 1
 23148                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 23149                           
 23150                           ; BSR set to: 1
 23151  00B6A0  056A               	decf	(_os+4)& (0+255),w,b	;volatile
 23152  00B6A2  A4D8               	btfss	status,2,c
 23153  00B6A4  D082               	goto	l2807
 23154                           
 23155                           ; BSR set to: 1
 23156                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23157  00B6A6  0E05               	movlw	5
 23158  00B6A8  D04A               	goto	L21
 23159  00B6AA                     
 23160                           ;encoder.c: 508: if(os.encoder1Count>0)
 23161                           
 23162                           ; BSR set to: 1
 23163  00B6AA  0101               	movlb	1	; () banked
 23164  00B6AC  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 23165  00B6AE  0A80               	xorlw	128
 23166  00B6B0  0F7F               	addlw	-129
 23167  00B6B2  B0D8               	btfsc	status,0,c
 23168                           
 23169                           ; BSR set to: 1
 23170                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 23171  00B6B4  EC63  F0AE         	call	_motor_increase_manual_speed	;wreg free
 23172                           
 23173                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 23174  00B6B8  0101               	movlb	1	; () banked
 23175  00B6BA  AF69               	btfss	(_os+3)& (0+255),7,b	;volatile
 23176  00B6BC  D042               	goto	l2902
 23177                           
 23178                           ; BSR set to: 1
 23179                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 23180  00B6BE  ECFA  F0AD         	call	_motor_decrease_manual_speed	;wreg free
 23181                           
 23182                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 23183  00B6C2  D03F               	goto	l2902
 23184  00B6C4                     
 23185                           ;encoder.c: 519: if(os.button2==1)
 23186  00B6C4  0101               	movlb	1	; () banked
 23187  00B6C6  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 23188  00B6C8  A4D8               	btfss	status,2,c
 23189  00B6CA  D00A               	goto	l2904
 23190                           
 23191                           ; BSR set to: 1
 23192                           ;encoder.c: 520: {;encoder.c: 521: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_spe
      +                          ed);
 23193  00B6CC  C18A  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 23194  00B6D0  C18B  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 23195  00B6D4  0EFF               	movlw	255
 23196  00B6D6  EC93  F0AC         	call	_motor_move_endless
 23197                           
 23198                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23199  00B6DA  0E84               	movlw	132
 23200  00B6DC  0101               	movlb	1	; () banked
 23201  00B6DE  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23202  00B6E0                     l2904:
 23203                           
 23204                           ; BSR set to: 1
 23205                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 23206                           
 23207                           ; BSR set to: 1
 23208  00B6E0  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 23209  00B6E2  0A80               	xorlw	128
 23210  00B6E4  0F7F               	addlw	-129
 23211  00B6E6  A0D8               	btfss	status,0,c
 23212  00B6E8  D060               	goto	l2807
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23216  00B6EA  0E82               	movlw	130
 23217  00B6EC  D028               	goto	L21
 23218  00B6EE                     
 23219                           ; BSR set to: 1
 23220                           ;encoder.c: 528: if(os.button2==1)
 23221                           
 23222                           ; BSR set to: 1
 23223  00B6EE  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 23224  00B6F0  A4D8               	btfss	status,2,c
 23225  00B6F2  D002               	goto	l2908
 23226                           
 23227                           ; BSR set to: 1
 23228                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23229  00B6F4  0E04               	movlw	4
 23230  00B6F6  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23231  00B6F8                     l2908:
 23232                           
 23233                           ; BSR set to: 1
 23234                           ;encoder.c: 530: if(os.encoder2Count>0)
 23235                           
 23236                           ; BSR set to: 1
 23237  00B6F8  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 23238  00B6FA  0A80               	xorlw	128
 23239  00B6FC  0F7F               	addlw	-129
 23240  00B6FE  A0D8               	btfss	status,0,c
 23241  00B700  D002               	goto	l2909
 23242                           
 23243                           ; BSR set to: 1
 23244                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 23245  00B702  0E83               	movlw	131
 23246  00B704  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23247  00B706                     l2909:
 23248                           
 23249                           ; BSR set to: 1
 23250                           ;encoder.c: 532: if(os.encoder2Count<0)
 23251                           
 23252                           ; BSR set to: 1
 23253  00B706  AF6B               	btfss	(_os+5)& (0+255),7,b	;volatile
 23254  00B708  D050               	goto	l2807
 23255                           
 23256                           ; BSR set to: 1
 23257                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 23258  00B70A  0E81               	movlw	129
 23259  00B70C  D018               	goto	L21
 23260  00B70E                     
 23261                           ; BSR set to: 1
 23262                           ;encoder.c: 536: if(os.button2==1)
 23263                           
 23264                           ; BSR set to: 1
 23265  00B70E  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 23266  00B710  A4D8               	btfss	status,2,c
 23267  00B712  D009               	goto	l2912
 23268                           
 23269                           ; BSR set to: 1
 23270                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23271  00B714  0E84               	movlw	132
 23272  00B716  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23273                           
 23274                           ; BSR set to: 1
 23275                           ;encoder.c: 539: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 23276  00B718  C18A  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 23277  00B71C  C18B  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 23278  00B720  0E01               	movlw	1
 23279  00B722  EC93  F0AC         	call	_motor_move_endless
 23280  00B726                     l2912:
 23281                           
 23282                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 23283  00B726  0101               	movlb	1	; () banked
 23284  00B728  AF6B               	btfss	(_os+5)& (0+255),7,b	;volatile
 23285  00B72A  D03F               	goto	l2807
 23286                           
 23287                           ; BSR set to: 1
 23288                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23289  00B72C  0E82               	movlw	130
 23290  00B72E  D007               	goto	L21
 23291  00B730                     
 23292                           ; BSR set to: 1
 23293                           ;encoder.c: 545: if(os.button2==1)
 23294                           
 23295                           ; BSR set to: 1
 23296  00B730  056C               	decf	(_os+6)& (0+255),w,b	;volatile
 23297  00B732  A4D8               	btfss	status,2,c
 23298  00B734  D03A               	goto	l2807
 23299                           
 23300                           ; BSR set to: 1
 23301                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 23302  00B736  EC89  F0A8         	call	_motor_stop	;wreg free
 23303                           
 23304                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23305  00B73A  0E82               	movlw	130
 23306  00B73C                     L22:
 23307  00B73C  0101               	movlb	1	; () banked
 23308  00B73E                     L21:
 23309  00B73E  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 23310                           
 23311                           ; BSR set to: 1
 23312                           ;encoder.c: 551: }
 23313                           
 23314                           ; BSR set to: 1
 23315                           ;encoder.c: 549: };encoder.c: 550: break;
 23316  00B740  D034               	goto	l2807
 23317  00B742                     l2902:
 23318                           
 23319                           ; BSR set to: 1
 23320  00B742  0101               	movlb	1	; () banked
 23321  00B744  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 23322                           
 23323                           ; Switch size 1, requested type "space"
 23324                           ; Number of cases is 4, Range of values is 129 to 132
 23325                           ; switch strategies available:
 23326                           ; Name         Instructions Cycles
 23327                           ; simple_byte           13     7 (average)
 23328                           ;	Chosen strategy is simple_byte
 23329  00B746  0A81               	xorlw	129	; case 129
 23330  00B748  B4D8               	btfsc	status,2,c
 23331  00B74A  D7BC               	goto	l2903
 23332  00B74C  0A03               	xorlw	3	; case 130
 23333  00B74E  B4D8               	btfsc	status,2,c
 23334  00B750  D7CE               	goto	l2907
 23335  00B752  0A01               	xorlw	1	; case 131
 23336  00B754  B4D8               	btfsc	status,2,c
 23337  00B756  D7DB               	goto	l2911
 23338  00B758  0A07               	xorlw	7	; case 132
 23339  00B75A  B4D8               	btfsc	status,2,c
 23340  00B75C  D7E9               	goto	l2914
 23341                           
 23342                           ; BSR set to: 1
 23343                           ;encoder.c: 553: }
 23344                           
 23345                           ; BSR set to: 1
 23346                           ;encoder.c: 552: break;
 23347  00B75E  D025               	goto	l2807
 23348  00B760                     l2772:
 23349                           
 23350                           ; BSR set to: 1
 23351                           
 23352                           ; BSR set to: 1
 23353  00B760  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 23354  00B762  0BF0               	andlw	240
 23355  00B764  0100               	movlb	0	; () banked
 23356  00B766  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 23357  00B768  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23358                           
 23359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23360                           ; Switch size 1, requested type "space"
 23361                           ; Number of cases is 1, Range of values is 0 to 0
 23362                           ; switch strategies available:
 23363                           ; Name         Instructions Cycles
 23364                           ; simple_byte            4     3 (average)
 23365                           ;	Chosen strategy is simple_byte
 23366  00B76A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23367  00B76C  0A00               	xorlw	0	; case 0
 23368  00B76E  A4D8               	btfss	status,2,c
 23369  00B770  D01C               	goto	l2807
 23370                           
 23371                           ; BSR set to: 0
 23372                           ; Switch size 1, requested type "space"
 23373                           ; Number of cases is 9, Range of values is 0 to 128
 23374                           ; switch strategies available:
 23375                           ; Name         Instructions Cycles
 23376                           ; simple_byte           28    15 (average)
 23377                           ;	Chosen strategy is simple_byte
 23378  00B772  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 23379  00B774  0A00               	xorlw	0	; case 0
 23380  00B776  B4D8               	btfsc	status,2,c
 23381  00B778  D51F               	goto	l2774
 23382  00B77A  0A10               	xorlw	16	; case 16
 23383  00B77C  B4D8               	btfsc	status,2,c
 23384  00B77E  D55C               	goto	l2809
 23385  00B780  0A30               	xorlw	48	; case 32
 23386  00B782  B4D8               	btfsc	status,2,c
 23387  00B784  D603               	goto	l2825
 23388  00B786  0A10               	xorlw	16	; case 48
 23389  00B788  B4D8               	btfsc	status,2,c
 23390  00B78A  D62D               	goto	l2840
 23391  00B78C  0A70               	xorlw	112	; case 64
 23392  00B78E  B4D8               	btfsc	status,2,c
 23393  00B790  D663               	goto	l2855
 23394  00B792  0A10               	xorlw	16	; case 80
 23395  00B794  B4D8               	btfsc	status,2,c
 23396  00B796  D699               	goto	l2861
 23397  00B798  0A30               	xorlw	48	; case 96
 23398  00B79A  B4D8               	btfsc	status,2,c
 23399  00B79C  D6F9               	goto	l2876
 23400  00B79E  0A10               	xorlw	16	; case 112
 23401  00B7A0  B4D8               	btfsc	status,2,c
 23402  00B7A2  D762               	goto	l2896
 23403  00B7A4  0AF0               	xorlw	240	; case 128
 23404  00B7A6  B4D8               	btfsc	status,2,c
 23405  00B7A8  D780               	goto	l2899
 23406  00B7AA                     l2807:
 23407                           
 23408                           ;encoder.c: 556: os.encoder1Count = 0;
 23409                           
 23410                           ; BSR set to: 0
 23411  00B7AA  0E00               	movlw	0
 23412  00B7AC  0101               	movlb	1	; () banked
 23413  00B7AE  6F69               	movwf	(_os+3)& (0+255),b	;volatile
 23414                           
 23415                           ;encoder.c: 557: os.encoder2Count = 0;
 23416  00B7B0  0E00               	movlw	0
 23417  00B7B2  6F6B               	movwf	(_os+5)& (0+255),b	;volatile
 23418                           
 23419                           ;encoder.c: 558: os.button1 = 0;
 23420  00B7B4  0E00               	movlw	0
 23421  00B7B6  6F6A               	movwf	(_os+4)& (0+255),b	;volatile
 23422                           
 23423                           ;encoder.c: 559: os.button2 = 0;
 23424  00B7B8  0E00               	movlw	0
 23425  00B7BA  6F6C               	movwf	(_os+6)& (0+255),b	;volatile
 23426                           
 23427                           ; BSR set to: 1
 23428  00B7BC  0012               	return		;funcret
 23429  00B7BE                     __end_of_encoder_statemachine:
 23430                           	opt stack 0
 23431                           tblptru	equ	0xFF8
 23432                           tblptrh	equ	0xFF7
 23433                           tblptrl	equ	0xFF6
 23434                           tablat	equ	0xFF5
 23435                           prodh	equ	0xFF4
 23436                           prodl	equ	0xFF3
 23437                           intcon	equ	0xFF2
 23438                           postinc0	equ	0xFEE
 23439                           wreg	equ	0xFE8
 23440                           indf1	equ	0xFE7
 23441                           postinc1	equ	0xFE6
 23442                           postdec1	equ	0xFE5
 23443                           plusw1	equ	0xFE3
 23444                           fsr1h	equ	0xFE2
 23445                           fsr1l	equ	0xFE1
 23446                           indf2	equ	0xFDF
 23447                           postinc2	equ	0xFDE
 23448                           postdec2	equ	0xFDD
 23449                           plusw2	equ	0xFDB
 23450                           fsr2h	equ	0xFDA
 23451                           fsr2l	equ	0xFD9
 23452                           status	equ	0xFD8
 23453                           
 23454 ;; *************** function _motor_move_degrees_int *****************
 23455 ;; Defined at:
 23456 ;;		line 1014 in file "motor.c"
 23457 ;; Parameters:    Size  Location     Type
 23458 ;;  direction       1    wreg     enum E6622
 23459 ;;  distance        2   57[BANK0 ] unsigned int 
 23460 ;;  speed           2   59[BANK0 ] unsigned int 
 23461 ;;  overshoot       1   61[BANK0 ] enum E6635
 23462 ;; Auto vars:     Size  Location     Type
 23463 ;;  direction       1   66[BANK0 ] enum E6622
 23464 ;;  distance_in_    4   62[BANK0 ] unsigned long 
 23465 ;; Return value:  Size  Location     Type
 23466 ;;                  1    wreg      enum E6639
 23467 ;; Registers used:
 23468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23469 ;; Tracked objects:
 23470 ;;		On entry : 0/0
 23471 ;;		On exit  : 0/0
 23472 ;;		Unchanged: 0/0
 23473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23474 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23475 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23477 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23478 ;;Total ram usage:       10 bytes
 23479 ;; Hardware stack levels used:    1
 23480 ;; Hardware stack levels required when called:   13
 23481 ;; This function calls:
 23482 ;;		__motor_move_steps
 23483 ;;		__motor_steps_from_degrees_int
 23484 ;; This function is called by:
 23485 ;;		_encoder_statemachine
 23486 ;; This function uses a non-reentrant model
 23487 ;;
 23488                           
 23489                           	psect	text92
 23490  01524C                     __ptext92:
 23491                           	opt stack 0
 23492  01524C                     _motor_move_degrees_int:
 23493                           	opt stack 16
 23494                           
 23495                           ; BSR set to: 1
 23496                           ;incstack = 0
 23497                           ;motor_move_degrees_int@direction stored from wreg
 23498  01524C  0100               	movlb	0	; () banked
 23499  01524E  6FA2               	movwf	motor_move_degrees_int@direction& (0+255),b
 23500                           
 23501                           ;motor.c: 1017: uint32_t distance_in_steps = _motor_steps_from_degrees_int(distance);
 23502  015250  C099  F091         	movff	motor_move_degrees_int@distance,__motor_steps_from_degrees_int@degrees
 23503  015254  C09A  F092         	movff	motor_move_degrees_int@distance+1,__motor_steps_from_degrees_int@degrees+1
 23504  015258  ECC8  F085         	call	__motor_steps_from_degrees_int	;wreg free
 23505  01525C  C091  F09E         	movff	?__motor_steps_from_degrees_int,motor_move_degrees_int@distance_in_steps
 23506  015260  C092  F09F         	movff	?__motor_steps_from_degrees_int+1,motor_move_degrees_int@distance_in_steps+1
 23507  015264  C093  F0A0         	movff	?__motor_steps_from_degrees_int+2,motor_move_degrees_int@distance_in_steps+2
 23508  015268  C094  F0A1         	movff	?__motor_steps_from_degrees_int+3,motor_move_degrees_int@distance_in_steps+3
 23509                           
 23510                           ;motor.c: 1020: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_move_degrees_int is never used
 23511  01526C  C09E  F07D         	movff	motor_move_degrees_int@distance_in_steps,__motor_move_steps@distance_in_steps
 23512  015270  C09F  F07E         	movff	motor_move_degrees_int@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 23513  015274  C0A0  F07F         	movff	motor_move_degrees_int@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 23514  015278  C0A1  F080         	movff	motor_move_degrees_int@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 23515  01527C  C09B  F081         	movff	motor_move_degrees_int@speed,__motor_move_steps@speed
 23516  015280  C09C  F082         	movff	motor_move_degrees_int@speed+1,__motor_move_steps@speed+1
 23517  015284  C09D  F083         	movff	motor_move_degrees_int@overshoot,__motor_move_steps@overshoot
 23518  015288  0E00               	movlw	0
 23519  01528A  0100               	movlb	0	; () banked
 23520  01528C  6F84               	movwf	__motor_move_steps@type& (0+255),b
 23521  01528E  51A2               	movf	motor_move_degrees_int@direction& (0+255),w,b
 23522  015290  ECBE  F076         	call	__motor_move_steps
 23523  015294  0012               	return	
 23524  015296                     __end_of_motor_move_degrees_int:
 23525                           	opt stack 0
 23526                           tblptru	equ	0xFF8
 23527                           tblptrh	equ	0xFF7
 23528                           tblptrl	equ	0xFF6
 23529                           tablat	equ	0xFF5
 23530                           prodh	equ	0xFF4
 23531                           prodl	equ	0xFF3
 23532                           intcon	equ	0xFF2
 23533                           postinc0	equ	0xFEE
 23534                           wreg	equ	0xFE8
 23535                           indf1	equ	0xFE7
 23536                           postinc1	equ	0xFE6
 23537                           postdec1	equ	0xFE5
 23538                           plusw1	equ	0xFE3
 23539                           fsr1h	equ	0xFE2
 23540                           fsr1l	equ	0xFE1
 23541                           indf2	equ	0xFDF
 23542                           postinc2	equ	0xFDE
 23543                           postdec2	equ	0xFDD
 23544                           plusw2	equ	0xFDB
 23545                           fsr2h	equ	0xFDA
 23546                           fsr2l	equ	0xFD9
 23547                           status	equ	0xFD8
 23548                           
 23549 ;; *************** function __motor_steps_from_degrees_int *****************
 23550 ;; Defined at:
 23551 ;;		line 426 in file "motor.c"
 23552 ;; Parameters:    Size  Location     Type
 23553 ;;  degrees         2   49[BANK0 ] unsigned int 
 23554 ;; Auto vars:     Size  Location     Type
 23555 ;;  temp            4   53[BANK0 ] unsigned int 
 23556 ;; Return value:  Size  Location     Type
 23557 ;;                  4   49[BANK0 ] unsigned long 
 23558 ;; Registers used:
 23559 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23560 ;; Tracked objects:
 23561 ;;		On entry : 0/0
 23562 ;;		On exit  : 0/0
 23563 ;;		Unchanged: 0/0
 23564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23565 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23566 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23568 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23569 ;;Total ram usage:        8 bytes
 23570 ;; Hardware stack levels used:    1
 23571 ;; Hardware stack levels required when called:   11
 23572 ;; This function calls:
 23573 ;;		___fladd
 23574 ;;		___fldiv
 23575 ;;		___flmul
 23576 ;;		___fltol
 23577 ;;		___xxtofl
 23578 ;; This function is called by:
 23579 ;;		_motor_move_degrees_int
 23580 ;;		_motor_goto_degrees_int
 23581 ;; This function uses a non-reentrant model
 23582 ;;
 23583                           
 23584                           	psect	text93
 23585  010B90                     __ptext93:
 23586                           	opt stack 0
 23587  010B90                     __motor_steps_from_degrees_int:
 23588                           	opt stack 17
 23589                           
 23590                           ;motor.c: 428: double temp;;motor.c: 431: if(degrees==0)
 23591                           
 23592                           ;incstack = 0
 23593  010B90  0100               	movlb	0	; () banked
 23594  010B92  5191               	movf	__motor_steps_from_degrees_int@degrees& (0+255),w,b
 23595  010B94  1192               	iorwf	(__motor_steps_from_degrees_int@degrees+1)& (0+255),w,b
 23596  010B96  A4D8               	btfss	status,2,c
 23597  010B98  D009               	goto	l2509
 23598                           
 23599                           ; BSR set to: 0
 23600                           ;motor.c: 432: {;motor.c: 433: return 0;
 23601  010B9A  0E00               	movlw	0
 23602  010B9C  6F91               	movwf	?__motor_steps_from_degrees_int& (0+255),b
 23603  010B9E  0E00               	movlw	0
 23604  010BA0  6F92               	movwf	(?__motor_steps_from_degrees_int+1)& (0+255),b
 23605  010BA2  0E00               	movlw	0
 23606  010BA4  6F93               	movwf	(?__motor_steps_from_degrees_int+2)& (0+255),b
 23607  010BA6  0E00               	movlw	0
 23608  010BA8  6F94               	movwf	(?__motor_steps_from_degrees_int+3)& (0+255),b
 23609                           
 23610                           ; BSR set to: 0
 23611  010BAA  0012               	return	
 23612  010BAC                     l2509:
 23613                           
 23614                           ; BSR set to: 0
 23615                           ;motor.c: 434: };motor.c: 437: temp = (float) degrees;
 23616                           
 23617                           ; BSR set to: 0
 23618  010BAC  C091  F06A         	movff	__motor_steps_from_degrees_int@degrees,___xxtofl@val
 23619  010BB0  C092  F06B         	movff	__motor_steps_from_degrees_int@degrees+1,___xxtofl@val+1
 23620  010BB4  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 23621  010BB6  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 23622  010BB8  0E00               	movlw	0
 23623  010BBA  ECFA  F080         	call	___xxtofl
 23624  010BBE  C06A  F095         	movff	?___xxtofl,__motor_steps_from_degrees_int@temp
 23625  010BC2  C06B  F096         	movff	?___xxtofl+1,__motor_steps_from_degrees_int@temp+1
 23626  010BC6  C06C  F097         	movff	?___xxtofl+2,__motor_steps_from_degrees_int@temp+2
 23627  010BCA  C06D  F098         	movff	?___xxtofl+3,__motor_steps_from_degrees_int@temp+3
 23628                           
 23629                           ;motor.c: 440: temp *= config.full_circle_in_steps;
 23630  010BCE  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___flmul@b
 23631  010BD2  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___flmul@b+1
 23632  010BD6  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___flmul@b+2
 23633  010BDA  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___flmul@b+3
 23634  010BDE  C197  F06A         	movff	_config,___xxtofl@val
 23635  010BE2  C198  F06B         	movff	_config+1,___xxtofl@val+1
 23636  010BE6  C199  F06C         	movff	_config+2,___xxtofl@val+2
 23637  010BEA  C19A  F06D         	movff	_config+3,___xxtofl@val+3
 23638  010BEE  0E00               	movlw	0
 23639  010BF0  ECFA  F080         	call	___xxtofl
 23640  010BF4  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23641  010BF8  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23642  010BFC  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23643  010C00  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23644  010C04  EC76  F064         	call	___flmul	;wreg free
 23645  010C08  C078  F095         	movff	?___flmul,__motor_steps_from_degrees_int@temp
 23646  010C0C  C079  F096         	movff	?___flmul+1,__motor_steps_from_degrees_int@temp+1
 23647  010C10  C07A  F097         	movff	?___flmul+2,__motor_steps_from_degrees_int@temp+2
 23648  010C14  C07B  F098         	movff	?___flmul+3,__motor_steps_from_degrees_int@temp+3
 23649                           
 23650                           ;motor.c: 441: temp /= 36000.0;
 23651  010C18  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___fldiv@b
 23652  010C1C  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___fldiv@b+1
 23653  010C20  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___fldiv@b+2
 23654  010C24  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___fldiv@b+3
 23655  010C28  0E00               	movlw	0
 23656  010C2A  0100               	movlb	0	; () banked
 23657  010C2C  6F7C               	movwf	___fldiv@a& (0+255),b
 23658  010C2E  0EA0               	movlw	160
 23659  010C30  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 23660  010C32  0E0C               	movlw	12
 23661  010C34  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 23662  010C36  0E47               	movlw	71
 23663  010C38  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 23664  010C3A  EC9E  F06A         	call	___fldiv	;wreg free
 23665  010C3E  C078  F095         	movff	?___fldiv,__motor_steps_from_degrees_int@temp
 23666  010C42  C079  F096         	movff	?___fldiv+1,__motor_steps_from_degrees_int@temp+1
 23667  010C46  C07A  F097         	movff	?___fldiv+2,__motor_steps_from_degrees_int@temp+2
 23668  010C4A  C07B  F098         	movff	?___fldiv+3,__motor_steps_from_degrees_int@temp+3
 23669                           
 23670                           ;motor.c: 442: temp += 0.5;
 23671  010C4E  C095  F07C         	movff	__motor_steps_from_degrees_int@temp,___fladd@b
 23672  010C52  C096  F07D         	movff	__motor_steps_from_degrees_int@temp+1,___fladd@b+1
 23673  010C56  C097  F07E         	movff	__motor_steps_from_degrees_int@temp+2,___fladd@b+2
 23674  010C5A  C098  F07F         	movff	__motor_steps_from_degrees_int@temp+3,___fladd@b+3
 23675  010C5E  0E00               	movlw	0
 23676  010C60  0100               	movlb	0	; () banked
 23677  010C62  6F80               	movwf	___fladd@a& (0+255),b
 23678  010C64  0E00               	movlw	0
 23679  010C66  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23680  010C68  0E00               	movlw	0
 23681  010C6A  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23682  010C6C  0E3F               	movlw	63
 23683  010C6E  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23684  010C70  EC1F  F066         	call	___fladd	;wreg free
 23685  010C74  C07C  F095         	movff	?___fladd,__motor_steps_from_degrees_int@temp
 23686  010C78  C07D  F096         	movff	?___fladd+1,__motor_steps_from_degrees_int@temp+1
 23687  010C7C  C07E  F097         	movff	?___fladd+2,__motor_steps_from_degrees_int@temp+2
 23688  010C80  C07F  F098         	movff	?___fladd+3,__motor_steps_from_degrees_int@temp+3
 23689                           
 23690                           ;motor.c: 445: return (uint32_t) temp;
 23691  010C84  C095  F060         	movff	__motor_steps_from_degrees_int@temp,___fltol@f1
 23692  010C88  C096  F061         	movff	__motor_steps_from_degrees_int@temp+1,___fltol@f1+1
 23693  010C8C  C097  F062         	movff	__motor_steps_from_degrees_int@temp+2,___fltol@f1+2
 23694  010C90  C098  F063         	movff	__motor_steps_from_degrees_int@temp+3,___fltol@f1+3
 23695  010C94  EC93  F091         	call	___fltol	;wreg free
 23696  010C98  C060  F091         	movff	?___fltol,?__motor_steps_from_degrees_int
 23697  010C9C  C061  F092         	movff	?___fltol+1,?__motor_steps_from_degrees_int+1
 23698  010CA0  C062  F093         	movff	?___fltol+2,?__motor_steps_from_degrees_int+2
 23699  010CA4  C063  F094         	movff	?___fltol+3,?__motor_steps_from_degrees_int+3
 23700  010CA8  0012               	return	
 23701  010CAA                     __end_of__motor_steps_from_degrees_int:
 23702                           	opt stack 0
 23703                           tblptru	equ	0xFF8
 23704                           tblptrh	equ	0xFF7
 23705                           tblptrl	equ	0xFF6
 23706                           tablat	equ	0xFF5
 23707                           prodh	equ	0xFF4
 23708                           prodl	equ	0xFF3
 23709                           intcon	equ	0xFF2
 23710                           postinc0	equ	0xFEE
 23711                           wreg	equ	0xFE8
 23712                           indf1	equ	0xFE7
 23713                           postinc1	equ	0xFE6
 23714                           postdec1	equ	0xFE5
 23715                           plusw1	equ	0xFE3
 23716                           fsr1h	equ	0xFE2
 23717                           fsr1l	equ	0xFE1
 23718                           indf2	equ	0xFDF
 23719                           postinc2	equ	0xFDE
 23720                           postdec2	equ	0xFDD
 23721                           plusw2	equ	0xFDB
 23722                           fsr2h	equ	0xFDA
 23723                           fsr2l	equ	0xFD9
 23724                           status	equ	0xFD8
 23725                           
 23726 ;; *************** function _motor_increase_manual_speed *****************
 23727 ;; Defined at:
 23728 ;;		line 866 in file "motor.c"
 23729 ;; Parameters:    Size  Location     Type
 23730 ;;		None
 23731 ;; Auto vars:     Size  Location     Type
 23732 ;;		None
 23733 ;; Return value:  Size  Location     Type
 23734 ;;                  1    wreg      void 
 23735 ;; Registers used:
 23736 ;;		wreg, status,2, status,0, cstack
 23737 ;; Tracked objects:
 23738 ;;		On entry : 0/0
 23739 ;;		On exit  : 0/0
 23740 ;;		Unchanged: 0/0
 23741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23746 ;;Total ram usage:        0 bytes
 23747 ;; Hardware stack levels used:    1
 23748 ;; Hardware stack levels required when called:   12
 23749 ;; This function calls:
 23750 ;;		_motor_set_manual_speed
 23751 ;; This function is called by:
 23752 ;;		_encoder_statemachine
 23753 ;; This function uses a non-reentrant model
 23754 ;;
 23755                           
 23756                           	psect	text94
 23757  015CC6                     __ptext94:
 23758                           	opt stack 0
 23759  015CC6                     _motor_increase_manual_speed:
 23760                           	opt stack 17
 23761                           
 23762                           ;motor.c: 869: {;motor.c: 870: motor_set_manual_speed(os.manual_speed+1);
 23763                           
 23764                           ;incstack = 0
 23765  015CC6  0E01               	movlw	1
 23766  015CC8  0101               	movlb	1	; () banked
 23767  015CCA  258A               	addwf	(_os+36)& (0+255),w,b	;volatile
 23768  015CCC  0100               	movlb	0	; () banked
 23769  015CCE  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23770  015CD0  0E00               	movlw	0
 23771  015CD2  0101               	movlb	1	; () banked
 23772  015CD4  218B               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23773  015CD6  0100               	movlb	0	; () banked
 23774  015CD8  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23775  015CDA  ECB1  F0A8         	call	_motor_set_manual_speed	;wreg free
 23776  015CDE  0012               	return	
 23777  015CE0                     __end_of_motor_increase_manual_speed:
 23778                           	opt stack 0
 23779                           tblptru	equ	0xFF8
 23780                           tblptrh	equ	0xFF7
 23781                           tblptrl	equ	0xFF6
 23782                           tablat	equ	0xFF5
 23783                           prodh	equ	0xFF4
 23784                           prodl	equ	0xFF3
 23785                           intcon	equ	0xFF2
 23786                           postinc0	equ	0xFEE
 23787                           wreg	equ	0xFE8
 23788                           indf1	equ	0xFE7
 23789                           postinc1	equ	0xFE6
 23790                           postdec1	equ	0xFE5
 23791                           plusw1	equ	0xFE3
 23792                           fsr1h	equ	0xFE2
 23793                           fsr1l	equ	0xFE1
 23794                           indf2	equ	0xFDF
 23795                           postinc2	equ	0xFDE
 23796                           postdec2	equ	0xFDD
 23797                           plusw2	equ	0xFDB
 23798                           fsr2h	equ	0xFDA
 23799                           fsr2l	equ	0xFD9
 23800                           status	equ	0xFD8
 23801                           
 23802 ;; *************** function _motor_divide_jump_to_nearest *****************
 23803 ;; Defined at:
 23804 ;;		line 935 in file "motor.c"
 23805 ;; Parameters:    Size  Location     Type
 23806 ;;		None
 23807 ;; Auto vars:     Size  Location     Type
 23808 ;;  divide_posit    4   68[BANK0 ] float 
 23809 ;;  nearest_posi    4   62[BANK0 ] unsigned long 
 23810 ;;  nearest_divi    2   66[BANK0 ] int 
 23811 ;; Return value:  Size  Location     Type
 23812 ;;                  1    wreg      void 
 23813 ;; Registers used:
 23814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23815 ;; Tracked objects:
 23816 ;;		On entry : 0/0
 23817 ;;		On exit  : 0/0
 23818 ;;		Unchanged: 0/0
 23819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23821 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23823 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23824 ;;Total ram usage:       10 bytes
 23825 ;; Hardware stack levels used:    1
 23826 ;; Hardware stack levels required when called:   14
 23827 ;; This function calls:
 23828 ;;		___fladd
 23829 ;;		___fldiv
 23830 ;;		___flmul
 23831 ;;		___fltol
 23832 ;;		___xxtofl
 23833 ;;		__step_position_from_divide_position
 23834 ;;		_motor_goto_steps
 23835 ;; This function is called by:
 23836 ;;		_encoder_statemachine
 23837 ;; This function uses a non-reentrant model
 23838 ;;
 23839                           
 23840                           	psect	text95
 23841  00F778                     __ptext95:
 23842                           	opt stack 0
 23843  00F778                     _motor_divide_jump_to_nearest:
 23844                           	opt stack 15
 23845                           
 23846                           ;motor.c: 937: float divide_position_float;;motor.c: 938: int16_t nearest_divide_positio
      +                          n;;motor.c: 939: uint32_t nearest_position_in_steps;;motor.c: 941: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23847                           
 23848                           ;incstack = 0
 23849  00F778  C16D  F06A         	movff	_os+7,___xxtofl@val	;volatile
 23850  00F77C  C16E  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
 23851  00F780  C16F  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
 23852  00F784  C170  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
 23853  00F788  0E00               	movlw	0
 23854  00F78A  ECFA  F080         	call	___xxtofl
 23855  00F78E  C06A  F0A4         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23856  00F792  C06B  F0A5         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23857  00F796  C06C  F0A6         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23858  00F79A  C06D  F0A7         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23859                           
 23860                           ;motor.c: 942: divide_position_float *= (float) os.division;
 23861  00F79E  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23862  00F7A2  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23863  00F7A6  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23864  00F7AA  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23865  00F7AE  EE21  F07A         	lfsr	2,_os+20	;volatile
 23866  00F7B2  CFDE F06A          	movff	postinc2,___xxtofl@val
 23867  00F7B6  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 23868  00F7BA  0100               	movlb	0	; () banked
 23869  00F7BC  0E00               	movlw	0
 23870  00F7BE  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23871  00F7C0  0EFF               	movlw	-1
 23872  00F7C2  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 23873  00F7C4  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 23874  00F7C6  0E01               	movlw	1
 23875  00F7C8  ECFA  F080         	call	___xxtofl
 23876  00F7CC  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23877  00F7D0  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23878  00F7D4  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23879  00F7D8  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23880  00F7DC  EC76  F064         	call	___flmul	;wreg free
 23881  00F7E0  C078  F0A4         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23882  00F7E4  C079  F0A5         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23883  00F7E8  C07A  F0A6         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23884  00F7EC  C07B  F0A7         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23885                           
 23886                           ;motor.c: 943: divide_position_float /= (float) config.full_circle_in_steps;
 23887  00F7F0  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23888  00F7F4  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23889  00F7F8  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23890  00F7FC  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23891  00F800  C197  F06A         	movff	_config,___xxtofl@val
 23892  00F804  C198  F06B         	movff	_config+1,___xxtofl@val+1
 23893  00F808  C199  F06C         	movff	_config+2,___xxtofl@val+2
 23894  00F80C  C19A  F06D         	movff	_config+3,___xxtofl@val+3
 23895  00F810  0E00               	movlw	0
 23896  00F812  ECFA  F080         	call	___xxtofl
 23897  00F816  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 23898  00F81A  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 23899  00F81E  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 23900  00F822  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 23901  00F826  EC9E  F06A         	call	___fldiv	;wreg free
 23902  00F82A  C078  F0A4         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23903  00F82E  C079  F0A5         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23904  00F832  C07A  F0A6         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23905  00F836  C07B  F0A7         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 23906                           
 23907                           ;motor.c: 944: divide_position_float += 0.5;
 23908  00F83A  C0A4  F07C         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 23909  00F83E  C0A5  F07D         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 23910  00F842  C0A6  F07E         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 23911  00F846  C0A7  F07F         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 23912  00F84A  0E00               	movlw	0
 23913  00F84C  0100               	movlb	0	; () banked
 23914  00F84E  6F80               	movwf	___fladd@a& (0+255),b
 23915  00F850  0E00               	movlw	0
 23916  00F852  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23917  00F854  0E00               	movlw	0
 23918  00F856  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23919  00F858  0E3F               	movlw	63
 23920  00F85A  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23921  00F85C  EC1F  F066         	call	___fladd	;wreg free
 23922  00F860  C07C  F0A4         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 23923  00F864  C07D  F0A5         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 23924  00F868  C07E  F0A6         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 23925  00F86C  C07F  F0A7         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 23926                           
 23927                           ;motor.c: 945: nearest_divide_position = (int16_t) divide_position_float;
 23928  00F870  C0A4  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 23929  00F874  C0A5  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 23930  00F878  C0A6  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 23931  00F87C  C0A7  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 23932  00F880  EC93  F091         	call	___fltol	;wreg free
 23933  00F884  C060  F0A2         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 23934  00F888  C061  F0A3         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 23935                           
 23936                           ;motor.c: 948: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 23937  00F88C  C0A2  F091         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 23938  00F890  C0A3  F092         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 23939  00F894  ECFE  F08D         	call	__step_position_from_divide_position	;wreg free
 23940  00F898  C091  F09E         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 23941  00F89C  C092  F09F         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 23942  00F8A0  C093  F0A0         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 23943  00F8A4  C094  F0A1         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 23944                           
 23945                           ;motor.c: 951: os.divide_position = nearest_divide_position;
 23946  00F8A8  C0A2  F17D         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+23	;volatile
 23947  00F8AC  C0A3  F17E         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+24	;volatile
 23948                           
 23949                           ;motor.c: 952: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, nearest_position_in_steps, 0xF
      +                          FFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23950  00F8B0  C09E  F092         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_goto_steps@position
 23951  00F8B4  C09F  F093         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_goto_steps@positio
      +                          n+1
 23952  00F8B8  C0A0  F094         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_goto_steps@positio
      +                          n+2
 23953  00F8BC  C0A1  F095         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_goto_steps@positio
      +                          n+3
 23954  00F8C0  0EFF               	movlw	255
 23955  00F8C2  0100               	movlb	0	; () banked
 23956  00F8C4  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23957  00F8C6  6996               	setf	motor_goto_steps@speed& (0+255),b
 23958  00F8C8  0E00               	movlw	0
 23959  00F8CA  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23960  00F8CC  0E00               	movlw	0
 23961  00F8CE  EC4B  F09B         	call	_motor_goto_steps
 23962  00F8D2  0012               	return		;funcret
 23963  00F8D4                     __end_of_motor_divide_jump_to_nearest:
 23964                           	opt stack 0
 23965                           tblptru	equ	0xFF8
 23966                           tblptrh	equ	0xFF7
 23967                           tblptrl	equ	0xFF6
 23968                           tablat	equ	0xFF5
 23969                           prodh	equ	0xFF4
 23970                           prodl	equ	0xFF3
 23971                           intcon	equ	0xFF2
 23972                           postinc0	equ	0xFEE
 23973                           wreg	equ	0xFE8
 23974                           indf1	equ	0xFE7
 23975                           postinc1	equ	0xFE6
 23976                           postdec1	equ	0xFE5
 23977                           plusw1	equ	0xFE3
 23978                           fsr1h	equ	0xFE2
 23979                           fsr1l	equ	0xFE1
 23980                           indf2	equ	0xFDF
 23981                           postinc2	equ	0xFDE
 23982                           postdec2	equ	0xFDD
 23983                           plusw2	equ	0xFDB
 23984                           fsr2h	equ	0xFDA
 23985                           fsr2l	equ	0xFD9
 23986                           status	equ	0xFD8
 23987                           
 23988 ;; *************** function _motor_divide_jump *****************
 23989 ;; Defined at:
 23990 ;;		line 904 in file "motor.c"
 23991 ;; Parameters:    Size  Location     Type
 23992 ;;		None
 23993 ;; Auto vars:     Size  Location     Type
 23994 ;;  target_posit    4   63[BANK0 ] unsigned long 
 23995 ;;  target_divid    2   67[BANK0 ] int 
 23996 ;; Return value:  Size  Location     Type
 23997 ;;                  1    wreg      void 
 23998 ;; Registers used:
 23999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24000 ;; Tracked objects:
 24001 ;;		On entry : 0/0
 24002 ;;		On exit  : 0/0
 24003 ;;		Unchanged: 0/0
 24004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24006 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24008 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24009 ;;Total ram usage:        7 bytes
 24010 ;; Hardware stack levels used:    1
 24011 ;; Hardware stack levels required when called:   14
 24012 ;; This function calls:
 24013 ;;		__step_position_from_divide_position
 24014 ;;		_motor_goto_steps
 24015 ;; This function is called by:
 24016 ;;		_encoder_statemachine
 24017 ;; This function uses a non-reentrant model
 24018 ;;
 24019                           
 24020                           	psect	text96
 24021  012E88                     __ptext96:
 24022                           	opt stack 0
 24023  012E88                     _motor_divide_jump:
 24024                           	opt stack 15
 24025                           
 24026                           ;motor.c: 906: int16_t target_divide_position;;motor.c: 907: uint32_t target_position_in
      +                          _steps;;motor.c: 910: if(os.divide_jump_size>0)
 24027                           
 24028                           ;incstack = 0
 24029  012E88  0101               	movlb	1	; () banked
 24030  012E8A  BF80               	btfsc	(_os+26)& (0+255),7,b	;volatile
 24031  012E8C  D023               	goto	l2616
 24032  012E8E  5180               	movf	(_os+26)& (0+255),w,b	;volatile
 24033  012E90  E103               	bnz	u17130
 24034  012E92  057F               	decf	(_os+25)& (0+255),w,b	;volatile
 24035  012E94  A0D8               	btfss	status,0,c
 24036  012E96  D01E               	goto	l2616
 24037  012E98                     u17130:
 24038                           
 24039                           ; BSR set to: 1
 24040                           ;motor.c: 911: {;motor.c: 912: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 24041  012E98  517F               	movf	(_os+25)& (0+255),w,b	;volatile
 24042  012E9A  257D               	addwf	(_os+23)& (0+255),w,b	;volatile
 24043  012E9C  0100               	movlb	0	; () banked
 24044  012E9E  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24045  012EA0  0101               	movlb	1	; () banked
 24046  012EA2  5180               	movf	(_os+26)& (0+255),w,b	;volatile
 24047  012EA4  217E               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24048  012EA6  0100               	movlb	0	; () banked
 24049  012EA8  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24050                           
 24051                           ;motor.c: 913: if(target_divide_position>=os.division)
 24052  012EAA  0101               	movlb	1	; () banked
 24053  012EAC  517A               	movf	(_os+20)& (0+255),w,b	;volatile
 24054  012EAE  0100               	movlb	0	; () banked
 24055  012EB0  5DA3               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 24056  012EB2  51A4               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 24057  012EB4  0A80               	xorlw	128
 24058  012EB6  6F9E               	movwf	??_motor_divide_jump& (0+255),b
 24059  012EB8  0101               	movlb	1	; () banked
 24060  012EBA  517B               	movf	(_os+21)& (0+255),w,b	;volatile
 24061  012EBC  0A80               	xorlw	128
 24062  012EBE  0100               	movlb	0	; () banked
 24063  012EC0  599E               	subwfb	??_motor_divide_jump& (0+255),w,b
 24064  012EC2  A0D8               	btfss	status,0,c
 24065  012EC4  D019               	goto	l2619
 24066                           
 24067                           ; BSR set to: 0
 24068                           ;motor.c: 914: {;motor.c: 915: target_divide_position -= os.division;
 24069  012EC6  EE21  F07A         	lfsr	2,_os+20	;volatile
 24070  012ECA  50DE               	movf	postinc2,w,c
 24071  012ECC  5FA3               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24072  012ECE  50DD               	movf	postdec2,w,c
 24073  012ED0  5BA4               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24074                           
 24075                           ; BSR set to: 0
 24076                           ;motor.c: 916: };motor.c: 917: }
 24077  012ED2  D012               	goto	l2619
 24078  012ED4                     l2616:
 24079                           
 24080                           ;motor.c: 918: else;motor.c: 919: {;motor.c: 920: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 24081                           
 24082                           ; BSR set to: 0
 24083  012ED4  0101               	movlb	1	; () banked
 24084  012ED6  517F               	movf	(_os+25)& (0+255),w,b	;volatile
 24085  012ED8  257D               	addwf	(_os+23)& (0+255),w,b	;volatile
 24086  012EDA  0100               	movlb	0	; () banked
 24087  012EDC  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24088  012EDE  0101               	movlb	1	; () banked
 24089  012EE0  5180               	movf	(_os+26)& (0+255),w,b	;volatile
 24090  012EE2  217E               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24091  012EE4  0100               	movlb	0	; () banked
 24092  012EE6  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24093                           
 24094                           ;motor.c: 921: if(target_divide_position<0)
 24095  012EE8  AFA4               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 24096  012EEA  D006               	goto	l2619
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;motor.c: 922: {;motor.c: 923: target_divide_position += os.division;
 24100  012EEC  EE21  F07A         	lfsr	2,_os+20	;volatile
 24101  012EF0  50DE               	movf	postinc2,w,c
 24102  012EF2  27A3               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24103  012EF4  50DD               	movf	postdec2,w,c
 24104  012EF6  23A4               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24105  012EF8                     l2619:
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;motor.c: 924: };motor.c: 925: };motor.c: 928: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 24109                           
 24110                           ; BSR set to: 0
 24111                           
 24112                           ; BSR set to: 0
 24113  012EF8  C0A3  F091         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 24114  012EFC  C0A4  F092         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 24115  012F00  ECFE  F08D         	call	__step_position_from_divide_position	;wreg free
 24116  012F04  C091  F09F         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 24117  012F08  C092  F0A0         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 24118  012F0C  C093  F0A1         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 24119  012F10  C094  F0A2         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 24120                           
 24121                           ;motor.c: 931: os.divide_position = target_divide_position;
 24122  012F14  C0A3  F17D         	movff	motor_divide_jump@target_divide_position,_os+23	;volatile
 24123  012F18  C0A4  F17E         	movff	motor_divide_jump@target_divide_position+1,_os+24	;volatile
 24124                           
 24125                           ;motor.c: 932: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, target_position_in_steps, 0xFF
      +                          FF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24126  012F1C  C09F  F092         	movff	motor_divide_jump@target_position_in_steps,motor_goto_steps@position
 24127  012F20  C0A0  F093         	movff	motor_divide_jump@target_position_in_steps+1,motor_goto_steps@position+1
 24128  012F24  C0A1  F094         	movff	motor_divide_jump@target_position_in_steps+2,motor_goto_steps@position+2
 24129  012F28  C0A2  F095         	movff	motor_divide_jump@target_position_in_steps+3,motor_goto_steps@position+3
 24130  012F2C  0EFF               	movlw	255
 24131  012F2E  0100               	movlb	0	; () banked
 24132  012F30  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24133  012F32  6996               	setf	motor_goto_steps@speed& (0+255),b
 24134  012F34  0E00               	movlw	0
 24135  012F36  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24136  012F38  0E00               	movlw	0
 24137  012F3A  EC4B  F09B         	call	_motor_goto_steps
 24138  012F3E  0012               	return		;funcret
 24139  012F40                     __end_of_motor_divide_jump:
 24140                           	opt stack 0
 24141                           tblptru	equ	0xFF8
 24142                           tblptrh	equ	0xFF7
 24143                           tblptrl	equ	0xFF6
 24144                           tablat	equ	0xFF5
 24145                           prodh	equ	0xFF4
 24146                           prodl	equ	0xFF3
 24147                           intcon	equ	0xFF2
 24148                           postinc0	equ	0xFEE
 24149                           wreg	equ	0xFE8
 24150                           indf1	equ	0xFE7
 24151                           postinc1	equ	0xFE6
 24152                           postdec1	equ	0xFE5
 24153                           plusw1	equ	0xFE3
 24154                           fsr1h	equ	0xFE2
 24155                           fsr1l	equ	0xFE1
 24156                           indf2	equ	0xFDF
 24157                           postinc2	equ	0xFDE
 24158                           postdec2	equ	0xFDD
 24159                           plusw2	equ	0xFDB
 24160                           fsr2h	equ	0xFDA
 24161                           fsr2l	equ	0xFD9
 24162                           status	equ	0xFD8
 24163                           
 24164 ;; *************** function __step_position_from_divide_position *****************
 24165 ;; Defined at:
 24166 ;;		line 581 in file "motor.c"
 24167 ;; Parameters:    Size  Location     Type
 24168 ;;  divide_posit    2   49[BANK0 ] int 
 24169 ;; Auto vars:     Size  Location     Type
 24170 ;;  target_posit    4   53[BANK0 ] float 
 24171 ;; Return value:  Size  Location     Type
 24172 ;;                  4   49[BANK0 ] unsigned long 
 24173 ;; Registers used:
 24174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24175 ;; Tracked objects:
 24176 ;;		On entry : 0/0
 24177 ;;		On exit  : 0/0
 24178 ;;		Unchanged: 0/0
 24179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24181 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24183 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24184 ;;Total ram usage:        8 bytes
 24185 ;; Hardware stack levels used:    1
 24186 ;; Hardware stack levels required when called:   11
 24187 ;; This function calls:
 24188 ;;		___fldiv
 24189 ;;		___flmul
 24190 ;;		___fltol
 24191 ;;		___xxtofl
 24192 ;; This function is called by:
 24193 ;;		_motor_divide_jump
 24194 ;;		_motor_divide_jump_to_nearest
 24195 ;; This function uses a non-reentrant model
 24196 ;;
 24197                           
 24198                           	psect	text97
 24199  011BFC                     __ptext97:
 24200                           	opt stack 0
 24201  011BFC                     __step_position_from_divide_position:
 24202                           	opt stack 17
 24203                           
 24204                           ;motor.c: 583: float target_position;;motor.c: 586: target_position = (float) config.ful
      +                          l_circle_in_steps;
 24205                           
 24206                           ;incstack = 0
 24207  011BFC  C197  F06A         	movff	_config,___xxtofl@val
 24208  011C00  C198  F06B         	movff	_config+1,___xxtofl@val+1
 24209  011C04  C199  F06C         	movff	_config+2,___xxtofl@val+2
 24210  011C08  C19A  F06D         	movff	_config+3,___xxtofl@val+3
 24211  011C0C  0E00               	movlw	0
 24212  011C0E  ECFA  F080         	call	___xxtofl
 24213  011C12  C06A  F095         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 24214  011C16  C06B  F096         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 24215  011C1A  C06C  F097         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 24216  011C1E  C06D  F098         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 24217                           
 24218                           ;motor.c: 587: target_position *= (float) divide_position;
 24219  011C22  C095  F078         	movff	__step_position_from_divide_position@target_position,___flmul@b
 24220  011C26  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 24221  011C2A  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 24222  011C2E  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 24223  011C32  C091  F06A         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 24224  011C36  C092  F06B         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 24225  011C3A  0100               	movlb	0	; () banked
 24226  011C3C  0E00               	movlw	0
 24227  011C3E  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24228  011C40  0EFF               	movlw	-1
 24229  011C42  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24230  011C44  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24231  011C46  0E01               	movlw	1
 24232  011C48  ECFA  F080         	call	___xxtofl
 24233  011C4C  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24234  011C50  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24235  011C54  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24236  011C58  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24237  011C5C  EC76  F064         	call	___flmul	;wreg free
 24238  011C60  C078  F095         	movff	?___flmul,__step_position_from_divide_position@target_position
 24239  011C64  C079  F096         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 24240  011C68  C07A  F097         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 24241  011C6C  C07B  F098         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 24242                           
 24243                           ;motor.c: 588: target_position /= (float) os.division;
 24244  011C70  C095  F078         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 24245  011C74  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 24246  011C78  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 24247  011C7C  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 24248  011C80  EE21  F07A         	lfsr	2,_os+20	;volatile
 24249  011C84  CFDE F06A          	movff	postinc2,___xxtofl@val
 24250  011C88  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24251  011C8C  0100               	movlb	0	; () banked
 24252  011C8E  0E00               	movlw	0
 24253  011C90  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24254  011C92  0EFF               	movlw	-1
 24255  011C94  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24256  011C96  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24257  011C98  0E01               	movlw	1
 24258  011C9A  ECFA  F080         	call	___xxtofl
 24259  011C9E  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24260  011CA2  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24261  011CA6  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24262  011CAA  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24263  011CAE  EC9E  F06A         	call	___fldiv	;wreg free
 24264  011CB2  C078  F095         	movff	?___fldiv,__step_position_from_divide_position@target_position
 24265  011CB6  C079  F096         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 24266  011CBA  C07A  F097         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 24267  011CBE  C07B  F098         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 24268                           
 24269                           ;motor.c: 590: return (uint32_t) target_position;
 24270  011CC2  C095  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 24271  011CC6  C096  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 24272  011CCA  C097  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 24273  011CCE  C098  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 24274  011CD2  EC93  F091         	call	___fltol	;wreg free
 24275  011CD6  C060  F091         	movff	?___fltol,?__step_position_from_divide_position
 24276  011CDA  C061  F092         	movff	?___fltol+1,?__step_position_from_divide_position+1
 24277  011CDE  C062  F093         	movff	?___fltol+2,?__step_position_from_divide_position+2
 24278  011CE2  C063  F094         	movff	?___fltol+3,?__step_position_from_divide_position+3
 24279  011CE6  0012               	return	
 24280  011CE8                     __end_of__step_position_from_divide_position:
 24281                           	opt stack 0
 24282                           tblptru	equ	0xFF8
 24283                           tblptrh	equ	0xFF7
 24284                           tblptrl	equ	0xFF6
 24285                           tablat	equ	0xFF5
 24286                           prodh	equ	0xFF4
 24287                           prodl	equ	0xFF3
 24288                           intcon	equ	0xFF2
 24289                           postinc0	equ	0xFEE
 24290                           wreg	equ	0xFE8
 24291                           indf1	equ	0xFE7
 24292                           postinc1	equ	0xFE6
 24293                           postdec1	equ	0xFE5
 24294                           plusw1	equ	0xFE3
 24295                           fsr1h	equ	0xFE2
 24296                           fsr1l	equ	0xFE1
 24297                           indf2	equ	0xFDF
 24298                           postinc2	equ	0xFDE
 24299                           postdec2	equ	0xFDD
 24300                           plusw2	equ	0xFDB
 24301                           fsr2h	equ	0xFDA
 24302                           fsr2l	equ	0xFD9
 24303                           status	equ	0xFD8
 24304                           
 24305 ;; *************** function _motor_decrease_manual_speed *****************
 24306 ;; Defined at:
 24307 ;;		line 874 in file "motor.c"
 24308 ;; Parameters:    Size  Location     Type
 24309 ;;		None
 24310 ;; Auto vars:     Size  Location     Type
 24311 ;;		None
 24312 ;; Return value:  Size  Location     Type
 24313 ;;                  1    wreg      void 
 24314 ;; Registers used:
 24315 ;;		wreg, status,2, status,0, cstack
 24316 ;; Tracked objects:
 24317 ;;		On entry : 0/0
 24318 ;;		On exit  : 0/0
 24319 ;;		Unchanged: 0/0
 24320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24325 ;;Total ram usage:        0 bytes
 24326 ;; Hardware stack levels used:    1
 24327 ;; Hardware stack levels required when called:   12
 24328 ;; This function calls:
 24329 ;;		_motor_set_manual_speed
 24330 ;; This function is called by:
 24331 ;;		_encoder_statemachine
 24332 ;; This function uses a non-reentrant model
 24333 ;;
 24334                           
 24335                           	psect	text98
 24336  015BF4                     __ptext98:
 24337                           	opt stack 0
 24338  015BF4                     _motor_decrease_manual_speed:
 24339                           	opt stack 17
 24340                           
 24341                           ;motor.c: 876: if(os.manual_speed>0)
 24342                           
 24343                           ;incstack = 0
 24344  015BF4  0101               	movlb	1	; () banked
 24345  015BF6  518A               	movf	(_os+36)& (0+255),w,b	;volatile
 24346  015BF8  118B               	iorwf	(_os+37)& (0+255),w,b	;volatile
 24347  015BFA  B4D8               	btfsc	status,2,c
 24348  015BFC  0012               	return	
 24349                           
 24350                           ; BSR set to: 1
 24351                           ;motor.c: 877: {;motor.c: 878: motor_set_manual_speed(os.manual_speed-1);
 24352  015BFE  0EFF               	movlw	255
 24353  015C00  258A               	addwf	(_os+36)& (0+255),w,b	;volatile
 24354  015C02  0100               	movlb	0	; () banked
 24355  015C04  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 24356  015C06  0EFF               	movlw	255
 24357  015C08  0101               	movlb	1	; () banked
 24358  015C0A  218B               	addwfc	(_os+37)& (0+255),w,b	;volatile
 24359  015C0C  0100               	movlb	0	; () banked
 24360  015C0E  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 24361  015C10  ECB1  F0A8         	call	_motor_set_manual_speed	;wreg free
 24362  015C14  0012               	return	
 24363  015C16                     __end_of_motor_decrease_manual_speed:
 24364                           	opt stack 0
 24365                           tblptru	equ	0xFF8
 24366                           tblptrh	equ	0xFF7
 24367                           tblptrl	equ	0xFF6
 24368                           tablat	equ	0xFF5
 24369                           prodh	equ	0xFF4
 24370                           prodl	equ	0xFF3
 24371                           intcon	equ	0xFF2
 24372                           postinc0	equ	0xFEE
 24373                           wreg	equ	0xFE8
 24374                           indf1	equ	0xFE7
 24375                           postinc1	equ	0xFE6
 24376                           postdec1	equ	0xFE5
 24377                           plusw1	equ	0xFE3
 24378                           fsr1h	equ	0xFE2
 24379                           fsr1l	equ	0xFE1
 24380                           indf2	equ	0xFDF
 24381                           postinc2	equ	0xFDE
 24382                           postdec2	equ	0xFDD
 24383                           plusw2	equ	0xFDB
 24384                           fsr2h	equ	0xFDA
 24385                           fsr2l	equ	0xFD9
 24386                           status	equ	0xFD8
 24387                           
 24388 ;; *************** function _motor_arc_move *****************
 24389 ;; Defined at:
 24390 ;;		line 955 in file "motor.c"
 24391 ;; Parameters:    Size  Location     Type
 24392 ;;  direction       1    wreg     enum E6622
 24393 ;; Auto vars:     Size  Location     Type
 24394 ;;  direction       1   52[BANK0 ] enum E6622
 24395 ;;  arc_in_steps    4   53[BANK0 ] float 
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1    wreg      void 
 24398 ;; Registers used:
 24399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24406 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24408 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24409 ;;Total ram usage:        5 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:   14
 24412 ;; This function calls:
 24413 ;;		___fldiv
 24414 ;;		___flmul
 24415 ;;		___fltol
 24416 ;;		___xxtofl
 24417 ;;		_motor_move_steps
 24418 ;; This function is called by:
 24419 ;;		_encoder_statemachine
 24420 ;; This function uses a non-reentrant model
 24421 ;;
 24422                           
 24423                           	psect	text99
 24424  011FA2                     __ptext99:
 24425                           	opt stack 0
 24426  011FA2                     _motor_arc_move:
 24427                           	opt stack 15
 24428                           
 24429                           ;incstack = 0
 24430                           ;motor_arc_move@direction stored from wreg
 24431  011FA2  0100               	movlb	0	; () banked
 24432  011FA4  6F94               	movwf	motor_arc_move@direction& (0+255),b
 24433                           
 24434                           ;motor.c: 957: float arc_in_steps;;motor.c: 960: arc_in_steps = (float) os.arc_size;
 24435  011FA6  C183  F06A         	movff	_os+29,___xxtofl@val	;volatile
 24436  011FAA  C184  F06B         	movff	_os+30,___xxtofl@val+1	;volatile
 24437  011FAE  C185  F06C         	movff	_os+31,___xxtofl@val+2	;volatile
 24438  011FB2  C186  F06D         	movff	_os+32,___xxtofl@val+3	;volatile
 24439  011FB6  0E01               	movlw	1
 24440  011FB8  ECFA  F080         	call	___xxtofl
 24441  011FBC  C06A  F095         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 24442  011FC0  C06B  F096         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 24443  011FC4  C06C  F097         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24444  011FC8  C06D  F098         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24445                           
 24446                           ;motor.c: 961: arc_in_steps *= (float) config.full_circle_in_steps;
 24447  011FCC  C095  F078         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24448  011FD0  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24449  011FD4  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24450  011FD8  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24451  011FDC  C197  F06A         	movff	_config,___xxtofl@val
 24452  011FE0  C198  F06B         	movff	_config+1,___xxtofl@val+1
 24453  011FE4  C199  F06C         	movff	_config+2,___xxtofl@val+2
 24454  011FE8  C19A  F06D         	movff	_config+3,___xxtofl@val+3
 24455  011FEC  0E00               	movlw	0
 24456  011FEE  ECFA  F080         	call	___xxtofl
 24457  011FF2  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24458  011FF6  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24459  011FFA  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24460  011FFE  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24461  012002  EC76  F064         	call	___flmul	;wreg free
 24462  012006  C078  F095         	movff	?___flmul,motor_arc_move@arc_in_steps
 24463  01200A  C079  F096         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24464  01200E  C07A  F097         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24465  012012  C07B  F098         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24466                           
 24467                           ;motor.c: 962: arc_in_steps /= (float) 36000.0;
 24468  012016  C095  F078         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24469  01201A  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24470  01201E  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24471  012022  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24472  012026  0E00               	movlw	0
 24473  012028  0100               	movlb	0	; () banked
 24474  01202A  6F7C               	movwf	___fldiv@a& (0+255),b
 24475  01202C  0EA0               	movlw	160
 24476  01202E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 24477  012030  0E0C               	movlw	12
 24478  012032  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 24479  012034  0E47               	movlw	71
 24480  012036  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 24481  012038  EC9E  F06A         	call	___fldiv	;wreg free
 24482  01203C  C078  F095         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24483  012040  C079  F096         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24484  012044  C07A  F097         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24485  012048  C07B  F098         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24486                           
 24487                           ;motor.c: 965: motor_move_steps(direction, (uint32_t) arc_in_steps, os.arc_speed, MOTOR_
      +                          OVERSHOOT_NO_OVERSHOOT);
 24488  01204C  C095  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24489  012050  C096  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24490  012054  C097  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24491  012058  C098  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24492  01205C  EC93  F091         	call	___fltol	;wreg free
 24493  012060  C060  F08C         	movff	?___fltol,motor_move_steps@distance
 24494  012064  C061  F08D         	movff	?___fltol+1,motor_move_steps@distance+1
 24495  012068  C062  F08E         	movff	?___fltol+2,motor_move_steps@distance+2
 24496  01206C  C063  F08F         	movff	?___fltol+3,motor_move_steps@distance+3
 24497  012070  C187  F090         	movff	_os+33,motor_move_steps@speed	;volatile
 24498  012074  C188  F091         	movff	_os+34,motor_move_steps@speed+1	;volatile
 24499  012078  0E01               	movlw	1
 24500  01207A  0100               	movlb	0	; () banked
 24501  01207C  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 24502  01207E  5194               	movf	motor_arc_move@direction& (0+255),w,b
 24503  012080  ECAA  F0AC         	call	_motor_move_steps
 24504  012084  0012               	return		;funcret
 24505  012086                     __end_of_motor_arc_move:
 24506                           	opt stack 0
 24507                           tblptru	equ	0xFF8
 24508                           tblptrh	equ	0xFF7
 24509                           tblptrl	equ	0xFF6
 24510                           tablat	equ	0xFF5
 24511                           prodh	equ	0xFF4
 24512                           prodl	equ	0xFF3
 24513                           intcon	equ	0xFF2
 24514                           postinc0	equ	0xFEE
 24515                           wreg	equ	0xFE8
 24516                           indf1	equ	0xFE7
 24517                           postinc1	equ	0xFE6
 24518                           postdec1	equ	0xFE5
 24519                           plusw1	equ	0xFE3
 24520                           fsr1h	equ	0xFE2
 24521                           fsr1l	equ	0xFE1
 24522                           indf2	equ	0xFDF
 24523                           postinc2	equ	0xFDE
 24524                           postdec2	equ	0xFDD
 24525                           plusw2	equ	0xFDB
 24526                           fsr2h	equ	0xFDA
 24527                           fsr2l	equ	0xFD9
 24528                           status	equ	0xFD8
 24529                           
 24530 ;; *************** function __encoder_next_setup_stepsize *****************
 24531 ;; Defined at:
 24532 ;;		line 24 in file "encoder.c"
 24533 ;; Parameters:    Size  Location     Type
 24534 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24535 ;; Auto vars:     Size  Location     Type
 24536 ;;		None
 24537 ;; Return value:  Size  Location     Type
 24538 ;;                  2    0[BANK0 ] unsigned int 
 24539 ;; Registers used:
 24540 ;;		wreg, status,2, status,0
 24541 ;; Tracked objects:
 24542 ;;		On entry : 0/0
 24543 ;;		On exit  : 0/0
 24544 ;;		Unchanged: 0/0
 24545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24548 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24549 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24550 ;;Total ram usage:        4 bytes
 24551 ;; Hardware stack levels used:    1
 24552 ;; Hardware stack levels required when called:   10
 24553 ;; This function calls:
 24554 ;;		Nothing
 24555 ;; This function is called by:
 24556 ;;		_encoder_statemachine
 24557 ;; This function uses a non-reentrant model
 24558 ;;
 24559                           
 24560                           	psect	text100
 24561  0142EE                     __ptext100:
 24562                           	opt stack 0
 24563  0142EE                     __encoder_next_setup_stepsize:
 24564                           	opt stack 19
 24565                           
 24566                           ;encoder.c: 26: switch(old_stepsize)
 24567                           
 24568                           ;incstack = 0
 24569  0142EE  D01A               	goto	l2703
 24570  0142F0                     
 24571                           ;encoder.c: 29: return 100;
 24572  0142F0  0E00               	movlw	0
 24573  0142F2  0100               	movlb	0	; () banked
 24574  0142F4  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24575  0142F6  0E64               	movlw	100
 24576  0142F8  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24577                           
 24578                           ; BSR set to: 0
 24579  0142FA  0012               	return	
 24580  0142FC                     
 24581                           ; BSR set to: 0
 24582                           ;encoder.c: 31: return 10;
 24583                           
 24584                           ; BSR set to: 0
 24585  0142FC  0E00               	movlw	0
 24586  0142FE  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24587  014300  0E0A               	movlw	10
 24588  014302  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24589                           
 24590                           ; BSR set to: 0
 24591  014304  0012               	return	
 24592  014306                     
 24593                           ; BSR set to: 0
 24594                           ;encoder.c: 33: return 1;
 24595                           
 24596                           ; BSR set to: 0
 24597  014306  0E00               	movlw	0
 24598  014308  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24599  01430A  0E01               	movlw	1
 24600  01430C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24601                           
 24602                           ; BSR set to: 0
 24603  01430E  0012               	return	
 24604  014310                     
 24605                           ; BSR set to: 0
 24606                           ;encoder.c: 35: return 1000;
 24607                           
 24608                           ; BSR set to: 0
 24609  014310  0E03               	movlw	3
 24610  014312  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24611  014314  0EE8               	movlw	232
 24612  014316  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24613                           
 24614                           ; BSR set to: 0
 24615  014318  0012               	return	
 24616  01431A                     
 24617                           ; BSR set to: 0
 24618                           ;encoder.c: 37: return 100;
 24619                           
 24620                           ; BSR set to: 0
 24621  01431A  0E00               	movlw	0
 24622  01431C  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24623  01431E  0E64               	movlw	100
 24624  014320  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24625                           
 24626                           ; BSR set to: 0
 24627                           ;encoder.c: 38: }
 24628                           
 24629                           ; BSR set to: 0
 24630  014322  0012               	return	
 24631  014324                     l2703:
 24632                           
 24633                           ; BSR set to: 0
 24634  014324  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24635  014328  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24636                           
 24637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24638                           ; Switch size 1, requested type "space"
 24639                           ; Number of cases is 2, Range of values is 0 to 3
 24640                           ; switch strategies available:
 24641                           ; Name         Instructions Cycles
 24642                           ; simple_byte            7     4 (average)
 24643                           ;	Chosen strategy is simple_byte
 24644  01432C  0100               	movlb	0	; () banked
 24645  01432E  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24646  014330  0A00               	xorlw	0	; case 0
 24647  014332  B4D8               	btfsc	status,2,c
 24648  014334  D004               	goto	l20022
 24649  014336  0A03               	xorlw	3	; case 3
 24650  014338  B4D8               	btfsc	status,2,c
 24651  01433A  D00C               	goto	l20024
 24652  01433C  D7EE               	goto	l2709
 24653  01433E                     l20022:
 24654                           
 24655                           ; BSR set to: 0
 24656                           ; Switch size 1, requested type "space"
 24657                           ; Number of cases is 3, Range of values is 1 to 100
 24658                           ; switch strategies available:
 24659                           ; Name         Instructions Cycles
 24660                           ; simple_byte           10     6 (average)
 24661                           ;	Chosen strategy is simple_byte
 24662  01433E  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24663  014340  0A01               	xorlw	1	; case 1
 24664  014342  B4D8               	btfsc	status,2,c
 24665  014344  D7E5               	goto	l2708
 24666  014346  0A0B               	xorlw	11	; case 10
 24667  014348  B4D8               	btfsc	status,2,c
 24668  01434A  D7DD               	goto	l2707
 24669  01434C  0A6E               	xorlw	110	; case 100
 24670  01434E  B4D8               	btfsc	status,2,c
 24671  014350  D7D5               	goto	l2706
 24672  014352  D7E3               	goto	l2709
 24673  014354                     l20024:
 24674                           
 24675                           ; BSR set to: 0
 24676                           ; Switch size 1, requested type "space"
 24677                           ; Number of cases is 1, Range of values is 232 to 232
 24678                           ; switch strategies available:
 24679                           ; Name         Instructions Cycles
 24680                           ; simple_byte            4     3 (average)
 24681                           ;	Chosen strategy is simple_byte
 24682  014354  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24683  014356  0AE8               	xorlw	232	; case 232
 24684  014358  B4D8               	btfsc	status,2,c
 24685  01435A  D7CA               	goto	l2704
 24686  01435C  D7DE               	goto	l2709
 24687  01435E                     __end_of__encoder_next_setup_stepsize:
 24688                           	opt stack 0
 24689                           tblptru	equ	0xFF8
 24690                           tblptrh	equ	0xFF7
 24691                           tblptrl	equ	0xFF6
 24692                           tablat	equ	0xFF5
 24693                           prodh	equ	0xFF4
 24694                           prodl	equ	0xFF3
 24695                           intcon	equ	0xFF2
 24696                           postinc0	equ	0xFEE
 24697                           wreg	equ	0xFE8
 24698                           indf1	equ	0xFE7
 24699                           postinc1	equ	0xFE6
 24700                           postdec1	equ	0xFE5
 24701                           plusw1	equ	0xFE3
 24702                           fsr1h	equ	0xFE2
 24703                           fsr1l	equ	0xFE1
 24704                           indf2	equ	0xFDF
 24705                           postinc2	equ	0xFDE
 24706                           postdec2	equ	0xFDD
 24707                           plusw2	equ	0xFDB
 24708                           fsr2h	equ	0xFDA
 24709                           fsr2l	equ	0xFD9
 24710                           status	equ	0xFD8
 24711                           
 24712 ;; *************** function __encoder_next_divide_step_size *****************
 24713 ;; Defined at:
 24714 ;;		line 41 in file "encoder.c"
 24715 ;; Parameters:    Size  Location     Type
 24716 ;;  old_stepsize    1    wreg     unsigned char 
 24717 ;; Auto vars:     Size  Location     Type
 24718 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24719 ;; Return value:  Size  Location     Type
 24720 ;;                  1    wreg      unsigned char 
 24721 ;; Registers used:
 24722 ;;		wreg, status,2, status,0
 24723 ;; Tracked objects:
 24724 ;;		On entry : 0/0
 24725 ;;		On exit  : 0/0
 24726 ;;		Unchanged: 0/0
 24727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24731 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24732 ;;Total ram usage:        1 bytes
 24733 ;; Hardware stack levels used:    1
 24734 ;; Hardware stack levels required when called:   10
 24735 ;; This function calls:
 24736 ;;		Nothing
 24737 ;; This function is called by:
 24738 ;;		_encoder_statemachine
 24739 ;; This function uses a non-reentrant model
 24740 ;;
 24741                           
 24742                           	psect	text101
 24743  0158CA                     __ptext101:
 24744                           	opt stack 0
 24745  0158CA                     __encoder_next_divide_step_size:
 24746                           	opt stack 19
 24747                           
 24748                           ; BSR set to: 0
 24749                           ;incstack = 0
 24750                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24751  0158CA  0100               	movlb	0	; () banked
 24752  0158CC  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24753                           
 24754                           ;encoder.c: 43: switch(old_stepsize)
 24755  0158CE  D008               	goto	l2713
 24756  0158D0                     
 24757                           ;encoder.c: 46: return 10;
 24758  0158D0  0E0A               	movlw	10
 24759  0158D2  0012               	return	
 24760  0158D4                     
 24761                           ;encoder.c: 48: return 1;
 24762  0158D4  0E01               	movlw	1
 24763  0158D6  0012               	return	
 24764  0158D8                     
 24765                           ;encoder.c: 50: return 100;
 24766  0158D8  0E64               	movlw	100
 24767  0158DA  0012               	return	
 24768  0158DC                     
 24769                           ;encoder.c: 52: return 1;
 24770  0158DC  0E01               	movlw	1
 24771                           
 24772                           ;encoder.c: 53: }
 24773  0158DE  0012               	return	
 24774  0158E0                     l2713:
 24775  0158E0  0100               	movlb	0	; () banked
 24776  0158E2  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24777                           
 24778                           ; Switch size 1, requested type "space"
 24779                           ; Number of cases is 3, Range of values is 1 to 100
 24780                           ; switch strategies available:
 24781                           ; Name         Instructions Cycles
 24782                           ; simple_byte           10     6 (average)
 24783                           ;	Chosen strategy is simple_byte
 24784  0158E4  0A01               	xorlw	1	; case 1
 24785  0158E6  B4D8               	btfsc	status,2,c
 24786  0158E8  D7F7               	goto	l2717
 24787  0158EA  0A0B               	xorlw	11	; case 10
 24788  0158EC  B4D8               	btfsc	status,2,c
 24789  0158EE  D7F2               	goto	l2716
 24790  0158F0  0A6E               	xorlw	110	; case 100
 24791  0158F2  B4D8               	btfsc	status,2,c
 24792  0158F4  D7ED               	goto	l2714
 24793  0158F6  D7F2               	goto	l2718
 24794  0158F8                     __end_of__encoder_next_divide_step_size:
 24795                           	opt stack 0
 24796                           tblptru	equ	0xFF8
 24797                           tblptrh	equ	0xFF7
 24798                           tblptrl	equ	0xFF6
 24799                           tablat	equ	0xFF5
 24800                           prodh	equ	0xFF4
 24801                           prodl	equ	0xFF3
 24802                           intcon	equ	0xFF2
 24803                           postinc0	equ	0xFEE
 24804                           wreg	equ	0xFE8
 24805                           indf1	equ	0xFE7
 24806                           postinc1	equ	0xFE6
 24807                           postdec1	equ	0xFE5
 24808                           plusw1	equ	0xFE3
 24809                           fsr1h	equ	0xFE2
 24810                           fsr1l	equ	0xFE1
 24811                           indf2	equ	0xFDF
 24812                           postinc2	equ	0xFDE
 24813                           postdec2	equ	0xFDD
 24814                           plusw2	equ	0xFDB
 24815                           fsr2h	equ	0xFDA
 24816                           fsr2l	equ	0xFD9
 24817                           status	equ	0xFD8
 24818                           
 24819 ;; *************** function __encoder_next_arc_step_size *****************
 24820 ;; Defined at:
 24821 ;;		line 56 in file "encoder.c"
 24822 ;; Parameters:    Size  Location     Type
 24823 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24824 ;; Auto vars:     Size  Location     Type
 24825 ;;		None
 24826 ;; Return value:  Size  Location     Type
 24827 ;;                  2    0[BANK0 ] unsigned int 
 24828 ;; Registers used:
 24829 ;;		wreg, status,2, status,0
 24830 ;; Tracked objects:
 24831 ;;		On entry : 0/0
 24832 ;;		On exit  : 0/0
 24833 ;;		Unchanged: 0/0
 24834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24837 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24838 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24839 ;;Total ram usage:        4 bytes
 24840 ;; Hardware stack levels used:    1
 24841 ;; Hardware stack levels required when called:   10
 24842 ;; This function calls:
 24843 ;;		Nothing
 24844 ;; This function is called by:
 24845 ;;		_encoder_statemachine
 24846 ;; This function uses a non-reentrant model
 24847 ;;
 24848                           
 24849                           	psect	text102
 24850  01435E                     __ptext102:
 24851                           	opt stack 0
 24852  01435E                     __encoder_next_arc_step_size:
 24853                           	opt stack 19
 24854                           
 24855                           ;encoder.c: 58: switch(old_stepsize)
 24856                           
 24857                           ;incstack = 0
 24858  01435E  D01A               	goto	l2722
 24859  014360                     
 24860                           ;encoder.c: 61: return 100;
 24861  014360  0E00               	movlw	0
 24862  014362  0100               	movlb	0	; () banked
 24863  014364  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24864  014366  0E64               	movlw	100
 24865  014368  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24866                           
 24867                           ; BSR set to: 0
 24868  01436A  0012               	return	
 24869  01436C                     
 24870                           ; BSR set to: 0
 24871                           ;encoder.c: 63: return 10;
 24872                           
 24873                           ; BSR set to: 0
 24874  01436C  0E00               	movlw	0
 24875  01436E  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24876  014370  0E0A               	movlw	10
 24877  014372  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24878                           
 24879                           ; BSR set to: 0
 24880  014374  0012               	return	
 24881  014376                     
 24882                           ; BSR set to: 0
 24883                           ;encoder.c: 65: return 1;
 24884                           
 24885                           ; BSR set to: 0
 24886  014376  0E00               	movlw	0
 24887  014378  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24888  01437A  0E01               	movlw	1
 24889  01437C  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24890                           
 24891                           ; BSR set to: 0
 24892  01437E  0012               	return	
 24893  014380                     
 24894                           ; BSR set to: 0
 24895                           ;encoder.c: 67: return 1000;
 24896                           
 24897                           ; BSR set to: 0
 24898  014380  0E03               	movlw	3
 24899  014382  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24900  014384  0EE8               	movlw	232
 24901  014386  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24902                           
 24903                           ; BSR set to: 0
 24904  014388  0012               	return	
 24905  01438A                     
 24906                           ; BSR set to: 0
 24907                           ;encoder.c: 69: return 100;
 24908                           
 24909                           ; BSR set to: 0
 24910  01438A  0E00               	movlw	0
 24911  01438C  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24912  01438E  0E64               	movlw	100
 24913  014390  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24914                           
 24915                           ; BSR set to: 0
 24916                           ;encoder.c: 70: }
 24917                           
 24918                           ; BSR set to: 0
 24919  014392  0012               	return	
 24920  014394                     l2722:
 24921                           
 24922                           ; BSR set to: 0
 24923  014394  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 24924  014398  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 24925                           
 24926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24927                           ; Switch size 1, requested type "space"
 24928                           ; Number of cases is 2, Range of values is 0 to 3
 24929                           ; switch strategies available:
 24930                           ; Name         Instructions Cycles
 24931                           ; simple_byte            7     4 (average)
 24932                           ;	Chosen strategy is simple_byte
 24933  01439C  0100               	movlb	0	; () banked
 24934  01439E  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 24935  0143A0  0A00               	xorlw	0	; case 0
 24936  0143A2  B4D8               	btfsc	status,2,c
 24937  0143A4  D004               	goto	l20026
 24938  0143A6  0A03               	xorlw	3	; case 3
 24939  0143A8  B4D8               	btfsc	status,2,c
 24940  0143AA  D00C               	goto	l20028
 24941  0143AC  D7EE               	goto	l2728
 24942  0143AE                     l20026:
 24943                           
 24944                           ; BSR set to: 0
 24945                           ; Switch size 1, requested type "space"
 24946                           ; Number of cases is 3, Range of values is 1 to 100
 24947                           ; switch strategies available:
 24948                           ; Name         Instructions Cycles
 24949                           ; simple_byte           10     6 (average)
 24950                           ;	Chosen strategy is simple_byte
 24951  0143AE  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24952  0143B0  0A01               	xorlw	1	; case 1
 24953  0143B2  B4D8               	btfsc	status,2,c
 24954  0143B4  D7E5               	goto	l2727
 24955  0143B6  0A0B               	xorlw	11	; case 10
 24956  0143B8  B4D8               	btfsc	status,2,c
 24957  0143BA  D7DD               	goto	l2726
 24958  0143BC  0A6E               	xorlw	110	; case 100
 24959  0143BE  B4D8               	btfsc	status,2,c
 24960  0143C0  D7D5               	goto	l2725
 24961  0143C2  D7E3               	goto	l2728
 24962  0143C4                     l20028:
 24963                           
 24964                           ; BSR set to: 0
 24965                           ; Switch size 1, requested type "space"
 24966                           ; Number of cases is 1, Range of values is 232 to 232
 24967                           ; switch strategies available:
 24968                           ; Name         Instructions Cycles
 24969                           ; simple_byte            4     3 (average)
 24970                           ;	Chosen strategy is simple_byte
 24971  0143C4  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24972  0143C6  0AE8               	xorlw	232	; case 232
 24973  0143C8  B4D8               	btfsc	status,2,c
 24974  0143CA  D7CA               	goto	l2723
 24975  0143CC  D7DE               	goto	l2728
 24976  0143CE                     __end_of__encoder_next_arc_step_size:
 24977                           	opt stack 0
 24978                           tblptru	equ	0xFF8
 24979                           tblptrh	equ	0xFF7
 24980                           tblptrl	equ	0xFF6
 24981                           tablat	equ	0xFF5
 24982                           prodh	equ	0xFF4
 24983                           prodl	equ	0xFF3
 24984                           intcon	equ	0xFF2
 24985                           postinc0	equ	0xFEE
 24986                           wreg	equ	0xFE8
 24987                           indf1	equ	0xFE7
 24988                           postinc1	equ	0xFE6
 24989                           postdec1	equ	0xFE5
 24990                           plusw1	equ	0xFE3
 24991                           fsr1h	equ	0xFE2
 24992                           fsr1l	equ	0xFE1
 24993                           indf2	equ	0xFDF
 24994                           postinc2	equ	0xFDE
 24995                           postdec2	equ	0xFDD
 24996                           plusw2	equ	0xFDB
 24997                           fsr2h	equ	0xFDA
 24998                           fsr2l	equ	0xFD9
 24999                           status	equ	0xFD8
 25000                           
 25001 ;; *************** function __divide_jump_size_increment *****************
 25002 ;; Defined at:
 25003 ;;		line 73 in file "encoder.c"
 25004 ;; Parameters:    Size  Location     Type
 25005 ;;		None
 25006 ;; Auto vars:     Size  Location     Type
 25007 ;;		None
 25008 ;; Return value:  Size  Location     Type
 25009 ;;                  1    wreg      void 
 25010 ;; Registers used:
 25011 ;;		wreg, status,2, status,0
 25012 ;; Tracked objects:
 25013 ;;		On entry : 0/0
 25014 ;;		On exit  : 0/0
 25015 ;;		Unchanged: 0/0
 25016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25021 ;;Total ram usage:        1 bytes
 25022 ;; Hardware stack levels used:    1
 25023 ;; Hardware stack levels required when called:   10
 25024 ;; This function calls:
 25025 ;;		Nothing
 25026 ;; This function is called by:
 25027 ;;		_encoder_statemachine
 25028 ;; This function uses a non-reentrant model
 25029 ;;
 25030                           
 25031                           	psect	text103
 25032  0154C0                     __ptext103:
 25033                           	opt stack 0
 25034  0154C0                     __divide_jump_size_increment:
 25035                           	opt stack 19
 25036                           
 25037                           ;encoder.c: 75: ++os.divide_jump_size;
 25038                           
 25039                           ; BSR set to: 0
 25040                           ;incstack = 0
 25041  0154C0  0101               	movlb	1	; () banked
 25042  0154C2  4B7F               	infsnz	(_os+25)& (0+255),f,b	;volatile
 25043  0154C4  2B80               	incf	(_os+26)& (0+255),f,b	;volatile
 25044                           
 25045                           ; BSR set to: 1
 25046                           ;encoder.c: 76: if(os.divide_jump_size==0)
 25047  0154C6  517F               	movf	(_os+25)& (0+255),w,b	;volatile
 25048  0154C8  1180               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25049  0154CA  A4D8               	btfss	status,2,c
 25050  0154CC  D004               	goto	l2732
 25051                           
 25052                           ; BSR set to: 1
 25053                           ;encoder.c: 77: os.divide_jump_size = 1;
 25054  0154CE  0E00               	movlw	0
 25055  0154D0  6F80               	movwf	(_os+26)& (0+255),b	;volatile
 25056  0154D2  0E01               	movlw	1
 25057  0154D4  6F7F               	movwf	(_os+25)& (0+255),b	;volatile
 25058  0154D6                     l2732:
 25059                           
 25060                           ; BSR set to: 1
 25061                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 25062                           
 25063                           ; BSR set to: 1
 25064  0154D6  517A               	movf	(_os+20)& (0+255),w,b	;volatile
 25065  0154D8  5D7F               	subwf	(_os+25)& (0+255),w,b	;volatile
 25066  0154DA  5180               	movf	(_os+26)& (0+255),w,b	;volatile
 25067  0154DC  0A80               	xorlw	128
 25068  0154DE  0100               	movlb	0	; () banked
 25069  0154E0  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 25070  0154E2  0101               	movlb	1	; () banked
 25071  0154E4  517B               	movf	(_os+21)& (0+255),w,b	;volatile
 25072  0154E6  0A80               	xorlw	128
 25073  0154E8  0100               	movlb	0	; () banked
 25074  0154EA  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 25075  0154EC  A0D8               	btfss	status,0,c
 25076  0154EE  0012               	return	
 25077                           
 25078                           ; BSR set to: 0
 25079                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 25080  0154F0  0EFF               	movlw	255
 25081  0154F2  0101               	movlb	1	; () banked
 25082  0154F4  257A               	addwf	(_os+20)& (0+255),w,b	;volatile
 25083  0154F6  6F7F               	movwf	(_os+25)& (0+255),b	;volatile
 25084  0154F8  0EFF               	movlw	255
 25085  0154FA  217B               	addwfc	(_os+21)& (0+255),w,b	;volatile
 25086  0154FC  6F80               	movwf	(_os+26)& (0+255),b	;volatile
 25087  0154FE  0012               	return	
 25088  015500                     __end_of__divide_jump_size_increment:
 25089                           	opt stack 0
 25090                           tblptru	equ	0xFF8
 25091                           tblptrh	equ	0xFF7
 25092                           tblptrl	equ	0xFF6
 25093                           tablat	equ	0xFF5
 25094                           prodh	equ	0xFF4
 25095                           prodl	equ	0xFF3
 25096                           intcon	equ	0xFF2
 25097                           postinc0	equ	0xFEE
 25098                           wreg	equ	0xFE8
 25099                           indf1	equ	0xFE7
 25100                           postinc1	equ	0xFE6
 25101                           postdec1	equ	0xFE5
 25102                           plusw1	equ	0xFE3
 25103                           fsr1h	equ	0xFE2
 25104                           fsr1l	equ	0xFE1
 25105                           indf2	equ	0xFDF
 25106                           postinc2	equ	0xFDE
 25107                           postdec2	equ	0xFDD
 25108                           plusw2	equ	0xFDB
 25109                           fsr2h	equ	0xFDA
 25110                           fsr2l	equ	0xFD9
 25111                           status	equ	0xFD8
 25112                           
 25113 ;; *************** function __divide_jump_size_decrement *****************
 25114 ;; Defined at:
 25115 ;;		line 82 in file "encoder.c"
 25116 ;; Parameters:    Size  Location     Type
 25117 ;;		None
 25118 ;; Auto vars:     Size  Location     Type
 25119 ;;		None
 25120 ;; Return value:  Size  Location     Type
 25121 ;;                  1    wreg      void 
 25122 ;; Registers used:
 25123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25124 ;; Tracked objects:
 25125 ;;		On entry : 0/0
 25126 ;;		On exit  : 0/0
 25127 ;;		Unchanged: 0/0
 25128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25131 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25133 ;;Total ram usage:        3 bytes
 25134 ;; Hardware stack levels used:    1
 25135 ;; Hardware stack levels required when called:   10
 25136 ;; This function calls:
 25137 ;;		Nothing
 25138 ;; This function is called by:
 25139 ;;		_encoder_statemachine
 25140 ;; This function uses a non-reentrant model
 25141 ;;
 25142                           
 25143                           	psect	text104
 25144  01443C                     __ptext104:
 25145                           	opt stack 0
 25146  01443C                     __divide_jump_size_decrement:
 25147                           	opt stack 19
 25148                           
 25149                           ;encoder.c: 84: --os.divide_jump_size;
 25150                           
 25151                           ;incstack = 0
 25152  01443C  0101               	movlb	1	; () banked
 25153  01443E  077F               	decf	(_os+25)& (0+255),f,b	;volatile
 25154  014440  A0D8               	btfss	status,0,c
 25155  014442  0780               	decf	(_os+26)& (0+255),f,b	;volatile
 25156                           
 25157                           ; BSR set to: 1
 25158                           ;encoder.c: 85: if(os.divide_jump_size==0)
 25159  014444  517F               	movf	(_os+25)& (0+255),w,b	;volatile
 25160  014446  1180               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25161  014448  A4D8               	btfss	status,2,c
 25162  01444A  D002               	goto	l2737
 25163                           
 25164                           ; BSR set to: 1
 25165                           ;encoder.c: 86: os.divide_jump_size = -1;
 25166  01444C  697F               	setf	(_os+25)& (0+255),b	;volatile
 25167  01444E  6980               	setf	(_os+26)& (0+255),b	;volatile
 25168  014450                     l2737:
 25169                           
 25170                           ; BSR set to: 1
 25171                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 25172                           
 25173                           ; BSR set to: 1
 25174  014450  EE21  F07A         	lfsr	2,_os+20	;volatile
 25175  014454  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25176  014458  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25177  01445C  0100               	movlb	0	; () banked
 25178  01445E  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25179  014460  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25180  014462  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25181  014464  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25182  014466  0101               	movlb	1	; () banked
 25183  014468  517F               	movf	(_os+25)& (0+255),w,b	;volatile
 25184  01446A  0100               	movlb	0	; () banked
 25185  01446C  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 25186  01446E  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25187  014470  0A80               	xorlw	128
 25188  014472  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 25189  014474  0101               	movlb	1	; () banked
 25190  014476  5180               	movf	(_os+26)& (0+255),w,b	;volatile
 25191  014478  0A80               	xorlw	128
 25192  01447A  0100               	movlb	0	; () banked
 25193  01447C  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 25194  01447E  A0D8               	btfss	status,0,c
 25195  014480  0012               	return	
 25196                           
 25197                           ; BSR set to: 0
 25198                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 25199  014482  EE21  F07A         	lfsr	2,_os+20	;volatile
 25200  014486  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25201  01448A  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25202  01448E  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25203  014490  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25204  014492  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25205  014494  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25206  014496  0E01               	movlw	1
 25207  014498  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 25208  01449A  0101               	movlb	1	; () banked
 25209  01449C  6F7F               	movwf	(_os+25)& (0+255),b	;volatile
 25210  01449E  0E00               	movlw	0
 25211  0144A0  0100               	movlb	0	; () banked
 25212  0144A2  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25213  0144A4  0101               	movlb	1	; () banked
 25214  0144A6  6F80               	movwf	(_os+26)& (0+255),b	;volatile
 25215  0144A8  0012               	return	
 25216  0144AA                     __end_of__divide_jump_size_decrement:
 25217                           	opt stack 0
 25218                           tblptru	equ	0xFF8
 25219                           tblptrh	equ	0xFF7
 25220                           tblptrl	equ	0xFF6
 25221                           tablat	equ	0xFF5
 25222                           prodh	equ	0xFF4
 25223                           prodl	equ	0xFF3
 25224                           intcon	equ	0xFF2
 25225                           postinc0	equ	0xFEE
 25226                           wreg	equ	0xFE8
 25227                           indf1	equ	0xFE7
 25228                           postinc1	equ	0xFE6
 25229                           postdec1	equ	0xFE5
 25230                           plusw1	equ	0xFE3
 25231                           fsr1h	equ	0xFE2
 25232                           fsr1l	equ	0xFE1
 25233                           indf2	equ	0xFDF
 25234                           postinc2	equ	0xFDE
 25235                           postdec2	equ	0xFDD
 25236                           plusw2	equ	0xFDB
 25237                           fsr2h	equ	0xFDA
 25238                           fsr2l	equ	0xFD9
 25239                           status	equ	0xFD8
 25240                           
 25241 ;; *************** function _display_prepare *****************
 25242 ;; Defined at:
 25243 ;;		line 278 in file "display.c"
 25244 ;; Parameters:    Size  Location     Type
 25245 ;;		None
 25246 ;; Auto vars:     Size  Location     Type
 25247 ;;  temp           10  104[BANK0 ] unsigned char [10]
 25248 ;;  cntr            1  115[BANK0 ] unsigned char 
 25249 ;;  space           1  114[BANK0 ] unsigned char 
 25250 ;; Return value:  Size  Location     Type
 25251 ;;                  1    wreg      void 
 25252 ;; Registers used:
 25253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25254 ;; Tracked objects:
 25255 ;;		On entry : 0/0
 25256 ;;		On exit  : 0/0
 25257 ;;		Unchanged: 0/0
 25258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25260 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25262 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25263 ;;Total ram usage:       14 bytes
 25264 ;; Hardware stack levels used:    1
 25265 ;; Hardware stack levels required when called:   15
 25266 ;; This function calls:
 25267 ;;		__display_clear
 25268 ;;		__display_itoa
 25269 ;;		__display_itoa_long
 25270 ;;		__display_padded_itoa
 25271 ;;		__display_signed_itoa
 25272 ;;		_memcpy
 25273 ;;		_motor_speed_from_index
 25274 ;;		_strlen
 25275 ;; This function is called by:
 25276 ;;		_main
 25277 ;; This function uses a non-reentrant model
 25278 ;;
 25279                           
 25280                           	psect	text105
 25281  00A330                     __ptext105:
 25282                           	opt stack 0
 25283  00A330                     _display_prepare:
 25284                           	opt stack 15
 25285                           
 25286                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 25287                           
 25288                           ;incstack = 0
 25289  00A330  EF8E  F057         	goto	l1390
 25290  00A334                     
 25291                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 25292  00A334  0E42               	movlw	low _display_content
 25293  00A336  0100               	movlb	0	; () banked
 25294  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 25295  00A33A  0E02               	movlw	high _display_content
 25296  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25297  00A33E  0E6E               	movlw	low _dc_main
 25298  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 25299  00A342  0EA0               	movlw	high _dc_main
 25300  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25301  00A346  0E00               	movlw	0
 25302  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25303  00A34A  0E50               	movlw	80
 25304  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 25305  00A34E  ECEF  F0A3         	call	_memcpy	;wreg free
 25306                           
 25307                           ;display.c: 289: switch(os.displayState)
 25308  00A352  D00F               	goto	l1392
 25309  00A354                     
 25310                           ;display.c: 292: display_content[1][0] = '>';
 25311  00A354  0E3E               	movlw	62
 25312  00A356  0102               	movlb	2	; () banked
 25313  00A358  6F56               	movwf	(_display_content+20)& (0+255),b
 25314                           
 25315                           ;display.c: 293: break;
 25316  00A35A  EFBC  F057         	goto	l1399
 25317  00A35E                     
 25318                           ;display.c: 295: display_content[1][9] = '>';
 25319                           
 25320                           ; BSR set to: 2
 25321  00A35E  0E3E               	movlw	62
 25322  00A360  0102               	movlb	2	; () banked
 25323  00A362  6F5F               	movwf	(_display_content+29)& (0+255),b
 25324                           
 25325                           ;display.c: 296: break;
 25326  00A364  EFBC  F057         	goto	l1399
 25327  00A368                     
 25328                           ;display.c: 301: display_content[2][9] = '>';
 25329                           
 25330                           ; BSR set to: 2
 25331  00A368  0E3E               	movlw	62
 25332  00A36A  0102               	movlb	2	; () banked
 25333  00A36C  6F73               	movwf	(_display_content+49)& (0+255),b
 25334                           
 25335                           ;display.c: 302: break;
 25336  00A36E  EFBC  F057         	goto	l1399
 25337  00A372                     l1392:
 25338                           
 25339                           ; BSR set to: 2
 25340  00A372  0101               	movlb	1	; () banked
 25341  00A374  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 25342                           
 25343                           ; Switch size 1, requested type "space"
 25344                           ; Number of cases is 5, Range of values is 1 to 5
 25345                           ; switch strategies available:
 25346                           ; Name         Instructions Cycles
 25347                           ; simple_byte           16     9 (average)
 25348                           ;	Chosen strategy is simple_byte
 25349  00A376  0A01               	xorlw	1	; case 1
 25350  00A378  B4D8               	btfsc	status,2,c
 25351  00A37A  D7EC               	goto	l1393
 25352  00A37C  0A03               	xorlw	3	; case 2
 25353  00A37E  B4D8               	btfsc	status,2,c
 25354  00A380  D7EE               	goto	l1395
 25355  00A382  0A01               	xorlw	1	; case 3
 25356  00A384  B4D8               	btfsc	status,2,c
 25357  00A386  D067               	goto	l1412
 25358  00A388  0A07               	xorlw	7	; case 4
 25359  00A38A  B4D8               	btfsc	status,2,c
 25360  00A38C  D7ED               	goto	l1397
 25361  00A38E  0A01               	xorlw	1	; case 5
 25362  00A390  D072               	goto	L88
 25363  00A392                     
 25364                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 25365                           
 25366                           ; BSR set to: 1
 25367  00A392  0E42               	movlw	low _display_content
 25368  00A394  0100               	movlb	0	; () banked
 25369  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 25370  00A398  0E02               	movlw	high _display_content
 25371  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25372  00A39C  0E1E               	movlw	low _dc_setup1
 25373  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 25374  00A3A0  0EA0               	movlw	high _dc_setup1
 25375  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25376  00A3A4  0E00               	movlw	0
 25377  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25378  00A3A8  0E50               	movlw	80
 25379  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 25380  00A3AC  ECEF  F0A3         	call	_memcpy	;wreg free
 25381                           
 25382                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 25383  00A3B0  C177  F09F         	movff	_os+17,__display_itoa@value	;volatile
 25384  00A3B4  C178  F0A0         	movff	_os+18,__display_itoa@value+1	;volatile
 25385  00A3B8  0E02               	movlw	2
 25386  00A3BA  0100               	movlb	0	; () banked
 25387  00A3BC  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 25388  00A3BE  0EC8               	movlw	low display_prepare@temp
 25389  00A3C0  6FA2               	movwf	__display_itoa@text& (0+255),b
 25390  00A3C2  0E00               	movlw	high display_prepare@temp
 25391  00A3C4  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 25392  00A3C6  ECD3  F071         	call	__display_itoa	;wreg free
 25393                           
 25394                           ;display.c: 312: if(os.setup_step_size>999)
 25395  00A3CA  0EE8               	movlw	232
 25396  00A3CC  0101               	movlb	1	; () banked
 25397  00A3CE  5D77               	subwf	(_os+17)& (0+255),w,b	;volatile
 25398  00A3D0  0E03               	movlw	3
 25399  00A3D2  5978               	subwfb	(_os+18)& (0+255),w,b	;volatile
 25400  00A3D4  A0D8               	btfss	status,0,c
 25401  00A3D6  D002               	goto	l1401
 25402                           
 25403                           ; BSR set to: 1
 25404                           ;display.c: 313: space = 0;
 25405  00A3D8  0E00               	movlw	0
 25406  00A3DA  D001               	goto	L23
 25407  00A3DC                     l1401:
 25408                           
 25409                           ;display.c: 314: else;display.c: 315: space = 1;
 25410                           
 25411                           ; BSR set to: 0
 25412  00A3DC  0E01               	movlw	1
 25413  00A3DE                     L23:
 25414  00A3DE  0100               	movlb	0	; () banked
 25415  00A3E0  6FD2               	movwf	display_prepare@space& (0+255),b
 25416                           
 25417                           ; BSR set to: 0
 25418                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 25419  00A3E2  0E00               	movlw	0
 25420  00A3E4  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25421  00A3E6  D018               	goto	l1403
 25422  00A3E8                     
 25423                           ; BSR set to: 0
 25424                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 25425                           
 25426                           ; BSR set to: 0
 25427  00A3E8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25428  00A3EA  0D01               	mullw	1
 25429  00A3EC  0EC8               	movlw	low display_prepare@temp
 25430  00A3EE  24F3               	addwf	prodl,w,c
 25431  00A3F0  6ED9               	movwf	fsr2l,c
 25432  00A3F2  0E00               	movlw	high display_prepare@temp
 25433  00A3F4  20F4               	addwfc	prodh,w,c
 25434  00A3F6  6EDA               	movwf	fsr2h,c
 25435  00A3F8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25436  00A3FA  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 25437  00A3FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25438  00A400  27C6               	addwf	??_display_prepare& (0+255),f,b
 25439  00A402  0E00               	movlw	0
 25440  00A404  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25441  00A406  0E7E               	movlw	low (_display_content+60)
 25442  00A408  25C6               	addwf	??_display_prepare& (0+255),w,b
 25443  00A40A  6EE1               	movwf	fsr1l,c
 25444  00A40C  0E02               	movlw	high (_display_content+60)
 25445  00A40E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25446  00A410  6EE2               	movwf	fsr1h,c
 25447  00A412  CFDF FFE7          	movff	indf2,indf1
 25448                           
 25449                           ; BSR set to: 0
 25450  00A416  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25451  00A418                     l1403:
 25452                           
 25453                           ; BSR set to: 0
 25454                           
 25455                           ; BSR set to: 0
 25456  00A418  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25457  00A41A  0D01               	mullw	1
 25458  00A41C  0EC8               	movlw	low display_prepare@temp
 25459  00A41E  24F3               	addwf	prodl,w,c
 25460  00A420  6ED9               	movwf	fsr2l,c
 25461  00A422  0E00               	movlw	high display_prepare@temp
 25462  00A424  20F4               	addwfc	prodh,w,c
 25463  00A426  6EDA               	movwf	fsr2h,c
 25464  00A428  50DF               	movf	indf2,w,c
 25465  00A42A  A4D8               	btfss	status,2,c
 25466  00A42C  D7DD               	goto	l1404
 25467                           
 25468                           ; BSR set to: 2
 25469                           
 25470                           ; BSR set to: 2
 25471                           ;display.c: 328: }
 25472                           
 25473                           ;display.c: 327: break;
 25474                           
 25475                           ;display.c: 326: display_content[3][12] = '>';
 25476                           
 25477                           ; BSR set to: 2
 25478                           
 25479                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 25480                           
 25481                           ;display.c: 324: break;
 25482                           
 25483                           ;display.c: 323: display_content[2][12] = '>';
 25484                           
 25485                           ; BSR set to: 0
 25486                           
 25487                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 25488                           
 25489                           ; BSR set to: 0
 25490                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 25491  00A42E  0101               	movlb	1	; () banked
 25492  00A430  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 25493                           
 25494                           ; Switch size 1, requested type "space"
 25495                           ; Number of cases is 2, Range of values is 17 to 18
 25496                           ; switch strategies available:
 25497                           ; Name         Instructions Cycles
 25498                           ; simple_byte            7     4 (average)
 25499                           ;	Chosen strategy is simple_byte
 25500  00A432  0A11               	xorlw	17	; case 17
 25501  00A434  D08E               	goto	L29
 25502  00A436                     
 25503                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 25504                           
 25505                           ; BSR set to: 1
 25506  00A436  0E42               	movlw	low _display_content
 25507  00A438  0100               	movlb	0	; () banked
 25508  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 25509  00A43C  0E02               	movlw	high _display_content
 25510  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25511  00A440  0ECE               	movlw	low _dc_setup2
 25512  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 25513  00A444  0E9F               	movlw	high _dc_setup2
 25514  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25515  00A448  0E00               	movlw	0
 25516  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25517  00A44C  0E50               	movlw	80
 25518  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 25519  00A450  ECEF  F0A3         	call	_memcpy	;wreg free
 25520                           
 25521                           ;display.c: 333: switch(os.displayState)
 25522  00A454  D00A               	goto	l1411
 25523  00A456                     l1412:
 25524                           
 25525                           ;display.c: 336: display_content[2][0] = '>';
 25526  00A456  0E3E               	movlw	62
 25527  00A458  0102               	movlb	2	; () banked
 25528  00A45A  6F6A               	movwf	(_display_content+40)& (0+255),b
 25529                           
 25530                           ;display.c: 337: break;
 25531  00A45C  EFBC  F057         	goto	l1399
 25532  00A460                     l1414:
 25533                           
 25534                           ;display.c: 339: display_content[3][0] = '>';
 25535                           
 25536                           ; BSR set to: 2
 25537  00A460  0E3E               	movlw	62
 25538  00A462  0102               	movlb	2	; () banked
 25539  00A464  6F7E               	movwf	(_display_content+60)& (0+255),b
 25540                           
 25541                           ; BSR set to: 2
 25542                           ;display.c: 341: }
 25543                           
 25544                           ;display.c: 340: break;
 25545  00A466  EFBC  F057         	goto	l1399
 25546  00A46A                     l1411:
 25547                           
 25548                           ; BSR set to: 2
 25549  00A46A  0101               	movlb	1	; () banked
 25550  00A46C  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 25551                           
 25552                           ; Switch size 1, requested type "space"
 25553                           ; Number of cases is 2, Range of values is 33 to 34
 25554                           ; switch strategies available:
 25555                           ; Name         Instructions Cycles
 25556                           ; simple_byte            7     4 (average)
 25557                           ;	Chosen strategy is simple_byte
 25558  00A46E  0A21               	xorlw	33	; case 33
 25559  00A470  B4D8               	btfsc	status,2,c
 25560  00A472  D7F1               	goto	l1412
 25561  00A474  0A03               	xorlw	3	; case 34
 25562  00A476                     L88:
 25563  00A476  B4D8               	btfsc	status,2,c
 25564  00A478  D7F3               	goto	l1414
 25565                           
 25566                           ; BSR set to: 1
 25567                           ;display.c: 342: break;
 25568  00A47A  EFBC  F057         	goto	l1399
 25569  00A47E                     
 25570                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 25571                           
 25572                           ; BSR set to: 1
 25573  00A47E  0E42               	movlw	low _display_content
 25574  00A480  0100               	movlb	0	; () banked
 25575  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 25576  00A484  0E02               	movlw	high _display_content
 25577  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25578  00A488  0E7E               	movlw	low _dc_divide1
 25579  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 25580  00A48C  0E9F               	movlw	high _dc_divide1
 25581  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25582  00A490  0E00               	movlw	0
 25583  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25584  00A494  0E50               	movlw	80
 25585  00A496  6F64               	movwf	memcpy@n& (0+255),b
 25586  00A498  ECEF  F0A3         	call	_memcpy	;wreg free
 25587                           
 25588                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 25589  00A49C  C17C  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25590  00A4A0  0100               	movlb	0	; () banked
 25591  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25592  00A4A4  0E03               	movlw	3
 25593  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25594  00A4A8  0EC8               	movlw	low display_prepare@temp
 25595  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25596  00A4AC  0E00               	movlw	high display_prepare@temp
 25597  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25598  00A4B0  EC43  F090         	call	__display_padded_itoa	;wreg free
 25599                           
 25600                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 25601  00A4B4  0E00               	movlw	0
 25602  00A4B6  0100               	movlb	0	; () banked
 25603  00A4B8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25604  00A4BA                     l18732:
 25605                           
 25606                           ; BSR set to: 0
 25607  00A4BA  0E02               	movlw	2
 25608  00A4BC  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25609  00A4BE  D001               	goto	l1416
 25610  00A4C0  D014               	goto	u18740
 25611  00A4C2                     l1416:
 25612                           
 25613                           ; BSR set to: 0
 25614                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 25615                           
 25616                           ; BSR set to: 0
 25617  00A4C2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25618  00A4C4  0D01               	mullw	1
 25619  00A4C6  0EC8               	movlw	low display_prepare@temp
 25620  00A4C8  24F3               	addwf	prodl,w,c
 25621  00A4CA  6ED9               	movwf	fsr2l,c
 25622  00A4CC  0E00               	movlw	high display_prepare@temp
 25623  00A4CE  20F4               	addwfc	prodh,w,c
 25624  00A4D0  6EDA               	movwf	fsr2h,c
 25625  00A4D2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25626  00A4D4  0D01               	mullw	1
 25627  00A4D6  0E6A               	movlw	low (_display_content+40)
 25628  00A4D8  24F3               	addwf	prodl,w,c
 25629  00A4DA  6EE1               	movwf	fsr1l,c
 25630  00A4DC  0E02               	movlw	high (_display_content+40)
 25631  00A4DE  20F4               	addwfc	prodh,w,c
 25632  00A4E0  6EE2               	movwf	fsr1h,c
 25633  00A4E2  CFDF FFE7          	movff	indf2,indf1
 25634                           
 25635                           ; BSR set to: 0
 25636  00A4E6  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25637  00A4E8  D7E8               	goto	l18732
 25638  00A4EA                     u18740:
 25639                           
 25640                           ; BSR set to: 0
 25641                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 25642                           
 25643                           ; BSR set to: 0
 25644  00A4EA  C17A  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25645  00A4EE  C17B  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25646  00A4F2  0E04               	movlw	4
 25647  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25648  00A4F6  0EC8               	movlw	low display_prepare@temp
 25649  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25650  00A4FA  0E00               	movlw	high display_prepare@temp
 25651  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25652  00A4FE  EC43  F090         	call	__display_padded_itoa	;wreg free
 25653                           
 25654                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 25655  00A502  0E00               	movlw	0
 25656  00A504  0100               	movlb	0	; () banked
 25657  00A506  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25658  00A508                     l18746:
 25659                           
 25660                           ; BSR set to: 0
 25661  00A508  0E03               	movlw	3
 25662  00A50A  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25663  00A50C  D001               	goto	l1418
 25664  00A50E  D01E               	goto	l1420
 25665  00A510                     l1418:
 25666                           
 25667                           ; BSR set to: 0
 25668                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 25669                           
 25670                           ; BSR set to: 0
 25671  00A510  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25672  00A512  0D01               	mullw	1
 25673  00A514  0EC8               	movlw	low display_prepare@temp
 25674  00A516  24F3               	addwf	prodl,w,c
 25675  00A518  6ED9               	movwf	fsr2l,c
 25676  00A51A  0E00               	movlw	high display_prepare@temp
 25677  00A51C  20F4               	addwfc	prodh,w,c
 25678  00A51E  6EDA               	movwf	fsr2h,c
 25679  00A520  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25680  00A522  0D01               	mullw	1
 25681  00A524  0E7E               	movlw	low (_display_content+60)
 25682  00A526  24F3               	addwf	prodl,w,c
 25683  00A528  6EE1               	movwf	fsr1l,c
 25684  00A52A  0E02               	movlw	high (_display_content+60)
 25685  00A52C  20F4               	addwfc	prodh,w,c
 25686  00A52E  6EE2               	movwf	fsr1h,c
 25687  00A530  CFDF FFE7          	movff	indf2,indf1
 25688                           
 25689                           ; BSR set to: 0
 25690  00A534  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25691  00A536  D7E8               	goto	l18746
 25692  00A538                     
 25693                           ;display.c: 361: display_content[2][12] = '>';
 25694                           
 25695                           ; BSR set to: 0
 25696  00A538  0E3E               	movlw	62
 25697  00A53A  0102               	movlb	2	; () banked
 25698  00A53C  6F76               	movwf	(_display_content+52)& (0+255),b
 25699                           
 25700                           ;display.c: 362: break;
 25701  00A53E  EFBC  F057         	goto	l1399
 25702  00A542                     
 25703                           ;display.c: 364: display_content[3][12] = '>';
 25704                           
 25705                           ; BSR set to: 2
 25706  00A542  0E3E               	movlw	62
 25707  00A544  0102               	movlb	2	; () banked
 25708  00A546  6F8A               	movwf	(_display_content+72)& (0+255),b
 25709                           
 25710                           ; BSR set to: 2
 25711                           ;display.c: 366: }
 25712                           
 25713                           ;display.c: 365: break;
 25714  00A548  EFBC  F057         	goto	l1399
 25715  00A54C                     l1420:
 25716                           
 25717                           ; BSR set to: 2
 25718  00A54C  0101               	movlb	1	; () banked
 25719  00A54E  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 25720                           
 25721                           ; Switch size 1, requested type "space"
 25722                           ; Number of cases is 2, Range of values is 49 to 50
 25723                           ; switch strategies available:
 25724                           ; Name         Instructions Cycles
 25725                           ; simple_byte            7     4 (average)
 25726                           ;	Chosen strategy is simple_byte
 25727  00A550  0A31               	xorlw	49	; case 49
 25728  00A552                     L29:
 25729  00A552  B4D8               	btfsc	status,2,c
 25730  00A554  D7F1               	goto	l1421
 25731  00A556  0A03               	xorlw	3	; case 50
 25732  00A558  B4D8               	btfsc	status,2,c
 25733  00A55A  D7F3               	goto	l1423
 25734                           
 25735                           ; BSR set to: 1
 25736                           ;display.c: 367: break;
 25737  00A55C  EFBC  F057         	goto	l1399
 25738  00A560                     
 25739                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 25740                           
 25741                           ; BSR set to: 1
 25742  00A560  0E42               	movlw	low _display_content
 25743  00A562  0100               	movlb	0	; () banked
 25744  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 25745  00A566  0E02               	movlw	high _display_content
 25746  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25747  00A56A  0E2E               	movlw	low _dc_divide2
 25748  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 25749  00A56E  0E9F               	movlw	high _dc_divide2
 25750  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25751  00A572  0E00               	movlw	0
 25752  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25753  00A576  0E50               	movlw	80
 25754  00A578  6F64               	movwf	memcpy@n& (0+255),b
 25755  00A57A  ECEF  F0A3         	call	_memcpy	;wreg free
 25756                           
 25757                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 25758  00A57E  C17A  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25759  00A582  C17B  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25760  00A586  0E00               	movlw	0
 25761  00A588  0100               	movlb	0	; () banked
 25762  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25763  00A58C  0EC8               	movlw	low display_prepare@temp
 25764  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25765  00A590  0E00               	movlw	high display_prepare@temp
 25766  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25767  00A594  EC43  F090         	call	__display_padded_itoa	;wreg free
 25768                           
 25769                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 25770  00A598  0E00               	movlw	0
 25771  00A59A  0100               	movlb	0	; () banked
 25772  00A59C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25773  00A59E  D018               	goto	l1425
 25774  00A5A0                     
 25775                           ; BSR set to: 0
 25776                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 25777                           
 25778                           ; BSR set to: 0
 25779  00A5A0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25780  00A5A2  0D01               	mullw	1
 25781  00A5A4  0EC8               	movlw	low display_prepare@temp
 25782  00A5A6  24F3               	addwf	prodl,w,c
 25783  00A5A8  6ED9               	movwf	fsr2l,c
 25784  00A5AA  0E00               	movlw	high display_prepare@temp
 25785  00A5AC  20F4               	addwfc	prodh,w,c
 25786  00A5AE  6EDA               	movwf	fsr2h,c
 25787  00A5B0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25788  00A5B2  6FC6               	movwf	??_display_prepare& (0+255),b
 25789  00A5B4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25790  00A5B6  0E08               	movlw	8
 25791  00A5B8  27C6               	addwf	??_display_prepare& (0+255),f,b
 25792  00A5BA  0E00               	movlw	0
 25793  00A5BC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25794  00A5BE  0E42               	movlw	low _display_content
 25795  00A5C0  25C6               	addwf	??_display_prepare& (0+255),w,b
 25796  00A5C2  6EE1               	movwf	fsr1l,c
 25797  00A5C4  0E02               	movlw	high _display_content
 25798  00A5C6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25799  00A5C8  6EE2               	movwf	fsr1h,c
 25800  00A5CA  CFDF FFE7          	movff	indf2,indf1
 25801                           
 25802                           ; BSR set to: 0
 25803  00A5CE  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25804  00A5D0                     l1425:
 25805                           
 25806                           ; BSR set to: 0
 25807                           
 25808                           ; BSR set to: 0
 25809  00A5D0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25810  00A5D2  0D01               	mullw	1
 25811  00A5D4  0EC8               	movlw	low display_prepare@temp
 25812  00A5D6  24F3               	addwf	prodl,w,c
 25813  00A5D8  6ED9               	movwf	fsr2l,c
 25814  00A5DA  0E00               	movlw	high display_prepare@temp
 25815  00A5DC  20F4               	addwfc	prodh,w,c
 25816  00A5DE  6EDA               	movwf	fsr2h,c
 25817  00A5E0  50DF               	movf	indf2,w,c
 25818  00A5E2  A4D8               	btfss	status,2,c
 25819  00A5E4  D7DD               	goto	l1426
 25820                           
 25821                           ; BSR set to: 0
 25822                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 25823                           
 25824                           ; BSR set to: 0
 25825  00A5E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25826  00A5E8  6FC6               	movwf	??_display_prepare& (0+255),b
 25827  00A5EA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25828  00A5EC  0E08               	movlw	8
 25829  00A5EE  27C6               	addwf	??_display_prepare& (0+255),f,b
 25830  00A5F0  0E00               	movlw	0
 25831  00A5F2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25832  00A5F4  0E42               	movlw	low _display_content
 25833  00A5F6  25C6               	addwf	??_display_prepare& (0+255),w,b
 25834  00A5F8  6ED9               	movwf	fsr2l,c
 25835  00A5FA  0E02               	movlw	high _display_content
 25836  00A5FC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25837  00A5FE  6EDA               	movwf	fsr2h,c
 25838  00A600  0E2C               	movlw	44
 25839  00A602  6EDF               	movwf	indf2,c
 25840                           
 25841                           ; BSR set to: 0
 25842                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25843  00A604  0101               	movlb	1	; () banked
 25844  00A606  2979               	incf	(_os+19)& (0+255),w,b	;volatile
 25845  00A608  A4D8               	btfss	status,2,c
 25846  00A60A  D024               	goto	l1428
 25847                           
 25848                           ; BSR set to: 1
 25849                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 25850  00A60C  0100               	movlb	0	; () banked
 25851  00A60E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25852  00A610  6FC6               	movwf	??_display_prepare& (0+255),b
 25853  00A612  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25854  00A614  0E0A               	movlw	10
 25855  00A616  27C6               	addwf	??_display_prepare& (0+255),f,b
 25856  00A618  0E00               	movlw	0
 25857  00A61A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25858  00A61C  0E42               	movlw	low _display_content
 25859  00A61E  25C6               	addwf	??_display_prepare& (0+255),w,b
 25860  00A620  6ED9               	movwf	fsr2l,c
 25861  00A622  0E02               	movlw	high _display_content
 25862  00A624  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25863  00A626  6EDA               	movwf	fsr2h,c
 25864  00A628  0E43               	movlw	67
 25865  00A62A  6EDF               	movwf	indf2,c
 25866                           
 25867                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 25868  00A62C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25869  00A62E  6FC6               	movwf	??_display_prepare& (0+255),b
 25870  00A630  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25871  00A632  0E0B               	movlw	11
 25872  00A634  27C6               	addwf	??_display_prepare& (0+255),f,b
 25873  00A636  0E00               	movlw	0
 25874  00A638  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25875  00A63A  0E42               	movlw	low _display_content
 25876  00A63C  25C6               	addwf	??_display_prepare& (0+255),w,b
 25877  00A63E  6ED9               	movwf	fsr2l,c
 25878  00A640  0E02               	movlw	high _display_content
 25879  00A642  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25880  00A644  6EDA               	movwf	fsr2h,c
 25881  00A646  0E43               	movlw	67
 25882  00A648  6EDF               	movwf	indf2,c
 25883                           
 25884                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 25885  00A64A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25886  00A64C  6FC6               	movwf	??_display_prepare& (0+255),b
 25887  00A64E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25888  00A650  0E0C               	movlw	12
 25889  00A652  D014               	goto	L30
 25890  00A654                     l1428:
 25891                           
 25892                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 25893                           
 25894                           ; BSR set to: 0
 25895  00A654  0100               	movlb	0	; () banked
 25896  00A656  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25897  00A658  6FC6               	movwf	??_display_prepare& (0+255),b
 25898  00A65A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25899  00A65C  0E0A               	movlw	10
 25900  00A65E  27C6               	addwf	??_display_prepare& (0+255),f,b
 25901  00A660  0E00               	movlw	0
 25902  00A662  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25903  00A664  0E42               	movlw	low _display_content
 25904  00A666  25C6               	addwf	??_display_prepare& (0+255),w,b
 25905  00A668  6ED9               	movwf	fsr2l,c
 25906  00A66A  0E02               	movlw	high _display_content
 25907  00A66C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25908  00A66E  6EDA               	movwf	fsr2h,c
 25909  00A670  0E43               	movlw	67
 25910  00A672  6EDF               	movwf	indf2,c
 25911                           
 25912                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 25913  00A674  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25914  00A676  6FC6               	movwf	??_display_prepare& (0+255),b
 25915  00A678  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25916  00A67A  0E0B               	movlw	11
 25917  00A67C                     L30:
 25918  00A67C  27C6               	addwf	??_display_prepare& (0+255),f,b
 25919  00A67E  0E00               	movlw	0
 25920  00A680  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25921  00A682  0E42               	movlw	low _display_content
 25922  00A684  25C6               	addwf	??_display_prepare& (0+255),w,b
 25923  00A686  6ED9               	movwf	fsr2l,c
 25924  00A688  0E02               	movlw	high _display_content
 25925  00A68A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25926  00A68C  6EDA               	movwf	fsr2h,c
 25927  00A68E  0E57               	movlw	87
 25928  00A690  6EDF               	movwf	indf2,c
 25929                           
 25930                           ; BSR set to: 0
 25931                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 25932                           
 25933                           ; BSR set to: 0
 25934  00A692  C17D  F078         	movff	_os+23,__display_padded_itoa@value	;volatile
 25935  00A696  C17E  F079         	movff	_os+24,__display_padded_itoa@value+1	;volatile
 25936  00A69A  0E00               	movlw	0
 25937  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25938  00A69E  0EC8               	movlw	low display_prepare@temp
 25939  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25940  00A6A2  0E00               	movlw	high display_prepare@temp
 25941  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25942  00A6A6  EC43  F090         	call	__display_padded_itoa	;wreg free
 25943                           
 25944                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 25945  00A6AA  0E00               	movlw	0
 25946  00A6AC  0100               	movlb	0	; () banked
 25947  00A6AE  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25948  00A6B0  D018               	goto	l1430
 25949  00A6B2                     
 25950                           ; BSR set to: 0
 25951                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 25952                           
 25953                           ; BSR set to: 0
 25954  00A6B2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25955  00A6B4  0D01               	mullw	1
 25956  00A6B6  0EC8               	movlw	low display_prepare@temp
 25957  00A6B8  24F3               	addwf	prodl,w,c
 25958  00A6BA  6ED9               	movwf	fsr2l,c
 25959  00A6BC  0E00               	movlw	high display_prepare@temp
 25960  00A6BE  20F4               	addwfc	prodh,w,c
 25961  00A6C0  6EDA               	movwf	fsr2h,c
 25962  00A6C2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25963  00A6C4  6FC6               	movwf	??_display_prepare& (0+255),b
 25964  00A6C6  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25965  00A6C8  0E05               	movlw	5
 25966  00A6CA  27C6               	addwf	??_display_prepare& (0+255),f,b
 25967  00A6CC  0E00               	movlw	0
 25968  00A6CE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25969  00A6D0  0E56               	movlw	low (_display_content+20)
 25970  00A6D2  25C6               	addwf	??_display_prepare& (0+255),w,b
 25971  00A6D4  6EE1               	movwf	fsr1l,c
 25972  00A6D6  0E02               	movlw	high (_display_content+20)
 25973  00A6D8  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25974  00A6DA  6EE2               	movwf	fsr1h,c
 25975  00A6DC  CFDF FFE7          	movff	indf2,indf1
 25976                           
 25977                           ; BSR set to: 0
 25978  00A6E0  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25979  00A6E2                     l1430:
 25980                           
 25981                           ; BSR set to: 0
 25982                           
 25983                           ; BSR set to: 0
 25984  00A6E2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25985  00A6E4  0D01               	mullw	1
 25986  00A6E6  0EC8               	movlw	low display_prepare@temp
 25987  00A6E8  24F3               	addwf	prodl,w,c
 25988  00A6EA  6ED9               	movwf	fsr2l,c
 25989  00A6EC  0E00               	movlw	high display_prepare@temp
 25990  00A6EE  20F4               	addwfc	prodh,w,c
 25991  00A6F0  6EDA               	movwf	fsr2h,c
 25992  00A6F2  50DF               	movf	indf2,w,c
 25993  00A6F4  A4D8               	btfss	status,2,c
 25994  00A6F6  D7DD               	goto	l1431
 25995                           
 25996                           ; BSR set to: 0
 25997                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 25998                           
 25999                           ; BSR set to: 0
 26000  00A6F8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26001  00A6FA  6FC6               	movwf	??_display_prepare& (0+255),b
 26002  00A6FC  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26003  00A6FE  0E06               	movlw	6
 26004  00A700  27C6               	addwf	??_display_prepare& (0+255),f,b
 26005  00A702  0E00               	movlw	0
 26006  00A704  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26007  00A706  0E56               	movlw	low (_display_content+20)
 26008  00A708  25C6               	addwf	??_display_prepare& (0+255),w,b
 26009  00A70A  6ED9               	movwf	fsr2l,c
 26010  00A70C  0E02               	movlw	high (_display_content+20)
 26011  00A70E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26012  00A710  6EDA               	movwf	fsr2h,c
 26013  00A712  0E28               	movlw	40
 26014  00A714  6EDF               	movwf	indf2,c
 26015                           
 26016                           ; BSR set to: 0
 26017                           ;display.c: 398: space = cntr + 7;
 26018  00A716  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26019  00A718  0F07               	addlw	7
 26020  00A71A  6FD2               	movwf	display_prepare@space& (0+255),b
 26021                           
 26022                           ; BSR set to: 0
 26023                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26024  00A71C  C173  F0B7         	movff	_os+13,__display_itoa_long@value	;volatile
 26025  00A720  C174  F0B8         	movff	_os+14,__display_itoa_long@value+1	;volatile
 26026  00A724  6BB9               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26027  00A726  6BBA               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26028  00A728  0E02               	movlw	2
 26029  00A72A  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26030  00A72C  0EC8               	movlw	low display_prepare@temp
 26031  00A72E  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26032  00A730  0E00               	movlw	high display_prepare@temp
 26033  00A732  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26034  00A734  EC6D  F087         	call	__display_itoa_long	;wreg free
 26035                           
 26036                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 26037  00A738  0E00               	movlw	0
 26038  00A73A  0100               	movlb	0	; () banked
 26039  00A73C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26040  00A73E  D018               	goto	l1433
 26041  00A740                     
 26042                           ; BSR set to: 0
 26043                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 26044                           
 26045                           ; BSR set to: 0
 26046  00A740  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26047  00A742  0D01               	mullw	1
 26048  00A744  0EC8               	movlw	low display_prepare@temp
 26049  00A746  24F3               	addwf	prodl,w,c
 26050  00A748  6ED9               	movwf	fsr2l,c
 26051  00A74A  0E00               	movlw	high display_prepare@temp
 26052  00A74C  20F4               	addwfc	prodh,w,c
 26053  00A74E  6EDA               	movwf	fsr2h,c
 26054  00A750  51D2               	movf	display_prepare@space& (0+255),w,b
 26055  00A752  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26056  00A756  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26057  00A758  27C6               	addwf	??_display_prepare& (0+255),f,b
 26058  00A75A  0E00               	movlw	0
 26059  00A75C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26060  00A75E  0E56               	movlw	low (_display_content+20)
 26061  00A760  25C6               	addwf	??_display_prepare& (0+255),w,b
 26062  00A762  6EE1               	movwf	fsr1l,c
 26063  00A764  0E02               	movlw	high (_display_content+20)
 26064  00A766  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26065  00A768  6EE2               	movwf	fsr1h,c
 26066  00A76A  CFDF FFE7          	movff	indf2,indf1
 26067                           
 26068                           ; BSR set to: 0
 26069  00A76E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26070  00A770                     l1433:
 26071                           
 26072                           ; BSR set to: 0
 26073                           
 26074                           ; BSR set to: 0
 26075  00A770  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26076  00A772  0D01               	mullw	1
 26077  00A774  0EC8               	movlw	low display_prepare@temp
 26078  00A776  24F3               	addwf	prodl,w,c
 26079  00A778  6ED9               	movwf	fsr2l,c
 26080  00A77A  0E00               	movlw	high display_prepare@temp
 26081  00A77C  20F4               	addwfc	prodh,w,c
 26082  00A77E  6EDA               	movwf	fsr2h,c
 26083  00A780  50DF               	movf	indf2,w,c
 26084  00A782  A4D8               	btfss	status,2,c
 26085  00A784  D7DD               	goto	l1434
 26086                           
 26087                           ; BSR set to: 0
 26088                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 26089                           
 26090                           ; BSR set to: 0
 26091  00A786  51D2               	movf	display_prepare@space& (0+255),w,b
 26092  00A788  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26093  00A78C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26094  00A78E  27C6               	addwf	??_display_prepare& (0+255),f,b
 26095  00A790  0E00               	movlw	0
 26096  00A792  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26097  00A794  0E56               	movlw	low (_display_content+20)
 26098  00A796  25C6               	addwf	??_display_prepare& (0+255),w,b
 26099  00A798  6ED9               	movwf	fsr2l,c
 26100  00A79A  0E02               	movlw	high (_display_content+20)
 26101  00A79C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26102  00A79E  6EDA               	movwf	fsr2h,c
 26103  00A7A0  0E01               	movlw	1
 26104  00A7A2  6EDF               	movwf	indf2,c
 26105                           
 26106                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 26107  00A7A4  51D2               	movf	display_prepare@space& (0+255),w,b
 26108  00A7A6  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26109  00A7AA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26110  00A7AC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26111  00A7AE  0E00               	movlw	0
 26112  00A7B0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26113  00A7B2  0E01               	movlw	1
 26114  00A7B4  27C6               	addwf	??_display_prepare& (0+255),f,b
 26115  00A7B6  0E00               	movlw	0
 26116  00A7B8  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26117  00A7BA  0E56               	movlw	low (_display_content+20)
 26118  00A7BC  25C6               	addwf	??_display_prepare& (0+255),w,b
 26119  00A7BE  6ED9               	movwf	fsr2l,c
 26120  00A7C0  0E02               	movlw	high (_display_content+20)
 26121  00A7C2  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26122  00A7C4  6EDA               	movwf	fsr2h,c
 26123  00A7C6  0E29               	movlw	41
 26124  00A7C8  6EDF               	movwf	indf2,c
 26125                           
 26126                           ; BSR set to: 0
 26127                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 26128  00A7CA  C17F  F08F         	movff	_os+25,__display_signed_itoa@value	;volatile
 26129  00A7CE  C180  F090         	movff	_os+26,__display_signed_itoa@value+1	;volatile
 26130  00A7D2  0EC8               	movlw	low display_prepare@temp
 26131  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 26132  00A7D6  0E00               	movlw	high display_prepare@temp
 26133  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 26134  00A7DA  ECB8  F0A9         	call	__display_signed_itoa	;wreg free
 26135                           
 26136                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 26137  00A7DE  0E00               	movlw	0
 26138  00A7E0  0100               	movlb	0	; () banked
 26139  00A7E2  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26140  00A7E4  D018               	goto	l1436
 26141  00A7E6                     
 26142                           ; BSR set to: 0
 26143                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 26144                           
 26145                           ; BSR set to: 0
 26146  00A7E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26147  00A7E8  0D01               	mullw	1
 26148  00A7EA  0EC8               	movlw	low display_prepare@temp
 26149  00A7EC  24F3               	addwf	prodl,w,c
 26150  00A7EE  6ED9               	movwf	fsr2l,c
 26151  00A7F0  0E00               	movlw	high display_prepare@temp
 26152  00A7F2  20F4               	addwfc	prodh,w,c
 26153  00A7F4  6EDA               	movwf	fsr2h,c
 26154  00A7F6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26155  00A7F8  6FC6               	movwf	??_display_prepare& (0+255),b
 26156  00A7FA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26157  00A7FC  0E0B               	movlw	11
 26158  00A7FE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26159  00A800  0E00               	movlw	0
 26160  00A802  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26161  00A804  0E6A               	movlw	low (_display_content+40)
 26162  00A806  25C6               	addwf	??_display_prepare& (0+255),w,b
 26163  00A808  6EE1               	movwf	fsr1l,c
 26164  00A80A  0E02               	movlw	high (_display_content+40)
 26165  00A80C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26166  00A80E  6EE2               	movwf	fsr1h,c
 26167  00A810  CFDF FFE7          	movff	indf2,indf1
 26168                           
 26169                           ; BSR set to: 0
 26170  00A814  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26171  00A816                     l1436:
 26172                           
 26173                           ; BSR set to: 0
 26174                           
 26175                           ; BSR set to: 0
 26176  00A816  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26177  00A818  0D01               	mullw	1
 26178  00A81A  0EC8               	movlw	low display_prepare@temp
 26179  00A81C  24F3               	addwf	prodl,w,c
 26180  00A81E  6ED9               	movwf	fsr2l,c
 26181  00A820  0E00               	movlw	high display_prepare@temp
 26182  00A822  20F4               	addwfc	prodh,w,c
 26183  00A824  6EDA               	movwf	fsr2h,c
 26184  00A826  50DF               	movf	indf2,w,c
 26185  00A828  B4D8               	btfsc	status,2,c
 26186  00A82A  D3A6               	goto	l1399
 26187  00A82C  D7DC               	goto	l1437
 26188  00A82E                     
 26189                           ; BSR set to: 0
 26190                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 26191                           
 26192                           ; BSR set to: 0
 26193  00A82E  0E42               	movlw	low _display_content
 26194  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 26195  00A832  0E02               	movlw	high _display_content
 26196  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26197  00A836  0EDE               	movlw	low _dc_arc1
 26198  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 26199  00A83A  0E9E               	movlw	high _dc_arc1
 26200  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26201  00A83E  0E00               	movlw	0
 26202  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26203  00A842  0E50               	movlw	80
 26204  00A844  6F64               	movwf	memcpy@n& (0+255),b
 26205  00A846  ECEF  F0A3         	call	_memcpy	;wreg free
 26206                           
 26207                           ;display.c: 416: switch(os.displayState)
 26208  00A84A  D008               	goto	l1440
 26209  00A84C                     
 26210                           ;display.c: 419: display_content[2][12] = '>';
 26211  00A84C  0E3E               	movlw	62
 26212  00A84E  0102               	movlb	2	; () banked
 26213  00A850  6F76               	movwf	(_display_content+52)& (0+255),b
 26214                           
 26215                           ;display.c: 420: break;
 26216  00A852  D00C               	goto	l1442
 26217  00A854                     
 26218                           ;display.c: 422: display_content[3][12] = '>';
 26219                           
 26220                           ; BSR set to: 2
 26221  00A854  0E3E               	movlw	62
 26222  00A856  0102               	movlb	2	; () banked
 26223  00A858  6F8A               	movwf	(_display_content+72)& (0+255),b
 26224                           
 26225                           ; BSR set to: 2
 26226                           ;display.c: 424: }
 26227                           
 26228                           ;display.c: 423: break;
 26229  00A85A  D008               	goto	l1442
 26230  00A85C                     l1440:
 26231                           
 26232                           ; BSR set to: 2
 26233  00A85C  0101               	movlb	1	; () banked
 26234  00A85E  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 26235                           
 26236                           ; Switch size 1, requested type "space"
 26237                           ; Number of cases is 2, Range of values is 81 to 82
 26238                           ; switch strategies available:
 26239                           ; Name         Instructions Cycles
 26240                           ; simple_byte            7     4 (average)
 26241                           ;	Chosen strategy is simple_byte
 26242  00A860  0A51               	xorlw	81	; case 81
 26243  00A862  B4D8               	btfsc	status,2,c
 26244  00A864  D7F3               	goto	l1441
 26245  00A866  0A03               	xorlw	3	; case 82
 26246  00A868  B4D8               	btfsc	status,2,c
 26247  00A86A  D7F4               	goto	l1443
 26248  00A86C                     l1442:
 26249                           
 26250                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 26251                           
 26252                           ; BSR set to: 1
 26253  00A86C  C183  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26254  00A870  C184  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26255  00A874  C185  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26256  00A878  C186  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26257  00A87C  0E02               	movlw	2
 26258  00A87E  0100               	movlb	0	; () banked
 26259  00A880  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26260  00A882  0EC8               	movlw	low display_prepare@temp
 26261  00A884  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26262  00A886  0E00               	movlw	high display_prepare@temp
 26263  00A888  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26264  00A88A  EC6D  F087         	call	__display_itoa_long	;wreg free
 26265                           
 26266                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 26267  00A88E  0E00               	movlw	0
 26268  00A890  0100               	movlb	0	; () banked
 26269  00A892  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26270  00A894  D018               	goto	l1444
 26271  00A896                     
 26272                           ; BSR set to: 0
 26273                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 26274                           
 26275                           ; BSR set to: 0
 26276  00A896  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26277  00A898  0D01               	mullw	1
 26278  00A89A  0EC8               	movlw	low display_prepare@temp
 26279  00A89C  24F3               	addwf	prodl,w,c
 26280  00A89E  6ED9               	movwf	fsr2l,c
 26281  00A8A0  0E00               	movlw	high display_prepare@temp
 26282  00A8A2  20F4               	addwfc	prodh,w,c
 26283  00A8A4  6EDA               	movwf	fsr2h,c
 26284  00A8A6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26285  00A8A8  6FC6               	movwf	??_display_prepare& (0+255),b
 26286  00A8AA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26287  00A8AC  0E0A               	movlw	10
 26288  00A8AE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26289  00A8B0  0E00               	movlw	0
 26290  00A8B2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26291  00A8B4  0E56               	movlw	low (_display_content+20)
 26292  00A8B6  25C6               	addwf	??_display_prepare& (0+255),w,b
 26293  00A8B8  6EE1               	movwf	fsr1l,c
 26294  00A8BA  0E02               	movlw	high (_display_content+20)
 26295  00A8BC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26296  00A8BE  6EE2               	movwf	fsr1h,c
 26297  00A8C0  CFDF FFE7          	movff	indf2,indf1
 26298                           
 26299                           ; BSR set to: 0
 26300  00A8C4  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26301  00A8C6                     l1444:
 26302                           
 26303                           ; BSR set to: 0
 26304                           
 26305                           ; BSR set to: 0
 26306  00A8C6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26307  00A8C8  0D01               	mullw	1
 26308  00A8CA  0EC8               	movlw	low display_prepare@temp
 26309  00A8CC  24F3               	addwf	prodl,w,c
 26310  00A8CE  6ED9               	movwf	fsr2l,c
 26311  00A8D0  0E00               	movlw	high display_prepare@temp
 26312  00A8D2  20F4               	addwfc	prodh,w,c
 26313  00A8D4  6EDA               	movwf	fsr2h,c
 26314  00A8D6  50DF               	movf	indf2,w,c
 26315  00A8D8  A4D8               	btfss	status,2,c
 26316  00A8DA  D7DD               	goto	l1445
 26317                           
 26318                           ; BSR set to: 0
 26319                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 26320                           
 26321                           ; BSR set to: 0
 26322  00A8DC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26323  00A8DE  6FC6               	movwf	??_display_prepare& (0+255),b
 26324  00A8E0  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26325  00A8E2  0E0A               	movlw	10
 26326  00A8E4  27C6               	addwf	??_display_prepare& (0+255),f,b
 26327  00A8E6  0E00               	movlw	0
 26328  00A8E8  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26329  00A8EA  0E56               	movlw	low (_display_content+20)
 26330  00A8EC  25C6               	addwf	??_display_prepare& (0+255),w,b
 26331  00A8EE  6ED9               	movwf	fsr2l,c
 26332  00A8F0  0E02               	movlw	high (_display_content+20)
 26333  00A8F2  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26334  00A8F4  6EDA               	movwf	fsr2h,c
 26335  00A8F6  0E01               	movlw	1
 26336  00A8F8  6EDF               	movwf	indf2,c
 26337                           
 26338                           ; BSR set to: 0
 26339                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 26340  00A8FA  C181  F09F         	movff	_os+27,__display_itoa@value	;volatile
 26341  00A8FE  C182  F0A0         	movff	_os+28,__display_itoa@value+1	;volatile
 26342  00A902  0E02               	movlw	2
 26343  00A904  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26344  00A906  0EC8               	movlw	low display_prepare@temp
 26345  00A908  6FA2               	movwf	__display_itoa@text& (0+255),b
 26346  00A90A  0E00               	movlw	high display_prepare@temp
 26347  00A90C  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26348  00A90E  ECD3  F071         	call	__display_itoa	;wreg free
 26349                           
 26350                           ;display.c: 436: if(os.arc_step_size>999)
 26351  00A912  0EE8               	movlw	232
 26352  00A914  0101               	movlb	1	; () banked
 26353  00A916  5D81               	subwf	(_os+27)& (0+255),w,b	;volatile
 26354  00A918  0E03               	movlw	3
 26355  00A91A  5982               	subwfb	(_os+28)& (0+255),w,b	;volatile
 26356  00A91C  A0D8               	btfss	status,0,c
 26357  00A91E  D002               	goto	l1447
 26358                           
 26359                           ; BSR set to: 1
 26360                           ;display.c: 437: space = 0;
 26361  00A920  0E00               	movlw	0
 26362  00A922  D001               	goto	L24
 26363  00A924                     l1447:
 26364                           
 26365                           ;display.c: 438: else;display.c: 439: space = 1;
 26366                           
 26367                           ; BSR set to: 0
 26368  00A924  0E01               	movlw	1
 26369  00A926                     L24:
 26370  00A926  0100               	movlb	0	; () banked
 26371  00A928  6FD2               	movwf	display_prepare@space& (0+255),b
 26372                           
 26373                           ; BSR set to: 0
 26374                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 26375  00A92A  0E00               	movlw	0
 26376  00A92C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26377  00A92E  D018               	goto	l1449
 26378  00A930                     
 26379                           ; BSR set to: 0
 26380                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 26381                           
 26382                           ; BSR set to: 0
 26383  00A930  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26384  00A932  0D01               	mullw	1
 26385  00A934  0EC8               	movlw	low display_prepare@temp
 26386  00A936  24F3               	addwf	prodl,w,c
 26387  00A938  6ED9               	movwf	fsr2l,c
 26388  00A93A  0E00               	movlw	high display_prepare@temp
 26389  00A93C  20F4               	addwfc	prodh,w,c
 26390  00A93E  6EDA               	movwf	fsr2h,c
 26391  00A940  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26392  00A942  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26393  00A946  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26394  00A948  27C6               	addwf	??_display_prepare& (0+255),f,b
 26395  00A94A  0E00               	movlw	0
 26396  00A94C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26397  00A94E  0E7E               	movlw	low (_display_content+60)
 26398  00A950  25C6               	addwf	??_display_prepare& (0+255),w,b
 26399  00A952  6EE1               	movwf	fsr1l,c
 26400  00A954  0E02               	movlw	high (_display_content+60)
 26401  00A956  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26402  00A958  6EE2               	movwf	fsr1h,c
 26403  00A95A  CFDF FFE7          	movff	indf2,indf1
 26404                           
 26405                           ; BSR set to: 0
 26406  00A95E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26407  00A960                     l1449:
 26408                           
 26409                           ; BSR set to: 0
 26410                           
 26411                           ; BSR set to: 0
 26412  00A960  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26413  00A962  0D01               	mullw	1
 26414  00A964  0EC8               	movlw	low display_prepare@temp
 26415  00A966  24F3               	addwf	prodl,w,c
 26416  00A968  6ED9               	movwf	fsr2l,c
 26417  00A96A  0E00               	movlw	high display_prepare@temp
 26418  00A96C  20F4               	addwfc	prodh,w,c
 26419  00A96E  6EDA               	movwf	fsr2h,c
 26420  00A970  50DF               	movf	indf2,w,c
 26421  00A972  A4D8               	btfss	status,2,c
 26422  00A974  D7DD               	goto	l1450
 26423                           
 26424                           ; BSR set to: 0
 26425                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 26426                           
 26427                           ; BSR set to: 0
 26428  00A976  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26429  00A978  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26430  00A97C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26431  00A97E  27C6               	addwf	??_display_prepare& (0+255),f,b
 26432  00A980  0E00               	movlw	0
 26433  00A982  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26434  00A984  0E7E               	movlw	low (_display_content+60)
 26435  00A986  25C6               	addwf	??_display_prepare& (0+255),w,b
 26436  00A988  6ED9               	movwf	fsr2l,c
 26437  00A98A  0E02               	movlw	high (_display_content+60)
 26438  00A98C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26439  00A98E  6EDA               	movwf	fsr2h,c
 26440  00A990  0E01               	movlw	1
 26441  00A992  D25B               	goto	L27
 26442  00A994                     
 26443                           ; BSR set to: 0
 26444                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 26445                           
 26446                           ; BSR set to: 0
 26447  00A994  0E42               	movlw	low _display_content
 26448  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 26449  00A998  0E02               	movlw	high _display_content
 26450  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26451  00A99C  0E8E               	movlw	low _dc_arc2
 26452  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 26453  00A9A0  0E9E               	movlw	high _dc_arc2
 26454  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26455  00A9A4  0E00               	movlw	0
 26456  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26457  00A9A8  0E50               	movlw	80
 26458  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 26459  00A9AC  ECEF  F0A3         	call	_memcpy	;wreg free
 26460                           
 26461                           ;display.c: 450: switch(os.displayState)
 26462  00A9B0  D025               	goto	l1453
 26463  00A9B2                     
 26464                           ;display.c: 453: display_content[2][6] = 'W';
 26465  00A9B2  0E57               	movlw	87
 26466  00A9B4  0102               	movlb	2	; () banked
 26467  00A9B6  6F70               	movwf	(_display_content+46)& (0+255),b
 26468                           
 26469                           ;display.c: 454: display_content[2][7] = ' ';
 26470  00A9B8  0E20               	movlw	32
 26471  00A9BA  6F71               	movwf	(_display_content+47)& (0+255),b
 26472                           
 26473                           ;display.c: 455: break;
 26474  00A9BC  D027               	goto	l1455
 26475  00A9BE                     
 26476                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 26477                           
 26478                           ; BSR set to: 2
 26479  00A9BE  0E6A               	movlw	low (_display_content+40)
 26480  00A9C0  0100               	movlb	0	; () banked
 26481  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 26482  00A9C4  0E02               	movlw	high (_display_content+40)
 26483  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26484  00A9C8  0E14               	movlw	low STR_1
 26485  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 26486  00A9CC  0EA3               	movlw	high STR_1
 26487  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26488  00A9D0  0E00               	movlw	0
 26489  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26490  00A9D4  0E08               	movlw	8
 26491  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 26492  00A9D8  ECEF  F0A3         	call	_memcpy	;wreg free
 26493                           
 26494                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 26495  00A9DC  0E7E               	movlw	low (_display_content+60)
 26496  00A9DE  0100               	movlb	0	; () banked
 26497  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26498  00A9E2  0E02               	movlw	high (_display_content+60)
 26499  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26500  00A9E6  0E1D               	movlw	low STR_2
 26501  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26502  00A9EA  0EA3               	movlw	high STR_2
 26503  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26504  00A9EE  0E00               	movlw	0
 26505  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26506  00A9F2  0E06               	movlw	6
 26507  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26508  00A9F6  ECEF  F0A3         	call	_memcpy	;wreg free
 26509                           
 26510                           ;display.c: 460: }
 26511                           
 26512                           ;display.c: 459: break;
 26513  00A9FA  D008               	goto	l1455
 26514  00A9FC                     l1453:
 26515  00A9FC  0101               	movlb	1	; () banked
 26516  00A9FE  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 26517                           
 26518                           ; Switch size 1, requested type "space"
 26519                           ; Number of cases is 2, Range of values is 98 to 99
 26520                           ; switch strategies available:
 26521                           ; Name         Instructions Cycles
 26522                           ; simple_byte            7     4 (average)
 26523                           ;	Chosen strategy is simple_byte
 26524  00AA00  0A62               	xorlw	98	; case 98
 26525  00AA02  B4D8               	btfsc	status,2,c
 26526  00AA04  D7DC               	goto	l1456
 26527  00AA06  0A01               	xorlw	1	; case 99
 26528  00AA08  B4D8               	btfsc	status,2,c
 26529  00AA0A  D7D3               	goto	l1454
 26530  00AA0C                     l1455:
 26531                           
 26532                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 26533                           
 26534                           ; BSR set to: 1
 26535  00AA0C  C183  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26536  00AA10  C184  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26537  00AA14  C185  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26538  00AA18  C186  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26539  00AA1C  0E02               	movlw	2
 26540  00AA1E  0100               	movlb	0	; () banked
 26541  00AA20  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26542  00AA22  0EC8               	movlw	low display_prepare@temp
 26543  00AA24  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26544  00AA26  0E00               	movlw	high display_prepare@temp
 26545  00AA28  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26546  00AA2A  EC6D  F087         	call	__display_itoa_long	;wreg free
 26547                           
 26548                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 26549  00AA2E  0E00               	movlw	0
 26550  00AA30  0100               	movlb	0	; () banked
 26551  00AA32  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26552  00AA34  D018               	goto	l1457
 26553  00AA36                     
 26554                           ; BSR set to: 0
 26555                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 26556                           
 26557                           ; BSR set to: 0
 26558  00AA36  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26559  00AA38  0D01               	mullw	1
 26560  00AA3A  0EC8               	movlw	low display_prepare@temp
 26561  00AA3C  24F3               	addwf	prodl,w,c
 26562  00AA3E  6ED9               	movwf	fsr2l,c
 26563  00AA40  0E00               	movlw	high display_prepare@temp
 26564  00AA42  20F4               	addwfc	prodh,w,c
 26565  00AA44  6EDA               	movwf	fsr2h,c
 26566  00AA46  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26567  00AA48  6FC6               	movwf	??_display_prepare& (0+255),b
 26568  00AA4A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26569  00AA4C  0E0A               	movlw	10
 26570  00AA4E  27C6               	addwf	??_display_prepare& (0+255),f,b
 26571  00AA50  0E00               	movlw	0
 26572  00AA52  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26573  00AA54  0E42               	movlw	low _display_content
 26574  00AA56  25C6               	addwf	??_display_prepare& (0+255),w,b
 26575  00AA58  6EE1               	movwf	fsr1l,c
 26576  00AA5A  0E02               	movlw	high _display_content
 26577  00AA5C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26578  00AA5E  6EE2               	movwf	fsr1h,c
 26579  00AA60  CFDF FFE7          	movff	indf2,indf1
 26580                           
 26581                           ; BSR set to: 0
 26582  00AA64  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26583  00AA66                     l1457:
 26584                           
 26585                           ; BSR set to: 0
 26586                           
 26587                           ; BSR set to: 0
 26588  00AA66  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26589  00AA68  0D01               	mullw	1
 26590  00AA6A  0EC8               	movlw	low display_prepare@temp
 26591  00AA6C  24F3               	addwf	prodl,w,c
 26592  00AA6E  6ED9               	movwf	fsr2l,c
 26593  00AA70  0E00               	movlw	high display_prepare@temp
 26594  00AA72  20F4               	addwfc	prodh,w,c
 26595  00AA74  6EDA               	movwf	fsr2h,c
 26596  00AA76  50DF               	movf	indf2,w,c
 26597  00AA78  A4D8               	btfss	status,2,c
 26598  00AA7A  D7DD               	goto	l1458
 26599                           
 26600                           ; BSR set to: 0
 26601                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 26602                           
 26603                           ; BSR set to: 0
 26604  00AA7C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26605  00AA7E  6FC6               	movwf	??_display_prepare& (0+255),b
 26606  00AA80  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26607  00AA82  0E0A               	movlw	10
 26608  00AA84  27C6               	addwf	??_display_prepare& (0+255),f,b
 26609  00AA86  0E00               	movlw	0
 26610  00AA88  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26611  00AA8A  0E42               	movlw	low _display_content
 26612  00AA8C  25C6               	addwf	??_display_prepare& (0+255),w,b
 26613  00AA8E  6ED9               	movwf	fsr2l,c
 26614  00AA90  0E02               	movlw	high _display_content
 26615  00AA92  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26616  00AA94  6EDA               	movwf	fsr2h,c
 26617  00AA96  0E01               	movlw	1
 26618  00AA98  6EDF               	movwf	indf2,c
 26619                           
 26620                           ; BSR set to: 0
 26621                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26622  00AA9A  C173  F0B7         	movff	_os+13,__display_itoa_long@value	;volatile
 26623  00AA9E  C174  F0B8         	movff	_os+14,__display_itoa_long@value+1	;volatile
 26624  00AAA2  6BB9               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26625  00AAA4  6BBA               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26626  00AAA6  0E02               	movlw	2
 26627  00AAA8  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26628  00AAAA  0EC8               	movlw	low display_prepare@temp
 26629  00AAAC  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26630  00AAAE  0E00               	movlw	high display_prepare@temp
 26631  00AAB0  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26632  00AAB2  EC6D  F087         	call	__display_itoa_long	;wreg free
 26633                           
 26634                           ;display.c: 472: space = 6-strlen(temp);
 26635  00AAB6  0EC8               	movlw	low display_prepare@temp
 26636  00AAB8  0100               	movlb	0	; () banked
 26637  00AABA  6F60               	movwf	strlen@s& (0+255),b
 26638  00AABC  0E00               	movlw	high display_prepare@temp
 26639  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 26640  00AAC0  EC80  F0AA         	call	_strlen	;wreg free
 26641  00AAC4  0100               	movlb	0	; () banked
 26642  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 26643  00AAC8  0800               	sublw	0
 26644  00AACA  0F06               	addlw	6
 26645  00AACC  6FD2               	movwf	display_prepare@space& (0+255),b
 26646                           
 26647                           ; BSR set to: 0
 26648                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 26649  00AACE  0E00               	movlw	0
 26650  00AAD0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26651  00AAD2  D01C               	goto	l1460
 26652  00AAD4                     
 26653                           ; BSR set to: 0
 26654                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 26655                           
 26656                           ; BSR set to: 0
 26657  00AAD4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26658  00AAD6  0D01               	mullw	1
 26659  00AAD8  0EC8               	movlw	low display_prepare@temp
 26660  00AADA  24F3               	addwf	prodl,w,c
 26661  00AADC  6ED9               	movwf	fsr2l,c
 26662  00AADE  0E00               	movlw	high display_prepare@temp
 26663  00AAE0  20F4               	addwfc	prodh,w,c
 26664  00AAE2  6EDA               	movwf	fsr2h,c
 26665  00AAE4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26666  00AAE6  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26667  00AAEA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26668  00AAEC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26669  00AAEE  0E00               	movlw	0
 26670  00AAF0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26671  00AAF2  0E0D               	movlw	13
 26672  00AAF4  27C6               	addwf	??_display_prepare& (0+255),f,b
 26673  00AAF6  0E00               	movlw	0
 26674  00AAF8  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26675  00AAFA  0E56               	movlw	low (_display_content+20)
 26676  00AAFC  25C6               	addwf	??_display_prepare& (0+255),w,b
 26677  00AAFE  6EE1               	movwf	fsr1l,c
 26678  00AB00  0E02               	movlw	high (_display_content+20)
 26679  00AB02  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26680  00AB04  6EE2               	movwf	fsr1h,c
 26681  00AB06  CFDF FFE7          	movff	indf2,indf1
 26682                           
 26683                           ; BSR set to: 0
 26684  00AB0A  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26685  00AB0C                     l1460:
 26686                           
 26687                           ; BSR set to: 0
 26688                           
 26689                           ; BSR set to: 0
 26690  00AB0C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26691  00AB0E  0D01               	mullw	1
 26692  00AB10  0EC8               	movlw	low display_prepare@temp
 26693  00AB12  24F3               	addwf	prodl,w,c
 26694  00AB14  6ED9               	movwf	fsr2l,c
 26695  00AB16  0E00               	movlw	high display_prepare@temp
 26696  00AB18  20F4               	addwfc	prodh,w,c
 26697  00AB1A  6EDA               	movwf	fsr2h,c
 26698  00AB1C  50DF               	movf	indf2,w,c
 26699  00AB1E  A4D8               	btfss	status,2,c
 26700  00AB20  D7D9               	goto	l1461
 26701                           
 26702                           ; BSR set to: 0
 26703                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26704                           
 26705                           ; BSR set to: 0
 26706  00AB22  C187  F09D         	movff	_os+33,motor_speed_from_index@speed_index	;volatile
 26707  00AB26  C188  F09E         	movff	_os+34,motor_speed_from_index@speed_index+1	;volatile
 26708  00AB2A  EC89  F0AE         	call	_motor_speed_from_index	;wreg free
 26709  00AB2E  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 26710  00AB32  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26711  00AB36  0E02               	movlw	2
 26712  00AB38  0100               	movlb	0	; () banked
 26713  00AB3A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26714  00AB3C  0EC8               	movlw	low display_prepare@temp
 26715  00AB3E  6FA2               	movwf	__display_itoa@text& (0+255),b
 26716  00AB40  0E00               	movlw	high display_prepare@temp
 26717  00AB42  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26718  00AB44  ECD3  F071         	call	__display_itoa	;wreg free
 26719                           
 26720                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 26721  00AB48  0E00               	movlw	0
 26722  00AB4A  0100               	movlb	0	; () banked
 26723  00AB4C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26724  00AB4E  D018               	goto	l1463
 26725  00AB50                     
 26726                           ; BSR set to: 0
 26727                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 26728                           
 26729                           ; BSR set to: 0
 26730  00AB50  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26731  00AB52  0D01               	mullw	1
 26732  00AB54  0EC8               	movlw	low display_prepare@temp
 26733  00AB56  24F3               	addwf	prodl,w,c
 26734  00AB58  6ED9               	movwf	fsr2l,c
 26735  00AB5A  0E00               	movlw	high display_prepare@temp
 26736  00AB5C  20F4               	addwfc	prodh,w,c
 26737  00AB5E  6EDA               	movwf	fsr2h,c
 26738  00AB60  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26739  00AB62  6FC6               	movwf	??_display_prepare& (0+255),b
 26740  00AB64  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26741  00AB66  0E0B               	movlw	11
 26742  00AB68  27C6               	addwf	??_display_prepare& (0+255),f,b
 26743  00AB6A  0E00               	movlw	0
 26744  00AB6C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26745  00AB6E  0E7E               	movlw	low (_display_content+60)
 26746  00AB70  25C6               	addwf	??_display_prepare& (0+255),w,b
 26747  00AB72  6EE1               	movwf	fsr1l,c
 26748  00AB74  0E02               	movlw	high (_display_content+60)
 26749  00AB76  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26750  00AB78  6EE2               	movwf	fsr1h,c
 26751  00AB7A  CFDF FFE7          	movff	indf2,indf1
 26752                           
 26753                           ; BSR set to: 0
 26754  00AB7E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26755  00AB80                     l1463:
 26756                           
 26757                           ; BSR set to: 0
 26758                           
 26759                           ; BSR set to: 0
 26760  00AB80  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26761  00AB82  0D01               	mullw	1
 26762  00AB84  0EC8               	movlw	low display_prepare@temp
 26763  00AB86  24F3               	addwf	prodl,w,c
 26764  00AB88  6ED9               	movwf	fsr2l,c
 26765  00AB8A  0E00               	movlw	high display_prepare@temp
 26766  00AB8C  20F4               	addwfc	prodh,w,c
 26767  00AB8E  6EDA               	movwf	fsr2h,c
 26768  00AB90  50DF               	movf	indf2,w,c
 26769  00AB92  A4D8               	btfss	status,2,c
 26770  00AB94  D7DD               	goto	l1464
 26771  00AB96  D12D               	goto	L89
 26772  00AB98                     
 26773                           ; BSR set to: 0
 26774                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 26775                           
 26776                           ; BSR set to: 0
 26777  00AB98  0E42               	movlw	low _display_content
 26778  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 26779  00AB9C  0E02               	movlw	high _display_content
 26780  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26781  00ABA0  0E3E               	movlw	low _dc_zero
 26782  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 26783  00ABA4  0E9E               	movlw	high _dc_zero
 26784  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26785  00ABA8  0E00               	movlw	0
 26786  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26787  00ABAC  0E50               	movlw	80
 26788  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 26789  00ABB0  ECEF  F0A3         	call	_memcpy	;wreg free
 26790                           
 26791                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26792  00ABB4  C173  F0B7         	movff	_os+13,__display_itoa_long@value	;volatile
 26793  00ABB8  C174  F0B8         	movff	_os+14,__display_itoa_long@value+1	;volatile
 26794  00ABBC  0100               	movlb	0	; () banked
 26795  00ABBE  6BB9               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26796  00ABC0  6BBA               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26797  00ABC2  0E02               	movlw	2
 26798  00ABC4  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26799  00ABC6  0EC8               	movlw	low display_prepare@temp
 26800  00ABC8  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26801  00ABCA  0E00               	movlw	high display_prepare@temp
 26802  00ABCC  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26803  00ABCE  EC6D  F087         	call	__display_itoa_long	;wreg free
 26804                           
 26805                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 26806  00ABD2  0E00               	movlw	0
 26807  00ABD4  0100               	movlb	0	; () banked
 26808  00ABD6  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26809  00ABD8  D018               	goto	l1467
 26810  00ABDA                     
 26811                           ; BSR set to: 0
 26812                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 26813                           
 26814                           ; BSR set to: 0
 26815  00ABDA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26816  00ABDC  0D01               	mullw	1
 26817  00ABDE  0EC8               	movlw	low display_prepare@temp
 26818  00ABE0  24F3               	addwf	prodl,w,c
 26819  00ABE2  6ED9               	movwf	fsr2l,c
 26820  00ABE4  0E00               	movlw	high display_prepare@temp
 26821  00ABE6  20F4               	addwfc	prodh,w,c
 26822  00ABE8  6EDA               	movwf	fsr2h,c
 26823  00ABEA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26824  00ABEC  6FC6               	movwf	??_display_prepare& (0+255),b
 26825  00ABEE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26826  00ABF0  0E0D               	movlw	13
 26827  00ABF2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26828  00ABF4  0E00               	movlw	0
 26829  00ABF6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26830  00ABF8  0E56               	movlw	low (_display_content+20)
 26831  00ABFA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26832  00ABFC  6EE1               	movwf	fsr1l,c
 26833  00ABFE  0E02               	movlw	high (_display_content+20)
 26834  00AC00  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26835  00AC02  6EE2               	movwf	fsr1h,c
 26836  00AC04  CFDF FFE7          	movff	indf2,indf1
 26837                           
 26838                           ; BSR set to: 0
 26839  00AC08  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26840  00AC0A                     l1467:
 26841                           
 26842                           ; BSR set to: 0
 26843                           
 26844                           ; BSR set to: 0
 26845  00AC0A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26846  00AC0C  0D01               	mullw	1
 26847  00AC0E  0EC8               	movlw	low display_prepare@temp
 26848  00AC10  24F3               	addwf	prodl,w,c
 26849  00AC12  6ED9               	movwf	fsr2l,c
 26850  00AC14  0E00               	movlw	high display_prepare@temp
 26851  00AC16  20F4               	addwfc	prodh,w,c
 26852  00AC18  6EDA               	movwf	fsr2h,c
 26853  00AC1A  50DF               	movf	indf2,w,c
 26854  00AC1C  A4D8               	btfss	status,2,c
 26855  00AC1E  D7DD               	goto	l1468
 26856                           
 26857                           ; BSR set to: 0
 26858                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 26859                           
 26860                           ; BSR set to: 0
 26861  00AC20  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26862  00AC22  6FC6               	movwf	??_display_prepare& (0+255),b
 26863  00AC24  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26864  00AC26  0E0D               	movlw	13
 26865  00AC28  27C6               	addwf	??_display_prepare& (0+255),f,b
 26866  00AC2A  0E00               	movlw	0
 26867  00AC2C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26868  00AC2E  0E56               	movlw	low (_display_content+20)
 26869  00AC30  25C6               	addwf	??_display_prepare& (0+255),w,b
 26870  00AC32  6ED9               	movwf	fsr2l,c
 26871  00AC34  0E02               	movlw	high (_display_content+20)
 26872  00AC36  D6AA               	goto	L36
 26873  00AC38                     
 26874                           ; BSR set to: 0
 26875                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 26876                           
 26877                           ; BSR set to: 0
 26878  00AC38  0E42               	movlw	low _display_content
 26879  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 26880  00AC3C  0E02               	movlw	high _display_content
 26881  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26882  00AC40  0EEE               	movlw	low _dc_manual
 26883  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 26884  00AC44  0E9D               	movlw	high _dc_manual
 26885  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26886  00AC48  0E00               	movlw	0
 26887  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26888  00AC4C  0E50               	movlw	80
 26889  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 26890  00AC50  ECEF  F0A3         	call	_memcpy	;wreg free
 26891                           
 26892                           ;display.c: 509: switch(os.displayState)
 26893  00AC54  D044               	goto	l1471
 26894  00AC56                     
 26895                           ;display.c: 512: display_content[2][6] = 'W';
 26896  00AC56  0E57               	movlw	87
 26897  00AC58  0102               	movlb	2	; () banked
 26898  00AC5A  6F70               	movwf	(_display_content+46)& (0+255),b
 26899                           
 26900                           ;display.c: 513: display_content[2][7] = ' ';
 26901  00AC5C  0E20               	movlw	32
 26902  00AC5E  6F71               	movwf	(_display_content+47)& (0+255),b
 26903                           
 26904                           ;display.c: 514: break;
 26905  00AC60  D049               	goto	l1473
 26906  00AC62                     
 26907                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 26908                           
 26909                           ; BSR set to: 2
 26910  00AC62  0E6A               	movlw	low (_display_content+40)
 26911  00AC64  0100               	movlb	0	; () banked
 26912  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 26913  00AC68  0E02               	movlw	high (_display_content+40)
 26914  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26915  00AC6C  0E14               	movlw	low STR_1
 26916  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 26917  00AC70  0EA3               	movlw	high STR_1
 26918  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26919  00AC74  0E00               	movlw	0
 26920  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26921  00AC78  0E08               	movlw	8
 26922  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 26923  00AC7C  ECEF  F0A3         	call	_memcpy	;wreg free
 26924                           
 26925                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 26926  00AC80  0E7E               	movlw	low (_display_content+60)
 26927  00AC82  0100               	movlb	0	; () banked
 26928  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 26929  00AC86  0E02               	movlw	high (_display_content+60)
 26930  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26931  00AC8A  0E1D               	movlw	low STR_2
 26932  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 26933  00AC8E  0EA3               	movlw	high STR_2
 26934  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26935  00AC92  0E00               	movlw	0
 26936  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26937  00AC96  0E06               	movlw	6
 26938  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 26939  00AC9A  ECEF  F0A3         	call	_memcpy	;wreg free
 26940                           
 26941                           ;display.c: 518: break;
 26942  00AC9E  D02A               	goto	l1473
 26943  00ACA0                     
 26944                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 26945  00ACA0  0E6A               	movlw	low (_display_content+40)
 26946  00ACA2  0100               	movlb	0	; () banked
 26947  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 26948  00ACA6  0E02               	movlw	high (_display_content+40)
 26949  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26950  00ACAA  0E14               	movlw	low STR_1
 26951  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 26952  00ACAE  0EA3               	movlw	high STR_1
 26953  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26954  00ACB2  0E00               	movlw	0
 26955  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26956  00ACB6  0E08               	movlw	8
 26957  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 26958  00ACBA  ECEF  F0A3         	call	_memcpy	;wreg free
 26959                           
 26960                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 26961  00ACBE  0E7E               	movlw	low (_display_content+60)
 26962  00ACC0  0100               	movlb	0	; () banked
 26963  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 26964  00ACC4  0E02               	movlw	high (_display_content+60)
 26965  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26966  00ACC8  0E24               	movlw	low STR_6
 26967  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 26968  00ACCC  0EA3               	movlw	high STR_6
 26969  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26970  00ACD0  0E00               	movlw	0
 26971  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26972  00ACD4  0E05               	movlw	5
 26973  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 26974  00ACD8  ECEF  F0A3         	call	_memcpy	;wreg free
 26975                           
 26976                           ;display.c: 523: }
 26977                           
 26978                           ;display.c: 522: break;
 26979  00ACDC  D00B               	goto	l1473
 26980  00ACDE                     l1471:
 26981  00ACDE  0101               	movlb	1	; () banked
 26982  00ACE0  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 26983                           
 26984                           ; Switch size 1, requested type "space"
 26985                           ; Number of cases is 3, Range of values is 130 to 132
 26986                           ; switch strategies available:
 26987                           ; Name         Instructions Cycles
 26988                           ; simple_byte           10     6 (average)
 26989                           ;	Chosen strategy is simple_byte
 26990  00ACE2  0A82               	xorlw	130	; case 130
 26991  00ACE4  B4D8               	btfsc	status,2,c
 26992  00ACE6  D7BD               	goto	l1474
 26993  00ACE8  0A01               	xorlw	1	; case 131
 26994  00ACEA  B4D8               	btfsc	status,2,c
 26995  00ACEC  D7B4               	goto	l1472
 26996  00ACEE  0A07               	xorlw	7	; case 132
 26997  00ACF0  B4D8               	btfsc	status,2,c
 26998  00ACF2  D7D6               	goto	l1475
 26999  00ACF4                     l1473:
 27000                           
 27001                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 27002                           
 27003                           ; BSR set to: 1
 27004  00ACF4  C173  F0B7         	movff	_os+13,__display_itoa_long@value	;volatile
 27005  00ACF8  C174  F0B8         	movff	_os+14,__display_itoa_long@value+1	;volatile
 27006  00ACFC  0100               	movlb	0	; () banked
 27007  00ACFE  6BB9               	clrf	(__display_itoa_long@value+2)& (0+255),b
 27008  00AD00  6BBA               	clrf	(__display_itoa_long@value+3)& (0+255),b
 27009  00AD02  0E02               	movlw	2
 27010  00AD04  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27011  00AD06  0EC8               	movlw	low display_prepare@temp
 27012  00AD08  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27013  00AD0A  0E00               	movlw	high display_prepare@temp
 27014  00AD0C  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27015  00AD0E  EC6D  F087         	call	__display_itoa_long	;wreg free
 27016                           
 27017                           ;display.c: 527: space = 7-strlen(temp);
 27018  00AD12  0EC8               	movlw	low display_prepare@temp
 27019  00AD14  0100               	movlb	0	; () banked
 27020  00AD16  6F60               	movwf	strlen@s& (0+255),b
 27021  00AD18  0E00               	movlw	high display_prepare@temp
 27022  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 27023  00AD1C  EC80  F0AA         	call	_strlen	;wreg free
 27024  00AD20  0100               	movlb	0	; () banked
 27025  00AD22  5160               	movf	?_strlen& (0+255),w,b
 27026  00AD24  0800               	sublw	0
 27027  00AD26  0F07               	addlw	7
 27028  00AD28  6FD2               	movwf	display_prepare@space& (0+255),b
 27029                           
 27030                           ; BSR set to: 0
 27031                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 27032  00AD2A  0E00               	movlw	0
 27033  00AD2C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27034  00AD2E  D01C               	goto	l1476
 27035  00AD30                     
 27036                           ; BSR set to: 0
 27037                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 27038                           
 27039                           ; BSR set to: 0
 27040  00AD30  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27041  00AD32  0D01               	mullw	1
 27042  00AD34  0EC8               	movlw	low display_prepare@temp
 27043  00AD36  24F3               	addwf	prodl,w,c
 27044  00AD38  6ED9               	movwf	fsr2l,c
 27045  00AD3A  0E00               	movlw	high display_prepare@temp
 27046  00AD3C  20F4               	addwfc	prodh,w,c
 27047  00AD3E  6EDA               	movwf	fsr2h,c
 27048  00AD40  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27049  00AD42  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27050  00AD46  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27051  00AD48  27C6               	addwf	??_display_prepare& (0+255),f,b
 27052  00AD4A  0E00               	movlw	0
 27053  00AD4C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27054  00AD4E  0E0C               	movlw	12
 27055  00AD50  27C6               	addwf	??_display_prepare& (0+255),f,b
 27056  00AD52  0E00               	movlw	0
 27057  00AD54  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27058  00AD56  0E56               	movlw	low (_display_content+20)
 27059  00AD58  25C6               	addwf	??_display_prepare& (0+255),w,b
 27060  00AD5A  6EE1               	movwf	fsr1l,c
 27061  00AD5C  0E02               	movlw	high (_display_content+20)
 27062  00AD5E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27063  00AD60  6EE2               	movwf	fsr1h,c
 27064  00AD62  CFDF FFE7          	movff	indf2,indf1
 27065                           
 27066                           ; BSR set to: 0
 27067  00AD66  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27068  00AD68                     l1476:
 27069                           
 27070                           ; BSR set to: 0
 27071                           
 27072                           ; BSR set to: 0
 27073  00AD68  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27074  00AD6A  0D01               	mullw	1
 27075  00AD6C  0EC8               	movlw	low display_prepare@temp
 27076  00AD6E  24F3               	addwf	prodl,w,c
 27077  00AD70  6ED9               	movwf	fsr2l,c
 27078  00AD72  0E00               	movlw	high display_prepare@temp
 27079  00AD74  20F4               	addwfc	prodh,w,c
 27080  00AD76  6EDA               	movwf	fsr2h,c
 27081  00AD78  50DF               	movf	indf2,w,c
 27082  00AD7A  A4D8               	btfss	status,2,c
 27083  00AD7C  D7D9               	goto	l1477
 27084                           
 27085                           ; BSR set to: 0
 27086                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 27087                           
 27088                           ; BSR set to: 0
 27089  00AD7E  C18A  F09D         	movff	_os+36,motor_speed_from_index@speed_index	;volatile
 27090  00AD82  C18B  F09E         	movff	_os+37,motor_speed_from_index@speed_index+1	;volatile
 27091  00AD86  EC89  F0AE         	call	_motor_speed_from_index	;wreg free
 27092  00AD8A  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27093  00AD8E  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27094  00AD92  0E02               	movlw	2
 27095  00AD94  0100               	movlb	0	; () banked
 27096  00AD96  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27097  00AD98  0EC8               	movlw	low display_prepare@temp
 27098  00AD9A  6FA2               	movwf	__display_itoa@text& (0+255),b
 27099  00AD9C  0E00               	movlw	high display_prepare@temp
 27100  00AD9E  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27101  00ADA0  ECD3  F071         	call	__display_itoa	;wreg free
 27102                           
 27103                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 27104  00ADA4  0E00               	movlw	0
 27105  00ADA6  0100               	movlb	0	; () banked
 27106  00ADA8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27107  00ADAA  D018               	goto	l1479
 27108  00ADAC                     
 27109                           ; BSR set to: 0
 27110                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 27111                           
 27112                           ; BSR set to: 0
 27113  00ADAC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27114  00ADAE  0D01               	mullw	1
 27115  00ADB0  0EC8               	movlw	low display_prepare@temp
 27116  00ADB2  24F3               	addwf	prodl,w,c
 27117  00ADB4  6ED9               	movwf	fsr2l,c
 27118  00ADB6  0E00               	movlw	high display_prepare@temp
 27119  00ADB8  20F4               	addwfc	prodh,w,c
 27120  00ADBA  6EDA               	movwf	fsr2h,c
 27121  00ADBC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27122  00ADBE  6FC6               	movwf	??_display_prepare& (0+255),b
 27123  00ADC0  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27124  00ADC2  0E0B               	movlw	11
 27125  00ADC4  27C6               	addwf	??_display_prepare& (0+255),f,b
 27126  00ADC6  0E00               	movlw	0
 27127  00ADC8  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27128  00ADCA  0E7E               	movlw	low (_display_content+60)
 27129  00ADCC  25C6               	addwf	??_display_prepare& (0+255),w,b
 27130  00ADCE  6EE1               	movwf	fsr1l,c
 27131  00ADD0  0E02               	movlw	high (_display_content+60)
 27132  00ADD2  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27133  00ADD4  6EE2               	movwf	fsr1h,c
 27134  00ADD6  CFDF FFE7          	movff	indf2,indf1
 27135                           
 27136                           ; BSR set to: 0
 27137  00ADDA  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27138  00ADDC                     l1479:
 27139                           
 27140                           ; BSR set to: 0
 27141                           
 27142                           ; BSR set to: 0
 27143  00ADDC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27144  00ADDE  0D01               	mullw	1
 27145  00ADE0  0EC8               	movlw	low display_prepare@temp
 27146  00ADE2  24F3               	addwf	prodl,w,c
 27147  00ADE4  6ED9               	movwf	fsr2l,c
 27148  00ADE6  0E00               	movlw	high display_prepare@temp
 27149  00ADE8  20F4               	addwfc	prodh,w,c
 27150  00ADEA  6EDA               	movwf	fsr2h,c
 27151  00ADEC  50DF               	movf	indf2,w,c
 27152  00ADEE  A4D8               	btfss	status,2,c
 27153  00ADF0  D7DD               	goto	l1480
 27154  00ADF2                     L89:
 27155                           
 27156                           ; BSR set to: 0
 27157                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 27158                           
 27159                           ; BSR set to: 0
 27160  00ADF2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27161  00ADF4  6FC6               	movwf	??_display_prepare& (0+255),b
 27162  00ADF6  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27163  00ADF8  0E0B               	movlw	11
 27164  00ADFA  27C6               	addwf	??_display_prepare& (0+255),f,b
 27165  00ADFC  0E00               	movlw	0
 27166  00ADFE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27167  00AE00  0E7E               	movlw	low (_display_content+60)
 27168  00AE02  25C6               	addwf	??_display_prepare& (0+255),w,b
 27169  00AE04  6ED9               	movwf	fsr2l,c
 27170  00AE06  0E02               	movlw	high (_display_content+60)
 27171  00AE08  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27172  00AE0A  6EDA               	movwf	fsr2h,c
 27173  00AE0C  0E01               	movlw	1
 27174  00AE0E  6EDF               	movwf	indf2,c
 27175                           
 27176                           ;display.c: 540: display_content[3][12+cntr] = '/';
 27177  00AE10  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27178  00AE12  6FC6               	movwf	??_display_prepare& (0+255),b
 27179  00AE14  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27180  00AE16  0E0C               	movlw	12
 27181  00AE18  27C6               	addwf	??_display_prepare& (0+255),f,b
 27182  00AE1A  0E00               	movlw	0
 27183  00AE1C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27184  00AE1E  0E7E               	movlw	low (_display_content+60)
 27185  00AE20  25C6               	addwf	??_display_prepare& (0+255),w,b
 27186  00AE22  6ED9               	movwf	fsr2l,c
 27187  00AE24  0E02               	movlw	high (_display_content+60)
 27188  00AE26  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27189  00AE28  6EDA               	movwf	fsr2h,c
 27190  00AE2A  0E2F               	movlw	47
 27191  00AE2C  6EDF               	movwf	indf2,c
 27192                           
 27193                           ;display.c: 541: display_content[3][13+cntr] = 's';
 27194  00AE2E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27195  00AE30  6FC6               	movwf	??_display_prepare& (0+255),b
 27196  00AE32  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27197  00AE34  0E0D               	movlw	13
 27198  00AE36  27C6               	addwf	??_display_prepare& (0+255),f,b
 27199  00AE38  0E00               	movlw	0
 27200  00AE3A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27201  00AE3C  0E7E               	movlw	low (_display_content+60)
 27202  00AE3E  25C6               	addwf	??_display_prepare& (0+255),w,b
 27203  00AE40  6ED9               	movwf	fsr2l,c
 27204  00AE42  0E02               	movlw	high (_display_content+60)
 27205  00AE44  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27206  00AE46  6EDA               	movwf	fsr2h,c
 27207  00AE48  0E73               	movlw	115
 27208  00AE4A                     L27:
 27209  00AE4A  6EDF               	movwf	indf2,c
 27210                           
 27211                           ;display.c: 542: break;
 27212  00AE4C  D095               	goto	l1399
 27213  00AE4E                     
 27214                           ; BSR set to: 0
 27215                           ;display.c: 545: _display_clear();
 27216                           
 27217                           ; BSR set to: 0
 27218  00AE4E  EC4B  F0A9         	call	__display_clear	;wreg free
 27219                           
 27220                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 27221  00AE52  0101               	movlb	1	; () banked
 27222  00AE54  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 27223  00AE56  0100               	movlb	0	; () banked
 27224  00AE58  6F9F               	movwf	__display_itoa@value& (0+255),b
 27225  00AE5A  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27226  00AE5C  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27227  00AE5E  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27228  00AE60  0E00               	movlw	0
 27229  00AE62  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27230  00AE64  0E42               	movlw	low _display_content
 27231  00AE66  6FA2               	movwf	__display_itoa@text& (0+255),b
 27232  00AE68  0E02               	movlw	high _display_content
 27233  00AE6A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27234  00AE6C  ECD3  F071         	call	__display_itoa	;wreg free
 27235                           
 27236                           ;display.c: 547: if(PORTEbits.RE2)
 27237  00AE70  A484               	btfss	3972,2,c	;volatile
 27238  00AE72  D002               	goto	l1483
 27239                           
 27240                           ;display.c: 548: display_content[0][8] = 'H';
 27241  00AE74  0E48               	movlw	72
 27242  00AE76  D001               	goto	L31
 27243  00AE78                     l1483:
 27244                           
 27245                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 27246                           
 27247                           ; BSR set to: 2
 27248  00AE78  0E4C               	movlw	76
 27249  00AE7A                     L31:
 27250  00AE7A  0102               	movlb	2	; () banked
 27251  00AE7C  6F4A               	movwf	(_display_content+8)& (0+255),b
 27252                           
 27253                           ; BSR set to: 2
 27254                           ;display.c: 551: if(PORTEbits.RE0)
 27255                           
 27256                           ; BSR set to: 2
 27257  00AE7E  A084               	btfss	3972,0,c	;volatile
 27258  00AE80  D002               	goto	l1485
 27259                           
 27260                           ; BSR set to: 2
 27261                           ;display.c: 552: display_content[0][9] = 'H';
 27262  00AE82  0E48               	movlw	72
 27263  00AE84  D001               	goto	L32
 27264  00AE86                     l1485:
 27265                           
 27266                           ; BSR set to: 2
 27267                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 27268                           
 27269                           ; BSR set to: 2
 27270  00AE86  0E4C               	movlw	76
 27271  00AE88                     L32:
 27272  00AE88  6F4B               	movwf	(_display_content+9)& (0+255),b
 27273                           
 27274                           ; BSR set to: 2
 27275                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 27276                           
 27277                           ; BSR set to: 2
 27278  00AE8A  0101               	movlb	1	; () banked
 27279  00AE8C  516A               	movf	(_os+4)& (0+255),w,b	;volatile
 27280  00AE8E  0100               	movlb	0	; () banked
 27281  00AE90  6F9F               	movwf	__display_itoa@value& (0+255),b
 27282  00AE92  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27283  00AE94  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27284  00AE96  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27285  00AE98  0E00               	movlw	0
 27286  00AE9A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27287  00AE9C  0E56               	movlw	low (_display_content+20)
 27288  00AE9E  6FA2               	movwf	__display_itoa@text& (0+255),b
 27289  00AEA0  0E02               	movlw	high (_display_content+20)
 27290  00AEA2  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27291  00AEA4  ECD3  F071         	call	__display_itoa	;wreg free
 27292                           
 27293                           ;display.c: 556: if(PORTEbits.RE1)
 27294  00AEA8  A284               	btfss	3972,1,c	;volatile
 27295  00AEAA  D002               	goto	l1487
 27296                           
 27297                           ;display.c: 557: display_content[1][8] = 'H';
 27298  00AEAC  0E48               	movlw	72
 27299  00AEAE  D001               	goto	L33
 27300  00AEB0                     l1487:
 27301                           
 27302                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 27303                           
 27304                           ; BSR set to: 2
 27305  00AEB0  0E4C               	movlw	76
 27306  00AEB2                     L33:
 27307  00AEB2  0102               	movlb	2	; () banked
 27308  00AEB4  6F5E               	movwf	(_display_content+28)& (0+255),b
 27309                           
 27310                           ; BSR set to: 2
 27311                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 27312                           
 27313                           ; BSR set to: 2
 27314  00AEB6  0101               	movlb	1	; () banked
 27315  00AEB8  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 27316  00AEBA  0100               	movlb	0	; () banked
 27317  00AEBC  6F9F               	movwf	__display_itoa@value& (0+255),b
 27318  00AEBE  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27319  00AEC0  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27320  00AEC2  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27321  00AEC4  0E00               	movlw	0
 27322  00AEC6  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27323  00AEC8  0E6A               	movlw	low (_display_content+40)
 27324  00AECA  6FA2               	movwf	__display_itoa@text& (0+255),b
 27325  00AECC  0E02               	movlw	high (_display_content+40)
 27326  00AECE  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27327  00AED0  ECD3  F071         	call	__display_itoa	;wreg free
 27328                           
 27329                           ;display.c: 561: if(PORTAbits.RA0)
 27330  00AED4  A080               	btfss	3968,0,c	;volatile
 27331  00AED6  D002               	goto	l1489
 27332                           
 27333                           ;display.c: 562: display_content[2][8] = 'H';
 27334  00AED8  0E48               	movlw	72
 27335  00AEDA  D001               	goto	L34
 27336  00AEDC                     l1489:
 27337                           
 27338                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 27339                           
 27340                           ; BSR set to: 2
 27341  00AEDC  0E4C               	movlw	76
 27342  00AEDE                     L34:
 27343  00AEDE  0102               	movlb	2	; () banked
 27344  00AEE0  6F72               	movwf	(_display_content+48)& (0+255),b
 27345                           
 27346                           ; BSR set to: 2
 27347                           ;display.c: 565: if(PORTAbits.RA2)
 27348                           
 27349                           ; BSR set to: 2
 27350  00AEE2  A480               	btfss	3968,2,c	;volatile
 27351  00AEE4  D002               	goto	l1491
 27352                           
 27353                           ; BSR set to: 2
 27354                           ;display.c: 566: display_content[2][9] = 'H';
 27355  00AEE6  0E48               	movlw	72
 27356  00AEE8  D001               	goto	L35
 27357  00AEEA                     l1491:
 27358                           
 27359                           ; BSR set to: 2
 27360                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 27361                           
 27362                           ; BSR set to: 2
 27363  00AEEA  0E4C               	movlw	76
 27364  00AEEC                     L35:
 27365  00AEEC  6F73               	movwf	(_display_content+49)& (0+255),b
 27366                           
 27367                           ; BSR set to: 2
 27368                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 27369                           
 27370                           ; BSR set to: 2
 27371  00AEEE  0101               	movlb	1	; () banked
 27372  00AEF0  516C               	movf	(_os+6)& (0+255),w,b	;volatile
 27373  00AEF2  0100               	movlb	0	; () banked
 27374  00AEF4  6F9F               	movwf	__display_itoa@value& (0+255),b
 27375  00AEF6  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27376  00AEF8  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27377  00AEFA  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27378  00AEFC  0E00               	movlw	0
 27379  00AEFE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27380  00AF00  0E7E               	movlw	low (_display_content+60)
 27381  00AF02  6FA2               	movwf	__display_itoa@text& (0+255),b
 27382  00AF04  0E02               	movlw	high (_display_content+60)
 27383  00AF06  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27384  00AF08  ECD3  F071         	call	__display_itoa	;wreg free
 27385                           
 27386                           ;display.c: 570: if(PORTAbits.RA1)
 27387  00AF0C  A280               	btfss	3968,1,c	;volatile
 27388  00AF0E  D002               	goto	l1493
 27389                           
 27390                           ;display.c: 571: display_content[3][8] = 'H';
 27391  00AF10  0E48               	movlw	72
 27392  00AF12  D001               	goto	L28
 27393  00AF14                     l1493:
 27394                           
 27395                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 27396                           
 27397                           ; BSR set to: 2
 27398  00AF14  0E4C               	movlw	76
 27399  00AF16                     L28:
 27400  00AF16  0102               	movlb	2	; () banked
 27401  00AF18  6F86               	movwf	(_display_content+68)& (0+255),b
 27402                           
 27403                           ; BSR set to: 2
 27404                           ;display.c: 575: }
 27405                           
 27406                           ; BSR set to: 2
 27407                           ;display.c: 574: break;
 27408  00AF1A  D02E               	goto	l1399
 27409  00AF1C                     l1390:
 27410                           
 27411                           ; BSR set to: 2
 27412  00AF1C  0101               	movlb	1	; () banked
 27413  00AF1E  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 27414  00AF20  0BF0               	andlw	240
 27415  00AF22  0100               	movlb	0	; () banked
 27416  00AF24  6FC6               	movwf	??_display_prepare& (0+255),b
 27417  00AF26  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27418                           
 27419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27420                           ; Switch size 1, requested type "space"
 27421                           ; Number of cases is 1, Range of values is 0 to 0
 27422                           ; switch strategies available:
 27423                           ; Name         Instructions Cycles
 27424                           ; simple_byte            4     3 (average)
 27425                           ;	Chosen strategy is simple_byte
 27426  00AF28  51C7               	movf	(??_display_prepare+1)& (0+255),w,b
 27427  00AF2A  0A00               	xorlw	0	; case 0
 27428  00AF2C  A4D8               	btfss	status,2,c
 27429  00AF2E  D024               	goto	l1399
 27430                           
 27431                           ; BSR set to: 0
 27432                           ; Switch size 1, requested type "space"
 27433                           ; Number of cases is 10, Range of values is 0 to 240
 27434                           ; switch strategies available:
 27435                           ; Name         Instructions Cycles
 27436                           ; simple_byte           31    16 (average)
 27437                           ;	Chosen strategy is simple_byte
 27438  00AF30  51C6               	movf	??_display_prepare& (0+255),w,b
 27439  00AF32  0A00               	xorlw	0	; case 0
 27440  00AF34  B4D8               	btfsc	status,2,c
 27441  00AF36  EF9A  F051         	goto	l1391
 27442  00AF3A  0A10               	xorlw	16	; case 16
 27443  00AF3C  B4D8               	btfsc	status,2,c
 27444  00AF3E  EFC9  F051         	goto	l1400
 27445  00AF42  0A30               	xorlw	48	; case 32
 27446  00AF44  B4D8               	btfsc	status,2,c
 27447  00AF46  EF1B  F052         	goto	l1410
 27448  00AF4A  0A10               	xorlw	16	; case 48
 27449  00AF4C  B4D8               	btfsc	status,2,c
 27450  00AF4E  EF3F  F052         	goto	l1415
 27451  00AF52  0A70               	xorlw	112	; case 64
 27452  00AF54  B4D8               	btfsc	status,2,c
 27453  00AF56  EFB0  F052         	goto	l1424
 27454  00AF5A  0A10               	xorlw	16	; case 80
 27455  00AF5C  B4D8               	btfsc	status,2,c
 27456  00AF5E  D467               	goto	l1439
 27457  00AF60  0A30               	xorlw	48	; case 96
 27458  00AF62  B4D8               	btfsc	status,2,c
 27459  00AF64  D517               	goto	l1452
 27460  00AF66  0A10               	xorlw	16	; case 112
 27461  00AF68  B4D8               	btfsc	status,2,c
 27462  00AF6A  D616               	goto	l1466
 27463  00AF6C  0AF0               	xorlw	240	; case 128
 27464  00AF6E  B4D8               	btfsc	status,2,c
 27465  00AF70  D663               	goto	l1470
 27466  00AF72  0A70               	xorlw	112	; case 240
 27467  00AF74  B4D8               	btfsc	status,2,c
 27468  00AF76  D76B               	goto	l1482
 27469  00AF78                     l1399:
 27470                           
 27471                           ;display.c: 577: if(!PORTDbits.RD2)
 27472  00AF78  B483               	btfsc	3971,2,c	;volatile
 27473  00AF7A  0012               	return	
 27474                           
 27475                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 27476  00AF7C  0E45               	movlw	69
 27477  00AF7E  0102               	movlb	2	; () banked
 27478  00AF80  6F42               	movwf	_display_content& (0+255),b
 27479                           
 27480                           ;display.c: 580: display_content[0][1] = 'R';
 27481  00AF82  0E52               	movlw	82
 27482  00AF84  6F43               	movwf	(_display_content+1)& (0+255),b
 27483                           
 27484                           ;display.c: 581: display_content[0][2] = 'R';
 27485  00AF86  0E52               	movlw	82
 27486  00AF88  6F44               	movwf	(_display_content+2)& (0+255),b
 27487                           
 27488                           ;display.c: 582: display_content[0][3] = 'O';
 27489  00AF8A  0E4F               	movlw	79
 27490  00AF8C  6F45               	movwf	(_display_content+3)& (0+255),b
 27491                           
 27492                           ;display.c: 583: display_content[0][4] = 'R';
 27493  00AF8E  0E52               	movlw	82
 27494  00AF90  6F46               	movwf	(_display_content+4)& (0+255),b
 27495  00AF92  0012               	return	
 27496  00AF94                     __end_of_display_prepare:
 27497                           	opt stack 0
 27498                           tblptru	equ	0xFF8
 27499                           tblptrh	equ	0xFF7
 27500                           tblptrl	equ	0xFF6
 27501                           tablat	equ	0xFF5
 27502                           prodh	equ	0xFF4
 27503                           prodl	equ	0xFF3
 27504                           intcon	equ	0xFF2
 27505                           postinc0	equ	0xFEE
 27506                           wreg	equ	0xFE8
 27507                           indf1	equ	0xFE7
 27508                           postinc1	equ	0xFE6
 27509                           postdec1	equ	0xFE5
 27510                           plusw1	equ	0xFE3
 27511                           fsr1h	equ	0xFE2
 27512                           fsr1l	equ	0xFE1
 27513                           indf2	equ	0xFDF
 27514                           postinc2	equ	0xFDE
 27515                           postdec2	equ	0xFDD
 27516                           plusw2	equ	0xFDB
 27517                           fsr2h	equ	0xFDA
 27518                           fsr2l	equ	0xFD9
 27519                           status	equ	0xFD8
 27520                           
 27521 ;; *************** function _motor_speed_from_index *****************
 27522 ;; Defined at:
 27523 ;;		line 603 in file "motor.c"
 27524 ;; Parameters:    Size  Location     Type
 27525 ;;  speed_index     2   61[BANK0 ] unsigned int 
 27526 ;; Auto vars:     Size  Location     Type
 27527 ;;		None
 27528 ;; Return value:  Size  Location     Type
 27529 ;;                  2   61[BANK0 ] unsigned int 
 27530 ;; Registers used:
 27531 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27532 ;; Tracked objects:
 27533 ;;		On entry : 0/0
 27534 ;;		On exit  : 0/0
 27535 ;;		Unchanged: 0/0
 27536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27537 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27540 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27541 ;;Total ram usage:        2 bytes
 27542 ;; Hardware stack levels used:    1
 27543 ;; Hardware stack levels required when called:   12
 27544 ;; This function calls:
 27545 ;;		__motor_get_speed_in_degrees
 27546 ;; This function is called by:
 27547 ;;		_display_prepare
 27548 ;; This function uses a non-reentrant model
 27549 ;;
 27550                           
 27551                           	psect	text106
 27552  015D12                     __ptext106:
 27553                           	opt stack 0
 27554  015D12                     _motor_speed_from_index:
 27555                           	opt stack 17
 27556                           
 27557                           ;motor.c: 605: return _motor_get_speed_in_degrees(speed_index);
 27558                           
 27559                           ;incstack = 0
 27560  015D12  C09D  F091         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27561  015D16  C09E  F092         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27562  015D1A  EC3A  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27563  015D1E  C091  F09D         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27564  015D22  C092  F09E         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27565  015D26  0012               	return	
 27566  015D28                     __end_of_motor_speed_from_index:
 27567                           	opt stack 0
 27568                           tblptru	equ	0xFF8
 27569                           tblptrh	equ	0xFF7
 27570                           tblptrl	equ	0xFF6
 27571                           tablat	equ	0xFF5
 27572                           prodh	equ	0xFF4
 27573                           prodl	equ	0xFF3
 27574                           intcon	equ	0xFF2
 27575                           postinc0	equ	0xFEE
 27576                           wreg	equ	0xFE8
 27577                           indf1	equ	0xFE7
 27578                           postinc1	equ	0xFE6
 27579                           postdec1	equ	0xFE5
 27580                           plusw1	equ	0xFE3
 27581                           fsr1h	equ	0xFE2
 27582                           fsr1l	equ	0xFE1
 27583                           indf2	equ	0xFDF
 27584                           postinc2	equ	0xFDE
 27585                           postdec2	equ	0xFDD
 27586                           plusw2	equ	0xFDB
 27587                           fsr2h	equ	0xFDA
 27588                           fsr2l	equ	0xFD9
 27589                           status	equ	0xFD8
 27590                           
 27591 ;; *************** function __motor_get_speed_in_degrees *****************
 27592 ;; Defined at:
 27593 ;;		line 564 in file "motor.c"
 27594 ;; Parameters:    Size  Location     Type
 27595 ;;  speed_index     2   49[BANK0 ] unsigned int 
 27596 ;; Auto vars:     Size  Location     Type
 27597 ;;  lookup          4   57[BANK0 ] unsigned long 
 27598 ;;  speed           4   53[BANK0 ] float 
 27599 ;; Return value:  Size  Location     Type
 27600 ;;                  2   49[BANK0 ] unsigned int 
 27601 ;; Registers used:
 27602 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27603 ;; Tracked objects:
 27604 ;;		On entry : 0/0
 27605 ;;		On exit  : 0/0
 27606 ;;		Unchanged: 0/0
 27607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27608 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27609 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27610 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27611 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27612 ;;Total ram usage:       12 bytes
 27613 ;; Hardware stack levels used:    1
 27614 ;; Hardware stack levels required when called:   11
 27615 ;; This function calls:
 27616 ;;		___fldiv
 27617 ;;		___fltol
 27618 ;;		___lmul
 27619 ;;		___xxtofl
 27620 ;; This function is called by:
 27621 ;;		_motor_speed_from_index
 27622 ;;		_motor_get_maximum_speed
 27623 ;;		_motor_get_current_speed
 27624 ;; This function uses a non-reentrant model
 27625 ;;
 27626                           
 27627                           	psect	text107
 27628  010474                     __ptext107:
 27629                           	opt stack 0
 27630  010474                     __motor_get_speed_in_degrees:
 27631                           	opt stack 17
 27632                           
 27633                           ;motor.c: 566: uint32_t lookup;;motor.c: 567: float speed;;motor.c: 569: lookup = motor_
      +                          speed_lookup[speed_index];
 27634                           
 27635                           ;incstack = 0
 27636  010474  90D8               	bcf	status,0,c
 27637  010476  0100               	movlb	0	; () banked
 27638  010478  3591               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27639  01047A  6EF6               	movwf	tblptrl,c
 27640  01047C  3592               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27641  01047E  6EF7               	movwf	tblptrh,c
 27642  010480  0E93               	movlw	low _motor_speed_lookup
 27643  010482  26F6               	addwf	tblptrl,f,c
 27644  010484  0E90               	movlw	high _motor_speed_lookup
 27645  010486  22F7               	addwfc	tblptrh,f,c
 27646  010488                     	if	1	;There are 3 active tblptr bytes
 27647  010488  6AF8               	clrf	tblptru,c
 27648  01048A  0E00               	movlw	low (__mediumconst shr (0+16))
 27649  01048C  22F8               	addwfc	tblptru,f,c
 27650  01048E                     	endif
 27651  01048E  0009               	tblrd		*+
 27652  010490  CFF5 F093          	movff	tablat,??__motor_get_speed_in_degrees
 27653  010494  0009               	tblrd		*+
 27654  010496  CFF5 F094          	movff	tablat,??__motor_get_speed_in_degrees+1
 27655  01049A  C093  F099         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27656  01049E  C094  F09A         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27657  0104A2  6B9B               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27658  0104A4  6B9C               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27659                           
 27660                           ; BSR set to: 0
 27661                           ;motor.c: 570: lookup *= 16;
 27662  0104A6  0E04               	movlw	4
 27663  0104A8                     u15725:
 27664  0104A8  90D8               	bcf	status,0,c
 27665  0104AA  3799               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27666  0104AC  379A               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27667  0104AE  379B               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27668  0104B0  379C               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27669  0104B2  2EE8               	decfsz	wreg,f,c
 27670  0104B4  D7F9               	goto	u15725
 27671                           
 27672                           ; BSR set to: 0
 27673                           ;motor.c: 571: lookup *= 360;
 27674  0104B6  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27675  0104BA  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27676  0104BE  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27677  0104C2  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27678  0104C6  0E68               	movlw	104
 27679  0104C8  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27680  0104CA  0E01               	movlw	1
 27681  0104CC  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27682  0104CE  0E00               	movlw	0
 27683  0104D0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27684  0104D2  0E00               	movlw	0
 27685  0104D4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27686  0104D6  EC3F  F0A6         	call	___lmul	;wreg free
 27687  0104DA  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27688  0104DE  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27689  0104E2  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27690  0104E6  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27691                           
 27692                           ;motor.c: 572: lookup *= 100;
 27693  0104EA  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27694  0104EE  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27695  0104F2  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27696  0104F6  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27697  0104FA  0E64               	movlw	100
 27698  0104FC  0100               	movlb	0	; () banked
 27699  0104FE  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27700  010500  0E00               	movlw	0
 27701  010502  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27702  010504  0E00               	movlw	0
 27703  010506  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27704  010508  0E00               	movlw	0
 27705  01050A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27706  01050C  EC3F  F0A6         	call	___lmul	;wreg free
 27707  010510  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27708  010514  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27709  010518  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27710  01051C  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27711                           
 27712                           ;motor.c: 574: speed = (float) lookup;
 27713  010520  C099  F06A         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27714  010524  C09A  F06B         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27715  010528  C09B  F06C         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27716  01052C  C09C  F06D         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27717  010530  0E00               	movlw	0
 27718  010532  ECFA  F080         	call	___xxtofl
 27719  010536  C06A  F095         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27720  01053A  C06B  F096         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27721  01053E  C06C  F097         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27722  010542  C06D  F098         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27723                           
 27724                           ;motor.c: 575: speed /= config.full_circle_in_steps;
 27725  010546  C095  F078         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27726  01054A  C096  F079         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27727  01054E  C097  F07A         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27728  010552  C098  F07B         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27729  010556  C197  F06A         	movff	_config,___xxtofl@val
 27730  01055A  C198  F06B         	movff	_config+1,___xxtofl@val+1
 27731  01055E  C199  F06C         	movff	_config+2,___xxtofl@val+2
 27732  010562  C19A  F06D         	movff	_config+3,___xxtofl@val+3
 27733  010566  0E00               	movlw	0
 27734  010568  ECFA  F080         	call	___xxtofl
 27735  01056C  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 27736  010570  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 27737  010574  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 27738  010578  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 27739  01057C  EC9E  F06A         	call	___fldiv	;wreg free
 27740  010580  C078  F095         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27741  010584  C079  F096         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27742  010588  C07A  F097         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27743  01058C  C07B  F098         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27744                           
 27745                           ;motor.c: 578: return (uint16_t) speed;
 27746  010590  C095  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27747  010594  C096  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27748  010598  C097  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27749  01059C  C098  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27750  0105A0  EC93  F091         	call	___fltol	;wreg free
 27751  0105A4  C060  F091         	movff	?___fltol,?__motor_get_speed_in_degrees
 27752  0105A8  C061  F092         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27753  0105AC  0012               	return	
 27754  0105AE                     __end_of__motor_get_speed_in_degrees:
 27755                           	opt stack 0
 27756                           tblptru	equ	0xFF8
 27757                           tblptrh	equ	0xFF7
 27758                           tblptrl	equ	0xFF6
 27759                           tablat	equ	0xFF5
 27760                           prodh	equ	0xFF4
 27761                           prodl	equ	0xFF3
 27762                           intcon	equ	0xFF2
 27763                           postinc0	equ	0xFEE
 27764                           wreg	equ	0xFE8
 27765                           indf1	equ	0xFE7
 27766                           postinc1	equ	0xFE6
 27767                           postdec1	equ	0xFE5
 27768                           plusw1	equ	0xFE3
 27769                           fsr1h	equ	0xFE2
 27770                           fsr1l	equ	0xFE1
 27771                           indf2	equ	0xFDF
 27772                           postinc2	equ	0xFDE
 27773                           postdec2	equ	0xFDD
 27774                           plusw2	equ	0xFDB
 27775                           fsr2h	equ	0xFDA
 27776                           fsr2l	equ	0xFD9
 27777                           status	equ	0xFD8
 27778                           
 27779 ;; *************** function ___fldiv *****************
 27780 ;; Defined at:
 27781 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 27782 ;; Parameters:    Size  Location     Type
 27783 ;;  b               4   24[BANK0 ] unsigned int 
 27784 ;;  a               4   28[BANK0 ] unsigned int 
 27785 ;; Auto vars:     Size  Location     Type
 27786 ;;  grs             4   43[BANK0 ] unsigned long 
 27787 ;;  rem             4   36[BANK0 ] unsigned long 
 27788 ;;  new_exp         2   41[BANK0 ] int 
 27789 ;;  aexp            1   48[BANK0 ] unsigned char 
 27790 ;;  bexp            1   47[BANK0 ] unsigned char 
 27791 ;;  sign            1   40[BANK0 ] unsigned char 
 27792 ;; Return value:  Size  Location     Type
 27793 ;;                  4   24[BANK0 ] unsigned char 
 27794 ;; Registers used:
 27795 ;;		wreg, status,2, status,0
 27796 ;; Tracked objects:
 27797 ;;		On entry : 0/0
 27798 ;;		On exit  : 0/0
 27799 ;;		Unchanged: 0/0
 27800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27801 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27802 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27803 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27804 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27805 ;;Total ram usage:       25 bytes
 27806 ;; Hardware stack levels used:    1
 27807 ;; Hardware stack levels required when called:   10
 27808 ;; This function calls:
 27809 ;;		Nothing
 27810 ;; This function is called by:
 27811 ;;		__motor_steps_from_degrees_int
 27812 ;;		_motor_calculate_position_in_degrees
 27813 ;;		__motor_get_speed_in_degrees
 27814 ;;		__step_position_from_divide_position
 27815 ;;		_motor_divide_jump_to_nearest
 27816 ;;		_motor_arc_move
 27817 ;;		__steps_from_degrees
 27818 ;;		__motor_steps_from_degrees_float
 27819 ;;		_motor_steps_from_degrees
 27820 ;; This function uses a non-reentrant model
 27821 ;;
 27822                           
 27823                           	psect	text108
 27824  00D53C                     __ptext108:
 27825                           	opt stack 0
 27826  00D53C                     ___fldiv:
 27827                           	opt stack 18
 27828                           
 27829                           ;incstack = 0
 27830  00D53C  0100               	movlb	0	; () banked
 27831  00D53E  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27832  00D540  0B80               	andlw	128
 27833  00D542  6F88               	movwf	___fldiv@sign& (0+255),b
 27834  00D544  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27835  00D546  257B               	addwf	(___fldiv@b+3)& (0+255),w,b
 27836  00D548  6F8F               	movwf	___fldiv@bexp& (0+255),b
 27837                           
 27838                           ; BSR set to: 0
 27839  00D54A  BF7A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 27840                           
 27841                           ; BSR set to: 0
 27842  00D54C  818F               	bsf	___fldiv@bexp& (0+255),0,b
 27843                           
 27844                           ; BSR set to: 0
 27845                           
 27846                           ; BSR set to: 0
 27847  00D54E  518F               	movf	___fldiv@bexp& (0+255),w,b
 27848  00D550  B4D8               	btfsc	status,2,c
 27849  00D552  D00D               	goto	l3642
 27850                           
 27851                           ; BSR set to: 0
 27852  00D554  298F               	incf	___fldiv@bexp& (0+255),w,b
 27853  00D556  A4D8               	btfss	status,2,c
 27854  00D558  D008               	goto	l3643
 27855                           
 27856                           ; BSR set to: 0
 27857  00D55A  0E00               	movlw	0
 27858  00D55C  6F78               	movwf	___fldiv@b& (0+255),b
 27859  00D55E  0E00               	movlw	0
 27860  00D560  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27861  00D562  0E00               	movlw	0
 27862  00D564  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27863  00D566  0E00               	movlw	0
 27864  00D568  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27865  00D56A                     l3643:
 27866                           
 27867                           ; BSR set to: 0
 27868                           
 27869                           ; BSR set to: 0
 27870  00D56A  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 27871  00D56C  D006               	goto	L37
 27872  00D56E                     l3642:
 27873                           
 27874                           ; BSR set to: 0
 27875                           
 27876                           ; BSR set to: 0
 27877  00D56E  0E00               	movlw	0
 27878  00D570  6F78               	movwf	___fldiv@b& (0+255),b
 27879  00D572  0E00               	movlw	0
 27880  00D574  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27881  00D576  0E00               	movlw	0
 27882  00D578  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27883  00D57A                     L37:
 27884  00D57A  0E00               	movlw	0
 27885  00D57C  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27886                           
 27887                           ; BSR set to: 0
 27888                           
 27889                           ; BSR set to: 0
 27890  00D57E  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27891  00D580  0B80               	andlw	128
 27892  00D582  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 27893                           
 27894                           ; BSR set to: 0
 27895  00D584  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27896  00D586  257F               	addwf	(___fldiv@a+3)& (0+255),w,b
 27897  00D588  6F90               	movwf	___fldiv@aexp& (0+255),b
 27898                           
 27899                           ; BSR set to: 0
 27900  00D58A  BF7E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 27901                           
 27902                           ; BSR set to: 0
 27903  00D58C  8190               	bsf	___fldiv@aexp& (0+255),0,b
 27904                           
 27905                           ; BSR set to: 0
 27906                           
 27907                           ; BSR set to: 0
 27908  00D58E  5190               	movf	___fldiv@aexp& (0+255),w,b
 27909  00D590  B4D8               	btfsc	status,2,c
 27910  00D592  D00D               	goto	l3646
 27911                           
 27912                           ; BSR set to: 0
 27913  00D594  2990               	incf	___fldiv@aexp& (0+255),w,b
 27914  00D596  A4D8               	btfss	status,2,c
 27915  00D598  D008               	goto	l3647
 27916                           
 27917                           ; BSR set to: 0
 27918  00D59A  0E00               	movlw	0
 27919  00D59C  6F7C               	movwf	___fldiv@a& (0+255),b
 27920  00D59E  0E00               	movlw	0
 27921  00D5A0  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 27922  00D5A2  0E00               	movlw	0
 27923  00D5A4  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 27924  00D5A6  0E00               	movlw	0
 27925  00D5A8  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 27926  00D5AA                     l3647:
 27927                           
 27928                           ; BSR set to: 0
 27929                           
 27930                           ; BSR set to: 0
 27931  00D5AA  8F7E               	bsf	(___fldiv@a+2)& (0+255),7,b
 27932  00D5AC  D006               	goto	L38
 27933  00D5AE                     l3646:
 27934                           
 27935                           ; BSR set to: 0
 27936                           
 27937                           ; BSR set to: 0
 27938  00D5AE  0E00               	movlw	0
 27939  00D5B0  6F7C               	movwf	___fldiv@a& (0+255),b
 27940  00D5B2  0E00               	movlw	0
 27941  00D5B4  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 27942  00D5B6  0E00               	movlw	0
 27943  00D5B8  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 27944  00D5BA                     L38:
 27945  00D5BA  0E00               	movlw	0
 27946  00D5BC  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 27947                           
 27948                           ; BSR set to: 0
 27949                           
 27950                           ; BSR set to: 0
 27951  00D5BE  517C               	movf	___fldiv@a& (0+255),w,b
 27952  00D5C0  117D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 27953  00D5C2  117E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 27954  00D5C4  117F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 27955  00D5C6  A4D8               	btfss	status,2,c
 27956  00D5C8  D017               	goto	l3649
 27957                           
 27958                           ; BSR set to: 0
 27959  00D5CA  0E00               	movlw	0
 27960  00D5CC  6F78               	movwf	___fldiv@b& (0+255),b
 27961  00D5CE  0E00               	movlw	0
 27962  00D5D0  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27963  00D5D2  0E00               	movlw	0
 27964  00D5D4  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27965  00D5D6  0E00               	movlw	0
 27966  00D5D8  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27967                           
 27968                           ; BSR set to: 0
 27969  00D5DA  0E80               	movlw	128
 27970  00D5DC  137A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 27971  00D5DE  0E7F               	movlw	127
 27972  00D5E0  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 27973                           
 27974                           ; BSR set to: 0
 27975  00D5E2  5188               	movf	___fldiv@sign& (0+255),w,b
 27976  00D5E4  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 27977                           
 27978                           ; BSR set to: 0
 27979  00D5E6  C078  F078         	movff	___fldiv@b,?___fldiv
 27980  00D5EA  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 27981  00D5EE  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 27982  00D5F2  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 27983                           
 27984                           ; BSR set to: 0
 27985  00D5F6  0012               	return	
 27986  00D5F8                     l3649:
 27987                           
 27988                           ; BSR set to: 0
 27989                           
 27990                           ; BSR set to: 0
 27991  00D5F8  518F               	movf	___fldiv@bexp& (0+255),w,b
 27992  00D5FA  A4D8               	btfss	status,2,c
 27993  00D5FC  D011               	goto	l3651
 27994                           
 27995                           ; BSR set to: 0
 27996  00D5FE  0E00               	movlw	0
 27997  00D600  6F78               	movwf	___fldiv@b& (0+255),b
 27998  00D602  0E00               	movlw	0
 27999  00D604  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28000  00D606  0E00               	movlw	0
 28001  00D608  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28002  00D60A  0E00               	movlw	0
 28003  00D60C  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28004                           
 28005                           ; BSR set to: 0
 28006  00D60E  C078  F078         	movff	___fldiv@b,?___fldiv
 28007  00D612  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28008  00D616  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28009  00D61A  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28010                           
 28011                           ; BSR set to: 0
 28012  00D61E  0012               	return	
 28013  00D620                     l3651:
 28014                           
 28015                           ; BSR set to: 0
 28016                           
 28017                           ; BSR set to: 0
 28018  00D620  5190               	movf	___fldiv@aexp& (0+255),w,b
 28019  00D622  6F80               	movwf	??___fldiv& (0+255),b
 28020  00D624  6B81               	clrf	(??___fldiv+1)& (0+255),b
 28021  00D626  1F80               	comf	??___fldiv& (0+255),f,b
 28022  00D628  1F81               	comf	(??___fldiv+1)& (0+255),f,b
 28023  00D62A  4B80               	infsnz	??___fldiv& (0+255),f,b
 28024  00D62C  2B81               	incf	(??___fldiv+1)& (0+255),f,b
 28025  00D62E  518F               	movf	___fldiv@bexp& (0+255),w,b
 28026  00D630  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28027  00D632  6B83               	clrf	(??___fldiv+3)& (0+255),b
 28028  00D634  5180               	movf	??___fldiv& (0+255),w,b
 28029  00D636  2782               	addwf	(??___fldiv+2)& (0+255),f,b
 28030  00D638  5181               	movf	(??___fldiv+1)& (0+255),w,b
 28031  00D63A  2383               	addwfc	(??___fldiv+3)& (0+255),f,b
 28032  00D63C  0E7F               	movlw	127
 28033  00D63E  2582               	addwf	(??___fldiv+2)& (0+255),w,b
 28034  00D640  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28035  00D642  0E00               	movlw	0
 28036  00D644  2183               	addwfc	(??___fldiv+3)& (0+255),w,b
 28037  00D646  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28038                           
 28039                           ; BSR set to: 0
 28040  00D648  C078  F084         	movff	___fldiv@b,___fldiv@rem
 28041  00D64C  C079  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 28042  00D650  C07A  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 28043  00D654  C07B  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 28044                           
 28045                           ; BSR set to: 0
 28046  00D658  0E00               	movlw	0
 28047  00D65A  6F78               	movwf	___fldiv@b& (0+255),b
 28048  00D65C  0E00               	movlw	0
 28049  00D65E  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28050  00D660  0E00               	movlw	0
 28051  00D662  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28052  00D664  0E00               	movlw	0
 28053  00D666  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28054                           
 28055                           ; BSR set to: 0
 28056  00D668  0E00               	movlw	0
 28057  00D66A  6F8B               	movwf	___fldiv@grs& (0+255),b
 28058  00D66C  0E00               	movlw	0
 28059  00D66E  6F8C               	movwf	(___fldiv@grs+1)& (0+255),b
 28060  00D670  0E00               	movlw	0
 28061  00D672  6F8D               	movwf	(___fldiv@grs+2)& (0+255),b
 28062  00D674  0E00               	movlw	0
 28063  00D676  6F8E               	movwf	(___fldiv@grs+3)& (0+255),b
 28064                           
 28065                           ; BSR set to: 0
 28066  00D678  0E00               	movlw	0
 28067  00D67A  6F90               	movwf	___fldiv@aexp& (0+255),b
 28068  00D67C  D028               	goto	l3652
 28069  00D67E                     
 28070                           ; BSR set to: 0
 28071                           
 28072                           ; BSR set to: 0
 28073  00D67E  5190               	movf	___fldiv@aexp& (0+255),w,b
 28074  00D680  B4D8               	btfsc	status,2,c
 28075  00D682  D011               	goto	l3654
 28076                           
 28077                           ; BSR set to: 0
 28078  00D684  90D8               	bcf	status,0,c
 28079  00D686  3784               	rlcf	___fldiv@rem& (0+255),f,b
 28080  00D688  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 28081  00D68A  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 28082  00D68C  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 28083  00D68E  90D8               	bcf	status,0,c
 28084  00D690  3778               	rlcf	___fldiv@b& (0+255),f,b
 28085  00D692  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28086  00D694  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28087  00D696  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28088                           
 28089                           ; BSR set to: 0
 28090  00D698  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28091                           
 28092                           ; BSR set to: 0
 28093  00D69A  8178               	bsf	___fldiv@b& (0+255),0,b
 28094                           
 28095                           ; BSR set to: 0
 28096  00D69C  90D8               	bcf	status,0,c
 28097  00D69E  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28098  00D6A0  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28099  00D6A2  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28100  00D6A4  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28101  00D6A6                     l3654:
 28102                           
 28103                           ; BSR set to: 0
 28104                           
 28105                           ; BSR set to: 0
 28106  00D6A6  517C               	movf	___fldiv@a& (0+255),w,b
 28107  00D6A8  5D84               	subwf	___fldiv@rem& (0+255),w,b
 28108  00D6AA  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28109  00D6AC  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 28110  00D6AE  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28111  00D6B0  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 28112  00D6B2  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28113  00D6B4  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 28114  00D6B6  A0D8               	btfss	status,0,c
 28115  00D6B8  D009               	goto	l3656
 28116                           
 28117                           ; BSR set to: 0
 28118  00D6BA  8D8E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 28119                           
 28120                           ; BSR set to: 0
 28121  00D6BC  517C               	movf	___fldiv@a& (0+255),w,b
 28122  00D6BE  5F84               	subwf	___fldiv@rem& (0+255),f,b
 28123  00D6C0  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28124  00D6C2  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 28125  00D6C4  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28126  00D6C6  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 28127  00D6C8  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28128  00D6CA  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 28129  00D6CC                     l3656:
 28130                           
 28131                           ; BSR set to: 0
 28132                           
 28133                           ; BSR set to: 0
 28134  00D6CC  2B90               	incf	___fldiv@aexp& (0+255),f,b
 28135  00D6CE                     l3652:
 28136                           
 28137                           ; BSR set to: 0
 28138  00D6CE  0E19               	movlw	25
 28139  00D6D0  6590               	cpfsgt	___fldiv@aexp& (0+255),b
 28140  00D6D2  D7D5               	goto	l3653
 28141                           
 28142                           ; BSR set to: 0
 28143                           
 28144                           ; BSR set to: 0
 28145  00D6D4  5184               	movf	___fldiv@rem& (0+255),w,b
 28146  00D6D6  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 28147  00D6D8  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 28148  00D6DA  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 28149  00D6DC  B4D8               	btfsc	status,2,c
 28150  00D6DE  D011               	goto	l3659
 28151                           
 28152                           ; BSR set to: 0
 28153  00D6E0  818B               	bsf	___fldiv@grs& (0+255),0,b
 28154                           
 28155                           ; BSR set to: 0
 28156  00D6E2  D00F               	goto	l3659
 28157  00D6E4                     
 28158                           ; BSR set to: 0
 28159                           
 28160                           ; BSR set to: 0
 28161  00D6E4  90D8               	bcf	status,0,c
 28162  00D6E6  3778               	rlcf	___fldiv@b& (0+255),f,b
 28163  00D6E8  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28164  00D6EA  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28165  00D6EC  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28166                           
 28167                           ; BSR set to: 0
 28168  00D6EE  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28169                           
 28170                           ; BSR set to: 0
 28171  00D6F0  8178               	bsf	___fldiv@b& (0+255),0,b
 28172                           
 28173                           ; BSR set to: 0
 28174  00D6F2  90D8               	bcf	status,0,c
 28175  00D6F4  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28176  00D6F6  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28177  00D6F8  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28178  00D6FA  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28179  00D6FC  0789               	decf	___fldiv@new_exp& (0+255),f,b
 28180  00D6FE  A0D8               	btfss	status,0,c
 28181  00D700  078A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 28182  00D702                     l3659:
 28183                           
 28184                           ; BSR set to: 0
 28185                           
 28186                           ; BSR set to: 0
 28187  00D702  AF7A               	btfss	(___fldiv@b+2)& (0+255),7,b
 28188  00D704  D7EF               	goto	l3660
 28189                           
 28190                           ; BSR set to: 0
 28191                           
 28192                           ; BSR set to: 0
 28193  00D706  0E00               	movlw	0
 28194  00D708  6F90               	movwf	___fldiv@aexp& (0+255),b
 28195                           
 28196                           ; BSR set to: 0
 28197  00D70A  AF8E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 28198  00D70C  D016               	goto	l3666
 28199                           
 28200                           ; BSR set to: 0
 28201  00D70E  0EFF               	movlw	255
 28202  00D710  158B               	andwf	___fldiv@grs& (0+255),w,b
 28203  00D712  6F80               	movwf	??___fldiv& (0+255),b
 28204  00D714  0EFF               	movlw	255
 28205  00D716  158C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 28206  00D718  6F81               	movwf	(??___fldiv+1)& (0+255),b
 28207  00D71A  0EFF               	movlw	255
 28208  00D71C  158D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 28209  00D71E  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28210  00D720  0E7F               	movlw	127
 28211  00D722  158E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 28212  00D724  6F83               	movwf	(??___fldiv+3)& (0+255),b
 28213  00D726  5180               	movf	??___fldiv& (0+255),w,b
 28214  00D728  1181               	iorwf	(??___fldiv+1)& (0+255),w,b
 28215  00D72A  1182               	iorwf	(??___fldiv+2)& (0+255),w,b
 28216  00D72C  1183               	iorwf	(??___fldiv+3)& (0+255),w,b
 28217  00D72E  A4D8               	btfss	status,2,c
 28218  00D730  D002               	goto	u13020
 28219                           
 28220                           ; BSR set to: 0
 28221                           
 28222                           ; BSR set to: 0
 28223  00D732  A178               	btfss	___fldiv@b& (0+255),0,b
 28224  00D734  D002               	goto	l3666
 28225  00D736                     u13020:
 28226                           
 28227                           ; BSR set to: 0
 28228  00D736  0E01               	movlw	1
 28229  00D738  6F90               	movwf	___fldiv@aexp& (0+255),b
 28230  00D73A                     l3666:
 28231                           
 28232                           ; BSR set to: 0
 28233                           
 28234                           ; BSR set to: 0
 28235                           
 28236                           ; BSR set to: 0
 28237  00D73A  5190               	movf	___fldiv@aexp& (0+255),w,b
 28238  00D73C  B4D8               	btfsc	status,2,c
 28239  00D73E  D01F               	goto	l3668
 28240                           
 28241                           ; BSR set to: 0
 28242  00D740  0E01               	movlw	1
 28243  00D742  2778               	addwf	___fldiv@b& (0+255),f,b
 28244  00D744  0E00               	movlw	0
 28245  00D746  2379               	addwfc	(___fldiv@b+1)& (0+255),f,b
 28246  00D748  237A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 28247  00D74A  237B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 28248                           
 28249                           ; BSR set to: 0
 28250  00D74C  A17B               	btfss	(___fldiv@b+3)& (0+255),0,b
 28251  00D74E  D017               	goto	l3668
 28252                           
 28253                           ; BSR set to: 0
 28254  00D750  C078  F080         	movff	___fldiv@b,??___fldiv
 28255  00D754  C079  F081         	movff	___fldiv@b+1,??___fldiv+1
 28256  00D758  C07A  F082         	movff	___fldiv@b+2,??___fldiv+2
 28257  00D75C  C07B  F083         	movff	___fldiv@b+3,??___fldiv+3
 28258  00D760  3583               	rlcf	(??___fldiv+3)& (0+255),w,b
 28259  00D762  3383               	rrcf	(??___fldiv+3)& (0+255),f,b
 28260  00D764  3382               	rrcf	(??___fldiv+2)& (0+255),f,b
 28261  00D766  3381               	rrcf	(??___fldiv+1)& (0+255),f,b
 28262  00D768  3380               	rrcf	??___fldiv& (0+255),f,b
 28263  00D76A  C080  F078         	movff	??___fldiv,___fldiv@b
 28264  00D76E  C081  F079         	movff	??___fldiv+1,___fldiv@b+1
 28265  00D772  C082  F07A         	movff	??___fldiv+2,___fldiv@b+2
 28266  00D776  C083  F07B         	movff	??___fldiv+3,___fldiv@b+3
 28267                           
 28268                           ; BSR set to: 0
 28269  00D77A  4B89               	infsnz	___fldiv@new_exp& (0+255),f,b
 28270  00D77C  2B8A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 28271  00D77E                     l3668:
 28272                           
 28273                           ; BSR set to: 0
 28274                           
 28275                           ; BSR set to: 0
 28276                           
 28277                           ; BSR set to: 0
 28278  00D77E  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28279  00D780  D010               	goto	l3669
 28280  00D782  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28281  00D784  E103               	bnz	u13050
 28282  00D786  2989               	incf	___fldiv@new_exp& (0+255),w,b
 28283  00D788  A0D8               	btfss	status,0,c
 28284  00D78A  D00B               	goto	l3669
 28285  00D78C                     u13050:
 28286                           
 28287                           ; BSR set to: 0
 28288  00D78C  0E00               	movlw	0
 28289  00D78E  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28290  00D790  6989               	setf	___fldiv@new_exp& (0+255),b
 28291  00D792  0E00               	movlw	0
 28292  00D794  6F78               	movwf	___fldiv@b& (0+255),b
 28293  00D796  0E00               	movlw	0
 28294  00D798  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28295  00D79A  0E00               	movlw	0
 28296  00D79C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28297  00D79E  0E00               	movlw	0
 28298  00D7A0  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28299  00D7A2                     l3669:
 28300                           
 28301                           ; BSR set to: 0
 28302                           
 28303                           ; BSR set to: 0
 28304  00D7A2  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28305  00D7A4  D005               	goto	u13060
 28306  00D7A6  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28307  00D7A8  E111               	bnz	l14240
 28308  00D7AA  0589               	decf	___fldiv@new_exp& (0+255),w,b
 28309  00D7AC  B0D8               	btfsc	status,0,c
 28310  00D7AE  D00E               	goto	l3670
 28311  00D7B0                     u13060:
 28312                           
 28313                           ; BSR set to: 0
 28314  00D7B0  0E00               	movlw	0
 28315  00D7B2  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28316  00D7B4  0E00               	movlw	0
 28317  00D7B6  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28318  00D7B8  0E00               	movlw	0
 28319  00D7BA  6F78               	movwf	___fldiv@b& (0+255),b
 28320  00D7BC  0E00               	movlw	0
 28321  00D7BE  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28322  00D7C0  0E00               	movlw	0
 28323  00D7C2  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28324  00D7C4  0E00               	movlw	0
 28325  00D7C6  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28326  00D7C8  0E00               	movlw	0
 28327  00D7CA  6F88               	movwf	___fldiv@sign& (0+255),b
 28328  00D7CC                     l3670:
 28329  00D7CC                     l14240:
 28330                           
 28331                           ; BSR set to: 0
 28332  00D7CC  C089  F08F         	movff	___fldiv@new_exp,___fldiv@bexp
 28333                           
 28334                           ; BSR set to: 0
 28335  00D7D0  A18F               	btfss	___fldiv@bexp& (0+255),0,b
 28336  00D7D2  D002               	goto	l3671
 28337                           
 28338                           ; BSR set to: 0
 28339  00D7D4  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 28340  00D7D6  D001               	goto	l3672
 28341  00D7D8                     l3671:
 28342                           
 28343                           ; BSR set to: 0
 28344                           
 28345                           ; BSR set to: 0
 28346  00D7D8  9F7A               	bcf	(___fldiv@b+2)& (0+255),7,b
 28347  00D7DA                     l3672:
 28348                           
 28349                           ; BSR set to: 0
 28350                           
 28351                           ; BSR set to: 0
 28352  00D7DA  90D8               	bcf	status,0,c
 28353  00D7DC  318F               	rrcf	___fldiv@bexp& (0+255),w,b
 28354  00D7DE  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28355                           
 28356                           ; BSR set to: 0
 28357  00D7E0  5188               	movf	___fldiv@sign& (0+255),w,b
 28358  00D7E2  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28359                           
 28360                           ; BSR set to: 0
 28361  00D7E4  C078  F078         	movff	___fldiv@b,?___fldiv
 28362  00D7E8  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28363  00D7EC  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28364  00D7F0  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28365  00D7F4  0012               	return	
 28366  00D7F6                     __end_of___fldiv:
 28367                           	opt stack 0
 28368                           tblptru	equ	0xFF8
 28369                           tblptrh	equ	0xFF7
 28370                           tblptrl	equ	0xFF6
 28371                           tablat	equ	0xFF5
 28372                           prodh	equ	0xFF4
 28373                           prodl	equ	0xFF3
 28374                           intcon	equ	0xFF2
 28375                           postinc0	equ	0xFEE
 28376                           wreg	equ	0xFE8
 28377                           indf1	equ	0xFE7
 28378                           postinc1	equ	0xFE6
 28379                           postdec1	equ	0xFE5
 28380                           plusw1	equ	0xFE3
 28381                           fsr1h	equ	0xFE2
 28382                           fsr1l	equ	0xFE1
 28383                           indf2	equ	0xFDF
 28384                           postinc2	equ	0xFDE
 28385                           postdec2	equ	0xFDD
 28386                           plusw2	equ	0xFDB
 28387                           fsr2h	equ	0xFDA
 28388                           fsr2l	equ	0xFD9
 28389                           status	equ	0xFD8
 28390                           
 28391 ;; *************** function __display_signed_itoa *****************
 28392 ;; Defined at:
 28393 ;;		line 120 in file "display.c"
 28394 ;; Parameters:    Size  Location     Type
 28395 ;;  value           2   47[BANK0 ] int 
 28396 ;;  text            2   49[BANK0 ] PTR unsigned char 
 28397 ;;		 -> display_prepare@temp(10), 
 28398 ;; Auto vars:     Size  Location     Type
 28399 ;;		None
 28400 ;; Return value:  Size  Location     Type
 28401 ;;                  1    wreg      void 
 28402 ;; Registers used:
 28403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28404 ;; Tracked objects:
 28405 ;;		On entry : 0/0
 28406 ;;		On exit  : 0/0
 28407 ;;		Unchanged: 0/0
 28408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28409 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28412 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28413 ;;Total ram usage:        4 bytes
 28414 ;; Hardware stack levels used:    1
 28415 ;; Hardware stack levels required when called:   14
 28416 ;; This function calls:
 28417 ;;		__display_padded_itoa
 28418 ;; This function is called by:
 28419 ;;		_display_prepare
 28420 ;; This function uses a non-reentrant model
 28421 ;;
 28422                           
 28423                           	psect	text109
 28424  015370                     __ptext109:
 28425                           	opt stack 0
 28426  015370                     __display_signed_itoa:
 28427                           	opt stack 15
 28428                           
 28429                           ;display.c: 122: if(value<0)
 28430                           
 28431                           ; BSR set to: 0
 28432                           ;incstack = 0
 28433  015370  0100               	movlb	0	; () banked
 28434  015372  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 28435  015374  D00A               	goto	l1340
 28436                           
 28437                           ; BSR set to: 0
 28438                           ;display.c: 123: {;display.c: 124: value = -value;
 28439  015376  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 28440  015378  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 28441  01537A  B0D8               	btfsc	status,0,c
 28442  01537C  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 28443                           
 28444                           ; BSR set to: 0
 28445                           ;display.c: 125: text[0] = '-';
 28446  01537E  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28447  015382  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28448  015386  0E2D               	movlw	45
 28449  015388  D005               	goto	L39
 28450  01538A                     l1340:
 28451                           
 28452                           ; BSR set to: 0
 28453                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 28454                           
 28455                           ; BSR set to: 0
 28456  01538A  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28457  01538E  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28458  015392  0E2B               	movlw	43
 28459  015394                     L39:
 28460  015394  6EDF               	movwf	indf2,c
 28461                           
 28462                           ; BSR set to: 0
 28463                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 28464                           
 28465                           ; BSR set to: 0
 28466  015396  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 28467  01539A  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 28468  01539E  0E00               	movlw	0
 28469  0153A0  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 28470  0153A2  0E01               	movlw	1
 28471  0153A4  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 28472  0153A6  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 28473  0153A8  0E00               	movlw	0
 28474  0153AA  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 28475  0153AC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 28476  0153AE  EC43  F090         	call	__display_padded_itoa	;wreg free
 28477  0153B2  0012               	return		;funcret
 28478  0153B4                     __end_of__display_signed_itoa:
 28479                           	opt stack 0
 28480                           tblptru	equ	0xFF8
 28481                           tblptrh	equ	0xFF7
 28482                           tblptrl	equ	0xFF6
 28483                           tablat	equ	0xFF5
 28484                           prodh	equ	0xFF4
 28485                           prodl	equ	0xFF3
 28486                           intcon	equ	0xFF2
 28487                           postinc0	equ	0xFEE
 28488                           wreg	equ	0xFE8
 28489                           indf1	equ	0xFE7
 28490                           postinc1	equ	0xFE6
 28491                           postdec1	equ	0xFE5
 28492                           plusw1	equ	0xFE3
 28493                           fsr1h	equ	0xFE2
 28494                           fsr1l	equ	0xFE1
 28495                           indf2	equ	0xFDF
 28496                           postinc2	equ	0xFDE
 28497                           postdec2	equ	0xFDD
 28498                           plusw2	equ	0xFDB
 28499                           fsr2h	equ	0xFDA
 28500                           fsr2l	equ	0xFD9
 28501                           status	equ	0xFD8
 28502                           
 28503 ;; *************** function __display_padded_itoa *****************
 28504 ;; Defined at:
 28505 ;;		line 98 in file "display.c"
 28506 ;; Parameters:    Size  Location     Type
 28507 ;;  value           2   24[BANK0 ] int 
 28508 ;;  length          1   26[BANK0 ] unsigned char 
 28509 ;;  text            2   27[BANK0 ] PTR unsigned char 
 28510 ;;		 -> display_prepare@temp(10), 
 28511 ;; Auto vars:     Size  Location     Type
 28512 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 28513 ;;  padding         1   46[BANK0 ] unsigned char 
 28514 ;;  pos             1   45[BANK0 ] unsigned char 
 28515 ;;  len             1   44[BANK0 ] unsigned char 
 28516 ;; Return value:  Size  Location     Type
 28517 ;;                  1    wreg      void 
 28518 ;; Registers used:
 28519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28520 ;; Tracked objects:
 28521 ;;		On entry : 0/0
 28522 ;;		On exit  : 0/0
 28523 ;;		Unchanged: 0/0
 28524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28525 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28526 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28527 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28528 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28529 ;;Total ram usage:       23 bytes
 28530 ;; Hardware stack levels used:    1
 28531 ;; Hardware stack levels required when called:   13
 28532 ;; This function calls:
 28533 ;;		_itoa
 28534 ;;		_strlen
 28535 ;; This function is called by:
 28536 ;;		__display_signed_itoa
 28537 ;;		_display_prepare
 28538 ;; This function uses a non-reentrant model
 28539 ;;
 28540                           
 28541                           	psect	text110
 28542  012086                     __ptext110:
 28543                           	opt stack 0
 28544  012086                     __display_padded_itoa:
 28545                           	opt stack 15
 28546                           
 28547                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 28548                           
 28549                           ;incstack = 0
 28550  012086  0E82               	movlw	low __display_padded_itoa@tmp
 28551  012088  0100               	movlb	0	; () banked
 28552  01208A  6F70               	movwf	itoa@buf& (0+255),b
 28553  01208C  0E00               	movlw	high __display_padded_itoa@tmp
 28554  01208E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28555  012090  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 28556  012094  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 28557  012098  0E00               	movlw	0
 28558  01209A  6F75               	movwf	(itoa@base+1)& (0+255),b
 28559  01209C  0E0A               	movlw	10
 28560  01209E  6F74               	movwf	itoa@base& (0+255),b
 28561  0120A0  ECDA  F0A9         	call	_itoa	;wreg free
 28562                           
 28563                           ;display.c: 106: len = strlen(tmp);
 28564  0120A4  0E82               	movlw	low __display_padded_itoa@tmp
 28565  0120A6  0100               	movlb	0	; () banked
 28566  0120A8  6F60               	movwf	strlen@s& (0+255),b
 28567  0120AA  0E00               	movlw	high __display_padded_itoa@tmp
 28568  0120AC  6F61               	movwf	(strlen@s+1)& (0+255),b
 28569  0120AE  EC80  F0AA         	call	_strlen	;wreg free
 28570  0120B2  0100               	movlb	0	; () banked
 28571  0120B4  5160               	movf	?_strlen& (0+255),w,b
 28572  0120B6  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 28573                           
 28574                           ; BSR set to: 0
 28575                           ;display.c: 107: padding = 0;
 28576  0120B8  0E00               	movlw	0
 28577  0120BA  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 28578                           
 28579                           ;display.c: 108: while((padding+len)<length)
 28580  0120BC  D00B               	goto	l1331
 28581  0120BE                     
 28582                           ; BSR set to: 0
 28583                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 28584                           
 28585                           ; BSR set to: 0
 28586  0120BE  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28587  0120C0  0D01               	mullw	1
 28588  0120C2  50F3               	movf	prodl,w,c
 28589  0120C4  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28590  0120C6  6ED9               	movwf	fsr2l,c
 28591  0120C8  50F4               	movf	prodh,w,c
 28592  0120CA  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28593  0120CC  6EDA               	movwf	fsr2h,c
 28594  0120CE  0E20               	movlw	32
 28595  0120D0  6EDF               	movwf	indf2,c
 28596                           
 28597                           ; BSR set to: 0
 28598                           ;display.c: 111: ++padding;
 28599  0120D2  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 28600  0120D4                     l1331:
 28601                           
 28602                           ; BSR set to: 0
 28603                           
 28604                           ; BSR set to: 0
 28605  0120D4  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 28606  0120D6  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 28607  0120D8  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28608  0120DA  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 28609  0120DC  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 28610  0120E0  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 28611  0120E2  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 28612  0120E4  0E00               	movlw	0
 28613  0120E6  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 28614  0120E8  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28615  0120EA  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 28616  0120EC  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 28617  0120EE  0A80               	xorlw	128
 28618  0120F0  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 28619  0120F2  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28620  0120F4  0A80               	xorlw	128
 28621  0120F6  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 28622  0120F8  A0D8               	btfss	status,0,c
 28623  0120FA  D7E1               	goto	l1332
 28624                           
 28625                           ; BSR set to: 0
 28626                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 28627                           
 28628                           ; BSR set to: 0
 28629  0120FC  0E00               	movlw	0
 28630  0120FE  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 28631  012100  D018               	goto	l1334
 28632  012102                     
 28633                           ; BSR set to: 0
 28634                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 28635                           
 28636                           ; BSR set to: 0
 28637  012102  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28638  012104  0D01               	mullw	1
 28639  012106  0E82               	movlw	low __display_padded_itoa@tmp
 28640  012108  24F3               	addwf	prodl,w,c
 28641  01210A  6ED9               	movwf	fsr2l,c
 28642  01210C  0E00               	movlw	high __display_padded_itoa@tmp
 28643  01210E  20F4               	addwfc	prodh,w,c
 28644  012110  6EDA               	movwf	fsr2h,c
 28645  012112  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28646  012114  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28647  012118  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28648  01211A  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28649  01211C  0E00               	movlw	0
 28650  01211E  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28651  012120  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28652  012122  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28653  012124  6EE1               	movwf	fsr1l,c
 28654  012126  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28655  012128  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28656  01212A  6EE2               	movwf	fsr1h,c
 28657  01212C  CFDF FFE7          	movff	indf2,indf1
 28658                           
 28659                           ; BSR set to: 0
 28660  012130  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 28661  012132                     l1334:
 28662                           
 28663                           ; BSR set to: 0
 28664                           
 28665                           ; BSR set to: 0
 28666  012132  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28667  012134  0D01               	mullw	1
 28668  012136  0E82               	movlw	low __display_padded_itoa@tmp
 28669  012138  24F3               	addwf	prodl,w,c
 28670  01213A  6ED9               	movwf	fsr2l,c
 28671  01213C  0E00               	movlw	high __display_padded_itoa@tmp
 28672  01213E  20F4               	addwfc	prodh,w,c
 28673  012140  6EDA               	movwf	fsr2h,c
 28674  012142  50DF               	movf	indf2,w,c
 28675  012144  A4D8               	btfss	status,2,c
 28676  012146  D7DD               	goto	l1335
 28677                           
 28678                           ; BSR set to: 0
 28679                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 28680                           
 28681                           ; BSR set to: 0
 28682  012148  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28683  01214A  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28684  01214E  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28685  012150  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28686  012152  0E00               	movlw	0
 28687  012154  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28688  012156  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28689  012158  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28690  01215A  6ED9               	movwf	fsr2l,c
 28691  01215C  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28692  01215E  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28693  012160  6EDA               	movwf	fsr2h,c
 28694  012162  0E00               	movlw	0
 28695  012164  6EDF               	movwf	indf2,c
 28696                           
 28697                           ; BSR set to: 0
 28698  012166  0012               	return		;funcret
 28699  012168                     __end_of__display_padded_itoa:
 28700                           	opt stack 0
 28701                           tblptru	equ	0xFF8
 28702                           tblptrh	equ	0xFF7
 28703                           tblptrl	equ	0xFF6
 28704                           tablat	equ	0xFF5
 28705                           prodh	equ	0xFF4
 28706                           prodl	equ	0xFF3
 28707                           intcon	equ	0xFF2
 28708                           postinc0	equ	0xFEE
 28709                           wreg	equ	0xFE8
 28710                           indf1	equ	0xFE7
 28711                           postinc1	equ	0xFE6
 28712                           postdec1	equ	0xFE5
 28713                           plusw1	equ	0xFE3
 28714                           fsr1h	equ	0xFE2
 28715                           fsr1l	equ	0xFE1
 28716                           indf2	equ	0xFDF
 28717                           postinc2	equ	0xFDE
 28718                           postdec2	equ	0xFDD
 28719                           plusw2	equ	0xFDB
 28720                           fsr2h	equ	0xFDA
 28721                           fsr2l	equ	0xFD9
 28722                           status	equ	0xFD8
 28723                           
 28724 ;; *************** function __display_itoa_long *****************
 28725 ;; Defined at:
 28726 ;;		line 202 in file "display.c"
 28727 ;; Parameters:    Size  Location     Type
 28728 ;;  value           4   87[BANK0 ] long 
 28729 ;;  decimals        1   91[BANK0 ] unsigned char 
 28730 ;;  text            2   92[BANK0 ] PTR unsigned char 
 28731 ;;		 -> display_prepare@temp(10), 
 28732 ;; Auto vars:     Size  Location     Type
 28733 ;;  short_value     2   99[BANK0 ] int 
 28734 ;;  last_digit      1  101[BANK0 ] char 
 28735 ;;  length          1   98[BANK0 ] unsigned char 
 28736 ;; Return value:  Size  Location     Type
 28737 ;;                  1    wreg      void 
 28738 ;; Registers used:
 28739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28740 ;; Tracked objects:
 28741 ;;		On entry : 0/0
 28742 ;;		On exit  : 0/0
 28743 ;;		Unchanged: 0/0
 28744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28745 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28746 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28747 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28748 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28749 ;;Total ram usage:       15 bytes
 28750 ;; Hardware stack levels used:    1
 28751 ;; Hardware stack levels required when called:   14
 28752 ;; This function calls:
 28753 ;;		___aldiv
 28754 ;;		___almod
 28755 ;;		__display_itoa
 28756 ;;		_strlen
 28757 ;; This function is called by:
 28758 ;;		_display_prepare
 28759 ;; This function uses a non-reentrant model
 28760 ;;
 28761                           
 28762                           	psect	text111
 28763  010EDA                     __ptext111:
 28764                           	opt stack 0
 28765  010EDA                     __display_itoa_long:
 28766                           	opt stack 15
 28767                           
 28768                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 28769                           
 28770                           ; BSR set to: 0
 28771                           ;incstack = 0
 28772  010EDA  C0B7  F0C3         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 28773  010EDE  C0B8  F0C4         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 28774                           
 28775                           ;display.c: 209: if(short_value==value)
 28776  010EE2  C0C3  F0BE         	movff	__display_itoa_long@short_value,??__display_itoa_long
 28777  010EE6  C0C4  F0BF         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 28778  010EEA  0E00               	movlw	0
 28779  010EEC  0100               	movlb	0	; () banked
 28780  010EEE  BFBF               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 28781  010EF0  0EFF               	movlw	255
 28782  010EF2  6FC0               	movwf	(??__display_itoa_long+2)& (0+255),b
 28783  010EF4  6FC1               	movwf	(??__display_itoa_long+3)& (0+255),b
 28784  010EF6  51B7               	movf	__display_itoa_long@value& (0+255),w,b
 28785  010EF8  19BE               	xorwf	??__display_itoa_long& (0+255),w,b
 28786  010EFA  E117               	bnz	l17538
 28787  010EFC  51B8               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 28788  010EFE  19BF               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 28789  010F00  E114               	bnz	l17538
 28790  010F02  51B9               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 28791  010F04  19C0               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 28792  010F06  E111               	bnz	l17538
 28793  010F08  51BA               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 28794  010F0A  19C1               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 28795  010F0C  A4D8               	btfss	status,2,c
 28796  010F0E  D00D               	goto	l1367
 28797                           
 28798                           ; BSR set to: 0
 28799                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 28800  010F10  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 28801  010F14  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 28802  010F18  C0BB  F0A1         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 28803  010F1C  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 28804  010F20  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 28805  010F24  ECD3  F071         	call	__display_itoa	;wreg free
 28806                           
 28807                           ;display.c: 212: }
 28808  010F28  0012               	return	
 28809  010F2A                     l1367:
 28810  010F2A                     l17538:
 28811                           
 28812                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 28813  010F2A  C0B7  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 28814  010F2E  C0B8  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 28815  010F32  C0B9  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 28816  010F36  C0BA  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 28817  010F3A  0E0A               	movlw	10
 28818  010F3C  0100               	movlb	0	; () banked
 28819  010F3E  6F64               	movwf	___aldiv@divisor& (0+255),b
 28820  010F40  0E00               	movlw	0
 28821  010F42  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 28822  010F44  0E00               	movlw	0
 28823  010F46  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 28824  010F48  0E00               	movlw	0
 28825  010F4A  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 28826  010F4C  EC5B  F095         	call	___aldiv	;wreg free
 28827  010F50  C060  F0C3         	movff	?___aldiv,__display_itoa_long@short_value
 28828  010F54  C061  F0C4         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 28829                           
 28830                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 28831  010F58  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 28832  010F5C  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 28833  010F60  0100               	movlb	0	; () banked
 28834  010F62  05BB               	decf	__display_itoa_long@decimals& (0+255),w,b
 28835  010F64  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28836  010F66  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 28837  010F6A  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 28838  010F6E  ECD3  F071         	call	__display_itoa	;wreg free
 28839                           
 28840                           ;display.c: 217: length = strlen(text);
 28841  010F72  C0BC  F060         	movff	__display_itoa_long@text,strlen@s
 28842  010F76  C0BD  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 28843  010F7A  EC80  F0AA         	call	_strlen	;wreg free
 28844  010F7E  0100               	movlb	0	; () banked
 28845  010F80  5160               	movf	?_strlen& (0+255),w,b
 28846  010F82  6FC2               	movwf	__display_itoa_long@length& (0+255),b
 28847                           
 28848                           ; BSR set to: 0
 28849                           ;display.c: 218: last_digit = value % 10;
 28850  010F84  C0B7  F060         	movff	__display_itoa_long@value,___almod@dividend
 28851  010F88  C0B8  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 28852  010F8C  C0B9  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 28853  010F90  C0BA  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 28854  010F94  0E0A               	movlw	10
 28855  010F96  6F64               	movwf	___almod@divisor& (0+255),b
 28856  010F98  0E00               	movlw	0
 28857  010F9A  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 28858  010F9C  0E00               	movlw	0
 28859  010F9E  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 28860  010FA0  0E00               	movlw	0
 28861  010FA2  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 28862  010FA4  EC06  F099         	call	___almod	;wreg free
 28863  010FA8  0100               	movlb	0	; () banked
 28864  010FAA  5160               	movf	?___almod& (0+255),w,b
 28865  010FAC  6FC5               	movwf	__display_itoa_long@last_digit& (0+255),b
 28866                           
 28867                           ; BSR set to: 0
 28868                           ;display.c: 219: if(last_digit<0)
 28869  010FAE  BFC5               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 28870                           
 28871                           ; BSR set to: 0
 28872                           ;display.c: 220: last_digit = -last_digit;
 28873  010FB0  6DC5               	negf	__display_itoa_long@last_digit& (0+255),b
 28874                           
 28875                           ; BSR set to: 0
 28876                           ;display.c: 221: text[length] = last_digit + 0x30;
 28877                           
 28878                           ; BSR set to: 0
 28879  010FB2  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 28880  010FB4  0D01               	mullw	1
 28881  010FB6  50F3               	movf	prodl,w,c
 28882  010FB8  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 28883  010FBA  6ED9               	movwf	fsr2l,c
 28884  010FBC  50F4               	movf	prodh,w,c
 28885  010FBE  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 28886  010FC0  6EDA               	movwf	fsr2h,c
 28887  010FC2  51C5               	movf	__display_itoa_long@last_digit& (0+255),w,b
 28888  010FC4  0F30               	addlw	48
 28889  010FC6  6EDF               	movwf	indf2,c
 28890                           
 28891                           ; BSR set to: 0
 28892                           ;display.c: 222: text[length+1] = 0x00;
 28893  010FC8  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 28894  010FCA  6FBE               	movwf	??__display_itoa_long& (0+255),b
 28895  010FCC  6BBF               	clrf	(??__display_itoa_long+1)& (0+255),b
 28896  010FCE  0E01               	movlw	1
 28897  010FD0  27BE               	addwf	??__display_itoa_long& (0+255),f,b
 28898  010FD2  0E00               	movlw	0
 28899  010FD4  23BF               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 28900  010FD6  51BE               	movf	??__display_itoa_long& (0+255),w,b
 28901  010FD8  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 28902  010FDA  6ED9               	movwf	fsr2l,c
 28903  010FDC  51BF               	movf	(??__display_itoa_long+1)& (0+255),w,b
 28904  010FDE  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 28905  010FE0  6EDA               	movwf	fsr2h,c
 28906  010FE2  0E00               	movlw	0
 28907  010FE4  6EDF               	movwf	indf2,c
 28908  010FE6  0012               	return	
 28909  010FE8                     __end_of__display_itoa_long:
 28910                           	opt stack 0
 28911                           tblptru	equ	0xFF8
 28912                           tblptrh	equ	0xFF7
 28913                           tblptrl	equ	0xFF6
 28914                           tablat	equ	0xFF5
 28915                           prodh	equ	0xFF4
 28916                           prodl	equ	0xFF3
 28917                           intcon	equ	0xFF2
 28918                           postinc0	equ	0xFEE
 28919                           wreg	equ	0xFE8
 28920                           indf1	equ	0xFE7
 28921                           postinc1	equ	0xFE6
 28922                           postdec1	equ	0xFE5
 28923                           plusw1	equ	0xFE3
 28924                           fsr1h	equ	0xFE2
 28925                           fsr1l	equ	0xFE1
 28926                           indf2	equ	0xFDF
 28927                           postinc2	equ	0xFDE
 28928                           postdec2	equ	0xFDD
 28929                           plusw2	equ	0xFDB
 28930                           fsr2h	equ	0xFDA
 28931                           fsr2l	equ	0xFD9
 28932                           status	equ	0xFD8
 28933                           
 28934 ;; *************** function __display_itoa *****************
 28935 ;; Defined at:
 28936 ;;		line 134 in file "display.c"
 28937 ;; Parameters:    Size  Location     Type
 28938 ;;  value           2   63[BANK0 ] int 
 28939 ;;  decimals        1   65[BANK0 ] unsigned char 
 28940 ;;  text            2   66[BANK0 ] PTR unsigned char 
 28941 ;;		 -> display_prepare@temp(10), display_content(80), 
 28942 ;; Auto vars:     Size  Location     Type
 28943 ;;  tmp            10   74[BANK0 ] unsigned char [10]
 28944 ;;  pos             1   86[BANK0 ] unsigned char 
 28945 ;;  missing         1   85[BANK0 ] char 
 28946 ;;  len             1   84[BANK0 ] unsigned char 
 28947 ;; Return value:  Size  Location     Type
 28948 ;;                  1    wreg      void 
 28949 ;; Registers used:
 28950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28951 ;; Tracked objects:
 28952 ;;		On entry : 0/0
 28953 ;;		On exit  : 0/0
 28954 ;;		Unchanged: 0/0
 28955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28956 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28957 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28958 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28959 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28960 ;;Total ram usage:       24 bytes
 28961 ;; Hardware stack levels used:    1
 28962 ;; Hardware stack levels required when called:   13
 28963 ;; This function calls:
 28964 ;;		_itoa
 28965 ;;		_strlen
 28966 ;; This function is called by:
 28967 ;;		__display_itoa_long
 28968 ;;		_display_prepare
 28969 ;; This function uses a non-reentrant model
 28970 ;;
 28971                           
 28972                           	psect	text112
 28973  00E3A6                     __ptext112:
 28974                           	opt stack 0
 28975  00E3A6                     __display_itoa:
 28976                           	opt stack 15
 28977                           
 28978                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 28979                           
 28980                           ;incstack = 0
 28981  00E3A6  0EAA               	movlw	low __display_itoa@tmp
 28982  00E3A8  0100               	movlb	0	; () banked
 28983  00E3AA  6F70               	movwf	itoa@buf& (0+255),b
 28984  00E3AC  0E00               	movlw	high __display_itoa@tmp
 28985  00E3AE  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28986  00E3B0  C09F  F072         	movff	__display_itoa@value,itoa@val
 28987  00E3B4  C0A0  F073         	movff	__display_itoa@value+1,itoa@val+1
 28988  00E3B8  0E00               	movlw	0
 28989  00E3BA  6F75               	movwf	(itoa@base+1)& (0+255),b
 28990  00E3BC  0E0A               	movlw	10
 28991  00E3BE  6F74               	movwf	itoa@base& (0+255),b
 28992  00E3C0  ECDA  F0A9         	call	_itoa	;wreg free
 28993                           
 28994                           ;display.c: 141: len = strlen(tmp);
 28995  00E3C4  0EAA               	movlw	low __display_itoa@tmp
 28996  00E3C6  0100               	movlb	0	; () banked
 28997  00E3C8  6F60               	movwf	strlen@s& (0+255),b
 28998  00E3CA  0E00               	movlw	high __display_itoa@tmp
 28999  00E3CC  6F61               	movwf	(strlen@s+1)& (0+255),b
 29000  00E3CE  EC80  F0AA         	call	_strlen	;wreg free
 29001  00E3D2  0100               	movlb	0	; () banked
 29002  00E3D4  5160               	movf	?_strlen& (0+255),w,b
 29003  00E3D6  6FB4               	movwf	__display_itoa@len& (0+255),b
 29004                           
 29005                           ; BSR set to: 0
 29006                           ;display.c: 143: if(value<0)
 29007  00E3D8  AFA0               	btfss	(__display_itoa@value+1)& (0+255),7,b
 29008  00E3DA  D054               	goto	l1345
 29009                           
 29010                           ; BSR set to: 0
 29011                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 29012  00E3DC  51B4               	movf	__display_itoa@len& (0+255),w,b
 29013  00E3DE  0800               	sublw	0
 29014  00E3E0  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29015  00E3E2  0F02               	addlw	2
 29016  00E3E4  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29017                           
 29018                           ;display.c: 146: if(missing>0)
 29019  00E3E6  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29020  00E3E8  0A80               	xorlw	128
 29021  00E3EA  0F7F               	addlw	-129
 29022  00E3EC  A0D8               	btfss	status,0,c
 29023  00E3EE  D090               	goto	l1352
 29024                           
 29025                           ; BSR set to: 0
 29026                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 29027  00E3F0  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29028  00E3F4                     l16098:
 29029                           
 29030                           ; BSR set to: 0
 29031  00E3F4  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29032  00E3F6  B4D8               	btfsc	status,2,c
 29033  00E3F8  D042               	goto	u15210
 29034                           
 29035                           ; BSR set to: 0
 29036                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 29037                           
 29038                           ; BSR set to: 0
 29039                           
 29040                           ; BSR set to: 0
 29041  00E3FA  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29042  00E3FC  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29043  00E3FE  D004               	goto	u15200
 29044  00E400  0AFF               	xorlw	255
 29045  00E402  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29046  00E404  B0D8               	btfsc	status,0,c
 29047  00E406  D02A               	goto	l1349
 29048  00E408                     u15200:
 29049                           
 29050                           ; BSR set to: 0
 29051                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 29052  00E408  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29053  00E40C  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29054  00E40E  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29055  00E410  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29056  00E412  1FA4               	comf	??__display_itoa& (0+255),f,b
 29057  00E414  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29058  00E416  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29059  00E418  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29060  00E41A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29061  00E41C  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29062  00E41E  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29063  00E420  51A4               	movf	??__display_itoa& (0+255),w,b
 29064  00E422  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29065  00E424  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29066  00E426  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29067  00E428  0E01               	movlw	1
 29068  00E42A  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29069  00E42C  0E00               	movlw	0
 29070  00E42E  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29071  00E430  0EAA               	movlw	low __display_itoa@tmp
 29072  00E432  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29073  00E434  6ED9               	movwf	fsr2l,c
 29074  00E436  0E00               	movlw	high __display_itoa@tmp
 29075  00E438  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29076  00E43A  6EDA               	movwf	fsr2h,c
 29077  00E43C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29078  00E43E  6FA8               	movwf	(??__display_itoa+4)& (0+255),b
 29079  00E440  6BA9               	clrf	(??__display_itoa+5)& (0+255),b
 29080  00E442  0E01               	movlw	1
 29081  00E444  27A8               	addwf	(??__display_itoa+4)& (0+255),f,b
 29082  00E446  0E00               	movlw	0
 29083  00E448  23A9               	addwfc	(??__display_itoa+5)& (0+255),f,b
 29084  00E44A  0EAA               	movlw	low __display_itoa@tmp
 29085  00E44C  25A8               	addwf	(??__display_itoa+4)& (0+255),w,b
 29086  00E44E  6EE1               	movwf	fsr1l,c
 29087  00E450  0E00               	movlw	high __display_itoa@tmp
 29088  00E452  21A9               	addwfc	(??__display_itoa+5)& (0+255),w,b
 29089  00E454  6EE2               	movwf	fsr1h,c
 29090  00E456  CFDF FFE7          	movff	indf2,indf1
 29091                           
 29092                           ;display.c: 153: }
 29093  00E45A  D00F               	goto	l1350
 29094  00E45C                     l1349:
 29095                           
 29096                           ; BSR set to: 0
 29097                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 29098                           
 29099                           ; BSR set to: 0
 29100  00E45C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29101  00E45E  6FA4               	movwf	??__display_itoa& (0+255),b
 29102  00E460  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29103  00E462  0E01               	movlw	1
 29104  00E464  27A4               	addwf	??__display_itoa& (0+255),f,b
 29105  00E466  0E00               	movlw	0
 29106  00E468  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29107  00E46A  0EAA               	movlw	low __display_itoa@tmp
 29108  00E46C  25A4               	addwf	??__display_itoa& (0+255),w,b
 29109  00E46E  6ED9               	movwf	fsr2l,c
 29110  00E470  0E00               	movlw	high __display_itoa@tmp
 29111  00E472  21A5               	addwfc	(??__display_itoa+1)& (0+255),w,b
 29112  00E474  6EDA               	movwf	fsr2h,c
 29113  00E476  0E30               	movlw	48
 29114  00E478  6EDF               	movwf	indf2,c
 29115  00E47A                     l1350:
 29116                           
 29117                           ; BSR set to: 0
 29118                           
 29119                           ; BSR set to: 0
 29120  00E47A  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29121  00E47C  D7BB               	goto	l16098
 29122  00E47E                     u15210:
 29123                           
 29124                           ; BSR set to: 0
 29125                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 29126                           
 29127                           ; BSR set to: 0
 29128  00E47E  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29129  00E480  0F02               	addlw	2
 29130  00E482  D045               	goto	L40
 29131  00E484                     l1345:
 29132                           
 29133                           ; BSR set to: 0
 29134                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 29135                           
 29136                           ; BSR set to: 0
 29137  00E484  51B4               	movf	__display_itoa@len& (0+255),w,b
 29138  00E486  0800               	sublw	0
 29139  00E488  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29140  00E48A  6FA4               	movwf	??__display_itoa& (0+255),b
 29141  00E48C  29A4               	incf	??__display_itoa& (0+255),w,b
 29142  00E48E  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29143                           
 29144                           ;display.c: 165: if(missing>0)
 29145  00E490  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29146  00E492  0A80               	xorlw	128
 29147  00E494  0F7F               	addlw	-129
 29148  00E496  A0D8               	btfss	status,0,c
 29149  00E498  D03B               	goto	l1352
 29150                           
 29151                           ; BSR set to: 0
 29152                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 29153  00E49A  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29154  00E49E                     l16118:
 29155                           
 29156                           ; BSR set to: 0
 29157  00E49E  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29158  00E4A0  B4D8               	btfsc	status,2,c
 29159  00E4A2  D034               	goto	u15250
 29160                           
 29161                           ; BSR set to: 0
 29162                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 29163                           
 29164                           ; BSR set to: 0
 29165                           
 29166                           ; BSR set to: 0
 29167  00E4A4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29168  00E4A6  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29169  00E4A8  D004               	goto	u15240
 29170  00E4AA  0AFF               	xorlw	255
 29171  00E4AC  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29172  00E4AE  B0D8               	btfsc	status,0,c
 29173  00E4B0  D021               	goto	l1355
 29174  00E4B2                     u15240:
 29175                           
 29176                           ; BSR set to: 0
 29177                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 29178  00E4B2  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29179  00E4B6  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29180  00E4B8  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29181  00E4BA  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29182  00E4BC  1FA4               	comf	??__display_itoa& (0+255),f,b
 29183  00E4BE  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29184  00E4C0  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29185  00E4C2  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29186  00E4C4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29187  00E4C6  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29188  00E4C8  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29189  00E4CA  51A4               	movf	??__display_itoa& (0+255),w,b
 29190  00E4CC  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29191  00E4CE  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29192  00E4D0  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29193  00E4D2  0EAA               	movlw	low __display_itoa@tmp
 29194  00E4D4  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29195  00E4D6  6ED9               	movwf	fsr2l,c
 29196  00E4D8  0E00               	movlw	high __display_itoa@tmp
 29197  00E4DA  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29198  00E4DC  6EDA               	movwf	fsr2h,c
 29199  00E4DE  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29200  00E4E0  0D01               	mullw	1
 29201  00E4E2  0EAA               	movlw	low __display_itoa@tmp
 29202  00E4E4  24F3               	addwf	prodl,w,c
 29203  00E4E6  6EE1               	movwf	fsr1l,c
 29204  00E4E8  0E00               	movlw	high __display_itoa@tmp
 29205  00E4EA  20F4               	addwfc	prodh,w,c
 29206  00E4EC  6EE2               	movwf	fsr1h,c
 29207  00E4EE  CFDF FFE7          	movff	indf2,indf1
 29208                           
 29209                           ;display.c: 172: }
 29210  00E4F2  D00A               	goto	l1356
 29211  00E4F4                     l1355:
 29212                           
 29213                           ; BSR set to: 0
 29214                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 29215                           
 29216                           ; BSR set to: 0
 29217  00E4F4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29218  00E4F6  0D01               	mullw	1
 29219  00E4F8  0EAA               	movlw	low __display_itoa@tmp
 29220  00E4FA  24F3               	addwf	prodl,w,c
 29221  00E4FC  6ED9               	movwf	fsr2l,c
 29222  00E4FE  0E00               	movlw	high __display_itoa@tmp
 29223  00E500  20F4               	addwfc	prodh,w,c
 29224  00E502  6EDA               	movwf	fsr2h,c
 29225  00E504  0E30               	movlw	48
 29226  00E506  6EDF               	movwf	indf2,c
 29227  00E508                     l1356:
 29228                           
 29229                           ; BSR set to: 0
 29230                           
 29231                           ; BSR set to: 0
 29232  00E508  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29233  00E50A  D7C9               	goto	l16118
 29234  00E50C                     u15250:
 29235                           
 29236                           ; BSR set to: 0
 29237                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 29238                           
 29239                           ; BSR set to: 0
 29240  00E50C  29A1               	incf	__display_itoa@decimals& (0+255),w,b
 29241  00E50E                     L40:
 29242  00E50E  6FB4               	movwf	__display_itoa@len& (0+255),b
 29243  00E510                     l1352:
 29244                           
 29245                           ; BSR set to: 0
 29246                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 29247                           
 29248                           ; BSR set to: 0
 29249  00E510  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29250  00E512  0800               	sublw	0
 29251  00E514  25B4               	addwf	__display_itoa@len& (0+255),w,b
 29252  00E516  6FA4               	movwf	??__display_itoa& (0+255),b
 29253  00E518  05A4               	decf	??__display_itoa& (0+255),w,b
 29254  00E51A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29255                           
 29256                           ; BSR set to: 0
 29257                           ;display.c: 184: for(pos=0;pos<len;++pos)
 29258  00E51C  0E00               	movlw	0
 29259  00E51E  6FB6               	movwf	__display_itoa@pos& (0+255),b
 29260  00E520  D023               	goto	l1357
 29261  00E522                     
 29262                           ; BSR set to: 0
 29263                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 29264                           
 29265                           ; BSR set to: 0
 29266  00E522  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29267  00E524  0D01               	mullw	1
 29268  00E526  0EAA               	movlw	low __display_itoa@tmp
 29269  00E528  24F3               	addwf	prodl,w,c
 29270  00E52A  6ED9               	movwf	fsr2l,c
 29271  00E52C  0E00               	movlw	high __display_itoa@tmp
 29272  00E52E  20F4               	addwfc	prodh,w,c
 29273  00E530  6EDA               	movwf	fsr2h,c
 29274  00E532  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29275  00E534  0D01               	mullw	1
 29276  00E536  50F3               	movf	prodl,w,c
 29277  00E538  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29278  00E53A  6EE1               	movwf	fsr1l,c
 29279  00E53C  50F4               	movf	prodh,w,c
 29280  00E53E  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29281  00E540  6EE2               	movwf	fsr1h,c
 29282  00E542  CFDF FFE7          	movff	indf2,indf1
 29283                           
 29284                           ; BSR set to: 0
 29285                           ;display.c: 187: if(pos==decimals)
 29286  00E546  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29287  00E548  19B6               	xorwf	__display_itoa@pos& (0+255),w,b
 29288  00E54A  A4D8               	btfss	status,2,c
 29289  00E54C  D00C               	goto	l1359
 29290                           
 29291                           ; BSR set to: 0
 29292                           ;display.c: 188: {;display.c: 190: ++pos;
 29293  00E54E  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29294                           
 29295                           ; BSR set to: 0
 29296                           ;display.c: 191: text[pos] = '.';
 29297  00E550  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29298  00E552  0D01               	mullw	1
 29299  00E554  50F3               	movf	prodl,w,c
 29300  00E556  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29301  00E558  6ED9               	movwf	fsr2l,c
 29302  00E55A  50F4               	movf	prodh,w,c
 29303  00E55C  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29304  00E55E  6EDA               	movwf	fsr2h,c
 29305  00E560  0E2E               	movlw	46
 29306  00E562  6EDF               	movwf	indf2,c
 29307                           
 29308                           ;display.c: 192: break;
 29309  00E564  D01E               	goto	l1361
 29310  00E566                     l1359:
 29311                           
 29312                           ; BSR set to: 0
 29313                           
 29314                           ; BSR set to: 0
 29315  00E566  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29316  00E568                     l1357:
 29317                           
 29318                           ; BSR set to: 0
 29319                           
 29320                           ; BSR set to: 0
 29321  00E568  51B4               	movf	__display_itoa@len& (0+255),w,b
 29322  00E56A  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29323  00E56C  B0D8               	btfsc	status,0,c
 29324  00E56E  D019               	goto	l1361
 29325  00E570  D7D8               	goto	l1358
 29326  00E572                     
 29327                           ; BSR set to: 0
 29328                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 29329                           
 29330                           ; BSR set to: 0
 29331  00E572  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29332  00E574  0D01               	mullw	1
 29333  00E576  0EAA               	movlw	low __display_itoa@tmp
 29334  00E578  24F3               	addwf	prodl,w,c
 29335  00E57A  6ED9               	movwf	fsr2l,c
 29336  00E57C  0E00               	movlw	high __display_itoa@tmp
 29337  00E57E  20F4               	addwfc	prodh,w,c
 29338  00E580  6EDA               	movwf	fsr2h,c
 29339  00E582  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29340  00E584  6FA4               	movwf	??__display_itoa& (0+255),b
 29341  00E586  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29342  00E588  0E01               	movlw	1
 29343  00E58A  27A4               	addwf	??__display_itoa& (0+255),f,b
 29344  00E58C  0E00               	movlw	0
 29345  00E58E  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29346  00E590  51A4               	movf	??__display_itoa& (0+255),w,b
 29347  00E592  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29348  00E594  6EE1               	movwf	fsr1l,c
 29349  00E596  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29350  00E598  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29351  00E59A  6EE2               	movwf	fsr1h,c
 29352  00E59C  CFDF FFE7          	movff	indf2,indf1
 29353                           
 29354                           ; BSR set to: 0
 29355  00E5A0  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29356  00E5A2                     l1361:
 29357                           
 29358                           ; BSR set to: 0
 29359                           
 29360                           ; BSR set to: 0
 29361  00E5A2  51B4               	movf	__display_itoa@len& (0+255),w,b
 29362  00E5A4  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29363  00E5A6  A0D8               	btfss	status,0,c
 29364  00E5A8  D7E4               	goto	l1362
 29365                           
 29366                           ; BSR set to: 0
 29367                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 29368                           
 29369                           ; BSR set to: 0
 29370  00E5AA  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29371  00E5AC  6FA4               	movwf	??__display_itoa& (0+255),b
 29372  00E5AE  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29373  00E5B0  0E01               	movlw	1
 29374  00E5B2  27A4               	addwf	??__display_itoa& (0+255),f,b
 29375  00E5B4  0E00               	movlw	0
 29376  00E5B6  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29377  00E5B8  51A4               	movf	??__display_itoa& (0+255),w,b
 29378  00E5BA  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29379  00E5BC  6ED9               	movwf	fsr2l,c
 29380  00E5BE  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29381  00E5C0  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29382  00E5C2  6EDA               	movwf	fsr2h,c
 29383  00E5C4  0E00               	movlw	0
 29384  00E5C6  6EDF               	movwf	indf2,c
 29385                           
 29386                           ; BSR set to: 0
 29387  00E5C8  0012               	return		;funcret
 29388  00E5CA                     __end_of__display_itoa:
 29389                           	opt stack 0
 29390                           tblptru	equ	0xFF8
 29391                           tblptrh	equ	0xFF7
 29392                           tblptrl	equ	0xFF6
 29393                           tablat	equ	0xFF5
 29394                           prodh	equ	0xFF4
 29395                           prodl	equ	0xFF3
 29396                           intcon	equ	0xFF2
 29397                           postinc0	equ	0xFEE
 29398                           wreg	equ	0xFE8
 29399                           indf1	equ	0xFE7
 29400                           postinc1	equ	0xFE6
 29401                           postdec1	equ	0xFE5
 29402                           plusw1	equ	0xFE3
 29403                           fsr1h	equ	0xFE2
 29404                           fsr1l	equ	0xFE1
 29405                           indf2	equ	0xFDF
 29406                           postinc2	equ	0xFDE
 29407                           postdec2	equ	0xFDD
 29408                           plusw2	equ	0xFDB
 29409                           fsr2h	equ	0xFDA
 29410                           fsr2l	equ	0xFD9
 29411                           status	equ	0xFD8
 29412                           
 29413 ;; *************** function _strlen *****************
 29414 ;; Defined at:
 29415 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 29416 ;; Parameters:    Size  Location     Type
 29417 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 29418 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29419 ;; Auto vars:     Size  Location     Type
 29420 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 29421 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29422 ;; Return value:  Size  Location     Type
 29423 ;;                  2    0[BANK0 ] unsigned int 
 29424 ;; Registers used:
 29425 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29426 ;; Tracked objects:
 29427 ;;		On entry : 0/0
 29428 ;;		On exit  : 0/0
 29429 ;;		Unchanged: 0/0
 29430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29431 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29433 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29434 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29435 ;;Total ram usage:        6 bytes
 29436 ;; Hardware stack levels used:    1
 29437 ;; Hardware stack levels required when called:   10
 29438 ;; This function calls:
 29439 ;;		Nothing
 29440 ;; This function is called by:
 29441 ;;		__display_padded_itoa
 29442 ;;		__display_itoa
 29443 ;;		__display_itoa_long
 29444 ;;		_display_prepare
 29445 ;; This function uses a non-reentrant model
 29446 ;;
 29447                           
 29448                           	psect	text113
 29449  015500                     __ptext113:
 29450                           	opt stack 0
 29451  015500                     _strlen:
 29452                           	opt stack 19
 29453                           
 29454                           ; BSR set to: 0
 29455                           ;incstack = 0
 29456  015500  C060  F064         	movff	strlen@s,strlen@cp
 29457  015504  C061  F065         	movff	strlen@s+1,strlen@cp+1
 29458  015508  D003               	goto	l3826
 29459  01550A  0100               	movlb	0	; () banked
 29460  01550C  4B64               	infsnz	strlen@cp& (0+255),f,b
 29461  01550E  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 29462  015510                     l3826:
 29463                           
 29464                           ; BSR set to: 0
 29465  015510  C064  FFD9         	movff	strlen@cp,fsr2l
 29466  015514  C065  FFDA         	movff	strlen@cp+1,fsr2h
 29467  015518  50DF               	movf	indf2,w,c
 29468  01551A  A4D8               	btfss	status,2,c
 29469  01551C  D7F6               	goto	l3827
 29470  01551E  C060  F062         	movff	strlen@s,??_strlen
 29471  015522  C061  F063         	movff	strlen@s+1,??_strlen+1
 29472  015526  0100               	movlb	0	; () banked
 29473  015528  1F62               	comf	??_strlen& (0+255),f,b
 29474  01552A  1F63               	comf	(??_strlen+1)& (0+255),f,b
 29475  01552C  4B62               	infsnz	??_strlen& (0+255),f,b
 29476  01552E  2B63               	incf	(??_strlen+1)& (0+255),f,b
 29477  015530  5164               	movf	strlen@cp& (0+255),w,b
 29478  015532  2562               	addwf	??_strlen& (0+255),w,b
 29479  015534  6F60               	movwf	?_strlen& (0+255),b
 29480  015536  5165               	movf	(strlen@cp+1)& (0+255),w,b
 29481  015538  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 29482  01553A  6F61               	movwf	(?_strlen+1)& (0+255),b
 29483  01553C  0012               	return	
 29484  01553E                     __end_of_strlen:
 29485                           	opt stack 0
 29486                           tblptru	equ	0xFF8
 29487                           tblptrh	equ	0xFF7
 29488                           tblptrl	equ	0xFF6
 29489                           tablat	equ	0xFF5
 29490                           prodh	equ	0xFF4
 29491                           prodl	equ	0xFF3
 29492                           intcon	equ	0xFF2
 29493                           postinc0	equ	0xFEE
 29494                           wreg	equ	0xFE8
 29495                           indf1	equ	0xFE7
 29496                           postinc1	equ	0xFE6
 29497                           postdec1	equ	0xFE5
 29498                           plusw1	equ	0xFE3
 29499                           fsr1h	equ	0xFE2
 29500                           fsr1l	equ	0xFE1
 29501                           indf2	equ	0xFDF
 29502                           postinc2	equ	0xFDE
 29503                           postdec2	equ	0xFDD
 29504                           plusw2	equ	0xFDB
 29505                           fsr2h	equ	0xFDA
 29506                           fsr2l	equ	0xFD9
 29507                           status	equ	0xFD8
 29508                           
 29509 ;; *************** function _itoa *****************
 29510 ;; Defined at:
 29511 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29512 ;; Parameters:    Size  Location     Type
 29513 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 29514 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29515 ;;  val             2   18[BANK0 ] int 
 29516 ;;  base            2   20[BANK0 ] int 
 29517 ;; Auto vars:     Size  Location     Type
 29518 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 29519 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29520 ;; Return value:  Size  Location     Type
 29521 ;;                  2   16[BANK0 ] PTR unsigned char 
 29522 ;; Registers used:
 29523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29524 ;; Tracked objects:
 29525 ;;		On entry : 0/0
 29526 ;;		On exit  : 0/0
 29527 ;;		Unchanged: 0/0
 29528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29529 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29532 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29533 ;;Total ram usage:        8 bytes
 29534 ;; Hardware stack levels used:    1
 29535 ;; Hardware stack levels required when called:   12
 29536 ;; This function calls:
 29537 ;;		_utoa
 29538 ;; This function is called by:
 29539 ;;		__display_padded_itoa
 29540 ;;		__display_itoa
 29541 ;;		__display_itoa_u16
 29542 ;; This function uses a non-reentrant model
 29543 ;;
 29544                           
 29545                           	psect	text114
 29546  0153B4                     __ptext114:
 29547                           	opt stack 0
 29548  0153B4                     _itoa:
 29549                           	opt stack 14
 29550                           
 29551                           ; BSR set to: 0
 29552                           ;incstack = 0
 29553  0153B4  C070  F076         	movff	itoa@buf,itoa@cp
 29554  0153B8  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 29555  0153BC  0100               	movlb	0	; () banked
 29556  0153BE  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 29557  0153C0  D00C               	goto	l3778
 29558                           
 29559                           ; BSR set to: 0
 29560  0153C2  C070  FFD9         	movff	itoa@buf,fsr2l
 29561  0153C6  C071  FFDA         	movff	itoa@buf+1,fsr2h
 29562  0153CA  0E2D               	movlw	45
 29563  0153CC  6EDF               	movwf	indf2,c
 29564                           
 29565                           ; BSR set to: 0
 29566  0153CE  4B70               	infsnz	itoa@buf& (0+255),f,b
 29567  0153D0  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 29568                           
 29569                           ; BSR set to: 0
 29570  0153D2  6D72               	negf	itoa@val& (0+255),b
 29571  0153D4  1F73               	comf	(itoa@val+1)& (0+255),f,b
 29572  0153D6  B0D8               	btfsc	status,0,c
 29573  0153D8  2B73               	incf	(itoa@val+1)& (0+255),f,b
 29574  0153DA                     l3778:
 29575                           
 29576                           ; BSR set to: 0
 29577                           
 29578                           ; BSR set to: 0
 29579  0153DA  C070  F067         	movff	itoa@buf,utoa@buf
 29580  0153DE  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 29581  0153E2  C072  F069         	movff	itoa@val,utoa@val
 29582  0153E6  C073  F06A         	movff	itoa@val+1,utoa@val+1
 29583  0153EA  C074  F06B         	movff	itoa@base,utoa@base
 29584  0153EE  C075  F06C         	movff	itoa@base+1,utoa@base+1
 29585  0153F2  EC5D  F099         	call	_utoa	;wreg free
 29586  0153F6  0012               	return	
 29587  0153F8                     __end_of_itoa:
 29588                           	opt stack 0
 29589                           tblptru	equ	0xFF8
 29590                           tblptrh	equ	0xFF7
 29591                           tblptrl	equ	0xFF6
 29592                           tablat	equ	0xFF5
 29593                           prodh	equ	0xFF4
 29594                           prodl	equ	0xFF3
 29595                           intcon	equ	0xFF2
 29596                           postinc0	equ	0xFEE
 29597                           wreg	equ	0xFE8
 29598                           indf1	equ	0xFE7
 29599                           postinc1	equ	0xFE6
 29600                           postdec1	equ	0xFE5
 29601                           plusw1	equ	0xFE3
 29602                           fsr1h	equ	0xFE2
 29603                           fsr1l	equ	0xFE1
 29604                           indf2	equ	0xFDF
 29605                           postinc2	equ	0xFDE
 29606                           postdec2	equ	0xFDD
 29607                           plusw2	equ	0xFDB
 29608                           fsr2h	equ	0xFDA
 29609                           fsr2l	equ	0xFD9
 29610                           status	equ	0xFD8
 29611                           
 29612 ;; *************** function _utoa *****************
 29613 ;; Defined at:
 29614 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29615 ;; Parameters:    Size  Location     Type
 29616 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 29617 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29618 ;;  val             2    9[BANK0 ] unsigned int 
 29619 ;;  base            2   11[BANK0 ] int 
 29620 ;; Auto vars:     Size  Location     Type
 29621 ;;  v               2   13[BANK0 ] unsigned int 
 29622 ;;  c               1   15[BANK0 ] unsigned char 
 29623 ;; Return value:  Size  Location     Type
 29624 ;;                  2    7[BANK0 ] PTR unsigned char 
 29625 ;; Registers used:
 29626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29627 ;; Tracked objects:
 29628 ;;		On entry : 0/0
 29629 ;;		On exit  : 0/0
 29630 ;;		Unchanged: 0/0
 29631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29632 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29633 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29635 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29636 ;;Total ram usage:        9 bytes
 29637 ;; Hardware stack levels used:    1
 29638 ;; Hardware stack levels required when called:   11
 29639 ;; This function calls:
 29640 ;;		___lwdiv
 29641 ;;		___lwmod
 29642 ;; This function is called by:
 29643 ;;		_itoa
 29644 ;; This function uses a non-reentrant model
 29645 ;;
 29646                           
 29647                           	psect	text115
 29648  0132BA                     __ptext115:
 29649                           	opt stack 0
 29650  0132BA                     _utoa:
 29651                           	opt stack 14
 29652                           
 29653                           ;incstack = 0
 29654  0132BA  C069  F06D         	movff	utoa@val,utoa@v
 29655  0132BE  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 29656  0132C2  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 29657  0132C6  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 29658  0132CA  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29659  0132CE  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29660  0132D2  EC6C  F0A7         	call	___lwdiv	;wreg free
 29661  0132D6  C060  F06D         	movff	?___lwdiv,utoa@v
 29662  0132DA  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 29663  0132DE  0100               	movlb	0	; () banked
 29664  0132E0  4B67               	infsnz	utoa@buf& (0+255),f,b
 29665  0132E2  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29666                           
 29667                           ; BSR set to: 0
 29668  0132E4  516D               	movf	utoa@v& (0+255),w,b
 29669  0132E6  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 29670  0132E8  A4D8               	btfss	status,2,c
 29671  0132EA  D7EB               	goto	l3782
 29672                           
 29673                           ; BSR set to: 0
 29674                           
 29675                           ; BSR set to: 0
 29676  0132EC  C067  FFD9         	movff	utoa@buf,fsr2l
 29677  0132F0  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29678  0132F4  0E00               	movlw	0
 29679  0132F6  6EDF               	movwf	indf2,c
 29680                           
 29681                           ; BSR set to: 0
 29682  0132F8  0767               	decf	utoa@buf& (0+255),f,b
 29683  0132FA  A0D8               	btfss	status,0,c
 29684  0132FC  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29685  0132FE                     
 29686                           ; BSR set to: 0
 29687                           
 29688                           ; BSR set to: 0
 29689  0132FE  C069  F060         	movff	utoa@val,___lwmod@dividend
 29690  013302  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 29691  013306  C06B  F062         	movff	utoa@base,___lwmod@divisor
 29692  01330A  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 29693  01330E  ECFC  F0A9         	call	___lwmod	;wreg free
 29694  013312  0100               	movlb	0	; () banked
 29695  013314  5160               	movf	?___lwmod& (0+255),w,b
 29696  013316  6F6F               	movwf	utoa@c& (0+255),b
 29697                           
 29698                           ; BSR set to: 0
 29699  013318  C069  F060         	movff	utoa@val,___lwdiv@dividend
 29700  01331C  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 29701  013320  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29702  013324  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29703  013328  EC6C  F0A7         	call	___lwdiv	;wreg free
 29704  01332C  C060  F069         	movff	?___lwdiv,utoa@val
 29705  013330  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 29706  013334  0E09               	movlw	9
 29707  013336  0100               	movlb	0	; () banked
 29708  013338  656F               	cpfsgt	utoa@c& (0+255),b
 29709  01333A  D002               	goto	l3785
 29710                           
 29711                           ; BSR set to: 0
 29712  01333C  0E07               	movlw	7
 29713  01333E  276F               	addwf	utoa@c& (0+255),f,b
 29714  013340                     l3785:
 29715                           
 29716                           ; BSR set to: 0
 29717  013340  0E30               	movlw	48
 29718  013342  276F               	addwf	utoa@c& (0+255),f,b
 29719                           
 29720                           ; BSR set to: 0
 29721  013344  C067  FFD9         	movff	utoa@buf,fsr2l
 29722  013348  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29723  01334C  C06F  FFDF         	movff	utoa@c,indf2
 29724                           
 29725                           ; BSR set to: 0
 29726  013350  0767               	decf	utoa@buf& (0+255),f,b
 29727  013352  A0D8               	btfss	status,0,c
 29728  013354  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29729                           
 29730                           ; BSR set to: 0
 29731  013356  5169               	movf	utoa@val& (0+255),w,b
 29732  013358  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 29733  01335A  A4D8               	btfss	status,2,c
 29734  01335C  D7D0               	goto	l3784
 29735                           
 29736                           ; BSR set to: 0
 29737                           ;	Return value of _utoa is never used
 29738                           
 29739                           ; BSR set to: 0
 29740  01335E  4B67               	infsnz	utoa@buf& (0+255),f,b
 29741  013360  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29742  013362  0012               	return	
 29743  013364                     __end_of_utoa:
 29744                           	opt stack 0
 29745                           tblptru	equ	0xFF8
 29746                           tblptrh	equ	0xFF7
 29747                           tblptrl	equ	0xFF6
 29748                           tablat	equ	0xFF5
 29749                           prodh	equ	0xFF4
 29750                           prodl	equ	0xFF3
 29751                           intcon	equ	0xFF2
 29752                           postinc0	equ	0xFEE
 29753                           wreg	equ	0xFE8
 29754                           indf1	equ	0xFE7
 29755                           postinc1	equ	0xFE6
 29756                           postdec1	equ	0xFE5
 29757                           plusw1	equ	0xFE3
 29758                           fsr1h	equ	0xFE2
 29759                           fsr1l	equ	0xFE1
 29760                           indf2	equ	0xFDF
 29761                           postinc2	equ	0xFDE
 29762                           postdec2	equ	0xFDD
 29763                           plusw2	equ	0xFDB
 29764                           fsr2h	equ	0xFDA
 29765                           fsr2l	equ	0xFD9
 29766                           status	equ	0xFD8
 29767                           
 29768 ;; *************** function ___lwmod *****************
 29769 ;; Defined at:
 29770 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 29771 ;; Parameters:    Size  Location     Type
 29772 ;;  dividend        2    0[BANK0 ] unsigned int 
 29773 ;;  divisor         2    2[BANK0 ] unsigned int 
 29774 ;; Auto vars:     Size  Location     Type
 29775 ;;  counter         1    4[BANK0 ] unsigned char 
 29776 ;; Return value:  Size  Location     Type
 29777 ;;                  2    0[BANK0 ] unsigned int 
 29778 ;; Registers used:
 29779 ;;		wreg, status,2, status,0
 29780 ;; Tracked objects:
 29781 ;;		On entry : 0/0
 29782 ;;		On exit  : 0/0
 29783 ;;		Unchanged: 0/0
 29784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29785 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29788 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29789 ;;Total ram usage:        5 bytes
 29790 ;; Hardware stack levels used:    1
 29791 ;; Hardware stack levels required when called:   10
 29792 ;; This function calls:
 29793 ;;		Nothing
 29794 ;; This function is called by:
 29795 ;;		_utoa
 29796 ;; This function uses a non-reentrant model
 29797 ;;
 29798                           
 29799                           	psect	text116
 29800  0153F8                     __ptext116:
 29801                           	opt stack 0
 29802  0153F8                     ___lwmod:
 29803                           	opt stack 14
 29804                           
 29805                           ; BSR set to: 0
 29806                           ;incstack = 0
 29807  0153F8  0100               	movlb	0	; () banked
 29808  0153FA  5162               	movf	___lwmod@divisor& (0+255),w,b
 29809  0153FC  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 29810  0153FE  B4D8               	btfsc	status,2,c
 29811  015400  D018               	goto	l3575
 29812                           
 29813                           ; BSR set to: 0
 29814  015402  0E01               	movlw	1
 29815  015404  6F64               	movwf	___lwmod@counter& (0+255),b
 29816  015406  D004               	goto	l3570
 29817  015408                     
 29818                           ; BSR set to: 0
 29819                           
 29820                           ; BSR set to: 0
 29821  015408  90D8               	bcf	status,0,c
 29822  01540A  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 29823  01540C  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 29824  01540E  2B64               	incf	___lwmod@counter& (0+255),f,b
 29825  015410                     l3570:
 29826                           
 29827                           ; BSR set to: 0
 29828                           
 29829                           ; BSR set to: 0
 29830  015410  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 29831  015412  D7FA               	goto	l3571
 29832  015414                     u10970:
 29833                           
 29834                           ; BSR set to: 0
 29835                           
 29836                           ; BSR set to: 0
 29837                           
 29838                           ; BSR set to: 0
 29839  015414  5162               	movf	___lwmod@divisor& (0+255),w,b
 29840  015416  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 29841  015418  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29842  01541A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 29843  01541C  A0D8               	btfss	status,0,c
 29844  01541E  D004               	goto	l3574
 29845                           
 29846                           ; BSR set to: 0
 29847  015420  5162               	movf	___lwmod@divisor& (0+255),w,b
 29848  015422  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 29849  015424  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29850  015426  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 29851  015428                     l3574:
 29852                           
 29853                           ; BSR set to: 0
 29854                           
 29855                           ; BSR set to: 0
 29856  015428  90D8               	bcf	status,0,c
 29857  01542A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 29858  01542C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 29859                           
 29860                           ; BSR set to: 0
 29861  01542E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 29862  015430  D7F1               	goto	u10970
 29863  015432                     l3575:
 29864                           
 29865                           ; BSR set to: 0
 29866                           
 29867                           ; BSR set to: 0
 29868  015432  C060  F060         	movff	___lwmod@dividend,?___lwmod
 29869  015436  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 29870                           
 29871                           ; BSR set to: 0
 29872  01543A  0012               	return		;funcret
 29873  01543C                     __end_of___lwmod:
 29874                           	opt stack 0
 29875                           tblptru	equ	0xFF8
 29876                           tblptrh	equ	0xFF7
 29877                           tblptrl	equ	0xFF6
 29878                           tablat	equ	0xFF5
 29879                           prodh	equ	0xFF4
 29880                           prodl	equ	0xFF3
 29881                           intcon	equ	0xFF2
 29882                           postinc0	equ	0xFEE
 29883                           wreg	equ	0xFE8
 29884                           indf1	equ	0xFE7
 29885                           postinc1	equ	0xFE6
 29886                           postdec1	equ	0xFE5
 29887                           plusw1	equ	0xFE3
 29888                           fsr1h	equ	0xFE2
 29889                           fsr1l	equ	0xFE1
 29890                           indf2	equ	0xFDF
 29891                           postinc2	equ	0xFDE
 29892                           postdec2	equ	0xFDD
 29893                           plusw2	equ	0xFDB
 29894                           fsr2h	equ	0xFDA
 29895                           fsr2l	equ	0xFD9
 29896                           status	equ	0xFD8
 29897                           
 29898 ;; *************** function ___lwdiv *****************
 29899 ;; Defined at:
 29900 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 29901 ;; Parameters:    Size  Location     Type
 29902 ;;  dividend        2    0[BANK0 ] unsigned int 
 29903 ;;  divisor         2    2[BANK0 ] unsigned int 
 29904 ;; Auto vars:     Size  Location     Type
 29905 ;;  quotient        2    4[BANK0 ] unsigned int 
 29906 ;;  counter         1    6[BANK0 ] unsigned char 
 29907 ;; Return value:  Size  Location     Type
 29908 ;;                  2    0[BANK0 ] unsigned int 
 29909 ;; Registers used:
 29910 ;;		wreg, status,2, status,0
 29911 ;; Tracked objects:
 29912 ;;		On entry : 0/0
 29913 ;;		On exit  : 0/0
 29914 ;;		Unchanged: 0/0
 29915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29917 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29919 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29920 ;;Total ram usage:        7 bytes
 29921 ;; Hardware stack levels used:    1
 29922 ;; Hardware stack levels required when called:   10
 29923 ;; This function calls:
 29924 ;;		Nothing
 29925 ;; This function is called by:
 29926 ;;		_utoa
 29927 ;; This function uses a non-reentrant model
 29928 ;;
 29929                           
 29930                           	psect	text117
 29931  014ED8                     __ptext117:
 29932                           	opt stack 0
 29933  014ED8                     ___lwdiv:
 29934                           	opt stack 14
 29935                           
 29936                           ; BSR set to: 0
 29937                           ;incstack = 0
 29938  014ED8  0E00               	movlw	0
 29939  014EDA  0100               	movlb	0	; () banked
 29940  014EDC  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29941  014EDE  0E00               	movlw	0
 29942  014EE0  6F64               	movwf	___lwdiv@quotient& (0+255),b
 29943                           
 29944                           ; BSR set to: 0
 29945  014EE2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29946  014EE4  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29947  014EE6  B4D8               	btfsc	status,2,c
 29948  014EE8  D01C               	goto	l3565
 29949                           
 29950                           ; BSR set to: 0
 29951  014EEA  0E01               	movlw	1
 29952  014EEC  6F66               	movwf	___lwdiv@counter& (0+255),b
 29953  014EEE  D004               	goto	l3560
 29954  014EF0                     
 29955                           ; BSR set to: 0
 29956                           
 29957                           ; BSR set to: 0
 29958  014EF0  90D8               	bcf	status,0,c
 29959  014EF2  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 29960  014EF4  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29961  014EF6  2B66               	incf	___lwdiv@counter& (0+255),f,b
 29962  014EF8                     l3560:
 29963                           
 29964                           ; BSR set to: 0
 29965                           
 29966                           ; BSR set to: 0
 29967  014EF8  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29968  014EFA  D7FA               	goto	l3561
 29969  014EFC                     u10940:
 29970                           
 29971                           ; BSR set to: 0
 29972                           
 29973                           ; BSR set to: 0
 29974                           
 29975                           ; BSR set to: 0
 29976  014EFC  90D8               	bcf	status,0,c
 29977  014EFE  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 29978  014F00  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29979                           
 29980                           ; BSR set to: 0
 29981  014F02  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29982  014F04  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 29983  014F06  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29984  014F08  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29985  014F0A  A0D8               	btfss	status,0,c
 29986  014F0C  D005               	goto	l3564
 29987                           
 29988                           ; BSR set to: 0
 29989  014F0E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29990  014F10  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 29991  014F12  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29992  014F14  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29993                           
 29994                           ; BSR set to: 0
 29995  014F16  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 29996  014F18                     l3564:
 29997                           
 29998                           ; BSR set to: 0
 29999                           
 30000                           ; BSR set to: 0
 30001  014F18  90D8               	bcf	status,0,c
 30002  014F1A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30003  014F1C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 30004                           
 30005                           ; BSR set to: 0
 30006  014F1E  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 30007  014F20  D7ED               	goto	u10940
 30008  014F22                     l3565:
 30009                           
 30010                           ; BSR set to: 0
 30011                           
 30012                           ; BSR set to: 0
 30013  014F22  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 30014  014F26  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30015                           
 30016                           ; BSR set to: 0
 30017  014F2A  0012               	return		;funcret
 30018  014F2C                     __end_of___lwdiv:
 30019                           	opt stack 0
 30020                           tblptru	equ	0xFF8
 30021                           tblptrh	equ	0xFF7
 30022                           tblptrl	equ	0xFF6
 30023                           tablat	equ	0xFF5
 30024                           prodh	equ	0xFF4
 30025                           prodl	equ	0xFF3
 30026                           intcon	equ	0xFF2
 30027                           postinc0	equ	0xFEE
 30028                           wreg	equ	0xFE8
 30029                           indf1	equ	0xFE7
 30030                           postinc1	equ	0xFE6
 30031                           postdec1	equ	0xFE5
 30032                           plusw1	equ	0xFE3
 30033                           fsr1h	equ	0xFE2
 30034                           fsr1l	equ	0xFE1
 30035                           indf2	equ	0xFDF
 30036                           postinc2	equ	0xFDE
 30037                           postdec2	equ	0xFDD
 30038                           plusw2	equ	0xFDB
 30039                           fsr2h	equ	0xFDA
 30040                           fsr2l	equ	0xFD9
 30041                           status	equ	0xFD8
 30042                           
 30043 ;; *************** function ___almod *****************
 30044 ;; Defined at:
 30045 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 30046 ;; Parameters:    Size  Location     Type
 30047 ;;  dividend        4    0[BANK0 ] long 
 30048 ;;  divisor         4    4[BANK0 ] long 
 30049 ;; Auto vars:     Size  Location     Type
 30050 ;;  sign            1    9[BANK0 ] unsigned char 
 30051 ;;  counter         1    8[BANK0 ] unsigned char 
 30052 ;; Return value:  Size  Location     Type
 30053 ;;                  4    0[BANK0 ] long 
 30054 ;; Registers used:
 30055 ;;		wreg, status,2, status,0
 30056 ;; Tracked objects:
 30057 ;;		On entry : 0/0
 30058 ;;		On exit  : 0/0
 30059 ;;		Unchanged: 0/0
 30060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30061 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30062 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30064 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30065 ;;Total ram usage:       10 bytes
 30066 ;; Hardware stack levels used:    1
 30067 ;; Hardware stack levels required when called:   10
 30068 ;; This function calls:
 30069 ;;		Nothing
 30070 ;; This function is called by:
 30071 ;;		__display_itoa_long
 30072 ;; This function uses a non-reentrant model
 30073 ;;
 30074                           
 30075                           	psect	text118
 30076  01320C                     __ptext118:
 30077                           	opt stack 0
 30078  01320C                     ___almod:
 30079                           	opt stack 18
 30080                           
 30081                           ; BSR set to: 0
 30082                           ;incstack = 0
 30083  01320C  0E00               	movlw	0
 30084  01320E  0100               	movlb	0	; () banked
 30085  013210  6F69               	movwf	___almod@sign& (0+255),b
 30086                           
 30087                           ; BSR set to: 0
 30088  013212  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 30089  013214  D00A               	goto	l3162
 30090                           
 30091                           ; BSR set to: 0
 30092  013216  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30093  013218  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30094  01321A  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30095  01321C  6D60               	negf	___almod@dividend& (0+255),b
 30096  01321E  0E00               	movlw	0
 30097  013220  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30098  013222  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30099  013224  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30100                           
 30101                           ; BSR set to: 0
 30102  013226  0E01               	movlw	1
 30103  013228  6F69               	movwf	___almod@sign& (0+255),b
 30104  01322A                     l3162:
 30105                           
 30106                           ; BSR set to: 0
 30107                           
 30108                           ; BSR set to: 0
 30109  01322A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30110  01322C  D008               	goto	l3163
 30111                           
 30112                           ; BSR set to: 0
 30113  01322E  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 30114  013230  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 30115  013232  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 30116  013234  6D64               	negf	___almod@divisor& (0+255),b
 30117  013236  0E00               	movlw	0
 30118  013238  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 30119  01323A  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 30120  01323C  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 30121  01323E                     l3163:
 30122                           
 30123                           ; BSR set to: 0
 30124                           
 30125                           ; BSR set to: 0
 30126  01323E  5164               	movf	___almod@divisor& (0+255),w,b
 30127  013240  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 30128  013242  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 30129  013244  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 30130  013246  B4D8               	btfsc	status,2,c
 30131  013248  D024               	goto	l3170
 30132                           
 30133                           ; BSR set to: 0
 30134  01324A  0E01               	movlw	1
 30135  01324C  6F68               	movwf	___almod@counter& (0+255),b
 30136  01324E  D006               	goto	l3165
 30137  013250                     
 30138                           ; BSR set to: 0
 30139                           
 30140                           ; BSR set to: 0
 30141  013250  90D8               	bcf	status,0,c
 30142  013252  3764               	rlcf	___almod@divisor& (0+255),f,b
 30143  013254  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 30144  013256  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 30145  013258  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 30146  01325A  2B68               	incf	___almod@counter& (0+255),f,b
 30147  01325C                     l3165:
 30148                           
 30149                           ; BSR set to: 0
 30150                           
 30151                           ; BSR set to: 0
 30152  01325C  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30153  01325E  D7F8               	goto	l3166
 30154  013260                     u16110:
 30155                           
 30156                           ; BSR set to: 0
 30157                           
 30158                           ; BSR set to: 0
 30159                           
 30160                           ; BSR set to: 0
 30161  013260  5164               	movf	___almod@divisor& (0+255),w,b
 30162  013262  5D60               	subwf	___almod@dividend& (0+255),w,b
 30163  013264  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30164  013266  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 30165  013268  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30166  01326A  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 30167  01326C  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30168  01326E  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 30169  013270  A0D8               	btfss	status,0,c
 30170  013272  D008               	goto	l3169
 30171                           
 30172                           ; BSR set to: 0
 30173  013274  5164               	movf	___almod@divisor& (0+255),w,b
 30174  013276  5F60               	subwf	___almod@dividend& (0+255),f,b
 30175  013278  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30176  01327A  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 30177  01327C  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30178  01327E  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 30179  013280  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30180  013282  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 30181  013284                     l3169:
 30182                           
 30183                           ; BSR set to: 0
 30184                           
 30185                           ; BSR set to: 0
 30186  013284  90D8               	bcf	status,0,c
 30187  013286  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 30188  013288  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 30189  01328A  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 30190  01328C  3364               	rrcf	___almod@divisor& (0+255),f,b
 30191                           
 30192                           ; BSR set to: 0
 30193  01328E  2F68               	decfsz	___almod@counter& (0+255),f,b
 30194  013290  D7E7               	goto	u16110
 30195  013292                     l3170:
 30196                           
 30197                           ; BSR set to: 0
 30198                           
 30199                           ; BSR set to: 0
 30200                           
 30201                           ; BSR set to: 0
 30202  013292  5169               	movf	___almod@sign& (0+255),w,b
 30203  013294  B4D8               	btfsc	status,2,c
 30204  013296  D008               	goto	l3171
 30205                           
 30206                           ; BSR set to: 0
 30207  013298  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30208  01329A  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30209  01329C  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30210  01329E  6D60               	negf	___almod@dividend& (0+255),b
 30211  0132A0  0E00               	movlw	0
 30212  0132A2  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30213  0132A4  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30214  0132A6  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30215  0132A8                     l3171:
 30216                           
 30217                           ; BSR set to: 0
 30218                           
 30219                           ; BSR set to: 0
 30220  0132A8  C060  F060         	movff	___almod@dividend,?___almod
 30221  0132AC  C061  F061         	movff	___almod@dividend+1,?___almod+1
 30222  0132B0  C062  F062         	movff	___almod@dividend+2,?___almod+2
 30223  0132B4  C063  F063         	movff	___almod@dividend+3,?___almod+3
 30224  0132B8  0012               	return	
 30225  0132BA                     __end_of___almod:
 30226                           	opt stack 0
 30227                           tblptru	equ	0xFF8
 30228                           tblptrh	equ	0xFF7
 30229                           tblptrl	equ	0xFF6
 30230                           tablat	equ	0xFF5
 30231                           prodh	equ	0xFF4
 30232                           prodl	equ	0xFF3
 30233                           intcon	equ	0xFF2
 30234                           postinc0	equ	0xFEE
 30235                           wreg	equ	0xFE8
 30236                           indf1	equ	0xFE7
 30237                           postinc1	equ	0xFE6
 30238                           postdec1	equ	0xFE5
 30239                           plusw1	equ	0xFE3
 30240                           fsr1h	equ	0xFE2
 30241                           fsr1l	equ	0xFE1
 30242                           indf2	equ	0xFDF
 30243                           postinc2	equ	0xFDE
 30244                           postdec2	equ	0xFDD
 30245                           plusw2	equ	0xFDB
 30246                           fsr2h	equ	0xFDA
 30247                           fsr2l	equ	0xFD9
 30248                           status	equ	0xFD8
 30249                           
 30250 ;; *************** function ___aldiv *****************
 30251 ;; Defined at:
 30252 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 30253 ;; Parameters:    Size  Location     Type
 30254 ;;  dividend        4    0[BANK0 ] long 
 30255 ;;  divisor         4    4[BANK0 ] long 
 30256 ;; Auto vars:     Size  Location     Type
 30257 ;;  quotient        4   10[BANK0 ] long 
 30258 ;;  sign            1    9[BANK0 ] unsigned char 
 30259 ;;  counter         1    8[BANK0 ] unsigned char 
 30260 ;; Return value:  Size  Location     Type
 30261 ;;                  4    0[BANK0 ] long 
 30262 ;; Registers used:
 30263 ;;		wreg, status,2, status,0
 30264 ;; Tracked objects:
 30265 ;;		On entry : 0/0
 30266 ;;		On exit  : 0/0
 30267 ;;		Unchanged: 0/0
 30268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30269 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30270 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30272 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30273 ;;Total ram usage:       14 bytes
 30274 ;; Hardware stack levels used:    1
 30275 ;; Hardware stack levels required when called:   10
 30276 ;; This function calls:
 30277 ;;		Nothing
 30278 ;; This function is called by:
 30279 ;;		__display_itoa_long
 30280 ;; This function uses a non-reentrant model
 30281 ;;
 30282                           
 30283                           	psect	text119
 30284  012AB6                     __ptext119:
 30285                           	opt stack 0
 30286  012AB6                     ___aldiv:
 30287                           	opt stack 18
 30288                           
 30289                           ; BSR set to: 0
 30290                           ;incstack = 0
 30291  012AB6  0E00               	movlw	0
 30292  012AB8  0100               	movlb	0	; () banked
 30293  012ABA  6F69               	movwf	___aldiv@sign& (0+255),b
 30294                           
 30295                           ; BSR set to: 0
 30296  012ABC  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30297  012ABE  D00A               	goto	l3149
 30298                           
 30299                           ; BSR set to: 0
 30300  012AC0  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 30301  012AC2  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 30302  012AC4  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 30303  012AC6  6D64               	negf	___aldiv@divisor& (0+255),b
 30304  012AC8  0E00               	movlw	0
 30305  012ACA  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 30306  012ACC  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 30307  012ACE  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 30308                           
 30309                           ; BSR set to: 0
 30310  012AD0  0E01               	movlw	1
 30311  012AD2  6F69               	movwf	___aldiv@sign& (0+255),b
 30312  012AD4                     l3149:
 30313                           
 30314                           ; BSR set to: 0
 30315                           
 30316                           ; BSR set to: 0
 30317  012AD4  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 30318  012AD6  D00A               	goto	l3150
 30319                           
 30320                           ; BSR set to: 0
 30321  012AD8  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 30322  012ADA  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 30323  012ADC  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 30324  012ADE  6D60               	negf	___aldiv@dividend& (0+255),b
 30325  012AE0  0E00               	movlw	0
 30326  012AE2  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 30327  012AE4  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 30328  012AE6  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 30329                           
 30330                           ; BSR set to: 0
 30331  012AE8  0E01               	movlw	1
 30332  012AEA  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 30333  012AEC                     l3150:
 30334                           
 30335                           ; BSR set to: 0
 30336                           
 30337                           ; BSR set to: 0
 30338  012AEC  0E00               	movlw	0
 30339  012AEE  6F6A               	movwf	___aldiv@quotient& (0+255),b
 30340  012AF0  0E00               	movlw	0
 30341  012AF2  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 30342  012AF4  0E00               	movlw	0
 30343  012AF6  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 30344  012AF8  0E00               	movlw	0
 30345  012AFA  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 30346                           
 30347                           ; BSR set to: 0
 30348  012AFC  5164               	movf	___aldiv@divisor& (0+255),w,b
 30349  012AFE  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 30350  012B00  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 30351  012B02  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 30352  012B04  B4D8               	btfsc	status,2,c
 30353  012B06  D02A               	goto	l3157
 30354                           
 30355                           ; BSR set to: 0
 30356  012B08  0E01               	movlw	1
 30357  012B0A  6F68               	movwf	___aldiv@counter& (0+255),b
 30358  012B0C  D006               	goto	l3152
 30359  012B0E                     
 30360                           ; BSR set to: 0
 30361                           
 30362                           ; BSR set to: 0
 30363  012B0E  90D8               	bcf	status,0,c
 30364  012B10  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 30365  012B12  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 30366  012B14  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 30367  012B16  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 30368  012B18  2B68               	incf	___aldiv@counter& (0+255),f,b
 30369  012B1A                     l3152:
 30370                           
 30371                           ; BSR set to: 0
 30372                           
 30373                           ; BSR set to: 0
 30374  012B1A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30375  012B1C  D7F8               	goto	l3153
 30376  012B1E                     u16050:
 30377                           
 30378                           ; BSR set to: 0
 30379                           
 30380                           ; BSR set to: 0
 30381                           
 30382                           ; BSR set to: 0
 30383  012B1E  90D8               	bcf	status,0,c
 30384  012B20  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 30385  012B22  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 30386  012B24  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 30387  012B26  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 30388                           
 30389                           ; BSR set to: 0
 30390  012B28  5164               	movf	___aldiv@divisor& (0+255),w,b
 30391  012B2A  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 30392  012B2C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30393  012B2E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 30394  012B30  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30395  012B32  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 30396  012B34  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30397  012B36  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 30398  012B38  A0D8               	btfss	status,0,c
 30399  012B3A  D009               	goto	l3156
 30400                           
 30401                           ; BSR set to: 0
 30402  012B3C  5164               	movf	___aldiv@divisor& (0+255),w,b
 30403  012B3E  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 30404  012B40  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30405  012B42  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 30406  012B44  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30407  012B46  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 30408  012B48  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30409  012B4A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 30410                           
 30411                           ; BSR set to: 0
 30412  012B4C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 30413  012B4E                     l3156:
 30414                           
 30415                           ; BSR set to: 0
 30416                           
 30417                           ; BSR set to: 0
 30418  012B4E  90D8               	bcf	status,0,c
 30419  012B50  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 30420  012B52  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 30421  012B54  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 30422  012B56  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 30423                           
 30424                           ; BSR set to: 0
 30425  012B58  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 30426  012B5A  D7E1               	goto	u16050
 30427  012B5C                     l3157:
 30428                           
 30429                           ; BSR set to: 0
 30430                           
 30431                           ; BSR set to: 0
 30432                           
 30433                           ; BSR set to: 0
 30434  012B5C  5169               	movf	___aldiv@sign& (0+255),w,b
 30435  012B5E  B4D8               	btfsc	status,2,c
 30436  012B60  D008               	goto	l3158
 30437                           
 30438                           ; BSR set to: 0
 30439  012B62  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 30440  012B64  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 30441  012B66  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 30442  012B68  6D6A               	negf	___aldiv@quotient& (0+255),b
 30443  012B6A  0E00               	movlw	0
 30444  012B6C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 30445  012B6E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 30446  012B70  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 30447  012B72                     l3158:
 30448                           
 30449                           ; BSR set to: 0
 30450                           
 30451                           ; BSR set to: 0
 30452  012B72  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 30453  012B76  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 30454  012B7A  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 30455  012B7E  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 30456  012B82  0012               	return	
 30457  012B84                     __end_of___aldiv:
 30458                           	opt stack 0
 30459                           tblptru	equ	0xFF8
 30460                           tblptrh	equ	0xFF7
 30461                           tblptrl	equ	0xFF6
 30462                           tablat	equ	0xFF5
 30463                           prodh	equ	0xFF4
 30464                           prodl	equ	0xFF3
 30465                           intcon	equ	0xFF2
 30466                           postinc0	equ	0xFEE
 30467                           wreg	equ	0xFE8
 30468                           indf1	equ	0xFE7
 30469                           postinc1	equ	0xFE6
 30470                           postdec1	equ	0xFE5
 30471                           plusw1	equ	0xFE3
 30472                           fsr1h	equ	0xFE2
 30473                           fsr1l	equ	0xFE1
 30474                           indf2	equ	0xFDF
 30475                           postinc2	equ	0xFDE
 30476                           postdec2	equ	0xFDD
 30477                           plusw2	equ	0xFDB
 30478                           fsr2h	equ	0xFDA
 30479                           fsr2l	equ	0xFD9
 30480                           status	equ	0xFD8
 30481                           
 30482 ;; *************** function __display_clear *****************
 30483 ;; Defined at:
 30484 ;;		line 85 in file "display.c"
 30485 ;; Parameters:    Size  Location     Type
 30486 ;;		None
 30487 ;; Auto vars:     Size  Location     Type
 30488 ;;  col             1    3[BANK0 ] unsigned char 
 30489 ;;  row             1    2[BANK0 ] unsigned char 
 30490 ;; Return value:  Size  Location     Type
 30491 ;;                  1    wreg      void 
 30492 ;; Registers used:
 30493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30494 ;; Tracked objects:
 30495 ;;		On entry : 0/0
 30496 ;;		On exit  : 0/0
 30497 ;;		Unchanged: 0/0
 30498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30500 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30501 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30502 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30503 ;;Total ram usage:        4 bytes
 30504 ;; Hardware stack levels used:    1
 30505 ;; Hardware stack levels required when called:   10
 30506 ;; This function calls:
 30507 ;;		Nothing
 30508 ;; This function is called by:
 30509 ;;		_display_prepare
 30510 ;; This function uses a non-reentrant model
 30511 ;;
 30512                           
 30513                           	psect	text120
 30514  015296                     __ptext120:
 30515                           	opt stack 0
 30516  015296                     __display_clear:
 30517                           	opt stack 19
 30518                           
 30519                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 30520                           
 30521                           ; BSR set to: 0
 30522                           ;incstack = 0
 30523  015296  0E00               	movlw	0
 30524  015298  0100               	movlb	0	; () banked
 30525  01529A  6F62               	movwf	__display_clear@row& (0+255),b
 30526  01529C                     l17502:
 30527                           
 30528                           ; BSR set to: 0
 30529  01529C  0E03               	movlw	3
 30530  01529E  6562               	cpfsgt	__display_clear@row& (0+255),b
 30531  0152A0  D001               	goto	l1324
 30532  0152A2  0012               	return	
 30533  0152A4                     l1324:
 30534                           
 30535                           ; BSR set to: 0
 30536                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 30537                           
 30538                           ; BSR set to: 0
 30539  0152A4  0E00               	movlw	0
 30540  0152A6  6F63               	movwf	__display_clear@col& (0+255),b
 30541  0152A8                     l17508:
 30542                           
 30543                           ; BSR set to: 0
 30544  0152A8  0E13               	movlw	19
 30545  0152AA  6563               	cpfsgt	__display_clear@col& (0+255),b
 30546  0152AC  D001               	goto	l1326
 30547  0152AE  D016               	goto	u16980
 30548  0152B0                     l1326:
 30549                           
 30550                           ; BSR set to: 0
 30551                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 30552                           
 30553                           ; BSR set to: 0
 30554  0152B0  5162               	movf	__display_clear@row& (0+255),w,b
 30555  0152B2  0D14               	mullw	20
 30556  0152B4  0E42               	movlw	low _display_content
 30557  0152B6  6F60               	movwf	??__display_clear& (0+255),b
 30558  0152B8  0E02               	movlw	high _display_content
 30559  0152BA  6F61               	movwf	(??__display_clear+1)& (0+255),b
 30560  0152BC  50F3               	movf	prodl,w,c
 30561  0152BE  2760               	addwf	??__display_clear& (0+255),f,b
 30562  0152C0  50F4               	movf	prodh,w,c
 30563  0152C2  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 30564  0152C4  5163               	movf	__display_clear@col& (0+255),w,b
 30565  0152C6  0D01               	mullw	1
 30566  0152C8  50F3               	movf	prodl,w,c
 30567  0152CA  2560               	addwf	??__display_clear& (0+255),w,b
 30568  0152CC  6ED9               	movwf	fsr2l,c
 30569  0152CE  50F4               	movf	prodh,w,c
 30570  0152D0  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 30571  0152D2  6EDA               	movwf	fsr2h,c
 30572  0152D4  0E20               	movlw	32
 30573  0152D6  6EDF               	movwf	indf2,c
 30574                           
 30575                           ; BSR set to: 0
 30576  0152D8  2B63               	incf	__display_clear@col& (0+255),f,b
 30577  0152DA  D7E6               	goto	l17508
 30578  0152DC                     u16980:
 30579                           
 30580                           ; BSR set to: 0
 30581                           
 30582                           ; BSR set to: 0
 30583  0152DC  2B62               	incf	__display_clear@row& (0+255),f,b
 30584  0152DE  D7DE               	goto	l17502
 30585  0152E0                     __end_of__display_clear:
 30586                           	opt stack 0
 30587                           tblptru	equ	0xFF8
 30588                           tblptrh	equ	0xFF7
 30589                           tblptrl	equ	0xFF6
 30590                           tablat	equ	0xFF5
 30591                           prodh	equ	0xFF4
 30592                           prodl	equ	0xFF3
 30593                           intcon	equ	0xFF2
 30594                           postinc0	equ	0xFEE
 30595                           wreg	equ	0xFE8
 30596                           indf1	equ	0xFE7
 30597                           postinc1	equ	0xFE6
 30598                           postdec1	equ	0xFE5
 30599                           plusw1	equ	0xFE3
 30600                           fsr1h	equ	0xFE2
 30601                           fsr1l	equ	0xFE1
 30602                           indf2	equ	0xFDF
 30603                           postinc2	equ	0xFDE
 30604                           postdec2	equ	0xFDD
 30605                           plusw2	equ	0xFDB
 30606                           fsr2h	equ	0xFDA
 30607                           fsr2l	equ	0xFD9
 30608                           status	equ	0xFD8
 30609                           
 30610 ;; *************** function _adc_read_temperature *****************
 30611 ;; Defined at:
 30612 ;;		line 44 in file "adc.c"
 30613 ;; Parameters:    Size  Location     Type
 30614 ;;		None
 30615 ;; Auto vars:     Size  Location     Type
 30616 ;;  temperature     4   53[BANK0 ] float 
 30617 ;;  adc_result      2   51[BANK0 ] unsigned int 
 30618 ;; Return value:  Size  Location     Type
 30619 ;;                  1    wreg      void 
 30620 ;; Registers used:
 30621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30622 ;; Tracked objects:
 30623 ;;		On entry : 0/0
 30624 ;;		On exit  : 0/0
 30625 ;;		Unchanged: 0/0
 30626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30628 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30629 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30630 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30631 ;;Total ram usage:        8 bytes
 30632 ;; Hardware stack levels used:    1
 30633 ;; Hardware stack levels required when called:   11
 30634 ;; This function calls:
 30635 ;;		___fladd
 30636 ;;		___flmul
 30637 ;;		___flneg
 30638 ;;		___fltol
 30639 ;;		___xxtofl
 30640 ;; This function is called by:
 30641 ;;		_main
 30642 ;; This function uses a non-reentrant model
 30643 ;;
 30644                           
 30645                           	psect	text121
 30646  00E9C8                     __ptext121:
 30647                           	opt stack 0
 30648  00E9C8                     _adc_read_temperature:
 30649                           	opt stack 19
 30650                           
 30651                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 30652                           
 30653                           ; BSR set to: 0
 30654                           ;incstack = 0
 30655  00E9C8  CFC4 F093          	movff	4036,adc_read_temperature@adc_result	;volatile
 30656  00E9CC  0100               	movlb	0	; () banked
 30657  00E9CE  6B94               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 30658                           
 30659                           ; BSR set to: 0
 30660                           ;adc.c: 51: adc_result <<= 8;
 30661  00E9D0  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30662  00E9D2  6F94               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 30663  00E9D4  6B93               	clrf	adc_read_temperature@adc_result& (0+255),b
 30664                           
 30665                           ; BSR set to: 0
 30666                           ;adc.c: 52: adc_result |= ADRESL;
 30667  00E9D6  50C3               	movf	4035,w,c	;volatile
 30668  00E9D8  1393               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 30669                           
 30670                           ; BSR set to: 0
 30671                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 30672  00E9DA  0102               	movlb	2	; () banked
 30673  00E9DC  5131               	movf	_params& (0+255),w,b
 30674  00E9DE  0D02               	mullw	2
 30675  00E9E0  0E32               	movlw	low (_params+1)
 30676  00E9E2  24F3               	addwf	prodl,w,c
 30677  00E9E4  6ED9               	movwf	fsr2l,c
 30678  00E9E6  0E02               	movlw	high (_params+1)
 30679  00E9E8  20F4               	addwfc	prodh,w,c
 30680  00E9EA  6EDA               	movwf	fsr2h,c
 30681  00E9EC  0100               	movlb	0	; () banked
 30682  00E9EE  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30683  00E9F0  26DE               	addwf	postinc2,f,c
 30684  00E9F2  5194               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 30685  00E9F4  22DD               	addwfc	postdec2,f,c
 30686                           
 30687                           ; BSR set to: 0
 30688                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 30689  00E9F6  0102               	movlb	2	; () banked
 30690  00E9F8  5131               	movf	_params& (0+255),w,b
 30691  00E9FA  0D01               	mullw	1
 30692  00E9FC  0E36               	movlw	low (_params+5)
 30693  00E9FE  24F3               	addwf	prodl,w,c
 30694  00EA00  6ED9               	movwf	fsr2l,c
 30695  00EA02  0E02               	movlw	high (_params+5)
 30696  00EA04  20F4               	addwfc	prodh,w,c
 30697  00EA06  6EDA               	movwf	fsr2h,c
 30698  00EA08  2ADF               	incf	indf2,f,c
 30699                           
 30700                           ; BSR set to: 2
 30701                           ;adc.c: 59: ADCON0bits.GO = 1;
 30702  00EA0A  82C2               	bsf	4034,1,c	;volatile
 30703                           
 30704                           ; BSR set to: 2
 30705                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 30706  00EA0C  5131               	movf	_params& (0+255),w,b
 30707  00EA0E  0D01               	mullw	1
 30708  00EA10  0E36               	movlw	low (_params+5)
 30709  00EA12  24F3               	addwf	prodl,w,c
 30710  00EA14  6ED9               	movwf	fsr2l,c
 30711  00EA16  0E02               	movlw	high (_params+5)
 30712  00EA18  20F4               	addwfc	prodh,w,c
 30713  00EA1A  6EDA               	movwf	fsr2h,c
 30714  00EA1C  0E08               	movlw	8
 30715  00EA1E  18DE               	xorwf	postinc2,w,c
 30716  00EA20  A4D8               	btfss	status,2,c
 30717  00EA22  D0AF               	goto	l2941
 30718                           
 30719                           ; BSR set to: 2
 30720                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 30721  00EA24  5131               	movf	_params& (0+255),w,b
 30722  00EA26  0D02               	mullw	2
 30723  00EA28  0E32               	movlw	low (_params+1)
 30724  00EA2A  24F3               	addwf	prodl,w,c
 30725  00EA2C  6ED9               	movwf	fsr2l,c
 30726  00EA2E  0E02               	movlw	high (_params+1)
 30727  00EA30  20F4               	addwfc	prodh,w,c
 30728  00EA32  6EDA               	movwf	fsr2h,c
 30729  00EA34  CFDE F091          	movff	postinc2,??_adc_read_temperature
 30730  00EA38  CFDD F092          	movff	postdec2,??_adc_read_temperature+1
 30731  00EA3C  C091  F06A         	movff	??_adc_read_temperature,___xxtofl@val
 30732  00EA40  C092  F06B         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 30733  00EA44  0100               	movlb	0	; () banked
 30734  00EA46  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 30735  00EA48  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 30736  00EA4A  0E00               	movlw	0
 30737  00EA4C  ECFA  F080         	call	___xxtofl
 30738  00EA50  C06A  F078         	movff	?___xxtofl,___flneg@f1
 30739  00EA54  C06B  F079         	movff	?___xxtofl+1,___flneg@f1+1
 30740  00EA58  C06C  F07A         	movff	?___xxtofl+2,___flneg@f1+2
 30741  00EA5C  C06D  F07B         	movff	?___xxtofl+3,___flneg@f1+3
 30742  00EA60  EC1D  F0AC         	call	___flneg	;wreg free
 30743  00EA64  C078  F07C         	movff	?___flneg,___fladd@b
 30744  00EA68  C079  F07D         	movff	?___flneg+1,___fladd@b+1
 30745  00EA6C  C07A  F07E         	movff	?___flneg+2,___fladd@b+2
 30746  00EA70  C07B  F07F         	movff	?___flneg+3,___fladd@b+3
 30747  00EA74  0E00               	movlw	0
 30748  00EA76  0100               	movlb	0	; () banked
 30749  00EA78  6F80               	movwf	___fladd@a& (0+255),b
 30750  00EA7A  0E90               	movlw	144
 30751  00EA7C  6F81               	movwf	(___fladd@a+1)& (0+255),b
 30752  00EA7E  0EA4               	movlw	164
 30753  00EA80  6F82               	movwf	(___fladd@a+2)& (0+255),b
 30754  00EA82  0E46               	movlw	70
 30755  00EA84  6F83               	movwf	(___fladd@a+3)& (0+255),b
 30756  00EA86  EC1F  F066         	call	___fladd	;wreg free
 30757  00EA8A  C07C  F095         	movff	?___fladd,adc_read_temperature@temperature
 30758  00EA8E  C07D  F096         	movff	?___fladd+1,adc_read_temperature@temperature+1
 30759  00EA92  C07E  F097         	movff	?___fladd+2,adc_read_temperature@temperature+2
 30760  00EA96  C07F  F098         	movff	?___fladd+3,adc_read_temperature@temperature+3
 30761                           
 30762                           ;adc.c: 68: temperature *= 0.7405;
 30763  00EA9A  C095  F078         	movff	adc_read_temperature@temperature,___flmul@b
 30764  00EA9E  C096  F079         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 30765  00EAA2  C097  F07A         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 30766  00EAA6  C098  F07B         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 30767  00EAAA  0E68               	movlw	104
 30768  00EAAC  0100               	movlb	0	; () banked
 30769  00EAAE  6F7C               	movwf	___flmul@a& (0+255),b
 30770  00EAB0  0E91               	movlw	145
 30771  00EAB2  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 30772  00EAB4  0E3D               	movlw	61
 30773  00EAB6  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 30774  00EAB8  0E3F               	movlw	63
 30775  00EABA  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 30776  00EABC  EC76  F064         	call	___flmul	;wreg free
 30777  00EAC0  C078  F095         	movff	?___flmul,adc_read_temperature@temperature
 30778  00EAC4  C079  F096         	movff	?___flmul+1,adc_read_temperature@temperature+1
 30779  00EAC8  C07A  F097         	movff	?___flmul+2,adc_read_temperature@temperature+2
 30780  00EACC  C07B  F098         	movff	?___flmul+3,adc_read_temperature@temperature+3
 30781                           
 30782                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 30783  00EAD0  C095  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 30784  00EAD4  C096  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 30785  00EAD8  C097  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 30786  00EADC  C098  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 30787  00EAE0  EC93  F091         	call	___fltol	;wreg free
 30788  00EAE4  0102               	movlb	2	; () banked
 30789  00EAE6  5131               	movf	_params& (0+255),w,b
 30790  00EAE8  0D02               	mullw	2
 30791  00EAEA  0E8E               	movlw	low (_os+40)
 30792  00EAEC  24F3               	addwf	prodl,w,c
 30793  00EAEE  6ED9               	movwf	fsr2l,c
 30794  00EAF0  0E01               	movlw	high (_os+40)
 30795  00EAF2  20F4               	addwfc	prodh,w,c
 30796  00EAF4  6EDA               	movwf	fsr2h,c
 30797  00EAF6  0100               	movlb	0	; () banked
 30798  00EAF8  C060  FFDE         	movff	?___fltol,postinc2
 30799  00EAFC  C061  FFDD         	movff	?___fltol+1,postdec2
 30800                           
 30801                           ; BSR set to: 0
 30802                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 30803  00EB00  0102               	movlb	2	; () banked
 30804  00EB02  5131               	movf	_params& (0+255),w,b
 30805  00EB04  0D02               	mullw	2
 30806  00EB06  0E32               	movlw	low (_params+1)
 30807  00EB08  24F3               	addwf	prodl,w,c
 30808  00EB0A  6ED9               	movwf	fsr2l,c
 30809  00EB0C  0E02               	movlw	high (_params+1)
 30810  00EB0E  20F4               	addwfc	prodh,w,c
 30811  00EB10  6EDA               	movwf	fsr2h,c
 30812  00EB12  0E00               	movlw	0
 30813  00EB14  6EDE               	movwf	postinc2,c
 30814  00EB16  0E00               	movlw	0
 30815  00EB18  6EDD               	movwf	postdec2,c
 30816                           
 30817                           ; BSR set to: 2
 30818                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 30819  00EB1A  5131               	movf	_params& (0+255),w,b
 30820  00EB1C  0D01               	mullw	1
 30821  00EB1E  0E36               	movlw	low (_params+5)
 30822  00EB20  24F3               	addwf	prodl,w,c
 30823  00EB22  6ED9               	movwf	fsr2l,c
 30824  00EB24  0E02               	movlw	high (_params+5)
 30825  00EB26  20F4               	addwfc	prodh,w,c
 30826  00EB28  6EDA               	movwf	fsr2h,c
 30827  00EB2A  0E00               	movlw	0
 30828  00EB2C  6EDF               	movwf	indf2,c
 30829                           
 30830                           ; BSR set to: 2
 30831                           ;adc.c: 78: if(os.fan_on)
 30832  00EB2E  0101               	movlb	1	; () banked
 30833  00EB30  5195               	movf	(_os+47)& (0+255),w,b	;volatile
 30834  00EB32  B4D8               	btfsc	status,2,c
 30835  00EB34  D013               	goto	l2938
 30836                           
 30837                           ; BSR set to: 1
 30838                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 30839  00EB36  BF8F               	btfsc	(_os+41)& (0+255),7,b	;volatile
 30840  00EB38  D006               	goto	u18660
 30841  00EB3A  0E60               	movlw	96
 30842  00EB3C  5D8E               	subwf	(_os+40)& (0+255),w,b	;volatile
 30843  00EB3E  0E09               	movlw	9
 30844  00EB40  598F               	subwfb	(_os+41)& (0+255),w,b	;volatile
 30845  00EB42  B0D8               	btfsc	status,0,c
 30846  00EB44  D01E               	goto	l2941
 30847  00EB46                     u18660:
 30848                           
 30849                           ; BSR set to: 1
 30850  00EB46  BF91               	btfsc	(_os+43)& (0+255),7,b	;volatile
 30851  00EB48  D006               	goto	u18670
 30852  00EB4A  0E60               	movlw	96
 30853  00EB4C  5D90               	subwf	(_os+42)& (0+255),w,b	;volatile
 30854  00EB4E  0E09               	movlw	9
 30855  00EB50  5991               	subwfb	(_os+43)& (0+255),w,b	;volatile
 30856  00EB52  B0D8               	btfsc	status,0,c
 30857  00EB54  D016               	goto	l2941
 30858  00EB56                     u18670:
 30859                           
 30860                           ; BSR set to: 1
 30861                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 30862  00EB56  9C8B               	bcf	3979,6,c	;volatile
 30863                           
 30864                           ; BSR set to: 1
 30865                           ;adc.c: 83: os.fan_on = 0;
 30866  00EB58  0E00               	movlw	0
 30867  00EB5A  D012               	goto	L41
 30868  00EB5C                     l2938:
 30869                           
 30870                           ; BSR set to: 1
 30871                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 30872                           
 30873                           ; BSR set to: 1
 30874  00EB5C  BF8F               	btfsc	(_os+41)& (0+255),7,b	;volatile
 30875  00EB5E  D006               	goto	u18680
 30876  00EB60  0EC5               	movlw	197
 30877  00EB62  5D8E               	subwf	(_os+40)& (0+255),w,b	;volatile
 30878  00EB64  0E09               	movlw	9
 30879  00EB66  598F               	subwfb	(_os+41)& (0+255),w,b	;volatile
 30880  00EB68  B0D8               	btfsc	status,0,c
 30881  00EB6A  D008               	goto	u18690
 30882  00EB6C                     u18680:
 30883                           
 30884                           ; BSR set to: 1
 30885  00EB6C  BF91               	btfsc	(_os+43)& (0+255),7,b	;volatile
 30886  00EB6E  D009               	goto	l2941
 30887  00EB70  0EC5               	movlw	197
 30888  00EB72  5D90               	subwf	(_os+42)& (0+255),w,b	;volatile
 30889  00EB74  0E09               	movlw	9
 30890  00EB76  5991               	subwfb	(_os+43)& (0+255),w,b	;volatile
 30891  00EB78  A0D8               	btfss	status,0,c
 30892  00EB7A  D003               	goto	l2941
 30893  00EB7C                     u18690:
 30894                           
 30895                           ; BSR set to: 1
 30896                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 30897  00EB7C  8C8B               	bsf	3979,6,c	;volatile
 30898                           
 30899                           ; BSR set to: 1
 30900                           ;adc.c: 91: os.fan_on = 1;
 30901  00EB7E  0E01               	movlw	1
 30902  00EB80                     L41:
 30903  00EB80  6F95               	movwf	(_os+47)& (0+255),b	;volatile
 30904  00EB82                     l2941:
 30905                           
 30906                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 30907                           
 30908                           ; BSR set to: 1
 30909                           
 30910                           ; BSR set to: 1
 30911  00EB82  0102               	movlb	2	; () banked
 30912  00EB84  5131               	movf	_params& (0+255),w,b
 30913  00EB86  A4D8               	btfss	status,2,c
 30914  00EB88  D007               	goto	l2944
 30915                           
 30916                           ; BSR set to: 2
 30917                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 30918  00EB8A  50C2               	movf	4034,w,c	;volatile
 30919  00EB8C  0BC3               	andlw	-61
 30920  00EB8E  092C               	iorlw	44
 30921  00EB90  6EC2               	movwf	4034,c	;volatile
 30922                           
 30923                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 30924  00EB92  0E01               	movlw	1
 30925  00EB94  6F31               	movwf	_params& (0+255),b
 30926                           
 30927                           ;adc.c: 101: }
 30928  00EB96  0012               	return	
 30929  00EB98                     l2944:
 30930                           
 30931                           ; BSR set to: 2
 30932                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 30933                           
 30934                           ; BSR set to: 2
 30935  00EB98  50C2               	movf	4034,w,c	;volatile
 30936  00EB9A  0BC3               	andlw	-61
 30937  00EB9C  0924               	iorlw	36
 30938  00EB9E  6EC2               	movwf	4034,c	;volatile
 30939                           
 30940                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 30941  00EBA0  0E00               	movlw	0
 30942  00EBA2  6F31               	movwf	_params& (0+255),b
 30943  00EBA4  0012               	return	
 30944  00EBA6                     __end_of_adc_read_temperature:
 30945                           	opt stack 0
 30946                           tblptru	equ	0xFF8
 30947                           tblptrh	equ	0xFF7
 30948                           tblptrl	equ	0xFF6
 30949                           tablat	equ	0xFF5
 30950                           prodh	equ	0xFF4
 30951                           prodl	equ	0xFF3
 30952                           intcon	equ	0xFF2
 30953                           postinc0	equ	0xFEE
 30954                           wreg	equ	0xFE8
 30955                           indf1	equ	0xFE7
 30956                           postinc1	equ	0xFE6
 30957                           postdec1	equ	0xFE5
 30958                           plusw1	equ	0xFE3
 30959                           fsr1h	equ	0xFE2
 30960                           fsr1l	equ	0xFE1
 30961                           indf2	equ	0xFDF
 30962                           postinc2	equ	0xFDE
 30963                           postdec2	equ	0xFDD
 30964                           plusw2	equ	0xFDB
 30965                           fsr2h	equ	0xFDA
 30966                           fsr2l	equ	0xFD9
 30967                           status	equ	0xFD8
 30968                           
 30969 ;; *************** function ___xxtofl *****************
 30970 ;; Defined at:
 30971 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 30972 ;; Parameters:    Size  Location     Type
 30973 ;;  sign            1    wreg     unsigned char 
 30974 ;;  val             4   10[BANK0 ] long 
 30975 ;; Auto vars:     Size  Location     Type
 30976 ;;  sign            1   18[BANK0 ] unsigned char 
 30977 ;;  arg             4   20[BANK0 ] unsigned long 
 30978 ;;  exp             1   19[BANK0 ] unsigned char 
 30979 ;; Return value:  Size  Location     Type
 30980 ;;                  4   10[BANK0 ] unsigned char 
 30981 ;; Registers used:
 30982 ;;		wreg, status,2, status,0
 30983 ;; Tracked objects:
 30984 ;;		On entry : 0/0
 30985 ;;		On exit  : 0/0
 30986 ;;		Unchanged: 0/0
 30987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30989 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30991 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30992 ;;Total ram usage:       14 bytes
 30993 ;; Hardware stack levels used:    1
 30994 ;; Hardware stack levels required when called:   10
 30995 ;; This function calls:
 30996 ;;		Nothing
 30997 ;; This function is called by:
 30998 ;;		__motor_steps_from_degrees_int
 30999 ;;		_motor_calculate_position_in_degrees
 31000 ;;		__motor_get_speed_in_degrees
 31001 ;;		__step_position_from_divide_position
 31002 ;;		_motor_divide_jump_to_nearest
 31003 ;;		_motor_arc_move
 31004 ;;		_adc_read_temperature
 31005 ;;		__steps_from_degrees
 31006 ;;		__motor_steps_from_degrees_float
 31007 ;;		_motor_steps_from_degrees
 31008 ;; This function uses a non-reentrant model
 31009 ;;
 31010                           
 31011                           	psect	text122
 31012  0101F4                     __ptext122:
 31013                           	opt stack 0
 31014  0101F4                     ___xxtofl:
 31015                           	opt stack 18
 31016                           
 31017                           ; BSR set to: 2
 31018                           ;incstack = 0
 31019                           ;___xxtofl@sign stored from wreg
 31020  0101F4  0100               	movlb	0	; () banked
 31021  0101F6  6F72               	movwf	___xxtofl@sign& (0+255),b
 31022  0101F8  0100               	movlb	0	; () banked
 31023  0101FA  5172               	movf	___xxtofl@sign& (0+255),w,b
 31024  0101FC  A4D8               	btfss	status,2,c
 31025                           
 31026                           ; BSR set to: 0
 31027  0101FE  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31028  010200  D01A               	goto	l3723
 31029                           
 31030                           ; BSR set to: 0
 31031  010202  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
 31032  010206  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
 31033  01020A  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
 31034  01020E  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
 31035  010212  1F6E               	comf	??___xxtofl& (0+255),f,b
 31036  010214  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
 31037  010216  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
 31038  010218  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
 31039  01021A  2B6E               	incf	??___xxtofl& (0+255),f,b
 31040  01021C  0E00               	movlw	0
 31041  01021E  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 31042  010220  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
 31043  010222  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
 31044  010224  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
 31045  010228  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
 31046  01022C  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
 31047  010230  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
 31048  010234  D008               	goto	l3724
 31049  010236                     l3723:
 31050                           
 31051                           ; BSR set to: 0
 31052  010236  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
 31053  01023A  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
 31054  01023E  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
 31055  010242  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
 31056  010246                     l3724:
 31057                           
 31058                           ; BSR set to: 0
 31059                           
 31060                           ; BSR set to: 0
 31061  010246  516A               	movf	___xxtofl@val& (0+255),w,b
 31062  010248  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 31063  01024A  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 31064  01024C  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 31065  01024E  A4D8               	btfss	status,2,c
 31066  010250  D009               	goto	l3725
 31067                           
 31068                           ; BSR set to: 0
 31069  010252  0E00               	movlw	0
 31070  010254  6F6A               	movwf	?___xxtofl& (0+255),b
 31071  010256  0E00               	movlw	0
 31072  010258  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
 31073  01025A  0E00               	movlw	0
 31074  01025C  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
 31075  01025E  0E00               	movlw	0
 31076  010260  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
 31077                           
 31078                           ; BSR set to: 0
 31079  010262  0012               	return	
 31080  010264                     l3725:
 31081                           
 31082                           ; BSR set to: 0
 31083                           
 31084                           ; BSR set to: 0
 31085  010264  0E96               	movlw	150
 31086  010266  6F73               	movwf	___xxtofl@exp& (0+255),b
 31087  010268  D006               	goto	l3727
 31088  01026A                     
 31089                           ; BSR set to: 0
 31090                           
 31091                           ; BSR set to: 0
 31092  01026A  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31093  01026C  90D8               	bcf	status,0,c
 31094  01026E  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31095  010270  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31096  010272  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31097  010274  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31098  010276                     l3727:
 31099                           
 31100                           ; BSR set to: 0
 31101                           
 31102                           ; BSR set to: 0
 31103  010276  0E00               	movlw	0
 31104  010278  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31105  01027A  6F6E               	movwf	??___xxtofl& (0+255),b
 31106  01027C  0E00               	movlw	0
 31107  01027E  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31108  010280  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31109  010282  0E00               	movlw	0
 31110  010284  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31111  010286  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31112  010288  0EFE               	movlw	254
 31113  01028A  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31114  01028C  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31115  01028E  516E               	movf	??___xxtofl& (0+255),w,b
 31116  010290  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31117  010292  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31118  010294  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31119  010296  B4D8               	btfsc	status,2,c
 31120  010298  D00D               	goto	l3730
 31121  01029A  D7E7               	goto	l3728
 31122  01029C                     
 31123                           ; BSR set to: 0
 31124                           
 31125                           ; BSR set to: 0
 31126  01029C  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31127                           
 31128                           ; BSR set to: 0
 31129  01029E  0E01               	movlw	1
 31130  0102A0  2774               	addwf	___xxtofl@arg& (0+255),f,b
 31131  0102A2  0E00               	movlw	0
 31132  0102A4  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 31133  0102A6  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 31134  0102A8  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 31135                           
 31136                           ; BSR set to: 0
 31137  0102AA  90D8               	bcf	status,0,c
 31138  0102AC  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31139  0102AE  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31140  0102B0  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31141  0102B2  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31142  0102B4                     l3730:
 31143                           
 31144                           ; BSR set to: 0
 31145  0102B4  0E00               	movlw	0
 31146  0102B6  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31147  0102B8  6F6E               	movwf	??___xxtofl& (0+255),b
 31148  0102BA  0E00               	movlw	0
 31149  0102BC  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31150  0102BE  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31151  0102C0  0E00               	movlw	0
 31152  0102C2  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31153  0102C4  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31154  0102C6  0EFF               	movlw	255
 31155  0102C8  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31156  0102CA  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31157  0102CC  516E               	movf	??___xxtofl& (0+255),w,b
 31158  0102CE  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31159  0102D0  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31160  0102D2  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31161  0102D4  B4D8               	btfsc	status,2,c
 31162  0102D6  D007               	goto	l3733
 31163  0102D8  D7E1               	goto	l3731
 31164  0102DA                     
 31165                           ; BSR set to: 0
 31166                           
 31167                           ; BSR set to: 0
 31168  0102DA  0773               	decf	___xxtofl@exp& (0+255),f,b
 31169  0102DC  90D8               	bcf	status,0,c
 31170  0102DE  3774               	rlcf	___xxtofl@arg& (0+255),f,b
 31171  0102E0  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 31172  0102E2  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 31173  0102E4  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 31174  0102E6                     l3733:
 31175                           
 31176                           ; BSR set to: 0
 31177                           
 31178                           ; BSR set to: 0
 31179  0102E6  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 31180  0102E8  D003               	goto	u13450
 31181                           
 31182                           ; BSR set to: 0
 31183  0102EA  0E02               	movlw	2
 31184  0102EC  6173               	cpfslt	___xxtofl@exp& (0+255),b
 31185  0102EE  D7F5               	goto	l3734
 31186  0102F0                     u13450:
 31187                           
 31188                           ; BSR set to: 0
 31189                           
 31190                           ; BSR set to: 0
 31191  0102F0  A173               	btfss	___xxtofl@exp& (0+255),0,b
 31192                           
 31193                           ; BSR set to: 0
 31194  0102F2  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 31195                           
 31196                           ; BSR set to: 0
 31197                           
 31198                           ; BSR set to: 0
 31199  0102F4  90D8               	bcf	status,0,c
 31200  0102F6  3373               	rrcf	___xxtofl@exp& (0+255),f,b
 31201                           
 31202                           ; BSR set to: 0
 31203  0102F8  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
 31204  0102FC  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31205  0102FE  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31206  010300  6B71               	clrf	(??___xxtofl+3)& (0+255),b
 31207  010302  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
 31208  010306  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31209  010308  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31210  01030A  6B6E               	clrf	??___xxtofl& (0+255),b
 31211  01030C  516E               	movf	??___xxtofl& (0+255),w,b
 31212  01030E  1374               	iorwf	___xxtofl@arg& (0+255),f,b
 31213  010310  516F               	movf	(??___xxtofl+1)& (0+255),w,b
 31214  010312  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 31215  010314  5170               	movf	(??___xxtofl+2)& (0+255),w,b
 31216  010316  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 31217  010318  5171               	movf	(??___xxtofl+3)& (0+255),w,b
 31218  01031A  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 31219                           
 31220                           ; BSR set to: 0
 31221  01031C  5172               	movf	___xxtofl@sign& (0+255),w,b
 31222  01031E  A4D8               	btfss	status,2,c
 31223                           
 31224                           ; BSR set to: 0
 31225  010320  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31226  010322  D001               	goto	l3739
 31227                           
 31228                           ; BSR set to: 0
 31229  010324  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 31230  010326                     l3739:
 31231                           
 31232                           ; BSR set to: 0
 31233                           
 31234                           ; BSR set to: 0
 31235  010326  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
 31236  01032A  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
 31237  01032E  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
 31238  010332  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
 31239  010336  0012               	return	
 31240  010338                     __end_of___xxtofl:
 31241                           	opt stack 0
 31242                           tblptru	equ	0xFF8
 31243                           tblptrh	equ	0xFF7
 31244                           tblptrl	equ	0xFF6
 31245                           tablat	equ	0xFF5
 31246                           prodh	equ	0xFF4
 31247                           prodl	equ	0xFF3
 31248                           intcon	equ	0xFF2
 31249                           postinc0	equ	0xFEE
 31250                           wreg	equ	0xFE8
 31251                           indf1	equ	0xFE7
 31252                           postinc1	equ	0xFE6
 31253                           postdec1	equ	0xFE5
 31254                           plusw1	equ	0xFE3
 31255                           fsr1h	equ	0xFE2
 31256                           fsr1l	equ	0xFE1
 31257                           indf2	equ	0xFDF
 31258                           postinc2	equ	0xFDE
 31259                           postdec2	equ	0xFDD
 31260                           plusw2	equ	0xFDB
 31261                           fsr2h	equ	0xFDA
 31262                           fsr2l	equ	0xFD9
 31263                           status	equ	0xFD8
 31264                           
 31265 ;; *************** function ___fltol *****************
 31266 ;; Defined at:
 31267 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 31268 ;; Parameters:    Size  Location     Type
 31269 ;;  f1              4    0[BANK0 ] unsigned char 
 31270 ;; Auto vars:     Size  Location     Type
 31271 ;;  exp1            1    9[BANK0 ] unsigned char 
 31272 ;;  sign1           1    8[BANK0 ] unsigned char 
 31273 ;; Return value:  Size  Location     Type
 31274 ;;                  4    0[BANK0 ] long 
 31275 ;; Registers used:
 31276 ;;		wreg, status,2, status,0
 31277 ;; Tracked objects:
 31278 ;;		On entry : 0/0
 31279 ;;		On exit  : 0/0
 31280 ;;		Unchanged: 0/0
 31281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31284 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31285 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31286 ;;Total ram usage:       10 bytes
 31287 ;; Hardware stack levels used:    1
 31288 ;; Hardware stack levels required when called:   10
 31289 ;; This function calls:
 31290 ;;		Nothing
 31291 ;; This function is called by:
 31292 ;;		__motor_steps_from_degrees_int
 31293 ;;		_motor_calculate_position_in_degrees
 31294 ;;		__motor_get_speed_in_degrees
 31295 ;;		__step_position_from_divide_position
 31296 ;;		_motor_divide_jump_to_nearest
 31297 ;;		_motor_arc_move
 31298 ;;		_adc_read_temperature
 31299 ;;		__steps_from_degrees
 31300 ;;		__motor_steps_from_degrees_float
 31301 ;;		_motor_steps_from_degrees
 31302 ;; This function uses a non-reentrant model
 31303 ;;
 31304                           
 31305                           	psect	text123
 31306  012326                     __ptext123:
 31307                           	opt stack 0
 31308  012326                     ___fltol:
 31309                           	opt stack 18
 31310                           
 31311                           ; BSR set to: 0
 31312                           ;incstack = 0
 31313  012326  0100               	movlb	0	; () banked
 31314  012328  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 31315  01232A  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 31316  01232C  6F69               	movwf	___fltol@exp1& (0+255),b
 31317  01232E  5169               	movf	___fltol@exp1& (0+255),w,b
 31318  012330  A4D8               	btfss	status,2,c
 31319  012332  D009               	goto	l3368
 31320                           
 31321                           ; BSR set to: 0
 31322  012334  0E00               	movlw	0
 31323  012336  6F60               	movwf	?___fltol& (0+255),b
 31324  012338  0E00               	movlw	0
 31325  01233A  6F61               	movwf	(?___fltol+1)& (0+255),b
 31326  01233C  0E00               	movlw	0
 31327  01233E  6F62               	movwf	(?___fltol+2)& (0+255),b
 31328  012340  0E00               	movlw	0
 31329  012342  6F63               	movwf	(?___fltol+3)& (0+255),b
 31330                           
 31331                           ; BSR set to: 0
 31332  012344  0012               	return	
 31333  012346                     l3368:
 31334                           
 31335                           ; BSR set to: 0
 31336                           
 31337                           ; BSR set to: 0
 31338  012346  C060  F064         	movff	___fltol@f1,??___fltol
 31339  01234A  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 31340  01234E  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 31341  012352  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 31342  012356  0E20               	movlw	32
 31343  012358  D005               	goto	u13330
 31344  01235A                     u13335:
 31345  01235A  90D8               	bcf	status,0,c
 31346  01235C  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 31347  01235E  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 31348  012360  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 31349  012362  3364               	rrcf	??___fltol& (0+255),f,b
 31350  012364                     u13330:
 31351  012364  2EE8               	decfsz	wreg,f,c
 31352  012366  D7F9               	goto	u13335
 31353  012368  5164               	movf	??___fltol& (0+255),w,b
 31354  01236A  6F68               	movwf	___fltol@sign1& (0+255),b
 31355                           
 31356                           ; BSR set to: 0
 31357  01236C  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 31358                           
 31359                           ; BSR set to: 0
 31360  01236E  0EFF               	movlw	255
 31361  012370  1760               	andwf	___fltol@f1& (0+255),f,b
 31362  012372  0EFF               	movlw	255
 31363  012374  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 31364  012376  0EFF               	movlw	255
 31365  012378  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 31366  01237A  0E00               	movlw	0
 31367  01237C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 31368                           
 31369                           ; BSR set to: 0
 31370  01237E  0E96               	movlw	150
 31371  012380  5F69               	subwf	___fltol@exp1& (0+255),f,b
 31372                           
 31373                           ; BSR set to: 0
 31374  012382  AF69               	btfss	___fltol@exp1& (0+255),7,b
 31375  012384  D016               	goto	l3370
 31376                           
 31377                           ; BSR set to: 0
 31378  012386  5169               	movf	___fltol@exp1& (0+255),w,b
 31379  012388  0A80               	xorlw	128
 31380  01238A  0F97               	addlw	151
 31381  01238C  B0D8               	btfsc	status,0,c
 31382  01238E  D009               	goto	l3371
 31383                           
 31384                           ; BSR set to: 0
 31385  012390  0E00               	movlw	0
 31386  012392  6F60               	movwf	?___fltol& (0+255),b
 31387  012394  0E00               	movlw	0
 31388  012396  6F61               	movwf	(?___fltol+1)& (0+255),b
 31389  012398  0E00               	movlw	0
 31390  01239A  6F62               	movwf	(?___fltol+2)& (0+255),b
 31391  01239C  0E00               	movlw	0
 31392  01239E  6F63               	movwf	(?___fltol+3)& (0+255),b
 31393                           
 31394                           ; BSR set to: 0
 31395  0123A0  0012               	return	
 31396  0123A2                     l3371:
 31397                           
 31398                           ; BSR set to: 0
 31399                           
 31400                           ; BSR set to: 0
 31401                           
 31402                           ; BSR set to: 0
 31403  0123A2  90D8               	bcf	status,0,c
 31404  0123A4  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 31405  0123A6  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 31406  0123A8  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 31407  0123AA  3360               	rrcf	___fltol@f1& (0+255),f,b
 31408                           
 31409                           ; BSR set to: 0
 31410  0123AC  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 31411  0123AE  D7F9               	goto	l3371
 31412                           
 31413                           ; BSR set to: 0
 31414  0123B0  D015               	goto	u13370
 31415  0123B2                     l3370:
 31416                           
 31417                           ; BSR set to: 0
 31418                           
 31419                           ; BSR set to: 0
 31420  0123B2  0E1F               	movlw	31
 31421  0123B4  6569               	cpfsgt	___fltol@exp1& (0+255),b
 31422  0123B6  D00F               	goto	l3376
 31423                           
 31424                           ; BSR set to: 0
 31425  0123B8  0E00               	movlw	0
 31426  0123BA  6F60               	movwf	?___fltol& (0+255),b
 31427  0123BC  0E00               	movlw	0
 31428  0123BE  6F61               	movwf	(?___fltol+1)& (0+255),b
 31429  0123C0  0E00               	movlw	0
 31430  0123C2  6F62               	movwf	(?___fltol+2)& (0+255),b
 31431  0123C4  0E00               	movlw	0
 31432  0123C6  6F63               	movwf	(?___fltol+3)& (0+255),b
 31433                           
 31434                           ; BSR set to: 0
 31435  0123C8  0012               	return	
 31436  0123CA                     
 31437                           ; BSR set to: 0
 31438                           
 31439                           ; BSR set to: 0
 31440  0123CA  90D8               	bcf	status,0,c
 31441  0123CC  3760               	rlcf	___fltol@f1& (0+255),f,b
 31442  0123CE  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 31443  0123D0  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 31444  0123D2  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 31445  0123D4  0769               	decf	___fltol@exp1& (0+255),f,b
 31446  0123D6                     l3376:
 31447                           
 31448                           ; BSR set to: 0
 31449                           
 31450                           ; BSR set to: 0
 31451  0123D6  5169               	movf	___fltol@exp1& (0+255),w,b
 31452  0123D8  A4D8               	btfss	status,2,c
 31453  0123DA  D7F7               	goto	l3377
 31454  0123DC                     u13370:
 31455                           
 31456                           ; BSR set to: 0
 31457                           
 31458                           ; BSR set to: 0
 31459                           
 31460                           ; BSR set to: 0
 31461  0123DC  5168               	movf	___fltol@sign1& (0+255),w,b
 31462  0123DE  B4D8               	btfsc	status,2,c
 31463  0123E0  D008               	goto	l3379
 31464                           
 31465                           ; BSR set to: 0
 31466  0123E2  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 31467  0123E4  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 31468  0123E6  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 31469  0123E8  6D60               	negf	___fltol@f1& (0+255),b
 31470  0123EA  0E00               	movlw	0
 31471  0123EC  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 31472  0123EE  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 31473  0123F0  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 31474  0123F2                     l3379:
 31475                           
 31476                           ; BSR set to: 0
 31477                           
 31478                           ; BSR set to: 0
 31479  0123F2  C060  F060         	movff	___fltol@f1,?___fltol
 31480  0123F6  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 31481  0123FA  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 31482  0123FE  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 31483  012402  0012               	return	
 31484  012404                     __end_of___fltol:
 31485                           	opt stack 0
 31486                           tblptru	equ	0xFF8
 31487                           tblptrh	equ	0xFF7
 31488                           tblptrl	equ	0xFF6
 31489                           tablat	equ	0xFF5
 31490                           prodh	equ	0xFF4
 31491                           prodl	equ	0xFF3
 31492                           intcon	equ	0xFF2
 31493                           postinc0	equ	0xFEE
 31494                           wreg	equ	0xFE8
 31495                           indf1	equ	0xFE7
 31496                           postinc1	equ	0xFE6
 31497                           postdec1	equ	0xFE5
 31498                           plusw1	equ	0xFE3
 31499                           fsr1h	equ	0xFE2
 31500                           fsr1l	equ	0xFE1
 31501                           indf2	equ	0xFDF
 31502                           postinc2	equ	0xFDE
 31503                           postdec2	equ	0xFDD
 31504                           plusw2	equ	0xFDB
 31505                           fsr2h	equ	0xFDA
 31506                           fsr2l	equ	0xFD9
 31507                           status	equ	0xFD8
 31508                           
 31509 ;; *************** function ___flneg *****************
 31510 ;; Defined at:
 31511 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 31512 ;; Parameters:    Size  Location     Type
 31513 ;;  f1              4   24[BANK0 ] long 
 31514 ;; Auto vars:     Size  Location     Type
 31515 ;;		None
 31516 ;; Return value:  Size  Location     Type
 31517 ;;                  4   24[BANK0 ] long 
 31518 ;; Registers used:
 31519 ;;		wreg, status,2, status,0
 31520 ;; Tracked objects:
 31521 ;;		On entry : 0/0
 31522 ;;		On exit  : 0/0
 31523 ;;		Unchanged: 0/0
 31524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31528 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31529 ;;Total ram usage:        4 bytes
 31530 ;; Hardware stack levels used:    1
 31531 ;; Hardware stack levels required when called:   10
 31532 ;; This function calls:
 31533 ;;		Nothing
 31534 ;; This function is called by:
 31535 ;;		_adc_read_temperature
 31536 ;;		__motor_steps_from_degrees_float
 31537 ;; This function uses a non-reentrant model
 31538 ;;
 31539                           
 31540                           	psect	text124
 31541  01583A                     __ptext124:
 31542                           	opt stack 0
 31543  01583A                     ___flneg:
 31544                           	opt stack 19
 31545                           
 31546                           ; BSR set to: 0
 31547                           ;incstack = 0
 31548  01583A  0100               	movlb	0	; () banked
 31549  01583C  5178               	movf	___flneg@f1& (0+255),w,b
 31550  01583E  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31551  015840  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31552  015842  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31553  015844  B4D8               	btfsc	status,2,c
 31554  015846  D008               	goto	l3345
 31555                           
 31556                           ; BSR set to: 0
 31557  015848  0E00               	movlw	0
 31558  01584A  1B78               	xorwf	___flneg@f1& (0+255),f,b
 31559  01584C  0E00               	movlw	0
 31560  01584E  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31561  015850  0E00               	movlw	0
 31562  015852  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31563  015854  0E80               	movlw	128
 31564  015856  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31565  015858                     l3345:
 31566                           
 31567                           ; BSR set to: 0
 31568                           
 31569                           ; BSR set to: 0
 31570  015858  C078  F078         	movff	___flneg@f1,?___flneg
 31571  01585C  C079  F079         	movff	___flneg@f1+1,?___flneg+1
 31572  015860  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
 31573  015864  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
 31574  015868  0012               	return	
 31575  01586A                     __end_of___flneg:
 31576                           	opt stack 0
 31577                           tblptru	equ	0xFF8
 31578                           tblptrh	equ	0xFF7
 31579                           tblptrl	equ	0xFF6
 31580                           tablat	equ	0xFF5
 31581                           prodh	equ	0xFF4
 31582                           prodl	equ	0xFF3
 31583                           intcon	equ	0xFF2
 31584                           postinc0	equ	0xFEE
 31585                           wreg	equ	0xFE8
 31586                           indf1	equ	0xFE7
 31587                           postinc1	equ	0xFE6
 31588                           postdec1	equ	0xFE5
 31589                           plusw1	equ	0xFE3
 31590                           fsr1h	equ	0xFE2
 31591                           fsr1l	equ	0xFE1
 31592                           indf2	equ	0xFDF
 31593                           postinc2	equ	0xFDE
 31594                           postdec2	equ	0xFDD
 31595                           plusw2	equ	0xFDB
 31596                           fsr2h	equ	0xFDA
 31597                           fsr2l	equ	0xFD9
 31598                           status	equ	0xFD8
 31599                           
 31600 ;; *************** function ___flmul *****************
 31601 ;; Defined at:
 31602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 31603 ;; Parameters:    Size  Location     Type
 31604 ;;  b               4   24[BANK0 ] long 
 31605 ;;  a               4   28[BANK0 ] long 
 31606 ;; Auto vars:     Size  Location     Type
 31607 ;;  prod            4   43[BANK0 ] struct .
 31608 ;;  grs             4   37[BANK0 ] unsigned long 
 31609 ;;  temp            2   47[BANK0 ] struct .
 31610 ;;  bexp            1   42[BANK0 ] unsigned char 
 31611 ;;  aexp            1   41[BANK0 ] unsigned char 
 31612 ;;  sign            1   36[BANK0 ] unsigned char 
 31613 ;; Return value:  Size  Location     Type
 31614 ;;                  4   24[BANK0 ] unsigned char 
 31615 ;; Registers used:
 31616 ;;		wreg, status,2, status,0, prodl, prodh
 31617 ;; Tracked objects:
 31618 ;;		On entry : 0/0
 31619 ;;		On exit  : 0/0
 31620 ;;		Unchanged: 0/0
 31621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31623 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31624 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31625 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31626 ;;Total ram usage:       25 bytes
 31627 ;; Hardware stack levels used:    1
 31628 ;; Hardware stack levels required when called:   10
 31629 ;; This function calls:
 31630 ;;		Nothing
 31631 ;; This function is called by:
 31632 ;;		__motor_steps_from_degrees_int
 31633 ;;		_motor_calculate_position_in_degrees
 31634 ;;		__step_position_from_divide_position
 31635 ;;		_motor_divide_jump_to_nearest
 31636 ;;		_motor_arc_move
 31637 ;;		_adc_read_temperature
 31638 ;;		__steps_from_degrees
 31639 ;;		__motor_steps_from_degrees_float
 31640 ;;		_motor_steps_from_degrees
 31641 ;; This function uses a non-reentrant model
 31642 ;;
 31643                           
 31644                           	psect	text125
 31645  00C8EC                     __ptext125:
 31646                           	opt stack 0
 31647  00C8EC                     ___flmul:
 31648                           	opt stack 18
 31649                           
 31650                           ; BSR set to: 0
 31651                           ;incstack = 0
 31652  00C8EC  0100               	movlb	0	; () banked
 31653  00C8EE  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31654  00C8F0  0B80               	andlw	128
 31655  00C8F2  6F84               	movwf	___flmul@sign& (0+255),b
 31656  00C8F4  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31657  00C8F6  257B               	addwf	(___flmul@b+3)& (0+255),w,b
 31658  00C8F8  6F8A               	movwf	___flmul@bexp& (0+255),b
 31659                           
 31660                           ; BSR set to: 0
 31661  00C8FA  BF7A               	btfsc	(___flmul@b+2)& (0+255),7,b
 31662                           
 31663                           ; BSR set to: 0
 31664  00C8FC  818A               	bsf	___flmul@bexp& (0+255),0,b
 31665                           
 31666                           ; BSR set to: 0
 31667                           
 31668                           ; BSR set to: 0
 31669  00C8FE  518A               	movf	___flmul@bexp& (0+255),w,b
 31670  00C900  B4D8               	btfsc	status,2,c
 31671  00C902  D00D               	goto	l3676
 31672                           
 31673                           ; BSR set to: 0
 31674  00C904  298A               	incf	___flmul@bexp& (0+255),w,b
 31675  00C906  A4D8               	btfss	status,2,c
 31676  00C908  D008               	goto	l3677
 31677                           
 31678                           ; BSR set to: 0
 31679  00C90A  0E00               	movlw	0
 31680  00C90C  6F78               	movwf	___flmul@b& (0+255),b
 31681  00C90E  0E00               	movlw	0
 31682  00C910  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31683  00C912  0E00               	movlw	0
 31684  00C914  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31685  00C916  0E00               	movlw	0
 31686  00C918  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31687  00C91A                     l3677:
 31688                           
 31689                           ; BSR set to: 0
 31690                           
 31691                           ; BSR set to: 0
 31692  00C91A  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
 31693  00C91C  D008               	goto	l3678
 31694  00C91E                     l3676:
 31695                           
 31696                           ; BSR set to: 0
 31697                           
 31698                           ; BSR set to: 0
 31699  00C91E  0E00               	movlw	0
 31700  00C920  6F78               	movwf	___flmul@b& (0+255),b
 31701  00C922  0E00               	movlw	0
 31702  00C924  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31703  00C926  0E00               	movlw	0
 31704  00C928  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31705  00C92A  0E00               	movlw	0
 31706  00C92C  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31707  00C92E                     l3678:
 31708                           
 31709                           ; BSR set to: 0
 31710                           
 31711                           ; BSR set to: 0
 31712  00C92E  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31713  00C930  0B80               	andlw	128
 31714  00C932  1B84               	xorwf	___flmul@sign& (0+255),f,b
 31715                           
 31716                           ; BSR set to: 0
 31717  00C934  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31718  00C936  257F               	addwf	(___flmul@a+3)& (0+255),w,b
 31719  00C938  6F89               	movwf	___flmul@aexp& (0+255),b
 31720                           
 31721                           ; BSR set to: 0
 31722  00C93A  BF7E               	btfsc	(___flmul@a+2)& (0+255),7,b
 31723                           
 31724                           ; BSR set to: 0
 31725  00C93C  8189               	bsf	___flmul@aexp& (0+255),0,b
 31726                           
 31727                           ; BSR set to: 0
 31728                           
 31729                           ; BSR set to: 0
 31730  00C93E  5189               	movf	___flmul@aexp& (0+255),w,b
 31731  00C940  B4D8               	btfsc	status,2,c
 31732  00C942  D00D               	goto	l3680
 31733                           
 31734                           ; BSR set to: 0
 31735  00C944  2989               	incf	___flmul@aexp& (0+255),w,b
 31736  00C946  A4D8               	btfss	status,2,c
 31737  00C948  D008               	goto	l3681
 31738                           
 31739                           ; BSR set to: 0
 31740  00C94A  0E00               	movlw	0
 31741  00C94C  6F7C               	movwf	___flmul@a& (0+255),b
 31742  00C94E  0E00               	movlw	0
 31743  00C950  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31744  00C952  0E00               	movlw	0
 31745  00C954  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31746  00C956  0E00               	movlw	0
 31747  00C958  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31748  00C95A                     l3681:
 31749                           
 31750                           ; BSR set to: 0
 31751                           
 31752                           ; BSR set to: 0
 31753  00C95A  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
 31754  00C95C  D008               	goto	l3682
 31755  00C95E                     l3680:
 31756                           
 31757                           ; BSR set to: 0
 31758                           
 31759                           ; BSR set to: 0
 31760  00C95E  0E00               	movlw	0
 31761  00C960  6F7C               	movwf	___flmul@a& (0+255),b
 31762  00C962  0E00               	movlw	0
 31763  00C964  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31764  00C966  0E00               	movlw	0
 31765  00C968  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31766  00C96A  0E00               	movlw	0
 31767  00C96C  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31768  00C96E                     l3682:
 31769                           
 31770                           ; BSR set to: 0
 31771  00C96E  5189               	movf	___flmul@aexp& (0+255),w,b
 31772  00C970  B4D8               	btfsc	status,2,c
 31773  00C972  D003               	goto	u13150
 31774                           
 31775                           ; BSR set to: 0
 31776  00C974  518A               	movf	___flmul@bexp& (0+255),w,b
 31777  00C976  A4D8               	btfss	status,2,c
 31778  00C978  D009               	goto	l3683
 31779  00C97A                     u13150:
 31780                           
 31781                           ; BSR set to: 0
 31782                           
 31783                           ; BSR set to: 0
 31784  00C97A  0E00               	movlw	0
 31785  00C97C  6F78               	movwf	?___flmul& (0+255),b
 31786  00C97E  0E00               	movlw	0
 31787  00C980  6F79               	movwf	(?___flmul+1)& (0+255),b
 31788  00C982  0E00               	movlw	0
 31789  00C984  6F7A               	movwf	(?___flmul+2)& (0+255),b
 31790  00C986  0E00               	movlw	0
 31791  00C988  6F7B               	movwf	(?___flmul+3)& (0+255),b
 31792                           
 31793                           ; BSR set to: 0
 31794  00C98A  0012               	return	
 31795  00C98C                     l3683:
 31796                           
 31797                           ; BSR set to: 0
 31798                           
 31799                           ; BSR set to: 0
 31800  00C98C  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31801  00C98E  0378               	mulwf	___flmul@b& (0+255),b
 31802  00C990  CFF3 F08F          	movff	prodl,___flmul@temp
 31803  00C994  CFF4 F090          	movff	prodh,___flmul@temp+1
 31804                           
 31805                           ; BSR set to: 0
 31806  00C998  518F               	movf	___flmul@temp& (0+255),w,b
 31807  00C99A  6F85               	movwf	___flmul@grs& (0+255),b
 31808  00C99C  6B86               	clrf	(___flmul@grs+1)& (0+255),b
 31809  00C99E  6B87               	clrf	(___flmul@grs+2)& (0+255),b
 31810  00C9A0  6B88               	clrf	(___flmul@grs+3)& (0+255),b
 31811                           
 31812                           ; BSR set to: 0
 31813  00C9A2  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31814  00C9A4  6F8B               	movwf	___flmul@prod& (0+255),b
 31815  00C9A6  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
 31816  00C9A8  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
 31817  00C9AA  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
 31818  00C9AC  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31819  00C9AE  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31820  00C9B0  CFF3 F08F          	movff	prodl,___flmul@temp
 31821  00C9B4  CFF4 F090          	movff	prodh,___flmul@temp+1
 31822                           
 31823                           ; BSR set to: 0
 31824  00C9B8  518F               	movf	___flmul@temp& (0+255),w,b
 31825  00C9BA  2785               	addwf	___flmul@grs& (0+255),f,b
 31826  00C9BC  0E00               	movlw	0
 31827  00C9BE  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31828  00C9C0  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31829  00C9C2  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31830                           
 31831                           ; BSR set to: 0
 31832  00C9C4  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31833  00C9C6  278B               	addwf	___flmul@prod& (0+255),f,b
 31834  00C9C8  0E00               	movlw	0
 31835  00C9CA  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31836  00C9CC  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31837  00C9CE  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31838  00C9D0  517C               	movf	___flmul@a& (0+255),w,b
 31839  00C9D2  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31840  00C9D4  CFF3 F08F          	movff	prodl,___flmul@temp
 31841  00C9D8  CFF4 F090          	movff	prodh,___flmul@temp+1
 31842                           
 31843                           ; BSR set to: 0
 31844  00C9DC  518F               	movf	___flmul@temp& (0+255),w,b
 31845  00C9DE  2785               	addwf	___flmul@grs& (0+255),f,b
 31846  00C9E0  0E00               	movlw	0
 31847  00C9E2  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31848  00C9E4  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31849  00C9E6  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31850                           
 31851                           ; BSR set to: 0
 31852  00C9E8  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31853  00C9EA  278B               	addwf	___flmul@prod& (0+255),f,b
 31854  00C9EC  0E00               	movlw	0
 31855  00C9EE  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31856  00C9F0  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31857  00C9F2  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31858                           
 31859                           ; BSR set to: 0
 31860  00C9F4  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31861  00C9F8  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31862  00C9FC  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 31863  00CA00  6B85               	clrf	___flmul@grs& (0+255),b
 31864                           
 31865                           ; BSR set to: 0
 31866  00CA02  517C               	movf	___flmul@a& (0+255),w,b
 31867  00CA04  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31868  00CA06  CFF3 F08F          	movff	prodl,___flmul@temp
 31869  00CA0A  CFF4 F090          	movff	prodh,___flmul@temp+1
 31870                           
 31871                           ; BSR set to: 0
 31872  00CA0E  518F               	movf	___flmul@temp& (0+255),w,b
 31873  00CA10  2785               	addwf	___flmul@grs& (0+255),f,b
 31874  00CA12  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31875  00CA14  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31876  00CA16  0E00               	movlw	0
 31877  00CA18  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31878  00CA1A  0E00               	movlw	0
 31879  00CA1C  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31880                           
 31881                           ; BSR set to: 0
 31882  00CA1E  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31883  00CA20  0378               	mulwf	___flmul@b& (0+255),b
 31884  00CA22  CFF3 F08F          	movff	prodl,___flmul@temp
 31885  00CA26  CFF4 F090          	movff	prodh,___flmul@temp+1
 31886                           
 31887                           ; BSR set to: 0
 31888  00CA2A  518F               	movf	___flmul@temp& (0+255),w,b
 31889  00CA2C  2785               	addwf	___flmul@grs& (0+255),f,b
 31890  00CA2E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31891  00CA30  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31892  00CA32  0E00               	movlw	0
 31893  00CA34  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31894  00CA36  0E00               	movlw	0
 31895  00CA38  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31896                           
 31897                           ; BSR set to: 0
 31898  00CA3A  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31899  00CA3E  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31900  00CA42  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 31901  00CA46  6B85               	clrf	___flmul@grs& (0+255),b
 31902  00CA48  517C               	movf	___flmul@a& (0+255),w,b
 31903  00CA4A  0378               	mulwf	___flmul@b& (0+255),b
 31904  00CA4C  CFF3 F08F          	movff	prodl,___flmul@temp
 31905  00CA50  CFF4 F090          	movff	prodh,___flmul@temp+1
 31906                           
 31907                           ; BSR set to: 0
 31908  00CA54  518F               	movf	___flmul@temp& (0+255),w,b
 31909  00CA56  2785               	addwf	___flmul@grs& (0+255),f,b
 31910  00CA58  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31911  00CA5A  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31912  00CA5C  0E00               	movlw	0
 31913  00CA5E  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31914  00CA60  0E00               	movlw	0
 31915  00CA62  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31916                           
 31917                           ; BSR set to: 0
 31918  00CA64  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31919  00CA66  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31920  00CA68  CFF3 F08F          	movff	prodl,___flmul@temp
 31921  00CA6C  CFF4 F090          	movff	prodh,___flmul@temp+1
 31922  00CA70  518F               	movf	___flmul@temp& (0+255),w,b
 31923  00CA72  278B               	addwf	___flmul@prod& (0+255),f,b
 31924  00CA74  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31925  00CA76  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31926  00CA78  0E00               	movlw	0
 31927  00CA7A  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31928  00CA7C  0E00               	movlw	0
 31929  00CA7E  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31930                           
 31931                           ; BSR set to: 0
 31932  00CA80  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31933  00CA82  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31934  00CA84  CFF3 F08F          	movff	prodl,___flmul@temp
 31935  00CA88  CFF4 F090          	movff	prodh,___flmul@temp+1
 31936                           
 31937                           ; BSR set to: 0
 31938  00CA8C  518F               	movf	___flmul@temp& (0+255),w,b
 31939  00CA8E  278B               	addwf	___flmul@prod& (0+255),f,b
 31940  00CA90  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31941  00CA92  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31942  00CA94  0E00               	movlw	0
 31943  00CA96  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31944  00CA98  0E00               	movlw	0
 31945  00CA9A  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31946  00CA9C  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31947  00CA9E  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31948  00CAA0  CFF3 F08F          	movff	prodl,___flmul@temp
 31949  00CAA4  CFF4 F090          	movff	prodh,___flmul@temp+1
 31950                           
 31951                           ; BSR set to: 0
 31952  00CAA8  518F               	movf	___flmul@temp& (0+255),w,b
 31953  00CAAA  6F80               	movwf	??___flmul& (0+255),b
 31954  00CAAC  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31955  00CAAE  6F81               	movwf	(??___flmul+1)& (0+255),b
 31956  00CAB0  6B82               	clrf	(??___flmul+2)& (0+255),b
 31957  00CAB2  6B83               	clrf	(??___flmul+3)& (0+255),b
 31958  00CAB4  C082  F083         	movff	??___flmul+2,??___flmul+3
 31959  00CAB8  C081  F082         	movff	??___flmul+1,??___flmul+2
 31960  00CABC  C080  F081         	movff	??___flmul,??___flmul+1
 31961  00CAC0  6B80               	clrf	??___flmul& (0+255),b
 31962  00CAC2  5180               	movf	??___flmul& (0+255),w,b
 31963  00CAC4  278B               	addwf	___flmul@prod& (0+255),f,b
 31964  00CAC6  5181               	movf	(??___flmul+1)& (0+255),w,b
 31965  00CAC8  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31966  00CACA  5182               	movf	(??___flmul+2)& (0+255),w,b
 31967  00CACC  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31968  00CACE  5183               	movf	(??___flmul+3)& (0+255),w,b
 31969  00CAD0  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31970                           
 31971                           ; BSR set to: 0
 31972  00CAD2  C085  F080         	movff	___flmul@grs,??___flmul
 31973  00CAD6  C086  F081         	movff	___flmul@grs+1,??___flmul+1
 31974  00CADA  C087  F082         	movff	___flmul@grs+2,??___flmul+2
 31975  00CADE  C088  F083         	movff	___flmul@grs+3,??___flmul+3
 31976  00CAE2  0E19               	movlw	25
 31977  00CAE4  D005               	goto	u13160
 31978  00CAE6                     u13165:
 31979  00CAE6  90D8               	bcf	status,0,c
 31980  00CAE8  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 31981  00CAEA  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 31982  00CAEC  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 31983  00CAEE  3380               	rrcf	??___flmul& (0+255),f,b
 31984  00CAF0                     u13160:
 31985  00CAF0  2EE8               	decfsz	wreg,f,c
 31986  00CAF2  D7F9               	goto	u13165
 31987  00CAF4  5180               	movf	??___flmul& (0+255),w,b
 31988  00CAF6  278B               	addwf	___flmul@prod& (0+255),f,b
 31989  00CAF8  5181               	movf	(??___flmul+1)& (0+255),w,b
 31990  00CAFA  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31991  00CAFC  5182               	movf	(??___flmul+2)& (0+255),w,b
 31992  00CAFE  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31993  00CB00  5183               	movf	(??___flmul+3)& (0+255),w,b
 31994  00CB02  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31995                           
 31996                           ; BSR set to: 0
 31997  00CB04  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31998  00CB08  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31999  00CB0C  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32000  00CB10  6B85               	clrf	___flmul@grs& (0+255),b
 32001                           
 32002                           ; BSR set to: 0
 32003  00CB12  5189               	movf	___flmul@aexp& (0+255),w,b
 32004  00CB14  C08A  F080         	movff	___flmul@bexp,??___flmul
 32005  00CB18  6B81               	clrf	(??___flmul+1)& (0+255),b
 32006  00CB1A  2780               	addwf	??___flmul& (0+255),f,b
 32007  00CB1C  0E00               	movlw	0
 32008  00CB1E  2381               	addwfc	(??___flmul+1)& (0+255),f,b
 32009  00CB20  0E82               	movlw	130
 32010  00CB22  2580               	addwf	??___flmul& (0+255),w,b
 32011  00CB24  6F8F               	movwf	___flmul@temp& (0+255),b
 32012  00CB26  0EFF               	movlw	255
 32013  00CB28  2181               	addwfc	(??___flmul+1)& (0+255),w,b
 32014  00CB2A  6F90               	movwf	(___flmul@temp+1)& (0+255),b
 32015  00CB2C  D00F               	goto	l3687
 32016  00CB2E                     
 32017                           ; BSR set to: 0
 32018                           
 32019                           ; BSR set to: 0
 32020  00CB2E  90D8               	bcf	status,0,c
 32021  00CB30  378B               	rlcf	___flmul@prod& (0+255),f,b
 32022  00CB32  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 32023  00CB34  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 32024  00CB36  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 32025                           
 32026                           ; BSR set to: 0
 32027  00CB38  BF88               	btfsc	(___flmul@grs+3)& (0+255),7,b
 32028                           
 32029                           ; BSR set to: 0
 32030  00CB3A  818B               	bsf	___flmul@prod& (0+255),0,b
 32031                           
 32032                           ; BSR set to: 0
 32033  00CB3C  90D8               	bcf	status,0,c
 32034  00CB3E  3785               	rlcf	___flmul@grs& (0+255),f,b
 32035  00CB40  3786               	rlcf	(___flmul@grs+1)& (0+255),f,b
 32036  00CB42  3787               	rlcf	(___flmul@grs+2)& (0+255),f,b
 32037  00CB44  3788               	rlcf	(___flmul@grs+3)& (0+255),f,b
 32038  00CB46  078F               	decf	___flmul@temp& (0+255),f,b
 32039  00CB48  A0D8               	btfss	status,0,c
 32040  00CB4A  0790               	decf	(___flmul@temp+1)& (0+255),f,b
 32041  00CB4C                     l3687:
 32042                           
 32043                           ; BSR set to: 0
 32044                           
 32045                           ; BSR set to: 0
 32046  00CB4C  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
 32047  00CB4E  D7EF               	goto	l3688
 32048                           
 32049                           ; BSR set to: 0
 32050                           
 32051                           ; BSR set to: 0
 32052  00CB50  0E00               	movlw	0
 32053  00CB52  6F89               	movwf	___flmul@aexp& (0+255),b
 32054                           
 32055                           ; BSR set to: 0
 32056  00CB54  AF88               	btfss	(___flmul@grs+3)& (0+255),7,b
 32057  00CB56  D016               	goto	l3694
 32058                           
 32059                           ; BSR set to: 0
 32060  00CB58  0EFF               	movlw	255
 32061  00CB5A  1585               	andwf	___flmul@grs& (0+255),w,b
 32062  00CB5C  6F80               	movwf	??___flmul& (0+255),b
 32063  00CB5E  0EFF               	movlw	255
 32064  00CB60  1586               	andwf	(___flmul@grs+1)& (0+255),w,b
 32065  00CB62  6F81               	movwf	(??___flmul+1)& (0+255),b
 32066  00CB64  0EFF               	movlw	255
 32067  00CB66  1587               	andwf	(___flmul@grs+2)& (0+255),w,b
 32068  00CB68  6F82               	movwf	(??___flmul+2)& (0+255),b
 32069  00CB6A  0E7F               	movlw	127
 32070  00CB6C  1588               	andwf	(___flmul@grs+3)& (0+255),w,b
 32071  00CB6E  6F83               	movwf	(??___flmul+3)& (0+255),b
 32072  00CB70  5180               	movf	??___flmul& (0+255),w,b
 32073  00CB72  1181               	iorwf	(??___flmul+1)& (0+255),w,b
 32074  00CB74  1182               	iorwf	(??___flmul+2)& (0+255),w,b
 32075  00CB76  1183               	iorwf	(??___flmul+3)& (0+255),w,b
 32076  00CB78  A4D8               	btfss	status,2,c
 32077  00CB7A  D002               	goto	u13210
 32078                           
 32079                           ; BSR set to: 0
 32080                           
 32081                           ; BSR set to: 0
 32082  00CB7C  A18B               	btfss	___flmul@prod& (0+255),0,b
 32083  00CB7E  D002               	goto	l3694
 32084  00CB80                     u13210:
 32085                           
 32086                           ; BSR set to: 0
 32087  00CB80  0E01               	movlw	1
 32088  00CB82  6F89               	movwf	___flmul@aexp& (0+255),b
 32089  00CB84                     l3694:
 32090                           
 32091                           ; BSR set to: 0
 32092                           
 32093                           ; BSR set to: 0
 32094                           
 32095                           ; BSR set to: 0
 32096  00CB84  5189               	movf	___flmul@aexp& (0+255),w,b
 32097  00CB86  B4D8               	btfsc	status,2,c
 32098  00CB88  D01F               	goto	l3696
 32099                           
 32100                           ; BSR set to: 0
 32101  00CB8A  0E01               	movlw	1
 32102  00CB8C  278B               	addwf	___flmul@prod& (0+255),f,b
 32103  00CB8E  0E00               	movlw	0
 32104  00CB90  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32105  00CB92  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32106  00CB94  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32107                           
 32108                           ; BSR set to: 0
 32109  00CB96  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
 32110  00CB98  D017               	goto	l3696
 32111                           
 32112                           ; BSR set to: 0
 32113  00CB9A  C08B  F080         	movff	___flmul@prod,??___flmul
 32114  00CB9E  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
 32115  00CBA2  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
 32116  00CBA6  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
 32117  00CBAA  3583               	rlcf	(??___flmul+3)& (0+255),w,b
 32118  00CBAC  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32119  00CBAE  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32120  00CBB0  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32121  00CBB2  3380               	rrcf	??___flmul& (0+255),f,b
 32122  00CBB4  C080  F08B         	movff	??___flmul,___flmul@prod
 32123  00CBB8  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
 32124  00CBBC  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
 32125  00CBC0  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
 32126                           
 32127                           ; BSR set to: 0
 32128  00CBC4  4B8F               	infsnz	___flmul@temp& (0+255),f,b
 32129  00CBC6  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
 32130  00CBC8                     l3696:
 32131                           
 32132                           ; BSR set to: 0
 32133                           
 32134                           ; BSR set to: 0
 32135                           
 32136                           ; BSR set to: 0
 32137  00CBC8  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32138  00CBCA  D00D               	goto	l3697
 32139  00CBCC  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32140  00CBCE  E103               	bnz	u13240
 32141  00CBD0  298F               	incf	___flmul@temp& (0+255),w,b
 32142  00CBD2  A0D8               	btfss	status,0,c
 32143  00CBD4  D008               	goto	l3697
 32144  00CBD6                     u13240:
 32145                           
 32146                           ; BSR set to: 0
 32147  00CBD6  0E00               	movlw	0
 32148  00CBD8  6F8B               	movwf	___flmul@prod& (0+255),b
 32149  00CBDA  0E00               	movlw	0
 32150  00CBDC  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32151  00CBDE  0E80               	movlw	128
 32152  00CBE0  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32153  00CBE2  0E7F               	movlw	127
 32154  00CBE4  D020               	goto	L42
 32155  00CBE6                     l3697:
 32156                           
 32157                           ; BSR set to: 0
 32158                           
 32159                           ; BSR set to: 0
 32160  00CBE6  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32161  00CBE8  D005               	goto	u13250
 32162  00CBEA  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32163  00CBEC  E10E               	bnz	l3699
 32164  00CBEE  058F               	decf	___flmul@temp& (0+255),w,b
 32165  00CBF0  B0D8               	btfsc	status,0,c
 32166  00CBF2  D00B               	goto	l3699
 32167  00CBF4                     u13250:
 32168                           
 32169                           ; BSR set to: 0
 32170  00CBF4  0E00               	movlw	0
 32171  00CBF6  6F8B               	movwf	___flmul@prod& (0+255),b
 32172  00CBF8  0E00               	movlw	0
 32173  00CBFA  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32174  00CBFC  0E00               	movlw	0
 32175  00CBFE  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32176  00CC00  0E00               	movlw	0
 32177  00CC02  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32178  00CC04  0E00               	movlw	0
 32179  00CC06  6F84               	movwf	___flmul@sign& (0+255),b
 32180  00CC08  D00F               	goto	l3700
 32181  00CC0A                     l3699:
 32182                           
 32183                           ; BSR set to: 0
 32184  00CC0A  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
 32185                           
 32186                           ; BSR set to: 0
 32187  00CC0E  0EFF               	movlw	255
 32188  00CC10  178B               	andwf	___flmul@prod& (0+255),f,b
 32189  00CC12  0EFF               	movlw	255
 32190  00CC14  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
 32191  00CC16  0E7F               	movlw	127
 32192  00CC18  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
 32193  00CC1A  0E00               	movlw	0
 32194  00CC1C  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
 32195                           
 32196                           ; BSR set to: 0
 32197  00CC1E  B18A               	btfsc	___flmul@bexp& (0+255),0,b
 32198                           
 32199                           ; BSR set to: 0
 32200  00CC20  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
 32201                           
 32202                           ; BSR set to: 0
 32203                           
 32204                           ; BSR set to: 0
 32205  00CC22  90D8               	bcf	status,0,c
 32206  00CC24  318A               	rrcf	___flmul@bexp& (0+255),w,b
 32207  00CC26                     L42:
 32208  00CC26  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32209  00CC28                     l3700:
 32210                           
 32211                           ; BSR set to: 0
 32212                           
 32213                           ; BSR set to: 0
 32214                           
 32215                           ; BSR set to: 0
 32216  00CC28  5184               	movf	___flmul@sign& (0+255),w,b
 32217  00CC2A  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 32218                           
 32219                           ; BSR set to: 0
 32220  00CC2C  C08B  F078         	movff	___flmul@prod,?___flmul
 32221  00CC30  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
 32222  00CC34  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
 32223  00CC38  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
 32224  00CC3C  0012               	return	
 32225  00CC3E                     __end_of___flmul:
 32226                           	opt stack 0
 32227                           tblptru	equ	0xFF8
 32228                           tblptrh	equ	0xFF7
 32229                           tblptrl	equ	0xFF6
 32230                           tablat	equ	0xFF5
 32231                           prodh	equ	0xFF4
 32232                           prodl	equ	0xFF3
 32233                           intcon	equ	0xFF2
 32234                           postinc0	equ	0xFEE
 32235                           wreg	equ	0xFE8
 32236                           indf1	equ	0xFE7
 32237                           postinc1	equ	0xFE6
 32238                           postdec1	equ	0xFE5
 32239                           plusw1	equ	0xFE3
 32240                           fsr1h	equ	0xFE2
 32241                           fsr1l	equ	0xFE1
 32242                           indf2	equ	0xFDF
 32243                           postinc2	equ	0xFDE
 32244                           postdec2	equ	0xFDD
 32245                           plusw2	equ	0xFDB
 32246                           fsr2h	equ	0xFDA
 32247                           fsr2l	equ	0xFD9
 32248                           status	equ	0xFD8
 32249                           
 32250 ;; *************** function ___fladd *****************
 32251 ;; Defined at:
 32252 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 32253 ;; Parameters:    Size  Location     Type
 32254 ;;  b               4   28[BANK0 ] unsigned char 
 32255 ;;  a               4   32[BANK0 ] unsigned char 
 32256 ;; Auto vars:     Size  Location     Type
 32257 ;;  grs             1   47[BANK0 ] unsigned char 
 32258 ;;  bexp            1   46[BANK0 ] unsigned char 
 32259 ;;  aexp            1   45[BANK0 ] unsigned char 
 32260 ;;  signs           1   44[BANK0 ] unsigned char 
 32261 ;; Return value:  Size  Location     Type
 32262 ;;                  4   28[BANK0 ] unsigned char 
 32263 ;; Registers used:
 32264 ;;		wreg, status,2, status,0
 32265 ;; Tracked objects:
 32266 ;;		On entry : 0/0
 32267 ;;		On exit  : 0/0
 32268 ;;		Unchanged: 0/0
 32269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32270 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32271 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32272 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32273 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32274 ;;Total ram usage:       20 bytes
 32275 ;; Hardware stack levels used:    1
 32276 ;; Hardware stack levels required when called:   10
 32277 ;; This function calls:
 32278 ;;		Nothing
 32279 ;; This function is called by:
 32280 ;;		__motor_steps_from_degrees_int
 32281 ;;		_motor_divide_jump_to_nearest
 32282 ;;		_adc_read_temperature
 32283 ;;		__motor_steps_from_degrees_float
 32284 ;; This function uses a non-reentrant model
 32285 ;;
 32286                           
 32287                           	psect	text126
 32288  00CC3E                     __ptext126:
 32289                           	opt stack 0
 32290  00CC3E                     ___fladd:
 32291                           	opt stack 17
 32292                           
 32293                           ; BSR set to: 0
 32294                           ;incstack = 0
 32295  00CC3E  0100               	movlb	0	; () banked
 32296  00CC40  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32297  00CC42  0B80               	andlw	128
 32298  00CC44  6F8C               	movwf	___fladd@signs& (0+255),b
 32299  00CC46  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32300  00CC48  257F               	addwf	(___fladd@b+3)& (0+255),w,b
 32301  00CC4A  6F8E               	movwf	___fladd@bexp& (0+255),b
 32302                           
 32303                           ; BSR set to: 0
 32304  00CC4C  BF7E               	btfsc	(___fladd@b+2)& (0+255),7,b
 32305                           
 32306                           ; BSR set to: 0
 32307  00CC4E  818E               	bsf	___fladd@bexp& (0+255),0,b
 32308                           
 32309                           ; BSR set to: 0
 32310                           
 32311                           ; BSR set to: 0
 32312  00CC50  518E               	movf	___fladd@bexp& (0+255),w,b
 32313  00CC52  B4D8               	btfsc	status,2,c
 32314  00CC54  D00D               	goto	l3585
 32315                           
 32316                           ; BSR set to: 0
 32317  00CC56  298E               	incf	___fladd@bexp& (0+255),w,b
 32318  00CC58  A4D8               	btfss	status,2,c
 32319  00CC5A  D008               	goto	l3586
 32320                           
 32321                           ; BSR set to: 0
 32322  00CC5C  0E00               	movlw	0
 32323  00CC5E  6F7C               	movwf	___fladd@b& (0+255),b
 32324  00CC60  0E00               	movlw	0
 32325  00CC62  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32326  00CC64  0E00               	movlw	0
 32327  00CC66  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32328  00CC68  0E00               	movlw	0
 32329  00CC6A  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32330  00CC6C                     l3586:
 32331                           
 32332                           ; BSR set to: 0
 32333                           
 32334                           ; BSR set to: 0
 32335  00CC6C  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32336  00CC6E  D006               	goto	L43
 32337  00CC70                     l3585:
 32338                           
 32339                           ; BSR set to: 0
 32340                           
 32341                           ; BSR set to: 0
 32342  00CC70  0E00               	movlw	0
 32343  00CC72  6F7C               	movwf	___fladd@b& (0+255),b
 32344  00CC74  0E00               	movlw	0
 32345  00CC76  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32346  00CC78  0E00               	movlw	0
 32347  00CC7A  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32348  00CC7C                     L43:
 32349  00CC7C  0E00               	movlw	0
 32350  00CC7E  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32351                           
 32352                           ; BSR set to: 0
 32353                           
 32354                           ; BSR set to: 0
 32355  00CC80  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32356  00CC82  0B80               	andlw	128
 32357  00CC84  6F8D               	movwf	___fladd@aexp& (0+255),b
 32358                           
 32359                           ; BSR set to: 0
 32360  00CC86  518C               	movf	___fladd@signs& (0+255),w,b
 32361  00CC88  198D               	xorwf	___fladd@aexp& (0+255),w,b
 32362  00CC8A  A4D8               	btfss	status,2,c
 32363                           
 32364                           ; BSR set to: 0
 32365  00CC8C  8D8C               	bsf	___fladd@signs& (0+255),6,b
 32366                           
 32367                           ; BSR set to: 0
 32368                           
 32369                           ; BSR set to: 0
 32370  00CC8E  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32371  00CC90  2583               	addwf	(___fladd@a+3)& (0+255),w,b
 32372  00CC92  6F8D               	movwf	___fladd@aexp& (0+255),b
 32373                           
 32374                           ; BSR set to: 0
 32375  00CC94  BF82               	btfsc	(___fladd@a+2)& (0+255),7,b
 32376                           
 32377                           ; BSR set to: 0
 32378  00CC96  818D               	bsf	___fladd@aexp& (0+255),0,b
 32379                           
 32380                           ; BSR set to: 0
 32381                           
 32382                           ; BSR set to: 0
 32383  00CC98  518D               	movf	___fladd@aexp& (0+255),w,b
 32384  00CC9A  B4D8               	btfsc	status,2,c
 32385  00CC9C  D00D               	goto	l3590
 32386                           
 32387                           ; BSR set to: 0
 32388  00CC9E  298D               	incf	___fladd@aexp& (0+255),w,b
 32389  00CCA0  A4D8               	btfss	status,2,c
 32390  00CCA2  D008               	goto	l3591
 32391                           
 32392                           ; BSR set to: 0
 32393  00CCA4  0E00               	movlw	0
 32394  00CCA6  6F80               	movwf	___fladd@a& (0+255),b
 32395  00CCA8  0E00               	movlw	0
 32396  00CCAA  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32397  00CCAC  0E00               	movlw	0
 32398  00CCAE  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32399  00CCB0  0E00               	movlw	0
 32400  00CCB2  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32401  00CCB4                     l3591:
 32402                           
 32403                           ; BSR set to: 0
 32404                           
 32405                           ; BSR set to: 0
 32406  00CCB4  8F82               	bsf	(___fladd@a+2)& (0+255),7,b
 32407  00CCB6  D006               	goto	L44
 32408  00CCB8                     l3590:
 32409                           
 32410                           ; BSR set to: 0
 32411                           
 32412                           ; BSR set to: 0
 32413  00CCB8  0E00               	movlw	0
 32414  00CCBA  6F80               	movwf	___fladd@a& (0+255),b
 32415  00CCBC  0E00               	movlw	0
 32416  00CCBE  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32417  00CCC0  0E00               	movlw	0
 32418  00CCC2  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32419  00CCC4                     L44:
 32420  00CCC4  0E00               	movlw	0
 32421  00CCC6  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32422                           
 32423                           ; BSR set to: 0
 32424                           
 32425                           ; BSR set to: 0
 32426  00CCC8  518E               	movf	___fladd@bexp& (0+255),w,b
 32427  00CCCA  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 32428  00CCCC  B0D8               	btfsc	status,0,c
 32429  00CCCE  D022               	goto	l3593
 32430                           
 32431                           ; BSR set to: 0
 32432  00CCD0  AD8C               	btfss	___fladd@signs& (0+255),6,b
 32433  00CCD2  D002               	goto	l3594
 32434                           
 32435                           ; BSR set to: 0
 32436  00CCD4  0E80               	movlw	128
 32437  00CCD6  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32438  00CCD8                     l3594:
 32439                           
 32440                           ; BSR set to: 0
 32441                           
 32442                           ; BSR set to: 0
 32443  00CCD8  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 32444                           
 32445                           ; BSR set to: 0
 32446  00CCDC  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32447                           
 32448                           ; BSR set to: 0
 32449  00CCE0  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 32450                           
 32451                           ; BSR set to: 0
 32452  00CCE4  C07C  F08F         	movff	___fladd@b,___fladd@grs
 32453                           
 32454                           ; BSR set to: 0
 32455  00CCE8  C080  F07C         	movff	___fladd@a,___fladd@b
 32456                           
 32457                           ; BSR set to: 0
 32458  00CCEC  C08F  F080         	movff	___fladd@grs,___fladd@a
 32459                           
 32460                           ; BSR set to: 0
 32461  00CCF0  C07D  F08F         	movff	___fladd@b+1,___fladd@grs
 32462                           
 32463                           ; BSR set to: 0
 32464  00CCF4  C081  F07D         	movff	___fladd@a+1,___fladd@b+1
 32465                           
 32466                           ; BSR set to: 0
 32467  00CCF8  C08F  F081         	movff	___fladd@grs,___fladd@a+1
 32468                           
 32469                           ; BSR set to: 0
 32470  00CCFC  C07E  F08F         	movff	___fladd@b+2,___fladd@grs
 32471                           
 32472                           ; BSR set to: 0
 32473  00CD00  C082  F07E         	movff	___fladd@a+2,___fladd@b+2
 32474                           
 32475                           ; BSR set to: 0
 32476  00CD04  C08F  F082         	movff	___fladd@grs,___fladd@a+2
 32477                           
 32478                           ; BSR set to: 0
 32479  00CD08  C07F  F08F         	movff	___fladd@b+3,___fladd@grs
 32480                           
 32481                           ; BSR set to: 0
 32482  00CD0C  C083  F07F         	movff	___fladd@a+3,___fladd@b+3
 32483                           
 32484                           ; BSR set to: 0
 32485  00CD10  C08F  F083         	movff	___fladd@grs,___fladd@a+3
 32486  00CD14                     l3593:
 32487                           
 32488                           ; BSR set to: 0
 32489                           
 32490                           ; BSR set to: 0
 32491  00CD14  0E00               	movlw	0
 32492  00CD16  6F8F               	movwf	___fladd@grs& (0+255),b
 32493                           
 32494                           ; BSR set to: 0
 32495  00CD18  518E               	movf	___fladd@bexp& (0+255),w,b
 32496  00CD1A  6F84               	movwf	??___fladd& (0+255),b
 32497  00CD1C  6B85               	clrf	(??___fladd+1)& (0+255),b
 32498  00CD1E  1F84               	comf	??___fladd& (0+255),f,b
 32499  00CD20  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32500  00CD22  4B84               	infsnz	??___fladd& (0+255),f,b
 32501  00CD24  2B85               	incf	(??___fladd+1)& (0+255),f,b
 32502  00CD26  518D               	movf	___fladd@aexp& (0+255),w,b
 32503  00CD28  6F86               	movwf	(??___fladd+2)& (0+255),b
 32504  00CD2A  6B87               	clrf	(??___fladd+3)& (0+255),b
 32505  00CD2C  5184               	movf	??___fladd& (0+255),w,b
 32506  00CD2E  2786               	addwf	(??___fladd+2)& (0+255),f,b
 32507  00CD30  5185               	movf	(??___fladd+1)& (0+255),w,b
 32508  00CD32  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32509  00CD34  BF87               	btfsc	(??___fladd+3)& (0+255),7,b
 32510  00CD36  D02C               	goto	l3597
 32511  00CD38  5187               	movf	(??___fladd+3)& (0+255),w,b
 32512  00CD3A  E104               	bnz	u14580
 32513  00CD3C  0E1A               	movlw	26
 32514  00CD3E  5D86               	subwf	(??___fladd+2)& (0+255),w,b
 32515  00CD40  A0D8               	btfss	status,0,c
 32516  00CD42  D026               	goto	l3597
 32517  00CD44                     u14580:
 32518                           
 32519                           ; BSR set to: 0
 32520  00CD44  517C               	movf	___fladd@b& (0+255),w,b
 32521  00CD46  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32522  00CD48  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32523  00CD4A  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32524  00CD4C  B4D8               	btfsc	status,2,c
 32525  00CD4E  D002               	goto	u14590
 32526  00CD50  0E01               	movlw	1
 32527  00CD52  D001               	goto	u14600
 32528  00CD54                     u14590:
 32529  00CD54  0E00               	movlw	0
 32530  00CD56                     u14600:
 32531  00CD56  6F8F               	movwf	___fladd@grs& (0+255),b
 32532                           
 32533                           ; BSR set to: 0
 32534  00CD58  0E00               	movlw	0
 32535  00CD5A  6F7C               	movwf	___fladd@b& (0+255),b
 32536  00CD5C  0E00               	movlw	0
 32537  00CD5E  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32538  00CD60  0E00               	movlw	0
 32539  00CD62  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32540  00CD64  0E00               	movlw	0
 32541  00CD66  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32542                           
 32543                           ; BSR set to: 0
 32544  00CD68  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32545  00CD6C  D015               	goto	u14630
 32546  00CD6E                     l3598:
 32547                           
 32548                           ; BSR set to: 0
 32549  00CD6E  A18F               	btfss	___fladd@grs& (0+255),0,b
 32550  00CD70  D005               	goto	l3599
 32551                           
 32552                           ; BSR set to: 0
 32553  00CD72  90D8               	bcf	status,0,c
 32554  00CD74  318F               	rrcf	___fladd@grs& (0+255),w,b
 32555  00CD76  0901               	iorlw	1
 32556  00CD78  6F8F               	movwf	___fladd@grs& (0+255),b
 32557  00CD7A  D002               	goto	l3600
 32558  00CD7C                     l3599:
 32559                           
 32560                           ; BSR set to: 0
 32561                           
 32562                           ; BSR set to: 0
 32563  00CD7C  90D8               	bcf	status,0,c
 32564  00CD7E  338F               	rrcf	___fladd@grs& (0+255),f,b
 32565  00CD80                     l3600:
 32566                           
 32567                           ; BSR set to: 0
 32568                           
 32569                           ; BSR set to: 0
 32570  00CD80  B17C               	btfsc	___fladd@b& (0+255),0,b
 32571                           
 32572                           ; BSR set to: 0
 32573  00CD82  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32574                           
 32575                           ; BSR set to: 0
 32576                           
 32577                           ; BSR set to: 0
 32578  00CD84  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32579  00CD86  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32580  00CD88  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32581  00CD8A  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32582  00CD8C  337C               	rrcf	___fladd@b& (0+255),f,b
 32583                           
 32584                           ; BSR set to: 0
 32585  00CD8E  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32586  00CD90                     l3597:
 32587                           
 32588                           ; BSR set to: 0
 32589  00CD90  518D               	movf	___fladd@aexp& (0+255),w,b
 32590  00CD92  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 32591  00CD94  A0D8               	btfss	status,0,c
 32592  00CD96  D7EB               	goto	l3598
 32593  00CD98                     u14630:
 32594                           
 32595                           ; BSR set to: 0
 32596                           
 32597                           ; BSR set to: 0
 32598  00CD98  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 32599  00CD9A  D028               	goto	l3603
 32600                           
 32601                           ; BSR set to: 0
 32602  00CD9C  518E               	movf	___fladd@bexp& (0+255),w,b
 32603  00CD9E  A4D8               	btfss	status,2,c
 32604  00CDA0  D009               	goto	l3604
 32605                           
 32606                           ; BSR set to: 0
 32607  00CDA2  0E00               	movlw	0
 32608  00CDA4  6F7C               	movwf	?___fladd& (0+255),b
 32609  00CDA6  0E00               	movlw	0
 32610  00CDA8  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32611  00CDAA  0E00               	movlw	0
 32612  00CDAC  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32613  00CDAE  0E00               	movlw	0
 32614  00CDB0  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32615                           
 32616                           ; BSR set to: 0
 32617  00CDB2  0012               	return	
 32618  00CDB4                     l3604:
 32619                           
 32620                           ; BSR set to: 0
 32621                           
 32622                           ; BSR set to: 0
 32623  00CDB4  5180               	movf	___fladd@a& (0+255),w,b
 32624  00CDB6  277C               	addwf	___fladd@b& (0+255),f,b
 32625  00CDB8  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32626  00CDBA  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32627  00CDBC  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32628  00CDBE  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32629  00CDC0  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32630  00CDC2  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32631                           
 32632                           ; BSR set to: 0
 32633  00CDC4  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32634  00CDC6  D082               	goto	u14760
 32635                           
 32636                           ; BSR set to: 0
 32637  00CDC8  A18F               	btfss	___fladd@grs& (0+255),0,b
 32638  00CDCA  D005               	goto	l3607
 32639                           
 32640                           ; BSR set to: 0
 32641  00CDCC  90D8               	bcf	status,0,c
 32642  00CDCE  318F               	rrcf	___fladd@grs& (0+255),w,b
 32643  00CDD0  0901               	iorlw	1
 32644  00CDD2  6F8F               	movwf	___fladd@grs& (0+255),b
 32645  00CDD4  D002               	goto	l3608
 32646  00CDD6                     l3607:
 32647                           
 32648                           ; BSR set to: 0
 32649                           
 32650                           ; BSR set to: 0
 32651  00CDD6  90D8               	bcf	status,0,c
 32652  00CDD8  338F               	rrcf	___fladd@grs& (0+255),f,b
 32653  00CDDA                     l3608:
 32654                           
 32655                           ; BSR set to: 0
 32656                           
 32657                           ; BSR set to: 0
 32658  00CDDA  B17C               	btfsc	___fladd@b& (0+255),0,b
 32659                           
 32660                           ; BSR set to: 0
 32661  00CDDC  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32662                           
 32663                           ; BSR set to: 0
 32664                           
 32665                           ; BSR set to: 0
 32666  00CDDE  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32667  00CDE0  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32668  00CDE2  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32669  00CDE4  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32670  00CDE6  337C               	rrcf	___fladd@b& (0+255),f,b
 32671                           
 32672                           ; BSR set to: 0
 32673  00CDE8  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32674                           
 32675                           ; BSR set to: 0
 32676  00CDEA  D070               	goto	u14760
 32677  00CDEC                     l3603:
 32678                           
 32679                           ; BSR set to: 0
 32680                           
 32681                           ; BSR set to: 0
 32682  00CDEC  5180               	movf	___fladd@a& (0+255),w,b
 32683  00CDEE  5D7C               	subwf	___fladd@b& (0+255),w,b
 32684  00CDF0  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32685  00CDF2  597D               	subwfb	(___fladd@b+1)& (0+255),w,b
 32686  00CDF4  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32687  00CDF6  597E               	subwfb	(___fladd@b+2)& (0+255),w,b
 32688  00CDF8  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32689  00CDFA  0A80               	xorlw	128
 32690  00CDFC  6F84               	movwf	??___fladd& (0+255),b
 32691  00CDFE  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32692  00CE00  0A80               	xorlw	128
 32693  00CE02  5984               	subwfb	??___fladd& (0+255),w,b
 32694  00CE04  B0D8               	btfsc	status,0,c
 32695  00CE06  D036               	goto	l3611
 32696                           
 32697                           ; BSR set to: 0
 32698  00CE08  C07C  F084         	movff	___fladd@b,??___fladd
 32699  00CE0C  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32700  00CE10  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32701  00CE14  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32702  00CE18  1F84               	comf	??___fladd& (0+255),f,b
 32703  00CE1A  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32704  00CE1C  1F86               	comf	(??___fladd+2)& (0+255),f,b
 32705  00CE1E  1F87               	comf	(??___fladd+3)& (0+255),f,b
 32706  00CE20  2B84               	incf	??___fladd& (0+255),f,b
 32707  00CE22  0E00               	movlw	0
 32708  00CE24  2385               	addwfc	(??___fladd+1)& (0+255),f,b
 32709  00CE26  2386               	addwfc	(??___fladd+2)& (0+255),f,b
 32710  00CE28  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32711  00CE2A  5180               	movf	___fladd@a& (0+255),w,b
 32712  00CE2C  2584               	addwf	??___fladd& (0+255),w,b
 32713  00CE2E  6F88               	movwf	(??___fladd+4)& (0+255),b
 32714  00CE30  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32715  00CE32  2185               	addwfc	(??___fladd+1)& (0+255),w,b
 32716  00CE34  6F89               	movwf	(??___fladd+5)& (0+255),b
 32717  00CE36  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32718  00CE38  2186               	addwfc	(??___fladd+2)& (0+255),w,b
 32719  00CE3A  6F8A               	movwf	(??___fladd+6)& (0+255),b
 32720  00CE3C  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32721  00CE3E  2187               	addwfc	(??___fladd+3)& (0+255),w,b
 32722  00CE40  6F8B               	movwf	(??___fladd+7)& (0+255),b
 32723  00CE42  0EFF               	movlw	255
 32724  00CE44  2588               	addwf	(??___fladd+4)& (0+255),w,b
 32725  00CE46  6F7C               	movwf	___fladd@b& (0+255),b
 32726  00CE48  0EFF               	movlw	255
 32727  00CE4A  2189               	addwfc	(??___fladd+5)& (0+255),w,b
 32728  00CE4C  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32729  00CE4E  0EFF               	movlw	255
 32730  00CE50  218A               	addwfc	(??___fladd+6)& (0+255),w,b
 32731  00CE52  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32732  00CE54  0EFF               	movlw	255
 32733  00CE56  218B               	addwfc	(??___fladd+7)& (0+255),w,b
 32734  00CE58  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32735  00CE5A  0E80               	movlw	128
 32736  00CE5C  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32737                           
 32738                           ; BSR set to: 0
 32739  00CE5E  6D8F               	negf	___fladd@grs& (0+255),b
 32740                           
 32741                           ; BSR set to: 0
 32742  00CE60  518F               	movf	___fladd@grs& (0+255),w,b
 32743  00CE62  A4D8               	btfss	status,2,c
 32744  00CE64  D00F               	goto	l3613
 32745                           
 32746                           ; BSR set to: 0
 32747  00CE66  0E01               	movlw	1
 32748  00CE68  277C               	addwf	___fladd@b& (0+255),f,b
 32749  00CE6A  0E00               	movlw	0
 32750  00CE6C  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32751  00CE6E  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32752  00CE70  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32753                           
 32754                           ; BSR set to: 0
 32755  00CE72  D008               	goto	l3613
 32756  00CE74                     l3611:
 32757                           
 32758                           ; BSR set to: 0
 32759                           
 32760                           ; BSR set to: 0
 32761  00CE74  5180               	movf	___fladd@a& (0+255),w,b
 32762  00CE76  5F7C               	subwf	___fladd@b& (0+255),f,b
 32763  00CE78  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32764  00CE7A  5B7D               	subwfb	(___fladd@b+1)& (0+255),f,b
 32765  00CE7C  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32766  00CE7E  5B7E               	subwfb	(___fladd@b+2)& (0+255),f,b
 32767  00CE80  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32768  00CE82  5B7F               	subwfb	(___fladd@b+3)& (0+255),f,b
 32769  00CE84                     l3613:
 32770                           
 32771                           ; BSR set to: 0
 32772  00CE84  517C               	movf	___fladd@b& (0+255),w,b
 32773  00CE86  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32774  00CE88  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32775  00CE8A  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32776  00CE8C  A4D8               	btfss	status,2,c
 32777  00CE8E  D01C               	goto	l3620
 32778                           
 32779                           ; BSR set to: 0
 32780  00CE90  518F               	movf	___fladd@grs& (0+255),w,b
 32781  00CE92  A4D8               	btfss	status,2,c
 32782  00CE94  D019               	goto	l3620
 32783                           
 32784                           ; BSR set to: 0
 32785  00CE96  0E00               	movlw	0
 32786  00CE98  6F7C               	movwf	?___fladd& (0+255),b
 32787  00CE9A  0E00               	movlw	0
 32788  00CE9C  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32789  00CE9E  0E00               	movlw	0
 32790  00CEA0  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32791  00CEA2  0E00               	movlw	0
 32792  00CEA4  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32793                           
 32794                           ; BSR set to: 0
 32795  00CEA6  0012               	return	
 32796  00CEA8                     
 32797                           ; BSR set to: 0
 32798                           
 32799                           ; BSR set to: 0
 32800  00CEA8  90D8               	bcf	status,0,c
 32801  00CEAA  377C               	rlcf	___fladd@b& (0+255),f,b
 32802  00CEAC  377D               	rlcf	(___fladd@b+1)& (0+255),f,b
 32803  00CEAE  377E               	rlcf	(___fladd@b+2)& (0+255),f,b
 32804  00CEB0  377F               	rlcf	(___fladd@b+3)& (0+255),f,b
 32805                           
 32806                           ; BSR set to: 0
 32807  00CEB2  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 32808                           
 32809                           ; BSR set to: 0
 32810  00CEB4  817C               	bsf	___fladd@b& (0+255),0,b
 32811                           
 32812                           ; BSR set to: 0
 32813                           
 32814                           ; BSR set to: 0
 32815  00CEB6  A18F               	btfss	___fladd@grs& (0+255),0,b
 32816  00CEB8  D002               	goto	l3618
 32817                           
 32818                           ; BSR set to: 0
 32819  00CEBA  80D8               	bsf	status,0,c
 32820  00CEBC  D001               	goto	L45
 32821  00CEBE                     l3618:
 32822                           
 32823                           ; BSR set to: 0
 32824                           
 32825                           ; BSR set to: 0
 32826  00CEBE  90D8               	bcf	status,0,c
 32827  00CEC0                     L45:
 32828  00CEC0  378F               	rlcf	___fladd@grs& (0+255),f,b
 32829                           
 32830                           ; BSR set to: 0
 32831                           
 32832                           ; BSR set to: 0
 32833  00CEC2  518E               	movf	___fladd@bexp& (0+255),w,b
 32834  00CEC4  A4D8               	btfss	status,2,c
 32835                           
 32836                           ; BSR set to: 0
 32837  00CEC6  078E               	decf	___fladd@bexp& (0+255),f,b
 32838  00CEC8                     l3620:
 32839                           
 32840                           ; BSR set to: 0
 32841                           
 32842                           ; BSR set to: 0
 32843                           
 32844                           ; BSR set to: 0
 32845  00CEC8  AF7E               	btfss	(___fladd@b+2)& (0+255),7,b
 32846  00CECA  D7EE               	goto	l3616
 32847  00CECC                     u14760:
 32848                           
 32849                           ; BSR set to: 0
 32850                           
 32851                           ; BSR set to: 0
 32852                           
 32853                           ; BSR set to: 0
 32854  00CECC  0E00               	movlw	0
 32855  00CECE  6F8D               	movwf	___fladd@aexp& (0+255),b
 32856                           
 32857                           ; BSR set to: 0
 32858  00CED0  AF8F               	btfss	___fladd@grs& (0+255),7,b
 32859  00CED2  D00A               	goto	l3625
 32860                           
 32861                           ; BSR set to: 0
 32862  00CED4  C08F  F084         	movff	___fladd@grs,??___fladd
 32863  00CED8  0E7F               	movlw	127
 32864  00CEDA  1784               	andwf	??___fladd& (0+255),f,b
 32865  00CEDC  A4D8               	btfss	status,2,c
 32866  00CEDE  D002               	goto	u14790
 32867                           
 32868                           ; BSR set to: 0
 32869                           
 32870                           ; BSR set to: 0
 32871  00CEE0  A17C               	btfss	___fladd@b& (0+255),0,b
 32872  00CEE2  D002               	goto	l3625
 32873  00CEE4                     u14790:
 32874                           
 32875                           ; BSR set to: 0
 32876  00CEE4  0E01               	movlw	1
 32877  00CEE6  6F8D               	movwf	___fladd@aexp& (0+255),b
 32878  00CEE8                     l3625:
 32879                           
 32880                           ; BSR set to: 0
 32881                           
 32882                           ; BSR set to: 0
 32883                           
 32884                           ; BSR set to: 0
 32885  00CEE8  518D               	movf	___fladd@aexp& (0+255),w,b
 32886  00CEEA  B4D8               	btfsc	status,2,c
 32887  00CEEC  D020               	goto	l3628
 32888                           
 32889                           ; BSR set to: 0
 32890  00CEEE  0E01               	movlw	1
 32891  00CEF0  277C               	addwf	___fladd@b& (0+255),f,b
 32892  00CEF2  0E00               	movlw	0
 32893  00CEF4  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32894  00CEF6  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32895  00CEF8  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32896                           
 32897                           ; BSR set to: 0
 32898  00CEFA  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32899  00CEFC  D018               	goto	l3628
 32900                           
 32901                           ; BSR set to: 0
 32902  00CEFE  C07C  F084         	movff	___fladd@b,??___fladd
 32903  00CF02  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32904  00CF06  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32905  00CF0A  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32906  00CF0E  3587               	rlcf	(??___fladd+3)& (0+255),w,b
 32907  00CF10  3387               	rrcf	(??___fladd+3)& (0+255),f,b
 32908  00CF12  3386               	rrcf	(??___fladd+2)& (0+255),f,b
 32909  00CF14  3385               	rrcf	(??___fladd+1)& (0+255),f,b
 32910  00CF16  3384               	rrcf	??___fladd& (0+255),f,b
 32911  00CF18  C084  F07C         	movff	??___fladd,___fladd@b
 32912  00CF1C  C085  F07D         	movff	??___fladd+1,___fladd@b+1
 32913  00CF20  C086  F07E         	movff	??___fladd+2,___fladd@b+2
 32914  00CF24  C087  F07F         	movff	??___fladd+3,___fladd@b+3
 32915  00CF28  298E               	incf	___fladd@bexp& (0+255),w,b
 32916  00CF2A  A4D8               	btfss	status,2,c
 32917                           
 32918                           ; BSR set to: 0
 32919  00CF2C  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32920  00CF2E                     l3628:
 32921                           
 32922                           ; BSR set to: 0
 32923                           
 32924                           ; BSR set to: 0
 32925                           
 32926                           ; BSR set to: 0
 32927                           
 32928                           ; BSR set to: 0
 32929  00CF2E  298E               	incf	___fladd@bexp& (0+255),w,b
 32930  00CF30  B4D8               	btfsc	status,2,c
 32931  00CF32  D003               	goto	u14840
 32932                           
 32933                           ; BSR set to: 0
 32934  00CF34  518E               	movf	___fladd@bexp& (0+255),w,b
 32935  00CF36  A4D8               	btfss	status,2,c
 32936  00CF38  D00D               	goto	l3632
 32937  00CF3A                     u14840:
 32938                           
 32939                           ; BSR set to: 0
 32940                           
 32941                           ; BSR set to: 0
 32942  00CF3A  0E00               	movlw	0
 32943  00CF3C  6F7C               	movwf	___fladd@b& (0+255),b
 32944  00CF3E  0E00               	movlw	0
 32945  00CF40  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32946  00CF42  0E00               	movlw	0
 32947  00CF44  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32948  00CF46  0E00               	movlw	0
 32949  00CF48  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32950  00CF4A  518E               	movf	___fladd@bexp& (0+255),w,b
 32951  00CF4C  A4D8               	btfss	status,2,c
 32952  00CF4E  D002               	goto	l3632
 32953                           
 32954                           ; BSR set to: 0
 32955  00CF50  0E00               	movlw	0
 32956  00CF52  6F8C               	movwf	___fladd@signs& (0+255),b
 32957  00CF54                     l3632:
 32958                           
 32959                           ; BSR set to: 0
 32960                           
 32961                           ; BSR set to: 0
 32962                           
 32963                           ; BSR set to: 0
 32964  00CF54  A18E               	btfss	___fladd@bexp& (0+255),0,b
 32965  00CF56  D002               	goto	l3633
 32966                           
 32967                           ; BSR set to: 0
 32968  00CF58  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32969  00CF5A  D001               	goto	l3634
 32970  00CF5C                     l3633:
 32971                           
 32972                           ; BSR set to: 0
 32973                           
 32974                           ; BSR set to: 0
 32975  00CF5C  9F7E               	bcf	(___fladd@b+2)& (0+255),7,b
 32976  00CF5E                     l3634:
 32977                           
 32978                           ; BSR set to: 0
 32979                           
 32980                           ; BSR set to: 0
 32981  00CF5E  90D8               	bcf	status,0,c
 32982  00CF60  318E               	rrcf	___fladd@bexp& (0+255),w,b
 32983  00CF62  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32984                           
 32985                           ; BSR set to: 0
 32986  00CF64  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 32987                           
 32988                           ; BSR set to: 0
 32989  00CF66  8F7F               	bsf	(___fladd@b+3)& (0+255),7,b
 32990                           
 32991                           ; BSR set to: 0
 32992                           
 32993                           ; BSR set to: 0
 32994  00CF68  C07C  F07C         	movff	___fladd@b,?___fladd
 32995  00CF6C  C07D  F07D         	movff	___fladd@b+1,?___fladd+1
 32996  00CF70  C07E  F07E         	movff	___fladd@b+2,?___fladd+2
 32997  00CF74  C07F  F07F         	movff	___fladd@b+3,?___fladd+3
 32998  00CF78  0012               	return	
 32999  00CF7A                     __end_of___fladd:
 33000                           	opt stack 0
 33001                           tblptru	equ	0xFF8
 33002                           tblptrh	equ	0xFF7
 33003                           tblptrl	equ	0xFF6
 33004                           tablat	equ	0xFF5
 33005                           prodh	equ	0xFF4
 33006                           prodl	equ	0xFF3
 33007                           intcon	equ	0xFF2
 33008                           postinc0	equ	0xFEE
 33009                           wreg	equ	0xFE8
 33010                           indf1	equ	0xFE7
 33011                           postinc1	equ	0xFE6
 33012                           postdec1	equ	0xFE5
 33013                           plusw1	equ	0xFE3
 33014                           fsr1h	equ	0xFE2
 33015                           fsr1l	equ	0xFE1
 33016                           indf2	equ	0xFDF
 33017                           postinc2	equ	0xFDE
 33018                           postdec2	equ	0xFDD
 33019                           plusw2	equ	0xFDB
 33020                           fsr2h	equ	0xFDA
 33021                           fsr2l	equ	0xFD9
 33022                           status	equ	0xFD8
 33023                           
 33024 ;; *************** function _USBDeviceInit *****************
 33025 ;; Defined at:
 33026 ;;		line 277 in file "usb_device.c"
 33027 ;; Parameters:    Size  Location     Type
 33028 ;;		None
 33029 ;; Auto vars:     Size  Location     Type
 33030 ;;  i               1    8[BANK0 ] unsigned char 
 33031 ;; Return value:  Size  Location     Type
 33032 ;;                  1    wreg      void 
 33033 ;; Registers used:
 33034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33035 ;; Tracked objects:
 33036 ;;		On entry : 0/0
 33037 ;;		On exit  : 0/0
 33038 ;;		Unchanged: 0/0
 33039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33041 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33043 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33044 ;;Total ram usage:        1 bytes
 33045 ;; Hardware stack levels used:    1
 33046 ;; Hardware stack levels required when called:   11
 33047 ;; This function calls:
 33048 ;;		_memset
 33049 ;; This function is called by:
 33050 ;;		_main
 33051 ;; This function uses a non-reentrant model
 33052 ;;
 33053                           
 33054                           	psect	text127
 33055  00FCD4                     __ptext127:
 33056                           	opt stack 0
 33057  00FCD4                     _USBDeviceInit:
 33058                           	opt stack 19
 33059                           
 33060                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 33061                           
 33062                           ; BSR set to: 0
 33063                           ;incstack = 0
 33064  00FCD4  98A0               	bcf	4000,4,c	;volatile
 33065                           
 33066                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 33067  00FCD6  0E00               	movlw	0
 33068  00FCD8  6E63               	movwf	3939,c	;volatile
 33069                           
 33070                           ;usb_device.c: 291: {UIR = 0;};
 33071  00FCDA  0E00               	movlw	0
 33072  00FCDC  6E62               	movwf	3938,c	;volatile
 33073                           
 33074                           ;usb_device.c: 294: UEP0 = 0;
 33075  00FCDE  0E00               	movlw	0
 33076  00FCE0  010F               	movlb	15	; () banked
 33077  00FCE2  6F26               	movwf	38,b	;volatile
 33078                           
 33079                           ; BSR set to: 15
 33080                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 33081  00FCE4  0E27               	movlw	39
 33082  00FCE6  0100               	movlb	0	; () banked
 33083  00FCE8  6F60               	movwf	memset@p1& (0+255),b
 33084  00FCEA  0E0F               	movlw	15
 33085  00FCEC  6F61               	movwf	(memset@p1+1)& (0+255),b
 33086  00FCEE  0E00               	movlw	0
 33087  00FCF0  6F63               	movwf	(memset@c+1)& (0+255),b
 33088  00FCF2  0E00               	movlw	0
 33089  00FCF4  6F62               	movwf	memset@c& (0+255),b
 33090  00FCF6  0E00               	movlw	0
 33091  00FCF8  6F65               	movwf	(memset@n+1)& (0+255),b
 33092  00FCFA  0E02               	movlw	2
 33093  00FCFC  6F64               	movwf	memset@n& (0+255),b
 33094  00FCFE  EC35  F0AC         	call	_memset	;wreg free
 33095                           
 33096                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 33097  00FD02  0E16               	movlw	22
 33098  00FD04  010F               	movlb	15	; () banked
 33099  00FD06  6F39               	movwf	57,b	;volatile
 33100                           
 33101                           ; BSR set to: 15
 33102  00FD08  0E9F               	movlw	159
 33103  00FD0A  6F37               	movwf	55,b	;volatile
 33104                           
 33105                           ; BSR set to: 15
 33106  00FD0C  0E7B               	movlw	123
 33107  00FD0E  6F36               	movwf	54,b	;volatile
 33108                           
 33109                           ; BSR set to: 15
 33110                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 33111  00FD10  0E00               	movlw	0
 33112  00FD12  0100               	movlb	0	; () banked
 33113  00FD14  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33114  00FD16                     l17902:
 33115                           
 33116                           ; BSR set to: 0
 33117  00FD16  0E0B               	movlw	11
 33118  00FD18  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33119  00FD1A  D001               	goto	l145
 33120  00FD1C  D00E               	goto	u17270
 33121  00FD1E                     l145:
 33122                           
 33123                           ; BSR set to: 0
 33124                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 33125                           
 33126                           ; BSR set to: 0
 33127  00FD1E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33128  00FD20  0D04               	mullw	4
 33129  00FD22  0E00               	movlw	0
 33130  00FD24  24F3               	addwf	prodl,w,c
 33131  00FD26  6ED9               	movwf	fsr2l,c
 33132  00FD28  0E0D               	movlw	13
 33133  00FD2A  20F4               	addwfc	prodh,w,c
 33134  00FD2C  6EDA               	movwf	fsr2h,c
 33135  00FD2E  6ADE               	clrf	postinc2,c
 33136  00FD30  6ADE               	clrf	postinc2,c
 33137  00FD32  6ADE               	clrf	postinc2,c
 33138  00FD34  6ADD               	clrf	postdec2,c
 33139                           
 33140                           ; BSR set to: 0
 33141  00FD36  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33142  00FD38  D7EE               	goto	l17902
 33143  00FD3A                     u17270:
 33144                           
 33145                           ; BSR set to: 0
 33146                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 33147  00FD3A  8C65               	bsf	3941,6,c	;volatile
 33148                           
 33149                           ; BSR set to: 0
 33150                           ;usb_device.c: 316: UADDR = 0x00;
 33151  00FD3C  0E00               	movlw	0
 33152  00FD3E  010F               	movlb	15	; () banked
 33153  00FD40  6F38               	movwf	56,b	;volatile
 33154                           
 33155                           ; BSR set to: 15
 33156                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 33157  00FD42  9865               	bcf	3941,4,c	;volatile
 33158                           
 33159                           ; BSR set to: 15
 33160                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 33161  00FD44  9C65               	bcf	3941,6,c	;volatile
 33162  00FD46                     
 33163                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 33164                           
 33165                           ; BSR set to: 15
 33166  00FD46  9662               	bcf	3938,3,c	;volatile
 33167                           
 33168                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 33169  00FD48  0E00               	movlw	0
 33170  00FD4A  6E56               	movwf	_inPipes+3,c	;volatile
 33171                           
 33172                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 33173  00FD4C  0E00               	movlw	0
 33174  00FD4E  0101               	movlb	1	; () banked
 33175  00FD50  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 33176                           
 33177                           ; BSR set to: 1
 33178                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 33179  00FD52  0E00               	movlw	0
 33180  00FD54  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 33181  00FD56  0E00               	movlw	0
 33182  00FD58  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 33183                           
 33184                           ; BSR set to: 1
 33185                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 33186  00FD5A  B662               	btfsc	3938,3,c	;volatile
 33187  00FD5C  D7F4               	goto	l147
 33188                           
 33189                           ; BSR set to: 1
 33190                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 33191                           
 33192                           ; BSR set to: 1
 33193  00FD5E  0E01               	movlw	1
 33194  00FD60  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 33195                           
 33196                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 33197  00FD62  0E01               	movlw	1
 33198  00FD64  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 33199                           
 33200                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 33201  00FD66  0E00               	movlw	0
 33202  00FD68  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 33203                           
 33204                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 33205  00FD6A  0E00               	movlw	0
 33206  00FD6C  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 33207                           
 33208                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 33209  00FD6E  0E00               	movlw	0
 33210  00FD70  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 33211                           
 33212                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 33213  00FD72  0E00               	movlw	0
 33214  00FD74  0100               	movlb	0	; () banked
 33215  00FD76  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33216  00FD78                     l17930:
 33217                           
 33218                           ; BSR set to: 0
 33219  00FD78  0E02               	movlw	2
 33220  00FD7A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33221  00FD7C  D001               	goto	l149
 33222  00FD7E  D02E               	goto	u17300
 33223  00FD80                     l149:
 33224                           
 33225                           ; BSR set to: 0
 33226                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 33227                           
 33228                           ; BSR set to: 0
 33229  00FD80  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33230  00FD82  0D02               	mullw	2
 33231  00FD84  0E09               	movlw	low _pBDTEntryIn
 33232  00FD86  24F3               	addwf	prodl,w,c
 33233  00FD88  6ED9               	movwf	fsr2l,c
 33234  00FD8A  0E01               	movlw	high _pBDTEntryIn
 33235  00FD8C  20F4               	addwfc	prodh,w,c
 33236  00FD8E  6EDA               	movwf	fsr2h,c
 33237  00FD90  0E00               	movlw	0
 33238  00FD92  6EDE               	movwf	postinc2,c
 33239  00FD94  0E00               	movlw	0
 33240  00FD96  6EDD               	movwf	postdec2,c
 33241                           
 33242                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 33243  00FD98  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33244  00FD9A  0D02               	mullw	2
 33245  00FD9C  0E0F               	movlw	low _pBDTEntryOut
 33246  00FD9E  24F3               	addwf	prodl,w,c
 33247  00FDA0  6ED9               	movwf	fsr2l,c
 33248  00FDA2  0E01               	movlw	high _pBDTEntryOut
 33249  00FDA4  20F4               	addwfc	prodh,w,c
 33250  00FDA6  6EDA               	movwf	fsr2h,c
 33251  00FDA8  0E00               	movlw	0
 33252  00FDAA  6EDE               	movwf	postinc2,c
 33253  00FDAC  0E00               	movlw	0
 33254  00FDAE  6EDD               	movwf	postdec2,c
 33255                           
 33256                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 33257  00FDB0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33258  00FDB2  0D01               	mullw	1
 33259  00FDB4  0E32               	movlw	low _ep_data_in
 33260  00FDB6  24F3               	addwf	prodl,w,c
 33261  00FDB8  6ED9               	movwf	fsr2l,c
 33262  00FDBA  0E01               	movlw	high _ep_data_in
 33263  00FDBC  20F4               	addwfc	prodh,w,c
 33264  00FDBE  6EDA               	movwf	fsr2h,c
 33265  00FDC0  0E00               	movlw	0
 33266  00FDC2  6EDF               	movwf	indf2,c
 33267                           
 33268                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 33269  00FDC4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33270  00FDC6  0D01               	mullw	1
 33271  00FDC8  0E2F               	movlw	low _ep_data_out
 33272  00FDCA  24F3               	addwf	prodl,w,c
 33273  00FDCC  6ED9               	movwf	fsr2l,c
 33274  00FDCE  0E01               	movlw	high _ep_data_out
 33275  00FDD0  20F4               	addwfc	prodh,w,c
 33276  00FDD2  6EDA               	movwf	fsr2h,c
 33277  00FDD4  0E00               	movlw	0
 33278  00FDD6  6EDF               	movwf	indf2,c
 33279                           
 33280                           ; BSR set to: 0
 33281  00FDD8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33282  00FDDA  D7CE               	goto	l17930
 33283  00FDDC                     u17300:
 33284                           
 33285                           ; BSR set to: 0
 33286                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33287                           
 33288                           ; BSR set to: 0
 33289  00FDDC  0E08               	movlw	8
 33290  00FDDE  0101               	movlb	1	; () banked
 33291  00FDE0  6F09               	movwf	_pBDTEntryIn& (0+255),b
 33292  00FDE2  0E0D               	movlw	13
 33293  00FDE4  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 33294                           
 33295                           ; BSR set to: 1
 33296                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 33297  00FDE6  0E16               	movlw	22
 33298  00FDE8  010F               	movlb	15	; () banked
 33299  00FDEA  6F26               	movwf	38,b	;volatile
 33300                           
 33301                           ; BSR set to: 15
 33302                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 33303  00FDEC  0E0D               	movlw	13
 33304  00FDEE  010D               	movlb	13	; () banked
 33305  00FDF0  6F03               	movwf	3,b	;volatile
 33306  00FDF2  0E30               	movlw	48
 33307  00FDF4  6F02               	movwf	2,b	;volatile
 33308                           
 33309                           ; BSR set to: 13
 33310                           ;usb_device.c: 359: BDT[0].CNT = 8;
 33311  00FDF6  0E08               	movlw	8
 33312  00FDF8  6F01               	movwf	1,b	;volatile
 33313                           
 33314                           ; BSR set to: 13
 33315                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 33316  00FDFA  0E04               	movlw	4
 33317  00FDFC  6F00               	movwf	0,b	;volatile
 33318                           
 33319                           ; BSR set to: 13
 33320                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 33321  00FDFE  8F00               	bsf	0,7,b	;volatile
 33322                           
 33323                           ; BSR set to: 13
 33324                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 33325  00FE00  0E00               	movlw	0
 33326  00FE02  0101               	movlb	1	; () banked
 33327  00FE04  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 33328                           
 33329                           ; BSR set to: 1
 33330                           ;usb_device.c: 366: USB1msTickCount = 0;
 33331  00FE06  0E00               	movlw	0
 33332  00FE08  6F25               	movwf	_USB1msTickCount& (0+255),b	;volatile
 33333  00FE0A  0E00               	movlw	0
 33334  00FE0C  6F26               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 33335  00FE0E  0E00               	movlw	0
 33336  00FE10  6F27               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 33337  00FE12  0E00               	movlw	0
 33338  00FE14  6F28               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 33339                           
 33340                           ; BSR set to: 1
 33341                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 33342  00FE16  0E00               	movlw	0
 33343  00FE18  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 33344                           
 33345                           ; BSR set to: 1
 33346                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 33347  00FE1A  0E00               	movlw	0
 33348  00FE1C  6E5D               	movwf	_USBDeviceState,c	;volatile
 33349                           
 33350                           ; BSR set to: 1
 33351  00FE1E  0012               	return		;funcret
 33352  00FE20                     __end_of_USBDeviceInit:
 33353                           	opt stack 0
 33354                           tblptru	equ	0xFF8
 33355                           tblptrh	equ	0xFF7
 33356                           tblptrl	equ	0xFF6
 33357                           tablat	equ	0xFF5
 33358                           prodh	equ	0xFF4
 33359                           prodl	equ	0xFF3
 33360                           intcon	equ	0xFF2
 33361                           postinc0	equ	0xFEE
 33362                           wreg	equ	0xFE8
 33363                           indf1	equ	0xFE7
 33364                           postinc1	equ	0xFE6
 33365                           postdec1	equ	0xFE5
 33366                           plusw1	equ	0xFE3
 33367                           fsr1h	equ	0xFE2
 33368                           fsr1l	equ	0xFE1
 33369                           indf2	equ	0xFDF
 33370                           postinc2	equ	0xFDE
 33371                           postdec2	equ	0xFDD
 33372                           plusw2	equ	0xFDB
 33373                           fsr2h	equ	0xFDA
 33374                           fsr2l	equ	0xFD9
 33375                           status	equ	0xFD8
 33376                           
 33377 ;; *************** function _memset *****************
 33378 ;; Defined at:
 33379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 33380 ;; Parameters:    Size  Location     Type
 33381 ;;  p1              2    0[BANK0 ] PTR void 
 33382 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33383 ;;  c               2    2[BANK0 ] int 
 33384 ;;  n               2    4[BANK0 ] unsigned int 
 33385 ;; Auto vars:     Size  Location     Type
 33386 ;;  p               2    6[BANK0 ] PTR unsigned char 
 33387 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33388 ;; Return value:  Size  Location     Type
 33389 ;;                  2    0[BANK0 ] PTR void 
 33390 ;; Registers used:
 33391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33392 ;; Tracked objects:
 33393 ;;		On entry : 0/0
 33394 ;;		On exit  : 0/0
 33395 ;;		Unchanged: 0/0
 33396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33397 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33400 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33401 ;;Total ram usage:        8 bytes
 33402 ;; Hardware stack levels used:    1
 33403 ;; Hardware stack levels required when called:   10
 33404 ;; This function calls:
 33405 ;;		Nothing
 33406 ;; This function is called by:
 33407 ;;		_USBDeviceInit
 33408 ;; This function uses a non-reentrant model
 33409 ;;
 33410                           
 33411                           	psect	text128
 33412  01586A                     __ptext128:
 33413                           	opt stack 0
 33414  01586A                     _memset:
 33415                           	opt stack 19
 33416                           
 33417                           ; BSR set to: 1
 33418                           ;incstack = 0
 33419  01586A  C060  F066         	movff	memset@p1,memset@p
 33420  01586E  C061  F067         	movff	memset@p1+1,memset@p+1
 33421  015872  D009               	goto	l3810
 33422  015874                     l16948:
 33423  015874  C066  FFD9         	movff	memset@p,fsr2l
 33424  015878  C067  FFDA         	movff	memset@p+1,fsr2h
 33425  01587C  C062  FFDF         	movff	memset@c,indf2
 33426  015880  0100               	movlb	0	; () banked
 33427  015882  4B66               	infsnz	memset@p& (0+255),f,b
 33428  015884  2B67               	incf	(memset@p+1)& (0+255),f,b
 33429  015886                     l3810:
 33430                           
 33431                           ; BSR set to: 0
 33432  015886  0100               	movlb	0	; () banked
 33433  015888  0764               	decf	memset@n& (0+255),f,b
 33434  01588A  A0D8               	btfss	status,0,c
 33435  01588C  0765               	decf	(memset@n+1)& (0+255),f,b
 33436  01588E  2964               	incf	memset@n& (0+255),w,b
 33437  015890  E1F1               	bnz	l16948
 33438  015892  2965               	incf	(memset@n+1)& (0+255),w,b
 33439  015894  B4D8               	btfsc	status,2,c
 33440  015896  0012               	return	
 33441  015898  D7ED               	goto	l3811
 33442  01589A                     __end_of_memset:
 33443                           	opt stack 0
 33444                           tblptru	equ	0xFF8
 33445                           tblptrh	equ	0xFF7
 33446                           tblptrl	equ	0xFF6
 33447                           tablat	equ	0xFF5
 33448                           prodh	equ	0xFF4
 33449                           prodl	equ	0xFF3
 33450                           intcon	equ	0xFF2
 33451                           postinc0	equ	0xFEE
 33452                           wreg	equ	0xFE8
 33453                           indf1	equ	0xFE7
 33454                           postinc1	equ	0xFE6
 33455                           postdec1	equ	0xFE5
 33456                           plusw1	equ	0xFE3
 33457                           fsr1h	equ	0xFE2
 33458                           fsr1l	equ	0xFE1
 33459                           indf2	equ	0xFDF
 33460                           postinc2	equ	0xFDE
 33461                           postdec2	equ	0xFDD
 33462                           plusw2	equ	0xFDB
 33463                           fsr2h	equ	0xFDA
 33464                           fsr2l	equ	0xFD9
 33465                           status	equ	0xFD8
 33466                           
 33467 ;; *************** function _USBDeviceAttach *****************
 33468 ;; Defined at:
 33469 ;;		line 1354 in file "usb_device.c"
 33470 ;; Parameters:    Size  Location     Type
 33471 ;;		None
 33472 ;; Auto vars:     Size  Location     Type
 33473 ;;		None
 33474 ;; Return value:  Size  Location     Type
 33475 ;;                  1    wreg      void 
 33476 ;; Registers used:
 33477 ;;		wreg, status,2
 33478 ;; Tracked objects:
 33479 ;;		On entry : 0/0
 33480 ;;		On exit  : 0/0
 33481 ;;		Unchanged: 0/0
 33482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33487 ;;Total ram usage:        0 bytes
 33488 ;; Hardware stack levels used:    1
 33489 ;; Hardware stack levels required when called:   10
 33490 ;; This function calls:
 33491 ;;		Nothing
 33492 ;; This function is called by:
 33493 ;;		_main
 33494 ;; This function uses a non-reentrant model
 33495 ;;
 33496                           
 33497                           	psect	text129
 33498  0157D8                     __ptext129:
 33499                           	opt stack 0
 33500  0157D8                     _USBDeviceAttach:
 33501                           	opt stack 20
 33502                           
 33503                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 33504                           
 33505                           ; BSR set to: 0
 33506                           ;incstack = 0
 33507  0157D8  505D               	movf	_USBDeviceState,w,c	;volatile
 33508  0157DA  A4D8               	btfss	status,2,c
 33509  0157DC  0012               	return	
 33510                           
 33511                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 33512  0157DE  0E00               	movlw	0
 33513  0157E0  6E65               	movwf	3941,c	;volatile
 33514                           
 33515                           ;usb_device.c: 1365: UIE = 0;
 33516  0157E2  0E00               	movlw	0
 33517  0157E4  010F               	movlb	15	; () banked
 33518  0157E6  6F36               	movwf	54,b	;volatile
 33519                           
 33520                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 33521  0157E8  0E16               	movlw	22
 33522  0157EA  6F39               	movwf	57,b	;volatile
 33523  0157EC  0E9F               	movlw	159
 33524  0157EE  6F37               	movwf	55,b	;volatile
 33525  0157F0  0E7B               	movlw	123
 33526  0157F2  6F36               	movwf	54,b	;volatile
 33527                           
 33528                           ; BSR set to: 15
 33529                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 33530  0157F4  8ED0               	bsf	4048,7,c	;volatile
 33531                           
 33532                           ; BSR set to: 15
 33533  0157F6  88A2               	bsf	4002,4,c	;volatile
 33534                           
 33535                           ; BSR set to: 15
 33536  0157F8  88A0               	bsf	4000,4,c	;volatile
 33537                           
 33538                           ; BSR set to: 15
 33539  0157FA  8EF2               	bsf	intcon,7,c	;volatile
 33540                           
 33541                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 33542  0157FC  D001               	goto	l206
 33543  0157FE                     l207:
 33544  0157FE  8665               	bsf	3941,3,c	;volatile
 33545  015800                     l206:
 33546  015800  A665               	btfss	3941,3,c	;volatile
 33547  015802  D7FD               	goto	l207
 33548                           
 33549                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 33550  015804  0E01               	movlw	1
 33551  015806  6E5D               	movwf	_USBDeviceState,c	;volatile
 33552  015808  0012               	return	
 33553  01580A                     __end_of_USBDeviceAttach:
 33554                           	opt stack 0
 33555                           tblptru	equ	0xFF8
 33556                           tblptrh	equ	0xFF7
 33557                           tblptrl	equ	0xFF6
 33558                           tablat	equ	0xFF5
 33559                           prodh	equ	0xFF4
 33560                           prodl	equ	0xFF3
 33561                           intcon	equ	0xFF2
 33562                           postinc0	equ	0xFEE
 33563                           wreg	equ	0xFE8
 33564                           indf1	equ	0xFE7
 33565                           postinc1	equ	0xFE6
 33566                           postdec1	equ	0xFE5
 33567                           plusw1	equ	0xFE3
 33568                           fsr1h	equ	0xFE2
 33569                           fsr1l	equ	0xFE1
 33570                           indf2	equ	0xFDF
 33571                           postinc2	equ	0xFDE
 33572                           postdec2	equ	0xFDD
 33573                           plusw2	equ	0xFDB
 33574                           fsr2h	equ	0xFDA
 33575                           fsr2l	equ	0xFD9
 33576                           status	equ	0xFD8
 33577                           
 33578 ;; *************** function _SYSTEM_Initialize *****************
 33579 ;; Defined at:
 33580 ;;		line 39 in file "system.c"
 33581 ;; Parameters:    Size  Location     Type
 33582 ;;  state           1    wreg     enum E6623
 33583 ;; Auto vars:     Size  Location     Type
 33584 ;;  state           1    4[BANK0 ] enum E6623
 33585 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 33586 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 33587 ;; Return value:  Size  Location     Type
 33588 ;;                  1    wreg      void 
 33589 ;; Registers used:
 33590 ;;		wreg, status,2, status,0
 33591 ;; Tracked objects:
 33592 ;;		On entry : 0/0
 33593 ;;		On exit  : 0/0
 33594 ;;		Unchanged: 0/0
 33595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33597 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33599 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33600 ;;Total ram usage:        5 bytes
 33601 ;; Hardware stack levels used:    1
 33602 ;; Hardware stack levels required when called:   10
 33603 ;; This function calls:
 33604 ;;		Nothing
 33605 ;; This function is called by:
 33606 ;;		_main
 33607 ;; This function uses a non-reentrant model
 33608 ;;
 33609                           
 33610                           	psect	text130
 33611  014A68                     __ptext130:
 33612                           	opt stack 0
 33613  014A68                     _SYSTEM_Initialize:
 33614                           	opt stack 20
 33615                           
 33616                           ;incstack = 0
 33617                           ;SYSTEM_Initialize@state stored from wreg
 33618  014A68  0100               	movlb	0	; () banked
 33619  014A6A  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 33620                           
 33621                           ;system.c: 41: switch(state)
 33622  014A6C  D01E               	goto	l897
 33623  014A6E                     
 33624                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 33625  014A6E  0E02               	movlw	2
 33626  014A70  0100               	movlb	0	; () banked
 33627  014A72  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 33628  014A74  0E58               	movlw	88
 33629  014A76  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 33630                           
 33631                           ; BSR set to: 0
 33632                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 33633  014A78  8C9B               	bsf	3995,6,c	;volatile
 33634  014A7A                     l18082:
 33635                           
 33636                           ; BSR set to: 0
 33637  014A7A  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 33638  014A7C  A0D8               	btfss	status,0,c
 33639  014A7E  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 33640  014A80  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 33641  014A82  E1FB               	bnz	l18082
 33642  014A84  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 33643  014A86  B4D8               	btfsc	status,2,c
 33644  014A88  0012               	return	
 33645  014A8A  D7F7               	goto	l900
 33646  014A8C                     
 33647                           ; BSR set to: 0
 33648                           ;system.c: 78: OSCCON = 0x70;
 33649                           
 33650                           ; BSR set to: 0
 33651  014A8C  0E70               	movlw	112
 33652  014A8E  6ED3               	movwf	4051,c	;volatile
 33653                           
 33654                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 33655  014A90  0E03               	movlw	3
 33656  014A92  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3140+1)& (0+255),b
 33657  014A94  0E20               	movlw	32
 33658  014A96  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3140& (0+255),b
 33659  014A98                     l18086:
 33660                           
 33661                           ; BSR set to: 0
 33662  014A98  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3140& (0+255),f,b
 33663  014A9A  A0D8               	btfss	status,0,c
 33664  014A9C  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3140+1)& (0+255),f,b
 33665  014A9E  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3140& (0+255),w,b
 33666  014AA0  E1FB               	bnz	l18086
 33667  014AA2  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3140+1)& (0+255),w,b
 33668  014AA4  B4D8               	btfsc	status,2,c
 33669  014AA6  0012               	return	
 33670  014AA8  D7F7               	goto	l906
 33671  014AAA                     l897:
 33672                           
 33673                           ; BSR set to: 0
 33674  014AAA  0100               	movlb	0	; () banked
 33675  014AAC  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 33676                           
 33677                           ; Switch size 1, requested type "space"
 33678                           ; Number of cases is 3, Range of values is 0 to 2
 33679                           ; switch strategies available:
 33680                           ; Name         Instructions Cycles
 33681                           ; simple_byte           10     6 (average)
 33682                           ;	Chosen strategy is simple_byte
 33683  014AAE  0A00               	xorlw	0	; case 0
 33684  014AB0  B4D8               	btfsc	status,2,c
 33685  014AB2  D7DD               	goto	l898
 33686  014AB4  0A01               	xorlw	1	; case 1
 33687  014AB6  B4D8               	btfsc	status,2,c
 33688  014AB8  0012               	return	
 33689  014ABA  0A03               	xorlw	3	; case 2
 33690  014ABC  A4D8               	btfss	status,2,c
 33691  014ABE  0012               	return	
 33692  014AC0  D7E5               	goto	l904
 33693  014AC2                     __end_of_SYSTEM_Initialize:
 33694                           	opt stack 0
 33695                           tblptru	equ	0xFF8
 33696                           tblptrh	equ	0xFF7
 33697                           tblptrl	equ	0xFF6
 33698                           tablat	equ	0xFF5
 33699                           prodh	equ	0xFF4
 33700                           prodl	equ	0xFF3
 33701                           intcon	equ	0xFF2
 33702                           postinc0	equ	0xFEE
 33703                           wreg	equ	0xFE8
 33704                           indf1	equ	0xFE7
 33705                           postinc1	equ	0xFE6
 33706                           postdec1	equ	0xFE5
 33707                           plusw1	equ	0xFE3
 33708                           fsr1h	equ	0xFE2
 33709                           fsr1l	equ	0xFE1
 33710                           indf2	equ	0xFDF
 33711                           postinc2	equ	0xFDE
 33712                           postdec2	equ	0xFDD
 33713                           plusw2	equ	0xFDB
 33714                           fsr2h	equ	0xFDA
 33715                           fsr2l	equ	0xFD9
 33716                           status	equ	0xFD8
 33717                           
 33718 ;; *************** function _APP_DeviceMSDTasks *****************
 33719 ;; Defined at:
 33720 ;;		line 110 in file "app_device_msd.c"
 33721 ;; Parameters:    Size  Location     Type
 33722 ;;		None
 33723 ;; Auto vars:     Size  Location     Type
 33724 ;;		None
 33725 ;; Return value:  Size  Location     Type
 33726 ;;                  1    wreg      void 
 33727 ;; Registers used:
 33728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33729 ;; Tracked objects:
 33730 ;;		On entry : 0/0
 33731 ;;		On exit  : 0/0
 33732 ;;		Unchanged: 0/0
 33733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33738 ;;Total ram usage:        0 bytes
 33739 ;; Hardware stack levels used:    1
 33740 ;; Hardware stack levels required when called:   21
 33741 ;; This function calls:
 33742 ;;		_MSDTasks
 33743 ;; This function is called by:
 33744 ;;		_main
 33745 ;; This function uses a non-reentrant model
 33746 ;;
 33747                           
 33748                           	psect	text131
 33749  015D3C                     __ptext131:
 33750                           	opt stack 0
 33751  015D3C                     _APP_DeviceMSDTasks:
 33752                           	opt stack 9
 33753                           
 33754                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 33755                           
 33756                           ; BSR set to: 0
 33757                           ;incstack = 0
 33758  015D3C  0E20               	movlw	32
 33759  015D3E  605D               	cpfslt	_USBDeviceState,c	;volatile
 33760  015D40  D001               	goto	l986
 33761  015D42  0012               	return	
 33762  015D44                     l986:
 33763                           
 33764                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 33765  015D44  B265               	btfsc	3941,1,c	;volatile
 33766  015D46  0012               	return	
 33767                           
 33768                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 33769                           
 33770                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 33771  015D48  EC73  F06E         	call	_MSDTasks	;wreg free
 33772  015D4C  0012               	return		;funcret
 33773  015D4E                     __end_of_APP_DeviceMSDTasks:
 33774                           	opt stack 0
 33775                           tblptru	equ	0xFF8
 33776                           tblptrh	equ	0xFF7
 33777                           tblptrl	equ	0xFF6
 33778                           tablat	equ	0xFF5
 33779                           prodh	equ	0xFF4
 33780                           prodl	equ	0xFF3
 33781                           intcon	equ	0xFF2
 33782                           postinc0	equ	0xFEE
 33783                           wreg	equ	0xFE8
 33784                           indf1	equ	0xFE7
 33785                           postinc1	equ	0xFE6
 33786                           postdec1	equ	0xFE5
 33787                           plusw1	equ	0xFE3
 33788                           fsr1h	equ	0xFE2
 33789                           fsr1l	equ	0xFE1
 33790                           indf2	equ	0xFDF
 33791                           postinc2	equ	0xFDE
 33792                           postdec2	equ	0xFDD
 33793                           plusw2	equ	0xFDB
 33794                           fsr2h	equ	0xFDA
 33795                           fsr2l	equ	0xFD9
 33796                           status	equ	0xFD8
 33797                           
 33798 ;; *************** function _MSDTasks *****************
 33799 ;; Defined at:
 33800 ;;		line 335 in file "usb_device_msd.c"
 33801 ;; Parameters:    Size  Location     Type
 33802 ;;		None
 33803 ;; Auto vars:     Size  Location     Type
 33804 ;;  i               1   81[BANK0 ] unsigned char 
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  1    wreg      unsigned char 
 33807 ;; Registers used:
 33808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33809 ;; Tracked objects:
 33810 ;;		On entry : 0/0
 33811 ;;		On exit  : 0/0
 33812 ;;		Unchanged: 0/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33815 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33817 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33818 ;;Total ram usage:        6 bytes
 33819 ;; Hardware stack levels used:    1
 33820 ;; Hardware stack levels required when called:   20
 33821 ;; This function calls:
 33822 ;;		_MSDProcessCommand
 33823 ;;		_USBStallEndpoint
 33824 ;;		_USBTransferOnePacket
 33825 ;; This function is called by:
 33826 ;;		_APP_DeviceMSDTasks
 33827 ;; This function uses a non-reentrant model
 33828 ;;
 33829                           
 33830                           	psect	text132
 33831  00DCE6                     __ptext132:
 33832                           	opt stack 0
 33833  00DCE6                     _MSDTasks:
 33834                           	opt stack 9
 33835                           
 33836                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 33837                           
 33838                           ;incstack = 0
 33839  00DCE6  0E20               	movlw	32
 33840  00DCE8  185D               	xorwf	_USBDeviceState,w,c	;volatile
 33841  00DCEA  A4D8               	btfss	status,2,c
 33842  00DCEC  0012               	return	
 33843                           
 33844                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 33845                           
 33846                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 33847  00DCEE  98A0               	bcf	4000,4,c	;volatile
 33848                           
 33849                           ;usb_device_msd.c: 357: switch(MSD_State)
 33850  00DCF0  D11C               	goto	l570
 33851  00DCF2                     
 33852                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 33853  00DCF2  0101               	movlb	1	; () banked
 33854  00DCF4  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 33855  00DCF6  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33856  00DCF8  B4D8               	btfsc	status,2,c
 33857  00DCFA  D006               	goto	u16280
 33858                           
 33859                           ; BSR set to: 1
 33860  00DCFC  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33861  00DD00  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33862  00DD04  BEDF               	btfsc	indf2,7,c
 33863  00DD06  D120               	goto	l586
 33864  00DD08                     u16280:
 33865                           
 33866                           ; BSR set to: 1
 33867                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 33868                           
 33869                           ; BSR set to: 1
 33870  00DD08  0E00               	movlw	0
 33871  00DD0A  0100               	movlb	0	; () banked
 33872  00DD0C  6FB1               	movwf	MSDTasks@i& (0+255),b
 33873  00DD0E                     l17034:
 33874                           
 33875                           ; BSR set to: 0
 33876  00DD0E  0E1E               	movlw	30
 33877  00DD10  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 33878  00DD12  D001               	goto	l575
 33879  00DD14  D014               	goto	u16300
 33880  00DD16                     l575:
 33881                           
 33882                           ; BSR set to: 0
 33883                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 33884                           
 33885                           ; BSR set to: 0
 33886  00DD16  51B1               	movf	MSDTasks@i& (0+255),w,b
 33887  00DD18  0D01               	mullw	1
 33888  00DD1A  0E40               	movlw	64
 33889  00DD1C  24F3               	addwf	prodl,w,c
 33890  00DD1E  6ED9               	movwf	fsr2l,c
 33891  00DD20  0E0D               	movlw	13
 33892  00DD22  20F4               	addwfc	prodh,w,c
 33893  00DD24  6EDA               	movwf	fsr2h,c
 33894  00DD26  51B1               	movf	MSDTasks@i& (0+255),w,b
 33895  00DD28  0D01               	mullw	1
 33896  00DD2A  0E00               	movlw	low _gblCBW
 33897  00DD2C  24F3               	addwf	prodl,w,c
 33898  00DD2E  6EE1               	movwf	fsr1l,c
 33899  00DD30  0E02               	movlw	high _gblCBW
 33900  00DD32  20F4               	addwfc	prodh,w,c
 33901  00DD34  6EE2               	movwf	fsr1h,c
 33902  00DD36  CFDF FFE7          	movff	indf2,indf1
 33903                           
 33904                           ; BSR set to: 0
 33905  00DD3A  2BB1               	incf	MSDTasks@i& (0+255),f,b
 33906  00DD3C  D7E8               	goto	l17034
 33907  00DD3E                     u16300:
 33908                           
 33909                           ; BSR set to: 0
 33910                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 33911                           
 33912                           ; BSR set to: 0
 33913  00DD3E  0101               	movlb	1	; () banked
 33914  00DD40  EE20 F001          	lfsr	2,1
 33915  00DD44  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 33916  00DD46  26D9               	addwf	fsr2l,f,c
 33917  00DD48  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33918  00DD4A  22DA               	addwfc	fsr2h,f,c
 33919  00DD4C  0E1F               	movlw	31
 33920  00DD4E  18DE               	xorwf	postinc2,w,c
 33921  00DD50  A4D8               	btfss	status,2,c
 33922  00DD52  D075               	goto	l577
 33923                           
 33924                           ; BSR set to: 1
 33925  00DD54  0E55               	movlw	85
 33926  00DD56  0102               	movlb	2	; () banked
 33927  00DD58  1900               	xorwf	_gblCBW& (0+255),w,b
 33928  00DD5A  E171               	bnz	l577
 33929  00DD5C  0E53               	movlw	83
 33930  00DD5E  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 33931  00DD60  E16E               	bnz	l577
 33932  00DD62  0E42               	movlw	66
 33933  00DD64  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 33934  00DD66  E16B               	bnz	l577
 33935  00DD68  0E43               	movlw	67
 33936  00DD6A  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 33937  00DD6C  A4D8               	btfss	status,2,c
 33938  00DD6E  D067               	goto	l577
 33939                           
 33940                           ; BSR set to: 2
 33941                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 33942  00DD70  0E01               	movlw	1
 33943  00DD72  0101               	movlb	1	; () banked
 33944  00DD74  6F50               	movwf	_MSDCBWValid& (0+255),b
 33945                           
 33946                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 33947  00DD76  0102               	movlb	2	; () banked
 33948  00DD78  510D               	movf	(_gblCBW+13)& (0+255),w,b
 33949  00DD7A  A4D8               	btfss	status,2,c
 33950  00DD7C  D053               	goto	l578
 33951                           
 33952                           ; BSR set to: 2
 33953  00DD7E  0E11               	movlw	17
 33954  00DD80  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 33955  00DD82  D050               	goto	l578
 33956                           
 33957                           ; BSR set to: 2
 33958  00DD84  510E               	movf	(_gblCBW+14)& (0+255),w,b
 33959  00DD86  B4D8               	btfsc	status,2,c
 33960  00DD88  D04D               	goto	l578
 33961                           
 33962                           ; BSR set to: 2
 33963  00DD8A  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 33964  00DD8E  0E3F               	movlw	63
 33965  00DD90  0100               	movlb	0	; () banked
 33966  00DD92  17AC               	andwf	??_MSDTasks& (0+255),f,b
 33967  00DD94  A4D8               	btfss	status,2,c
 33968  00DD96  D046               	goto	l578
 33969                           
 33970                           ; BSR set to: 0
 33971                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 33972  00DD98  0E55               	movlw	85
 33973  00DD9A  010D               	movlb	13	; () banked
 33974  00DD9C  6F80               	movwf	128,b	;volatile
 33975  00DD9E  0E53               	movlw	83
 33976  00DDA0  6F81               	movwf	129,b	;volatile
 33977  00DDA2  0E42               	movlw	66
 33978  00DDA4  6F82               	movwf	130,b	;volatile
 33979  00DDA6  0E53               	movlw	83
 33980  00DDA8  6F83               	movwf	131,b	;volatile
 33981                           
 33982                           ; BSR set to: 13
 33983                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 33984  00DDAA  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 33985  00DDAE  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 33986  00DDB2  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 33987  00DDB6  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 33988                           
 33989                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 33990  00DDBA  0E00               	movlw	0
 33991  00DDBC  6F88               	movwf	136,b	;volatile
 33992  00DDBE  0E00               	movlw	0
 33993  00DDC0  6F89               	movwf	137,b	;volatile
 33994  00DDC2  0E00               	movlw	0
 33995  00DDC4  6F8A               	movwf	138,b	;volatile
 33996  00DDC6  0E00               	movlw	0
 33997  00DDC8  6F8B               	movwf	139,b	;volatile
 33998                           
 33999                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 34000  00DDCA  0E00               	movlw	0
 34001  00DDCC  6F8C               	movwf	140,b	;volatile
 34002                           
 34003                           ; BSR set to: 13
 34004                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 34005  00DDCE  0101               	movlb	1	; () banked
 34006  00DDD0  6957               	setf	_MSDCommandState& (0+255),b
 34007                           
 34008                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 34009  00DDD2  0E00               	movlw	0
 34010  00DDD4  6F56               	movwf	_MSDReadState& (0+255),b
 34011                           
 34012                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 34013  00DDD6  0E00               	movlw	0
 34014  00DDD8  6F55               	movwf	_MSDWriteState& (0+255),b
 34015                           
 34016                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 34017  00DDDA  0E00               	movlw	0
 34018  00DDDC  6F54               	movwf	_MSDRetryAttempt& (0+255),b
 34019                           
 34020                           ; BSR set to: 1
 34021                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 34022  00DDDE  0E03               	movlw	3
 34023  00DDE0  0102               	movlb	2	; () banked
 34024  00DDE2  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 34025  00DDE4  B4D8               	btfsc	status,2,c
 34026  00DDE6  D008               	goto	l579
 34027                           
 34028                           ; BSR set to: 2
 34029                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 34030  00DDE8  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 34031  00DDEA  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 34032  00DDEC  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 34033  00DDEE  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 34034                           
 34035                           ; BSR set to: 2
 34036                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 34037  00DDF0  0E00               	movlw	0
 34038  00DDF2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34039                           
 34040                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 34041  00DDF4  0E00               	movlw	0
 34042  00DDF6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34043  00DDF8                     l579:
 34044                           
 34045                           ; BSR set to: 2
 34046                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 34047                           
 34048                           ; BSR set to: 2
 34049  00DDF8  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 34050  00DDFA  D002               	goto	l580
 34051                           
 34052                           ; BSR set to: 2
 34053                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 34054  00DDFC  0E01               	movlw	1
 34055  00DDFE  D001               	goto	L47
 34056  00DE00                     l580:
 34057                           
 34058                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 34059                           
 34060                           ; BSR set to: 1
 34061  00DE00  0E02               	movlw	2
 34062  00DE02                     L47:
 34063  00DE02  0101               	movlb	1	; () banked
 34064  00DE04  6F58               	movwf	_MSD_State& (0+255),b
 34065                           
 34066                           ; BSR set to: 1
 34067                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 34068                           
 34069                           ; BSR set to: 1
 34070  00DE06  0102               	movlb	2	; () banked
 34071  00DE08  5108               	movf	(_gblCBW+8)& (0+255),w,b
 34072  00DE0A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 34073  00DE0C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 34074  00DE0E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 34075  00DE10  B4D8               	btfsc	status,2,c
 34076  00DE12  D002               	goto	l582
 34077                           
 34078                           ; BSR set to: 2
 34079                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 34080  00DE14  0E00               	movlw	0
 34081  00DE16  D001               	goto	L48
 34082  00DE18                     l582:
 34083                           
 34084                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 34085                           
 34086                           ; BSR set to: 1
 34087  00DE18  0E01               	movlw	1
 34088  00DE1A                     L48:
 34089  00DE1A  0101               	movlb	1	; () banked
 34090  00DE1C  6F51               	movwf	_MSDHostNoData& (0+255),b
 34091                           
 34092                           ; BSR set to: 1
 34093                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 34094                           
 34095                           ; BSR set to: 1
 34096  00DE1E  C20F  F157         	movff	_gblCBW+15,_MSDCommandState
 34097                           
 34098                           ;usb_device_msd.c: 454: }
 34099  00DE22  D092               	goto	l586
 34100  00DE24                     l578:
 34101                           
 34102                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 34103                           
 34104                           ; BSR set to: 1
 34105  00DE24  0E01               	movlw	1
 34106  00DE26  0100               	movlb	0	; () banked
 34107  00DE28  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34108  00DE2A  0E02               	movlw	2
 34109  00DE2C  EC02  F089         	call	_USBStallEndpoint
 34110                           
 34111                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 34112  00DE30  0E00               	movlw	0
 34113  00DE32  0100               	movlb	0	; () banked
 34114  00DE34  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34115  00DE36  0E02               	movlw	2
 34116  00DE38  EC02  F089         	call	_USBStallEndpoint
 34117                           
 34118                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 34119  00DE3C  D085               	goto	l586
 34120  00DE3E                     l577:
 34121                           
 34122                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 34123  00DE3E  0E01               	movlw	1
 34124  00DE40  0100               	movlb	0	; () banked
 34125  00DE42  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34126  00DE44  0E02               	movlw	2
 34127  00DE46  EC02  F089         	call	_USBStallEndpoint
 34128                           
 34129                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 34130  00DE4A  0E00               	movlw	0
 34131  00DE4C  0100               	movlb	0	; () banked
 34132  00DE4E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34133  00DE50  0E02               	movlw	2
 34134  00DE52  EC02  F089         	call	_USBStallEndpoint
 34135                           
 34136                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 34137  00DE56  0E00               	movlw	0
 34138  00DE58  0101               	movlb	1	; () banked
 34139  00DE5A  6F50               	movwf	_MSDCBWValid& (0+255),b
 34140                           
 34141                           ; BSR set to: 1
 34142                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 34143                           
 34144                           ; BSR set to: 1
 34145  00DE5C  D075               	goto	l586
 34146  00DE5E                     
 34147                           ; BSR set to: 1
 34148                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 34149                           
 34150                           ; BSR set to: 1
 34151  00DE5E  EC72  F083         	call	_MSDProcessCommand	;wreg free
 34152  00DE62  0AFF               	xorlw	255
 34153  00DE64  A4D8               	btfss	status,2,c
 34154  00DE66  D070               	goto	l586
 34155  00DE68  D011               	goto	l591
 34156  00DE6A                     
 34157                           ; BSR set to: 1
 34158                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 34159                           
 34160                           ; BSR set to: 1
 34161  00DE6A  EC72  F083         	call	_MSDProcessCommand	;wreg free
 34162  00DE6E  0AFF               	xorlw	255
 34163  00DE70  A4D8               	btfss	status,2,c
 34164  00DE72  D06A               	goto	l586
 34165                           
 34166                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 34167  00DE74  010D               	movlb	13	; () banked
 34168  00DE76  518C               	movf	140,w,b	;volatile
 34169  00DE78  A4D8               	btfss	status,2,c
 34170  00DE7A  D008               	goto	l591
 34171                           
 34172                           ; BSR set to: 13
 34173  00DE7C  5188               	movf	136,w,b	;volatile
 34174  00DE7E  1189               	iorwf	137,w,b	;volatile
 34175  00DE80  118A               	iorwf	138,w,b	;volatile
 34176  00DE82  118B               	iorwf	139,w,b	;volatile
 34177  00DE84  B4D8               	btfsc	status,2,c
 34178  00DE86  D002               	goto	l591
 34179                           
 34180                           ; BSR set to: 13
 34181                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 34182  00DE88  0E02               	movlw	2
 34183  00DE8A  6F8C               	movwf	140,b	;volatile
 34184  00DE8C                     l591:
 34185                           
 34186                           ; BSR set to: 13
 34187                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 34188  00DE8C  0E03               	movlw	3
 34189  00DE8E  D03E               	goto	L46
 34190  00DE90                     
 34191                           ; BSR set to: 1
 34192                           
 34193                           ; BSR set to: 1
 34194  00DE90  C10D  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 34195  00DE94  C10E  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 34196                           
 34197                           ; BSR set to: 1
 34198                           
 34199                           ; BSR set to: 1
 34200                           
 34201                           ; BSR set to: 1
 34202  00DE98  0100               	movlb	0	; () banked
 34203  00DE9A  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 34204  00DE9C  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 34205  00DE9E  B4D8               	btfsc	status,2,c
 34206  00DEA0  D00A               	goto	l593
 34207                           
 34208                           ; BSR set to: 0
 34209  00DEA2  C10D  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 34210  00DEA6  C10E  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 34211                           
 34212                           ; BSR set to: 0
 34213                           
 34214                           ; BSR set to: 0
 34215                           
 34216                           ; BSR set to: 0
 34217                           
 34218                           ; BSR set to: 0
 34219  00DEAA  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 34220  00DEAE  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 34221  00DEB2  BEDF               	btfsc	indf2,7,c
 34222  00DEB4  D049               	goto	l586
 34223  00DEB6                     l593:
 34224                           
 34225                           ; BSR set to: 0
 34226                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 34227                           
 34228                           ; BSR set to: 0
 34229  00DEB6  0E01               	movlw	1
 34230  00DEB8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34231  00DEBA  0E80               	movlw	128
 34232  00DEBC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34233  00DEBE  0E0D               	movlw	13
 34234  00DEC0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34235  00DEC2  0E0D               	movlw	13
 34236  00DEC4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34237  00DEC6  0E02               	movlw	2
 34238  00DEC8  EC87  F089         	call	_USBTransferOnePacket
 34239  00DECC  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34240  00DED0  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34241                           
 34242                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 34243  00DED4  0101               	movlb	1	; () banked
 34244  00DED6  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 34245  00DED8  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34246  00DEDA  B4D8               	btfsc	status,2,c
 34247  00DEDC  D006               	goto	u16470
 34248                           
 34249                           ; BSR set to: 1
 34250  00DEDE  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34251  00DEE2  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34252  00DEE6  BEDF               	btfsc	indf2,7,c
 34253  00DEE8  D010               	goto	l602
 34254  00DEEA                     u16470:
 34255                           
 34256                           ; BSR set to: 1
 34257                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 34258                           
 34259                           ; BSR set to: 1
 34260  00DEEA  0E00               	movlw	0
 34261  00DEEC  0100               	movlb	0	; () banked
 34262  00DEEE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34263  00DEF0  0E40               	movlw	64
 34264  00DEF2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34265  00DEF4  0E0D               	movlw	13
 34266  00DEF6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34267  00DEF8  0E40               	movlw	64
 34268  00DEFA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34269  00DEFC  0E02               	movlw	2
 34270  00DEFE  EC87  F089         	call	_USBTransferOnePacket
 34271  00DF02  C060  F141         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 34272  00DF06  C061  F142         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 34273  00DF0A                     l602:
 34274                           
 34275                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 34276  00DF0A  0E00               	movlw	0
 34277  00DF0C                     L46:
 34278  00DF0C  0101               	movlb	1	; () banked
 34279  00DF0E  6F58               	movwf	_MSD_State& (0+255),b
 34280                           
 34281                           ;usb_device_msd.c: 513: break;
 34282  00DF10  D01B               	goto	l586
 34283  00DF12                     
 34284                           ; BSR set to: 1
 34285                           ;usb_device_msd.c: 518: MSD_State=0x00;
 34286                           
 34287                           ; BSR set to: 1
 34288  00DF12  0E00               	movlw	0
 34289  00DF14  6F58               	movwf	_MSD_State& (0+255),b
 34290                           
 34291                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 34292  00DF16  0E02               	movlw	2
 34293  00DF18  010D               	movlb	13	; () banked
 34294  00DF1A  6F8C               	movwf	140,b	;volatile
 34295                           
 34296                           ; BSR set to: 13
 34297                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 34298  00DF1C  0E00               	movlw	0
 34299  00DF1E  0100               	movlb	0	; () banked
 34300  00DF20  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34301  00DF22  0E02               	movlw	2
 34302  00DF24  EC02  F089         	call	_USBStallEndpoint
 34303                           
 34304                           ;usb_device_msd.c: 521: }
 34305  00DF28  D00F               	goto	l586
 34306  00DF2A                     l570:
 34307  00DF2A  0101               	movlb	1	; () banked
 34308  00DF2C  5158               	movf	_MSD_State& (0+255),w,b
 34309                           
 34310                           ; Switch size 1, requested type "space"
 34311                           ; Number of cases is 4, Range of values is 0 to 3
 34312                           ; switch strategies available:
 34313                           ; Name         Instructions Cycles
 34314                           ; simple_byte           13     7 (average)
 34315                           ;	Chosen strategy is simple_byte
 34316  00DF2E  0A00               	xorlw	0	; case 0
 34317  00DF30  B4D8               	btfsc	status,2,c
 34318  00DF32  D6DF               	goto	l571
 34319  00DF34  0A01               	xorlw	1	; case 1
 34320  00DF36  B4D8               	btfsc	status,2,c
 34321  00DF38  D792               	goto	l587
 34322  00DF3A  0A03               	xorlw	3	; case 2
 34323  00DF3C  B4D8               	btfsc	status,2,c
 34324  00DF3E  D795               	goto	l589
 34325  00DF40  0A01               	xorlw	1	; case 3
 34326  00DF42  B4D8               	btfsc	status,2,c
 34327  00DF44  D7A5               	goto	l592
 34328  00DF46  D7E5               	goto	l605
 34329  00DF48                     l586:
 34330                           
 34331                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 34332  00DF48  88A0               	bsf	4000,4,c	;volatile
 34333                           
 34334                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 34335  00DF4A  0012               	return		;funcret
 34336  00DF4C                     __end_of_MSDTasks:
 34337                           	opt stack 0
 34338                           tblptru	equ	0xFF8
 34339                           tblptrh	equ	0xFF7
 34340                           tblptrl	equ	0xFF6
 34341                           tablat	equ	0xFF5
 34342                           prodh	equ	0xFF4
 34343                           prodl	equ	0xFF3
 34344                           intcon	equ	0xFF2
 34345                           postinc0	equ	0xFEE
 34346                           wreg	equ	0xFE8
 34347                           indf1	equ	0xFE7
 34348                           postinc1	equ	0xFE6
 34349                           postdec1	equ	0xFE5
 34350                           plusw1	equ	0xFE3
 34351                           fsr1h	equ	0xFE2
 34352                           fsr1l	equ	0xFE1
 34353                           indf2	equ	0xFDF
 34354                           postinc2	equ	0xFDE
 34355                           postdec2	equ	0xFDD
 34356                           plusw2	equ	0xFDB
 34357                           fsr2h	equ	0xFDA
 34358                           fsr2l	equ	0xFD9
 34359                           status	equ	0xFD8
 34360                           
 34361 ;; *************** function _MSDProcessCommand *****************
 34362 ;; Defined at:
 34363 ;;		line 553 in file "usb_device_msd.c"
 34364 ;; Parameters:    Size  Location     Type
 34365 ;;		None
 34366 ;; Auto vars:     Size  Location     Type
 34367 ;;		None
 34368 ;; Return value:  Size  Location     Type
 34369 ;;                  1    wreg      unsigned char 
 34370 ;; Registers used:
 34371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34372 ;; Tracked objects:
 34373 ;;		On entry : 0/0
 34374 ;;		On exit  : 0/0
 34375 ;;		Unchanged: 0/0
 34376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34379 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34380 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34381 ;;Total ram usage:        5 bytes
 34382 ;; Hardware stack levels used:    1
 34383 ;; Hardware stack levels required when called:   19
 34384 ;; This function calls:
 34385 ;;		_ExternalFlash_MediaDetect
 34386 ;;		_ExternalFlash_MediaInitialize
 34387 ;;		_MSDProcessCommandMediaAbsent
 34388 ;;		_MSDProcessCommandMediaPresent
 34389 ;; This function is called by:
 34390 ;;		_MSDTasks
 34391 ;; This function uses a non-reentrant model
 34392 ;;
 34393                           
 34394                           	psect	text133
 34395  0106E4                     __ptext133:
 34396                           	opt stack 0
 34397  0106E4                     _MSDProcessCommand:
 34398                           	opt stack 9
 34399                           
 34400                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 34401                           
 34402                           ;incstack = 0
 34403  0106E4  C2AC  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 34404  0106E8  C2AD  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 34405  0106EC  EE22  F0A0         	lfsr	2,_LUN+9
 34406  0106F0  D801               	call	u14978
 34407  0106F2  D00A               	goto	u14979
 34408  0106F4                     u14978:
 34409  0106F4  0005               	push	
 34410  0106F6  6EFA               	movwf	pclath,c
 34411  0106F8  50DE               	movf	postinc2,w,c
 34412  0106FA  6EFD               	movwf	tosl,c
 34413  0106FC  50DE               	movf	postinc2,w,c
 34414  0106FE  6EFE               	movwf	tosh,c
 34415  010700  50DE               	movf	postinc2,w,c
 34416  010702  6EFF               	movwf	tosu,c
 34417  010704  50FA               	movf	pclath,w,c
 34418  010706  0012               	return		;indir
 34419  010708                     u14979:
 34420  010708  0900               	iorlw	0
 34421  01070A  B4D8               	btfsc	status,2,c
 34422  01070C  D00C               	goto	u14990
 34423  01070E  0102               	movlb	2	; () banked
 34424  010710  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34425  010712  0D01               	mullw	1
 34426  010714  0E52               	movlw	low _SoftDetach
 34427  010716  24F3               	addwf	prodl,w,c
 34428  010718  6ED9               	movwf	fsr2l,c
 34429  01071A  0E01               	movlw	high _SoftDetach
 34430  01071C  20F4               	addwfc	prodh,w,c
 34431  01071E  6EDA               	movwf	fsr2h,c
 34432  010720  04DE               	decf	postinc2,w,c
 34433  010722  A4D8               	btfss	status,2,c
 34434  010724  D01D               	goto	l608
 34435  010726                     u14990:
 34436                           
 34437                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 34438                           
 34439                           ; BSR set to: 2
 34440  010726  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34441  01072A  0E01               	movlw	1
 34442  01072C  0100               	movlb	0	; () banked
 34443  01072E  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34444  010730  0E00               	movlw	0
 34445  010732  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34446  010734  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34447  010736  D003               	goto	u15004
 34448  010738                     u15005:
 34449  010738  90D8               	bcf	status,0,c
 34450  01073A  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34451  01073C  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34452  01073E                     u15004:
 34453  01073E  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34454  010740  D7FB               	goto	u15005
 34455  010742  0100               	movlb	0	; () banked
 34456  010744  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 34457  010746  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 34458  010748  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 34459  01074A  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 34460  01074C  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 34461  01074E  0101               	movlb	1	; () banked
 34462  010750  173D               	andwf	_gblMediaPresent& (0+255),f,b
 34463  010752  0100               	movlb	0	; () banked
 34464  010754  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 34465  010756  0101               	movlb	1	; () banked
 34466  010758  173E               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 34467                           
 34468                           ; BSR set to: 1
 34469                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 34470  01075A  EC5C  F0A3         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34471                           
 34472                           ;usb_device_msd.c: 563: }
 34473  01075E  D059               	goto	l615
 34474  010760                     l608:
 34475                           
 34476                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 34477  010760  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34478  010764  0E01               	movlw	1
 34479  010766  0100               	movlb	0	; () banked
 34480  010768  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34481  01076A  0E00               	movlw	0
 34482  01076C  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34483  01076E  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34484  010770  D003               	goto	u15014
 34485  010772                     u15015:
 34486  010772  90D8               	bcf	status,0,c
 34487  010774  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34488  010776  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34489  010778                     u15014:
 34490  010778  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34491  01077A  D7FB               	goto	u15015
 34492  01077C  0101               	movlb	1	; () banked
 34493  01077E  513D               	movf	_gblMediaPresent& (0+255),w,b
 34494  010780  0100               	movlb	0	; () banked
 34495  010782  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 34496  010784  0101               	movlb	1	; () banked
 34497  010786  513E               	movf	(_gblMediaPresent+1)& (0+255),w,b
 34498  010788  0100               	movlb	0	; () banked
 34499  01078A  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 34500  01078C  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34501  01078E  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 34502  010790  A4D8               	btfss	status,2,c
 34503  010792  D03D               	goto	l612
 34504                           
 34505                           ; BSR set to: 0
 34506                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 34507  010794  C2AC  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 34508  010798  C2AD  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 34509  01079C  D801               	call	u15038
 34510  01079E  D00B               	goto	u15039
 34511  0107A0                     u15038:
 34512  0107A0  0005               	push	
 34513  0107A2  6EFA               	movwf	pclath,c
 34514  0107A4  0102               	movlb	2	; () banked
 34515  0107A6  5197               	movf	_LUN& (0+255),w,b
 34516  0107A8  6EFD               	movwf	tosl,c
 34517  0107AA  5198               	movf	(_LUN+1)& (0+255),w,b
 34518  0107AC  6EFE               	movwf	tosh,c
 34519  0107AE  5199               	movf	(_LUN+2)& (0+255),w,b
 34520  0107B0  6EFF               	movwf	tosu,c
 34521  0107B2  50FA               	movf	pclath,w,c
 34522  0107B4  0012               	return		;indir
 34523  0107B6                     u15039:
 34524  0107B6  0100               	movlb	0	; () banked
 34525  0107B8  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 34526  0107BA  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 34527  0107BC  B4D8               	btfsc	status,2,c
 34528  0107BE  D024               	goto	l613
 34529                           
 34530                           ; BSR set to: 0
 34531                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 34532  0107C0  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34533  0107C4  0E01               	movlw	1
 34534  0107C6  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34535  0107C8  0E00               	movlw	0
 34536  0107CA  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34537  0107CC  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34538  0107CE  D003               	goto	u15054
 34539  0107D0                     u15055:
 34540  0107D0  90D8               	bcf	status,0,c
 34541  0107D2  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34542  0107D4  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34543  0107D6                     u15054:
 34544  0107D6  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34545  0107D8  D7FB               	goto	u15055
 34546  0107DA  0100               	movlb	0	; () banked
 34547  0107DC  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34548  0107DE  0101               	movlb	1	; () banked
 34549  0107E0  133D               	iorwf	_gblMediaPresent& (0+255),f,b
 34550  0107E2  0100               	movlb	0	; () banked
 34551  0107E4  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 34552  0107E6  0101               	movlb	1	; () banked
 34553  0107E8  133E               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 34554                           
 34555                           ; BSR set to: 1
 34556                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 34557  0107EA  0102               	movlb	2	; () banked
 34558  0107EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34559  0107EE  0BF0               	andlw	-16
 34560  0107F0  0906               	iorlw	6
 34561  0107F2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34562                           
 34563                           ; BSR set to: 2
 34564                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 34565  0107F4  0E28               	movlw	40
 34566  0107F6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34567                           
 34568                           ; BSR set to: 2
 34569                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 34570  0107F8  0E00               	movlw	0
 34571  0107FA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34572                           
 34573                           ; BSR set to: 2
 34574                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 34575  0107FC  0E01               	movlw	1
 34576  0107FE  010D               	movlb	13	; () banked
 34577  010800  6F8C               	movwf	140,b	;volatile
 34578                           
 34579                           ; BSR set to: 13
 34580                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 34581  010802  ECC2  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34582                           
 34583                           ;usb_device_msd.c: 589: }
 34584  010806  D005               	goto	l615
 34585  010808                     l613:
 34586                           
 34587                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 34588  010808  EC5C  F0A3         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34589                           
 34590                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 34591  01080C  D002               	goto	l615
 34592  01080E                     l612:
 34593                           
 34594                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 34595  01080E  ECC2  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34596  010812                     l615:
 34597                           
 34598                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 34599  010812  0101               	movlb	1	; () banked
 34600  010814  5157               	movf	_MSDCommandState& (0+255),w,b
 34601  010816  0012               	return	
 34602  010818                     __end_of_MSDProcessCommand:
 34603                           	opt stack 0
 34604                           tosu	equ	0xFFF
 34605                           tosh	equ	0xFFE
 34606                           tosl	equ	0xFFD
 34607                           pclath	equ	0xFFA
 34608                           tblptru	equ	0xFF8
 34609                           tblptrh	equ	0xFF7
 34610                           tblptrl	equ	0xFF6
 34611                           tablat	equ	0xFF5
 34612                           prodh	equ	0xFF4
 34613                           prodl	equ	0xFF3
 34614                           intcon	equ	0xFF2
 34615                           postinc0	equ	0xFEE
 34616                           wreg	equ	0xFE8
 34617                           indf1	equ	0xFE7
 34618                           postinc1	equ	0xFE6
 34619                           postdec1	equ	0xFE5
 34620                           plusw1	equ	0xFE3
 34621                           fsr1h	equ	0xFE2
 34622                           fsr1l	equ	0xFE1
 34623                           indf2	equ	0xFDF
 34624                           postinc2	equ	0xFDE
 34625                           postdec2	equ	0xFDD
 34626                           plusw2	equ	0xFDB
 34627                           fsr2h	equ	0xFDA
 34628                           fsr2l	equ	0xFD9
 34629                           status	equ	0xFD8
 34630                           
 34631 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 34632 ;; Defined at:
 34633 ;;		line 635 in file "usb_device_msd.c"
 34634 ;; Parameters:    Size  Location     Type
 34635 ;;		None
 34636 ;; Auto vars:     Size  Location     Type
 34637 ;;		None
 34638 ;; Return value:  Size  Location     Type
 34639 ;;                  1    wreg      void 
 34640 ;; Registers used:
 34641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34642 ;; Tracked objects:
 34643 ;;		On entry : 0/0
 34644 ;;		On exit  : 0/0
 34645 ;;		Unchanged: 0/0
 34646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34651 ;;Total ram usage:        0 bytes
 34652 ;; Hardware stack levels used:    1
 34653 ;; Hardware stack levels required when called:   18
 34654 ;; This function calls:
 34655 ;;		_MSDErrorHandler
 34656 ;;		_MSDProcessCommandMediaPresent
 34657 ;;		_ResetSenseData
 34658 ;; This function is called by:
 34659 ;;		_MSDProcessCommand
 34660 ;; This function uses a non-reentrant model
 34661 ;;
 34662                           
 34663                           	psect	text134
 34664  0146B8                     __ptext134:
 34665                           	opt stack 0
 34666  0146B8                     _MSDProcessCommandMediaAbsent:
 34667                           	opt stack 9
 34668                           
 34669                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 34670                           
 34671                           ; BSR set to: 1
 34672                           ;incstack = 0
 34673  0146B8  D01E               	goto	l619
 34674  0146BA                     
 34675                           ;usb_device_msd.c: 646: ResetSenseData();
 34676  0146BA  EC8D  F0A3         	call	_ResetSenseData	;wreg free
 34677                           
 34678                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 34679  0146BE  0102               	movlb	2	; () banked
 34680  0146C0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34681  0146C2  0BF0               	andlw	-16
 34682  0146C4  0902               	iorlw	2
 34683  0146C6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34684                           
 34685                           ; BSR set to: 2
 34686                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 34687  0146C8  0E3A               	movlw	58
 34688  0146CA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34689                           
 34690                           ; BSR set to: 2
 34691                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 34692  0146CC  0E00               	movlw	0
 34693  0146CE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34694                           
 34695                           ; BSR set to: 2
 34696                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 34697  0146D0  ECC2  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34698                           
 34699                           ;usb_device_msd.c: 655: break;
 34700  0146D4  0012               	return	
 34701  0146D6                     
 34702                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 34703  0146D6  0E01               	movlw	1
 34704  0146D8  010D               	movlb	13	; () banked
 34705  0146DA  6F8C               	movwf	140,b	;volatile
 34706                           
 34707                           ; BSR set to: 13
 34708                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 34709  0146DC  0101               	movlb	1	; () banked
 34710  0146DE  6957               	setf	_MSDCommandState& (0+255),b
 34711                           
 34712                           ;usb_device_msd.c: 665: break;
 34713  0146E0  0012               	return	
 34714  0146E2                     
 34715                           ; BSR set to: 1
 34716                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 34717                           
 34718                           ; BSR set to: 1
 34719  0146E2  ECC2  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34720                           
 34721                           ;usb_device_msd.c: 671: break;
 34722  0146E6  0012               	return	
 34723  0146E8                     
 34724                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 34725  0146E8  ECC2  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34726                           
 34727                           ;usb_device_msd.c: 677: break;
 34728  0146EC  0012               	return	
 34729  0146EE                     
 34730                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 34731  0146EE  0E7F               	movlw	127
 34732  0146F0  EC55  F086         	call	_MSDErrorHandler
 34733                           
 34734                           ;usb_device_msd.c: 685: }
 34735                           
 34736                           ;usb_device_msd.c: 684: break;
 34737  0146F4  0012               	return	
 34738  0146F6                     l619:
 34739  0146F6  0101               	movlb	1	; () banked
 34740  0146F8  5157               	movf	_MSDCommandState& (0+255),w,b
 34741                           
 34742                           ; Switch size 1, requested type "space"
 34743                           ; Number of cases is 5, Range of values is 0 to 253
 34744                           ; switch strategies available:
 34745                           ; Name         Instructions Cycles
 34746                           ; simple_byte           16     9 (average)
 34747                           ;	Chosen strategy is simple_byte
 34748  0146FA  0A00               	xorlw	0	; case 0
 34749  0146FC  B4D8               	btfsc	status,2,c
 34750  0146FE  D7EB               	goto	l622
 34751  014700  0A03               	xorlw	3	; case 3
 34752  014702  B4D8               	btfsc	status,2,c
 34753  014704  D7DA               	goto	l620
 34754  014706  0A11               	xorlw	17	; case 18
 34755  014708  B4D8               	btfsc	status,2,c
 34756  01470A  D7EB               	goto	l624
 34757  01470C  0A0C               	xorlw	12	; case 30
 34758  01470E  B4D8               	btfsc	status,2,c
 34759  014710  D7E2               	goto	l622
 34760  014712  0AE3               	xorlw	227	; case 253
 34761  014714  B4D8               	btfsc	status,2,c
 34762  014716  D7E8               	goto	l625
 34763  014718  D7EA               	goto	l626
 34764  01471A                     __end_of_MSDProcessCommandMediaAbsent:
 34765                           	opt stack 0
 34766                           tosu	equ	0xFFF
 34767                           tosh	equ	0xFFE
 34768                           tosl	equ	0xFFD
 34769                           pclath	equ	0xFFA
 34770                           tblptru	equ	0xFF8
 34771                           tblptrh	equ	0xFF7
 34772                           tblptrl	equ	0xFF6
 34773                           tablat	equ	0xFF5
 34774                           prodh	equ	0xFF4
 34775                           prodl	equ	0xFF3
 34776                           intcon	equ	0xFF2
 34777                           postinc0	equ	0xFEE
 34778                           wreg	equ	0xFE8
 34779                           indf1	equ	0xFE7
 34780                           postinc1	equ	0xFE6
 34781                           postdec1	equ	0xFE5
 34782                           plusw1	equ	0xFE3
 34783                           fsr1h	equ	0xFE2
 34784                           fsr1l	equ	0xFE1
 34785                           indf2	equ	0xFDF
 34786                           postinc2	equ	0xFDE
 34787                           postdec2	equ	0xFDD
 34788                           plusw2	equ	0xFDB
 34789                           fsr2h	equ	0xFDA
 34790                           fsr2l	equ	0xFD9
 34791                           status	equ	0xFD8
 34792                           
 34793 ;; *************** function _MSDProcessCommandMediaPresent *****************
 34794 ;; Defined at:
 34795 ;;		line 712 in file "usb_device_msd.c"
 34796 ;; Parameters:    Size  Location     Type
 34797 ;;		None
 34798 ;; Auto vars:     Size  Location     Type
 34799 ;;  capacity        4   66[BANK0 ] struct .
 34800 ;;  sectorSize      4   62[BANK0 ] struct .
 34801 ;;  i               1   70[BANK0 ] unsigned char 
 34802 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 34803 ;; Return value:  Size  Location     Type
 34804 ;;                  1    wreg      void 
 34805 ;; Registers used:
 34806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34807 ;; Tracked objects:
 34808 ;;		On entry : 0/0
 34809 ;;		On exit  : 0/0
 34810 ;;		Unchanged: 0/0
 34811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34813 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34815 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34816 ;;Total ram usage:       14 bytes
 34817 ;; Hardware stack levels used:    1
 34818 ;; Hardware stack levels required when called:   17
 34819 ;; This function calls:
 34820 ;;		_ExternalFlash_CapacityRead
 34821 ;;		_ExternalFlash_SectorSizeRead
 34822 ;;		_ExternalFlash_WriteProtectStateGet
 34823 ;;		_MSDCheckForErrorCases
 34824 ;;		_MSDComputeDeviceInAndResidue
 34825 ;;		_MSDErrorHandler
 34826 ;;		_MSDReadHandler
 34827 ;;		_MSDWriteHandler
 34828 ;;		_ResetSenseData
 34829 ;;		_USBTransferOnePacket
 34830 ;;		_memcpy
 34831 ;; This function is called by:
 34832 ;;		_MSDProcessCommand
 34833 ;;		_MSDProcessCommandMediaAbsent
 34834 ;; This function uses a non-reentrant model
 34835 ;;
 34836                           
 34837                           	psect	text135
 34838  00BD84                     __ptext135:
 34839                           	opt stack 0
 34840  00BD84                     _MSDProcessCommandMediaPresent:
 34841                           	opt stack 10
 34842                           
 34843                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 34844                           
 34845                           ;incstack = 0
 34846  00BD84  D1D1               	goto	l630
 34847  00BD86                     
 34848                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 34849  00BD86  ECEF  F073         	call	_MSDReadHandler	;wreg free
 34850  00BD8A  0900               	iorlw	0
 34851  00BD8C  A4D8               	btfss	status,2,c
 34852  00BD8E  0012               	return	
 34853                           
 34854                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 34855  00BD90  0101               	movlb	1	; () banked
 34856  00BD92  6957               	setf	_MSDCommandState& (0+255),b
 34857                           
 34858                           ; BSR set to: 1
 34859                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 34860  00BD94  0012               	return	
 34861  00BD96                     
 34862                           ; BSR set to: 1
 34863                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 34864                           
 34865                           ; BSR set to: 1
 34866  00BD96  ECBD  F067         	call	_MSDWriteHandler	;wreg free
 34867  00BD9A  0900               	iorlw	0
 34868  00BD9C  A4D8               	btfss	status,2,c
 34869  00BD9E  0012               	return	
 34870                           
 34871                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 34872  00BDA0  0101               	movlb	1	; () banked
 34873  00BDA2  6957               	setf	_MSDCommandState& (0+255),b
 34874                           
 34875                           ; BSR set to: 1
 34876                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 34877  00BDA4  0012               	return	
 34878  00BDA6                     
 34879                           ; BSR set to: 1
 34880                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 34881                           
 34882                           ; BSR set to: 1
 34883  00BDA6  0551               	decf	_MSDHostNoData& (0+255),w,b
 34884  00BDA8  A4D8               	btfss	status,2,c
 34885  00BDAA  D002               	goto	l637
 34886                           
 34887                           ; BSR set to: 1
 34888                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 34889  00BDAC  6957               	setf	_MSDCommandState& (0+255),b
 34890                           
 34891                           ;usb_device_msd.c: 751: break;
 34892  00BDAE  0012               	return	
 34893  00BDB0                     l637:
 34894                           
 34895                           ; BSR set to: 1
 34896                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 34897  00BDB0  C212  F13C         	movff	_gblCBW+18,_TransferLength+1
 34898                           
 34899                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 34900  00BDB4  C213  F13B         	movff	_gblCBW+19,_TransferLength
 34901                           
 34902                           ; BSR set to: 1
 34903                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 34904  00BDB8  C13B  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 34905  00BDBC  C13C  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 34906  00BDC0  0100               	movlb	0	; () banked
 34907  00BDC2  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 34908  00BDC4  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 34909  00BDC6  ECE2  F086         	call	_MSDCheckForErrorCases	;wreg free
 34910  00BDCA  0900               	iorlw	0
 34911  00BDCC  A4D8               	btfss	status,2,c
 34912  00BDCE  0012               	return	
 34913                           
 34914                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 34915                           
 34916                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 34917  00BDD0  0E00               	movlw	0
 34918  00BDD2  0100               	movlb	0	; () banked
 34919  00BDD4  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 34920  00BDD6  0E24               	movlw	36
 34921  00BDD8  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 34922  00BDDA  EC86  F096         	call	_MSDComputeDeviceInAndResidue	;wreg free
 34923                           
 34924                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 34925  00BDDE  0E00               	movlw	0
 34926  00BDE0  0100               	movlb	0	; () banked
 34927  00BDE2  6F60               	movwf	memcpy@d1& (0+255),b
 34928  00BDE4  0E06               	movlw	6
 34929  00BDE6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34930  00BDE8  0E60               	movlw	low _inq_resp
 34931  00BDEA  6F62               	movwf	memcpy@s1& (0+255),b
 34932  00BDEC  0EA1               	movlw	high _inq_resp
 34933  00BDEE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34934  00BDF0  0E00               	movlw	0
 34935  00BDF2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34936  00BDF4  0E24               	movlw	36
 34937  00BDF6  6F64               	movwf	memcpy@n& (0+255),b
 34938  00BDF8  ECEF  F0A3         	call	_memcpy	;wreg free
 34939                           
 34940                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 34941  00BDFC  0EFD               	movlw	253
 34942  00BDFE  0101               	movlb	1	; () banked
 34943  00BE00  6F57               	movwf	_MSDCommandState& (0+255),b
 34944                           
 34945                           ;usb_device_msd.c: 773: break;
 34946  00BE02  0012               	return	
 34947  00BE04                     
 34948                           ; BSR set to: 1
 34949                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 34950                           
 34951                           ; BSR set to: 1
 34952  00BE04  C2AC  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 34953  00BE08  C2AD  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 34954  00BE0C  EE22  F09A         	lfsr	2,_LUN+3
 34955  00BE10  D801               	call	u12328
 34956  00BE12  D00A               	goto	u12329
 34957  00BE14                     u12328:
 34958  00BE14  0005               	push	
 34959  00BE16  6EFA               	movwf	pclath,c
 34960  00BE18  50DE               	movf	postinc2,w,c
 34961  00BE1A  6EFD               	movwf	tosl,c
 34962  00BE1C  50DE               	movf	postinc2,w,c
 34963  00BE1E  6EFE               	movwf	tosh,c
 34964  00BE20  50DE               	movf	postinc2,w,c
 34965  00BE22  6EFF               	movwf	tosu,c
 34966  00BE24  50FA               	movf	pclath,w,c
 34967  00BE26  0012               	return		;indir
 34968  00BE28                     u12329:
 34969  00BE28  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 34970  00BE2C  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 34971  00BE30  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 34972  00BE34  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 34973                           
 34974                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 34975  00BE38  C2AC  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 34976  00BE3C  C2AD  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 34977  00BE40  EE22  F09D         	lfsr	2,_LUN+6
 34978  00BE44  D801               	call	u12338
 34979  00BE46  D00A               	goto	u12339
 34980  00BE48                     u12338:
 34981  00BE48  0005               	push	
 34982  00BE4A  6EFA               	movwf	pclath,c
 34983  00BE4C  50DE               	movf	postinc2,w,c
 34984  00BE4E  6EFD               	movwf	tosl,c
 34985  00BE50  50DE               	movf	postinc2,w,c
 34986  00BE52  6EFE               	movwf	tosh,c
 34987  00BE54  50DE               	movf	postinc2,w,c
 34988  00BE56  6EFF               	movwf	tosu,c
 34989  00BE58  50FA               	movf	pclath,w,c
 34990  00BE5A  0012               	return		;indir
 34991  00BE5C                     u12339:
 34992  00BE5C  0100               	movlb	0	; () banked
 34993  00BE5E  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 34994  00BE62  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 34995  00BE66  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 34996  00BE68  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 34997                           
 34998                           ; BSR set to: 0
 34999                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 35000  00BE6A  EE26 F000          	lfsr	2,1536
 35001  00BE6E  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 35002                           
 35003                           ; BSR set to: 0
 35004                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 35005  00BE72  EE26 F001          	lfsr	2,1537	;volatile
 35006  00BE76  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 35007                           
 35008                           ; BSR set to: 0
 35009                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 35010  00BE7A  EE26 F002          	lfsr	2,1538	;volatile
 35011  00BE7E  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 35012                           
 35013                           ; BSR set to: 0
 35014                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 35015  00BE82  EE26 F003          	lfsr	2,1539	;volatile
 35016  00BE86  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 35017                           
 35018                           ; BSR set to: 0
 35019                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 35020  00BE8A  EE26 F004          	lfsr	2,1540	;volatile
 35021  00BE8E  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 35022                           
 35023                           ; BSR set to: 0
 35024                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 35025  00BE92  EE26 F005          	lfsr	2,1541	;volatile
 35026  00BE96  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 35027                           
 35028                           ; BSR set to: 0
 35029                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 35030  00BE9A  EE26 F006          	lfsr	2,1542	;volatile
 35031  00BE9E  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 35032                           
 35033                           ; BSR set to: 0
 35034                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 35035  00BEA2  EE26 F007          	lfsr	2,1543	;volatile
 35036  00BEA6  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 35037                           
 35038                           ; BSR set to: 0
 35039                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 35040  00BEAA  0E00               	movlw	0
 35041  00BEAC  0101               	movlb	1	; () banked
 35042  00BEAE  6F3C               	movwf	(_TransferLength+1)& (0+255),b
 35043  00BEB0  0E08               	movlw	8
 35044  00BEB2  6F3B               	movwf	_TransferLength& (0+255),b
 35045                           
 35046                           ; BSR set to: 1
 35047                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 35048  00BEB4  0E00               	movlw	0
 35049  00BEB6  0100               	movlb	0	; () banked
 35050  00BEB8  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35051  00BEBA  0E08               	movlw	8
 35052  00BEBC  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35053  00BEBE  EC86  F096         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35054                           
 35055                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 35056  00BEC2  0EFD               	movlw	253
 35057  00BEC4  0101               	movlb	1	; () banked
 35058  00BEC6  6F57               	movwf	_MSDCommandState& (0+255),b
 35059                           
 35060                           ;usb_device_msd.c: 802: break;
 35061  00BEC8  0012               	return	
 35062  00BECA                     
 35063                           ; BSR set to: 1
 35064                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 35065                           
 35066                           ; BSR set to: 1
 35067  00BECA  0551               	decf	_MSDHostNoData& (0+255),w,b
 35068  00BECC  A4D8               	btfss	status,2,c
 35069  00BECE  D002               	goto	l641
 35070                           
 35071                           ; BSR set to: 1
 35072                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 35073  00BED0  6957               	setf	_MSDCommandState& (0+255),b
 35074                           
 35075                           ;usb_device_msd.c: 814: break;
 35076  00BED2  0012               	return	
 35077  00BED4                     l641:
 35078                           
 35079                           ; BSR set to: 1
 35080                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 35081                           
 35082                           ; BSR set to: 1
 35083  00BED4  0E00               	movlw	0
 35084  00BED6  6F3C               	movwf	(_TransferLength+1)& (0+255),b
 35085  00BED8  0E12               	movlw	18
 35086  00BEDA  6F3B               	movwf	_TransferLength& (0+255),b
 35087                           
 35088                           ; BSR set to: 1
 35089                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 35090  00BEDC  0E00               	movlw	0
 35091  00BEDE  0100               	movlb	0	; () banked
 35092  00BEE0  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35093  00BEE2  0E12               	movlw	18
 35094  00BEE4  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35095  00BEE6  EC86  F096         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35096                           
 35097                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 35098  00BEEA  0E00               	movlw	0
 35099  00BEEC  0100               	movlb	0	; () banked
 35100  00BEEE  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35101  00BEF0                     l13778:
 35102                           
 35103                           ; BSR set to: 0
 35104  00BEF0  0E11               	movlw	17
 35105  00BEF2  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 35106  00BEF4  D001               	goto	l642
 35107  00BEF6  D014               	goto	u12360
 35108  00BEF8                     l642:
 35109                           
 35110                           ; BSR set to: 0
 35111                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 35112                           
 35113                           ; BSR set to: 0
 35114  00BEF8  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35115  00BEFA  0D01               	mullw	1
 35116  00BEFC  0E1F               	movlw	low _gblSenseData
 35117  00BEFE  24F3               	addwf	prodl,w,c
 35118  00BF00  6ED9               	movwf	fsr2l,c
 35119  00BF02  0E02               	movlw	high _gblSenseData
 35120  00BF04  20F4               	addwfc	prodh,w,c
 35121  00BF06  6EDA               	movwf	fsr2h,c
 35122  00BF08  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35123  00BF0A  0D01               	mullw	1
 35124  00BF0C  0E00               	movlw	0
 35125  00BF0E  24F3               	addwf	prodl,w,c
 35126  00BF10  6EE1               	movwf	fsr1l,c
 35127  00BF12  0E06               	movlw	6
 35128  00BF14  20F4               	addwfc	prodh,w,c
 35129  00BF16  6EE2               	movwf	fsr1h,c
 35130  00BF18  CFDF FFE7          	movff	indf2,indf1
 35131                           
 35132                           ; BSR set to: 0
 35133  00BF1C  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35134  00BF1E  D7E8               	goto	l13778
 35135  00BF20                     u12360:
 35136                           
 35137                           ; BSR set to: 0
 35138                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 35139                           
 35140                           ; BSR set to: 0
 35141  00BF20  0EFD               	movlw	253
 35142  00BF22  0101               	movlb	1	; () banked
 35143  00BF24  6F57               	movwf	_MSDCommandState& (0+255),b
 35144                           
 35145                           ;usb_device_msd.c: 827: break;
 35146  00BF26  0012               	return	
 35147  00BF28                     l644:
 35148                           
 35149                           ; BSR set to: 1
 35150                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 35151  00BF28  0E03               	movlw	3
 35152  00BF2A  CFE8 F600          	movff	wreg,1536
 35153                           
 35154                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 35155  00BF2E  0E00               	movlw	0
 35156  00BF30  CFE8 F601          	movff	wreg,1537	;volatile
 35157                           
 35158                           ; BSR set to: 1
 35159                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 35160  00BF34  C2AC  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35161  00BF38  C2AD  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35162  00BF3C  EE22  F0A6         	lfsr	2,_LUN+15
 35163  00BF40  D801               	call	u12378
 35164  00BF42  D00A               	goto	u12379
 35165  00BF44                     u12378:
 35166  00BF44  0005               	push	
 35167  00BF46  6EFA               	movwf	pclath,c
 35168  00BF48  50DE               	movf	postinc2,w,c
 35169  00BF4A  6EFD               	movwf	tosl,c
 35170  00BF4C  50DE               	movf	postinc2,w,c
 35171  00BF4E  6EFE               	movwf	tosh,c
 35172  00BF50  50DE               	movf	postinc2,w,c
 35173  00BF52  6EFF               	movwf	tosu,c
 35174  00BF54  50FA               	movf	pclath,w,c
 35175  00BF56  0012               	return		;indir
 35176  00BF58                     u12379:
 35177  00BF58  0900               	iorlw	0
 35178  00BF5A  A4D8               	btfss	status,2,c
 35179  00BF5C  D005               	goto	l646
 35180  00BF5E  0E00               	movlw	0
 35181  00BF60  0100               	movlb	0	; () banked
 35182  00BF62  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35183  00BF64  0E00               	movlw	0
 35184  00BF66  D004               	goto	L49
 35185  00BF68                     l646:
 35186                           
 35187                           ; BSR set to: 0
 35188  00BF68  0E00               	movlw	0
 35189  00BF6A  0100               	movlb	0	; () banked
 35190  00BF6C  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35191  00BF6E  0E80               	movlw	128
 35192  00BF70                     L49:
 35193  00BF70  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 35194                           
 35195                           ; BSR set to: 0
 35196                           
 35197                           ; BSR set to: 0
 35198  00BF72  EE26 F002          	lfsr	2,1538	;volatile
 35199  00BF76  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 35200                           
 35201                           ; BSR set to: 0
 35202                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 35203  00BF7A  0E00               	movlw	0
 35204  00BF7C  CFE8 F603          	movff	wreg,1539	;volatile
 35205                           
 35206                           ; BSR set to: 0
 35207                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 35208  00BF80  0E00               	movlw	0
 35209  00BF82  0101               	movlb	1	; () banked
 35210  00BF84  6F3C               	movwf	(_TransferLength+1)& (0+255),b
 35211  00BF86  0E04               	movlw	4
 35212  00BF88  6F3B               	movwf	_TransferLength& (0+255),b
 35213                           
 35214                           ; BSR set to: 1
 35215                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 35216  00BF8A  0E00               	movlw	0
 35217  00BF8C  0100               	movlb	0	; () banked
 35218  00BF8E  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35219  00BF90  0E04               	movlw	4
 35220  00BF92  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35221  00BF94  EC86  F096         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35222                           
 35223                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 35224  00BF98  0EFD               	movlw	253
 35225  00BF9A  0101               	movlb	1	; () banked
 35226  00BF9C  6F57               	movwf	_MSDCommandState& (0+255),b
 35227                           
 35228                           ;usb_device_msd.c: 839: break;
 35229  00BF9E  0012               	return	
 35230  00BFA0                     
 35231                           ; BSR set to: 1
 35232                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 35233                           
 35234                           ; BSR set to: 1
 35235  00BFA0  0102               	movlb	2	; () banked
 35236  00BFA2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35237  00BFA4  0BF0               	andlw	-16
 35238  00BFA6  0905               	iorlw	5
 35239  00BFA8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35240                           
 35241                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 35242  00BFAA  0E20               	movlw	32
 35243  00BFAC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35244                           
 35245                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 35246  00BFAE  0E00               	movlw	0
 35247  00BFB0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35248                           
 35249                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 35250  00BFB2  0E01               	movlw	1
 35251  00BFB4  010D               	movlb	13	; () banked
 35252  00BFB6  6F8C               	movwf	140,b	;volatile
 35253                           
 35254                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 35255  00BFB8  0E00               	movlw	0
 35256  00BFBA  6F88               	movwf	136,b	;volatile
 35257  00BFBC  0E00               	movlw	0
 35258  00BFBE  6F89               	movwf	137,b	;volatile
 35259  00BFC0  0E00               	movlw	0
 35260  00BFC2  6F8A               	movwf	138,b	;volatile
 35261  00BFC4  0E00               	movlw	0
 35262  00BFC6  6F8B               	movwf	139,b	;volatile
 35263                           
 35264                           ; BSR set to: 13
 35265                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 35266  00BFC8  0101               	movlb	1	; () banked
 35267  00BFCA  6957               	setf	_MSDCommandState& (0+255),b
 35268                           
 35269                           ;usb_device_msd.c: 848: break;
 35270  00BFCC  0012               	return	
 35271  00BFCE                     
 35272                           ; BSR set to: 1
 35273                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 35274                           
 35275                           ; BSR set to: 1
 35276  00BFCE  0E00               	movlw	0
 35277  00BFD0  0100               	movlb	0	; () banked
 35278  00BFD2  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 35279  00BFD4  0E00               	movlw	0
 35280  00BFD6  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 35281  00BFD8  0E00               	movlw	0
 35282  00BFDA  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35283  00BFDC  0E00               	movlw	0
 35284  00BFDE  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35285  00BFE0  ECE2  F086         	call	_MSDCheckForErrorCases	;wreg free
 35286  00BFE4  0900               	iorlw	0
 35287  00BFE6  A4D8               	btfss	status,2,c
 35288  00BFE8  0012               	return	
 35289                           
 35290                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 35291                           
 35292                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 35293  00BFEA  0102               	movlb	2	; () banked
 35294  00BFEC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35295  00BFEE  0B0F               	andlw	15
 35296  00BFF0  0A06               	xorlw	6
 35297  00BFF2  A4D8               	btfss	status,2,c
 35298  00BFF4  D007               	goto	l652
 35299                           
 35300                           ; BSR set to: 2
 35301  00BFF6  010D               	movlb	13	; () banked
 35302  00BFF8  058C               	decf	140,w,b	;volatile
 35303  00BFFA  A4D8               	btfss	status,2,c
 35304  00BFFC  D003               	goto	l652
 35305                           
 35306                           ; BSR set to: 13
 35307                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 35308  00BFFE  0101               	movlb	1	; () banked
 35309  00C000  6957               	setf	_MSDCommandState& (0+255),b
 35310                           
 35311                           ;usb_device_msd.c: 870: }
 35312  00C002  0012               	return	
 35313  00C004                     l652:
 35314                           
 35315                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 35316                           
 35317                           ; BSR set to: 1
 35318  00C004  EC8D  F0A3         	call	_ResetSenseData	;wreg free
 35319                           
 35320                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 35321  00C008  0E00               	movlw	0
 35322  00C00A  010D               	movlb	13	; () banked
 35323  00C00C  6F88               	movwf	136,b	;volatile
 35324  00C00E  0E00               	movlw	0
 35325  00C010  6F89               	movwf	137,b	;volatile
 35326  00C012  0E00               	movlw	0
 35327  00C014  6F8A               	movwf	138,b	;volatile
 35328  00C016  0E00               	movlw	0
 35329  00C018  6F8B               	movwf	139,b	;volatile
 35330                           
 35331                           ; BSR set to: 13
 35332                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 35333  00C01A  0101               	movlb	1	; () banked
 35334  00C01C  6957               	setf	_MSDCommandState& (0+255),b
 35335                           
 35336                           ; BSR set to: 1
 35337                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 35338  00C01E  0012               	return	
 35339  00C020                     
 35340                           ; BSR set to: 1
 35341                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 35342                           
 35343                           ; BSR set to: 1
 35344                           
 35345                           ; BSR set to: 1
 35346  00C020  0E00               	movlw	0
 35347  00C022  010D               	movlb	13	; () banked
 35348  00C024  6F88               	movwf	136,b	;volatile
 35349  00C026  0E00               	movlw	0
 35350  00C028  6F89               	movwf	137,b	;volatile
 35351  00C02A  0E00               	movlw	0
 35352  00C02C  6F8A               	movwf	138,b	;volatile
 35353  00C02E  0E00               	movlw	0
 35354  00C030  6F8B               	movwf	139,b	;volatile
 35355                           
 35356                           ; BSR set to: 13
 35357                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 35358  00C032  0101               	movlb	1	; () banked
 35359  00C034  6957               	setf	_MSDCommandState& (0+255),b
 35360                           
 35361                           ;usb_device_msd.c: 885: break;
 35362  00C036  0012               	return	
 35363  00C038                     
 35364                           ; BSR set to: 1
 35365                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 35366                           
 35367                           ; BSR set to: 1
 35368  00C038  513F               	movf	_USBMSDInHandle& (0+255),w,b
 35369  00C03A  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35370  00C03C  B4D8               	btfsc	status,2,c
 35371  00C03E  D006               	goto	u12430
 35372                           
 35373                           ; BSR set to: 1
 35374  00C040  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 35375  00C044  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35376  00C048  BEDF               	btfsc	indf2,7,c
 35377  00C04A  0012               	return	
 35378  00C04C                     u12430:
 35379                           
 35380                           ; BSR set to: 1
 35381                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 35382                           
 35383                           ; BSR set to: 1
 35384  00C04C  0102               	movlb	2	; () banked
 35385  00C04E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35386  00C050  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35387  00C052  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35388  00C054  E104               	bnz	u12440
 35389  00C056  0E40               	movlw	64
 35390  00C058  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 35391  00C05A  A0D8               	btfss	status,0,c
 35392  00C05C  D00B               	goto	l660
 35393  00C05E                     u12440:
 35394                           
 35395                           ; BSR set to: 2
 35396                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 35397  00C05E  0E40               	movlw	64
 35398  00C060  0100               	movlb	0	; () banked
 35399  00C062  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 35400                           
 35401                           ; BSR set to: 0
 35402                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 35403  00C064  0E40               	movlw	64
 35404  00C066  0102               	movlb	2	; () banked
 35405  00C068  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35406  00C06A  0E00               	movlw	0
 35407  00C06C  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35408  00C06E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35409  00C070  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35410                           
 35411                           ;usb_device_msd.c: 900: }
 35412  00C072  D00A               	goto	l661
 35413  00C074                     l660:
 35414                           
 35415                           ; BSR set to: 2
 35416                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 35417  00C074  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 35418                           
 35419                           ; BSR set to: 2
 35420                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 35421  00C078  0E00               	movlw	0
 35422  00C07A  6F08               	movwf	(_gblCBW+8)& (0+255),b
 35423  00C07C  0E00               	movlw	0
 35424  00C07E  6F09               	movwf	(_gblCBW+9)& (0+255),b
 35425  00C080  0E00               	movlw	0
 35426  00C082  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 35427  00C084  0E00               	movlw	0
 35428  00C086  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 35429  00C088                     l661:
 35430                           
 35431                           ; BSR set to: 2
 35432                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 35433                           
 35434                           ; BSR set to: 2
 35435  00C088  0100               	movlb	0	; () banked
 35436  00C08A  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35437  00C08C  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 35438  00C08E  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 35439  00C090  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 35440  00C092  0101               	movlb	1	; () banked
 35441  00C094  5D3B               	subwf	_TransferLength& (0+255),w,b
 35442  00C096  0100               	movlb	0	; () banked
 35443  00C098  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 35444  00C09A  0101               	movlb	1	; () banked
 35445  00C09C  593C               	subwfb	(_TransferLength+1)& (0+255),w,b
 35446  00C09E  A0D8               	btfss	status,0,c
 35447  00C0A0  D007               	goto	l662
 35448                           
 35449                           ; BSR set to: 1
 35450                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 35451  00C0A2  0100               	movlb	0	; () banked
 35452  00C0A4  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35453  00C0A6  0101               	movlb	1	; () banked
 35454  00C0A8  5F3B               	subwf	_TransferLength& (0+255),f,b
 35455  00C0AA  0E00               	movlw	0
 35456  00C0AC  5B3C               	subwfb	(_TransferLength+1)& (0+255),f,b
 35457                           
 35458                           ;usb_device_msd.c: 918: }
 35459  00C0AE  D01E               	goto	u12470
 35460  00C0B0                     l662:
 35461                           
 35462                           ; BSR set to: 1
 35463                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 35464                           
 35465                           ; BSR set to: 1
 35466  00C0B0  0E00               	movlw	0
 35467  00C0B2  0100               	movlb	0	; () banked
 35468  00C0B4  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35469  00C0B6  D016               	goto	l664
 35470  00C0B8                     
 35471                           ; BSR set to: 0
 35472                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 35473                           
 35474                           ; BSR set to: 0
 35475  00C0B8  0101               	movlb	1	; () banked
 35476  00C0BA  513B               	movf	_TransferLength& (0+255),w,b
 35477  00C0BC  113C               	iorwf	(_TransferLength+1)& (0+255),w,b
 35478  00C0BE  B4D8               	btfsc	status,2,c
 35479  00C0C0  D004               	goto	l666
 35480                           
 35481                           ; BSR set to: 1
 35482                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 35483  00C0C2  073B               	decf	_TransferLength& (0+255),f,b
 35484  00C0C4  A0D8               	btfss	status,0,c
 35485  00C0C6  073C               	decf	(_TransferLength+1)& (0+255),f,b
 35486                           
 35487                           ;usb_device_msd.c: 932: }
 35488  00C0C8  D00B               	goto	l667
 35489  00C0CA                     l666:
 35490                           
 35491                           ; BSR set to: 1
 35492                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 35493                           
 35494                           ; BSR set to: 1
 35495  00C0CA  0100               	movlb	0	; () banked
 35496  00C0CC  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35497  00C0CE  0D01               	mullw	1
 35498  00C0D0  0E00               	movlw	0
 35499  00C0D2  24F3               	addwf	prodl,w,c
 35500  00C0D4  6ED9               	movwf	fsr2l,c
 35501  00C0D6  0E06               	movlw	6
 35502  00C0D8  20F4               	addwfc	prodh,w,c
 35503  00C0DA  6EDA               	movwf	fsr2h,c
 35504  00C0DC  0E00               	movlw	0
 35505  00C0DE  6EDF               	movwf	indf2,c
 35506  00C0E0                     l667:
 35507                           
 35508                           ; BSR set to: 0
 35509  00C0E0  0100               	movlb	0	; () banked
 35510  00C0E2  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35511  00C0E4                     l664:
 35512                           
 35513                           ; BSR set to: 0
 35514                           
 35515                           ; BSR set to: 0
 35516  00C0E4  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35517  00C0E6  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35518  00C0E8  A0D8               	btfss	status,0,c
 35519  00C0EA  D7E6               	goto	l665
 35520  00C0EC                     u12470:
 35521                           
 35522                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 35523                           
 35524                           ; BSR set to: 0
 35525                           
 35526                           ; BSR set to: 0
 35527  00C0EC  0E01               	movlw	1
 35528  00C0EE  0100               	movlb	0	; () banked
 35529  00C0F0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35530  00C0F2  0E00               	movlw	0
 35531  00C0F4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35532  00C0F6  0E06               	movlw	6
 35533  00C0F8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35534  00C0FA  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 35535  00C0FE  0E02               	movlw	2
 35536  00C100  EC87  F089         	call	_USBTransferOnePacket
 35537  00C104  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35538  00C108  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35539                           
 35540                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 35541  00C10C  0102               	movlb	2	; () banked
 35542  00C10E  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35543  00C110  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35544  00C112  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35545  00C114  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35546  00C116  A4D8               	btfss	status,2,c
 35547  00C118  0012               	return	
 35548                           
 35549                           ; BSR set to: 2
 35550                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 35551  00C11A  0101               	movlb	1	; () banked
 35552  00C11C  6957               	setf	_MSDCommandState& (0+255),b
 35553                           
 35554                           ; BSR set to: 1
 35555                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 35556                           
 35557                           ; BSR set to: 1
 35558                           
 35559                           ;usb_device_msd.c: 949: break;
 35560  00C11E  0012               	return	
 35561  00C120                     
 35562                           ; BSR set to: 1
 35563                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 35564                           
 35565                           ; BSR set to: 1
 35566                           
 35567                           ;usb_device_msd.c: 954: default:
 35568                           
 35569                           ; BSR set to: 1
 35570  00C120  0E7F               	movlw	127
 35571  00C122  EC55  F086         	call	_MSDErrorHandler
 35572                           
 35573                           ;usb_device_msd.c: 960: }
 35574                           
 35575                           ;usb_device_msd.c: 959: break;
 35576  00C126  0012               	return	
 35577  00C128                     l630:
 35578  00C128  0101               	movlb	1	; () banked
 35579  00C12A  5157               	movf	_MSDCommandState& (0+255),w,b
 35580                           
 35581                           ; Switch size 1, requested type "space"
 35582                           ; Number of cases is 12, Range of values is 0 to 254
 35583                           ; switch strategies available:
 35584                           ; Name         Instructions Cycles
 35585                           ; simple_byte           37    19 (average)
 35586                           ;	Chosen strategy is simple_byte
 35587  00C12C  0A00               	xorlw	0	; case 0
 35588  00C12E  B4D8               	btfsc	status,2,c
 35589  00C130  D74E               	goto	l650
 35590  00C132  0A03               	xorlw	3	; case 3
 35591  00C134  B4D8               	btfsc	status,2,c
 35592  00C136  D6C9               	goto	l640
 35593  00C138  0A11               	xorlw	17	; case 18
 35594  00C13A  B4D8               	btfsc	status,2,c
 35595  00C13C  D634               	goto	l636
 35596  00C13E  0A08               	xorlw	8	; case 26
 35597  00C140  B4D8               	btfsc	status,2,c
 35598  00C142  D6F2               	goto	l644
 35599  00C144  0A01               	xorlw	1	; case 27
 35600  00C146  B4D8               	btfsc	status,2,c
 35601  00C148  D76B               	goto	l654
 35602  00C14A  0A05               	xorlw	5	; case 30
 35603  00C14C  B4D8               	btfsc	status,2,c
 35604  00C14E  D728               	goto	l649
 35605  00C150  0A3B               	xorlw	59	; case 37
 35606  00C152  B4D8               	btfsc	status,2,c
 35607  00C154  D657               	goto	l639
 35608  00C156  0A0D               	xorlw	13	; case 40
 35609  00C158  B4D8               	btfsc	status,2,c
 35610  00C15A  D615               	goto	l631
 35611  00C15C  0A02               	xorlw	2	; case 42
 35612  00C15E  B4D8               	btfsc	status,2,c
 35613  00C160  D61A               	goto	l634
 35614  00C162  0A05               	xorlw	5	; case 47
 35615  00C164  B4D8               	btfsc	status,2,c
 35616  00C166  D75C               	goto	l654
 35617  00C168  0AD2               	xorlw	210	; case 253
 35618  00C16A  B4D8               	btfsc	status,2,c
 35619  00C16C  D765               	goto	l656
 35620  00C16E  0A03               	xorlw	3	; case 254
 35621  00C170  D7D7               	goto	l670
 35622  00C172                     __end_of_MSDProcessCommandMediaPresent:
 35623                           	opt stack 0
 35624                           tosu	equ	0xFFF
 35625                           tosh	equ	0xFFE
 35626                           tosl	equ	0xFFD
 35627                           pclath	equ	0xFFA
 35628                           tblptru	equ	0xFF8
 35629                           tblptrh	equ	0xFF7
 35630                           tblptrl	equ	0xFF6
 35631                           tablat	equ	0xFF5
 35632                           prodh	equ	0xFF4
 35633                           prodl	equ	0xFF3
 35634                           intcon	equ	0xFF2
 35635                           postinc0	equ	0xFEE
 35636                           wreg	equ	0xFE8
 35637                           indf1	equ	0xFE7
 35638                           postinc1	equ	0xFE6
 35639                           postdec1	equ	0xFE5
 35640                           plusw1	equ	0xFE3
 35641                           fsr1h	equ	0xFE2
 35642                           fsr1l	equ	0xFE1
 35643                           indf2	equ	0xFDF
 35644                           postinc2	equ	0xFDE
 35645                           postdec2	equ	0xFDD
 35646                           plusw2	equ	0xFDB
 35647                           fsr2h	equ	0xFDA
 35648                           fsr2l	equ	0xFD9
 35649                           status	equ	0xFD8
 35650                           
 35651 ;; *************** function _MSDWriteHandler *****************
 35652 ;; Defined at:
 35653 ;;		line 1188 in file "usb_device_msd.c"
 35654 ;; Parameters:    Size  Location     Type
 35655 ;;		None
 35656 ;; Auto vars:     Size  Location     Type
 35657 ;;		None
 35658 ;; Return value:  Size  Location     Type
 35659 ;;                  1    wreg      unsigned char 
 35660 ;; Registers used:
 35661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35662 ;; Tracked objects:
 35663 ;;		On entry : 0/0
 35664 ;;		On exit  : 0/0
 35665 ;;		Unchanged: 0/0
 35666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35669 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35670 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35671 ;;Total ram usage:        5 bytes
 35672 ;; Hardware stack levels used:    1
 35673 ;; Hardware stack levels required when called:   16
 35674 ;; This function calls:
 35675 ;;		_ExternalFlash_SectorWrite
 35676 ;;		_ExternalFlash_WriteProtectStateGet
 35677 ;;		_MSDCheckForErrorCases
 35678 ;;		_USBStallEndpoint
 35679 ;;		_USBTransferOnePacket
 35680 ;; This function is called by:
 35681 ;;		_MSDProcessCommandMediaPresent
 35682 ;; This function uses a non-reentrant model
 35683 ;;
 35684                           
 35685                           	psect	text136
 35686  00CF7A                     __ptext136:
 35687                           	opt stack 0
 35688  00CF7A                     _MSDWriteHandler:
 35689                           	opt stack 10
 35690                           
 35691                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 35692                           
 35693                           ;incstack = 0
 35694  00CF7A  D160               	goto	l700
 35695  00CF7C                     l701:
 35696                           
 35697                           ; BSR set to: 1
 35698                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 35699  00CF7C  C211  F124         	movff	_gblCBW+17,_LBA+3
 35700                           
 35701                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 35702  00CF80  C212  F123         	movff	_gblCBW+18,_LBA+2
 35703                           
 35704                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 35705  00CF84  C213  F122         	movff	_gblCBW+19,_LBA+1
 35706                           
 35707                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 35708  00CF88  C214  F121         	movff	_gblCBW+20,_LBA
 35709                           
 35710                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 35711  00CF8C  C216  F13C         	movff	_gblCBW+22,_TransferLength+1
 35712                           
 35713                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 35714  00CF90  C217  F13B         	movff	_gblCBW+23,_TransferLength
 35715                           
 35716                           ; BSR set to: 1
 35717                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35718  00CF94  513B               	movf	_TransferLength& (0+255),w,b
 35719  00CF96  0100               	movlb	0	; () banked
 35720  00CF98  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35721  00CF9A  0101               	movlb	1	; () banked
 35722  00CF9C  513C               	movf	(_TransferLength+1)& (0+255),w,b
 35723  00CF9E  0100               	movlb	0	; () banked
 35724  00CFA0  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 35725  00CFA2  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35726  00CFA4  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35727  00CFA6  0E09               	movlw	9
 35728  00CFA8                     u11225:
 35729  00CFA8  90D8               	bcf	status,0,c
 35730  00CFAA  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 35731  00CFAC  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 35732  00CFAE  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 35733  00CFB0  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 35734  00CFB2  2EE8               	decfsz	wreg,f,c
 35735  00CFB4  D7F9               	goto	u11225
 35736  00CFB6  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 35737  00CFBA  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35738  00CFBE  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35739  00CFC2  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35740  00CFC6  ECE2  F086         	call	_MSDCheckForErrorCases	;wreg free
 35741  00CFCA  0900               	iorlw	0
 35742  00CFCC  A4D8               	btfss	status,2,c
 35743  00CFCE  D148               	goto	l703
 35744                           
 35745                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 35746                           
 35747                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 35748  00CFD0  C2AC  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35749  00CFD4  C2AD  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35750  00CFD8  EE22  F0A6         	lfsr	2,_LUN+15
 35751  00CFDC  D801               	call	u11248
 35752  00CFDE  D00A               	goto	u11249
 35753  00CFE0                     u11248:
 35754  00CFE0  0005               	push	
 35755  00CFE2  6EFA               	movwf	pclath,c
 35756  00CFE4  50DE               	movf	postinc2,w,c
 35757  00CFE6  6EFD               	movwf	tosl,c
 35758  00CFE8  50DE               	movf	postinc2,w,c
 35759  00CFEA  6EFE               	movwf	tosh,c
 35760  00CFEC  50DE               	movf	postinc2,w,c
 35761  00CFEE  6EFF               	movwf	tosu,c
 35762  00CFF0  50FA               	movf	pclath,w,c
 35763  00CFF2  0012               	return		;indir
 35764  00CFF4                     u11249:
 35765  00CFF4  0900               	iorlw	0
 35766  00CFF6  B4D8               	btfsc	status,2,c
 35767  00CFF8  D017               	goto	l704
 35768                           
 35769                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 35770  00CFFA  0E01               	movlw	1
 35771  00CFFC  010D               	movlb	13	; () banked
 35772  00CFFE  6F8C               	movwf	140,b	;volatile
 35773                           
 35774                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 35775  00D000  0102               	movlb	2	; () banked
 35776  00D002  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35777  00D004  0BF0               	andlw	-16
 35778  00D006  0907               	iorlw	7
 35779  00D008  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35780                           
 35781                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 35782  00D00A  0E27               	movlw	39
 35783  00D00C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35784                           
 35785                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 35786  00D00E  0E00               	movlw	0
 35787  00D010  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35788                           
 35789                           ; BSR set to: 2
 35790                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 35791  00D012  0E00               	movlw	0
 35792  00D014  0100               	movlb	0	; () banked
 35793  00D016  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35794  00D018  0E02               	movlw	2
 35795  00D01A  EC02  F089         	call	_USBStallEndpoint
 35796                           
 35797                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 35798  00D01E  0E00               	movlw	0
 35799  00D020  0101               	movlb	1	; () banked
 35800  00D022  6F55               	movwf	_MSDWriteState& (0+255),b
 35801                           
 35802                           ; BSR set to: 1
 35803                           ;usb_device_msd.c: 1228: return MSDWriteState;
 35804  00D024  5155               	movf	_MSDWriteState& (0+255),w,b
 35805                           
 35806                           ; BSR set to: 1
 35807  00D026  0012               	return	
 35808  00D028                     l704:
 35809                           
 35810                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 35811                           
 35812                           ; BSR set to: 1
 35813  00D028  0E01               	movlw	1
 35814  00D02A  0101               	movlb	1	; () banked
 35815  00D02C  6F58               	movwf	_MSD_State& (0+255),b
 35816  00D02E                     
 35817                           ; BSR set to: 1
 35818                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 35819                           
 35820                           ; BSR set to: 1
 35821  00D02E  513B               	movf	_TransferLength& (0+255),w,b
 35822  00D030  113C               	iorwf	(_TransferLength+1)& (0+255),w,b
 35823  00D032  A4D8               	btfss	status,2,c
 35824  00D034  D002               	goto	l707
 35825                           
 35826                           ; BSR set to: 1
 35827                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 35828  00D036  0E00               	movlw	0
 35829  00D038  D0FF               	goto	L53
 35830  00D03A                     l707:
 35831                           
 35832                           ; BSR set to: 1
 35833                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 35834                           
 35835                           ; BSR set to: 1
 35836  00D03A  0E03               	movlw	3
 35837  00D03C  6F55               	movwf	_MSDWriteState& (0+255),b
 35838                           
 35839                           ; BSR set to: 1
 35840                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 35841  00D03E  0E00               	movlw	0
 35842  00D040  6F43               	movwf	_ptrNextData& (0+255),b
 35843  00D042  0E06               	movlw	6
 35844  00D044  6F44               	movwf	(_ptrNextData+1)& (0+255),b
 35845                           
 35846                           ; BSR set to: 1
 35847                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 35848  00D046  0E00               	movlw	0
 35849  00D048  010D               	movlb	13	; () banked
 35850  00D04A  6F88               	movwf	136,b	;volatile
 35851  00D04C  0E02               	movlw	2
 35852  00D04E  6F89               	movwf	137,b	;volatile
 35853  00D050  0E00               	movlw	0
 35854  00D052  6F8A               	movwf	138,b	;volatile
 35855  00D054  0E00               	movlw	0
 35856  00D056  6F8B               	movwf	139,b	;volatile
 35857  00D058                     l708:
 35858                           
 35859                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 35860  00D058  010D               	movlb	13	; () banked
 35861  00D05A  5188               	movf	136,w,b	;volatile
 35862  00D05C  1189               	iorwf	137,w,b	;volatile
 35863  00D05E  118A               	iorwf	138,w,b	;volatile
 35864  00D060  118B               	iorwf	139,w,b	;volatile
 35865  00D062  B4D8               	btfsc	status,2,c
 35866  00D064  D01F               	goto	l709
 35867                           
 35868                           ; BSR set to: 13
 35869                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 35870  00D066  0101               	movlb	1	; () banked
 35871  00D068  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 35872  00D06A  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35873  00D06C  B4D8               	btfsc	status,2,c
 35874  00D06E  D006               	goto	l710
 35875                           
 35876                           ; BSR set to: 1
 35877  00D070  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35878  00D074  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35879  00D078  BEDF               	btfsc	indf2,7,c
 35880  00D07A  D0F2               	goto	l703
 35881  00D07C                     l710:
 35882                           
 35883                           ; BSR set to: 1
 35884                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 35885                           
 35886                           ; BSR set to: 1
 35887  00D07C  0E00               	movlw	0
 35888  00D07E  0100               	movlb	0	; () banked
 35889  00D080  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35890  00D082  C143  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35891  00D086  C144  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35892  00D08A  0E40               	movlw	64
 35893  00D08C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35894  00D08E  0E02               	movlw	2
 35895  00D090  EC87  F089         	call	_USBTransferOnePacket
 35896  00D094  C060  F141         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 35897  00D098  C061  F142         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 35898                           
 35899                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 35900  00D09C  0E04               	movlw	4
 35901  00D09E  0101               	movlb	1	; () banked
 35902  00D0A0  6F55               	movwf	_MSDWriteState& (0+255),b
 35903                           
 35904                           ;usb_device_msd.c: 1260: }
 35905  00D0A2  D023               	goto	l711
 35906  00D0A4                     l709:
 35907                           
 35908                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 35909                           
 35910                           ; BSR set to: 1
 35911  00D0A4  C2AC  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35912  00D0A8  C2AD  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35913  00D0AC  EE22  F0A6         	lfsr	2,_LUN+15
 35914  00D0B0  D801               	call	u11308
 35915  00D0B2  D00A               	goto	u11309
 35916  00D0B4                     u11308:
 35917  00D0B4  0005               	push	
 35918  00D0B6  6EFA               	movwf	pclath,c
 35919  00D0B8  50DE               	movf	postinc2,w,c
 35920  00D0BA  6EFD               	movwf	tosl,c
 35921  00D0BC  50DE               	movf	postinc2,w,c
 35922  00D0BE  6EFE               	movwf	tosh,c
 35923  00D0C0  50DE               	movf	postinc2,w,c
 35924  00D0C2  6EFF               	movwf	tosu,c
 35925  00D0C4  50FA               	movf	pclath,w,c
 35926  00D0C6  0012               	return		;indir
 35927  00D0C8                     u11309:
 35928  00D0C8  0900               	iorlw	0
 35929  00D0CA  B4D8               	btfsc	status,2,c
 35930  00D0CC  D00C               	goto	l712
 35931                           
 35932                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 35933  00D0CE  0E01               	movlw	1
 35934  00D0D0  010D               	movlb	13	; () banked
 35935  00D0D2  6F8C               	movwf	140,b	;volatile
 35936                           
 35937                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 35938  00D0D4  0102               	movlb	2	; () banked
 35939  00D0D6  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35940  00D0D8  0BF0               	andlw	-16
 35941  00D0DA  0902               	iorlw	2
 35942  00D0DC  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35943                           
 35944                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 35945  00D0DE  0E27               	movlw	39
 35946  00D0E0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35947                           
 35948                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 35949  00D0E2  0E00               	movlw	0
 35950  00D0E4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35951  00D0E6                     l712:
 35952                           
 35953                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 35954  00D0E6  0E02               	movlw	2
 35955  00D0E8  D0A6               	goto	L90
 35956  00D0EA                     l711:
 35957                           
 35958                           ; BSR set to: 1
 35959                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 35960                           
 35961                           ; BSR set to: 1
 35962                           
 35963                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 35964                           
 35965                           ; BSR set to: 1
 35966  00D0EA  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 35967  00D0EC  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35968  00D0EE  B4D8               	btfsc	status,2,c
 35969  00D0F0  D006               	goto	l714
 35970                           
 35971                           ; BSR set to: 1
 35972  00D0F2  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35973  00D0F6  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35974  00D0FA  BEDF               	btfsc	indf2,7,c
 35975  00D0FC  D0B1               	goto	l703
 35976  00D0FE                     l714:
 35977                           
 35978                           ; BSR set to: 1
 35979                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 35980                           
 35981                           ; BSR set to: 1
 35982  00D0FE  EE20 F001          	lfsr	2,1
 35983  00D102  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 35984  00D104  26D9               	addwf	fsr2l,f,c
 35985  00D106  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 35986  00D108  22DA               	addwfc	fsr2h,f,c
 35987  00D10A  50DF               	movf	indf2,w,c
 35988  00D10C  0100               	movlb	0	; () banked
 35989  00D10E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35990  00D110  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 35991  00D114  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35992  00D116  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35993  00D118  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 35994  00D11A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 35995  00D11C  0102               	movlb	2	; () banked
 35996  00D11E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35997  00D120  0100               	movlb	0	; () banked
 35998  00D122  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 35999  00D124  0102               	movlb	2	; () banked
 36000  00D126  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 36001  00D128  0100               	movlb	0	; () banked
 36002  00D12A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36003  00D12C  0102               	movlb	2	; () banked
 36004  00D12E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 36005  00D130  0100               	movlb	0	; () banked
 36006  00D132  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36007  00D134  0102               	movlb	2	; () banked
 36008  00D136  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 36009                           
 36010                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 36011  00D138  0101               	movlb	1	; () banked
 36012  00D13A  EE20 F001          	lfsr	2,1
 36013  00D13E  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 36014  00D140  26D9               	addwf	fsr2l,f,c
 36015  00D142  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36016  00D144  22DA               	addwfc	fsr2h,f,c
 36017  00D146  50DF               	movf	indf2,w,c
 36018  00D148  0100               	movlb	0	; () banked
 36019  00D14A  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36020  00D14C  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36021  00D150  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36022  00D152  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36023  00D154  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36024  00D156  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36025  00D158  010D               	movlb	13	; () banked
 36026  00D15A  5F88               	subwf	136,f,b	;volatile
 36027  00D15C  0100               	movlb	0	; () banked
 36028  00D15E  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36029  00D160  010D               	movlb	13	; () banked
 36030  00D162  5B89               	subwfb	137,f,b	;volatile
 36031  00D164  0100               	movlb	0	; () banked
 36032  00D166  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36033  00D168  010D               	movlb	13	; () banked
 36034  00D16A  5B8A               	subwfb	138,f,b	;volatile
 36035  00D16C  0100               	movlb	0	; () banked
 36036  00D16E  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36037  00D170  010D               	movlb	13	; () banked
 36038  00D172  5B8B               	subwfb	139,f,b	;volatile
 36039                           
 36040                           ; BSR set to: 13
 36041                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 36042  00D174  0E40               	movlw	64
 36043  00D176  0101               	movlb	1	; () banked
 36044  00D178  2743               	addwf	_ptrNextData& (0+255),f,b
 36045  00D17A  0E00               	movlw	0
 36046  00D17C  2344               	addwfc	(_ptrNextData+1)& (0+255),f,b
 36047                           
 36048                           ; BSR set to: 1
 36049                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 36050  00D17E  0E03               	movlw	3
 36051  00D180  D05B               	goto	L53
 36052  00D182                     
 36053                           ; BSR set to: 1
 36054                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 36055                           
 36056                           ; BSR set to: 1
 36057  00D182  010D               	movlb	13	; () banked
 36058  00D184  518C               	movf	140,w,b	;volatile
 36059  00D186  A4D8               	btfss	status,2,c
 36060  00D188  D040               	goto	l719
 36061                           
 36062                           ; BSR set to: 13
 36063                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 36064  00D18A  C2AC  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 36065  00D18E  C2AD  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 36066  00D192  C121  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 36067  00D196  C122  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 36068  00D19A  C123  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 36069  00D19E  C124  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 36070  00D1A2  0E00               	movlw	0
 36071  00D1A4  0100               	movlb	0	; () banked
 36072  00D1A6  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 36073  00D1A8  0E06               	movlw	6
 36074  00D1AA  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 36075  00D1AC  0101               	movlb	1	; () banked
 36076  00D1AE  5121               	movf	_LBA& (0+255),w,b
 36077  00D1B0  1122               	iorwf	(_LBA+1)& (0+255),w,b
 36078  00D1B2  1123               	iorwf	(_LBA+2)& (0+255),w,b
 36079  00D1B4  1124               	iorwf	(_LBA+3)& (0+255),w,b
 36080  00D1B6  A4D8               	btfss	status,2,c
 36081  00D1B8  D002               	goto	u11350
 36082  00D1BA  0E01               	movlw	1
 36083  00D1BC  D001               	goto	u11360
 36084  00D1BE                     u11350:
 36085  00D1BE  0E00               	movlw	0
 36086  00D1C0                     u11360:
 36087  00D1C0  0100               	movlb	0	; () banked
 36088  00D1C2  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 36089  00D1C4  EE22  F0A9         	lfsr	2,_LUN+18
 36090  00D1C8  D801               	call	u11378
 36091  00D1CA  D00A               	goto	u11379
 36092  00D1CC                     u11378:
 36093  00D1CC  0005               	push	
 36094  00D1CE  6EFA               	movwf	pclath,c
 36095  00D1D0  50DE               	movf	postinc2,w,c
 36096  00D1D2  6EFD               	movwf	tosl,c
 36097  00D1D4  50DE               	movf	postinc2,w,c
 36098  00D1D6  6EFE               	movwf	tosh,c
 36099  00D1D8  50DE               	movf	postinc2,w,c
 36100  00D1DA  6EFF               	movwf	tosu,c
 36101  00D1DC  50FA               	movf	pclath,w,c
 36102  00D1DE  0012               	return		;indir
 36103  00D1E0                     u11379:
 36104  00D1E0  06E8               	decf	wreg,f,c
 36105  00D1E2  B4D8               	btfsc	status,2,c
 36106  00D1E4  D012               	goto	l719
 36107                           
 36108                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 36109  00D1E6  0E64               	movlw	100
 36110  00D1E8  0101               	movlb	1	; () banked
 36111  00D1EA  6154               	cpfslt	_MSDRetryAttempt& (0+255),b
 36112  00D1EC  D002               	goto	l718
 36113                           
 36114                           ; BSR set to: 1
 36115                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 36116  00D1EE  2B54               	incf	_MSDRetryAttempt& (0+255),f,b
 36117                           
 36118                           ;usb_device_msd.c: 1314: break;
 36119  00D1F0  D037               	goto	l703
 36120  00D1F2                     l718:
 36121                           
 36122                           ; BSR set to: 1
 36123                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 36124                           
 36125                           ; BSR set to: 1
 36126  00D1F2  0E01               	movlw	1
 36127  00D1F4  010D               	movlb	13	; () banked
 36128  00D1F6  6F8C               	movwf	140,b	;volatile
 36129                           
 36130                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 36131  00D1F8  0102               	movlb	2	; () banked
 36132  00D1FA  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36133  00D1FC  0BF0               	andlw	-16
 36134  00D1FE  0903               	iorlw	3
 36135  00D200  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36136                           
 36137                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 36138  00D202  0E00               	movlw	0
 36139  00D204  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36140                           
 36141                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 36142  00D206  0E00               	movlw	0
 36143  00D208  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36144  00D20A                     l719:
 36145                           
 36146                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 36147                           
 36148                           ; BSR set to: 2
 36149                           
 36150                           ; BSR set to: 2
 36151                           
 36152                           ; BSR set to: 2
 36153  00D20A  0E01               	movlw	1
 36154  00D20C  0101               	movlb	1	; () banked
 36155  00D20E  2721               	addwf	_LBA& (0+255),f,b
 36156  00D210  0E00               	movlw	0
 36157  00D212  2322               	addwfc	(_LBA+1)& (0+255),f,b
 36158  00D214  2323               	addwfc	(_LBA+2)& (0+255),f,b
 36159  00D216  2324               	addwfc	(_LBA+3)& (0+255),f,b
 36160                           
 36161                           ; BSR set to: 1
 36162                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 36163  00D218  073B               	decf	_TransferLength& (0+255),f,b
 36164  00D21A  A0D8               	btfss	status,0,c
 36165  00D21C  073C               	decf	(_TransferLength+1)& (0+255),f,b
 36166                           
 36167                           ; BSR set to: 1
 36168                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 36169  00D21E  0E01               	movlw	1
 36170  00D220  D00B               	goto	L53
 36171  00D222                     
 36172                           ; BSR set to: 1
 36173                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 36174                           
 36175                           ; BSR set to: 1
 36176  00D222  0E02               	movlw	2
 36177  00D224  010D               	movlb	13	; () banked
 36178  00D226  6F8C               	movwf	140,b	;volatile
 36179                           
 36180                           ; BSR set to: 13
 36181                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 36182  00D228  0E00               	movlw	0
 36183  00D22A  0100               	movlb	0	; () banked
 36184  00D22C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36185  00D22E  0E02               	movlw	2
 36186  00D230  EC02  F089         	call	_USBStallEndpoint
 36187                           
 36188                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 36189  00D234  0E00               	movlw	0
 36190  00D236                     L90:
 36191  00D236  0101               	movlb	1	; () banked
 36192  00D238                     L53:
 36193  00D238  6F55               	movwf	_MSDWriteState& (0+255),b
 36194                           
 36195                           ; BSR set to: 1
 36196                           ;usb_device_msd.c: 1345: }
 36197                           
 36198                           ;usb_device_msd.c: 1344: break;
 36199  00D23A  D012               	goto	l703
 36200  00D23C                     l700:
 36201                           
 36202                           ; BSR set to: 1
 36203  00D23C  0101               	movlb	1	; () banked
 36204  00D23E  5155               	movf	_MSDWriteState& (0+255),w,b
 36205                           
 36206                           ; Switch size 1, requested type "space"
 36207                           ; Number of cases is 5, Range of values is 0 to 4
 36208                           ; switch strategies available:
 36209                           ; Name         Instructions Cycles
 36210                           ; simple_byte           16     9 (average)
 36211                           ;	Chosen strategy is simple_byte
 36212  00D240  0A00               	xorlw	0	; case 0
 36213  00D242  B4D8               	btfsc	status,2,c
 36214  00D244  D69B               	goto	l701
 36215  00D246  0A01               	xorlw	1	; case 1
 36216  00D248  B4D8               	btfsc	status,2,c
 36217  00D24A  D6F1               	goto	l706
 36218  00D24C  0A03               	xorlw	3	; case 2
 36219  00D24E  B4D8               	btfsc	status,2,c
 36220  00D250  D798               	goto	l715
 36221  00D252  0A01               	xorlw	1	; case 3
 36222  00D254  B4D8               	btfsc	status,2,c
 36223  00D256  D700               	goto	l708
 36224  00D258  0A07               	xorlw	7	; case 4
 36225  00D25A  B4D8               	btfsc	status,2,c
 36226  00D25C  D746               	goto	l711
 36227  00D25E  D7E1               	goto	l720
 36228  00D260                     l703:
 36229                           
 36230                           ;usb_device_msd.c: 1347: return MSDWriteState;
 36231                           
 36232                           ; BSR set to: 1
 36233  00D260  0101               	movlb	1	; () banked
 36234  00D262  5155               	movf	_MSDWriteState& (0+255),w,b
 36235  00D264  0012               	return	
 36236  00D266                     __end_of_MSDWriteHandler:
 36237                           	opt stack 0
 36238                           tosu	equ	0xFFF
 36239                           tosh	equ	0xFFE
 36240                           tosl	equ	0xFFD
 36241                           pclath	equ	0xFFA
 36242                           tblptru	equ	0xFF8
 36243                           tblptrh	equ	0xFF7
 36244                           tblptrl	equ	0xFF6
 36245                           tablat	equ	0xFF5
 36246                           prodh	equ	0xFF4
 36247                           prodl	equ	0xFF3
 36248                           intcon	equ	0xFF2
 36249                           postinc0	equ	0xFEE
 36250                           wreg	equ	0xFE8
 36251                           indf1	equ	0xFE7
 36252                           postinc1	equ	0xFE6
 36253                           postdec1	equ	0xFE5
 36254                           plusw1	equ	0xFE3
 36255                           fsr1h	equ	0xFE2
 36256                           fsr1l	equ	0xFE1
 36257                           indf2	equ	0xFDF
 36258                           postinc2	equ	0xFDE
 36259                           postdec2	equ	0xFDD
 36260                           plusw2	equ	0xFDB
 36261                           fsr2h	equ	0xFDA
 36262                           fsr2l	equ	0xFD9
 36263                           status	equ	0xFD8
 36264                           
 36265 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 36266 ;; Defined at:
 36267 ;;		line 34 in file "external_flash.c"
 36268 ;; Parameters:    Size  Location     Type
 36269 ;;  config          2    0[BANK0 ] PTR void 
 36270 ;;		 -> NULL(0), 
 36271 ;; Auto vars:     Size  Location     Type
 36272 ;;		None
 36273 ;; Return value:  Size  Location     Type
 36274 ;;                  1    wreg      unsigned char 
 36275 ;; Registers used:
 36276 ;;		wreg
 36277 ;; Tracked objects:
 36278 ;;		On entry : 0/0
 36279 ;;		On exit  : 0/0
 36280 ;;		Unchanged: 0/0
 36281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36282 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36285 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36286 ;;Total ram usage:        2 bytes
 36287 ;; Hardware stack levels used:    1
 36288 ;; Hardware stack levels required when called:   10
 36289 ;; This function calls:
 36290 ;;		Nothing
 36291 ;; This function is called by:
 36292 ;;		_MSDWriteHandler
 36293 ;;		_MSDProcessCommandMediaPresent
 36294 ;; This function uses a non-reentrant model
 36295 ;;
 36296                           
 36297                           	psect	text137
 36298  015E30                     __ptext137:
 36299                           	opt stack 0
 36300  015E30                     _ExternalFlash_WriteProtectStateGet:
 36301                           	opt stack 15
 36302                           
 36303                           ;external_flash.c: 37: return 0;
 36304                           
 36305                           ; BSR set to: 1
 36306                           ;incstack = 0
 36307  015E30  0E00               	movlw	0
 36308  015E32  0012               	return	
 36309  015E34                     __end_of_ExternalFlash_WriteProtectStateGet:
 36310                           	opt stack 0
 36311                           tosu	equ	0xFFF
 36312                           tosh	equ	0xFFE
 36313                           tosl	equ	0xFFD
 36314                           pclath	equ	0xFFA
 36315                           tblptru	equ	0xFF8
 36316                           tblptrh	equ	0xFF7
 36317                           tblptrl	equ	0xFF6
 36318                           tablat	equ	0xFF5
 36319                           prodh	equ	0xFF4
 36320                           prodl	equ	0xFF3
 36321                           intcon	equ	0xFF2
 36322                           postinc0	equ	0xFEE
 36323                           wreg	equ	0xFE8
 36324                           indf1	equ	0xFE7
 36325                           postinc1	equ	0xFE6
 36326                           postdec1	equ	0xFE5
 36327                           plusw1	equ	0xFE3
 36328                           fsr1h	equ	0xFE2
 36329                           fsr1l	equ	0xFE1
 36330                           indf2	equ	0xFDF
 36331                           postinc2	equ	0xFDE
 36332                           postdec2	equ	0xFDD
 36333                           plusw2	equ	0xFDB
 36334                           fsr2h	equ	0xFDA
 36335                           fsr2l	equ	0xFD9
 36336                           status	equ	0xFD8
 36337                           
 36338 ;; *************** function _ExternalFlash_SectorWrite *****************
 36339 ;; Defined at:
 36340 ;;		line 56 in file "external_flash.c"
 36341 ;; Parameters:    Size  Location     Type
 36342 ;;  config          2   36[BANK0 ] PTR void 
 36343 ;;		 -> NULL(0), 
 36344 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 36345 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 36346 ;;		 -> msd_buffer(512), 
 36347 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 36348 ;; Auto vars:     Size  Location     Type
 36349 ;;  page            2   45[BANK0 ] unsigned int 
 36350 ;; Return value:  Size  Location     Type
 36351 ;;                  1    wreg      unsigned char 
 36352 ;; Registers used:
 36353 ;;		wreg, status,2, status,0, cstack
 36354 ;; Tracked objects:
 36355 ;;		On entry : 0/0
 36356 ;;		On exit  : 0/0
 36357 ;;		Unchanged: 0/0
 36358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36359 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36362 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36363 ;;Total ram usage:       11 bytes
 36364 ;; Hardware stack levels used:    1
 36365 ;; Hardware stack levels required when called:   15
 36366 ;; This function calls:
 36367 ;;		_flash_sector_write
 36368 ;; This function is called by:
 36369 ;;		_MSDWriteHandler
 36370 ;; This function uses a non-reentrant model
 36371 ;;
 36372                           
 36373                           	psect	text138
 36374  015708                     __ptext138:
 36375                           	opt stack 0
 36376  015708                     _ExternalFlash_SectorWrite:
 36377                           	opt stack 10
 36378                           
 36379                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 36380                           
 36381                           ;incstack = 0
 36382  015708  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 36383  01570C  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 36384                           
 36385                           ;external_flash.c: 61: if(sector_addr >= 8192)
 36386  015710  0100               	movlb	0	; () banked
 36387  015712  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 36388  015714  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 36389  015716  E104               	bnz	u10790
 36390  015718  0E20               	movlw	32
 36391  01571A  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 36392  01571C  A0D8               	btfss	status,0,c
 36393  01571E  D002               	goto	l1695
 36394  015720                     u10790:
 36395                           
 36396                           ; BSR set to: 0
 36397                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 36398  015720  0E00               	movlw	0
 36399                           
 36400                           ; BSR set to: 0
 36401  015722  0012               	return	
 36402  015724                     l1695:
 36403                           
 36404                           ; BSR set to: 0
 36405                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 36406                           
 36407                           ; BSR set to: 0
 36408  015724  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 36409  015728  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 36410  01572C  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 36411  015730  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 36412  015734  EC61  F0A8         	call	_flash_sector_write	;wreg free
 36413                           
 36414                           ;external_flash.c: 69: return 1;
 36415  015738  0E01               	movlw	1
 36416  01573A  0012               	return	
 36417  01573C                     __end_of_ExternalFlash_SectorWrite:
 36418                           	opt stack 0
 36419                           tosu	equ	0xFFF
 36420                           tosh	equ	0xFFE
 36421                           tosl	equ	0xFFD
 36422                           pclath	equ	0xFFA
 36423                           tblptru	equ	0xFF8
 36424                           tblptrh	equ	0xFF7
 36425                           tblptrl	equ	0xFF6
 36426                           tablat	equ	0xFF5
 36427                           prodh	equ	0xFF4
 36428                           prodl	equ	0xFF3
 36429                           intcon	equ	0xFF2
 36430                           postinc0	equ	0xFEE
 36431                           wreg	equ	0xFE8
 36432                           indf1	equ	0xFE7
 36433                           postinc1	equ	0xFE6
 36434                           postdec1	equ	0xFE5
 36435                           plusw1	equ	0xFE3
 36436                           fsr1h	equ	0xFE2
 36437                           fsr1l	equ	0xFE1
 36438                           indf2	equ	0xFDF
 36439                           postinc2	equ	0xFDE
 36440                           postdec2	equ	0xFDD
 36441                           plusw2	equ	0xFDB
 36442                           fsr2h	equ	0xFDA
 36443                           fsr2l	equ	0xFD9
 36444                           status	equ	0xFD8
 36445                           
 36446 ;; *************** function _flash_sector_write *****************
 36447 ;; Defined at:
 36448 ;;		line 434 in file "flash.c"
 36449 ;; Parameters:    Size  Location     Type
 36450 ;;  page            2   31[BANK0 ] unsigned int 
 36451 ;;  data            2   33[BANK0 ] PTR unsigned char 
 36452 ;;		 -> buffer(512), msd_buffer(512), 
 36453 ;; Auto vars:     Size  Location     Type
 36454 ;;  match           1   35[BANK0 ] enum E7061
 36455 ;; Return value:  Size  Location     Type
 36456 ;;                  1    wreg      void 
 36457 ;; Registers used:
 36458 ;;		wreg, status,2, status,0, cstack
 36459 ;; Tracked objects:
 36460 ;;		On entry : 0/0
 36461 ;;		On exit  : 0/0
 36462 ;;		Unchanged: 0/0
 36463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36464 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36467 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36468 ;;Total ram usage:        5 bytes
 36469 ;; Hardware stack levels used:    1
 36470 ;; Hardware stack levels required when called:   14
 36471 ;; This function calls:
 36472 ;;		__flash_compare_page_to_buffer
 36473 ;;		__flash_write_page_from_buffer
 36474 ;;		__flash_write_to_buffer
 36475 ;; This function is called by:
 36476 ;;		_ExternalFlash_SectorWrite
 36477 ;;		__make_cluster_chain
 36478 ;;		_fat_restore_mbr_fbr
 36479 ;;		_fat_format
 36480 ;; This function uses a non-reentrant model
 36481 ;;
 36482                           
 36483                           	psect	text139
 36484  0150C2                     __ptext139:
 36485                           	opt stack 0
 36486  0150C2                     _flash_sector_write:
 36487                           	opt stack 13
 36488                           
 36489                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 36490                           
 36491                           ;incstack = 0
 36492  0150C2  0E00               	movlw	0
 36493  0150C4  0100               	movlb	0	; () banked
 36494  0150C6  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 36495  0150C8  0E00               	movlw	0
 36496  0150CA  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 36497  0150CC  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 36498  0150D0  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 36499  0150D4  0E02               	movlw	2
 36500  0150D6  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 36501  0150D8  0E00               	movlw	0
 36502  0150DA  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 36503  0150DC  0E00               	movlw	0
 36504  0150DE  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 36505  0150E0  ECC0  F0A7         	call	__flash_write_to_buffer	;wreg free
 36506                           
 36507                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36508  0150E4  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 36509  0150E8  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 36510  0150EC  0E00               	movlw	0
 36511  0150EE  0100               	movlb	0	; () banked
 36512  0150F0  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 36513  0150F2  EC48  F0A0         	call	__flash_compare_page_to_buffer	;wreg free
 36514  0150F6  0100               	movlb	0	; () banked
 36515  0150F8  6F83               	movwf	flash_sector_write@match& (0+255),b
 36516                           
 36517                           ; BSR set to: 0
 36518                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 36519  0150FA  0583               	decf	flash_sector_write@match& (0+255),w,b
 36520  0150FC  A4D8               	btfss	status,2,c
 36521  0150FE  0012               	return	
 36522                           
 36523                           ; BSR set to: 0
 36524                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36525  015100  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 36526  015104  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 36527  015108  0E00               	movlw	0
 36528  01510A  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 36529  01510C  EC61  F0A5         	call	__flash_write_page_from_buffer	;wreg free
 36530  015110  0012               	return	
 36531  015112                     __end_of_flash_sector_write:
 36532                           	opt stack 0
 36533                           tosu	equ	0xFFF
 36534                           tosh	equ	0xFFE
 36535                           tosl	equ	0xFFD
 36536                           pclath	equ	0xFFA
 36537                           tblptru	equ	0xFF8
 36538                           tblptrh	equ	0xFF7
 36539                           tblptrl	equ	0xFF6
 36540                           tablat	equ	0xFF5
 36541                           prodh	equ	0xFF4
 36542                           prodl	equ	0xFF3
 36543                           intcon	equ	0xFF2
 36544                           postinc0	equ	0xFEE
 36545                           wreg	equ	0xFE8
 36546                           indf1	equ	0xFE7
 36547                           postinc1	equ	0xFE6
 36548                           postdec1	equ	0xFE5
 36549                           plusw1	equ	0xFE3
 36550                           fsr1h	equ	0xFE2
 36551                           fsr1l	equ	0xFE1
 36552                           indf2	equ	0xFDF
 36553                           postinc2	equ	0xFDE
 36554                           postdec2	equ	0xFDD
 36555                           plusw2	equ	0xFDB
 36556                           fsr2h	equ	0xFDA
 36557                           fsr2l	equ	0xFD9
 36558                           status	equ	0xFD8
 36559                           
 36560 ;; *************** function __flash_write_to_buffer *****************
 36561 ;; Defined at:
 36562 ;;		line 236 in file "flash.c"
 36563 ;; Parameters:    Size  Location     Type
 36564 ;;  start           2   19[BANK0 ] unsigned int 
 36565 ;;  data            2   21[BANK0 ] PTR unsigned char 
 36566 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36567 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36568 ;;  data_length     2   23[BANK0 ] unsigned int 
 36569 ;;  buffer          1   25[BANK0 ] enum E7057
 36570 ;; Auto vars:     Size  Location     Type
 36571 ;;  command         4   26[BANK0 ] unsigned char [4]
 36572 ;; Return value:  Size  Location     Type
 36573 ;;                  1    wreg      void 
 36574 ;; Registers used:
 36575 ;;		wreg, status,2, status,0, cstack
 36576 ;; Tracked objects:
 36577 ;;		On entry : 0/0
 36578 ;;		On exit  : 0/0
 36579 ;;		Unchanged: 0/0
 36580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36581 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36582 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36584 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36585 ;;Total ram usage:       11 bytes
 36586 ;; Hardware stack levels used:    1
 36587 ;; Hardware stack levels required when called:   13
 36588 ;; This function calls:
 36589 ;;		__flash_is_busy
 36590 ;;		_spi_tx_tx
 36591 ;; This function is called by:
 36592 ;;		_flash_sector_write
 36593 ;;		_flash_partial_write
 36594 ;;		_flash_write_to_buffer
 36595 ;; This function uses a non-reentrant model
 36596 ;;
 36597                           
 36598                           	psect	text140
 36599  014F80                     __ptext140:
 36600                           	opt stack 0
 36601  014F80                     __flash_write_to_buffer:
 36602                           	opt stack 13
 36603                           
 36604                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 36605                           
 36606                           ;incstack = 0
 36607  014F80  ECC6  F0AD         	call	__flash_is_busy	;wreg free
 36608  014F84  0900               	iorlw	0
 36609  014F86  A4D8               	btfss	status,2,c
 36610  014F88  D7FB               	goto	__flash_write_to_buffer
 36611                           
 36612                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 36613  014F8A  0100               	movlb	0	; () banked
 36614  014F8C  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 36615  014F8E  A4D8               	btfss	status,2,c
 36616  014F90  D002               	goto	l1581
 36617                           
 36618                           ; BSR set to: 0
 36619                           ;flash.c: 245: command[0] = 0x84;
 36620  014F92  0E84               	movlw	132
 36621  014F94  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36622  014F96                     l1581:
 36623                           
 36624                           ; BSR set to: 0
 36625                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 36626                           
 36627                           ; BSR set to: 0
 36628  014F96  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 36629  014F98  A4D8               	btfss	status,2,c
 36630  014F9A  D002               	goto	l1582
 36631                           
 36632                           ; BSR set to: 0
 36633                           ;flash.c: 247: command[0] = 0x87;
 36634  014F9C  0E87               	movlw	135
 36635  014F9E  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36636  014FA0                     l1582:
 36637                           
 36638                           ; BSR set to: 0
 36639                           ;flash.c: 249: command[1] = 0x00;
 36640  014FA0  0E00               	movlw	0
 36641  014FA2  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 36642                           
 36643                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36644  014FA4  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 36645  014FA6  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 36646                           
 36647                           ; BSR set to: 0
 36648                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 36649  014FA8  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36650                           
 36651                           ; BSR set to: 0
 36652                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 36653  014FAC  0E7A               	movlw	low __flash_write_to_buffer@command
 36654  014FAE  6F60               	movwf	spi_tx_tx@command& (0+255),b
 36655  014FB0  0E00               	movlw	high __flash_write_to_buffer@command
 36656  014FB2  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 36657  014FB4  0E00               	movlw	0
 36658  014FB6  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 36659  014FB8  0E04               	movlw	4
 36660  014FBA  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 36661  014FBC  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36662  014FC0  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36663  014FC4  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36664  014FC8  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36665  014FCC  ECEF  F09D         	call	_spi_tx_tx	;wreg free
 36666  014FD0  0012               	return		;funcret
 36667  014FD2                     __end_of__flash_write_to_buffer:
 36668                           	opt stack 0
 36669                           tosu	equ	0xFFF
 36670                           tosh	equ	0xFFE
 36671                           tosl	equ	0xFFD
 36672                           pclath	equ	0xFFA
 36673                           tblptru	equ	0xFF8
 36674                           tblptrh	equ	0xFF7
 36675                           tblptrl	equ	0xFF6
 36676                           tablat	equ	0xFF5
 36677                           prodh	equ	0xFF4
 36678                           prodl	equ	0xFF3
 36679                           intcon	equ	0xFF2
 36680                           postinc0	equ	0xFEE
 36681                           wreg	equ	0xFE8
 36682                           indf1	equ	0xFE7
 36683                           postinc1	equ	0xFE6
 36684                           postdec1	equ	0xFE5
 36685                           plusw1	equ	0xFE3
 36686                           fsr1h	equ	0xFE2
 36687                           fsr1l	equ	0xFE1
 36688                           indf2	equ	0xFDF
 36689                           postinc2	equ	0xFDE
 36690                           postdec2	equ	0xFDD
 36691                           plusw2	equ	0xFDB
 36692                           fsr2h	equ	0xFDA
 36693                           fsr2l	equ	0xFD9
 36694                           status	equ	0xFD8
 36695                           
 36696 ;; *************** function _spi_tx_tx *****************
 36697 ;; Defined at:
 36698 ;;		line 146 in file "spi.c"
 36699 ;; Parameters:    Size  Location     Type
 36700 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36701 ;;		 -> _flash_write_to_buffer@command(4), 
 36702 ;;  command_leng    2    2[BANK0 ] unsigned int 
 36703 ;;  data            2    4[BANK0 ] PTR unsigned char 
 36704 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36705 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36706 ;;  data_length     2    6[BANK0 ] unsigned int 
 36707 ;; Auto vars:     Size  Location     Type
 36708 ;;		None
 36709 ;; Return value:  Size  Location     Type
 36710 ;;                  1    wreg      void 
 36711 ;; Registers used:
 36712 ;;		wreg, status,2, status,0
 36713 ;; Tracked objects:
 36714 ;;		On entry : 0/0
 36715 ;;		On exit  : 0/0
 36716 ;;		Unchanged: 0/0
 36717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36718 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36720 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36721 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36722 ;;Total ram usage:       12 bytes
 36723 ;; Hardware stack levels used:    1
 36724 ;; Hardware stack levels required when called:   10
 36725 ;; This function calls:
 36726 ;;		Nothing
 36727 ;; This function is called by:
 36728 ;;		__flash_write_to_buffer
 36729 ;; This function uses a non-reentrant model
 36730 ;;
 36731                           
 36732                           	psect	text141
 36733  013BDE                     __ptext141:
 36734                           	opt stack 0
 36735  013BDE                     _spi_tx_tx:
 36736                           	opt stack 15
 36737                           
 36738                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 36739                           
 36740                           ;incstack = 0
 36741  013BDE  9E88               	bcf	3976,7,c	;volatile
 36742                           
 36743                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 36744  013BE0  9C88               	bcf	3976,6,c	;volatile
 36745                           
 36746                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 36747  013BE2  8A88               	bsf	3976,5,c	;volatile
 36748                           
 36749                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 36750  013BE4  9888               	bcf	3976,4,c	;volatile
 36751                           
 36752                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 36753  013BE6  9688               	bcf	3976,3,c	;volatile
 36754                           
 36755                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 36756  013BE8  8488               	bsf	3976,2,c	;volatile
 36757                           
 36758                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 36759  013BEA  9288               	bcf	3976,1,c	;volatile
 36760                           
 36761                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 36762  013BEC  9886               	bcf	3974,4,c	;volatile
 36763  013BEE  9A86               	bcf	3974,5,c	;volatile
 36764  013BF0  9C86               	bcf	3974,6,c	;volatile
 36765  013BF2  9E86               	bcf	3974,7,c	;volatile
 36766                           
 36767                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 36768  013BF4  9086               	bcf	3974,0,c	;volatile
 36769  013BF6  9286               	bcf	3974,1,c	;volatile
 36770  013BF8  9486               	bcf	3974,2,c	;volatile
 36771  013BFA  9686               	bcf	3974,3,c	;volatile
 36772                           
 36773                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36774  013BFC  0100               	movlb	0	; () banked
 36775  013BFE  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 36776  013C00  6E6A               	movwf	3946,c	;volatile
 36777                           
 36778                           ; BSR set to: 0
 36779                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36780  013C02  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 36781                           
 36782                           ; BSR set to: 0
 36783                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36784  013C06  0EFF               	movlw	255
 36785  013C08  6F68               	movwf	??_spi_tx_tx& (0+255),b
 36786  013C0A  0EFF               	movlw	255
 36787  013C0C  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 36788  013C0E  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 36789  013C12  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 36790  013C16  5168               	movf	??_spi_tx_tx& (0+255),w,b
 36791  013C18  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 36792  013C1A  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 36793  013C1C  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 36794  013C1E  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36795  013C22  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 36796  013C24  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 36797  013C26  6E66               	movwf	3942,c	;volatile
 36798                           
 36799                           ; BSR set to: 0
 36800                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36801  013C28  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 36802  013C2A  6E67               	movwf	3943,c	;volatile
 36803                           
 36804                           ; BSR set to: 0
 36805                           ;spi.c: 174: LATDbits.LD7 = 0;
 36806  013C2C  9E8C               	bcf	3980,7,c	;volatile
 36807                           
 36808                           ; BSR set to: 0
 36809                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 36810  013C2E  8088               	bsf	3976,0,c	;volatile
 36811  013C30                     
 36812                           ; BSR set to: 0
 36813  013C30  B088               	btfsc	3976,0,c	;volatile
 36814  013C32  D7FE               	goto	l2197
 36815                           
 36816                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36817  013C34  0100               	movlb	0	; () banked
 36818  013C36  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 36819  013C38  6E6A               	movwf	3946,c	;volatile
 36820                           
 36821                           ; BSR set to: 0
 36822                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36823  013C3A  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 36824                           
 36825                           ; BSR set to: 0
 36826                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36827  013C3E  0EFF               	movlw	255
 36828  013C40  6F68               	movwf	??_spi_tx_tx& (0+255),b
 36829  013C42  0EFF               	movlw	255
 36830  013C44  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 36831  013C46  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 36832  013C4A  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 36833  013C4E  5168               	movf	??_spi_tx_tx& (0+255),w,b
 36834  013C50  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 36835  013C52  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 36836  013C54  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 36837  013C56  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36838  013C5A  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 36839  013C5C  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 36840  013C5E  6E66               	movwf	3942,c	;volatile
 36841                           
 36842                           ; BSR set to: 0
 36843                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36844  013C60  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 36845  013C62  6E67               	movwf	3943,c	;volatile
 36846                           
 36847                           ; BSR set to: 0
 36848                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 36849  013C64  8088               	bsf	3976,0,c	;volatile
 36850  013C66                     
 36851                           ; BSR set to: 0
 36852  013C66  B088               	btfsc	3976,0,c	;volatile
 36853  013C68  D7FE               	goto	l2200
 36854                           
 36855                           ;spi.c: 193: LATDbits.LD7 = 1;
 36856  013C6A  8E8C               	bsf	3980,7,c	;volatile
 36857  013C6C  0012               	return		;funcret
 36858  013C6E                     __end_of_spi_tx_tx:
 36859                           	opt stack 0
 36860                           tosu	equ	0xFFF
 36861                           tosh	equ	0xFFE
 36862                           tosl	equ	0xFFD
 36863                           pclath	equ	0xFFA
 36864                           tblptru	equ	0xFF8
 36865                           tblptrh	equ	0xFF7
 36866                           tblptrl	equ	0xFF6
 36867                           tablat	equ	0xFF5
 36868                           prodh	equ	0xFF4
 36869                           prodl	equ	0xFF3
 36870                           intcon	equ	0xFF2
 36871                           postinc0	equ	0xFEE
 36872                           wreg	equ	0xFE8
 36873                           indf1	equ	0xFE7
 36874                           postinc1	equ	0xFE6
 36875                           postdec1	equ	0xFE5
 36876                           plusw1	equ	0xFE3
 36877                           fsr1h	equ	0xFE2
 36878                           fsr1l	equ	0xFE1
 36879                           indf2	equ	0xFDF
 36880                           postinc2	equ	0xFDE
 36881                           postdec2	equ	0xFDD
 36882                           plusw2	equ	0xFDB
 36883                           fsr2h	equ	0xFDA
 36884                           fsr2l	equ	0xFD9
 36885                           status	equ	0xFD8
 36886                           
 36887 ;; *************** function __flash_write_page_from_buffer *****************
 36888 ;; Defined at:
 36889 ;;		line 258 in file "flash.c"
 36890 ;; Parameters:    Size  Location     Type
 36891 ;;  page            2   19[BANK0 ] unsigned int 
 36892 ;;  buffer          1   21[BANK0 ] enum E7057
 36893 ;; Auto vars:     Size  Location     Type
 36894 ;;  command         4   25[BANK0 ] unsigned char [4]
 36895 ;; Return value:  Size  Location     Type
 36896 ;;                  1    wreg      void 
 36897 ;; Registers used:
 36898 ;;		wreg, status,2, status,0, cstack
 36899 ;; Tracked objects:
 36900 ;;		On entry : 0/0
 36901 ;;		On exit  : 0/0
 36902 ;;		Unchanged: 0/0
 36903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36904 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36905 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36906 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36907 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36908 ;;Total ram usage:       10 bytes
 36909 ;; Hardware stack levels used:    1
 36910 ;; Hardware stack levels required when called:   13
 36911 ;; This function calls:
 36912 ;;		__flash_is_busy
 36913 ;;		_spi_tx
 36914 ;; This function is called by:
 36915 ;;		_flash_sector_write
 36916 ;;		_flash_partial_write
 36917 ;;		_flash_write_page_from_buffer
 36918 ;; This function uses a non-reentrant model
 36919 ;;
 36920                           
 36921                           	psect	text142
 36922  014AC2                     __ptext142:
 36923                           	opt stack 0
 36924  014AC2                     __flash_write_page_from_buffer:
 36925                           	opt stack 13
 36926                           
 36927                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 36928                           
 36929                           ;incstack = 0
 36930  014AC2  ECC6  F0AD         	call	__flash_is_busy	;wreg free
 36931  014AC6  0900               	iorlw	0
 36932  014AC8  A4D8               	btfss	status,2,c
 36933  014ACA  D7FB               	goto	__flash_write_page_from_buffer
 36934                           
 36935                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 36936  014ACC  0100               	movlb	0	; () banked
 36937  014ACE  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 36938  014AD0  A4D8               	btfss	status,2,c
 36939  014AD2  D002               	goto	l1589
 36940                           
 36941                           ; BSR set to: 0
 36942                           ;flash.c: 267: command[0] = 0x83;
 36943  014AD4  0E83               	movlw	131
 36944  014AD6  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 36945  014AD8                     l1589:
 36946                           
 36947                           ; BSR set to: 0
 36948                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 36949                           
 36950                           ; BSR set to: 0
 36951  014AD8  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 36952  014ADA  A4D8               	btfss	status,2,c
 36953  014ADC  D002               	goto	l1590
 36954                           
 36955                           ; BSR set to: 0
 36956                           ;flash.c: 269: command[0] = 0x86;
 36957  014ADE  0E86               	movlw	134
 36958  014AE0  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 36959  014AE2                     l1590:
 36960                           
 36961                           ; BSR set to: 0
 36962                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36963                           
 36964                           ; BSR set to: 0
 36965  014AE2  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 36966  014AE6  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 36967  014AEA  0E07               	movlw	7
 36968  014AEC  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 36969  014AEE                     u10185:
 36970  014AEE  90D8               	bcf	status,0,c
 36971  014AF0  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 36972  014AF2  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 36973  014AF4  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 36974  014AF6  D7FB               	goto	u10185
 36975  014AF8  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 36976  014AFA  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 36977                           
 36978                           ; BSR set to: 0
 36979                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 36980  014AFC  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 36981  014AFE  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 36982  014B00  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 36983                           
 36984                           ;flash.c: 273: command[3] = 0x00;
 36985  014B02  0E00               	movlw	0
 36986  014B04  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 36987                           
 36988                           ; BSR set to: 0
 36989                           ;flash.c: 276: spi_tx(command, 4);
 36990  014B06  0E79               	movlw	low __flash_write_page_from_buffer@command
 36991  014B08  6F60               	movwf	spi_tx@data& (0+255),b
 36992  014B0A  0E00               	movlw	high __flash_write_page_from_buffer@command
 36993  014B0C  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 36994  014B0E  0E00               	movlw	0
 36995  014B10  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 36996  014B12  0E04               	movlw	4
 36997  014B14  6F62               	movwf	spi_tx@length& (0+255),b
 36998  014B16  EC8E  F0A5         	call	_spi_tx	;wreg free
 36999  014B1A  0012               	return		;funcret
 37000  014B1C                     __end_of__flash_write_page_from_buffer:
 37001                           	opt stack 0
 37002                           tosu	equ	0xFFF
 37003                           tosh	equ	0xFFE
 37004                           tosl	equ	0xFFD
 37005                           pclath	equ	0xFFA
 37006                           tblptru	equ	0xFF8
 37007                           tblptrh	equ	0xFF7
 37008                           tblptrl	equ	0xFF6
 37009                           tablat	equ	0xFF5
 37010                           prodh	equ	0xFF4
 37011                           prodl	equ	0xFF3
 37012                           intcon	equ	0xFF2
 37013                           postinc0	equ	0xFEE
 37014                           wreg	equ	0xFE8
 37015                           indf1	equ	0xFE7
 37016                           postinc1	equ	0xFE6
 37017                           postdec1	equ	0xFE5
 37018                           plusw1	equ	0xFE3
 37019                           fsr1h	equ	0xFE2
 37020                           fsr1l	equ	0xFE1
 37021                           indf2	equ	0xFDF
 37022                           postinc2	equ	0xFDE
 37023                           postdec2	equ	0xFDD
 37024                           plusw2	equ	0xFDB
 37025                           fsr2h	equ	0xFDA
 37026                           fsr2l	equ	0xFD9
 37027                           status	equ	0xFD8
 37028                           
 37029 ;; *************** function __flash_compare_page_to_buffer *****************
 37030 ;; Defined at:
 37031 ;;		line 176 in file "flash.c"
 37032 ;; Parameters:    Size  Location     Type
 37033 ;;  page            2   19[BANK0 ] unsigned int 
 37034 ;;  buffer          1   21[BANK0 ] enum E7057
 37035 ;; Auto vars:     Size  Location     Type
 37036 ;;  command         4   27[BANK0 ] unsigned char [4]
 37037 ;;  status          2   25[BANK0 ] unsigned int 
 37038 ;; Return value:  Size  Location     Type
 37039 ;;                  1    wreg      enum E7061
 37040 ;; Registers used:
 37041 ;;		wreg, status,2, status,0, cstack
 37042 ;; Tracked objects:
 37043 ;;		On entry : 0/0
 37044 ;;		On exit  : 0/0
 37045 ;;		Unchanged: 0/0
 37046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37047 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37048 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37049 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37050 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37051 ;;Total ram usage:       12 bytes
 37052 ;; Hardware stack levels used:    1
 37053 ;; Hardware stack levels required when called:   13
 37054 ;; This function calls:
 37055 ;;		__flash_get_status
 37056 ;;		__flash_is_busy
 37057 ;;		_spi_tx
 37058 ;; This function is called by:
 37059 ;;		_flash_sector_write
 37060 ;;		_flash_partial_write
 37061 ;; This function uses a non-reentrant model
 37062 ;;
 37063                           
 37064                           	psect	text143
 37065  014090                     __ptext143:
 37066                           	opt stack 0
 37067  014090                     __flash_compare_page_to_buffer:
 37068                           	opt stack 13
 37069                           
 37070                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 37071                           
 37072                           ;incstack = 0
 37073  014090  ECC6  F0AD         	call	__flash_is_busy	;wreg free
 37074  014094  0900               	iorlw	0
 37075  014096  A4D8               	btfss	status,2,c
 37076  014098  D7FB               	goto	__flash_compare_page_to_buffer
 37077                           
 37078                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 37079  01409A  0100               	movlb	0	; () banked
 37080  01409C  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37081  01409E  A4D8               	btfss	status,2,c
 37082  0140A0  D002               	goto	l1562
 37083                           
 37084                           ; BSR set to: 0
 37085                           ;flash.c: 186: command[0] = 0x60;
 37086  0140A2  0E60               	movlw	96
 37087  0140A4  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37088  0140A6                     l1562:
 37089                           
 37090                           ; BSR set to: 0
 37091                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 37092                           
 37093                           ; BSR set to: 0
 37094  0140A6  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37095  0140A8  A4D8               	btfss	status,2,c
 37096  0140AA  D002               	goto	l1563
 37097                           
 37098                           ; BSR set to: 0
 37099                           ;flash.c: 188: command[0] = 0x60;
 37100  0140AC  0E60               	movlw	96
 37101  0140AE  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37102  0140B0                     l1563:
 37103                           
 37104                           ; BSR set to: 0
 37105                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37106                           
 37107                           ; BSR set to: 0
 37108  0140B0  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 37109  0140B4  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 37110  0140B8  0E07               	movlw	7
 37111  0140BA  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 37112  0140BC                     u10095:
 37113  0140BC  90D8               	bcf	status,0,c
 37114  0140BE  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 37115  0140C0  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 37116  0140C2  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 37117  0140C4  D7FB               	goto	u10095
 37118  0140C6  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 37119  0140C8  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 37120                           
 37121                           ; BSR set to: 0
 37122                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 37123  0140CA  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37124  0140CC  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37125  0140CE  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 37126                           
 37127                           ;flash.c: 192: command[3] = 0x00;
 37128  0140D0  0E00               	movlw	0
 37129  0140D2  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 37130                           
 37131                           ; BSR set to: 0
 37132                           ;flash.c: 195: spi_tx(command, 4);
 37133  0140D4  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 37134  0140D6  6F60               	movwf	spi_tx@data& (0+255),b
 37135  0140D8  0E00               	movlw	high __flash_compare_page_to_buffer@command
 37136  0140DA  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37137  0140DC  0E00               	movlw	0
 37138  0140DE  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37139  0140E0  0E04               	movlw	4
 37140  0140E2  6F62               	movwf	spi_tx@length& (0+255),b
 37141  0140E4  EC8E  F0A5         	call	_spi_tx	;wreg free
 37142  0140E8  ECC6  F0AD         	call	__flash_is_busy	;wreg free
 37143  0140EC  0900               	iorlw	0
 37144  0140EE  A4D8               	btfss	status,2,c
 37145  0140F0  D7FB               	goto	l1565
 37146                           
 37147                           ;flash.c: 201: status = _flash_get_status();
 37148  0140F2  ECB8  F0AB         	call	__flash_get_status	;wreg free
 37149  0140F6  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 37150  0140FA  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 37151                           
 37152                           ;flash.c: 204: if(status & 0b0000000001000000)
 37153  0140FE  0100               	movlb	0	; () banked
 37154  014100  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 37155  014102  D002               	goto	l1567
 37156                           
 37157                           ; BSR set to: 0
 37158                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 37159  014104  0E01               	movlw	1
 37160                           
 37161                           ; BSR set to: 0
 37162                           ;flash.c: 208: }
 37163                           
 37164                           ; BSR set to: 0
 37165  014106  0012               	return	
 37166  014108                     l1567:
 37167                           
 37168                           ; BSR set to: 0
 37169                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 37170                           
 37171                           ; BSR set to: 0
 37172  014108  0E00               	movlw	0
 37173                           
 37174                           ; BSR set to: 0
 37175  01410A  0012               	return	
 37176  01410C                     __end_of__flash_compare_page_to_buffer:
 37177                           	opt stack 0
 37178                           tosu	equ	0xFFF
 37179                           tosh	equ	0xFFE
 37180                           tosl	equ	0xFFD
 37181                           pclath	equ	0xFFA
 37182                           tblptru	equ	0xFF8
 37183                           tblptrh	equ	0xFF7
 37184                           tblptrl	equ	0xFF6
 37185                           tablat	equ	0xFF5
 37186                           prodh	equ	0xFF4
 37187                           prodl	equ	0xFF3
 37188                           intcon	equ	0xFF2
 37189                           postinc0	equ	0xFEE
 37190                           wreg	equ	0xFE8
 37191                           indf1	equ	0xFE7
 37192                           postinc1	equ	0xFE6
 37193                           postdec1	equ	0xFE5
 37194                           plusw1	equ	0xFE3
 37195                           fsr1h	equ	0xFE2
 37196                           fsr1l	equ	0xFE1
 37197                           indf2	equ	0xFDF
 37198                           postinc2	equ	0xFDE
 37199                           postdec2	equ	0xFDD
 37200                           plusw2	equ	0xFDB
 37201                           fsr2h	equ	0xFDA
 37202                           fsr2l	equ	0xFD9
 37203                           status	equ	0xFD8
 37204                           
 37205 ;; *************** function _MSDReadHandler *****************
 37206 ;; Defined at:
 37207 ;;		line 1038 in file "usb_device_msd.c"
 37208 ;; Parameters:    Size  Location     Type
 37209 ;;		None
 37210 ;; Auto vars:     Size  Location     Type
 37211 ;;		None
 37212 ;; Return value:  Size  Location     Type
 37213 ;;                  1    wreg      unsigned char 
 37214 ;; Registers used:
 37215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37216 ;; Tracked objects:
 37217 ;;		On entry : 0/0
 37218 ;;		On exit  : 0/0
 37219 ;;		Unchanged: 0/0
 37220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37223 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37224 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37225 ;;Total ram usage:        4 bytes
 37226 ;; Hardware stack levels used:    1
 37227 ;; Hardware stack levels required when called:   16
 37228 ;; This function calls:
 37229 ;;		_ExternalFlash_SectorRead
 37230 ;;		_MSDCheckForErrorCases
 37231 ;;		_USBStallEndpoint
 37232 ;;		_USBTransferOnePacket
 37233 ;; This function is called by:
 37234 ;;		_MSDProcessCommandMediaPresent
 37235 ;; This function uses a non-reentrant model
 37236 ;;
 37237                           
 37238                           	psect	text144
 37239  00E7DE                     __ptext144:
 37240                           	opt stack 0
 37241  00E7DE                     _MSDReadHandler:
 37242                           	opt stack 10
 37243                           
 37244                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 37245                           
 37246                           ; BSR set to: 0
 37247                           ;incstack = 0
 37248  00E7DE  D0DF               	goto	l681
 37249  00E7E0                     l682:
 37250                           
 37251                           ; BSR set to: 1
 37252                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 37253  00E7E0  C211  F124         	movff	_gblCBW+17,_LBA+3
 37254                           
 37255                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 37256  00E7E4  C212  F123         	movff	_gblCBW+18,_LBA+2
 37257                           
 37258                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 37259  00E7E8  C213  F122         	movff	_gblCBW+19,_LBA+1
 37260                           
 37261                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 37262  00E7EC  C214  F121         	movff	_gblCBW+20,_LBA
 37263                           
 37264                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 37265  00E7F0  C216  F13C         	movff	_gblCBW+22,_TransferLength+1
 37266                           
 37267                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 37268  00E7F4  C217  F13B         	movff	_gblCBW+23,_TransferLength
 37269                           
 37270                           ; BSR set to: 1
 37271                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 37272  00E7F8  513B               	movf	_TransferLength& (0+255),w,b
 37273  00E7FA  0100               	movlb	0	; () banked
 37274  00E7FC  6F95               	movwf	??_MSDReadHandler& (0+255),b
 37275  00E7FE  0101               	movlb	1	; () banked
 37276  00E800  513C               	movf	(_TransferLength+1)& (0+255),w,b
 37277  00E802  0100               	movlb	0	; () banked
 37278  00E804  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 37279  00E806  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 37280  00E808  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 37281  00E80A  0E09               	movlw	9
 37282  00E80C                     u11115:
 37283  00E80C  90D8               	bcf	status,0,c
 37284  00E80E  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 37285  00E810  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 37286  00E812  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 37287  00E814  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 37288  00E816  2EE8               	decfsz	wreg,f,c
 37289  00E818  D7F9               	goto	u11115
 37290  00E81A  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 37291  00E81E  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 37292  00E822  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 37293  00E826  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 37294  00E82A  ECE2  F086         	call	_MSDCheckForErrorCases	;wreg free
 37295  00E82E  0900               	iorlw	0
 37296  00E830  A4D8               	btfss	status,2,c
 37297  00E832  D0C7               	goto	l684
 37298                           
 37299                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 37300                           
 37301                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 37302  00E834  0E01               	movlw	1
 37303  00E836  0101               	movlb	1	; () banked
 37304  00E838  6F56               	movwf	_MSDReadState& (0+255),b
 37305  00E83A                     
 37306                           ; BSR set to: 1
 37307                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 37308                           
 37309                           ; BSR set to: 1
 37310  00E83A  513B               	movf	_TransferLength& (0+255),w,b
 37311  00E83C  113C               	iorwf	(_TransferLength+1)& (0+255),w,b
 37312  00E83E  A4D8               	btfss	status,2,c
 37313  00E840  D002               	goto	l686
 37314                           
 37315                           ; BSR set to: 1
 37316                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 37317  00E842  0E00               	movlw	0
 37318  00E844  D04A               	goto	L54
 37319  00E846                     l686:
 37320                           
 37321                           ; BSR set to: 1
 37322                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 37323                           
 37324                           ; BSR set to: 1
 37325  00E846  073B               	decf	_TransferLength& (0+255),f,b
 37326  00E848  A0D8               	btfss	status,0,c
 37327  00E84A  073C               	decf	(_TransferLength+1)& (0+255),f,b
 37328                           
 37329                           ; BSR set to: 1
 37330                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 37331  00E84C  0E02               	movlw	2
 37332  00E84E  6F56               	movwf	_MSDReadState& (0+255),b
 37333  00E850                     
 37334                           ; BSR set to: 1
 37335                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 37336                           
 37337                           ; BSR set to: 1
 37338  00E850  513F               	movf	_USBMSDInHandle& (0+255),w,b
 37339  00E852  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37340  00E854  B4D8               	btfsc	status,2,c
 37341  00E856  D006               	goto	l688
 37342                           
 37343                           ; BSR set to: 1
 37344  00E858  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 37345  00E85C  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37346  00E860  BEDF               	btfsc	indf2,7,c
 37347  00E862  D0AF               	goto	l684
 37348  00E864                     l688:
 37349                           
 37350                           ; BSR set to: 1
 37351                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 37352                           
 37353                           ; BSR set to: 1
 37354  00E864  C2AC  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 37355  00E868  C2AD  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 37356  00E86C  C121  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 37357  00E870  C122  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 37358  00E874  C123  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 37359  00E878  C124  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 37360  00E87C  0E00               	movlw	0
 37361  00E87E  0100               	movlb	0	; () banked
 37362  00E880  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 37363  00E882  0E06               	movlw	6
 37364  00E884  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 37365  00E886  EE22  F0A3         	lfsr	2,_LUN+12
 37366  00E88A  D801               	call	u11168
 37367  00E88C  D00A               	goto	u11169
 37368  00E88E                     u11168:
 37369  00E88E  0005               	push	
 37370  00E890  6EFA               	movwf	pclath,c
 37371  00E892  50DE               	movf	postinc2,w,c
 37372  00E894  6EFD               	movwf	tosl,c
 37373  00E896  50DE               	movf	postinc2,w,c
 37374  00E898  6EFE               	movwf	tosh,c
 37375  00E89A  50DE               	movf	postinc2,w,c
 37376  00E89C  6EFF               	movwf	tosu,c
 37377  00E89E  50FA               	movf	pclath,w,c
 37378  00E8A0  0012               	return		;indir
 37379  00E8A2                     u11169:
 37380  00E8A2  06E8               	decf	wreg,f,c
 37381  00E8A4  B4D8               	btfsc	status,2,c
 37382  00E8A6  D01B               	goto	l691
 37383                           
 37384                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 37385  00E8A8  0E64               	movlw	100
 37386  00E8AA  0101               	movlb	1	; () banked
 37387  00E8AC  6154               	cpfslt	_MSDRetryAttempt& (0+255),b
 37388  00E8AE  D002               	goto	l690
 37389                           
 37390                           ; BSR set to: 1
 37391                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 37392  00E8B0  2B54               	incf	_MSDRetryAttempt& (0+255),f,b
 37393                           
 37394                           ;usb_device_msd.c: 1088: break;
 37395  00E8B2  D087               	goto	l684
 37396  00E8B4                     l690:
 37397                           
 37398                           ; BSR set to: 1
 37399                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 37400                           
 37401                           ; BSR set to: 1
 37402  00E8B4  0E02               	movlw	2
 37403  00E8B6  010D               	movlb	13	; () banked
 37404  00E8B8  6F8C               	movwf	140,b	;volatile
 37405                           
 37406                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 37407  00E8BA  0102               	movlb	2	; () banked
 37408  00E8BC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 37409  00E8BE  0BF0               	andlw	-16
 37410  00E8C0  0903               	iorlw	3
 37411  00E8C2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 37412                           
 37413                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 37414  00E8C4  0E00               	movlw	0
 37415  00E8C6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 37416                           
 37417                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 37418  00E8C8  0E00               	movlw	0
 37419  00E8CA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 37420                           
 37421                           ; BSR set to: 2
 37422                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 37423  00E8CC  0E01               	movlw	1
 37424  00E8CE  0100               	movlb	0	; () banked
 37425  00E8D0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37426  00E8D2  0E02               	movlw	2
 37427  00E8D4  EC02  F089         	call	_USBStallEndpoint
 37428  00E8D8  D05F               	goto	l13086
 37429  00E8DA                     L54:
 37430  00E8DA  6F56               	movwf	_MSDReadState& (0+255),b
 37431                           
 37432                           ;usb_device_msd.c: 1109: break;
 37433  00E8DC  D072               	goto	l684
 37434  00E8DE                     l691:
 37435                           
 37436                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 37437                           
 37438                           ; BSR set to: 1
 37439                           
 37440                           ; BSR set to: 1
 37441  00E8DE  0E01               	movlw	1
 37442  00E8E0  0101               	movlb	1	; () banked
 37443  00E8E2  2721               	addwf	_LBA& (0+255),f,b
 37444  00E8E4  0E00               	movlw	0
 37445  00E8E6  2322               	addwfc	(_LBA+1)& (0+255),f,b
 37446  00E8E8  2323               	addwfc	(_LBA+2)& (0+255),f,b
 37447  00E8EA  2324               	addwfc	(_LBA+3)& (0+255),f,b
 37448                           
 37449                           ; BSR set to: 1
 37450                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 37451  00E8EC  0E00               	movlw	0
 37452  00E8EE  010D               	movlb	13	; () banked
 37453  00E8F0  6F88               	movwf	136,b	;volatile
 37454  00E8F2  0E02               	movlw	2
 37455  00E8F4  6F89               	movwf	137,b	;volatile
 37456  00E8F6  0E00               	movlw	0
 37457  00E8F8  6F8A               	movwf	138,b	;volatile
 37458  00E8FA  0E00               	movlw	0
 37459  00E8FC  6F8B               	movwf	139,b	;volatile
 37460                           
 37461                           ; BSR set to: 13
 37462                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 37463  00E8FE  0E00               	movlw	0
 37464  00E900  0101               	movlb	1	; () banked
 37465  00E902  6F43               	movwf	_ptrNextData& (0+255),b
 37466  00E904  0E06               	movlw	6
 37467  00E906  6F44               	movwf	(_ptrNextData+1)& (0+255),b
 37468                           
 37469                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 37470  00E908  0E03               	movlw	3
 37471  00E90A  6F56               	movwf	_MSDReadState& (0+255),b
 37472  00E90C                     
 37473                           ; BSR set to: 1
 37474                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 37475                           
 37476                           ; BSR set to: 1
 37477  00E90C  010D               	movlb	13	; () banked
 37478  00E90E  5188               	movf	136,w,b	;volatile
 37479  00E910  1189               	iorwf	137,w,b	;volatile
 37480  00E912  118A               	iorwf	138,w,b	;volatile
 37481  00E914  118B               	iorwf	139,w,b	;volatile
 37482  00E916  A4D8               	btfss	status,2,c
 37483  00E918  D002               	goto	l693
 37484                           
 37485                           ; BSR set to: 13
 37486                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 37487  00E91A  0E01               	movlw	1
 37488  00E91C  D03E               	goto	L56
 37489  00E91E                     l693:
 37490                           
 37491                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 37492                           
 37493                           ; BSR set to: 1
 37494  00E91E  0E04               	movlw	4
 37495  00E920  0101               	movlb	1	; () banked
 37496  00E922  6F56               	movwf	_MSDReadState& (0+255),b
 37497  00E924                     
 37498                           ; BSR set to: 1
 37499                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 37500                           
 37501                           ; BSR set to: 1
 37502  00E924  513F               	movf	_USBMSDInHandle& (0+255),w,b
 37503  00E926  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37504  00E928  B4D8               	btfsc	status,2,c
 37505  00E92A  D006               	goto	l695
 37506                           
 37507                           ; BSR set to: 1
 37508  00E92C  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 37509  00E930  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37510  00E934  BEDF               	btfsc	indf2,7,c
 37511  00E936  D045               	goto	l684
 37512  00E938                     l695:
 37513                           
 37514                           ; BSR set to: 1
 37515                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 37516                           
 37517                           ; BSR set to: 1
 37518  00E938  0E01               	movlw	1
 37519  00E93A  0100               	movlb	0	; () banked
 37520  00E93C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37521  00E93E  C143  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 37522  00E942  C144  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 37523  00E946  0E40               	movlw	64
 37524  00E948  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37525  00E94A  0E02               	movlw	2
 37526  00E94C  EC87  F089         	call	_USBTransferOnePacket
 37527  00E950  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 37528  00E954  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 37529                           
 37530                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 37531  00E958  0E03               	movlw	3
 37532  00E95A  0101               	movlb	1	; () banked
 37533  00E95C  6F56               	movwf	_MSDReadState& (0+255),b
 37534                           
 37535                           ; BSR set to: 1
 37536                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 37537  00E95E  0E40               	movlw	64
 37538  00E960  0102               	movlb	2	; () banked
 37539  00E962  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 37540  00E964  0E00               	movlw	0
 37541  00E966  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 37542  00E968  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 37543  00E96A  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 37544                           
 37545                           ; BSR set to: 2
 37546                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 37547  00E96C  0E40               	movlw	64
 37548  00E96E  010D               	movlb	13	; () banked
 37549  00E970  5F88               	subwf	136,f,b	;volatile
 37550  00E972  0E00               	movlw	0
 37551  00E974  5B89               	subwfb	137,f,b	;volatile
 37552  00E976  5B8A               	subwfb	138,f,b	;volatile
 37553  00E978  5B8B               	subwfb	139,f,b	;volatile
 37554                           
 37555                           ; BSR set to: 13
 37556                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 37557  00E97A  0E40               	movlw	64
 37558  00E97C  0101               	movlb	1	; () banked
 37559  00E97E  2743               	addwf	_ptrNextData& (0+255),f,b
 37560  00E980  0E00               	movlw	0
 37561  00E982  2344               	addwfc	(_ptrNextData+1)& (0+255),f,b
 37562                           
 37563                           ;usb_device_msd.c: 1149: break;
 37564  00E984  D01E               	goto	l684
 37565  00E986                     
 37566                           ; BSR set to: 1
 37567                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 37568                           
 37569                           ; BSR set to: 1
 37570  00E986  0E02               	movlw	2
 37571  00E988  010D               	movlb	13	; () banked
 37572  00E98A  6F8C               	movwf	140,b	;volatile
 37573                           
 37574                           ; BSR set to: 13
 37575                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 37576  00E98C  0E01               	movlw	1
 37577  00E98E  0100               	movlb	0	; () banked
 37578  00E990  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37579  00E992  0E02               	movlw	2
 37580  00E994  EC02  F089         	call	_USBStallEndpoint
 37581  00E998                     l13086:
 37582                           
 37583                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 37584  00E998  0E00               	movlw	0
 37585  00E99A                     L56:
 37586  00E99A  0101               	movlb	1	; () banked
 37587  00E99C  D79E               	goto	L54
 37588  00E99E                     l681:
 37589                           
 37590                           ; BSR set to: 1
 37591  00E99E  0101               	movlb	1	; () banked
 37592  00E9A0  5156               	movf	_MSDReadState& (0+255),w,b
 37593                           
 37594                           ; Switch size 1, requested type "space"
 37595                           ; Number of cases is 5, Range of values is 0 to 4
 37596                           ; switch strategies available:
 37597                           ; Name         Instructions Cycles
 37598                           ; simple_byte           16     9 (average)
 37599                           ;	Chosen strategy is simple_byte
 37600  00E9A2  0A00               	xorlw	0	; case 0
 37601  00E9A4  B4D8               	btfsc	status,2,c
 37602  00E9A6  D71C               	goto	l682
 37603  00E9A8  0A01               	xorlw	1	; case 1
 37604  00E9AA  B4D8               	btfsc	status,2,c
 37605  00E9AC  D746               	goto	l685
 37606  00E9AE  0A03               	xorlw	3	; case 2
 37607  00E9B0  B4D8               	btfsc	status,2,c
 37608  00E9B2  D74E               	goto	l687
 37609  00E9B4  0A01               	xorlw	1	; case 3
 37610  00E9B6  B4D8               	btfsc	status,2,c
 37611  00E9B8  D7A9               	goto	l692
 37612  00E9BA  0A07               	xorlw	7	; case 4
 37613  00E9BC  B4D8               	btfsc	status,2,c
 37614  00E9BE  D7B2               	goto	l694
 37615  00E9C0  D7E2               	goto	l696
 37616  00E9C2                     l684:
 37617                           
 37618                           ;usb_device_msd.c: 1161: return MSDReadState;
 37619                           
 37620                           ; BSR set to: 1
 37621  00E9C2  0101               	movlb	1	; () banked
 37622  00E9C4  5156               	movf	_MSDReadState& (0+255),w,b
 37623  00E9C6  0012               	return	
 37624  00E9C8                     __end_of_MSDReadHandler:
 37625                           	opt stack 0
 37626                           tosu	equ	0xFFF
 37627                           tosh	equ	0xFFE
 37628                           tosl	equ	0xFFD
 37629                           pclath	equ	0xFFA
 37630                           tblptru	equ	0xFF8
 37631                           tblptrh	equ	0xFF7
 37632                           tblptrl	equ	0xFF6
 37633                           tablat	equ	0xFF5
 37634                           prodh	equ	0xFF4
 37635                           prodl	equ	0xFF3
 37636                           intcon	equ	0xFF2
 37637                           postinc0	equ	0xFEE
 37638                           wreg	equ	0xFE8
 37639                           indf1	equ	0xFE7
 37640                           postinc1	equ	0xFE6
 37641                           postdec1	equ	0xFE5
 37642                           plusw1	equ	0xFE3
 37643                           fsr1h	equ	0xFE2
 37644                           fsr1l	equ	0xFE1
 37645                           indf2	equ	0xFDF
 37646                           postinc2	equ	0xFDE
 37647                           postdec2	equ	0xFDD
 37648                           plusw2	equ	0xFDB
 37649                           fsr2h	equ	0xFDA
 37650                           fsr2l	equ	0xFD9
 37651                           status	equ	0xFD8
 37652                           
 37653 ;; *************** function _MSDCheckForErrorCases *****************
 37654 ;; Defined at:
 37655 ;;		line 1434 in file "usb_device_msd.c"
 37656 ;; Parameters:    Size  Location     Type
 37657 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 37658 ;; Auto vars:     Size  Location     Type
 37659 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 37660 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 37661 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 37662 ;; Return value:  Size  Location     Type
 37663 ;;                  1    wreg      unsigned char 
 37664 ;; Registers used:
 37665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37666 ;; Tracked objects:
 37667 ;;		On entry : 0/0
 37668 ;;		On exit  : 0/0
 37669 ;;		Unchanged: 0/0
 37670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37671 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37672 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37674 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37675 ;;Total ram usage:        7 bytes
 37676 ;; Hardware stack levels used:    1
 37677 ;; Hardware stack levels required when called:   12
 37678 ;; This function calls:
 37679 ;;		_MSDErrorHandler
 37680 ;; This function is called by:
 37681 ;;		_MSDProcessCommandMediaPresent
 37682 ;;		_MSDReadHandler
 37683 ;;		_MSDWriteHandler
 37684 ;; This function uses a non-reentrant model
 37685 ;;
 37686                           
 37687                           	psect	text145
 37688  010DC4                     __ptext145:
 37689                           	opt stack 0
 37690  010DC4                     _MSDCheckForErrorCases:
 37691                           	opt stack 13
 37692                           
 37693                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 37694                           
 37695                           ; BSR set to: 1
 37696                           ;incstack = 0
 37697  010DC4  0100               	movlb	0	; () banked
 37698  010DC6  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37699  010DC8  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37700  010DCA  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37701  010DCC  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37702  010DCE  A4D8               	btfss	status,2,c
 37703  010DD0  D002               	goto	l726
 37704                           
 37705                           ; BSR set to: 0
 37706                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 37707  010DD2  0E01               	movlw	1
 37708  010DD4  D001               	goto	L57
 37709  010DD6                     l726:
 37710                           
 37711                           ; BSR set to: 0
 37712                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 37713                           
 37714                           ; BSR set to: 0
 37715  010DD6  0E00               	movlw	0
 37716  010DD8                     L57:
 37717  010DD8  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 37718                           
 37719                           ; BSR set to: 0
 37720                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 37721                           
 37722                           ; BSR set to: 0
 37723  010DDA  0101               	movlb	1	; () banked
 37724  010DDC  0551               	decf	_MSDHostNoData& (0+255),w,b
 37725  010DDE  A4D8               	btfss	status,2,c
 37726  010DE0  D006               	goto	l728
 37727                           
 37728                           ; BSR set to: 1
 37729  010DE2  0100               	movlb	0	; () banked
 37730  010DE4  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37731  010DE6  A4D8               	btfss	status,2,c
 37732  010DE8  D002               	goto	l728
 37733                           
 37734                           ; BSR set to: 0
 37735                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 37736  010DEA  0E00               	movlw	0
 37737                           
 37738                           ; BSR set to: 0
 37739  010DEC  0012               	return	
 37740  010DEE                     l728:
 37741                           
 37742                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 37743                           
 37744                           ; BSR set to: 0
 37745  010DEE  0100               	movlb	0	; () banked
 37746  010DF0  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37747  010DF2  0102               	movlb	2	; () banked
 37748  010DF4  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 37749  010DF6  E120               	bnz	l12678
 37750  010DF8  0100               	movlb	0	; () banked
 37751  010DFA  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37752  010DFC  0102               	movlb	2	; () banked
 37753  010DFE  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 37754  010E00  E11B               	bnz	l12678
 37755  010E02  0100               	movlb	0	; () banked
 37756  010E04  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37757  010E06  0102               	movlb	2	; () banked
 37758  010E08  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 37759  010E0A  E116               	bnz	l12678
 37760  010E0C  0100               	movlb	0	; () banked
 37761  010E0E  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37762  010E10  0102               	movlb	2	; () banked
 37763  010E12  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 37764  010E14  A4D8               	btfss	status,2,c
 37765  010E16  D010               	goto	l734
 37766                           
 37767                           ; BSR set to: 2
 37768                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 37769  010E18  0101               	movlb	1	; () banked
 37770  010E1A  0558               	decf	_MSD_State& (0+255),w,b
 37771  010E1C  A4D8               	btfss	status,2,c
 37772  010E1E  D006               	goto	l731
 37773                           
 37774                           ; BSR set to: 1
 37775                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 37776  010E20  0E2A               	movlw	42
 37777  010E22  1957               	xorwf	_MSDCommandState& (0+255),w,b
 37778  010E24  B4D8               	btfsc	status,2,c
 37779  010E26  D008               	goto	l734
 37780                           
 37781                           ; BSR set to: 1
 37782                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 37783  010E28  0E00               	movlw	0
 37784                           
 37785                           ; BSR set to: 1
 37786  010E2A  0012               	return	
 37787  010E2C                     l731:
 37788                           
 37789                           ; BSR set to: 1
 37790                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 37791                           
 37792                           ; BSR set to: 1
 37793  010E2C  0E2A               	movlw	42
 37794  010E2E  1957               	xorwf	_MSDCommandState& (0+255),w,b
 37795  010E30  A4D8               	btfss	status,2,c
 37796  010E32  D002               	goto	l734
 37797                           
 37798                           ; BSR set to: 1
 37799                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 37800  010E34  0E00               	movlw	0
 37801                           
 37802                           ; BSR set to: 1
 37803  010E36  0012               	return	
 37804  010E38                     l734:
 37805  010E38                     l12678:
 37806                           
 37807                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 37808  010E38  0102               	movlb	2	; () banked
 37809  010E3A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37810  010E3C  0100               	movlb	0	; () banked
 37811  010E3E  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37812  010E40  0102               	movlb	2	; () banked
 37813  010E42  5109               	movf	(_gblCBW+9)& (0+255),w,b
 37814  010E44  0100               	movlb	0	; () banked
 37815  010E46  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37816  010E48  0102               	movlb	2	; () banked
 37817  010E4A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 37818  010E4C  0100               	movlb	0	; () banked
 37819  010E4E  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37820  010E50  0102               	movlb	2	; () banked
 37821  010E52  510B               	movf	(_gblCBW+11)& (0+255),w,b
 37822  010E54  0100               	movlb	0	; () banked
 37823  010E56  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37824  010E58  B0D8               	btfsc	status,0,c
 37825  010E5A  D002               	goto	l735
 37826                           
 37827                           ; BSR set to: 0
 37828                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 37829  010E5C  0E01               	movlw	1
 37830  010E5E  D001               	goto	L58
 37831  010E60                     l735:
 37832                           
 37833                           ; BSR set to: 0
 37834                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 37835                           
 37836                           ; BSR set to: 0
 37837  010E60  0E00               	movlw	0
 37838  010E62                     L58:
 37839  010E62  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 37840                           
 37841                           ; BSR set to: 0
 37842                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 37843                           
 37844                           ; BSR set to: 0
 37845  010E64  0E02               	movlw	2
 37846  010E66  0101               	movlb	1	; () banked
 37847  010E68  1958               	xorwf	_MSD_State& (0+255),w,b
 37848  010E6A  A4D8               	btfss	status,2,c
 37849  010E6C  D017               	goto	l737
 37850                           
 37851                           ; BSR set to: 1
 37852                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 37853  010E6E  0E2A               	movlw	42
 37854  010E70  1957               	xorwf	_MSDCommandState& (0+255),w,b
 37855  010E72  B4D8               	btfsc	status,2,c
 37856  010E74  D006               	goto	l738
 37857                           
 37858                           ; BSR set to: 1
 37859  010E76  0100               	movlb	0	; () banked
 37860  010E78  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37861  010E7A  A4D8               	btfss	status,2,c
 37862  010E7C  D002               	goto	l738
 37863  010E7E                     u10680:
 37864                           
 37865                           ; BSR set to: 0
 37866                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 37867  010E7E  0E05               	movlw	5
 37868  010E80  D025               	goto	L63
 37869  010E82                     l738:
 37870                           
 37871                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 37872                           
 37873                           ; BSR set to: 0
 37874  010E82  0101               	movlb	1	; () banked
 37875  010E84  0551               	decf	_MSDHostNoData& (0+255),w,b
 37876  010E86  B4D8               	btfsc	status,2,c
 37877  010E88  D014               	goto	u10730
 37878                           
 37879                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 37880                           
 37881                           ; BSR set to: 0
 37882                           
 37883                           ; BSR set to: 1
 37884                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 37885  010E8A  0100               	movlb	0	; () banked
 37886  010E8C  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37887  010E8E  B4D8               	btfsc	status,2,c
 37888  010E90  D003               	goto	u10710
 37889                           
 37890                           ; BSR set to: 0
 37891                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 37892                           
 37893                           ; BSR set to: 0
 37894                           
 37895                           ; BSR set to: 0
 37896                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 37897  010E92  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 37898  010E94  A4D8               	btfss	status,2,c
 37899  010E96  D7F3               	goto	u10680
 37900  010E98                     u10710:
 37901                           
 37902                           ; BSR set to: 0
 37903                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 37904  010E98  0E04               	movlw	4
 37905  010E9A  D018               	goto	L63
 37906  010E9C                     l737:
 37907                           
 37908                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 37909                           
 37910                           ; BSR set to: 0
 37911  010E9C  0E2A               	movlw	42
 37912  010E9E  0101               	movlb	1	; () banked
 37913  010EA0  1957               	xorwf	_MSDCommandState& (0+255),w,b
 37914  010EA2  A4D8               	btfss	status,2,c
 37915  010EA4  D002               	goto	l747
 37916                           
 37917                           ; BSR set to: 1
 37918                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 37919  010EA6  0E03               	movlw	3
 37920  010EA8  D005               	goto	L62
 37921  010EAA                     l747:
 37922                           
 37923                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 37924                           
 37925                           ; BSR set to: 0
 37926  010EAA  0101               	movlb	1	; () banked
 37927  010EAC  0551               	decf	_MSDHostNoData& (0+255),w,b
 37928  010EAE  A4D8               	btfss	status,2,c
 37929  010EB0  D003               	goto	l749
 37930  010EB2                     u10730:
 37931                           
 37932                           ; BSR set to: 1
 37933                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 37934  010EB2  0E01               	movlw	1
 37935  010EB4                     L62:
 37936  010EB4  0100               	movlb	0	; () banked
 37937  010EB6  D00A               	goto	L63
 37938  010EB8                     l749:
 37939                           
 37940                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 37941                           
 37942                           ; BSR set to: 0
 37943  010EB8  0100               	movlb	0	; () banked
 37944  010EBA  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37945  010EBC  B4D8               	btfsc	status,2,c
 37946  010EBE  D003               	goto	u10750
 37947                           
 37948                           ; BSR set to: 0
 37949                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 37950                           
 37951                           ; BSR set to: 0
 37952                           
 37953                           ; BSR set to: 0
 37954                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 37955  010EC0  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 37956  010EC2  A4D8               	btfss	status,2,c
 37957  010EC4  D002               	goto	l753
 37958  010EC6                     u10750:
 37959                           
 37960                           ; BSR set to: 0
 37961                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 37962  010EC6  0E02               	movlw	2
 37963  010EC8  D001               	goto	L63
 37964  010ECA                     l753:
 37965                           
 37966                           ; BSR set to: 0
 37967                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 37968                           
 37969                           ; BSR set to: 0
 37970  010ECA  0E03               	movlw	3
 37971  010ECC                     L63:
 37972  010ECC  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 37973                           
 37974                           ; BSR set to: 0
 37975                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 37976                           
 37977                           ; BSR set to: 0
 37978                           
 37979                           ; BSR set to: 0
 37980                           
 37981                           ; BSR set to: 0
 37982                           
 37983                           ; BSR set to: 0
 37984                           
 37985                           ; BSR set to: 0
 37986  010ECE  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 37987  010ED0  EC55  F086         	call	_MSDErrorHandler
 37988                           
 37989                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 37990  010ED4  0100               	movlb	0	; () banked
 37991  010ED6  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 37992  010ED8  0012               	return	
 37993  010EDA                     __end_of_MSDCheckForErrorCases:
 37994                           	opt stack 0
 37995                           tosu	equ	0xFFF
 37996                           tosh	equ	0xFFE
 37997                           tosl	equ	0xFFD
 37998                           pclath	equ	0xFFA
 37999                           tblptru	equ	0xFF8
 38000                           tblptrh	equ	0xFF7
 38001                           tblptrl	equ	0xFF6
 38002                           tablat	equ	0xFF5
 38003                           prodh	equ	0xFF4
 38004                           prodl	equ	0xFF3
 38005                           intcon	equ	0xFF2
 38006                           postinc0	equ	0xFEE
 38007                           wreg	equ	0xFE8
 38008                           indf1	equ	0xFE7
 38009                           postinc1	equ	0xFE6
 38010                           postdec1	equ	0xFE5
 38011                           plusw1	equ	0xFE3
 38012                           fsr1h	equ	0xFE2
 38013                           fsr1l	equ	0xFE1
 38014                           indf2	equ	0xFDF
 38015                           postinc2	equ	0xFDE
 38016                           postdec2	equ	0xFDD
 38017                           plusw2	equ	0xFDB
 38018                           fsr2h	equ	0xFDA
 38019                           fsr2l	equ	0xFD9
 38020                           status	equ	0xFD8
 38021                           
 38022 ;; *************** function _MSDErrorHandler *****************
 38023 ;; Defined at:
 38024 ;;		line 1577 in file "usb_device_msd.c"
 38025 ;; Parameters:    Size  Location     Type
 38026 ;;  ErrorCase       1    wreg     unsigned char 
 38027 ;; Auto vars:     Size  Location     Type
 38028 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 38029 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 38030 ;; Return value:  Size  Location     Type
 38031 ;;                  1    wreg      void 
 38032 ;; Registers used:
 38033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38034 ;; Tracked objects:
 38035 ;;		On entry : 0/0
 38036 ;;		On exit  : 0/0
 38037 ;;		Unchanged: 0/0
 38038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38043 ;;Total ram usage:        2 bytes
 38044 ;; Hardware stack levels used:    1
 38045 ;; Hardware stack levels required when called:   11
 38046 ;; This function calls:
 38047 ;;		_ResetSenseData
 38048 ;;		_USBStallEndpoint
 38049 ;; This function is called by:
 38050 ;;		_MSDProcessCommandMediaAbsent
 38051 ;;		_MSDProcessCommandMediaPresent
 38052 ;;		_MSDCheckForErrorCases
 38053 ;; This function uses a non-reentrant model
 38054 ;;
 38055                           
 38056                           	psect	text146
 38057  010CAA                     __ptext146:
 38058                           	opt stack 0
 38059  010CAA                     _MSDErrorHandler:
 38060                           	opt stack 13
 38061                           
 38062                           ;incstack = 0
 38063                           ;MSDErrorHandler@ErrorCase stored from wreg
 38064  010CAA  0100               	movlb	0	; () banked
 38065  010CAC  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 38066                           
 38067                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 38068  010CAE  0101               	movlb	1	; () banked
 38069  010CB0  513F               	movf	_USBMSDInHandle& (0+255),w,b
 38070  010CB2  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38071  010CB4  B4D8               	btfsc	status,2,c
 38072  010CB6  D006               	goto	u10330
 38073                           
 38074                           ; BSR set to: 1
 38075  010CB8  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 38076  010CBC  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38077  010CC0  BEDF               	btfsc	indf2,7,c
 38078  010CC2  0012               	return	
 38079  010CC4                     u10330:
 38080                           
 38081                           ; BSR set to: 1
 38082                           
 38083                           ; BSR set to: 1
 38084  010CC4  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 38085  010CC6  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 38086  010CC8  B4D8               	btfsc	status,2,c
 38087  010CCA  D006               	goto	l757
 38088                           
 38089                           ; BSR set to: 1
 38090  010CCC  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 38091  010CD0  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 38092  010CD4  BEDF               	btfsc	indf2,7,c
 38093  010CD6  0012               	return	
 38094  010CD8                     l757:
 38095                           
 38096                           ; BSR set to: 1
 38097                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 38098  010CD8  C158  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 38099                           
 38100                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 38101  010CDC  6957               	setf	_MSDCommandState& (0+255),b
 38102                           
 38103                           ; BSR set to: 1
 38104                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 38105  010CDE  0E00               	movlw	0
 38106  010CE0  6F56               	movwf	_MSDReadState& (0+255),b
 38107                           
 38108                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 38109  010CE2  0E00               	movlw	0
 38110  010CE4  6F55               	movwf	_MSDWriteState& (0+255),b
 38111                           
 38112                           ; BSR set to: 1
 38113                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 38114  010CE6  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 38115  010CEA  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 38116  010CEE  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 38117  010CF2  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 38118                           
 38119                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 38120  010CF6  0E01               	movlw	1
 38121  010CF8  010D               	movlb	13	; () banked
 38122  010CFA  6F8C               	movwf	140,b	;volatile
 38123                           
 38124                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 38125  010CFC  0E03               	movlw	3
 38126  010CFE  0101               	movlb	1	; () banked
 38127  010D00  6F58               	movwf	_MSD_State& (0+255),b
 38128                           
 38129                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 38130  010D02  D04B               	goto	l763
 38131  010D04                     
 38132                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 38133                           
 38134                           ; BSR set to: 1
 38135  010D04  0E02               	movlw	2
 38136  010D06  010D               	movlb	13	; () banked
 38137  010D08  6F8C               	movwf	140,b	;volatile
 38138                           
 38139                           ;usb_device_msd.c: 1607: break;
 38140  010D0A  0012               	return	
 38141  010D0C                     
 38142                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 38143                           
 38144                           ; BSR set to: 13
 38145  010D0C  0E01               	movlw	1
 38146  010D0E  0100               	movlb	0	; () banked
 38147  010D10  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38148  010D12  0E02               	movlw	2
 38149  010D14  EC02  F089         	call	_USBStallEndpoint
 38150                           
 38151                           ;usb_device_msd.c: 1611: break;
 38152  010D18  0012               	return	
 38153  010D1A                     
 38154                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 38155  010D1A  0E02               	movlw	2
 38156  010D1C  010D               	movlb	13	; () banked
 38157  010D1E  6F8C               	movwf	140,b	;volatile
 38158                           
 38159                           ; BSR set to: 13
 38160                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 38161  010D20  0E01               	movlw	1
 38162  010D22  0100               	movlb	0	; () banked
 38163  010D24  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38164  010D26  0E02               	movlw	2
 38165  010D28  EC02  F089         	call	_USBStallEndpoint
 38166                           
 38167                           ;usb_device_msd.c: 1616: break;
 38168  010D2C  0012               	return	
 38169  010D2E                     
 38170                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 38171  010D2E  0E00               	movlw	0
 38172  010D30  0100               	movlb	0	; () banked
 38173  010D32  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38174  010D34  0E02               	movlw	2
 38175  010D36  EC02  F089         	call	_USBStallEndpoint
 38176                           
 38177                           ;usb_device_msd.c: 1620: break;
 38178  010D3A  0012               	return	
 38179  010D3C                     
 38180                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 38181  010D3C  0E02               	movlw	2
 38182  010D3E  010D               	movlb	13	; () banked
 38183  010D40  6F8C               	movwf	140,b	;volatile
 38184                           
 38185                           ; BSR set to: 13
 38186                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 38187  010D42  0E00               	movlw	0
 38188  010D44  0100               	movlb	0	; () banked
 38189  010D46  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38190  010D48  0E02               	movlw	2
 38191  010D4A  EC02  F089         	call	_USBStallEndpoint
 38192                           
 38193                           ;usb_device_msd.c: 1625: break;
 38194  010D4E  0012               	return	
 38195  010D50                     
 38196                           ;usb_device_msd.c: 1628: ResetSenseData();
 38197  010D50  EC8D  F0A3         	call	_ResetSenseData	;wreg free
 38198                           
 38199                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 38200  010D54  0102               	movlb	2	; () banked
 38201  010D56  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 38202  010D58  0BF0               	andlw	-16
 38203  010D5A  0905               	iorlw	5
 38204  010D5C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 38205                           
 38206                           ; BSR set to: 2
 38207                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 38208  010D5E  0E20               	movlw	32
 38209  010D60  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38210                           
 38211                           ; BSR set to: 2
 38212                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 38213  010D62  0E00               	movlw	0
 38214  010D64  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38215                           
 38216                           ; BSR set to: 2
 38217                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 38218  010D66  0E02               	movlw	2
 38219  010D68  0100               	movlb	0	; () banked
 38220  010D6A  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 38221  010D6C  A4D8               	btfss	status,2,c
 38222  010D6E  D00E               	goto	l771
 38223                           
 38224                           ; BSR set to: 0
 38225  010D70  0102               	movlb	2	; () banked
 38226  010D72  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38227  010D74  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 38228  010D76  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 38229  010D78  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 38230  010D7A  B4D8               	btfsc	status,2,c
 38231  010D7C  D007               	goto	l771
 38232                           
 38233                           ; BSR set to: 2
 38234                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 38235  010D7E  0E00               	movlw	0
 38236  010D80  0100               	movlb	0	; () banked
 38237  010D82  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38238  010D84  0E02               	movlw	2
 38239  010D86  EC02  F089         	call	_USBStallEndpoint
 38240                           
 38241                           ;usb_device_msd.c: 1636: }
 38242  010D8A  0012               	return	
 38243  010D8C                     l771:
 38244                           
 38245                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 38246  010D8C  0E01               	movlw	1
 38247  010D8E  0100               	movlb	0	; () banked
 38248  010D90  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38249  010D92  0E02               	movlw	2
 38250  010D94  EC02  F089         	call	_USBStallEndpoint
 38251                           
 38252                           ;usb_device_msd.c: 1644: }
 38253                           
 38254                           ;usb_device_msd.c: 1643: break;
 38255                           
 38256                           ;usb_device_msd.c: 1642: default:
 38257                           
 38258                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 38259  010D98  0012               	return	
 38260  010D9A                     l763:
 38261  010D9A  0100               	movlb	0	; () banked
 38262  010D9C  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 38263                           
 38264                           ; Switch size 1, requested type "space"
 38265                           ; Number of cases is 6, Range of values is 1 to 127
 38266                           ; switch strategies available:
 38267                           ; Name         Instructions Cycles
 38268                           ; simple_byte           19    10 (average)
 38269                           ;	Chosen strategy is simple_byte
 38270  010D9E  0A01               	xorlw	1	; case 1
 38271  010DA0  B4D8               	btfsc	status,2,c
 38272  010DA2  D7B0               	goto	l764
 38273  010DA4  0A03               	xorlw	3	; case 2
 38274  010DA6  B4D8               	btfsc	status,2,c
 38275  010DA8  D7B1               	goto	l766
 38276  010DAA  0A01               	xorlw	1	; case 3
 38277  010DAC  B4D8               	btfsc	status,2,c
 38278  010DAE  D7B5               	goto	l767
 38279  010DB0  0A07               	xorlw	7	; case 4
 38280  010DB2  B4D8               	btfsc	status,2,c
 38281  010DB4  D7BC               	goto	l768
 38282  010DB6  0A01               	xorlw	1	; case 5
 38283  010DB8  B4D8               	btfsc	status,2,c
 38284  010DBA  D7C0               	goto	l769
 38285  010DBC  0A7A               	xorlw	122	; case 127
 38286  010DBE  A4D8               	btfss	status,2,c
 38287  010DC0  0012               	return	
 38288  010DC2  D7C6               	goto	l770
 38289  010DC4                     __end_of_MSDErrorHandler:
 38290                           	opt stack 0
 38291                           tosu	equ	0xFFF
 38292                           tosh	equ	0xFFE
 38293                           tosl	equ	0xFFD
 38294                           pclath	equ	0xFFA
 38295                           tblptru	equ	0xFF8
 38296                           tblptrh	equ	0xFF7
 38297                           tblptrl	equ	0xFF6
 38298                           tablat	equ	0xFF5
 38299                           prodh	equ	0xFF4
 38300                           prodl	equ	0xFF3
 38301                           intcon	equ	0xFF2
 38302                           postinc0	equ	0xFEE
 38303                           wreg	equ	0xFE8
 38304                           indf1	equ	0xFE7
 38305                           postinc1	equ	0xFE6
 38306                           postdec1	equ	0xFE5
 38307                           plusw1	equ	0xFE3
 38308                           fsr1h	equ	0xFE2
 38309                           fsr1l	equ	0xFE1
 38310                           indf2	equ	0xFDF
 38311                           postinc2	equ	0xFDE
 38312                           postdec2	equ	0xFDD
 38313                           plusw2	equ	0xFDB
 38314                           fsr2h	equ	0xFDA
 38315                           fsr2l	equ	0xFD9
 38316                           status	equ	0xFD8
 38317                           
 38318 ;; *************** function _USBStallEndpoint *****************
 38319 ;; Defined at:
 38320 ;;		line 1073 in file "usb_device.c"
 38321 ;; Parameters:    Size  Location     Type
 38322 ;;  ep              1    wreg     unsigned char 
 38323 ;;  dir             1    0[BANK0 ] unsigned char 
 38324 ;; Auto vars:     Size  Location     Type
 38325 ;;  ep              1    5[BANK0 ] unsigned char 
 38326 ;;  p               2    6[BANK0 ] PTR struct __BDT
 38327 ;;		 -> BDT(48), 
 38328 ;; Return value:  Size  Location     Type
 38329 ;;                  1    wreg      void 
 38330 ;; Registers used:
 38331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38332 ;; Tracked objects:
 38333 ;;		On entry : 0/0
 38334 ;;		On exit  : 0/0
 38335 ;;		Unchanged: 0/0
 38336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38337 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38338 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38339 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38340 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38341 ;;Total ram usage:        8 bytes
 38342 ;; Hardware stack levels used:    1
 38343 ;; Hardware stack levels required when called:   10
 38344 ;; This function calls:
 38345 ;;		Nothing
 38346 ;; This function is called by:
 38347 ;;		_MSDTasks
 38348 ;;		_MSDReadHandler
 38349 ;;		_MSDWriteHandler
 38350 ;;		_MSDErrorHandler
 38351 ;; This function uses a non-reentrant model
 38352 ;;
 38353                           
 38354                           	psect	text147
 38355  011204                     __ptext147:
 38356                           	opt stack 0
 38357  011204                     _USBStallEndpoint:
 38358                           	opt stack 18
 38359                           
 38360                           ;incstack = 0
 38361                           ;USBStallEndpoint@ep stored from wreg
 38362  011204  0100               	movlb	0	; () banked
 38363  011206  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 38364                           
 38365                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 38366  011208  0100               	movlb	0	; () banked
 38367  01120A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38368  01120C  A4D8               	btfss	status,2,c
 38369  01120E  D02B               	goto	l192
 38370                           
 38371                           ; BSR set to: 0
 38372                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 38373  011210  EE20 F001          	lfsr	2,1
 38374  011214  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38375  011216  26D9               	addwf	fsr2l,f,c
 38376  011218  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38377  01121A  22DA               	addwfc	fsr2h,f,c
 38378  01121C  0E08               	movlw	8
 38379  01121E  6EDF               	movwf	indf2,c
 38380                           
 38381                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 38382  011220  EE20 F002          	lfsr	2,2
 38383  011224  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38384  011226  26D9               	addwf	fsr2l,f,c
 38385  011228  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38386  01122A  22DA               	addwfc	fsr2h,f,c
 38387  01122C  0E30               	movlw	48
 38388  01122E  6EDE               	movwf	postinc2,c
 38389  011230  0E0D               	movlw	13
 38390  011232  6EDD               	movwf	postdec2,c
 38391                           
 38392                           ; BSR set to: 0
 38393                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 38394  011234  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38395  011238  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38396  01123C  0E0C               	movlw	12
 38397  01123E  6EDF               	movwf	indf2,c
 38398                           
 38399                           ; BSR set to: 0
 38400                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 38401  011240  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38402  011244  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38403  011248  0E00               	movlw	0
 38404  01124A  8EDB               	bsf	plusw2,7,c
 38405                           
 38406                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 38407  01124C  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 38408  011250  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38409  011254  0E04               	movlw	4
 38410  011256  6EDF               	movwf	indf2,c
 38411                           
 38412                           ; BSR set to: 0
 38413                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 38414  011258  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 38415  01125C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38416  011260  0E00               	movlw	0
 38417  011262  8EDB               	bsf	plusw2,7,c
 38418                           
 38419                           ;usb_device.c: 1089: }
 38420  011264  0012               	return	
 38421  011266                     l192:
 38422                           
 38423                           ; BSR set to: 0
 38424                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 38425                           
 38426                           ; BSR set to: 0
 38427  011266  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38428  011268  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 38429  01126A  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 38430  01126C  90D8               	bcf	status,0,c
 38431  01126E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38432  011270  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38433  011272  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38434  011274  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 38435  011276  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 38436  011278  90D8               	bcf	status,0,c
 38437  01127A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38438  01127C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38439  01127E  90D8               	bcf	status,0,c
 38440  011280  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38441  011282  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38442  011284  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 38443  011286  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 38444  011288  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 38445  01128A  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 38446  01128C  90D8               	bcf	status,0,c
 38447  01128E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38448  011290  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38449  011292  90D8               	bcf	status,0,c
 38450  011294  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38451  011296  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38452  011298  0E00               	movlw	0
 38453  01129A  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 38454  01129C  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38455  01129E  0E0D               	movlw	13
 38456  0112A0  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 38457  0112A2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38458                           
 38459                           ; BSR set to: 0
 38460                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 38461  0112A4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38462  0112A8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38463  0112AC  0E00               	movlw	0
 38464  0112AE  84DB               	bsf	plusw2,2,c
 38465                           
 38466                           ; BSR set to: 0
 38467                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 38468  0112B0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38469  0112B4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38470  0112B8  0E00               	movlw	0
 38471  0112BA  8EDB               	bsf	plusw2,7,c
 38472                           
 38473                           ; BSR set to: 0
 38474                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 38475  0112BC  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38476  0112BE  0D04               	mullw	4
 38477  0112C0  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 38478  0112C4  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 38479  0112C8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38480  0112CA  0D02               	mullw	2
 38481  0112CC  50F3               	movf	prodl,w,c
 38482  0112CE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38483  0112D0  50F4               	movf	prodh,w,c
 38484  0112D2  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38485  0112D4  90D8               	bcf	status,0,c
 38486  0112D6  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38487  0112D8  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38488  0112DA  90D8               	bcf	status,0,c
 38489  0112DC  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38490  0112DE  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38491  0112E0  0E04               	movlw	4
 38492  0112E2  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38493  0112E4  0E00               	movlw	0
 38494  0112E6  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38495  0112E8  0E00               	movlw	0
 38496  0112EA  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 38497  0112EC  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38498  0112EE  0E0D               	movlw	13
 38499  0112F0  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 38500  0112F2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38501                           
 38502                           ; BSR set to: 0
 38503                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 38504  0112F4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38505  0112F8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38506  0112FC  0E00               	movlw	0
 38507  0112FE  84DB               	bsf	plusw2,2,c
 38508                           
 38509                           ; BSR set to: 0
 38510                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 38511  011300  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38512  011304  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38513  011308  0E00               	movlw	0
 38514  01130A  8EDB               	bsf	plusw2,7,c
 38515  01130C  0012               	return	
 38516  01130E                     __end_of_USBStallEndpoint:
 38517                           	opt stack 0
 38518                           tosu	equ	0xFFF
 38519                           tosh	equ	0xFFE
 38520                           tosl	equ	0xFFD
 38521                           pclath	equ	0xFFA
 38522                           tblptru	equ	0xFF8
 38523                           tblptrh	equ	0xFF7
 38524                           tblptrl	equ	0xFF6
 38525                           tablat	equ	0xFF5
 38526                           prodh	equ	0xFF4
 38527                           prodl	equ	0xFF3
 38528                           intcon	equ	0xFF2
 38529                           postinc0	equ	0xFEE
 38530                           wreg	equ	0xFE8
 38531                           indf1	equ	0xFE7
 38532                           postinc1	equ	0xFE6
 38533                           postdec1	equ	0xFE5
 38534                           plusw1	equ	0xFE3
 38535                           fsr1h	equ	0xFE2
 38536                           fsr1l	equ	0xFE1
 38537                           indf2	equ	0xFDF
 38538                           postinc2	equ	0xFDE
 38539                           postdec2	equ	0xFDD
 38540                           plusw2	equ	0xFDB
 38541                           fsr2h	equ	0xFDA
 38542                           fsr2l	equ	0xFD9
 38543                           status	equ	0xFD8
 38544                           
 38545 ;; *************** function _ResetSenseData *****************
 38546 ;; Defined at:
 38547 ;;		line 1373 in file "usb_device_msd.c"
 38548 ;; Parameters:    Size  Location     Type
 38549 ;;		None
 38550 ;; Auto vars:     Size  Location     Type
 38551 ;;		None
 38552 ;; Return value:  Size  Location     Type
 38553 ;;                  1    wreg      void 
 38554 ;; Registers used:
 38555 ;;		wreg, status,2
 38556 ;; Tracked objects:
 38557 ;;		On entry : 0/0
 38558 ;;		On exit  : 0/0
 38559 ;;		Unchanged: 0/0
 38560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38565 ;;Total ram usage:        0 bytes
 38566 ;; Hardware stack levels used:    1
 38567 ;; Hardware stack levels required when called:   10
 38568 ;; This function calls:
 38569 ;;		Nothing
 38570 ;; This function is called by:
 38571 ;;		_MSDProcessCommandMediaAbsent
 38572 ;;		_MSDProcessCommandMediaPresent
 38573 ;;		_MSDErrorHandler
 38574 ;; This function uses a non-reentrant model
 38575 ;;
 38576                           
 38577                           	psect	text148
 38578  01471A                     __ptext148:
 38579                           	opt stack 0
 38580  01471A                     _ResetSenseData:
 38581                           	opt stack 16
 38582                           
 38583                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 38584                           
 38585                           ; BSR set to: 0
 38586                           ;incstack = 0
 38587  01471A  0102               	movlb	2	; () banked
 38588  01471C  911F               	bcf	_gblSenseData& (0+255),0,b
 38589  01471E  931F               	bcf	_gblSenseData& (0+255),1,b
 38590  014720  951F               	bcf	_gblSenseData& (0+255),2,b
 38591  014722  971F               	bcf	_gblSenseData& (0+255),3,b
 38592  014724  891F               	bsf	_gblSenseData& (0+255),4,b
 38593  014726  8B1F               	bsf	_gblSenseData& (0+255),5,b
 38594  014728  8D1F               	bsf	_gblSenseData& (0+255),6,b
 38595                           
 38596                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 38597  01472A  9F1F               	bcf	_gblSenseData& (0+255),7,b
 38598                           
 38599                           ; BSR set to: 2
 38600                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 38601  01472C  0E00               	movlw	0
 38602  01472E  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 38603                           
 38604                           ; BSR set to: 2
 38605                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 38606  014730  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 38607  014732  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 38608  014734  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 38609  014736  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 38610                           
 38611                           ; BSR set to: 2
 38612                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 38613  014738  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 38614                           
 38615                           ; BSR set to: 2
 38616                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 38617  01473A  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 38618                           
 38619                           ; BSR set to: 2
 38620                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 38621  01473C  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 38622                           
 38623                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 38624  01473E  0E00               	movlw	0
 38625  014740  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 38626                           
 38627                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 38628  014742  0E00               	movlw	0
 38629  014744  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 38630                           
 38631                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 38632  014746  0E00               	movlw	0
 38633  014748  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 38634                           
 38635                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 38636  01474A  0E00               	movlw	0
 38637  01474C  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 38638                           
 38639                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 38640  01474E  0E0A               	movlw	10
 38641  014750  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 38642                           
 38643                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 38644  014752  0E00               	movlw	0
 38645  014754  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 38646  014756  0E00               	movlw	0
 38647  014758  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 38648  01475A  0E00               	movlw	0
 38649  01475C  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 38650  01475E  0E00               	movlw	0
 38651  014760  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 38652                           
 38653                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 38654  014762  0E00               	movlw	0
 38655  014764  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38656                           
 38657                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 38658  014766  0E00               	movlw	0
 38659  014768  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38660                           
 38661                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 38662  01476A  0E00               	movlw	0
 38663  01476C  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 38664                           
 38665                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 38666  01476E  0E00               	movlw	0
 38667  014770  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 38668                           
 38669                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 38670  014772  0E00               	movlw	0
 38671  014774  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 38672                           
 38673                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 38674  014776  0E00               	movlw	0
 38675  014778  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 38676                           
 38677                           ; BSR set to: 2
 38678  01477A  0012               	return		;funcret
 38679  01477C                     __end_of_ResetSenseData:
 38680                           	opt stack 0
 38681                           tosu	equ	0xFFF
 38682                           tosh	equ	0xFFE
 38683                           tosl	equ	0xFFD
 38684                           pclath	equ	0xFFA
 38685                           tblptru	equ	0xFF8
 38686                           tblptrh	equ	0xFF7
 38687                           tblptrl	equ	0xFF6
 38688                           tablat	equ	0xFF5
 38689                           prodh	equ	0xFF4
 38690                           prodl	equ	0xFF3
 38691                           intcon	equ	0xFF2
 38692                           postinc0	equ	0xFEE
 38693                           wreg	equ	0xFE8
 38694                           indf1	equ	0xFE7
 38695                           postinc1	equ	0xFE6
 38696                           postdec1	equ	0xFE5
 38697                           plusw1	equ	0xFE3
 38698                           fsr1h	equ	0xFE2
 38699                           fsr1l	equ	0xFE1
 38700                           indf2	equ	0xFDF
 38701                           postinc2	equ	0xFDE
 38702                           postdec2	equ	0xFDD
 38703                           plusw2	equ	0xFDB
 38704                           fsr2h	equ	0xFDA
 38705                           fsr2l	equ	0xFD9
 38706                           status	equ	0xFD8
 38707                           
 38708 ;; *************** function _ExternalFlash_SectorRead *****************
 38709 ;; Defined at:
 38710 ;;		line 40 in file "external_flash.c"
 38711 ;; Parameters:    Size  Location     Type
 38712 ;;  config          2   43[BANK0 ] PTR void 
 38713 ;;		 -> NULL(0), 
 38714 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 38715 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 38716 ;;		 -> msd_buffer(512), 
 38717 ;; Auto vars:     Size  Location     Type
 38718 ;;  page            2   51[BANK0 ] unsigned int 
 38719 ;; Return value:  Size  Location     Type
 38720 ;;                  1    wreg      unsigned char 
 38721 ;; Registers used:
 38722 ;;		wreg, status,2, status,0, cstack
 38723 ;; Tracked objects:
 38724 ;;		On entry : 0/0
 38725 ;;		On exit  : 0/0
 38726 ;;		Unchanged: 0/0
 38727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38728 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38729 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38731 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38732 ;;Total ram usage:       10 bytes
 38733 ;; Hardware stack levels used:    1
 38734 ;; Hardware stack levels required when called:   15
 38735 ;; This function calls:
 38736 ;;		_flash_sector_read
 38737 ;; This function is called by:
 38738 ;;		_MSDReadHandler
 38739 ;; This function uses a non-reentrant model
 38740 ;;
 38741                           
 38742                           	psect	text149
 38743  01573C                     __ptext149:
 38744                           	opt stack 0
 38745  01573C                     _ExternalFlash_SectorRead:
 38746                           	opt stack 10
 38747                           
 38748                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 38749                           
 38750                           ; BSR set to: 2
 38751                           ;incstack = 0
 38752  01573C  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 38753  015740  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 38754                           
 38755                           ;external_flash.c: 45: if(sector_addr >= 8192)
 38756  015744  0100               	movlb	0	; () banked
 38757  015746  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 38758  015748  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 38759  01574A  E104               	bnz	u10780
 38760  01574C  0E20               	movlw	32
 38761  01574E  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 38762  015750  A0D8               	btfss	status,0,c
 38763  015752  D002               	goto	l1691
 38764  015754                     u10780:
 38765                           
 38766                           ; BSR set to: 0
 38767                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 38768  015754  0E00               	movlw	0
 38769                           
 38770                           ; BSR set to: 0
 38771  015756  0012               	return	
 38772  015758                     l1691:
 38773                           
 38774                           ; BSR set to: 0
 38775                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 38776                           
 38777                           ; BSR set to: 0
 38778  015758  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 38779  01575C  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 38780  015760  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 38781  015764  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 38782  015768  EC68  F0AD         	call	_flash_sector_read	;wreg free
 38783                           
 38784                           ;external_flash.c: 53: return 1;
 38785  01576C  0E01               	movlw	1
 38786  01576E  0012               	return	
 38787  015770                     __end_of_ExternalFlash_SectorRead:
 38788                           	opt stack 0
 38789                           tosu	equ	0xFFF
 38790                           tosh	equ	0xFFE
 38791                           tosl	equ	0xFFD
 38792                           pclath	equ	0xFFA
 38793                           tblptru	equ	0xFF8
 38794                           tblptrh	equ	0xFF7
 38795                           tblptrl	equ	0xFF6
 38796                           tablat	equ	0xFF5
 38797                           prodh	equ	0xFF4
 38798                           prodl	equ	0xFF3
 38799                           intcon	equ	0xFF2
 38800                           postinc0	equ	0xFEE
 38801                           wreg	equ	0xFE8
 38802                           indf1	equ	0xFE7
 38803                           postinc1	equ	0xFE6
 38804                           postdec1	equ	0xFE5
 38805                           plusw1	equ	0xFE3
 38806                           fsr1h	equ	0xFE2
 38807                           fsr1l	equ	0xFE1
 38808                           indf2	equ	0xFDF
 38809                           postinc2	equ	0xFDE
 38810                           postdec2	equ	0xFDD
 38811                           plusw2	equ	0xFDB
 38812                           fsr2h	equ	0xFDA
 38813                           fsr2l	equ	0xFD9
 38814                           status	equ	0xFD8
 38815                           
 38816 ;; *************** function _flash_sector_read *****************
 38817 ;; Defined at:
 38818 ;;		line 426 in file "flash.c"
 38819 ;; Parameters:    Size  Location     Type
 38820 ;;  page            2   39[BANK0 ] unsigned int 
 38821 ;;  data            2   41[BANK0 ] PTR unsigned char 
 38822 ;;		 -> buffer(512), msd_buffer(512), 
 38823 ;; Auto vars:     Size  Location     Type
 38824 ;;		None
 38825 ;; Return value:  Size  Location     Type
 38826 ;;                  1    wreg      void 
 38827 ;; Registers used:
 38828 ;;		wreg, status,2, status,0, cstack
 38829 ;; Tracked objects:
 38830 ;;		On entry : 0/0
 38831 ;;		On exit  : 0/0
 38832 ;;		Unchanged: 0/0
 38833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38834 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38837 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38838 ;;Total ram usage:        4 bytes
 38839 ;; Hardware stack levels used:    1
 38840 ;; Hardware stack levels required when called:   14
 38841 ;; This function calls:
 38842 ;;		__flash_partial_read
 38843 ;; This function is called by:
 38844 ;;		_ExternalFlash_SectorRead
 38845 ;;		__get_available_cluster
 38846 ;;		__find_nth_cluster
 38847 ;;		__make_cluster_chain
 38848 ;;		_fat_find_file
 38849 ;;		_fat_get_format_status
 38850 ;; This function uses a non-reentrant model
 38851 ;;
 38852                           
 38853                           	psect	text150
 38854  015AD0                     __ptext150:
 38855                           	opt stack 0
 38856  015AD0                     _flash_sector_read:
 38857                           	opt stack 13
 38858                           
 38859                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 38860                           
 38861                           ;incstack = 0
 38862  015AD0  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 38863  015AD4  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 38864  015AD8  0E00               	movlw	0
 38865  015ADA  0100               	movlb	0	; () banked
 38866  015ADC  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 38867  015ADE  0E00               	movlw	0
 38868  015AE0  6F75               	movwf	__flash_partial_read@start& (0+255),b
 38869  015AE2  0E02               	movlw	2
 38870  015AE4  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 38871  015AE6  0E00               	movlw	0
 38872  015AE8  6F77               	movwf	__flash_partial_read@length& (0+255),b
 38873  015AEA  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 38874  015AEE  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 38875  015AF2  EC00  F0A1         	call	__flash_partial_read	;wreg free
 38876  015AF6  0012               	return		;funcret
 38877  015AF8                     __end_of_flash_sector_read:
 38878                           	opt stack 0
 38879                           tosu	equ	0xFFF
 38880                           tosh	equ	0xFFE
 38881                           tosl	equ	0xFFD
 38882                           pclath	equ	0xFFA
 38883                           tblptru	equ	0xFF8
 38884                           tblptrh	equ	0xFF7
 38885                           tblptrl	equ	0xFF6
 38886                           tablat	equ	0xFF5
 38887                           prodh	equ	0xFF4
 38888                           prodl	equ	0xFF3
 38889                           intcon	equ	0xFF2
 38890                           postinc0	equ	0xFEE
 38891                           wreg	equ	0xFE8
 38892                           indf1	equ	0xFE7
 38893                           postinc1	equ	0xFE6
 38894                           postdec1	equ	0xFE5
 38895                           plusw1	equ	0xFE3
 38896                           fsr1h	equ	0xFE2
 38897                           fsr1l	equ	0xFE1
 38898                           indf2	equ	0xFDF
 38899                           postinc2	equ	0xFDE
 38900                           postdec2	equ	0xFDD
 38901                           plusw2	equ	0xFDB
 38902                           fsr2h	equ	0xFDA
 38903                           fsr2l	equ	0xFD9
 38904                           status	equ	0xFD8
 38905                           
 38906 ;; *************** function __flash_partial_read *****************
 38907 ;; Defined at:
 38908 ;;		line 309 in file "flash.c"
 38909 ;; Parameters:    Size  Location     Type
 38910 ;;  page            2   19[BANK0 ] unsigned int 
 38911 ;;  start           2   21[BANK0 ] unsigned int 
 38912 ;;  length          2   23[BANK0 ] unsigned int 
 38913 ;;  data            2   25[BANK0 ] PTR unsigned char 
 38914 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 38915 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 38916 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 38917 ;; Auto vars:     Size  Location     Type
 38918 ;;  command         4   31[BANK0 ] unsigned char [4]
 38919 ;;  address         4   35[BANK0 ] unsigned long 
 38920 ;; Return value:  Size  Location     Type
 38921 ;;                  1    wreg      void 
 38922 ;; Registers used:
 38923 ;;		wreg, status,2, status,0, cstack
 38924 ;; Tracked objects:
 38925 ;;		On entry : 0/0
 38926 ;;		On exit  : 0/0
 38927 ;;		Unchanged: 0/0
 38928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38929 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38930 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38931 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38932 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38933 ;;Total ram usage:       20 bytes
 38934 ;; Hardware stack levels used:    1
 38935 ;; Hardware stack levels required when called:   13
 38936 ;; This function calls:
 38937 ;;		__flash_is_busy
 38938 ;;		_spi_tx_rx
 38939 ;; This function is called by:
 38940 ;;		_flash_sector_read
 38941 ;;		_flash_partial_read
 38942 ;; This function uses a non-reentrant model
 38943 ;;
 38944                           
 38945                           	psect	text151
 38946  014200                     __ptext151:
 38947                           	opt stack 0
 38948  014200                     __flash_partial_read:
 38949                           	opt stack 13
 38950                           
 38951                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 38952                           
 38953                           ;incstack = 0
 38954  014200  ECC6  F0AD         	call	__flash_is_busy	;wreg free
 38955  014204  0900               	iorlw	0
 38956  014206  A4D8               	btfss	status,2,c
 38957  014208  D7FB               	goto	__flash_partial_read
 38958                           
 38959                           ;flash.c: 318: address = page;
 38960  01420A  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 38961  01420E  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 38962  014212  0100               	movlb	0	; () banked
 38963  014214  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 38964  014216  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 38965                           
 38966                           ; BSR set to: 0
 38967                           ;flash.c: 319: address <<= 9;
 38968  014218  0E09               	movlw	9
 38969  01421A                     u10205:
 38970  01421A  90D8               	bcf	status,0,c
 38971  01421C  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 38972  01421E  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 38973  014220  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 38974  014222  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 38975  014224  2EE8               	decfsz	wreg,f,c
 38976  014226  D7F9               	goto	u10205
 38977                           
 38978                           ; BSR set to: 0
 38979                           ;flash.c: 320: address |= start;
 38980  014228  5175               	movf	__flash_partial_read@start& (0+255),w,b
 38981  01422A  6F7B               	movwf	??__flash_partial_read& (0+255),b
 38982  01422C  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 38983  01422E  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 38984  014230  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 38985  014232  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 38986  014234  517B               	movf	??__flash_partial_read& (0+255),w,b
 38987  014236  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 38988  014238  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 38989  01423A  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 38990  01423C  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 38991  01423E  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 38992  014240  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 38993  014242  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 38994                           
 38995                           ; BSR set to: 0
 38996                           ;flash.c: 323: command[0] = 0x03;
 38997  014244  0E03               	movlw	3
 38998  014246  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 38999                           
 39000                           ; BSR set to: 0
 39001                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 39002  014248  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 39003                           
 39004                           ; BSR set to: 0
 39005                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 39006  01424C  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 39007  01424E  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 39008                           
 39009                           ; BSR set to: 0
 39010                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 39011  014250  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 39012                           
 39013                           ; BSR set to: 0
 39014                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 39015  014254  0E7F               	movlw	low __flash_partial_read@command
 39016  014256  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39017  014258  0E00               	movlw	high __flash_partial_read@command
 39018  01425A  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39019  01425C  0E00               	movlw	0
 39020  01425E  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39021  014260  0E04               	movlw	4
 39022  014262  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39023  014264  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 39024  014268  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 39025  01426C  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 39026  014270  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 39027  014274  ECE5  F09B         	call	_spi_tx_rx	;wreg free
 39028  014278  0012               	return		;funcret
 39029  01427A                     __end_of__flash_partial_read:
 39030                           	opt stack 0
 39031                           tosu	equ	0xFFF
 39032                           tosh	equ	0xFFE
 39033                           tosl	equ	0xFFD
 39034                           pclath	equ	0xFFA
 39035                           tblptru	equ	0xFF8
 39036                           tblptrh	equ	0xFF7
 39037                           tblptrl	equ	0xFF6
 39038                           tablat	equ	0xFF5
 39039                           prodh	equ	0xFF4
 39040                           prodl	equ	0xFF3
 39041                           intcon	equ	0xFF2
 39042                           postinc0	equ	0xFEE
 39043                           wreg	equ	0xFE8
 39044                           indf1	equ	0xFE7
 39045                           postinc1	equ	0xFE6
 39046                           postdec1	equ	0xFE5
 39047                           plusw1	equ	0xFE3
 39048                           fsr1h	equ	0xFE2
 39049                           fsr1l	equ	0xFE1
 39050                           indf2	equ	0xFDF
 39051                           postinc2	equ	0xFDE
 39052                           postdec2	equ	0xFDD
 39053                           plusw2	equ	0xFDB
 39054                           fsr2h	equ	0xFDA
 39055                           fsr2l	equ	0xFD9
 39056                           status	equ	0xFD8
 39057                           
 39058 ;; *************** function __flash_is_busy *****************
 39059 ;; Defined at:
 39060 ;;		line 281 in file "flash.c"
 39061 ;; Parameters:    Size  Location     Type
 39062 ;;		None
 39063 ;; Auto vars:     Size  Location     Type
 39064 ;;  status          2   17[BANK0 ] unsigned int 
 39065 ;; Return value:  Size  Location     Type
 39066 ;;                  1    wreg      unsigned char 
 39067 ;; Registers used:
 39068 ;;		wreg, status,2, status,0, cstack
 39069 ;; Tracked objects:
 39070 ;;		On entry : 0/0
 39071 ;;		On exit  : 0/0
 39072 ;;		Unchanged: 0/0
 39073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39075 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39078 ;;Total ram usage:        2 bytes
 39079 ;; Hardware stack levels used:    1
 39080 ;; Hardware stack levels required when called:   12
 39081 ;; This function calls:
 39082 ;;		__flash_get_status
 39083 ;;		__flash_wakeup
 39084 ;; This function is called by:
 39085 ;;		__flash_set_page_size
 39086 ;;		__flash_copy_page_to_buffer
 39087 ;;		__flash_compare_page_to_buffer
 39088 ;;		__flash_write_to_buffer
 39089 ;;		__flash_write_page_from_buffer
 39090 ;;		__flash_partial_read
 39091 ;;		_flash_partial_write
 39092 ;;		__flash_erase_page
 39093 ;;		__flash_buffer_read
 39094 ;;		_flash_is_busy
 39095 ;;		_flash_set_power_state
 39096 ;; This function uses a non-reentrant model
 39097 ;;
 39098                           
 39099                           	psect	text152
 39100  015B8C                     __ptext152:
 39101                           	opt stack 0
 39102  015B8C                     __flash_is_busy:
 39103                           	opt stack 15
 39104                           
 39105                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 39106                           
 39107                           ;incstack = 0
 39108  015B8C  0101               	movlb	1	; () banked
 39109  015B8E  514F               	movf	_power_state& (0+255),w,b
 39110  015B90  A4D8               	btfss	status,2,c
 39111                           
 39112                           ; BSR set to: 1
 39113                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 39114  015B92  EC13  F0A6         	call	__flash_wakeup	;wreg free
 39115                           
 39116                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 39117  015B96  ECB8  F0AB         	call	__flash_get_status	;wreg free
 39118  015B9A  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 39119  015B9E  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 39120                           
 39121                           ;flash.c: 295: if(status & 0b0000000010000000)
 39122  015BA2  0100               	movlb	0	; () banked
 39123  015BA4  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 39124  015BA6  D002               	goto	l1595
 39125                           
 39126                           ; BSR set to: 0
 39127                           ;flash.c: 296: {;flash.c: 298: return 0;
 39128  015BA8  0E00               	movlw	0
 39129                           
 39130                           ; BSR set to: 0
 39131                           ;flash.c: 299: }
 39132                           
 39133                           ; BSR set to: 0
 39134  015BAA  0012               	return	
 39135  015BAC                     l1595:
 39136                           
 39137                           ; BSR set to: 0
 39138                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 39139                           
 39140                           ; BSR set to: 0
 39141  015BAC  0E01               	movlw	1
 39142                           
 39143                           ; BSR set to: 0
 39144  015BAE  0012               	return	
 39145  015BB0                     __end_of__flash_is_busy:
 39146                           	opt stack 0
 39147                           tosu	equ	0xFFF
 39148                           tosh	equ	0xFFE
 39149                           tosl	equ	0xFFD
 39150                           pclath	equ	0xFFA
 39151                           tblptru	equ	0xFF8
 39152                           tblptrh	equ	0xFF7
 39153                           tblptrl	equ	0xFF6
 39154                           tablat	equ	0xFF5
 39155                           prodh	equ	0xFF4
 39156                           prodl	equ	0xFF3
 39157                           intcon	equ	0xFF2
 39158                           postinc0	equ	0xFEE
 39159                           wreg	equ	0xFE8
 39160                           indf1	equ	0xFE7
 39161                           postinc1	equ	0xFE6
 39162                           postdec1	equ	0xFE5
 39163                           plusw1	equ	0xFE3
 39164                           fsr1h	equ	0xFE2
 39165                           fsr1l	equ	0xFE1
 39166                           indf2	equ	0xFDF
 39167                           postinc2	equ	0xFDE
 39168                           postdec2	equ	0xFDD
 39169                           plusw2	equ	0xFDB
 39170                           fsr2h	equ	0xFDA
 39171                           fsr2l	equ	0xFD9
 39172                           status	equ	0xFD8
 39173                           
 39174 ;; *************** function __flash_wakeup *****************
 39175 ;; Defined at:
 39176 ;;		line 128 in file "flash.c"
 39177 ;; Parameters:    Size  Location     Type
 39178 ;;		None
 39179 ;; Auto vars:     Size  Location     Type
 39180 ;;  command         1    8[BANK0 ] unsigned char 
 39181 ;; Return value:  Size  Location     Type
 39182 ;;                  1    wreg      void 
 39183 ;; Registers used:
 39184 ;;		wreg, status,2, status,0, cstack
 39185 ;; Tracked objects:
 39186 ;;		On entry : 0/0
 39187 ;;		On exit  : 0/0
 39188 ;;		Unchanged: 0/0
 39189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39193 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39194 ;;Total ram usage:        1 bytes
 39195 ;; Hardware stack levels used:    1
 39196 ;; Hardware stack levels required when called:   11
 39197 ;; This function calls:
 39198 ;;		_spi_tx
 39199 ;; This function is called by:
 39200 ;;		__flash_is_busy
 39201 ;;		_flash_set_power_state
 39202 ;; This function uses a non-reentrant model
 39203 ;;
 39204                           
 39205                           	psect	text153
 39206  014C26                     __ptext153:
 39207                           	opt stack 0
 39208  014C26                     __flash_wakeup:
 39209                           	opt stack 15
 39210                           
 39211                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 39212                           
 39213                           ; BSR set to: 0
 39214                           ;incstack = 0
 39215  014C26  D022               	goto	l1544
 39216  014C28                     
 39217                           ;flash.c: 135: command = 0xAB;
 39218  014C28  0EAB               	movlw	171
 39219  014C2A  0100               	movlb	0	; () banked
 39220  014C2C  6F68               	movwf	__flash_wakeup@command& (0+255),b
 39221                           
 39222                           ; BSR set to: 0
 39223                           ;flash.c: 136: spi_tx(&command, 1);
 39224  014C2E  0E68               	movlw	low __flash_wakeup@command
 39225  014C30  6F60               	movwf	spi_tx@data& (0+255),b
 39226  014C32  0E00               	movlw	high __flash_wakeup@command
 39227  014C34  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 39228  014C36  0E00               	movlw	0
 39229  014C38  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 39230  014C3A  0E01               	movlw	1
 39231  014C3C  6F62               	movwf	spi_tx@length& (0+255),b
 39232  014C3E  EC8E  F0A5         	call	_spi_tx	;wreg free
 39233                           
 39234                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 39235  014C42  0E17               	movlw	23
 39236  014C44                     u19927:
 39237  014C44  2EE8               	decfsz	wreg,f,c
 39238  014C46  D7FE               	bra	u19927
 39239  014C48  F000               	nop	
 39240                           
 39241                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 39242  014C4A  0E00               	movlw	0
 39243  014C4C  0101               	movlb	1	; () banked
 39244  014C4E  6F4F               	movwf	_power_state& (0+255),b
 39245                           
 39246                           ;flash.c: 139: break;
 39247  014C50  0012               	return	
 39248  014C52                     l1547:
 39249                           
 39250                           ; BSR set to: 1
 39251                           ;flash.c: 144: LATDbits.LD7 = 0;
 39252  014C52  9E8C               	bcf	3980,7,c	;volatile
 39253                           
 39254                           ; BSR set to: 1
 39255                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39256  014C54  0E0D               	movlw	13
 39257  014C56                     u19937:
 39258  014C56  2EE8               	decfsz	wreg,f,c
 39259  014C58  D7FE               	bra	u19937
 39260  014C5A  F000               	nop	
 39261                           
 39262                           ;flash.c: 146: LATDbits.LD7 = 1;
 39263  014C5C  8E8C               	bsf	3980,7,c	;volatile
 39264                           
 39265                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39266  014C5E  0E50               	movlw	80
 39267  014C60                     u19947:
 39268  014C60  2EE8               	decfsz	wreg,f,c
 39269  014C62  D7FE               	bra	u19947
 39270                           
 39271                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 39272  014C64  0E00               	movlw	0
 39273  014C66  0101               	movlb	1	; () banked
 39274  014C68  6F4F               	movwf	_power_state& (0+255),b
 39275                           
 39276                           ; BSR set to: 1
 39277                           ;flash.c: 150: }
 39278                           
 39279                           ;flash.c: 149: break;
 39280  014C6A  0012               	return	
 39281  014C6C                     l1544:
 39282                           
 39283                           ; BSR set to: 1
 39284  014C6C  0101               	movlb	1	; () banked
 39285  014C6E  514F               	movf	_power_state& (0+255),w,b
 39286                           
 39287                           ; Switch size 1, requested type "space"
 39288                           ; Number of cases is 2, Range of values is 1 to 2
 39289                           ; switch strategies available:
 39290                           ; Name         Instructions Cycles
 39291                           ; simple_byte            7     4 (average)
 39292                           ;	Chosen strategy is simple_byte
 39293  014C70  0A01               	xorlw	1	; case 1
 39294  014C72  B4D8               	btfsc	status,2,c
 39295  014C74  D7D9               	goto	l1545
 39296  014C76  0A03               	xorlw	3	; case 2
 39297  014C78  A4D8               	btfss	status,2,c
 39298  014C7A  0012               	return	
 39299  014C7C  D7EA               	goto	l1547
 39300  014C7E                     __end_of__flash_wakeup:
 39301                           	opt stack 0
 39302                           tosu	equ	0xFFF
 39303                           tosh	equ	0xFFE
 39304                           tosl	equ	0xFFD
 39305                           pclath	equ	0xFFA
 39306                           tblptru	equ	0xFF8
 39307                           tblptrh	equ	0xFF7
 39308                           tblptrl	equ	0xFF6
 39309                           tablat	equ	0xFF5
 39310                           prodh	equ	0xFF4
 39311                           prodl	equ	0xFF3
 39312                           intcon	equ	0xFF2
 39313                           postinc0	equ	0xFEE
 39314                           wreg	equ	0xFE8
 39315                           indf1	equ	0xFE7
 39316                           postinc1	equ	0xFE6
 39317                           postdec1	equ	0xFE5
 39318                           plusw1	equ	0xFE3
 39319                           fsr1h	equ	0xFE2
 39320                           fsr1l	equ	0xFE1
 39321                           indf2	equ	0xFDF
 39322                           postinc2	equ	0xFDE
 39323                           postdec2	equ	0xFDD
 39324                           plusw2	equ	0xFDB
 39325                           fsr2h	equ	0xFDA
 39326                           fsr2l	equ	0xFD9
 39327                           status	equ	0xFD8
 39328                           
 39329 ;; *************** function _spi_tx *****************
 39330 ;; Defined at:
 39331 ;;		line 108 in file "spi.c"
 39332 ;; Parameters:    Size  Location     Type
 39333 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39334 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39335 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39336 ;;  length          2    2[BANK0 ] unsigned int 
 39337 ;; Auto vars:     Size  Location     Type
 39338 ;;		None
 39339 ;; Return value:  Size  Location     Type
 39340 ;;                  1    wreg      void 
 39341 ;; Registers used:
 39342 ;;		wreg, status,2, status,0
 39343 ;; Tracked objects:
 39344 ;;		On entry : 0/0
 39345 ;;		On exit  : 0/0
 39346 ;;		Unchanged: 0/0
 39347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39350 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39351 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39352 ;;Total ram usage:        8 bytes
 39353 ;; Hardware stack levels used:    1
 39354 ;; Hardware stack levels required when called:   10
 39355 ;; This function calls:
 39356 ;;		Nothing
 39357 ;; This function is called by:
 39358 ;;		__flash_set_page_size
 39359 ;;		__flash_wakeup
 39360 ;;		__flash_copy_page_to_buffer
 39361 ;;		__flash_compare_page_to_buffer
 39362 ;;		__flash_write_page_from_buffer
 39363 ;;		__flash_erase_page
 39364 ;;		_flash_set_power_state
 39365 ;; This function uses a non-reentrant model
 39366 ;;
 39367                           
 39368                           	psect	text154
 39369  014B1C                     __ptext154:
 39370                           	opt stack 0
 39371  014B1C                     _spi_tx:
 39372                           	opt stack 17
 39373                           
 39374                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 39375                           
 39376                           ; BSR set to: 1
 39377                           ;incstack = 0
 39378  014B1C  9E88               	bcf	3976,7,c	;volatile
 39379                           
 39380                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 39381  014B1E  9C88               	bcf	3976,6,c	;volatile
 39382                           
 39383                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 39384  014B20  8A88               	bsf	3976,5,c	;volatile
 39385                           
 39386                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 39387  014B22  9888               	bcf	3976,4,c	;volatile
 39388                           
 39389                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 39390  014B24  9688               	bcf	3976,3,c	;volatile
 39391                           
 39392                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 39393  014B26  8488               	bsf	3976,2,c	;volatile
 39394                           
 39395                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 39396  014B28  9288               	bcf	3976,1,c	;volatile
 39397                           
 39398                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 39399  014B2A  9886               	bcf	3974,4,c	;volatile
 39400  014B2C  9A86               	bcf	3974,5,c	;volatile
 39401  014B2E  9C86               	bcf	3974,6,c	;volatile
 39402  014B30  9E86               	bcf	3974,7,c	;volatile
 39403                           
 39404                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 39405  014B32  9086               	bcf	3974,0,c	;volatile
 39406  014B34  9286               	bcf	3974,1,c	;volatile
 39407  014B36  9486               	bcf	3974,2,c	;volatile
 39408  014B38  9686               	bcf	3974,3,c	;volatile
 39409                           
 39410                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39411  014B3A  0100               	movlb	0	; () banked
 39412  014B3C  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 39413  014B3E  6E6A               	movwf	3946,c	;volatile
 39414                           
 39415                           ; BSR set to: 0
 39416                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39417  014B40  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 39418                           
 39419                           ; BSR set to: 0
 39420                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39421  014B44  0EFF               	movlw	255
 39422  014B46  6F64               	movwf	??_spi_tx& (0+255),b
 39423  014B48  0EFF               	movlw	255
 39424  014B4A  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 39425  014B4C  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 39426  014B50  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 39427  014B54  5164               	movf	??_spi_tx& (0+255),w,b
 39428  014B56  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 39429  014B58  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 39430  014B5A  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 39431  014B5C  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 39432  014B60  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 39433  014B62  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 39434  014B64  6E66               	movwf	3942,c	;volatile
 39435                           
 39436                           ; BSR set to: 0
 39437                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39438  014B66  0562               	decf	spi_tx@length& (0+255),w,b
 39439  014B68  6E67               	movwf	3943,c	;volatile
 39440                           
 39441                           ; BSR set to: 0
 39442                           ;spi.c: 136: LATDbits.LD7 = 0;
 39443  014B6A  9E8C               	bcf	3980,7,c	;volatile
 39444                           
 39445                           ; BSR set to: 0
 39446                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 39447  014B6C  8088               	bsf	3976,0,c	;volatile
 39448  014B6E                     
 39449                           ; BSR set to: 0
 39450  014B6E  B088               	btfsc	3976,0,c	;volatile
 39451  014B70  D7FE               	goto	l2191
 39452                           
 39453                           ;spi.c: 139: LATDbits.LD7 = 1;
 39454  014B72  8E8C               	bsf	3980,7,c	;volatile
 39455  014B74  0012               	return		;funcret
 39456  014B76                     __end_of_spi_tx:
 39457                           	opt stack 0
 39458                           tosu	equ	0xFFF
 39459                           tosh	equ	0xFFE
 39460                           tosl	equ	0xFFD
 39461                           pclath	equ	0xFFA
 39462                           tblptru	equ	0xFF8
 39463                           tblptrh	equ	0xFF7
 39464                           tblptrl	equ	0xFF6
 39465                           tablat	equ	0xFF5
 39466                           prodh	equ	0xFF4
 39467                           prodl	equ	0xFF3
 39468                           intcon	equ	0xFF2
 39469                           postinc0	equ	0xFEE
 39470                           wreg	equ	0xFE8
 39471                           indf1	equ	0xFE7
 39472                           postinc1	equ	0xFE6
 39473                           postdec1	equ	0xFE5
 39474                           plusw1	equ	0xFE3
 39475                           fsr1h	equ	0xFE2
 39476                           fsr1l	equ	0xFE1
 39477                           indf2	equ	0xFDF
 39478                           postinc2	equ	0xFDE
 39479                           postdec2	equ	0xFDD
 39480                           plusw2	equ	0xFDB
 39481                           fsr2h	equ	0xFDA
 39482                           fsr2l	equ	0xFD9
 39483                           status	equ	0xFD8
 39484                           
 39485 ;; *************** function __flash_get_status *****************
 39486 ;; Defined at:
 39487 ;;		line 117 in file "flash.c"
 39488 ;; Parameters:    Size  Location     Type
 39489 ;;		None
 39490 ;; Auto vars:     Size  Location     Type
 39491 ;;  status          2   15[BANK0 ] unsigned int 
 39492 ;;  command         1   14[BANK0 ] unsigned char 
 39493 ;; Return value:  Size  Location     Type
 39494 ;;                  2   12[BANK0 ] unsigned int 
 39495 ;; Registers used:
 39496 ;;		wreg, status,2, status,0, cstack
 39497 ;; Tracked objects:
 39498 ;;		On entry : 0/0
 39499 ;;		On exit  : 0/0
 39500 ;;		Unchanged: 0/0
 39501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39503 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39505 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39506 ;;Total ram usage:        5 bytes
 39507 ;; Hardware stack levels used:    1
 39508 ;; Hardware stack levels required when called:   11
 39509 ;; This function calls:
 39510 ;;		_spi_tx_rx
 39511 ;; This function is called by:
 39512 ;;		__flash_compare_page_to_buffer
 39513 ;;		__flash_is_busy
 39514 ;; This function uses a non-reentrant model
 39515 ;;
 39516                           
 39517                           	psect	text155
 39518  015770                     __ptext155:
 39519                           	opt stack 0
 39520  015770                     __flash_get_status:
 39521                           	opt stack 15
 39522                           
 39523                           ;flash.c: 121: uint8_t command = 0xD7;
 39524                           
 39525                           ;incstack = 0
 39526  015770  0ED7               	movlw	215
 39527  015772  0100               	movlb	0	; () banked
 39528  015774  6F6E               	movwf	__flash_get_status@command& (0+255),b
 39529                           
 39530                           ; BSR set to: 0
 39531                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39532  015776  0E6E               	movlw	low __flash_get_status@command
 39533  015778  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39534  01577A  0E00               	movlw	high __flash_get_status@command
 39535  01577C  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39536  01577E  0E00               	movlw	0
 39537  015780  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39538  015782  0E01               	movlw	1
 39539  015784  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39540  015786  0E6F               	movlw	low __flash_get_status@status
 39541  015788  6F64               	movwf	spi_tx_rx@data& (0+255),b
 39542  01578A  0E00               	movlw	high __flash_get_status@status
 39543  01578C  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 39544  01578E  0E00               	movlw	0
 39545  015790  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 39546  015792  0E02               	movlw	2
 39547  015794  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 39548  015796  ECE5  F09B         	call	_spi_tx_rx	;wreg free
 39549                           
 39550                           ;flash.c: 124: return status;
 39551  01579A  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 39552  01579E  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39553  0157A2  0012               	return	
 39554  0157A4                     __end_of__flash_get_status:
 39555                           	opt stack 0
 39556                           tosu	equ	0xFFF
 39557                           tosh	equ	0xFFE
 39558                           tosl	equ	0xFFD
 39559                           pclath	equ	0xFFA
 39560                           tblptru	equ	0xFF8
 39561                           tblptrh	equ	0xFF7
 39562                           tblptrl	equ	0xFF6
 39563                           tablat	equ	0xFF5
 39564                           prodh	equ	0xFF4
 39565                           prodl	equ	0xFF3
 39566                           intcon	equ	0xFF2
 39567                           postinc0	equ	0xFEE
 39568                           wreg	equ	0xFE8
 39569                           indf1	equ	0xFE7
 39570                           postinc1	equ	0xFE6
 39571                           postdec1	equ	0xFE5
 39572                           plusw1	equ	0xFE3
 39573                           fsr1h	equ	0xFE2
 39574                           fsr1l	equ	0xFE1
 39575                           indf2	equ	0xFDF
 39576                           postinc2	equ	0xFDE
 39577                           postdec2	equ	0xFDD
 39578                           plusw2	equ	0xFDB
 39579                           fsr2h	equ	0xFDA
 39580                           fsr2l	equ	0xFD9
 39581                           status	equ	0xFD8
 39582                           
 39583 ;; *************** function _spi_tx_rx *****************
 39584 ;; Defined at:
 39585 ;;		line 199 in file "spi.c"
 39586 ;; Parameters:    Size  Location     Type
 39587 ;;  command         2    0[BANK0 ] PTR unsigned char 
 39588 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 39589 ;;  command_leng    2    2[BANK0 ] unsigned int 
 39590 ;;  data            2    4[BANK0 ] PTR unsigned char 
 39591 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39592 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39593 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 39594 ;;  data_length     2    6[BANK0 ] unsigned int 
 39595 ;; Auto vars:     Size  Location     Type
 39596 ;;		None
 39597 ;; Return value:  Size  Location     Type
 39598 ;;                  1    wreg      void 
 39599 ;; Registers used:
 39600 ;;		wreg, status,2, status,0
 39601 ;; Tracked objects:
 39602 ;;		On entry : 0/0
 39603 ;;		On exit  : 0/0
 39604 ;;		Unchanged: 0/0
 39605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39606 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39608 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39609 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39610 ;;Total ram usage:       12 bytes
 39611 ;; Hardware stack levels used:    1
 39612 ;; Hardware stack levels required when called:   10
 39613 ;; This function calls:
 39614 ;;		Nothing
 39615 ;; This function is called by:
 39616 ;;		__flash_get_status
 39617 ;;		__flash_partial_read
 39618 ;;		__flash_buffer_read
 39619 ;; This function uses a non-reentrant model
 39620 ;;
 39621                           
 39622                           	psect	text156
 39623  0137CA                     __ptext156:
 39624                           	opt stack 0
 39625  0137CA                     _spi_tx_rx:
 39626                           	opt stack 15
 39627                           
 39628                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 39629                           
 39630                           ;incstack = 0
 39631  0137CA  9E88               	bcf	3976,7,c	;volatile
 39632                           
 39633                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 39634  0137CC  9C88               	bcf	3976,6,c	;volatile
 39635                           
 39636                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 39637  0137CE  8A88               	bsf	3976,5,c	;volatile
 39638                           
 39639                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 39640  0137D0  9888               	bcf	3976,4,c	;volatile
 39641                           
 39642                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 39643  0137D2  9688               	bcf	3976,3,c	;volatile
 39644                           
 39645                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 39646  0137D4  8488               	bsf	3976,2,c	;volatile
 39647                           
 39648                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 39649  0137D6  9288               	bcf	3976,1,c	;volatile
 39650                           
 39651                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 39652  0137D8  9886               	bcf	3974,4,c	;volatile
 39653  0137DA  9A86               	bcf	3974,5,c	;volatile
 39654  0137DC  9C86               	bcf	3974,6,c	;volatile
 39655  0137DE  9E86               	bcf	3974,7,c	;volatile
 39656                           
 39657                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 39658  0137E0  9086               	bcf	3974,0,c	;volatile
 39659  0137E2  9286               	bcf	3974,1,c	;volatile
 39660  0137E4  9486               	bcf	3974,2,c	;volatile
 39661  0137E6  9686               	bcf	3974,3,c	;volatile
 39662                           
 39663                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39664  0137E8  0100               	movlb	0	; () banked
 39665  0137EA  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 39666  0137EC  6E6A               	movwf	3946,c	;volatile
 39667                           
 39668                           ; BSR set to: 0
 39669                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39670  0137EE  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39671                           
 39672                           ; BSR set to: 0
 39673                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39674  0137F2  0EFF               	movlw	255
 39675  0137F4  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39676  0137F6  0EFF               	movlw	255
 39677  0137F8  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39678  0137FA  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39679  0137FE  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39680  013802  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39681  013804  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39682  013806  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39683  013808  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39684  01380A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39685  01380E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39686  013810  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39687  013812  6E66               	movwf	3942,c	;volatile
 39688                           
 39689                           ; BSR set to: 0
 39690                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39691  013814  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 39692  013816  6E67               	movwf	3943,c	;volatile
 39693                           
 39694                           ; BSR set to: 0
 39695                           ;spi.c: 227: LATDbits.LD7 = 0;
 39696  013818  9E8C               	bcf	3980,7,c	;volatile
 39697                           
 39698                           ; BSR set to: 0
 39699                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 39700  01381A  8088               	bsf	3976,0,c	;volatile
 39701  01381C                     
 39702                           ; BSR set to: 0
 39703  01381C  B088               	btfsc	3976,0,c	;volatile
 39704  01381E  D7FE               	goto	l2206
 39705                           
 39706                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 39707  013820  9A88               	bcf	3976,5,c	;volatile
 39708                           
 39709                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 39710  013822  8888               	bsf	3976,4,c	;volatile
 39711                           
 39712                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 39713  013824  9688               	bcf	3976,3,c	;volatile
 39714                           
 39715                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 39716  013826  9488               	bcf	3976,2,c	;volatile
 39717                           
 39718                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39719  013828  0100               	movlb	0	; () banked
 39720  01382A  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 39721  01382C  6E68               	movwf	3944,c	;volatile
 39722                           
 39723                           ; BSR set to: 0
 39724                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39725  01382E  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 39726                           
 39727                           ; BSR set to: 0
 39728                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39729  013832  0EFF               	movlw	255
 39730  013834  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39731  013836  0EFF               	movlw	255
 39732  013838  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39733  01383A  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 39734  01383E  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 39735  013842  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39736  013844  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39737  013846  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39738  013848  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39739  01384A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39740  01384E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39741  013850  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39742  013852  6E66               	movwf	3942,c	;volatile
 39743                           
 39744                           ; BSR set to: 0
 39745                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39746  013854  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 39747  013856  6E67               	movwf	3943,c	;volatile
 39748                           
 39749                           ; BSR set to: 0
 39750                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 39751  013858  8088               	bsf	3976,0,c	;volatile
 39752  01385A                     
 39753                           ; BSR set to: 0
 39754  01385A  B088               	btfsc	3976,0,c	;volatile
 39755  01385C  D7FE               	goto	l2209
 39756                           
 39757                           ;spi.c: 254: LATDbits.LD7 = 1;
 39758  01385E  8E8C               	bsf	3980,7,c	;volatile
 39759  013860  0012               	return		;funcret
 39760  013862                     __end_of_spi_tx_rx:
 39761                           	opt stack 0
 39762                           tosu	equ	0xFFF
 39763                           tosh	equ	0xFFE
 39764                           tosl	equ	0xFFD
 39765                           pclath	equ	0xFFA
 39766                           tblptru	equ	0xFF8
 39767                           tblptrh	equ	0xFF7
 39768                           tblptrl	equ	0xFF6
 39769                           tablat	equ	0xFF5
 39770                           prodh	equ	0xFF4
 39771                           prodl	equ	0xFF3
 39772                           intcon	equ	0xFF2
 39773                           postinc0	equ	0xFEE
 39774                           wreg	equ	0xFE8
 39775                           indf1	equ	0xFE7
 39776                           postinc1	equ	0xFE6
 39777                           postdec1	equ	0xFE5
 39778                           plusw1	equ	0xFE3
 39779                           fsr1h	equ	0xFE2
 39780                           fsr1l	equ	0xFE1
 39781                           indf2	equ	0xFDF
 39782                           postinc2	equ	0xFDE
 39783                           postdec2	equ	0xFDD
 39784                           plusw2	equ	0xFDB
 39785                           fsr2h	equ	0xFDA
 39786                           fsr2l	equ	0xFD9
 39787                           status	equ	0xFD8
 39788                           
 39789 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 39790 ;; Defined at:
 39791 ;;		line 993 in file "usb_device_msd.c"
 39792 ;; Parameters:    Size  Location     Type
 39793 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 39794 ;; Auto vars:     Size  Location     Type
 39795 ;;		None
 39796 ;; Return value:  Size  Location     Type
 39797 ;;                  1    wreg      void 
 39798 ;; Registers used:
 39799 ;;		wreg, status,2, status,0
 39800 ;; Tracked objects:
 39801 ;;		On entry : 0/0
 39802 ;;		On exit  : 0/0
 39803 ;;		Unchanged: 0/0
 39804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39807 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39809 ;;Total ram usage:        6 bytes
 39810 ;; Hardware stack levels used:    1
 39811 ;; Hardware stack levels required when called:   10
 39812 ;; This function calls:
 39813 ;;		Nothing
 39814 ;; This function is called by:
 39815 ;;		_MSDProcessCommandMediaPresent
 39816 ;; This function uses a non-reentrant model
 39817 ;;
 39818                           
 39819                           	psect	text157
 39820  012D0C                     __ptext157:
 39821                           	opt stack 0
 39822  012D0C                     _MSDComputeDeviceInAndResidue:
 39823                           	opt stack 16
 39824                           
 39825                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 39826                           
 39827                           ;incstack = 0
 39828  012D0C  0100               	movlb	0	; () banked
 39829  012D0E  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 39830  012D10  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 39831  012D12  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 39832  012D14  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 39833  012D16  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 39834  012D18  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 39835  012D1A  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 39836  012D1C  0102               	movlb	2	; () banked
 39837  012D1E  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 39838  012D20  0100               	movlb	0	; () banked
 39839  012D22  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 39840  012D24  0102               	movlb	2	; () banked
 39841  012D26  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 39842  012D28  0100               	movlb	0	; () banked
 39843  012D2A  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 39844  012D2C  0102               	movlb	2	; () banked
 39845  012D2E  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 39846  012D30  0100               	movlb	0	; () banked
 39847  012D32  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 39848  012D34  0102               	movlb	2	; () banked
 39849  012D36  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 39850  012D38  B0D8               	btfsc	status,0,c
 39851  012D3A  D00E               	goto	l675
 39852                           
 39853                           ; BSR set to: 2
 39854                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 39855  012D3C  0E00               	movlw	0
 39856  012D3E  010D               	movlb	13	; () banked
 39857  012D40  6F88               	movwf	136,b	;volatile
 39858  012D42  0E00               	movlw	0
 39859  012D44  6F89               	movwf	137,b	;volatile
 39860  012D46  0E00               	movlw	0
 39861  012D48  6F8A               	movwf	138,b	;volatile
 39862  012D4A  0E00               	movlw	0
 39863  012D4C  6F8B               	movwf	139,b	;volatile
 39864                           
 39865                           ; BSR set to: 13
 39866                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 39867  012D4E  C208  F13B         	movff	_gblCBW+8,_TransferLength
 39868  012D52  C209  F13C         	movff	_gblCBW+9,_TransferLength+1
 39869                           
 39870                           ;usb_device_msd.c: 1002: }
 39871  012D56  0012               	return	
 39872  012D58                     l675:
 39873                           
 39874                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 39875                           
 39876                           ; BSR set to: 13
 39877  012D58  0101               	movlb	1	; () banked
 39878  012D5A  513B               	movf	_TransferLength& (0+255),w,b
 39879  012D5C  0100               	movlb	0	; () banked
 39880  012D5E  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 39881  012D60  0101               	movlb	1	; () banked
 39882  012D62  513C               	movf	(_TransferLength+1)& (0+255),w,b
 39883  012D64  0100               	movlb	0	; () banked
 39884  012D66  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 39885  012D68  B0D8               	btfsc	status,0,c
 39886  012D6A  D004               	goto	l677
 39887                           
 39888                           ; BSR set to: 0
 39889                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 39890  012D6C  C060  F13B         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 39891  012D70  C061  F13C         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 39892  012D74                     l677:
 39893                           
 39894                           ; BSR set to: 0
 39895                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 39896                           
 39897                           ; BSR set to: 0
 39898  012D74  0101               	movlb	1	; () banked
 39899  012D76  513B               	movf	_TransferLength& (0+255),w,b
 39900  012D78  0100               	movlb	0	; () banked
 39901  012D7A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 39902  012D7C  0101               	movlb	1	; () banked
 39903  012D7E  513C               	movf	(_TransferLength+1)& (0+255),w,b
 39904  012D80  0100               	movlb	0	; () banked
 39905  012D82  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 39906  012D84  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 39907  012D86  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 39908  012D88  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 39909  012D8A  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 39910  012D8C  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 39911  012D8E  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 39912  012D90  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 39913  012D92  0E00               	movlw	0
 39914  012D94  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 39915  012D96  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 39916  012D98  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 39917  012D9A  0102               	movlb	2	; () banked
 39918  012D9C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 39919  012D9E  0100               	movlb	0	; () banked
 39920  012DA0  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 39921  012DA2  010D               	movlb	13	; () banked
 39922  012DA4  6F88               	movwf	136,b	;volatile
 39923  012DA6  0102               	movlb	2	; () banked
 39924  012DA8  5109               	movf	(_gblCBW+9)& (0+255),w,b
 39925  012DAA  0100               	movlb	0	; () banked
 39926  012DAC  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 39927  012DAE  010D               	movlb	13	; () banked
 39928  012DB0  6F89               	movwf	137,b	;volatile
 39929  012DB2  0102               	movlb	2	; () banked
 39930  012DB4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 39931  012DB6  0100               	movlb	0	; () banked
 39932  012DB8  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 39933  012DBA  010D               	movlb	13	; () banked
 39934  012DBC  6F8A               	movwf	138,b	;volatile
 39935  012DBE  0102               	movlb	2	; () banked
 39936  012DC0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 39937  012DC2  0100               	movlb	0	; () banked
 39938  012DC4  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 39939  012DC6  010D               	movlb	13	; () banked
 39940  012DC8  6F8B               	movwf	139,b	;volatile
 39941  012DCA  0012               	return	
 39942  012DCC                     __end_of_MSDComputeDeviceInAndResidue:
 39943                           	opt stack 0
 39944                           tosu	equ	0xFFF
 39945                           tosh	equ	0xFFE
 39946                           tosl	equ	0xFFD
 39947                           pclath	equ	0xFFA
 39948                           tblptru	equ	0xFF8
 39949                           tblptrh	equ	0xFF7
 39950                           tblptrl	equ	0xFF6
 39951                           tablat	equ	0xFF5
 39952                           prodh	equ	0xFF4
 39953                           prodl	equ	0xFF3
 39954                           intcon	equ	0xFF2
 39955                           postinc0	equ	0xFEE
 39956                           wreg	equ	0xFE8
 39957                           indf1	equ	0xFE7
 39958                           postinc1	equ	0xFE6
 39959                           postdec1	equ	0xFE5
 39960                           plusw1	equ	0xFE3
 39961                           fsr1h	equ	0xFE2
 39962                           fsr1l	equ	0xFE1
 39963                           indf2	equ	0xFDF
 39964                           postinc2	equ	0xFDE
 39965                           postdec2	equ	0xFDD
 39966                           plusw2	equ	0xFDB
 39967                           fsr2h	equ	0xFDA
 39968                           fsr2l	equ	0xFD9
 39969                           status	equ	0xFD8
 39970                           
 39971 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 39972 ;; Defined at:
 39973 ;;		line 18 in file "external_flash.c"
 39974 ;; Parameters:    Size  Location     Type
 39975 ;;  config          2    0[BANK0 ] PTR void 
 39976 ;;		 -> NULL(0), 
 39977 ;; Auto vars:     Size  Location     Type
 39978 ;;		None
 39979 ;; Return value:  Size  Location     Type
 39980 ;;                  2    0[BANK0 ] unsigned int 
 39981 ;; Registers used:
 39982 ;;		wreg, status,2
 39983 ;; Tracked objects:
 39984 ;;		On entry : 0/0
 39985 ;;		On exit  : 0/0
 39986 ;;		Unchanged: 0/0
 39987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39991 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39992 ;;Total ram usage:        2 bytes
 39993 ;; Hardware stack levels used:    1
 39994 ;; Hardware stack levels required when called:   10
 39995 ;; This function calls:
 39996 ;;		Nothing
 39997 ;; This function is called by:
 39998 ;;		_MSDProcessCommandMediaPresent
 39999 ;; This function uses a non-reentrant model
 40000 ;;
 40001                           
 40002                           	psect	text158
 40003  015DA4                     __ptext158:
 40004                           	opt stack 0
 40005  015DA4                     _ExternalFlash_SectorSizeRead:
 40006                           	opt stack 16
 40007                           
 40008                           ;external_flash.c: 20: return 512;
 40009                           
 40010                           ; BSR set to: 13
 40011                           ;incstack = 0
 40012  015DA4  0E02               	movlw	2
 40013  015DA6  0100               	movlb	0	; () banked
 40014  015DA8  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 40015  015DAA  0E00               	movlw	0
 40016  015DAC  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 40017  015DAE  0012               	return	
 40018  015DB0                     __end_of_ExternalFlash_SectorSizeRead:
 40019                           	opt stack 0
 40020                           tosu	equ	0xFFF
 40021                           tosh	equ	0xFFE
 40022                           tosl	equ	0xFFD
 40023                           pclath	equ	0xFFA
 40024                           tblptru	equ	0xFF8
 40025                           tblptrh	equ	0xFF7
 40026                           tblptrl	equ	0xFF6
 40027                           tablat	equ	0xFF5
 40028                           prodh	equ	0xFF4
 40029                           prodl	equ	0xFF3
 40030                           intcon	equ	0xFF2
 40031                           postinc0	equ	0xFEE
 40032                           wreg	equ	0xFE8
 40033                           indf1	equ	0xFE7
 40034                           postinc1	equ	0xFE6
 40035                           postdec1	equ	0xFE5
 40036                           plusw1	equ	0xFE3
 40037                           fsr1h	equ	0xFE2
 40038                           fsr1l	equ	0xFE1
 40039                           indf2	equ	0xFDF
 40040                           postinc2	equ	0xFDE
 40041                           postdec2	equ	0xFDD
 40042                           plusw2	equ	0xFDB
 40043                           fsr2h	equ	0xFDA
 40044                           fsr2l	equ	0xFD9
 40045                           status	equ	0xFD8
 40046                           
 40047 ;; *************** function _ExternalFlash_CapacityRead *****************
 40048 ;; Defined at:
 40049 ;;		line 23 in file "external_flash.c"
 40050 ;; Parameters:    Size  Location     Type
 40051 ;;  config          2    0[BANK0 ] PTR void 
 40052 ;;		 -> NULL(0), 
 40053 ;; Auto vars:     Size  Location     Type
 40054 ;;		None
 40055 ;; Return value:  Size  Location     Type
 40056 ;;                  4    0[BANK0 ] unsigned long 
 40057 ;; Registers used:
 40058 ;;		wreg, status,2
 40059 ;; Tracked objects:
 40060 ;;		On entry : 0/0
 40061 ;;		On exit  : 0/0
 40062 ;;		Unchanged: 0/0
 40063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40067 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40068 ;;Total ram usage:        4 bytes
 40069 ;; Hardware stack levels used:    1
 40070 ;; Hardware stack levels required when called:   10
 40071 ;; This function calls:
 40072 ;;		Nothing
 40073 ;; This function is called by:
 40074 ;;		_MSDProcessCommandMediaPresent
 40075 ;; This function uses a non-reentrant model
 40076 ;;
 40077                           
 40078                           	psect	text159
 40079  015D28                     __ptext159:
 40080                           	opt stack 0
 40081  015D28                     _ExternalFlash_CapacityRead:
 40082                           	opt stack 16
 40083                           
 40084                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 40085                           
 40086                           ; BSR set to: 0
 40087                           ;incstack = 0
 40088  015D28  0EFF               	movlw	255
 40089  015D2A  0100               	movlb	0	; () banked
 40090  015D2C  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 40091  015D2E  0E1F               	movlw	31
 40092  015D30  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 40093  015D32  0E00               	movlw	0
 40094  015D34  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 40095  015D36  0E00               	movlw	0
 40096  015D38  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 40097  015D3A  0012               	return	
 40098  015D3C                     __end_of_ExternalFlash_CapacityRead:
 40099                           	opt stack 0
 40100                           tosu	equ	0xFFF
 40101                           tosh	equ	0xFFE
 40102                           tosl	equ	0xFFD
 40103                           pclath	equ	0xFFA
 40104                           tblptru	equ	0xFF8
 40105                           tblptrh	equ	0xFF7
 40106                           tblptrl	equ	0xFF6
 40107                           tablat	equ	0xFF5
 40108                           prodh	equ	0xFF4
 40109                           prodl	equ	0xFF3
 40110                           intcon	equ	0xFF2
 40111                           postinc0	equ	0xFEE
 40112                           wreg	equ	0xFE8
 40113                           indf1	equ	0xFE7
 40114                           postinc1	equ	0xFE6
 40115                           postdec1	equ	0xFE5
 40116                           plusw1	equ	0xFE3
 40117                           fsr1h	equ	0xFE2
 40118                           fsr1l	equ	0xFE1
 40119                           indf2	equ	0xFDF
 40120                           postinc2	equ	0xFDE
 40121                           postdec2	equ	0xFDD
 40122                           plusw2	equ	0xFDB
 40123                           fsr2h	equ	0xFDA
 40124                           fsr2l	equ	0xFD9
 40125                           status	equ	0xFD8
 40126                           
 40127 ;; *************** function _ExternalFlash_MediaInitialize *****************
 40128 ;; Defined at:
 40129 ;;		line 10 in file "external_flash.c"
 40130 ;; Parameters:    Size  Location     Type
 40131 ;;  config          2    0[BANK0 ] PTR void 
 40132 ;;		 -> NULL(0), 
 40133 ;; Auto vars:     Size  Location     Type
 40134 ;;		None
 40135 ;; Return value:  Size  Location     Type
 40136 ;;                  2    0[BANK0 ] PTR struct .
 40137 ;; Registers used:
 40138 ;;		wreg, status,2, status,0
 40139 ;; Tracked objects:
 40140 ;;		On entry : 0/0
 40141 ;;		On exit  : 0/0
 40142 ;;		Unchanged: 0/0
 40143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40148 ;;Total ram usage:        2 bytes
 40149 ;; Hardware stack levels used:    1
 40150 ;; Hardware stack levels required when called:   10
 40151 ;; This function calls:
 40152 ;;		Nothing
 40153 ;; This function is called by:
 40154 ;;		_USBMSDInit
 40155 ;;		_MSDProcessCommand
 40156 ;; This function uses a non-reentrant model
 40157 ;;
 40158                           
 40159                           	psect	text160
 40160  015C16                     __ptext160:
 40161                           	opt stack 0
 40162  015C16                     _ExternalFlash_MediaInitialize:
 40163                           	opt stack 0
 40164                           
 40165                           ; BSR set to: 0
 40166                           ;Skip over the trampoline to the duplicate function for level 2
 40167  015C16  B25F               	btfsc	btemp,1,c
 40168  015C18  EF70  F0AE         	goto	i2_ExternalFlash_MediaInitialize
 40169  015C1C                     _ExternalFlash_MediaInitialize$intlevel0:
 40170                           	opt stack 17
 40171                           
 40172                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 40173                           
 40174                           ;incstack = 0
 40175  015C1C  0102               	movlb	2	; () banked
 40176  015C1E  8193               	bsf	(_mediaInformation+1)& (0+255),0,b
 40177                           
 40178                           ; BSR set to: 2
 40179                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 40180  015C20  0E02               	movlw	2
 40181  015C22  6F95               	movwf	(_mediaInformation+3)& (0+255),b
 40182  015C24  0E00               	movlw	0
 40183  015C26  6F94               	movwf	(_mediaInformation+2)& (0+255),b
 40184                           
 40185                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 40186  015C28  0E00               	movlw	0
 40187  015C2A  6F92               	movwf	_mediaInformation& (0+255),b
 40188                           
 40189                           ; BSR set to: 2
 40190                           ;external_flash.c: 15: return &mediaInformation;
 40191  015C2C  0E92               	movlw	low _mediaInformation
 40192  015C2E  0100               	movlb	0	; () banked
 40193  015C30  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 40194  015C32  0E02               	movlw	high _mediaInformation
 40195  015C34  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 40196  015C36  0012               	return	
 40197  015C38                     __end_of_ExternalFlash_MediaInitialize:
 40198                           	opt stack 0
 40199                           tosu	equ	0xFFF
 40200                           tosh	equ	0xFFE
 40201                           tosl	equ	0xFFD
 40202                           pclath	equ	0xFFA
 40203                           tblptru	equ	0xFF8
 40204                           tblptrh	equ	0xFF7
 40205                           tblptrl	equ	0xFF6
 40206                           tablat	equ	0xFF5
 40207                           prodh	equ	0xFF4
 40208                           prodl	equ	0xFF3
 40209                           intcon	equ	0xFF2
 40210                           postinc0	equ	0xFEE
 40211                           wreg	equ	0xFE8
 40212                           indf1	equ	0xFE7
 40213                           postinc1	equ	0xFE6
 40214                           postdec1	equ	0xFE5
 40215                           plusw1	equ	0xFE3
 40216                           fsr1h	equ	0xFE2
 40217                           fsr1l	equ	0xFE1
 40218                           indf2	equ	0xFDF
 40219                           postinc2	equ	0xFDE
 40220                           postdec2	equ	0xFDD
 40221                           plusw2	equ	0xFDB
 40222                           fsr2h	equ	0xFDA
 40223                           fsr2l	equ	0xFD9
 40224                           status	equ	0xFD8
 40225                           
 40226 ;; *************** function _ExternalFlash_MediaDetect *****************
 40227 ;; Defined at:
 40228 ;;		line 29 in file "external_flash.c"
 40229 ;; Parameters:    Size  Location     Type
 40230 ;;  config          2    0[BANK0 ] PTR void 
 40231 ;;		 -> NULL(0), 
 40232 ;; Auto vars:     Size  Location     Type
 40233 ;;		None
 40234 ;; Return value:  Size  Location     Type
 40235 ;;                  1    wreg      unsigned char 
 40236 ;; Registers used:
 40237 ;;		wreg
 40238 ;; Tracked objects:
 40239 ;;		On entry : 0/0
 40240 ;;		On exit  : 0/0
 40241 ;;		Unchanged: 0/0
 40242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40246 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40247 ;;Total ram usage:        2 bytes
 40248 ;; Hardware stack levels used:    1
 40249 ;; Hardware stack levels required when called:   10
 40250 ;; This function calls:
 40251 ;;		Nothing
 40252 ;; This function is called by:
 40253 ;;		_USBMSDInit
 40254 ;;		_MSDProcessCommand
 40255 ;; This function uses a non-reentrant model
 40256 ;;
 40257                           
 40258                           	psect	text161
 40259  015DF0                     __ptext161:
 40260                           	opt stack 0
 40261  015DF0                     _ExternalFlash_MediaDetect:
 40262                           	opt stack 0
 40263                           
 40264                           ; BSR set to: 0
 40265                           ;Skip over the trampoline to the duplicate function for level 2
 40266  015DF0  B25F               	btfsc	btemp,1,c
 40267  015DF2  EF1A  F0AF         	goto	i2_ExternalFlash_MediaDetect
 40268  015DF6                     _ExternalFlash_MediaDetect$intlevel0:
 40269                           	opt stack 17
 40270                           
 40271                           ;external_flash.c: 31: return 1;
 40272                           
 40273                           ;incstack = 0
 40274  015DF6  0E01               	movlw	1
 40275  015DF8  0012               	return	
 40276  015DFA                     __end_of_ExternalFlash_MediaDetect:
 40277                           	opt stack 0
 40278                           tosu	equ	0xFFF
 40279                           tosh	equ	0xFFE
 40280                           tosl	equ	0xFFD
 40281                           pclath	equ	0xFFA
 40282                           tblptru	equ	0xFF8
 40283                           tblptrh	equ	0xFF7
 40284                           tblptrl	equ	0xFF6
 40285                           tablat	equ	0xFF5
 40286                           prodh	equ	0xFF4
 40287                           prodl	equ	0xFF3
 40288                           intcon	equ	0xFF2
 40289                           postinc0	equ	0xFEE
 40290                           wreg	equ	0xFE8
 40291                           indf1	equ	0xFE7
 40292                           postinc1	equ	0xFE6
 40293                           postdec1	equ	0xFE5
 40294                           plusw1	equ	0xFE3
 40295                           fsr1h	equ	0xFE2
 40296                           fsr1l	equ	0xFE1
 40297                           indf2	equ	0xFDF
 40298                           postinc2	equ	0xFDE
 40299                           postdec2	equ	0xFDD
 40300                           plusw2	equ	0xFDB
 40301                           fsr2h	equ	0xFDA
 40302                           fsr2l	equ	0xFD9
 40303                           status	equ	0xFD8
 40304                           
 40305 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 40306 ;; Defined at:
 40307 ;;		line 73 in file "app_device_custom_hid.c"
 40308 ;; Parameters:    Size  Location     Type
 40309 ;;		None
 40310 ;; Auto vars:     Size  Location     Type
 40311 ;;  idx             1    0        unsigned char 
 40312 ;; Return value:  Size  Location     Type
 40313 ;;                  1    wreg      void 
 40314 ;; Registers used:
 40315 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40316 ;; Tracked objects:
 40317 ;;		On entry : 0/0
 40318 ;;		On exit  : 0/0
 40319 ;;		Unchanged: 0/0
 40320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40325 ;;Total ram usage:        0 bytes
 40326 ;; Hardware stack levels used:    1
 40327 ;; Hardware stack levels required when called:   17
 40328 ;; This function calls:
 40329 ;;		_USBTransferOnePacket
 40330 ;;		_api_parse
 40331 ;;		_api_prepare
 40332 ;; This function is called by:
 40333 ;;		_main
 40334 ;; This function uses a non-reentrant model
 40335 ;;
 40336                           
 40337                           	psect	text162
 40338  01340E                     __ptext162:
 40339                           	opt stack 0
 40340  01340E                     _APP_DeviceCustomHIDTasks:
 40341                           	opt stack 13
 40342                           
 40343                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 40344                           
 40345                           ;incstack = 0
 40346  01340E  0E20               	movlw	32
 40347  013410  605D               	cpfslt	_USBDeviceState,c	;volatile
 40348  013412  D001               	goto	l944
 40349  013414  0012               	return	
 40350  013416                     l944:
 40351                           
 40352                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 40353  013416  B265               	btfsc	3941,1,c	;volatile
 40354  013418  0012               	return	
 40355                           
 40356                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 40357                           
 40358                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 40359  01341A  0101               	movlb	1	; () banked
 40360  01341C  5139               	movf	_USBOutHandle& (0+255),w,b
 40361  01341E  113A               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 40362  013420  B4D8               	btfsc	status,2,c
 40363  013422  D006               	goto	u17650
 40364                           
 40365                           ; BSR set to: 1
 40366  013424  C139  FFD9         	movff	_USBOutHandle,fsr2l
 40367  013428  C13A  FFDA         	movff	_USBOutHandle+1,fsr2h
 40368  01342C  BEDF               	btfsc	indf2,7,c
 40369  01342E  0012               	return	
 40370  013430                     u17650:
 40371                           
 40372                           ; BSR set to: 1
 40373                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 40374                           
 40375                           ; BSR set to: 1
 40376  013430  5137               	movf	_USBInHandle& (0+255),w,b
 40377  013432  1138               	iorwf	(_USBInHandle+1)& (0+255),w,b
 40378  013434  B4D8               	btfsc	status,2,c
 40379  013436  D006               	goto	u17670
 40380                           
 40381                           ; BSR set to: 1
 40382  013438  C137  FFD9         	movff	_USBInHandle,fsr2l
 40383  01343C  C138  FFDA         	movff	_USBInHandle+1,fsr2h
 40384  013440  BEDF               	btfsc	indf2,7,c
 40385  013442  D01B               	goto	l950
 40386  013444                     u17670:
 40387                           
 40388                           ; BSR set to: 1
 40389                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 40390                           
 40391                           ; BSR set to: 1
 40392  013444  0E80               	movlw	low _ReceivedDataBuffer
 40393  013446  0100               	movlb	0	; () banked
 40394  013448  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 40395  01344A  0E03               	movlw	high _ReceivedDataBuffer
 40396  01344C  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 40397  01344E  0E40               	movlw	low _ToSendDataBuffer
 40398  013450  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 40399  013452  0E03               	movlw	high _ToSendDataBuffer
 40400  013454  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 40401  013456  EC02  F092         	call	_api_prepare	;wreg free
 40402                           
 40403                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 40404  01345A  0E01               	movlw	1
 40405  01345C  0100               	movlb	0	; () banked
 40406  01345E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40407  013460  0E40               	movlw	low _ToSendDataBuffer
 40408  013462  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40409  013464  0E03               	movlw	high _ToSendDataBuffer
 40410  013466  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40411  013468  0E40               	movlw	64
 40412  01346A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40413  01346C  0E01               	movlw	1
 40414  01346E  EC87  F089         	call	_USBTransferOnePacket
 40415  013472  C060  F137         	movff	?_USBTransferOnePacket,_USBInHandle
 40416  013476  C061  F138         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 40417  01347A                     l950:
 40418                           
 40419                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 40420  01347A  0E80               	movlw	low _ReceivedDataBuffer
 40421  01347C  0100               	movlb	0	; () banked
 40422  01347E  6FA7               	movwf	api_parse@inBuffer& (0+255),b
 40423  013480  0E03               	movlw	high _ReceivedDataBuffer
 40424  013482  6FA8               	movwf	(api_parse@inBuffer+1)& (0+255),b
 40425  013484  0E40               	movlw	64
 40426  013486  6FA9               	movwf	api_parse@receivedDataLength& (0+255),b
 40427  013488  0E40               	movlw	low _ToSendDataBuffer
 40428  01348A  6FAA               	movwf	api_parse@outBuffer& (0+255),b
 40429  01348C  0E03               	movlw	high _ToSendDataBuffer
 40430  01348E  6FAB               	movwf	(api_parse@outBuffer+1)& (0+255),b
 40431  013490  ECA2  F084         	call	_api_parse	;wreg free
 40432                           
 40433                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 40434  013494  0E00               	movlw	0
 40435  013496  0100               	movlb	0	; () banked
 40436  013498  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40437  01349A  0E80               	movlw	low _ReceivedDataBuffer
 40438  01349C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40439  01349E  0E03               	movlw	high _ReceivedDataBuffer
 40440  0134A0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40441  0134A2  0E40               	movlw	64
 40442  0134A4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40443  0134A6  0E01               	movlw	1
 40444  0134A8  EC87  F089         	call	_USBTransferOnePacket
 40445  0134AC  C060  F139         	movff	?_USBTransferOnePacket,_USBOutHandle
 40446  0134B0  C061  F13A         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 40447  0134B4  0012               	return	
 40448  0134B6                     __end_of_APP_DeviceCustomHIDTasks:
 40449                           	opt stack 0
 40450                           tosu	equ	0xFFF
 40451                           tosh	equ	0xFFE
 40452                           tosl	equ	0xFFD
 40453                           pclath	equ	0xFFA
 40454                           tblptru	equ	0xFF8
 40455                           tblptrh	equ	0xFF7
 40456                           tblptrl	equ	0xFF6
 40457                           tablat	equ	0xFF5
 40458                           prodh	equ	0xFF4
 40459                           prodl	equ	0xFF3
 40460                           intcon	equ	0xFF2
 40461                           postinc0	equ	0xFEE
 40462                           wreg	equ	0xFE8
 40463                           indf1	equ	0xFE7
 40464                           postinc1	equ	0xFE6
 40465                           postdec1	equ	0xFE5
 40466                           plusw1	equ	0xFE3
 40467                           fsr1h	equ	0xFE2
 40468                           fsr1l	equ	0xFE1
 40469                           indf2	equ	0xFDF
 40470                           postinc2	equ	0xFDE
 40471                           postdec2	equ	0xFDD
 40472                           plusw2	equ	0xFDB
 40473                           fsr2h	equ	0xFDA
 40474                           fsr2l	equ	0xFD9
 40475                           status	equ	0xFD8
 40476                           
 40477 ;; *************** function _api_prepare *****************
 40478 ;; Defined at:
 40479 ;;		line 38 in file "api.c"
 40480 ;; Parameters:    Size  Location     Type
 40481 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 40482 ;;		 -> ReceivedDataBuffer(64), 
 40483 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 40484 ;;		 -> ToSendDataBuffer(64), 
 40485 ;; Auto vars:     Size  Location     Type
 40486 ;;  command         1   20[BANK0 ] enum E6715
 40487 ;; Return value:  Size  Location     Type
 40488 ;;                  1    wreg      void 
 40489 ;; Registers used:
 40490 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40491 ;; Tracked objects:
 40492 ;;		On entry : 0/0
 40493 ;;		On exit  : 0/0
 40494 ;;		Unchanged: 0/0
 40495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40496 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40499 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40500 ;;Total ram usage:        5 bytes
 40501 ;; Hardware stack levels used:    1
 40502 ;; Hardware stack levels required when called:   12
 40503 ;; This function calls:
 40504 ;;		__fill_buffer_get_display
 40505 ;;		__fill_buffer_get_mode_details
 40506 ;;		__fill_buffer_get_status
 40507 ;;		_memcpy
 40508 ;; This function is called by:
 40509 ;;		_APP_DeviceCustomHIDTasks
 40510 ;; This function uses a non-reentrant model
 40511 ;;
 40512                           
 40513                           	psect	text163
 40514  012404                     __ptext163:
 40515                           	opt stack 0
 40516  012404                     _api_prepare:
 40517                           	opt stack 17
 40518                           
 40519                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 40520                           
 40521                           ;incstack = 0
 40522  012404  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 40523  012408  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 40524  01240C  50DF               	movf	indf2,w,c
 40525  01240E  0100               	movlb	0	; () banked
 40526  012410  6F74               	movwf	api_prepare@command& (0+255),b
 40527                           
 40528                           ; BSR set to: 0
 40529                           ;api.c: 42: if(command>0x7F)
 40530  012412  0E7F               	movlw	127
 40531  012414  6574               	cpfsgt	api_prepare@command& (0+255),b
 40532  012416  D051               	goto	l2257
 40533                           
 40534                           ; BSR set to: 0
 40535                           ;api.c: 49: outBuffer[0] = 0x99;
 40536                           
 40537                           ; BSR set to: 0
 40538                           
 40539                           ;api.c: 45: {;api.c: 48: default:
 40540                           
 40541                           ; BSR set to: 0
 40542                           ;api.c: 43: {;api.c: 44: switch(command)
 40543  012418  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40544  01241C  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40545  012420  0E99               	movlw	153
 40546  012422  6EDF               	movwf	indf2,c
 40547                           
 40548                           ; BSR set to: 0
 40549                           ;api.c: 50: outBuffer[1] = 0x99;
 40550  012424  EE20 F001          	lfsr	2,1
 40551  012428  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40552  01242A  26D9               	addwf	fsr2l,f,c
 40553  01242C  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40554  01242E  22DA               	addwfc	fsr2h,f,c
 40555  012430  0E99               	movlw	153
 40556  012432  6EDF               	movwf	indf2,c
 40557                           
 40558                           ;api.c: 51: }
 40559  012434  0012               	return	
 40560  012436                     
 40561                           ; BSR set to: 0
 40562                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 40563                           
 40564                           ; BSR set to: 0
 40565  012436  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 40566  01243A  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 40567  01243E  ECE5  F072         	call	__fill_buffer_get_status	;wreg free
 40568                           
 40569                           ;api.c: 65: break;
 40570  012442  0012               	return	
 40571  012444                     
 40572                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 40573  012444  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40574  012448  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40575  01244C  0E00               	movlw	0
 40576  01244E  0100               	movlb	0	; () banked
 40577  012450  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40578  012452  ECA0  F097         	call	__fill_buffer_get_display	;wreg free
 40579                           
 40580                           ;api.c: 70: break;
 40581  012456  0012               	return	
 40582  012458                     
 40583                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 40584  012458  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40585  01245C  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40586  012460  0E01               	movlw	1
 40587  012462  0100               	movlb	0	; () banked
 40588  012464  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40589  012466  ECA0  F097         	call	__fill_buffer_get_display	;wreg free
 40590                           
 40591                           ;api.c: 75: break;
 40592  01246A  0012               	return	
 40593  01246C                     
 40594                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 40595  01246C  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 40596  012470  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 40597  012474  EC83  F078         	call	__fill_buffer_get_mode_details	;wreg free
 40598                           
 40599                           ;api.c: 80: break;
 40600  012478  0012               	return	
 40601  01247A                     
 40602                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 40603  01247A  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 40604  01247E  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 40605  012482  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 40606  012486  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 40607  01248A  0E00               	movlw	0
 40608  01248C  0100               	movlb	0	; () banked
 40609  01248E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40610  012490  0E40               	movlw	64
 40611  012492  6F64               	movwf	memcpy@n& (0+255),b
 40612  012494  ECEF  F0A3         	call	_memcpy	;wreg free
 40613                           
 40614                           ;api.c: 85: break;
 40615  012498  0012               	return	
 40616  01249A                     
 40617                           ;api.c: 88: outBuffer[0] = 0x99;
 40618  01249A  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40619  01249E  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40620  0124A2  0E99               	movlw	153
 40621  0124A4  6EDF               	movwf	indf2,c
 40622                           
 40623                           ;api.c: 89: outBuffer[1] = 0x99;
 40624  0124A6  0100               	movlb	0	; () banked
 40625  0124A8  EE20 F001          	lfsr	2,1
 40626  0124AC  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40627  0124AE  26D9               	addwf	fsr2l,f,c
 40628  0124B0  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40629  0124B2  22DA               	addwfc	fsr2h,f,c
 40630  0124B4  0E99               	movlw	153
 40631  0124B6  6EDF               	movwf	indf2,c
 40632                           
 40633                           ;api.c: 90: }
 40634  0124B8  0012               	return	
 40635  0124BA                     l2257:
 40636                           
 40637                           ; BSR set to: 0
 40638                           
 40639                           ; BSR set to: 0
 40640  0124BA  5174               	movf	api_prepare@command& (0+255),w,b
 40641                           
 40642                           ; Switch size 1, requested type "space"
 40643                           ; Number of cases is 6, Range of values is 0 to 32
 40644                           ; switch strategies available:
 40645                           ; Name         Instructions Cycles
 40646                           ; simple_byte           19    10 (average)
 40647                           ;	Chosen strategy is simple_byte
 40648  0124BC  0A00               	xorlw	0	; case 0
 40649  0124BE  B4D8               	btfsc	status,2,c
 40650  0124C0  0012               	return	
 40651  0124C2  0A10               	xorlw	16	; case 16
 40652  0124C4  B4D8               	btfsc	status,2,c
 40653  0124C6  D7B7               	goto	l2260
 40654  0124C8  0A01               	xorlw	1	; case 17
 40655  0124CA  B4D8               	btfsc	status,2,c
 40656  0124CC  D7BB               	goto	l2261
 40657  0124CE  0A03               	xorlw	3	; case 18
 40658  0124D0  B4D8               	btfsc	status,2,c
 40659  0124D2  D7C2               	goto	l2262
 40660  0124D4  0A01               	xorlw	1	; case 19
 40661  0124D6  B4D8               	btfsc	status,2,c
 40662  0124D8  D7C9               	goto	l2263
 40663  0124DA  0A33               	xorlw	51	; case 32
 40664  0124DC  B4D8               	btfsc	status,2,c
 40665  0124DE  D7CD               	goto	l2264
 40666  0124E0  D7DC               	goto	l2265
 40667  0124E2                     __end_of_api_prepare:
 40668                           	opt stack 0
 40669                           tosu	equ	0xFFF
 40670                           tosh	equ	0xFFE
 40671                           tosl	equ	0xFFD
 40672                           pclath	equ	0xFFA
 40673                           tblptru	equ	0xFF8
 40674                           tblptrh	equ	0xFF7
 40675                           tblptrl	equ	0xFF6
 40676                           tablat	equ	0xFF5
 40677                           prodh	equ	0xFF4
 40678                           prodl	equ	0xFF3
 40679                           intcon	equ	0xFF2
 40680                           postinc0	equ	0xFEE
 40681                           wreg	equ	0xFE8
 40682                           indf1	equ	0xFE7
 40683                           postinc1	equ	0xFE6
 40684                           postdec1	equ	0xFE5
 40685                           plusw1	equ	0xFE3
 40686                           fsr1h	equ	0xFE2
 40687                           fsr1l	equ	0xFE1
 40688                           indf2	equ	0xFDF
 40689                           postinc2	equ	0xFDE
 40690                           postdec2	equ	0xFDD
 40691                           plusw2	equ	0xFDB
 40692                           fsr2h	equ	0xFDA
 40693                           fsr2l	equ	0xFD9
 40694                           status	equ	0xFD8
 40695                           
 40696 ;; *************** function __fill_buffer_get_status *****************
 40697 ;; Defined at:
 40698 ;;		line 171 in file "api.c"
 40699 ;; Parameters:    Size  Location     Type
 40700 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 40701 ;;		 -> ToSendDataBuffer(64), 
 40702 ;; Auto vars:     Size  Location     Type
 40703 ;;		None
 40704 ;; Return value:  Size  Location     Type
 40705 ;;                  1    wreg      void 
 40706 ;; Registers used:
 40707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40708 ;; Tracked objects:
 40709 ;;		On entry : 0/0
 40710 ;;		On exit  : 0/0
 40711 ;;		Unchanged: 0/0
 40712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40717 ;;Total ram usage:        2 bytes
 40718 ;; Hardware stack levels used:    1
 40719 ;; Hardware stack levels required when called:   11
 40720 ;; This function calls:
 40721 ;;		_memcpy
 40722 ;; This function is called by:
 40723 ;;		_api_prepare
 40724 ;; This function uses a non-reentrant model
 40725 ;;
 40726                           
 40727                           	psect	text164
 40728  00E5CA                     __ptext164:
 40729                           	opt stack 0
 40730  00E5CA                     __fill_buffer_get_status:
 40731                           	opt stack 17
 40732                           
 40733                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 40734                           
 40735                           ;incstack = 0
 40736  00E5CA  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 40737  00E5CE  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 40738  00E5D2  0E10               	movlw	16
 40739  00E5D4  6EDF               	movwf	indf2,c
 40740                           
 40741                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 40742  00E5D6  0100               	movlb	0	; () banked
 40743  00E5D8  EE20 F001          	lfsr	2,1
 40744  00E5DC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40745  00E5DE  26D9               	addwf	fsr2l,f,c
 40746  00E5E0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40747  00E5E2  22DA               	addwfc	fsr2h,f,c
 40748  00E5E4  0EBC               	movlw	188
 40749  00E5E6  6EDF               	movwf	indf2,c
 40750                           
 40751                           ; BSR set to: 0
 40752                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 40753  00E5E8  EE20 F002          	lfsr	2,2
 40754  00E5EC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40755  00E5EE  26D9               	addwf	fsr2l,f,c
 40756  00E5F0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40757  00E5F2  22DA               	addwfc	fsr2h,f,c
 40758  00E5F4  0E26               	movlw	38
 40759  00E5F6  6EDF               	movwf	indf2,c
 40760                           
 40761                           ; BSR set to: 0
 40762                           ;api.c: 181: outBuffer[3] = 0x00;
 40763  00E5F8  EE20 F003          	lfsr	2,3
 40764  00E5FC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40765  00E5FE  26D9               	addwf	fsr2l,f,c
 40766  00E600  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40767  00E602  22DA               	addwfc	fsr2h,f,c
 40768  00E604  0E00               	movlw	0
 40769  00E606  6EDF               	movwf	indf2,c
 40770                           
 40771                           ; BSR set to: 0
 40772                           ;api.c: 182: outBuffer[4] = 0x06;
 40773  00E608  EE20 F004          	lfsr	2,4
 40774  00E60C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40775  00E60E  26D9               	addwf	fsr2l,f,c
 40776  00E610  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40777  00E612  22DA               	addwfc	fsr2h,f,c
 40778  00E614  0E06               	movlw	6
 40779  00E616  6EDF               	movwf	indf2,c
 40780                           
 40781                           ; BSR set to: 0
 40782                           ;api.c: 183: outBuffer[5] = 0x01;
 40783  00E618  EE20 F005          	lfsr	2,5
 40784  00E61C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40785  00E61E  26D9               	addwf	fsr2l,f,c
 40786  00E620  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40787  00E622  22DA               	addwfc	fsr2h,f,c
 40788  00E624  0E01               	movlw	1
 40789  00E626  6EDF               	movwf	indf2,c
 40790                           
 40791                           ; BSR set to: 0
 40792                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 40793  00E628  EE20 F006          	lfsr	2,6
 40794  00E62C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40795  00E62E  26D9               	addwf	fsr2l,f,c
 40796  00E630  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40797  00E632  22DA               	addwfc	fsr2h,f,c
 40798  00E634  C166  FFDF         	movff	_os,indf2	;volatile
 40799                           
 40800                           ; BSR set to: 0
 40801                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 40802  00E638  EE20 F007          	lfsr	2,7
 40803  00E63C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40804  00E63E  26D9               	addwf	fsr2l,f,c
 40805  00E640  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40806  00E642  22DA               	addwfc	fsr2h,f,c
 40807  00E644  C167  FFDF         	movff	_os+1,indf2	;volatile
 40808                           
 40809                           ; BSR set to: 0
 40810                           ;api.c: 188: outBuffer[8] = os.done;
 40811  00E648  EE20 F008          	lfsr	2,8
 40812  00E64C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40813  00E64E  26D9               	addwf	fsr2l,f,c
 40814  00E650  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40815  00E652  22DA               	addwfc	fsr2h,f,c
 40816  00E654  C168  FFDF         	movff	_os+2,indf2	;volatile
 40817                           
 40818                           ; BSR set to: 0
 40819                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 40820  00E658  EE20 F009          	lfsr	2,9
 40821  00E65C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40822  00E65E  26D9               	addwf	fsr2l,f,c
 40823  00E660  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40824  00E662  22DA               	addwfc	fsr2h,f,c
 40825  00E664  C169  FFDF         	movff	_os+3,indf2	;volatile
 40826                           
 40827                           ; BSR set to: 0
 40828                           ;api.c: 190: outBuffer[10] = os.button1;
 40829  00E668  EE20 F00A          	lfsr	2,10
 40830  00E66C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40831  00E66E  26D9               	addwf	fsr2l,f,c
 40832  00E670  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40833  00E672  22DA               	addwfc	fsr2h,f,c
 40834  00E674  C16A  FFDF         	movff	_os+4,indf2	;volatile
 40835                           
 40836                           ; BSR set to: 0
 40837                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 40838  00E678  EE20 F00B          	lfsr	2,11
 40839  00E67C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40840  00E67E  26D9               	addwf	fsr2l,f,c
 40841  00E680  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40842  00E682  22DA               	addwfc	fsr2h,f,c
 40843  00E684  C16B  FFDF         	movff	_os+5,indf2	;volatile
 40844                           
 40845                           ; BSR set to: 0
 40846                           ;api.c: 192: outBuffer[12] = os.button2;
 40847  00E688  EE20 F00C          	lfsr	2,12
 40848  00E68C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40849  00E68E  26D9               	addwf	fsr2l,f,c
 40850  00E690  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40851  00E692  22DA               	addwfc	fsr2h,f,c
 40852  00E694  C16C  FFDF         	movff	_os+6,indf2	;volatile
 40853                           
 40854                           ; BSR set to: 0
 40855                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 40856  00E698  0E0D               	movlw	13
 40857  00E69A  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40858  00E69C  6F60               	movwf	memcpy@d1& (0+255),b
 40859  00E69E  0E00               	movlw	0
 40860  00E6A0  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40861  00E6A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 40862  00E6A4  0E6D               	movlw	low (_os+7)
 40863  00E6A6  6F62               	movwf	memcpy@s1& (0+255),b
 40864  00E6A8  0E01               	movlw	high (_os+7)
 40865  00E6AA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 40866  00E6AC  0E00               	movlw	0
 40867  00E6AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40868  00E6B0  0E04               	movlw	4
 40869  00E6B2  6F64               	movwf	memcpy@n& (0+255),b
 40870  00E6B4  ECEF  F0A3         	call	_memcpy	;wreg free
 40871                           
 40872                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 40873  00E6B8  0E11               	movlw	17
 40874  00E6BA  0100               	movlb	0	; () banked
 40875  00E6BC  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40876  00E6BE  6F60               	movwf	memcpy@d1& (0+255),b
 40877  00E6C0  0E00               	movlw	0
 40878  00E6C2  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40879  00E6C4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 40880  00E6C6  0E73               	movlw	low (_os+13)
 40881  00E6C8  6F62               	movwf	memcpy@s1& (0+255),b
 40882  00E6CA  0E01               	movlw	high (_os+13)
 40883  00E6CC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 40884  00E6CE  0E00               	movlw	0
 40885  00E6D0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40886  00E6D2  0E04               	movlw	4
 40887  00E6D4  6F64               	movwf	memcpy@n& (0+255),b
 40888  00E6D6  ECEF  F0A3         	call	_memcpy	;wreg free
 40889                           
 40890                           ;api.c: 203: outBuffer[21] = os.displayState;
 40891  00E6DA  0100               	movlb	0	; () banked
 40892  00E6DC  EE20 F015          	lfsr	2,21
 40893  00E6E0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40894  00E6E2  26D9               	addwf	fsr2l,f,c
 40895  00E6E4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40896  00E6E6  22DA               	addwfc	fsr2h,f,c
 40897  00E6E8  C175  FFDF         	movff	_os+15,indf2	;volatile
 40898                           
 40899                           ; BSR set to: 0
 40900                           ;api.c: 204: outBuffer[22] = os.beep_count;
 40901  00E6EC  EE20 F016          	lfsr	2,22
 40902  00E6F0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40903  00E6F2  26D9               	addwf	fsr2l,f,c
 40904  00E6F4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40905  00E6F6  22DA               	addwfc	fsr2h,f,c
 40906  00E6F8  C18D  FFDF         	movff	_os+39,indf2	;volatile
 40907                           
 40908                           ; BSR set to: 0
 40909                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 40910  00E6FC  EE20 F017          	lfsr	2,23
 40911  00E700  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40912  00E702  26D9               	addwf	fsr2l,f,c
 40913  00E704  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40914  00E706  22DA               	addwfc	fsr2h,f,c
 40915  00E708  C18E  FFDF         	movff	_os+40,indf2	;volatile
 40916                           
 40917                           ; BSR set to: 0
 40918                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 40919  00E70C  EE20 F018          	lfsr	2,24
 40920  00E710  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40921  00E712  26D9               	addwf	fsr2l,f,c
 40922  00E714  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40923  00E716  22DA               	addwfc	fsr2h,f,c
 40924  00E718  0101               	movlb	1	; () banked
 40925  00E71A  518F               	movf	(_os+41)& (0+255),w,b	;volatile
 40926  00E71C  6EDF               	movwf	indf2,c
 40927                           
 40928                           ; BSR set to: 1
 40929                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 40930  00E71E  0100               	movlb	0	; () banked
 40931  00E720  EE20 F019          	lfsr	2,25
 40932  00E724  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40933  00E726  26D9               	addwf	fsr2l,f,c
 40934  00E728  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40935  00E72A  22DA               	addwfc	fsr2h,f,c
 40936  00E72C  C190  FFDF         	movff	_os+42,indf2	;volatile
 40937                           
 40938                           ; BSR set to: 0
 40939                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 40940  00E730  EE20 F01A          	lfsr	2,26
 40941  00E734  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40942  00E736  26D9               	addwf	fsr2l,f,c
 40943  00E738  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40944  00E73A  22DA               	addwfc	fsr2h,f,c
 40945  00E73C  0101               	movlb	1	; () banked
 40946  00E73E  5191               	movf	(_os+43)& (0+255),w,b	;volatile
 40947  00E740  6EDF               	movwf	indf2,c
 40948                           
 40949                           ; BSR set to: 1
 40950                           ;api.c: 209: outBuffer[27] = os.fan_on;
 40951  00E742  0100               	movlb	0	; () banked
 40952  00E744  EE20 F01B          	lfsr	2,27
 40953  00E748  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40954  00E74A  26D9               	addwf	fsr2l,f,c
 40955  00E74C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40956  00E74E  22DA               	addwfc	fsr2h,f,c
 40957  00E750  C195  FFDF         	movff	_os+47,indf2	;volatile
 40958                           
 40959                           ; BSR set to: 0
 40960                           ;api.c: 210: outBuffer[28] = os.brake_on;
 40961  00E754  EE20 F01C          	lfsr	2,28
 40962  00E758  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40963  00E75A  26D9               	addwf	fsr2l,f,c
 40964  00E75C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40965  00E75E  22DA               	addwfc	fsr2h,f,c
 40966  00E760  C196  FFDF         	movff	_os+48,indf2	;volatile
 40967                           
 40968                           ; BSR set to: 0
 40969                           ;api.c: 211: outBuffer[29] = os.busy;
 40970  00E764  EE20 F01D          	lfsr	2,29
 40971  00E768  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40972  00E76A  26D9               	addwf	fsr2l,f,c
 40973  00E76C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40974  00E76E  22DA               	addwfc	fsr2h,f,c
 40975  00E770  C176  FFDF         	movff	_os+16,indf2	;volatile
 40976                           
 40977                           ; BSR set to: 0
 40978                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 40979  00E774  EE20 F01E          	lfsr	2,30
 40980  00E778  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40981  00E77A  26D9               	addwf	fsr2l,f,c
 40982  00E77C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40983  00E77E  22DA               	addwfc	fsr2h,f,c
 40984  00E780  C18A  FFDF         	movff	_os+36,indf2	;volatile
 40985                           
 40986                           ; BSR set to: 0
 40987                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 40988  00E784  EE20 F01F          	lfsr	2,31
 40989  00E788  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40990  00E78A  26D9               	addwf	fsr2l,f,c
 40991  00E78C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40992  00E78E  22DA               	addwfc	fsr2h,f,c
 40993  00E790  0101               	movlb	1	; () banked
 40994  00E792  518B               	movf	(_os+37)& (0+255),w,b	;volatile
 40995  00E794  6EDF               	movwf	indf2,c
 40996                           
 40997                           ; BSR set to: 1
 40998                           ;api.c: 215: outBuffer[32] = ((unsigned char)((os.absolute_position)&0xFF));
 40999  00E796  0100               	movlb	0	; () banked
 41000  00E798  EE20 F020          	lfsr	2,32
 41001  00E79C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41002  00E79E  26D9               	addwf	fsr2l,f,c
 41003  00E7A0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41004  00E7A2  22DA               	addwfc	fsr2h,f,c
 41005  00E7A4  C171  FFDF         	movff	_os+11,indf2	;volatile
 41006                           
 41007                           ; BSR set to: 0
 41008                           ;api.c: 216: outBuffer[33] = ((unsigned char)(((os.absolute_position)>>8)&0xFF));
 41009  00E7A8  EE20 F021          	lfsr	2,33
 41010  00E7AC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41011  00E7AE  26D9               	addwf	fsr2l,f,c
 41012  00E7B0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41013  00E7B2  22DA               	addwfc	fsr2h,f,c
 41014  00E7B4  0101               	movlb	1	; () banked
 41015  00E7B6  5172               	movf	(_os+12)& (0+255),w,b	;volatile
 41016  00E7B8  6EDF               	movwf	indf2,c
 41017                           
 41018                           ; BSR set to: 1
 41019                           ;api.c: 230: memcpy(&outBuffer[42], &config, 22);
 41020  00E7BA  0E2A               	movlw	42
 41021  00E7BC  0100               	movlb	0	; () banked
 41022  00E7BE  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41023  00E7C0  6F60               	movwf	memcpy@d1& (0+255),b
 41024  00E7C2  0E00               	movlw	0
 41025  00E7C4  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41026  00E7C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41027  00E7C8  0E97               	movlw	low _config
 41028  00E7CA  6F62               	movwf	memcpy@s1& (0+255),b
 41029  00E7CC  0E01               	movlw	high _config
 41030  00E7CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41031  00E7D0  0E00               	movlw	0
 41032  00E7D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41033  00E7D4  0E16               	movlw	22
 41034  00E7D6  6F64               	movwf	memcpy@n& (0+255),b
 41035  00E7D8  ECEF  F0A3         	call	_memcpy	;wreg free
 41036  00E7DC  0012               	return		;funcret
 41037  00E7DE                     __end_of__fill_buffer_get_status:
 41038                           	opt stack 0
 41039                           tosu	equ	0xFFF
 41040                           tosh	equ	0xFFE
 41041                           tosl	equ	0xFFD
 41042                           pclath	equ	0xFFA
 41043                           tblptru	equ	0xFF8
 41044                           tblptrh	equ	0xFF7
 41045                           tblptrl	equ	0xFF6
 41046                           tablat	equ	0xFF5
 41047                           prodh	equ	0xFF4
 41048                           prodl	equ	0xFF3
 41049                           intcon	equ	0xFF2
 41050                           postinc0	equ	0xFEE
 41051                           wreg	equ	0xFE8
 41052                           indf1	equ	0xFE7
 41053                           postinc1	equ	0xFE6
 41054                           postdec1	equ	0xFE5
 41055                           plusw1	equ	0xFE3
 41056                           fsr1h	equ	0xFE2
 41057                           fsr1l	equ	0xFE1
 41058                           indf2	equ	0xFDF
 41059                           postinc2	equ	0xFDE
 41060                           postdec2	equ	0xFDD
 41061                           plusw2	equ	0xFDB
 41062                           fsr2h	equ	0xFDA
 41063                           fsr2l	equ	0xFD9
 41064                           status	equ	0xFD8
 41065                           
 41066 ;; *************** function _memcpy *****************
 41067 ;; Defined at:
 41068 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 41069 ;; Parameters:    Size  Location     Type
 41070 ;;  d1              2    0[BANK0 ] PTR void 
 41071 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 41072 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ToSendDataBuffer(64), os(49), 
 41073 ;;		 -> msd_buffer(512), SetupPkt(8), 
 41074 ;;  s1              2    2[BANK0 ] PTR const void 
 41075 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41076 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41077 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41078 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41079 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41080 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(40), os.current_position_in_degrees(2), os.current_position_in_ste
      +ps(4), 
 41081 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 41082 ;;  n               2    4[BANK0 ] unsigned int 
 41083 ;; Auto vars:     Size  Location     Type
 41084 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 41085 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41086 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41087 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41088 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41089 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41090 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(40), os.current_position_in_degrees(2), os.current_position_in_ste
      +ps(4), 
 41091 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 41092 ;;  d               2    6[BANK0 ] PTR unsigned char 
 41093 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 41094 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ToSendDataBuffer(64), os(49), 
 41095 ;;		 -> msd_buffer(512), SetupPkt(8), 
 41096 ;;  tmp             1   10[BANK0 ] unsigned char 
 41097 ;; Return value:  Size  Location     Type
 41098 ;;                  2    0[BANK0 ] PTR void 
 41099 ;; Registers used:
 41100 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 41101 ;; Tracked objects:
 41102 ;;		On entry : 0/0
 41103 ;;		On exit  : 0/0
 41104 ;;		Unchanged: 0/0
 41105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41106 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41107 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41109 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41110 ;;Total ram usage:       11 bytes
 41111 ;; Hardware stack levels used:    1
 41112 ;; Hardware stack levels required when called:   10
 41113 ;; This function calls:
 41114 ;;		Nothing
 41115 ;; This function is called by:
 41116 ;;		_MSDProcessCommandMediaPresent
 41117 ;;		_i2c_eeprom_recover_position
 41118 ;;		__display_start
 41119 ;;		_display_prepare
 41120 ;;		__flash_set_page_size
 41121 ;;		_fat_create_file
 41122 ;;		_api_prepare
 41123 ;;		__fill_buffer_get_status
 41124 ;; This function uses a non-reentrant model
 41125 ;;
 41126                           
 41127                           	psect	text165
 41128  0147DE                     __ptext165:
 41129                           	opt stack 0
 41130  0147DE                     _memcpy:
 41131                           	opt stack 18
 41132                           
 41133                           ;incstack = 0
 41134  0147DE  C062  F068         	movff	memcpy@s1,memcpy@s
 41135  0147E2  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 41136  0147E6  C060  F066         	movff	memcpy@d1,memcpy@d
 41137  0147EA  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 41138  0147EE  D01D               	goto	l3804
 41139  0147F0                     l13008:
 41140  0147F0  C068  FFF6         	movff	memcpy@s,tblptrl
 41141  0147F4  C069  FFF7         	movff	memcpy@s+1,tblptrh
 41142  0147F8  0E00               	movlw	low (__mediumconst shr (0+16))
 41143  0147FA  6EF8               	movwf	tblptru,c
 41144  0147FC  0E0E               	movlw	(high __ramtop+-1)
 41145  0147FE  64F7               	cpfsgt	tblptrh,c
 41146  014800  D003               	bra	u11097
 41147  014802  0008               	tblrd		*
 41148  014804  50F5               	movf	tablat,w,c
 41149  014806  D005               	bra	u11090
 41150  014808                     u11097:
 41151  014808  CFF6 FFE9          	movff	tblptrl,fsr0l
 41152  01480C  CFF7 FFEA          	movff	tblptrh,fsr0h
 41153  014810  50EF               	movf	indf0,w,c
 41154  014812                     u11090:
 41155  014812  0100               	movlb	0	; () banked
 41156  014814  6F6A               	movwf	memcpy@tmp& (0+255),b
 41157                           
 41158                           ; BSR set to: 0
 41159  014816  4B68               	infsnz	memcpy@s& (0+255),f,b
 41160  014818  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 41161                           
 41162                           ; BSR set to: 0
 41163  01481A  C066  FFD9         	movff	memcpy@d,fsr2l
 41164  01481E  C067  FFDA         	movff	memcpy@d+1,fsr2h
 41165  014822  C06A  FFDF         	movff	memcpy@tmp,indf2
 41166                           
 41167                           ; BSR set to: 0
 41168  014826  4B66               	infsnz	memcpy@d& (0+255),f,b
 41169  014828  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 41170  01482A                     l3804:
 41171                           
 41172                           ; BSR set to: 0
 41173  01482A  0100               	movlb	0	; () banked
 41174  01482C  0764               	decf	memcpy@n& (0+255),f,b
 41175  01482E  A0D8               	btfss	status,0,c
 41176  014830  0765               	decf	(memcpy@n+1)& (0+255),f,b
 41177  014832  2964               	incf	memcpy@n& (0+255),w,b
 41178  014834  E1DD               	bnz	l13008
 41179  014836  2965               	incf	(memcpy@n+1)& (0+255),w,b
 41180  014838  B4D8               	btfsc	status,2,c
 41181  01483A  0012               	return	
 41182  01483C  D7D9               	goto	l3805
 41183  01483E                     __end_of_memcpy:
 41184                           	opt stack 0
 41185                           tosu	equ	0xFFF
 41186                           tosh	equ	0xFFE
 41187                           tosl	equ	0xFFD
 41188                           pclath	equ	0xFFA
 41189                           tblptru	equ	0xFF8
 41190                           tblptrh	equ	0xFF7
 41191                           tblptrl	equ	0xFF6
 41192                           tablat	equ	0xFF5
 41193                           prodh	equ	0xFF4
 41194                           prodl	equ	0xFF3
 41195                           intcon	equ	0xFF2
 41196                           indf0	equ	0xFEF
 41197                           postinc0	equ	0xFEE
 41198                           fsr0h	equ	0xFEA
 41199                           fsr0l	equ	0xFE9
 41200                           wreg	equ	0xFE8
 41201                           indf1	equ	0xFE7
 41202                           postinc1	equ	0xFE6
 41203                           postdec1	equ	0xFE5
 41204                           plusw1	equ	0xFE3
 41205                           fsr1h	equ	0xFE2
 41206                           fsr1l	equ	0xFE1
 41207                           indf2	equ	0xFDF
 41208                           postinc2	equ	0xFDE
 41209                           postdec2	equ	0xFDD
 41210                           plusw2	equ	0xFDB
 41211                           fsr2h	equ	0xFDA
 41212                           fsr2l	equ	0xFD9
 41213                           status	equ	0xFD8
 41214                           
 41215 ;; *************** function __fill_buffer_get_mode_details *****************
 41216 ;; Defined at:
 41217 ;;		line 275 in file "api.c"
 41218 ;; Parameters:    Size  Location     Type
 41219 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 41220 ;;		 -> ToSendDataBuffer(64), 
 41221 ;; Auto vars:     Size  Location     Type
 41222 ;;		None
 41223 ;; Return value:  Size  Location     Type
 41224 ;;                  1    wreg      void 
 41225 ;; Registers used:
 41226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41227 ;; Tracked objects:
 41228 ;;		On entry : 0/0
 41229 ;;		On exit  : 0/0
 41230 ;;		Unchanged: 0/0
 41231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41234 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41235 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41236 ;;Total ram usage:        4 bytes
 41237 ;; Hardware stack levels used:    1
 41238 ;; Hardware stack levels required when called:   10
 41239 ;; This function calls:
 41240 ;;		Nothing
 41241 ;; This function is called by:
 41242 ;;		_api_prepare
 41243 ;; This function uses a non-reentrant model
 41244 ;;
 41245                           
 41246                           	psect	text166
 41247  00F106                     __ptext166:
 41248                           	opt stack 0
 41249  00F106                     __fill_buffer_get_mode_details:
 41250                           	opt stack 18
 41251                           
 41252                           ;api.c: 278: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 41253                           
 41254                           ; BSR set to: 0
 41255                           ;incstack = 0
 41256  00F106  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 41257  00F10A  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 41258  00F10E  0E13               	movlw	19
 41259  00F110  6EDF               	movwf	indf2,c
 41260                           
 41261                           ;api.c: 281: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41262  00F112  0100               	movlb	0	; () banked
 41263  00F114  EE20 F001          	lfsr	2,1
 41264  00F118  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41265  00F11A  26D9               	addwf	fsr2l,f,c
 41266  00F11C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41267  00F11E  22DA               	addwfc	fsr2h,f,c
 41268  00F120  0EBC               	movlw	188
 41269  00F122  6EDF               	movwf	indf2,c
 41270                           
 41271                           ; BSR set to: 0
 41272                           ;api.c: 282: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41273  00F124  EE20 F002          	lfsr	2,2
 41274  00F128  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41275  00F12A  26D9               	addwf	fsr2l,f,c
 41276  00F12C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41277  00F12E  22DA               	addwfc	fsr2h,f,c
 41278  00F130  0E26               	movlw	38
 41279  00F132  6EDF               	movwf	indf2,c
 41280                           
 41281                           ; BSR set to: 0
 41282                           ;api.c: 285: outBuffer[3] = os.displayState;
 41283  00F134  EE20 F003          	lfsr	2,3
 41284  00F138  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41285  00F13A  26D9               	addwf	fsr2l,f,c
 41286  00F13C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41287  00F13E  22DA               	addwfc	fsr2h,f,c
 41288  00F140  C175  FFDF         	movff	_os+15,indf2	;volatile
 41289                           
 41290                           ;api.c: 287: switch(os.displayState & 0x0F)
 41291  00F144  D090               	goto	l2300
 41292  00F146                     
 41293                           ; BSR set to: 0
 41294                           ;api.c: 293: case DISPLAY_STATE_SETUP2:;api.c: 294: outBuffer[4] = os.setup_step_size;
 41295                           
 41296                           ; BSR set to: 0
 41297                           
 41298                           ; BSR set to: 0
 41299  00F146  EE20 F004          	lfsr	2,4
 41300  00F14A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41301  00F14C  26D9               	addwf	fsr2l,f,c
 41302  00F14E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41303  00F150  22DA               	addwfc	fsr2h,f,c
 41304  00F152  C177  FFDF         	movff	_os+17,indf2	;volatile
 41305                           
 41306                           ;api.c: 295: break;
 41307  00F156  0012               	return	
 41308  00F158                     
 41309                           ; BSR set to: 0
 41310                           ;api.c: 298: case DISPLAY_STATE_DIVIDE2:;api.c: 300: outBuffer[4] = os.divide_step_size;
 41311                           
 41312                           ; BSR set to: 0
 41313                           
 41314                           ; BSR set to: 0
 41315  00F158  EE20 F004          	lfsr	2,4
 41316  00F15C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41317  00F15E  26D9               	addwf	fsr2l,f,c
 41318  00F160  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41319  00F162  22DA               	addwfc	fsr2h,f,c
 41320  00F164  C17C  FFDF         	movff	_os+22,indf2	;volatile
 41321                           
 41322                           ;api.c: 301: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 41323  00F168  EE20 F005          	lfsr	2,5
 41324  00F16C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41325  00F16E  26D9               	addwf	fsr2l,f,c
 41326  00F170  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41327  00F172  22DA               	addwfc	fsr2h,f,c
 41328  00F174  0101               	movlb	1	; () banked
 41329  00F176  517B               	movf	(_os+21)& (0+255),w,b	;volatile
 41330  00F178  6EDF               	movwf	indf2,c
 41331                           
 41332                           ;api.c: 302: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 41333  00F17A  0100               	movlb	0	; () banked
 41334  00F17C  EE20 F006          	lfsr	2,6
 41335  00F180  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41336  00F182  26D9               	addwf	fsr2l,f,c
 41337  00F184  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41338  00F186  22DA               	addwfc	fsr2h,f,c
 41339  00F188  C17A  FFDF         	movff	_os+20,indf2	;volatile
 41340                           
 41341                           ;api.c: 303: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 41342  00F18C  EE20 F007          	lfsr	2,7
 41343  00F190  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41344  00F192  26D9               	addwf	fsr2l,f,c
 41345  00F194  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41346  00F196  22DA               	addwfc	fsr2h,f,c
 41347  00F198  0101               	movlb	1	; () banked
 41348  00F19A  5180               	movf	(_os+26)& (0+255),w,b	;volatile
 41349  00F19C  6EDF               	movwf	indf2,c
 41350                           
 41351                           ;api.c: 304: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 41352  00F19E  0100               	movlb	0	; () banked
 41353  00F1A0  EE20 F008          	lfsr	2,8
 41354  00F1A4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41355  00F1A6  26D9               	addwf	fsr2l,f,c
 41356  00F1A8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41357  00F1AA  22DA               	addwfc	fsr2h,f,c
 41358  00F1AC  C17F  FFDF         	movff	_os+25,indf2	;volatile
 41359                           
 41360                           ;api.c: 305: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 41361  00F1B0  EE20 F009          	lfsr	2,9
 41362  00F1B4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41363  00F1B6  26D9               	addwf	fsr2l,f,c
 41364  00F1B8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41365  00F1BA  22DA               	addwfc	fsr2h,f,c
 41366  00F1BC  0101               	movlb	1	; () banked
 41367  00F1BE  517E               	movf	(_os+24)& (0+255),w,b	;volatile
 41368  00F1C0  6EDF               	movwf	indf2,c
 41369                           
 41370                           ;api.c: 306: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 41371  00F1C2  0100               	movlb	0	; () banked
 41372  00F1C4  EE20 F00A          	lfsr	2,10
 41373  00F1C8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41374  00F1CA  26D9               	addwf	fsr2l,f,c
 41375  00F1CC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41376  00F1CE  22DA               	addwfc	fsr2h,f,c
 41377  00F1D0  C17D  FFDF         	movff	_os+23,indf2	;volatile
 41378                           
 41379                           ;api.c: 307: break;
 41380  00F1D4  0012               	return	
 41381  00F1D6                     
 41382                           ; BSR set to: 0
 41383                           ;api.c: 310: case DISPLAY_STATE_ARC2:;api.c: 311: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 41384                           
 41385                           ; BSR set to: 0
 41386                           
 41387                           ; BSR set to: 0
 41388  00F1D6  EE20 F004          	lfsr	2,4
 41389  00F1DA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41390  00F1DC  26D9               	addwf	fsr2l,f,c
 41391  00F1DE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41392  00F1E0  22DA               	addwfc	fsr2h,f,c
 41393  00F1E2  0101               	movlb	1	; () banked
 41394  00F1E4  5182               	movf	(_os+28)& (0+255),w,b	;volatile
 41395  00F1E6  6EDF               	movwf	indf2,c
 41396                           
 41397                           ;api.c: 312: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 41398  00F1E8  0100               	movlb	0	; () banked
 41399  00F1EA  EE20 F005          	lfsr	2,5
 41400  00F1EE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41401  00F1F0  26D9               	addwf	fsr2l,f,c
 41402  00F1F2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41403  00F1F4  22DA               	addwfc	fsr2h,f,c
 41404  00F1F6  C181  FFDF         	movff	_os+27,indf2	;volatile
 41405                           
 41406                           ;api.c: 313: outBuffer[6] = os.arc_direction;
 41407  00F1FA  EE20 F006          	lfsr	2,6
 41408  00F1FE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41409  00F200  26D9               	addwf	fsr2l,f,c
 41410  00F202  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41411  00F204  22DA               	addwfc	fsr2h,f,c
 41412  00F206  C189  FFDF         	movff	_os+35,indf2	;volatile
 41413                           
 41414                           ;api.c: 314: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 41415  00F20A  EE20 F007          	lfsr	2,7
 41416  00F20E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41417  00F210  26D9               	addwf	fsr2l,f,c
 41418  00F212  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41419  00F214  22DA               	addwfc	fsr2h,f,c
 41420  00F216  0101               	movlb	1	; () banked
 41421  00F218  5188               	movf	(_os+34)& (0+255),w,b	;volatile
 41422  00F21A  6EDF               	movwf	indf2,c
 41423                           
 41424                           ;api.c: 315: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 41425  00F21C  0100               	movlb	0	; () banked
 41426  00F21E  EE20 F008          	lfsr	2,8
 41427  00F222  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41428  00F224  26D9               	addwf	fsr2l,f,c
 41429  00F226  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41430  00F228  22DA               	addwfc	fsr2h,f,c
 41431  00F22A  C187  FFDF         	movff	_os+33,indf2	;volatile
 41432                           
 41433                           ; BSR set to: 0
 41434                           ;api.c: 319: break;
 41435                           
 41436                           ;api.c: 318: case DISPLAY_STATE_ZERO:
 41437                           
 41438                           ;api.c: 316: break;
 41439  00F22E  0012               	return	
 41440  00F230                     
 41441                           ; BSR set to: 0
 41442                           ;api.c: 322: outBuffer[4] = os.manual_direction;
 41443                           
 41444                           ; BSR set to: 0
 41445  00F230  EE20 F004          	lfsr	2,4
 41446  00F234  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41447  00F236  26D9               	addwf	fsr2l,f,c
 41448  00F238  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41449  00F23A  22DA               	addwfc	fsr2h,f,c
 41450  00F23C  C18C  FFDF         	movff	_os+38,indf2	;volatile
 41451                           
 41452                           ;api.c: 323: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41453  00F240  EE20 F005          	lfsr	2,5
 41454  00F244  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41455  00F246  26D9               	addwf	fsr2l,f,c
 41456  00F248  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41457  00F24A  22DA               	addwfc	fsr2h,f,c
 41458  00F24C  0101               	movlb	1	; () banked
 41459  00F24E  518B               	movf	(_os+37)& (0+255),w,b	;volatile
 41460  00F250  6EDF               	movwf	indf2,c
 41461                           
 41462                           ;api.c: 324: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 41463  00F252  0100               	movlb	0	; () banked
 41464  00F254  EE20 F006          	lfsr	2,6
 41465  00F258  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41466  00F25A  26D9               	addwf	fsr2l,f,c
 41467  00F25C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41468  00F25E  22DA               	addwfc	fsr2h,f,c
 41469  00F260  C18A  FFDF         	movff	_os+36,indf2	;volatile
 41470                           
 41471                           ; BSR set to: 0
 41472                           ;api.c: 326: }
 41473                           
 41474                           ;api.c: 325: break;
 41475  00F264  0012               	return	
 41476  00F266                     l2300:
 41477                           
 41478                           ; BSR set to: 0
 41479                           
 41480                           ; BSR set to: 0
 41481  00F266  0101               	movlb	1	; () banked
 41482  00F268  5175               	movf	(_os+15)& (0+255),w,b	;volatile
 41483  00F26A  0B0F               	andlw	15
 41484  00F26C  0100               	movlb	0	; () banked
 41485  00F26E  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 41486  00F270  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 41487                           
 41488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41489                           ; Switch size 1, requested type "space"
 41490                           ; Number of cases is 1, Range of values is 0 to 0
 41491                           ; switch strategies available:
 41492                           ; Name         Instructions Cycles
 41493                           ; simple_byte            4     3 (average)
 41494                           ;	Chosen strategy is simple_byte
 41495  00F272  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 41496  00F274  0A00               	xorlw	0	; case 0
 41497  00F276  A4D8               	btfss	status,2,c
 41498  00F278  0012               	return	
 41499                           
 41500                           ; BSR set to: 0
 41501                           ; Switch size 1, requested type "space"
 41502                           ; Number of cases is 9, Range of values is 0 to 128
 41503                           ; switch strategies available:
 41504                           ; Name         Instructions Cycles
 41505                           ; simple_byte           28    15 (average)
 41506                           ;	Chosen strategy is simple_byte
 41507  00F27A  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 41508  00F27C  0A00               	xorlw	0	; case 0
 41509  00F27E  B4D8               	btfsc	status,2,c
 41510  00F280  0012               	return	
 41511  00F282  0A10               	xorlw	16	; case 16
 41512  00F284  B4D8               	btfsc	status,2,c
 41513  00F286  D75F               	goto	l2303
 41514  00F288  0A30               	xorlw	48	; case 32
 41515  00F28A  B4D8               	btfsc	status,2,c
 41516  00F28C  D75C               	goto	l2303
 41517  00F28E  0A10               	xorlw	16	; case 48
 41518  00F290  B4D8               	btfsc	status,2,c
 41519  00F292  D762               	goto	l2305
 41520  00F294  0A70               	xorlw	112	; case 64
 41521  00F296  B4D8               	btfsc	status,2,c
 41522  00F298  D75F               	goto	l2305
 41523  00F29A  0A10               	xorlw	16	; case 80
 41524  00F29C  B4D8               	btfsc	status,2,c
 41525  00F29E  D79B               	goto	l2307
 41526  00F2A0  0A30               	xorlw	48	; case 96
 41527  00F2A2  B4D8               	btfsc	status,2,c
 41528  00F2A4  D798               	goto	l2307
 41529  00F2A6  0A10               	xorlw	16	; case 112
 41530  00F2A8  B4D8               	btfsc	status,2,c
 41531  00F2AA  0012               	return	
 41532  00F2AC  0AF0               	xorlw	240	; case 128
 41533  00F2AE  A4D8               	btfss	status,2,c
 41534  00F2B0  0012               	return	
 41535  00F2B2  D7BE               	goto	l2310
 41536  00F2B4                     __end_of__fill_buffer_get_mode_details:
 41537                           	opt stack 0
 41538                           tosu	equ	0xFFF
 41539                           tosh	equ	0xFFE
 41540                           tosl	equ	0xFFD
 41541                           pclath	equ	0xFFA
 41542                           tblptru	equ	0xFF8
 41543                           tblptrh	equ	0xFF7
 41544                           tblptrl	equ	0xFF6
 41545                           tablat	equ	0xFF5
 41546                           prodh	equ	0xFF4
 41547                           prodl	equ	0xFF3
 41548                           intcon	equ	0xFF2
 41549                           indf0	equ	0xFEF
 41550                           postinc0	equ	0xFEE
 41551                           fsr0h	equ	0xFEA
 41552                           fsr0l	equ	0xFE9
 41553                           wreg	equ	0xFE8
 41554                           indf1	equ	0xFE7
 41555                           postinc1	equ	0xFE6
 41556                           postdec1	equ	0xFE5
 41557                           plusw1	equ	0xFE3
 41558                           fsr1h	equ	0xFE2
 41559                           fsr1l	equ	0xFE1
 41560                           indf2	equ	0xFDF
 41561                           postinc2	equ	0xFDE
 41562                           postdec2	equ	0xFDD
 41563                           plusw2	equ	0xFDB
 41564                           fsr2h	equ	0xFDA
 41565                           fsr2l	equ	0xFD9
 41566                           status	equ	0xFD8
 41567                           
 41568 ;; *************** function __fill_buffer_get_display *****************
 41569 ;; Defined at:
 41570 ;;		line 234 in file "api.c"
 41571 ;; Parameters:    Size  Location     Type
 41572 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 41573 ;;		 -> ToSendDataBuffer(64), 
 41574 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 41575 ;; Auto vars:     Size  Location     Type
 41576 ;;  position        1   15[BANK0 ] unsigned char 
 41577 ;;  start_line      1   14[BANK0 ] unsigned char 
 41578 ;;  line            1   13[BANK0 ] unsigned char 
 41579 ;;  cntr            1   12[BANK0 ] unsigned char 
 41580 ;; Return value:  Size  Location     Type
 41581 ;;                  1    wreg      void 
 41582 ;; Registers used:
 41583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41584 ;; Tracked objects:
 41585 ;;		On entry : 0/0
 41586 ;;		On exit  : 0/0
 41587 ;;		Unchanged: 0/0
 41588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41589 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41590 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41591 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41592 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41593 ;;Total ram usage:       12 bytes
 41594 ;; Hardware stack levels used:    1
 41595 ;; Hardware stack levels required when called:   11
 41596 ;; This function calls:
 41597 ;;		_display_get_character
 41598 ;; This function is called by:
 41599 ;;		_api_prepare
 41600 ;; This function uses a non-reentrant model
 41601 ;;
 41602                           
 41603                           	psect	text167
 41604  012F40                     __ptext167:
 41605                           	opt stack 0
 41606  012F40                     __fill_buffer_get_display:
 41607                           	opt stack 17
 41608                           
 41609                           ;api.c: 236: uint8_t cntr;;api.c: 237: uint8_t line;;api.c: 238: uint8_t start_line;;api
      +                          .c: 239: uint8_t position;;api.c: 242: if(secondHalf)
 41610                           
 41611                           ; BSR set to: 0
 41612                           ;incstack = 0
 41613  012F40  0100               	movlb	0	; () banked
 41614  012F42  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41615  012F44  B4D8               	btfsc	status,2,c
 41616  012F46  D006               	goto	l2288
 41617                           
 41618                           ; BSR set to: 0
 41619                           ;api.c: 243: {;api.c: 244: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 41620  012F48  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41621  012F4C  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41622  012F50  0E12               	movlw	18
 41623  012F52  D005               	goto	L64
 41624  012F54                     l2288:
 41625                           
 41626                           ; BSR set to: 0
 41627                           ;api.c: 246: else;api.c: 247: {;api.c: 248: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 41628                           
 41629                           ; BSR set to: 0
 41630  012F54  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41631  012F58  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41632  012F5C  0E11               	movlw	17
 41633  012F5E                     L64:
 41634  012F5E  6EDF               	movwf	indf2,c
 41635                           
 41636                           ; BSR set to: 0
 41637                           ;api.c: 249: };api.c: 252: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41638                           
 41639                           ; BSR set to: 0
 41640  012F60  EE20 F001          	lfsr	2,1
 41641  012F64  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41642  012F66  26D9               	addwf	fsr2l,f,c
 41643  012F68  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41644  012F6A  22DA               	addwfc	fsr2h,f,c
 41645  012F6C  0EBC               	movlw	188
 41646  012F6E  6EDF               	movwf	indf2,c
 41647                           
 41648                           ; BSR set to: 0
 41649                           ;api.c: 253: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41650  012F70  EE20 F002          	lfsr	2,2
 41651  012F74  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41652  012F76  26D9               	addwf	fsr2l,f,c
 41653  012F78  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41654  012F7A  22DA               	addwfc	fsr2h,f,c
 41655  012F7C  0E26               	movlw	38
 41656  012F7E  6EDF               	movwf	indf2,c
 41657                           
 41658                           ; BSR set to: 0
 41659                           ;api.c: 256: cntr = 3;
 41660  012F80  0E03               	movlw	3
 41661  012F82  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 41662                           
 41663                           ; BSR set to: 0
 41664                           ;api.c: 257: if(secondHalf)
 41665  012F84  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41666  012F86  B4D8               	btfsc	status,2,c
 41667  012F88  D002               	goto	l2290
 41668                           
 41669                           ; BSR set to: 0
 41670                           ;api.c: 258: {;api.c: 259: start_line = 2;
 41671  012F8A  0E02               	movlw	2
 41672  012F8C  D001               	goto	L65
 41673  012F8E                     l2290:
 41674                           
 41675                           ; BSR set to: 0
 41676                           ;api.c: 261: else;api.c: 262: {;api.c: 263: start_line = 0;
 41677                           
 41678                           ; BSR set to: 0
 41679  012F8E  0E00               	movlw	0
 41680  012F90                     L65:
 41681  012F90  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 41682                           
 41683                           ; BSR set to: 0
 41684                           ;api.c: 264: };api.c: 265: for(line=start_line; line<start_line+2; ++line)
 41685                           
 41686                           ; BSR set to: 0
 41687  012F92  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 41688  012F96  D01B               	goto	l2292
 41689  012F98                     
 41690                           ; BSR set to: 0
 41691                           ;api.c: 266: {;api.c: 267: for(position=0; position<20; ++position)
 41692                           
 41693                           ; BSR set to: 0
 41694  012F98  0E00               	movlw	0
 41695  012F9A  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 41696  012F9C                     l16512:
 41697                           
 41698                           ; BSR set to: 0
 41699  012F9C  0E13               	movlw	19
 41700  012F9E  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 41701  012FA0  D001               	goto	l2294
 41702  012FA2  D014               	goto	u15660
 41703  012FA4                     l2294:
 41704                           
 41705                           ; BSR set to: 0
 41706                           ;api.c: 268: {;api.c: 269: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 41707                           
 41708                           ; BSR set to: 0
 41709  012FA4  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 41710  012FA8  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41711  012FAA  EC7C  F0AC         	call	_display_get_character
 41712  012FAE  0100               	movlb	0	; () banked
 41713  012FB0  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41714  012FB2  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 41715  012FB4  0D01               	mullw	1
 41716  012FB6  50F3               	movf	prodl,w,c
 41717  012FB8  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41718  012FBA  6ED9               	movwf	fsr2l,c
 41719  012FBC  50F4               	movf	prodh,w,c
 41720  012FBE  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41721  012FC0  6EDA               	movwf	fsr2h,c
 41722  012FC2  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 41723                           
 41724                           ; BSR set to: 0
 41725                           ;api.c: 270: ++cntr;
 41726  012FC6  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 41727                           
 41728                           ; BSR set to: 0
 41729  012FC8  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 41730  012FCA  D7E8               	goto	l16512
 41731  012FCC                     u15660:
 41732                           
 41733                           ; BSR set to: 0
 41734                           
 41735                           ; BSR set to: 0
 41736  012FCC  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 41737  012FCE                     l2292:
 41738                           
 41739                           ; BSR set to: 0
 41740                           
 41741                           ; BSR set to: 0
 41742  012FCE  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 41743  012FD0  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41744  012FD2  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 41745  012FD4  0E02               	movlw	2
 41746  012FD6  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 41747  012FD8  0E00               	movlw	0
 41748  012FDA  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 41749  012FDC  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41750  012FDE  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 41751  012FE0  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 41752  012FE2  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 41753  012FE4  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 41754  012FE6  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 41755  012FE8  0A80               	xorlw	128
 41756  012FEA  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 41757  012FEC  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 41758  012FEE  0A80               	xorlw	128
 41759  012FF0  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 41760  012FF2  B0D8               	btfsc	status,0,c
 41761  012FF4  0012               	return	
 41762  012FF6  D7D0               	goto	l2293
 41763  012FF8                     __end_of__fill_buffer_get_display:
 41764                           	opt stack 0
 41765                           tosu	equ	0xFFF
 41766                           tosh	equ	0xFFE
 41767                           tosl	equ	0xFFD
 41768                           pclath	equ	0xFFA
 41769                           tblptru	equ	0xFF8
 41770                           tblptrh	equ	0xFF7
 41771                           tblptrl	equ	0xFF6
 41772                           tablat	equ	0xFF5
 41773                           prodh	equ	0xFF4
 41774                           prodl	equ	0xFF3
 41775                           intcon	equ	0xFF2
 41776                           indf0	equ	0xFEF
 41777                           postinc0	equ	0xFEE
 41778                           fsr0h	equ	0xFEA
 41779                           fsr0l	equ	0xFE9
 41780                           wreg	equ	0xFE8
 41781                           indf1	equ	0xFE7
 41782                           postinc1	equ	0xFE6
 41783                           postdec1	equ	0xFE5
 41784                           plusw1	equ	0xFE3
 41785                           fsr1h	equ	0xFE2
 41786                           fsr1l	equ	0xFE1
 41787                           indf2	equ	0xFDF
 41788                           postinc2	equ	0xFDE
 41789                           postdec2	equ	0xFDD
 41790                           plusw2	equ	0xFDB
 41791                           fsr2h	equ	0xFDA
 41792                           fsr2l	equ	0xFD9
 41793                           status	equ	0xFD8
 41794                           
 41795 ;; *************** function _display_get_character *****************
 41796 ;; Defined at:
 41797 ;;		line 628 in file "display.c"
 41798 ;; Parameters:    Size  Location     Type
 41799 ;;  line            1    wreg     unsigned char 
 41800 ;;  position        1    0[BANK0 ] unsigned char 
 41801 ;; Auto vars:     Size  Location     Type
 41802 ;;  line            1    3[BANK0 ] unsigned char 
 41803 ;; Return value:  Size  Location     Type
 41804 ;;                  1    wreg      unsigned char 
 41805 ;; Registers used:
 41806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41807 ;; Tracked objects:
 41808 ;;		On entry : 0/0
 41809 ;;		On exit  : 0/0
 41810 ;;		Unchanged: 0/0
 41811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41812 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41815 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41816 ;;Total ram usage:        4 bytes
 41817 ;; Hardware stack levels used:    1
 41818 ;; Hardware stack levels required when called:   10
 41819 ;; This function calls:
 41820 ;;		Nothing
 41821 ;; This function is called by:
 41822 ;;		__fill_buffer_get_display
 41823 ;; This function uses a non-reentrant model
 41824 ;;
 41825                           
 41826                           	psect	text168
 41827  0158F8                     __ptext168:
 41828                           	opt stack 0
 41829  0158F8                     _display_get_character:
 41830                           	opt stack 17
 41831                           
 41832                           ; BSR set to: 0
 41833                           ;incstack = 0
 41834                           ;display_get_character@line stored from wreg
 41835  0158F8  0100               	movlb	0	; () banked
 41836  0158FA  6F63               	movwf	display_get_character@line& (0+255),b
 41837                           
 41838                           ;display.c: 630: return display_content[line][position];
 41839  0158FC  0100               	movlb	0	; () banked
 41840  0158FE  5163               	movf	display_get_character@line& (0+255),w,b
 41841  015900  0D14               	mullw	20
 41842  015902  0E42               	movlw	low _display_content
 41843  015904  6F61               	movwf	??_display_get_character& (0+255),b
 41844  015906  0E02               	movlw	high _display_content
 41845  015908  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 41846  01590A  50F3               	movf	prodl,w,c
 41847  01590C  2761               	addwf	??_display_get_character& (0+255),f,b
 41848  01590E  50F4               	movf	prodh,w,c
 41849  015910  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 41850  015912  5160               	movf	display_get_character@position& (0+255),w,b
 41851  015914  0D01               	mullw	1
 41852  015916  50F3               	movf	prodl,w,c
 41853  015918  2561               	addwf	??_display_get_character& (0+255),w,b
 41854  01591A  6ED9               	movwf	fsr2l,c
 41855  01591C  50F4               	movf	prodh,w,c
 41856  01591E  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 41857  015920  6EDA               	movwf	fsr2h,c
 41858  015922  50DF               	movf	indf2,w,c
 41859  015924  0012               	return	
 41860  015926                     __end_of_display_get_character:
 41861                           	opt stack 0
 41862                           tosu	equ	0xFFF
 41863                           tosh	equ	0xFFE
 41864                           tosl	equ	0xFFD
 41865                           pclath	equ	0xFFA
 41866                           tblptru	equ	0xFF8
 41867                           tblptrh	equ	0xFF7
 41868                           tblptrl	equ	0xFF6
 41869                           tablat	equ	0xFF5
 41870                           prodh	equ	0xFF4
 41871                           prodl	equ	0xFF3
 41872                           intcon	equ	0xFF2
 41873                           indf0	equ	0xFEF
 41874                           postinc0	equ	0xFEE
 41875                           fsr0h	equ	0xFEA
 41876                           fsr0l	equ	0xFE9
 41877                           wreg	equ	0xFE8
 41878                           indf1	equ	0xFE7
 41879                           postinc1	equ	0xFE6
 41880                           postdec1	equ	0xFE5
 41881                           plusw1	equ	0xFE3
 41882                           fsr1h	equ	0xFE2
 41883                           fsr1l	equ	0xFE1
 41884                           indf2	equ	0xFDF
 41885                           postinc2	equ	0xFDE
 41886                           postdec2	equ	0xFDD
 41887                           plusw2	equ	0xFDB
 41888                           fsr2h	equ	0xFDA
 41889                           fsr2l	equ	0xFD9
 41890                           status	equ	0xFD8
 41891                           
 41892 ;; *************** function _api_parse *****************
 41893 ;; Defined at:
 41894 ;;		line 94 in file "api.c"
 41895 ;; Parameters:    Size  Location     Type
 41896 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 41897 ;;		 -> ReceivedDataBuffer(64), 
 41898 ;;  receivedData    1   73[BANK0 ] unsigned char 
 41899 ;;  outBuffer       2   74[BANK0 ] PTR unsigned char 
 41900 ;;		 -> ToSendDataBuffer(64), 
 41901 ;; Auto vars:     Size  Location     Type
 41902 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 41903 ;;		 -> api_parse@out_idx(1), 
 41904 ;;  in_idx          1   81[BANK0 ] unsigned char 
 41905 ;;  out_idx         1   80[BANK0 ] unsigned char 
 41906 ;; Return value:  Size  Location     Type
 41907 ;;                  1    wreg      void 
 41908 ;; Registers used:
 41909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41910 ;; Tracked objects:
 41911 ;;		On entry : 0/0
 41912 ;;		On exit  : 0/0
 41913 ;;		Unchanged: 0/0
 41914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41915 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41916 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41918 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41919 ;;Total ram usage:       11 bytes
 41920 ;; Hardware stack levels used:    1
 41921 ;; Hardware stack levels required when called:   16
 41922 ;; This function calls:
 41923 ;;		__parse_command_long
 41924 ;;		__parse_command_short
 41925 ;; This function is called by:
 41926 ;;		_APP_DeviceCustomHIDTasks
 41927 ;; This function uses a non-reentrant model
 41928 ;;
 41929                           
 41930                           	psect	text169
 41931  010944                     __ptext169:
 41932                           	opt stack 0
 41933  010944                     _api_parse:
 41934                           	opt stack 13
 41935                           
 41936                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 41937                           
 41938                           ; BSR set to: 0
 41939                           ;incstack = 0
 41940  010944  0E00               	movlw	0
 41941  010946  0100               	movlb	0	; () banked
 41942  010948  6FB0               	movwf	api_parse@out_idx& (0+255),b
 41943                           
 41944                           ; BSR set to: 0
 41945                           ;api.c: 103: out_idx_ptr = &out_idx;
 41946  01094A  0EB0               	movlw	low api_parse@out_idx
 41947  01094C  6FAE               	movwf	api_parse@out_idx_ptr& (0+255),b
 41948  01094E  0E00               	movlw	high api_parse@out_idx
 41949  010950  6FAF               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 41950                           
 41951                           ; BSR set to: 0
 41952                           ;api.c: 105: if(inBuffer[0]>0x7F)
 41953  010952  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41954  010956  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41955  01095A  0E7F               	movlw	127
 41956  01095C  64DF               	cpfsgt	indf2,c
 41957  01095E  D001               	goto	l2269
 41958  010960  0012               	return	
 41959  010962                     l2269:
 41960                           
 41961                           ; BSR set to: 0
 41962                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 41963                           
 41964                           ; BSR set to: 0
 41965  010962  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41966  010966  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41967  01096A  0E20               	movlw	32
 41968  01096C  18DE               	xorwf	postinc2,w,c
 41969  01096E  B4D8               	btfsc	status,2,c
 41970  010970  0012               	return	
 41971                           
 41972                           ; BSR set to: 0
 41973                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 41974                           
 41975                           ; BSR set to: 0
 41976                           
 41977                           ; BSR set to: 0
 41978                           ;api.c: 113: {;api.c: 116: return;
 41979  010972  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41980  010976  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41981  01097A  50DF               	movf	indf2,w,c
 41982  01097C  A4D8               	btfss	status,2,c
 41983  01097E  D018               	goto	l2272
 41984                           
 41985                           ; BSR set to: 0
 41986                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 41987  010980  C0AA  FFD9         	movff	api_parse@outBuffer,fsr2l
 41988  010984  C0AB  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 41989  010988  0E00               	movlw	0
 41990  01098A  6EDF               	movwf	indf2,c
 41991                           
 41992                           ; BSR set to: 0
 41993                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41994  01098C  EE20 F001          	lfsr	2,1
 41995  010990  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 41996  010992  26D9               	addwf	fsr2l,f,c
 41997  010994  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 41998  010996  22DA               	addwfc	fsr2h,f,c
 41999  010998  0EBC               	movlw	188
 42000  01099A  6EDF               	movwf	indf2,c
 42001                           
 42002                           ; BSR set to: 0
 42003                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 42004  01099C  EE20 F002          	lfsr	2,2
 42005  0109A0  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 42006  0109A2  26D9               	addwf	fsr2l,f,c
 42007  0109A4  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 42008  0109A6  22DA               	addwfc	fsr2h,f,c
 42009  0109A8  0E26               	movlw	38
 42010  0109AA  6EDF               	movwf	indf2,c
 42011                           
 42012                           ; BSR set to: 0
 42013                           ;api.c: 129: out_idx = 3;
 42014  0109AC  0E03               	movlw	3
 42015  0109AE  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42016  0109B0                     l2272:
 42017                           
 42018                           ; BSR set to: 0
 42019                           ;api.c: 130: };api.c: 132: in_idx = 1;
 42020                           
 42021                           ; BSR set to: 0
 42022  0109B0  0E01               	movlw	1
 42023  0109B2  6FB1               	movwf	api_parse@in_idx& (0+255),b
 42024                           
 42025                           ;api.c: 133: while(in_idx<receivedDataLength)
 42026  0109B4  D057               	goto	l2278
 42027  0109B6                     
 42028                           ; BSR set to: 0
 42029                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 42030                           
 42031                           ; BSR set to: 0
 42032  0109B6  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42033  0109B8  0D01               	mullw	1
 42034  0109BA  50F3               	movf	prodl,w,c
 42035  0109BC  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42036  0109BE  6ED9               	movwf	fsr2l,c
 42037  0109C0  50F4               	movf	prodh,w,c
 42038  0109C2  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42039  0109C4  6EDA               	movwf	fsr2h,c
 42040  0109C6  0E99               	movlw	153
 42041  0109C8  18DE               	xorwf	postinc2,w,c
 42042  0109CA  B4D8               	btfsc	status,2,c
 42043  0109CC  0012               	return	
 42044  0109CE  D02F               	goto	l2276
 42045  0109D0                     
 42046                           ; BSR set to: 0
 42047                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 42048                           
 42049                           ; BSR set to: 0
 42050  0109D0  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42051  0109D2  0D01               	mullw	1
 42052  0109D4  50F3               	movf	prodl,w,c
 42053  0109D6  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42054  0109D8  6ED9               	movwf	fsr2l,c
 42055  0109DA  50F4               	movf	prodh,w,c
 42056  0109DC  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42057  0109DE  6EDA               	movwf	fsr2h,c
 42058  0109E0  50DF               	movf	indf2,w,c
 42059  0109E2  EC6A  F07C         	call	__parse_command_short
 42060  0109E6  D00B               	goto	l17212
 42061  0109E8                     
 42062                           ; BSR set to: 0
 42063                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 42064                           
 42065                           ; BSR set to: 0
 42066  0109E8  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42067  0109EA  0D01               	mullw	1
 42068  0109EC  50F3               	movf	prodl,w,c
 42069  0109EE  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42070  0109F0  6ED9               	movwf	fsr2l,c
 42071  0109F2  50F4               	movf	prodh,w,c
 42072  0109F4  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42073  0109F6  6EDA               	movwf	fsr2h,c
 42074  0109F8  50DF               	movf	indf2,w,c
 42075  0109FA  EC6A  F07C         	call	__parse_command_short
 42076  0109FE                     l17212:
 42077                           
 42078                           ;api.c: 150: ++in_idx;
 42079  0109FE  0100               	movlb	0	; () banked
 42080  010A00  2BB1               	incf	api_parse@in_idx& (0+255),f,b
 42081                           
 42082                           ;api.c: 151: break;
 42083  010A02  D030               	goto	l2278
 42084  010A04                     
 42085                           ; BSR set to: 0
 42086                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 42087                           
 42088                           ; BSR set to: 0
 42089  010A04  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42090  010A06  0D01               	mullw	1
 42091  010A08  50F3               	movf	prodl,w,c
 42092  010A0A  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42093  010A0C  6FA0               	movwf	__parse_command_long@data& (0+255),b
 42094  010A0E  50F4               	movf	prodh,w,c
 42095  010A10  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42096  010A12  6FA1               	movwf	(__parse_command_long@data+1)& (0+255),b
 42097  010A14  C0AA  F0A2         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 42098  010A18  C0AB  F0A3         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 42099  010A1C  C0AE  F0A4         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 42100  010A20  C0AF  F0A5         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 42101  010A24  EC7F  F09E         	call	__parse_command_long	;wreg free
 42102  010A28  0100               	movlb	0	; () banked
 42103  010A2A  27B1               	addwf	api_parse@in_idx& (0+255),f,b
 42104                           
 42105                           ;api.c: 155: break;
 42106  010A2C  D01B               	goto	l2278
 42107  010A2E                     l2276:
 42108                           
 42109                           ; BSR set to: 0
 42110                           
 42111                           ; BSR set to: 0
 42112  010A2E  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42113  010A30  0D01               	mullw	1
 42114  010A32  50F3               	movf	prodl,w,c
 42115  010A34  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42116  010A36  6ED9               	movwf	fsr2l,c
 42117  010A38  50F4               	movf	prodh,w,c
 42118  010A3A  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42119  010A3C  6EDA               	movwf	fsr2h,c
 42120  010A3E  50DF               	movf	indf2,w,c
 42121  010A40  0BF0               	andlw	240
 42122  010A42  6FAC               	movwf	??_api_parse& (0+255),b
 42123  010A44  6BAD               	clrf	(??_api_parse+1)& (0+255),b
 42124                           
 42125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42126                           ; Switch size 1, requested type "space"
 42127                           ; Number of cases is 1, Range of values is 0 to 0
 42128                           ; switch strategies available:
 42129                           ; Name         Instructions Cycles
 42130                           ; simple_byte            4     3 (average)
 42131                           ;	Chosen strategy is simple_byte
 42132  010A46  51AD               	movf	(??_api_parse+1)& (0+255),w,b
 42133  010A48  0A00               	xorlw	0	; case 0
 42134  010A4A  A4D8               	btfss	status,2,c
 42135  010A4C  0012               	return	
 42136                           
 42137                           ; BSR set to: 0
 42138                           ; Switch size 1, requested type "space"
 42139                           ; Number of cases is 3, Range of values is 32 to 144
 42140                           ; switch strategies available:
 42141                           ; Name         Instructions Cycles
 42142                           ; simple_byte           10     6 (average)
 42143                           ;	Chosen strategy is simple_byte
 42144  010A4E  51AC               	movf	??_api_parse& (0+255),w,b
 42145  010A50  0A20               	xorlw	32	; case 32
 42146  010A52  B4D8               	btfsc	status,2,c
 42147  010A54  D7BD               	goto	l2277
 42148  010A56  0A10               	xorlw	16	; case 48
 42149  010A58  B4D8               	btfsc	status,2,c
 42150  010A5A  D7C6               	goto	l2279
 42151  010A5C  0AA0               	xorlw	160	; case 144
 42152  010A5E  A4D8               	btfss	status,2,c
 42153  010A60  0012               	return	
 42154  010A62  D7D0               	goto	l2280
 42155  010A64                     l2278:
 42156                           
 42157                           ; BSR set to: 0
 42158                           
 42159                           ; BSR set to: 0
 42160                           
 42161                           ; BSR set to: 0
 42162  010A64  51A9               	movf	api_parse@receivedDataLength& (0+255),w,b
 42163  010A66  5DB1               	subwf	api_parse@in_idx& (0+255),w,b
 42164  010A68  B0D8               	btfsc	status,0,c
 42165  010A6A  0012               	return	
 42166  010A6C  D7A4               	goto	l2274
 42167  010A6E                     __end_of_api_parse:
 42168                           	opt stack 0
 42169                           tosu	equ	0xFFF
 42170                           tosh	equ	0xFFE
 42171                           tosl	equ	0xFFD
 42172                           pclath	equ	0xFFA
 42173                           tblptru	equ	0xFF8
 42174                           tblptrh	equ	0xFF7
 42175                           tblptrl	equ	0xFF6
 42176                           tablat	equ	0xFF5
 42177                           prodh	equ	0xFF4
 42178                           prodl	equ	0xFF3
 42179                           intcon	equ	0xFF2
 42180                           indf0	equ	0xFEF
 42181                           postinc0	equ	0xFEE
 42182                           fsr0h	equ	0xFEA
 42183                           fsr0l	equ	0xFE9
 42184                           wreg	equ	0xFE8
 42185                           indf1	equ	0xFE7
 42186                           postinc1	equ	0xFE6
 42187                           postdec1	equ	0xFE5
 42188                           plusw1	equ	0xFE3
 42189                           fsr1h	equ	0xFE2
 42190                           fsr1l	equ	0xFE1
 42191                           indf2	equ	0xFDF
 42192                           postinc2	equ	0xFDE
 42193                           postdec2	equ	0xFDD
 42194                           plusw2	equ	0xFDB
 42195                           fsr2h	equ	0xFDA
 42196                           fsr2l	equ	0xFD9
 42197                           status	equ	0xFD8
 42198                           
 42199 ;; *************** function __parse_command_short *****************
 42200 ;; Defined at:
 42201 ;;		line 329 in file "api.c"
 42202 ;; Parameters:    Size  Location     Type
 42203 ;;  cmd             1    wreg     unsigned char 
 42204 ;; Auto vars:     Size  Location     Type
 42205 ;;  cmd             1   62[BANK0 ] unsigned char 
 42206 ;; Return value:  Size  Location     Type
 42207 ;;                  1    wreg      void 
 42208 ;; Registers used:
 42209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42210 ;; Tracked objects:
 42211 ;;		On entry : 0/0
 42212 ;;		On exit  : 0/0
 42213 ;;		Unchanged: 0/0
 42214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42218 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42219 ;;Total ram usage:        1 bytes
 42220 ;; Hardware stack levels used:    1
 42221 ;; Hardware stack levels required when called:   14
 42222 ;; This function calls:
 42223 ;;		_motor_clear_command_cue
 42224 ;;		_motor_goto_steps
 42225 ;;		_motor_move_endless
 42226 ;;		_motor_set_zero
 42227 ;;		_motor_stop
 42228 ;; This function is called by:
 42229 ;;		_api_parse
 42230 ;; This function uses a non-reentrant model
 42231 ;;
 42232                           
 42233                           	psect	text170
 42234  00F8D4                     __ptext170:
 42235                           	opt stack 0
 42236  00F8D4                     __parse_command_short:
 42237                           	opt stack 14
 42238                           
 42239                           ; BSR set to: 0
 42240                           ;incstack = 0
 42241                           ;__parse_command_short@cmd stored from wreg
 42242  00F8D4  0100               	movlb	0	; () banked
 42243  00F8D6  6F9E               	movwf	__parse_command_short@cmd& (0+255),b
 42244                           
 42245                           ;api.c: 331: switch(cmd)
 42246  00F8D8  D072               	goto	l2314
 42247  00F8DA                     
 42248                           ;api.c: 349: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42249  00F8DA  0E01               	movlw	1
 42250  00F8DC  0101               	movlb	1	; () banked
 42251  00F8DE  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42252                           
 42253                           ;api.c: 350: break;
 42254  00F8E0  0012               	return	
 42255  00F8E2                     
 42256                           ;api.c: 353: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 42257                           
 42258                           ; BSR set to: 1
 42259  00F8E2  0E11               	movlw	17
 42260  00F8E4  0101               	movlb	1	; () banked
 42261  00F8E6  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42262                           
 42263                           ;api.c: 354: break;
 42264  00F8E8  0012               	return	
 42265  00F8EA                     
 42266                           ;api.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 42267                           
 42268                           ; BSR set to: 1
 42269  00F8EA  0E31               	movlw	49
 42270  00F8EC  0101               	movlb	1	; () banked
 42271  00F8EE  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42272                           
 42273                           ;api.c: 358: break;
 42274  00F8F0  0012               	return	
 42275  00F8F2                     
 42276                           ;api.c: 361: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 42277                           
 42278                           ; BSR set to: 1
 42279  00F8F2  0E51               	movlw	81
 42280  00F8F4  0101               	movlb	1	; () banked
 42281  00F8F6  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42282                           
 42283                           ;api.c: 362: break;
 42284  00F8F8  0012               	return	
 42285  00F8FA                     
 42286                           ;api.c: 365: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42287                           
 42288                           ; BSR set to: 1
 42289  00F8FA  0E82               	movlw	130
 42290  00F8FC  0101               	movlb	1	; () banked
 42291  00F8FE  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42292                           
 42293                           ;api.c: 366: break;
 42294  00F900  0012               	return	
 42295  00F902                     
 42296                           ;api.c: 369: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 42297                           
 42298                           ; BSR set to: 1
 42299  00F902  0E71               	movlw	113
 42300  00F904  0101               	movlb	1	; () banked
 42301  00F906  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42302                           
 42303                           ;api.c: 370: break;
 42304  00F908  0012               	return	
 42305  00F90A                     
 42306                           ;api.c: 373: motor_set_zero(MOTOR_DIRECTION_CCW);
 42307                           
 42308                           ; BSR set to: 1
 42309  00F90A  0EFF               	movlw	255
 42310  00F90C  EC9F  F0AA         	call	_motor_set_zero
 42311                           
 42312                           ;api.c: 374: break;
 42313  00F910  0012               	return	
 42314  00F912                     
 42315                           ;api.c: 377: motor_set_zero(MOTOR_DIRECTION_CW);
 42316  00F912  0E01               	movlw	1
 42317  00F914  EC9F  F0AA         	call	_motor_set_zero
 42318                           
 42319                           ;api.c: 378: break;
 42320  00F918  0012               	return	
 42321  00F91A                     
 42322                           ;api.c: 381: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF, MOTOR_OVERSHOOT_WITH_
      +                          OVERSHOOT);
 42323  00F91A  0E00               	movlw	0
 42324  00F91C  0100               	movlb	0	; () banked
 42325  00F91E  6F92               	movwf	motor_goto_steps@position& (0+255),b
 42326  00F920  0E00               	movlw	0
 42327  00F922  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 42328  00F924  0E00               	movlw	0
 42329  00F926  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 42330  00F928  0E00               	movlw	0
 42331  00F92A  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 42332  00F92C  0EFF               	movlw	255
 42333  00F92E  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 42334  00F930  6996               	setf	motor_goto_steps@speed& (0+255),b
 42335  00F932  0E00               	movlw	0
 42336  00F934  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 42337  00F936  0E00               	movlw	0
 42338  00F938  EC4B  F09B         	call	_motor_goto_steps
 42339                           
 42340                           ;api.c: 383: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 42341  00F93C  0E05               	movlw	5
 42342  00F93E  0101               	movlb	1	; () banked
 42343  00F940  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42344                           
 42345                           ; BSR set to: 1
 42346                           ;api.c: 384: os.divide_position = 0;
 42347  00F942  0E00               	movlw	0
 42348  00F944  6F7E               	movwf	(_os+24)& (0+255),b	;volatile
 42349  00F946  0E00               	movlw	0
 42350  00F948  6F7D               	movwf	(_os+23)& (0+255),b	;volatile
 42351  00F94A                     
 42352                           ;api.c: 387: --os.encoder2Count;
 42353                           
 42354                           ; BSR set to: 1
 42355  00F94A  0101               	movlb	1	; () banked
 42356  00F94C  076B               	decf	(_os+5)& (0+255),f,b	;volatile
 42357                           
 42358                           ;api.c: 388: break;
 42359  00F94E  0012               	return	
 42360  00F950                     
 42361                           ;api.c: 391: ++os.encoder2Count;
 42362                           
 42363                           ; BSR set to: 1
 42364  00F950  0101               	movlb	1	; () banked
 42365  00F952  2B6B               	incf	(_os+5)& (0+255),f,b	;volatile
 42366                           
 42367                           ;api.c: 392: break;
 42368  00F954  0012               	return	
 42369  00F956                     
 42370                           ;api.c: 395: ++os.button2;
 42371                           
 42372                           ; BSR set to: 1
 42373  00F956  0101               	movlb	1	; () banked
 42374  00F958  2B6C               	incf	(_os+6)& (0+255),f,b	;volatile
 42375                           
 42376                           ;api.c: 396: break;
 42377  00F95A  0012               	return	
 42378  00F95C                     
 42379                           ;api.c: 399: --os.encoder1Count;
 42380                           
 42381                           ; BSR set to: 1
 42382  00F95C  0101               	movlb	1	; () banked
 42383  00F95E  0769               	decf	(_os+3)& (0+255),f,b	;volatile
 42384                           
 42385                           ;api.c: 400: break;
 42386  00F960  0012               	return	
 42387  00F962                     
 42388                           ;api.c: 403: ++os.encoder1Count;
 42389                           
 42390                           ; BSR set to: 1
 42391  00F962  0101               	movlb	1	; () banked
 42392  00F964  2B69               	incf	(_os+3)& (0+255),f,b	;volatile
 42393                           
 42394                           ;api.c: 404: break;
 42395  00F966  0012               	return	
 42396  00F968                     
 42397                           ;api.c: 407: ++os.button1;
 42398                           
 42399                           ; BSR set to: 1
 42400  00F968  0101               	movlb	1	; () banked
 42401  00F96A  2B6A               	incf	(_os+4)& (0+255),f,b	;volatile
 42402                           
 42403                           ;api.c: 408: break;
 42404  00F96C  0012               	return	
 42405  00F96E                     
 42406                           ;api.c: 411: if(!os.busy)
 42407                           
 42408                           ; BSR set to: 1
 42409  00F96E  0101               	movlb	1	; () banked
 42410  00F970  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 42411  00F972  A4D8               	btfss	status,2,c
 42412  00F974  0012               	return	
 42413                           
 42414                           ; BSR set to: 1
 42415                           ;api.c: 412: {;api.c: 413: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42416  00F976  0E84               	movlw	132
 42417  00F978  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42418                           
 42419                           ; BSR set to: 1
 42420                           ;api.c: 414: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_speed);
 42421  00F97A  C18A  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42422  00F97E  C18B  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42423  00F982  0EFF               	movlw	255
 42424  00F984  EC93  F0AC         	call	_motor_move_endless
 42425                           
 42426                           ;api.c: 415: };api.c: 416: break;
 42427  00F988  0012               	return	
 42428  00F98A                     
 42429                           ;api.c: 419: if(!os.busy)
 42430  00F98A  0101               	movlb	1	; () banked
 42431  00F98C  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 42432  00F98E  A4D8               	btfss	status,2,c
 42433  00F990  0012               	return	
 42434                           
 42435                           ; BSR set to: 1
 42436                           ;api.c: 420: {;api.c: 421: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42437  00F992  0E84               	movlw	132
 42438  00F994  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42439                           
 42440                           ; BSR set to: 1
 42441                           ;api.c: 422: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 42442  00F996  C18A  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42443  00F99A  C18B  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42444  00F99E  0E01               	movlw	1
 42445  00F9A0  EC93  F0AC         	call	_motor_move_endless
 42446                           
 42447                           ;api.c: 423: };api.c: 424: break;
 42448  00F9A4  0012               	return	
 42449  00F9A6                     
 42450                           ;api.c: 427: if(os.busy)
 42451  00F9A6  0101               	movlb	1	; () banked
 42452  00F9A8  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 42453  00F9AA  B4D8               	btfsc	status,2,c
 42454  00F9AC  0012               	return	
 42455                           
 42456                           ; BSR set to: 1
 42457                           ;api.c: 428: {;api.c: 429: motor_stop();
 42458  00F9AE  EC89  F0A8         	call	_motor_stop	;wreg free
 42459                           
 42460                           ;api.c: 430: motor_clear_command_cue();
 42461  00F9B2  ECD8  F0AE         	call	_motor_clear_command_cue	;wreg free
 42462                           
 42463                           ;api.c: 431: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42464  00F9B6  0E82               	movlw	130
 42465  00F9B8  0101               	movlb	1	; () banked
 42466  00F9BA  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42467                           
 42468                           ; BSR set to: 1
 42469                           ;api.c: 434: }
 42470                           
 42471                           ; BSR set to: 1
 42472                           ;api.c: 432: };api.c: 433: break;
 42473  00F9BC  0012               	return	
 42474  00F9BE                     l2314:
 42475                           
 42476                           ; BSR set to: 1
 42477  00F9BE  0100               	movlb	0	; () banked
 42478  00F9C0  519E               	movf	__parse_command_short@cmd& (0+255),w,b
 42479                           
 42480                           ; Switch size 1, requested type "space"
 42481                           ; Number of cases is 18, Range of values is 32 to 56
 42482                           ; switch strategies available:
 42483                           ; Name         Instructions Cycles
 42484                           ; simple_byte           55    28 (average)
 42485                           ;	Chosen strategy is simple_byte
 42486  00F9C2  0A20               	xorlw	32	; case 32
 42487  00F9C4  B4D8               	btfsc	status,2,c
 42488  00F9C6  D789               	goto	l2315
 42489  00F9C8  0A01               	xorlw	1	; case 33
 42490  00F9CA  B4D8               	btfsc	status,2,c
 42491  00F9CC  D78A               	goto	l2317
 42492  00F9CE  0A03               	xorlw	3	; case 34
 42493  00F9D0  B4D8               	btfsc	status,2,c
 42494  00F9D2  D78B               	goto	l2318
 42495  00F9D4  0A01               	xorlw	1	; case 35
 42496  00F9D6  B4D8               	btfsc	status,2,c
 42497  00F9D8  D78C               	goto	l2319
 42498  00F9DA  0A07               	xorlw	7	; case 36
 42499  00F9DC  B4D8               	btfsc	status,2,c
 42500  00F9DE  D78D               	goto	l2320
 42501  00F9E0  0A01               	xorlw	1	; case 37
 42502  00F9E2  B4D8               	btfsc	status,2,c
 42503  00F9E4  D78E               	goto	l2321
 42504  00F9E6  0A03               	xorlw	3	; case 38
 42505  00F9E8  B4D8               	btfsc	status,2,c
 42506  00F9EA  D78F               	goto	l2322
 42507  00F9EC  0A01               	xorlw	1	; case 39
 42508  00F9EE  B4D8               	btfsc	status,2,c
 42509  00F9F0  D790               	goto	l2323
 42510  00F9F2  0A0F               	xorlw	15	; case 40
 42511  00F9F4  B4D8               	btfsc	status,2,c
 42512  00F9F6  D791               	goto	l2324
 42513  00F9F8  0A18               	xorlw	24	; case 48
 42514  00F9FA  B4D8               	btfsc	status,2,c
 42515  00F9FC  D7A6               	goto	l2325
 42516  00F9FE  0A01               	xorlw	1	; case 49
 42517  00FA00  B4D8               	btfsc	status,2,c
 42518  00FA02  D7A6               	goto	l2326
 42519  00FA04  0A03               	xorlw	3	; case 50
 42520  00FA06  B4D8               	btfsc	status,2,c
 42521  00FA08  D7A6               	goto	l2327
 42522  00FA0A  0A01               	xorlw	1	; case 51
 42523  00FA0C  B4D8               	btfsc	status,2,c
 42524  00FA0E  D7A6               	goto	l2328
 42525  00FA10  0A07               	xorlw	7	; case 52
 42526  00FA12  B4D8               	btfsc	status,2,c
 42527  00FA14  D7A6               	goto	l2329
 42528  00FA16  0A01               	xorlw	1	; case 53
 42529  00FA18  B4D8               	btfsc	status,2,c
 42530  00FA1A  D7A6               	goto	l2330
 42531  00FA1C  0A03               	xorlw	3	; case 54
 42532  00FA1E  B4D8               	btfsc	status,2,c
 42533  00FA20  D7A6               	goto	l2331
 42534  00FA22  0A01               	xorlw	1	; case 55
 42535  00FA24  B4D8               	btfsc	status,2,c
 42536  00FA26  D7B1               	goto	l2333
 42537  00FA28  0A0F               	xorlw	15	; case 56
 42538  00FA2A  A4D8               	btfss	status,2,c
 42539  00FA2C  0012               	return	
 42540  00FA2E  D7BB               	goto	l2335
 42541  00FA30                     __end_of__parse_command_short:
 42542                           	opt stack 0
 42543                           tosu	equ	0xFFF
 42544                           tosh	equ	0xFFE
 42545                           tosl	equ	0xFFD
 42546                           pclath	equ	0xFFA
 42547                           tblptru	equ	0xFF8
 42548                           tblptrh	equ	0xFF7
 42549                           tblptrl	equ	0xFF6
 42550                           tablat	equ	0xFF5
 42551                           prodh	equ	0xFF4
 42552                           prodl	equ	0xFF3
 42553                           intcon	equ	0xFF2
 42554                           indf0	equ	0xFEF
 42555                           postinc0	equ	0xFEE
 42556                           fsr0h	equ	0xFEA
 42557                           fsr0l	equ	0xFE9
 42558                           wreg	equ	0xFE8
 42559                           indf1	equ	0xFE7
 42560                           postinc1	equ	0xFE6
 42561                           postdec1	equ	0xFE5
 42562                           plusw1	equ	0xFE3
 42563                           fsr1h	equ	0xFE2
 42564                           fsr1l	equ	0xFE1
 42565                           indf2	equ	0xFDF
 42566                           postinc2	equ	0xFDE
 42567                           postdec2	equ	0xFDD
 42568                           plusw2	equ	0xFDB
 42569                           fsr2h	equ	0xFDA
 42570                           fsr2l	equ	0xFD9
 42571                           status	equ	0xFD8
 42572                           
 42573 ;; *************** function _motor_stop *****************
 42574 ;; Defined at:
 42575 ;;		line 853 in file "motor.c"
 42576 ;; Parameters:    Size  Location     Type
 42577 ;;		None
 42578 ;; Auto vars:     Size  Location     Type
 42579 ;;		None
 42580 ;; Return value:  Size  Location     Type
 42581 ;;                  1    wreg      void 
 42582 ;; Registers used:
 42583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 42584 ;; Tracked objects:
 42585 ;;		On entry : 0/0
 42586 ;;		On exit  : 0/0
 42587 ;;		Unchanged: 0/0
 42588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42592 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42593 ;;Total ram usage:        2 bytes
 42594 ;; Hardware stack levels used:    1
 42595 ;; Hardware stack levels required when called:   10
 42596 ;; This function calls:
 42597 ;;		Nothing
 42598 ;; This function is called by:
 42599 ;;		__parse_command_short
 42600 ;;		_encoder_statemachine
 42601 ;; This function uses a non-reentrant model
 42602 ;;
 42603                           
 42604                           	psect	text171
 42605  015112                     __ptext171:
 42606                           	opt stack 0
 42607  015112                     _motor_stop:
 42608                           	opt stack 19
 42609                           
 42610                           ;motor.c: 856: INTCONbits.GIE = 0;
 42611                           
 42612                           ;incstack = 0
 42613  015112  9EF2               	bcf	intcon,7,c	;volatile
 42614                           
 42615                           ;motor.c: 859: motor_move_type=MOTOR_MOVE_TYPE_NORMAL;
 42616  015114  0E00               	movlw	0
 42617  015116  0101               	movlb	1	; () banked
 42618  015118  6F4B               	movwf	_motor_move_type& (0+255),b
 42619                           
 42620                           ; BSR set to: 1
 42621                           ;motor.c: 860: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 42622  01511A  90D8               	bcf	status,0,c
 42623  01511C  0100               	movlb	0	; () banked
 42624  01511E  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 42625  015120  6EF6               	movwf	tblptrl,c
 42626  015122  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42627  015124  6EF7               	movwf	tblptrh,c
 42628  015126  0E61               	movlw	low _motor_steps_lookup
 42629  015128  26F6               	addwf	tblptrl,f,c
 42630  01512A  0E94               	movlw	high _motor_steps_lookup
 42631  01512C  22F7               	addwfc	tblptrh,f,c
 42632  01512E                     	if	1	;There are 3 active tblptr bytes
 42633  01512E  6AF8               	clrf	tblptru,c
 42634  015130  0E00               	movlw	low (__mediumconst shr (0+16))
 42635  015132  22F8               	addwfc	tblptru,f,c
 42636  015134                     	endif
 42637  015134  0009               	tblrd		*+
 42638  015136  CFF5 F060          	movff	tablat,??_motor_stop
 42639  01513A  0009               	tblrd		*+
 42640  01513C  CFF5 F061          	movff	tablat,??_motor_stop+1
 42641  015140  5160               	movf	??_motor_stop& (0+255),w,b
 42642  015142  0101               	movlb	1	; () banked
 42643  015144  251D               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 42644  015146  6F19               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42645  015148  0100               	movlb	0	; () banked
 42646  01514A  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 42647  01514C  0101               	movlb	1	; () banked
 42648  01514E  211E               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 42649  015150  6F1A               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42650  015152  0E00               	movlw	0
 42651  015154  211F               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 42652  015156  6F1B               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42653  015158  0E00               	movlw	0
 42654  01515A  2120               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 42655  01515C  6F1C               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42656                           
 42657                           ; BSR set to: 1
 42658                           ;motor.c: 863: INTCONbits.GIE = 1;
 42659  01515E  8EF2               	bsf	intcon,7,c	;volatile
 42660                           
 42661                           ; BSR set to: 1
 42662  015160  0012               	return		;funcret
 42663  015162                     __end_of_motor_stop:
 42664                           	opt stack 0
 42665                           tosu	equ	0xFFF
 42666                           tosh	equ	0xFFE
 42667                           tosl	equ	0xFFD
 42668                           pclath	equ	0xFFA
 42669                           tblptru	equ	0xFF8
 42670                           tblptrh	equ	0xFF7
 42671                           tblptrl	equ	0xFF6
 42672                           tablat	equ	0xFF5
 42673                           prodh	equ	0xFF4
 42674                           prodl	equ	0xFF3
 42675                           intcon	equ	0xFF2
 42676                           indf0	equ	0xFEF
 42677                           postinc0	equ	0xFEE
 42678                           fsr0h	equ	0xFEA
 42679                           fsr0l	equ	0xFE9
 42680                           wreg	equ	0xFE8
 42681                           indf1	equ	0xFE7
 42682                           postinc1	equ	0xFE6
 42683                           postdec1	equ	0xFE5
 42684                           plusw1	equ	0xFE3
 42685                           fsr1h	equ	0xFE2
 42686                           fsr1l	equ	0xFE1
 42687                           indf2	equ	0xFDF
 42688                           postinc2	equ	0xFDE
 42689                           postdec2	equ	0xFDD
 42690                           plusw2	equ	0xFDB
 42691                           fsr2h	equ	0xFDA
 42692                           fsr2l	equ	0xFD9
 42693                           status	equ	0xFD8
 42694                           
 42695 ;; *************** function _motor_set_zero *****************
 42696 ;; Defined at:
 42697 ;;		line 968 in file "motor.c"
 42698 ;; Parameters:    Size  Location     Type
 42699 ;;  direction       1    wreg     enum E6622
 42700 ;; Auto vars:     Size  Location     Type
 42701 ;;  direction       1   10[BANK0 ] enum E6622
 42702 ;; Return value:  Size  Location     Type
 42703 ;;                  1    wreg      void 
 42704 ;; Registers used:
 42705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42706 ;; Tracked objects:
 42707 ;;		On entry : 0/0
 42708 ;;		On exit  : 0/0
 42709 ;;		Unchanged: 0/0
 42710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42714 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42715 ;;Total ram usage:        1 bytes
 42716 ;; Hardware stack levels used:    1
 42717 ;; Hardware stack levels required when called:   13
 42718 ;; This function calls:
 42719 ;;		__motor_move_back_forth
 42720 ;; This function is called by:
 42721 ;;		__parse_command_short
 42722 ;;		_encoder_statemachine
 42723 ;; This function uses a non-reentrant model
 42724 ;;
 42725                           
 42726                           	psect	text172
 42727  01553E                     __ptext172:
 42728                           	opt stack 0
 42729  01553E                     _motor_set_zero:
 42730                           	opt stack 16
 42731                           
 42732                           ; BSR set to: 1
 42733                           ;incstack = 0
 42734                           ;motor_set_zero@direction stored from wreg
 42735  01553E  0100               	movlb	0	; () banked
 42736  015540  6F6A               	movwf	motor_set_zero@direction& (0+255),b
 42737                           
 42738                           ;motor.c: 971: os.approach_direction = direction;
 42739  015542  C06A  F179         	movff	motor_set_zero@direction,_os+19	;volatile
 42740                           
 42741                           ;motor.c: 972: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42742  015546  0E01               	movlw	1
 42743  015548  0101               	movlb	1	; () banked
 42744  01554A  6F75               	movwf	(_os+15)& (0+255),b	;volatile
 42745                           
 42746                           ; BSR set to: 1
 42747                           ;motor.c: 973: os.current_position_in_steps = 0;
 42748  01554C  0E00               	movlw	0
 42749  01554E  6F6D               	movwf	(_os+7)& (0+255),b	;volatile
 42750  015550  0E00               	movlw	0
 42751  015552  6F6E               	movwf	(_os+8)& (0+255),b	;volatile
 42752  015554  0E00               	movlw	0
 42753  015556  6F6F               	movwf	(_os+9)& (0+255),b	;volatile
 42754  015558  0E00               	movlw	0
 42755  01555A  6F70               	movwf	(_os+10)& (0+255),b	;volatile
 42756                           
 42757                           ; BSR set to: 1
 42758                           ;motor.c: 974: os.absolute_position = 0;
 42759  01555C  0E00               	movlw	0
 42760  01555E  6F72               	movwf	(_os+12)& (0+255),b	;volatile
 42761  015560  0E00               	movlw	0
 42762  015562  6F71               	movwf	(_os+11)& (0+255),b	;volatile
 42763                           
 42764                           ; BSR set to: 1
 42765                           ;motor.c: 975: os.current_position_in_degrees = 0;
 42766  015564  0E00               	movlw	0
 42767  015566  6F74               	movwf	(_os+14)& (0+255),b	;volatile
 42768  015568  0E00               	movlw	0
 42769  01556A  6F73               	movwf	(_os+13)& (0+255),b	;volatile
 42770                           
 42771                           ; BSR set to: 1
 42772                           ;motor.c: 976: os.divide_position = 0;
 42773  01556C  0E00               	movlw	0
 42774  01556E  6F7E               	movwf	(_os+24)& (0+255),b	;volatile
 42775  015570  0E00               	movlw	0
 42776  015572  6F7D               	movwf	(_os+23)& (0+255),b	;volatile
 42777                           
 42778                           ; BSR set to: 1
 42779                           ;motor.c: 979: _motor_move_back_forth();
 42780  015574  ECB2  F099         	call	__motor_move_back_forth	;wreg free
 42781  015578  0012               	return		;funcret
 42782  01557A                     __end_of_motor_set_zero:
 42783                           	opt stack 0
 42784                           tosu	equ	0xFFF
 42785                           tosh	equ	0xFFE
 42786                           tosl	equ	0xFFD
 42787                           pclath	equ	0xFFA
 42788                           tblptru	equ	0xFF8
 42789                           tblptrh	equ	0xFF7
 42790                           tblptrl	equ	0xFF6
 42791                           tablat	equ	0xFF5
 42792                           prodh	equ	0xFF4
 42793                           prodl	equ	0xFF3
 42794                           intcon	equ	0xFF2
 42795                           indf0	equ	0xFEF
 42796                           postinc0	equ	0xFEE
 42797                           fsr0h	equ	0xFEA
 42798                           fsr0l	equ	0xFE9
 42799                           wreg	equ	0xFE8
 42800                           indf1	equ	0xFE7
 42801                           postinc1	equ	0xFE6
 42802                           postdec1	equ	0xFE5
 42803                           plusw1	equ	0xFE3
 42804                           fsr1h	equ	0xFE2
 42805                           fsr1l	equ	0xFE1
 42806                           indf2	equ	0xFDF
 42807                           postinc2	equ	0xFDE
 42808                           postdec2	equ	0xFDD
 42809                           plusw2	equ	0xFDB
 42810                           fsr2h	equ	0xFDA
 42811                           fsr2l	equ	0xFD9
 42812                           status	equ	0xFD8
 42813                           
 42814 ;; *************** function __motor_move_back_forth *****************
 42815 ;; Defined at:
 42816 ;;		line 296 in file "motor.c"
 42817 ;; Parameters:    Size  Location     Type
 42818 ;;		None
 42819 ;; Auto vars:     Size  Location     Type
 42820 ;;  return_value    1    9[BANK0 ] enum E6639
 42821 ;;  return_value    1    8[BANK0 ] enum E6639
 42822 ;; Return value:  Size  Location     Type
 42823 ;;                  1    wreg      enum E6639
 42824 ;; Registers used:
 42825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42826 ;; Tracked objects:
 42827 ;;		On entry : 0/0
 42828 ;;		On exit  : 0/0
 42829 ;;		Unchanged: 0/0
 42830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42835 ;;Total ram usage:        2 bytes
 42836 ;; Hardware stack levels used:    1
 42837 ;; Hardware stack levels required when called:   12
 42838 ;; This function calls:
 42839 ;;		__motor_schedule_command
 42840 ;;		_motor_items_in_cue
 42841 ;; This function is called by:
 42842 ;;		_motor_set_zero
 42843 ;; This function uses a non-reentrant model
 42844 ;;
 42845                           
 42846                           	psect	text173
 42847  013364                     __ptext173:
 42848                           	opt stack 0
 42849  013364                     __motor_move_back_forth:
 42850                           	opt stack 16
 42851                           
 42852                           ;motor.c: 298: motorReturnValue_t return_value_1;;motor.c: 299: motorReturnValue_t retur
      +                          n_value_2;;motor.c: 301: if(os.busy || motor_items_in_cue()!=0)
 42853                           
 42854                           ;incstack = 0
 42855  013364  0101               	movlb	1	; () banked
 42856  013366  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 42857  013368  A4D8               	btfss	status,2,c
 42858  01336A  0012               	return	
 42859                           
 42860                           ; BSR set to: 1
 42861  01336C  ECDE  F0AE         	call	_motor_items_in_cue	;wreg free
 42862  013370  0900               	iorlw	0
 42863  013372  A4D8               	btfss	status,2,c
 42864  013374  0012               	return	
 42865                           
 42866                           ;motor.c: 305: };motor.c: 307: if(config.overshoot_in_steps==0)
 42867                           
 42868                           ;motor.c: 302: {;motor.c: 304: return MOTOR_RETURN_VALUE_BUSY;;	Return value of __motor_
      +                          move_back_forth is never used
 42869  013376  0101               	movlb	1	; () banked
 42870  013378  519C               	movf	(_config+5)& (0+255),w,b
 42871  01337A  119D               	iorwf	(_config+6)& (0+255),w,b
 42872  01337C  B4D8               	btfsc	status,2,c
 42873  01337E  0012               	return	
 42874                           
 42875                           ; BSR set to: 1
 42876                           ;motor.c: 311: };motor.c: 313: if(os.approach_direction==MOTOR_DIRECTION_CW)
 42877                           
 42878                           ; BSR set to: 1
 42879                           
 42880                           ; BSR set to: 1
 42881                           ;motor.c: 308: {;motor.c: 310: return MOTOR_RETURN_VALUE_OK;;	Return value of __motor_mo
      +                          ve_back_forth is never used
 42882  013380  0579               	decf	(_os+19)& (0+255),w,b	;volatile
 42883  013382  A4D8               	btfss	status,2,c
 42884  013384  D022               	goto	l2487
 42885                           
 42886                           ; BSR set to: 1
 42887                           ;motor.c: 314: {;motor.c: 315: return_value_1 = _motor_schedule_command(MOTOR_DIRECTION_
      +                          CCW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42888  013386  C19C  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42889  01338A  C19D  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42890  01338E  0100               	movlb	0	; () banked
 42891  013390  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42892  013392  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42893  013394  0EFF               	movlw	255
 42894  013396  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42895  013398  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42896  01339A  0E00               	movlw	0
 42897  01339C  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42898  01339E  0EFF               	movlw	255
 42899  0133A0  EC74  F08E         	call	__motor_schedule_command
 42900  0133A4  0100               	movlb	0	; () banked
 42901  0133A6  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 42902                           
 42903                           ;motor.c: 316: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CW, config.overs
      +                          hoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42904  0133A8  C19C  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42905  0133AC  C19D  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42906  0133B0  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42907  0133B2  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42908  0133B4  0EFF               	movlw	255
 42909  0133B6  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42910  0133B8  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42911  0133BA  0E00               	movlw	0
 42912  0133BC  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42913  0133BE  0E01               	movlw	1
 42914  0133C0  EC74  F08E         	call	__motor_schedule_command
 42915  0133C4  0100               	movlb	0	; () banked
 42916  0133C6  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 42917                           
 42918                           ;motor.c: 317: }
 42919  0133C8  0012               	return	
 42920  0133CA                     l2487:
 42921                           
 42922                           ;motor.c: 318: else;motor.c: 319: {;motor.c: 320: return_value_1 = _motor_schedule_comma
      +                          nd(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42923                           
 42924                           ; BSR set to: 0
 42925  0133CA  C19C  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42926  0133CE  C19D  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42927  0133D2  0100               	movlb	0	; () banked
 42928  0133D4  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42929  0133D6  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42930  0133D8  0EFF               	movlw	255
 42931  0133DA  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42932  0133DC  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42933  0133DE  0E00               	movlw	0
 42934  0133E0  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42935  0133E2  0E01               	movlw	1
 42936  0133E4  EC74  F08E         	call	__motor_schedule_command
 42937  0133E8  0100               	movlb	0	; () banked
 42938  0133EA  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 42939                           
 42940                           ;motor.c: 321: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CCW, config.over
      +                          shoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42941  0133EC  C19C  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42942  0133F0  C19D  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42943  0133F4  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42944  0133F6  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42945  0133F8  0EFF               	movlw	255
 42946  0133FA  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42947  0133FC  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42948  0133FE  0E00               	movlw	0
 42949  013400  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42950  013402  0EFF               	movlw	255
 42951  013404  EC74  F08E         	call	__motor_schedule_command
 42952  013408  0100               	movlb	0	; () banked
 42953  01340A  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 42954                           
 42955                           ; BSR set to: 0
 42956                           ;motor.c: 330: else;motor.c: 331: {;motor.c: 332: return return_value_2;;	Return value o
      +                          f __motor_move_back_forth is never used
 42957                           
 42958                           ; BSR set to: 0
 42959                           ;motor.c: 329: }
 42960                           
 42961                           ; BSR set to: 0
 42962                           ;motor.c: 327: {;motor.c: 328: return return_value_1;;	Return value of __motor_move_back
      +                          _forth is never used
 42963                           
 42964                           ; BSR set to: 0
 42965                           
 42966                           ; BSR set to: 0
 42967  01340C  0012               	return	
 42968  01340E                     __end_of__motor_move_back_forth:
 42969                           	opt stack 0
 42970                           tosu	equ	0xFFF
 42971                           tosh	equ	0xFFE
 42972                           tosl	equ	0xFFD
 42973                           pclath	equ	0xFFA
 42974                           tblptru	equ	0xFF8
 42975                           tblptrh	equ	0xFF7
 42976                           tblptrl	equ	0xFF6
 42977                           tablat	equ	0xFF5
 42978                           prodh	equ	0xFF4
 42979                           prodl	equ	0xFF3
 42980                           intcon	equ	0xFF2
 42981                           indf0	equ	0xFEF
 42982                           postinc0	equ	0xFEE
 42983                           fsr0h	equ	0xFEA
 42984                           fsr0l	equ	0xFE9
 42985                           wreg	equ	0xFE8
 42986                           indf1	equ	0xFE7
 42987                           postinc1	equ	0xFE6
 42988                           postdec1	equ	0xFE5
 42989                           plusw1	equ	0xFE3
 42990                           fsr1h	equ	0xFE2
 42991                           fsr1l	equ	0xFE1
 42992                           indf2	equ	0xFDF
 42993                           postinc2	equ	0xFDE
 42994                           postdec2	equ	0xFDD
 42995                           plusw2	equ	0xFDB
 42996                           fsr2h	equ	0xFDA
 42997                           fsr2l	equ	0xFD9
 42998                           status	equ	0xFD8
 42999                           
 43000 ;; *************** function _motor_move_endless *****************
 43001 ;; Defined at:
 43002 ;;		line 1100 in file "motor.c"
 43003 ;; Parameters:    Size  Location     Type
 43004 ;;  direction       1    wreg     enum E6622
 43005 ;;  speed           2   44[BANK0 ] unsigned int 
 43006 ;; Auto vars:     Size  Location     Type
 43007 ;;  direction       1   46[BANK0 ] enum E6622
 43008 ;; Return value:  Size  Location     Type
 43009 ;;                  1    wreg      enum E6782
 43010 ;; Registers used:
 43011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43012 ;; Tracked objects:
 43013 ;;		On entry : 0/0
 43014 ;;		On exit  : 0/0
 43015 ;;		Unchanged: 0/0
 43016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43017 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43020 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43021 ;;Total ram usage:        3 bytes
 43022 ;; Hardware stack levels used:    1
 43023 ;; Hardware stack levels required when called:   13
 43024 ;; This function calls:
 43025 ;;		__motor_move_steps
 43026 ;; This function is called by:
 43027 ;;		__parse_command_short
 43028 ;;		_encoder_statemachine
 43029 ;; This function uses a non-reentrant model
 43030 ;;
 43031                           
 43032                           	psect	text174
 43033  015926                     __ptext174:
 43034                           	opt stack 0
 43035  015926                     _motor_move_endless:
 43036                           	opt stack 16
 43037                           
 43038                           ;incstack = 0
 43039                           ;motor_move_endless@direction stored from wreg
 43040  015926  0100               	movlb	0	; () banked
 43041  015928  6F8E               	movwf	motor_move_endless@direction& (0+255),b
 43042                           
 43043                           ;motor.c: 1102: return _motor_move_steps(direction, 0xFFFFFFFF, speed, MOTOR_OVERSHOOT_N
      +                          O_OVERSHOOT, MOTOR_MOVE_TYPE_ENDLESS);;	Return value of _motor_move_endless is never use
      +                          d
 43044  01592A  0EFF               	movlw	255
 43045  01592C  0100               	movlb	0	; () banked
 43046  01592E  6F7D               	movwf	__motor_move_steps@distance_in_steps& (0+255),b
 43047  015930  0EFF               	movlw	255
 43048  015932  6F7E               	movwf	(__motor_move_steps@distance_in_steps+1)& (0+255),b
 43049  015934  0EFF               	movlw	255
 43050  015936  6F7F               	movwf	(__motor_move_steps@distance_in_steps+2)& (0+255),b
 43051  015938  0EFF               	movlw	255
 43052  01593A  6F80               	movwf	(__motor_move_steps@distance_in_steps+3)& (0+255),b
 43053  01593C  C08C  F081         	movff	motor_move_endless@speed,__motor_move_steps@speed
 43054  015940  C08D  F082         	movff	motor_move_endless@speed+1,__motor_move_steps@speed+1
 43055  015944  0E01               	movlw	1
 43056  015946  6F83               	movwf	__motor_move_steps@overshoot& (0+255),b
 43057  015948  0E01               	movlw	1
 43058  01594A  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43059  01594C  518E               	movf	motor_move_endless@direction& (0+255),w,b
 43060  01594E  ECBE  F076         	call	__motor_move_steps
 43061  015952  0012               	return	
 43062  015954                     __end_of_motor_move_endless:
 43063                           	opt stack 0
 43064                           tosu	equ	0xFFF
 43065                           tosh	equ	0xFFE
 43066                           tosl	equ	0xFFD
 43067                           pclath	equ	0xFFA
 43068                           tblptru	equ	0xFF8
 43069                           tblptrh	equ	0xFF7
 43070                           tblptrl	equ	0xFF6
 43071                           tablat	equ	0xFF5
 43072                           prodh	equ	0xFF4
 43073                           prodl	equ	0xFF3
 43074                           intcon	equ	0xFF2
 43075                           indf0	equ	0xFEF
 43076                           postinc0	equ	0xFEE
 43077                           fsr0h	equ	0xFEA
 43078                           fsr0l	equ	0xFE9
 43079                           wreg	equ	0xFE8
 43080                           indf1	equ	0xFE7
 43081                           postinc1	equ	0xFE6
 43082                           postdec1	equ	0xFE5
 43083                           plusw1	equ	0xFE3
 43084                           fsr1h	equ	0xFE2
 43085                           fsr1l	equ	0xFE1
 43086                           indf2	equ	0xFDF
 43087                           postinc2	equ	0xFDE
 43088                           postdec2	equ	0xFDD
 43089                           plusw2	equ	0xFDB
 43090                           fsr2h	equ	0xFDA
 43091                           fsr2l	equ	0xFD9
 43092                           status	equ	0xFD8
 43093                           
 43094 ;; *************** function _motor_goto_steps *****************
 43095 ;; Defined at:
 43096 ;;		line 1023 in file "motor.c"
 43097 ;; Parameters:    Size  Location     Type
 43098 ;;  direction       1    wreg     enum E6622
 43099 ;;  position        4   50[BANK0 ] unsigned long 
 43100 ;;  speed           2   54[BANK0 ] unsigned int 
 43101 ;;  overshoot       1   56[BANK0 ] enum E6635
 43102 ;; Auto vars:     Size  Location     Type
 43103 ;;  direction       1   61[BANK0 ] enum E6622
 43104 ;;  distance_in_    4   57[BANK0 ] unsigned long 
 43105 ;; Return value:  Size  Location     Type
 43106 ;;                  1    wreg      enum E6782
 43107 ;; Registers used:
 43108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43109 ;; Tracked objects:
 43110 ;;		On entry : 0/0
 43111 ;;		On exit  : 0/0
 43112 ;;		Unchanged: 0/0
 43113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43114 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43115 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43117 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43118 ;;Total ram usage:       12 bytes
 43119 ;; Hardware stack levels used:    1
 43120 ;; Hardware stack levels required when called:   13
 43121 ;; This function calls:
 43122 ;;		__motor_calculate_distance
 43123 ;;		__motor_decide_direction
 43124 ;;		__motor_move_steps
 43125 ;; This function is called by:
 43126 ;;		__parse_command_short
 43127 ;;		_motor_divide_jump
 43128 ;;		_motor_divide_jump_to_nearest
 43129 ;;		_encoder_statemachine
 43130 ;; This function uses a non-reentrant model
 43131 ;;
 43132                           
 43133                           	psect	text175
 43134  013696                     __ptext175:
 43135                           	opt stack 0
 43136  013696                     _motor_goto_steps:
 43137                           	opt stack 16
 43138                           
 43139                           ;incstack = 0
 43140                           ;motor_goto_steps@direction stored from wreg
 43141  013696  0100               	movlb	0	; () banked
 43142  013698  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43143                           
 43144                           ;motor.c: 1025: uint32_t distance_in_steps;;motor.c: 1027: if(position>=config.full_circ
      +                          le_in_steps)
 43145  01369A  0101               	movlb	1	; () banked
 43146  01369C  5197               	movf	_config& (0+255),w,b
 43147  01369E  0100               	movlb	0	; () banked
 43148  0136A0  5D92               	subwf	motor_goto_steps@position& (0+255),w,b
 43149  0136A2  0101               	movlb	1	; () banked
 43150  0136A4  5198               	movf	(_config+1)& (0+255),w,b
 43151  0136A6  0100               	movlb	0	; () banked
 43152  0136A8  5993               	subwfb	(motor_goto_steps@position+1)& (0+255),w,b
 43153  0136AA  0101               	movlb	1	; () banked
 43154  0136AC  5199               	movf	(_config+2)& (0+255),w,b
 43155  0136AE  0100               	movlb	0	; () banked
 43156  0136B0  5994               	subwfb	(motor_goto_steps@position+2)& (0+255),w,b
 43157  0136B2  0101               	movlb	1	; () banked
 43158  0136B4  519A               	movf	(_config+3)& (0+255),w,b
 43159  0136B6  0100               	movlb	0	; () banked
 43160  0136B8  5995               	subwfb	(motor_goto_steps@position+3)& (0+255),w,b
 43161  0136BA  B0D8               	btfsc	status,0,c
 43162  0136BC  0012               	return	
 43163                           
 43164                           ; BSR set to: 0
 43165                           ;motor.c: 1031: };motor.c: 1034: if(direction==MOTOR_DIRECTION_SHORTEST)
 43166                           
 43167                           ; BSR set to: 0
 43168                           
 43169                           ; BSR set to: 0
 43170                           ;motor.c: 1028: {;motor.c: 1030: return MOTOR_RETURN_VALUE_INVALID_POSITION;;	Return val
      +                          ue of _motor_goto_steps is never used
 43171  0136BE  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43172  0136C0  A4D8               	btfss	status,2,c
 43173  0136C2  D00E               	goto	l2645
 43174                           
 43175                           ; BSR set to: 0
 43176                           ;motor.c: 1035: {;motor.c: 1036: direction = _motor_decide_direction(position, overshoot
      +                          );
 43177  0136C4  C092  F07D         	movff	motor_goto_steps@position,__motor_decide_direction@target_position_in_steps
 43178  0136C8  C093  F07E         	movff	motor_goto_steps@position+1,__motor_decide_direction@target_position_in_steps+1
 43179  0136CC  C094  F07F         	movff	motor_goto_steps@position+2,__motor_decide_direction@target_position_in_steps+2
 43180  0136D0  C095  F080         	movff	motor_goto_steps@position+3,__motor_decide_direction@target_position_in_steps+3
 43181  0136D4  C098  F081         	movff	motor_goto_steps@overshoot,__motor_decide_direction@overshoot
 43182  0136D8  EC2C  F07A         	call	__motor_decide_direction	;wreg free
 43183  0136DC  0100               	movlb	0	; () banked
 43184  0136DE  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43185  0136E0                     l2645:
 43186                           
 43187                           ; BSR set to: 0
 43188                           ;motor.c: 1037: };motor.c: 1040: distance_in_steps = _motor_calculate_distance(direction
      +                          , position);
 43189                           
 43190                           ; BSR set to: 0
 43191  0136E0  C092  F060         	movff	motor_goto_steps@position,__motor_calculate_distance@target_position
 43192  0136E4  C093  F061         	movff	motor_goto_steps@position+1,__motor_calculate_distance@target_position+1
 43193  0136E8  C094  F062         	movff	motor_goto_steps@position+2,__motor_calculate_distance@target_position+2
 43194  0136EC  C095  F063         	movff	motor_goto_steps@position+3,__motor_calculate_distance@target_position+3
 43195  0136F0  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43196  0136F2  ECB4  F090         	call	__motor_calculate_distance
 43197  0136F6  C060  F099         	movff	?__motor_calculate_distance,motor_goto_steps@distance_in_steps
 43198  0136FA  C061  F09A         	movff	?__motor_calculate_distance+1,motor_goto_steps@distance_in_steps+1
 43199  0136FE  C062  F09B         	movff	?__motor_calculate_distance+2,motor_goto_steps@distance_in_steps+2
 43200  013702  C063  F09C         	movff	?__motor_calculate_distance+3,motor_goto_steps@distance_in_steps+3
 43201                           
 43202                           ;motor.c: 1043: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_goto_steps is never used
 43203  013706  C099  F07D         	movff	motor_goto_steps@distance_in_steps,__motor_move_steps@distance_in_steps
 43204  01370A  C09A  F07E         	movff	motor_goto_steps@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 43205  01370E  C09B  F07F         	movff	motor_goto_steps@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 43206  013712  C09C  F080         	movff	motor_goto_steps@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 43207  013716  C096  F081         	movff	motor_goto_steps@speed,__motor_move_steps@speed
 43208  01371A  C097  F082         	movff	motor_goto_steps@speed+1,__motor_move_steps@speed+1
 43209  01371E  C098  F083         	movff	motor_goto_steps@overshoot,__motor_move_steps@overshoot
 43210  013722  0E00               	movlw	0
 43211  013724  0100               	movlb	0	; () banked
 43212  013726  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43213  013728  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43214  01372A  ECBE  F076         	call	__motor_move_steps
 43215  01372E  0012               	return	
 43216  013730                     __end_of_motor_goto_steps:
 43217                           	opt stack 0
 43218                           tosu	equ	0xFFF
 43219                           tosh	equ	0xFFE
 43220                           tosl	equ	0xFFD
 43221                           pclath	equ	0xFFA
 43222                           tblptru	equ	0xFF8
 43223                           tblptrh	equ	0xFF7
 43224                           tblptrl	equ	0xFF6
 43225                           tablat	equ	0xFF5
 43226                           prodh	equ	0xFF4
 43227                           prodl	equ	0xFF3
 43228                           intcon	equ	0xFF2
 43229                           indf0	equ	0xFEF
 43230                           postinc0	equ	0xFEE
 43231                           fsr0h	equ	0xFEA
 43232                           fsr0l	equ	0xFE9
 43233                           wreg	equ	0xFE8
 43234                           indf1	equ	0xFE7
 43235                           postinc1	equ	0xFE6
 43236                           postdec1	equ	0xFE5
 43237                           plusw1	equ	0xFE3
 43238                           fsr1h	equ	0xFE2
 43239                           fsr1l	equ	0xFE1
 43240                           indf2	equ	0xFDF
 43241                           postinc2	equ	0xFDE
 43242                           postdec2	equ	0xFDD
 43243                           plusw2	equ	0xFDB
 43244                           fsr2h	equ	0xFDA
 43245                           fsr2l	equ	0xFD9
 43246                           status	equ	0xFD8
 43247                           
 43248 ;; *************** function __motor_decide_direction *****************
 43249 ;; Defined at:
 43250 ;;		line 336 in file "motor.c"
 43251 ;; Parameters:    Size  Location     Type
 43252 ;;  target_posit    4   29[BANK0 ] unsigned long 
 43253 ;;  overshoot       1   33[BANK0 ] enum E6635
 43254 ;; Auto vars:     Size  Location     Type
 43255 ;;  distance_to_    4   46[BANK0 ] unsigned long 
 43256 ;;  distance_to_    4   42[BANK0 ] unsigned long 
 43257 ;;  distance_to_    4   38[BANK0 ] long 
 43258 ;;  distance_to_    4   34[BANK0 ] long 
 43259 ;; Return value:  Size  Location     Type
 43260 ;;                  1    wreg      enum E6622
 43261 ;; Registers used:
 43262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43263 ;; Tracked objects:
 43264 ;;		On entry : 0/0
 43265 ;;		On exit  : 0/0
 43266 ;;		Unchanged: 0/0
 43267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43268 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43269 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43271 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43272 ;;Total ram usage:       21 bytes
 43273 ;; Hardware stack levels used:    1
 43274 ;; Hardware stack levels required when called:   12
 43275 ;; This function calls:
 43276 ;;		__motor_calculate_distance
 43277 ;;		__motor_distance_to_limit
 43278 ;; This function is called by:
 43279 ;;		_motor_goto_steps
 43280 ;;		_motor_goto_degrees_float
 43281 ;;		_motor_goto_degrees_int
 43282 ;; This function uses a non-reentrant model
 43283 ;;
 43284                           
 43285                           	psect	text176
 43286  00F458                     __ptext176:
 43287                           	opt stack 0
 43288  00F458                     __motor_decide_direction:
 43289                           	opt stack 16
 43290                           
 43291                           ;motor.c: 343: uint32_t distance_to_target_cw;;motor.c: 344: uint32_t distance_to_target
      +                          _ccw;;motor.c: 346: int32_t distance_to_limit_cw;;motor.c: 347: int32_t distance_to_limi
      +                          t_ccw;;motor.c: 350: distance_to_target_cw = _motor_calculate_distance(MOTOR_DIRECTION_C
      +                          W, target_position_in_steps);
 43292                           
 43293                           ;incstack = 0
 43294  00F458  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43295  00F45C  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43296  00F460  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43297  00F464  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43298  00F468  0E01               	movlw	1
 43299  00F46A  ECB4  F090         	call	__motor_calculate_distance
 43300  00F46E  C060  F08A         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_cw
 43301  00F472  C061  F08B         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_cw+1
 43302  00F476  C062  F08C         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_cw+2
 43303  00F47A  C063  F08D         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_cw+3
 43304                           
 43305                           ;motor.c: 351: distance_to_target_ccw = _motor_calculate_distance(MOTOR_DIRECTION_CCW, t
      +                          arget_position_in_steps);
 43306  00F47E  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43307  00F482  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43308  00F486  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43309  00F48A  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43310  00F48E  0EFF               	movlw	255
 43311  00F490  ECB4  F090         	call	__motor_calculate_distance
 43312  00F494  C060  F08E         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_ccw
 43313  00F498  C061  F08F         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_ccw+1
 43314  00F49C  C062  F090         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_ccw+2
 43315  00F4A0  C063  F091         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_ccw+3
 43316                           
 43317                           ;motor.c: 354: distance_to_limit_cw = _motor_distance_to_limit(MOTOR_DIRECTION_CW);
 43318  00F4A4  0E01               	movlw	1
 43319  00F4A6  EC10  F07F         	call	__motor_distance_to_limit
 43320  00F4AA  C06C  F082         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_cw
 43321  00F4AE  C06D  F083         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_cw+1
 43322  00F4B2  C06E  F084         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_cw+2
 43323  00F4B6  C06F  F085         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_cw+3
 43324                           
 43325                           ;motor.c: 355: distance_to_limit_ccw = _motor_distance_to_limit(MOTOR_DIRECTION_CCW);
 43326  00F4BA  0EFF               	movlw	255
 43327  00F4BC  EC10  F07F         	call	__motor_distance_to_limit
 43328  00F4C0  C06C  F086         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_ccw
 43329  00F4C4  C06D  F087         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_ccw+1
 43330  00F4C8  C06E  F088         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_ccw+2
 43331  00F4CC  C06F  F089         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_ccw+3
 43332                           
 43333                           ;motor.c: 359: if((distance_to_target_cw>distance_to_limit_cw) && (distance_to_target_cc
      +                          w>distance_to_limit_ccw))
 43334  00F4D0  0100               	movlb	0	; () banked
 43335  00F4D2  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43336  00F4D4  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43337  00F4D6  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43338  00F4D8  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43339  00F4DA  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43340  00F4DC  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43341  00F4DE  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43342  00F4E0  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43343  00F4E2  B0D8               	btfsc	status,0,c
 43344  00F4E4  D00C               	goto	l2493
 43345                           
 43346                           ; BSR set to: 0
 43347  00F4E6  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43348  00F4E8  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43349  00F4EA  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43350  00F4EC  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43351  00F4EE  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43352  00F4F0  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43353  00F4F2  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43354  00F4F4  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43355  00F4F6  B0D8               	btfsc	status,0,c
 43356  00F4F8  D002               	goto	l2493
 43357                           
 43358                           ; BSR set to: 0
 43359                           ;motor.c: 360: {;motor.c: 361: return MOTOR_DIRECTION_SHORTEST;
 43360  00F4FA  0E00               	movlw	0
 43361                           
 43362                           ; BSR set to: 0
 43363  00F4FC  0012               	return	
 43364  00F4FE                     l2493:
 43365                           
 43366                           ; BSR set to: 0
 43367                           ;motor.c: 362: };motor.c: 363: if(distance_to_target_cw>distance_to_limit_cw)
 43368                           
 43369                           ; BSR set to: 0
 43370  00F4FE  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43371  00F500  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43372  00F502  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43373  00F504  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43374  00F506  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43375  00F508  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43376  00F50A  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43377  00F50C  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43378  00F50E  B0D8               	btfsc	status,0,c
 43379  00F510  D002               	goto	l2495
 43380                           
 43381                           ; BSR set to: 0
 43382                           ;motor.c: 364: {;motor.c: 365: return MOTOR_DIRECTION_CCW;
 43383  00F512  0EFF               	movlw	255
 43384                           
 43385                           ; BSR set to: 0
 43386  00F514  0012               	return	
 43387  00F516                     l2495:
 43388                           
 43389                           ; BSR set to: 0
 43390                           ;motor.c: 366: };motor.c: 367: if(distance_to_target_ccw>distance_to_limit_ccw)
 43391                           
 43392                           ; BSR set to: 0
 43393  00F516  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43394  00F518  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43395  00F51A  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43396  00F51C  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43397  00F51E  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43398  00F520  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43399  00F522  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43400  00F524  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43401  00F526  B0D8               	btfsc	status,0,c
 43402  00F528  D002               	goto	l2496
 43403                           
 43404                           ; BSR set to: 0
 43405                           ;motor.c: 368: {;motor.c: 369: return MOTOR_DIRECTION_CW;
 43406  00F52A  0E01               	movlw	1
 43407                           
 43408                           ; BSR set to: 0
 43409  00F52C  0012               	return	
 43410  00F52E                     l2496:
 43411                           
 43412                           ; BSR set to: 0
 43413                           ;motor.c: 370: };motor.c: 374: if(overshoot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)
 43414                           
 43415                           ; BSR set to: 0
 43416  00F52E  5181               	movf	__motor_decide_direction@overshoot& (0+255),w,b
 43417  00F530  A4D8               	btfss	status,2,c
 43418  00F532  D04E               	goto	l2499
 43419                           
 43420                           ; BSR set to: 0
 43421                           ;motor.c: 375: {;motor.c: 376: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43422  00F534  0101               	movlb	1	; () banked
 43423  00F536  0579               	decf	(_os+19)& (0+255),w,b	;volatile
 43424  00F538  A4D8               	btfss	status,2,c
 43425  00F53A  D023               	goto	l2498
 43426                           
 43427                           ; BSR set to: 1
 43428                           ;motor.c: 377: {;motor.c: 379: distance_to_target_ccw += config.overshoot_in_steps;
 43429  00F53C  519C               	movf	(_config+5)& (0+255),w,b
 43430  00F53E  0100               	movlb	0	; () banked
 43431  00F540  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43432  00F542  0101               	movlb	1	; () banked
 43433  00F544  519D               	movf	(_config+6)& (0+255),w,b
 43434  00F546  0100               	movlb	0	; () banked
 43435  00F548  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43436  00F54A  0E00               	movlw	0
 43437  00F54C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43438  00F54E  0E00               	movlw	0
 43439  00F550  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43440                           
 43441                           ;motor.c: 380: distance_to_target_ccw += config.overshoot_in_steps;
 43442  00F552  0101               	movlb	1	; () banked
 43443  00F554  519C               	movf	(_config+5)& (0+255),w,b
 43444  00F556  0100               	movlb	0	; () banked
 43445  00F558  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43446  00F55A  0101               	movlb	1	; () banked
 43447  00F55C  519D               	movf	(_config+6)& (0+255),w,b
 43448  00F55E  0100               	movlb	0	; () banked
 43449  00F560  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43450  00F562  0E00               	movlw	0
 43451  00F564  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43452  00F566  0E00               	movlw	0
 43453  00F568  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43454                           
 43455                           ;motor.c: 381: distance_to_target_ccw += config.overshoot_cost_in_steps;
 43456  00F56A  0101               	movlb	1	; () banked
 43457  00F56C  519E               	movf	(_config+7)& (0+255),w,b
 43458  00F56E  0100               	movlb	0	; () banked
 43459  00F570  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43460  00F572  0101               	movlb	1	; () banked
 43461  00F574  519F               	movf	(_config+8)& (0+255),w,b
 43462  00F576  0100               	movlb	0	; () banked
 43463  00F578  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43464  00F57A  0E00               	movlw	0
 43465  00F57C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43466  00F57E  0E00               	movlw	0
 43467  00F580  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43468  00F582                     l2498:
 43469                           
 43470                           ;motor.c: 382: };motor.c: 383: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 43471                           
 43472                           ; BSR set to: 0
 43473  00F582  0101               	movlb	1	; () banked
 43474  00F584  2979               	incf	(_os+19)& (0+255),w,b	;volatile
 43475  00F586  A4D8               	btfss	status,2,c
 43476  00F588  D023               	goto	l2499
 43477                           
 43478                           ; BSR set to: 1
 43479                           ;motor.c: 384: {;motor.c: 386: distance_to_target_cw += config.overshoot_in_steps;
 43480  00F58A  519C               	movf	(_config+5)& (0+255),w,b
 43481  00F58C  0100               	movlb	0	; () banked
 43482  00F58E  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43483  00F590  0101               	movlb	1	; () banked
 43484  00F592  519D               	movf	(_config+6)& (0+255),w,b
 43485  00F594  0100               	movlb	0	; () banked
 43486  00F596  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43487  00F598  0E00               	movlw	0
 43488  00F59A  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43489  00F59C  0E00               	movlw	0
 43490  00F59E  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43491                           
 43492                           ;motor.c: 387: distance_to_target_cw += config.overshoot_in_steps;
 43493  00F5A0  0101               	movlb	1	; () banked
 43494  00F5A2  519C               	movf	(_config+5)& (0+255),w,b
 43495  00F5A4  0100               	movlb	0	; () banked
 43496  00F5A6  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43497  00F5A8  0101               	movlb	1	; () banked
 43498  00F5AA  519D               	movf	(_config+6)& (0+255),w,b
 43499  00F5AC  0100               	movlb	0	; () banked
 43500  00F5AE  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43501  00F5B0  0E00               	movlw	0
 43502  00F5B2  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43503  00F5B4  0E00               	movlw	0
 43504  00F5B6  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43505                           
 43506                           ;motor.c: 388: distance_to_target_cw += config.overshoot_cost_in_steps;
 43507  00F5B8  0101               	movlb	1	; () banked
 43508  00F5BA  519E               	movf	(_config+7)& (0+255),w,b
 43509  00F5BC  0100               	movlb	0	; () banked
 43510  00F5BE  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43511  00F5C0  0101               	movlb	1	; () banked
 43512  00F5C2  519F               	movf	(_config+8)& (0+255),w,b
 43513  00F5C4  0100               	movlb	0	; () banked
 43514  00F5C6  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43515  00F5C8  0E00               	movlw	0
 43516  00F5CA  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43517  00F5CC  0E00               	movlw	0
 43518  00F5CE  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43519  00F5D0                     l2499:
 43520                           
 43521                           ;motor.c: 389: };motor.c: 390: };motor.c: 393: if(distance_to_target_ccw<distance_to_tar
      +                          get_cw)
 43522                           
 43523                           ; BSR set to: 0
 43524                           
 43525                           ; BSR set to: 0
 43526  00F5D0  0100               	movlb	0	; () banked
 43527  00F5D2  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43528  00F5D4  5D8E               	subwf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43529  00F5D6  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43530  00F5D8  598F               	subwfb	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43531  00F5DA  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43532  00F5DC  5990               	subwfb	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43533  00F5DE  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43534  00F5E0  5991               	subwfb	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43535  00F5E2  B0D8               	btfsc	status,0,c
 43536  00F5E4  D002               	goto	l2500
 43537                           
 43538                           ; BSR set to: 0
 43539                           ;motor.c: 394: {;motor.c: 395: return MOTOR_DIRECTION_CCW;
 43540  00F5E6  0EFF               	movlw	255
 43541                           
 43542                           ; BSR set to: 0
 43543                           ;motor.c: 396: }
 43544                           
 43545                           ; BSR set to: 0
 43546  00F5E8  0012               	return	
 43547  00F5EA                     l2500:
 43548                           
 43549                           ; BSR set to: 0
 43550                           ;motor.c: 397: else;motor.c: 398: {;motor.c: 399: return MOTOR_DIRECTION_CW;
 43551                           
 43552                           ; BSR set to: 0
 43553  00F5EA  0E01               	movlw	1
 43554                           
 43555                           ; BSR set to: 0
 43556  00F5EC  0012               	return	
 43557  00F5EE                     __end_of__motor_decide_direction:
 43558                           	opt stack 0
 43559                           tosu	equ	0xFFF
 43560                           tosh	equ	0xFFE
 43561                           tosl	equ	0xFFD
 43562                           pclath	equ	0xFFA
 43563                           tblptru	equ	0xFF8
 43564                           tblptrh	equ	0xFF7
 43565                           tblptrl	equ	0xFF6
 43566                           tablat	equ	0xFF5
 43567                           prodh	equ	0xFF4
 43568                           prodl	equ	0xFF3
 43569                           intcon	equ	0xFF2
 43570                           indf0	equ	0xFEF
 43571                           postinc0	equ	0xFEE
 43572                           fsr0h	equ	0xFEA
 43573                           fsr0l	equ	0xFE9
 43574                           wreg	equ	0xFE8
 43575                           indf1	equ	0xFE7
 43576                           postinc1	equ	0xFE6
 43577                           postdec1	equ	0xFE5
 43578                           plusw1	equ	0xFE3
 43579                           fsr1h	equ	0xFE2
 43580                           fsr1l	equ	0xFE1
 43581                           indf2	equ	0xFDF
 43582                           postinc2	equ	0xFDE
 43583                           postdec2	equ	0xFDD
 43584                           plusw2	equ	0xFDB
 43585                           fsr2h	equ	0xFDA
 43586                           fsr2l	equ	0xFD9
 43587                           status	equ	0xFD8
 43588                           
 43589 ;; *************** function __motor_calculate_distance *****************
 43590 ;; Defined at:
 43591 ;;		line 482 in file "motor.c"
 43592 ;; Parameters:    Size  Location     Type
 43593 ;;  direction       1    wreg     enum E6622
 43594 ;;  target_posit    4    0[BANK0 ] unsigned long 
 43595 ;; Auto vars:     Size  Location     Type
 43596 ;;  direction       1    8[BANK0 ] enum E6622
 43597 ;;  distance        4    9[BANK0 ] unsigned long 
 43598 ;; Return value:  Size  Location     Type
 43599 ;;                  4    0[BANK0 ] unsigned long 
 43600 ;; Registers used:
 43601 ;;		wreg, status,2, status,0
 43602 ;; Tracked objects:
 43603 ;;		On entry : 0/0
 43604 ;;		On exit  : 0/0
 43605 ;;		Unchanged: 0/0
 43606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43607 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43608 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43609 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43610 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43611 ;;Total ram usage:       13 bytes
 43612 ;; Hardware stack levels used:    1
 43613 ;; Hardware stack levels required when called:   10
 43614 ;; This function calls:
 43615 ;;		Nothing
 43616 ;; This function is called by:
 43617 ;;		__motor_decide_direction
 43618 ;;		_motor_goto_steps
 43619 ;;		_motor_goto_degrees_float
 43620 ;;		_motor_goto_degrees_int
 43621 ;; This function uses a non-reentrant model
 43622 ;;
 43623                           
 43624                           	psect	text177
 43625  012168                     __ptext177:
 43626                           	opt stack 0
 43627  012168                     __motor_calculate_distance:
 43628                           	opt stack 17
 43629                           
 43630                           ; BSR set to: 0
 43631                           ;incstack = 0
 43632                           ;__motor_calculate_distance@direction stored from wreg
 43633  012168  0100               	movlb	0	; () banked
 43634  01216A  6F68               	movwf	__motor_calculate_distance@direction& (0+255),b
 43635                           
 43636                           ;motor.c: 484: uint32_t distance;;motor.c: 487: if(direction==MOTOR_DIRECTION_CW)
 43637  01216C  0100               	movlb	0	; () banked
 43638  01216E  0568               	decf	__motor_calculate_distance@direction& (0+255),w,b
 43639  012170  A4D8               	btfss	status,2,c
 43640  012172  D01C               	goto	l2520
 43641                           
 43642                           ; BSR set to: 0
 43643                           ;motor.c: 488: {;motor.c: 489: distance = target_position - os.current_position_in_steps
      +                          ;
 43644  012174  C16D  F064         	movff	_os+7,??__motor_calculate_distance	;volatile
 43645  012178  C16E  F065         	movff	_os+8,??__motor_calculate_distance+1	;volatile
 43646  01217C  C16F  F066         	movff	_os+9,??__motor_calculate_distance+2	;volatile
 43647  012180  C170  F067         	movff	_os+10,??__motor_calculate_distance+3	;volatile
 43648  012184  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43649  012186  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43650  012188  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43651  01218A  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43652  01218C  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43653  01218E  0E00               	movlw	0
 43654  012190  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43655  012192  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43656  012194  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43657  012196  5160               	movf	__motor_calculate_distance@target_position& (0+255),w,b
 43658  012198  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43659  01219A  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43660  01219C  5161               	movf	(__motor_calculate_distance@target_position+1)& (0+255),w,b
 43661  01219E  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43662  0121A0  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43663  0121A2  5162               	movf	(__motor_calculate_distance@target_position+2)& (0+255),w,b
 43664  0121A4  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43665  0121A6  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43666  0121A8  5163               	movf	(__motor_calculate_distance@target_position+3)& (0+255),w,b
 43667  0121AA  D023               	goto	L91
 43668  0121AC                     l2520:
 43669                           
 43670                           ; BSR set to: 0
 43671                           ;motor.c: 496: else;motor.c: 497: {;motor.c: 498: distance = os.current_position_in_step
      +                          s - target_position;
 43672                           
 43673                           ; BSR set to: 0
 43674  0121AC  C060  F064         	movff	__motor_calculate_distance@target_position,??__motor_calculate_distance
 43675  0121B0  C061  F065         	movff	__motor_calculate_distance@target_position+1,??__motor_calculate_distance+1
 43676  0121B4  C062  F066         	movff	__motor_calculate_distance@target_position+2,??__motor_calculate_distance+2
 43677  0121B8  C063  F067         	movff	__motor_calculate_distance@target_position+3,??__motor_calculate_distance+3
 43678  0121BC  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43679  0121BE  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43680  0121C0  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43681  0121C2  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43682  0121C4  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43683  0121C6  0E00               	movlw	0
 43684  0121C8  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43685  0121CA  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43686  0121CC  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43687  0121CE  0101               	movlb	1	; () banked
 43688  0121D0  516D               	movf	(_os+7)& (0+255),w,b	;volatile
 43689  0121D2  0100               	movlb	0	; () banked
 43690  0121D4  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43691  0121D6  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43692  0121D8  0101               	movlb	1	; () banked
 43693  0121DA  516E               	movf	(_os+8)& (0+255),w,b	;volatile
 43694  0121DC  0100               	movlb	0	; () banked
 43695  0121DE  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43696  0121E0  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43697  0121E2  0101               	movlb	1	; () banked
 43698  0121E4  516F               	movf	(_os+9)& (0+255),w,b	;volatile
 43699  0121E6  0100               	movlb	0	; () banked
 43700  0121E8  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43701  0121EA  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43702  0121EC  0101               	movlb	1	; () banked
 43703  0121EE  5170               	movf	(_os+10)& (0+255),w,b	;volatile
 43704  0121F0  0100               	movlb	0	; () banked
 43705  0121F2                     L91:
 43706  0121F2  2167               	addwfc	(??__motor_calculate_distance+3)& (0+255),w,b
 43707  0121F4  6F6C               	movwf	(__motor_calculate_distance@distance+3)& (0+255),b
 43708                           
 43709                           ;motor.c: 499: if(distance>config.full_circle_in_steps)
 43710  0121F6  5169               	movf	__motor_calculate_distance@distance& (0+255),w,b
 43711  0121F8  0101               	movlb	1	; () banked
 43712  0121FA  5D97               	subwf	_config& (0+255),w,b
 43713  0121FC  0100               	movlb	0	; () banked
 43714  0121FE  516A               	movf	(__motor_calculate_distance@distance+1)& (0+255),w,b
 43715  012200  0101               	movlb	1	; () banked
 43716  012202  5998               	subwfb	(_config+1)& (0+255),w,b
 43717  012204  0100               	movlb	0	; () banked
 43718  012206  516B               	movf	(__motor_calculate_distance@distance+2)& (0+255),w,b
 43719  012208  0101               	movlb	1	; () banked
 43720  01220A  5999               	subwfb	(_config+2)& (0+255),w,b
 43721  01220C  0100               	movlb	0	; () banked
 43722  01220E  516C               	movf	(__motor_calculate_distance@distance+3)& (0+255),w,b
 43723  012210  0101               	movlb	1	; () banked
 43724  012212  599A               	subwfb	(_config+3)& (0+255),w,b
 43725  012214  B0D8               	btfsc	status,0,c
 43726  012216  D00F               	goto	l2523
 43727                           
 43728                           ; BSR set to: 1
 43729                           ;motor.c: 500: {;motor.c: 502: distance += config.full_circle_in_steps;
 43730  012218  5197               	movf	_config& (0+255),w,b
 43731  01221A  0100               	movlb	0	; () banked
 43732  01221C  2769               	addwf	__motor_calculate_distance@distance& (0+255),f,b
 43733  01221E  0101               	movlb	1	; () banked
 43734  012220  5198               	movf	(_config+1)& (0+255),w,b
 43735  012222  0100               	movlb	0	; () banked
 43736  012224  236A               	addwfc	(__motor_calculate_distance@distance+1)& (0+255),f,b
 43737  012226  0101               	movlb	1	; () banked
 43738  012228  5199               	movf	(_config+2)& (0+255),w,b
 43739  01222A  0100               	movlb	0	; () banked
 43740  01222C  236B               	addwfc	(__motor_calculate_distance@distance+2)& (0+255),f,b
 43741  01222E  0101               	movlb	1	; () banked
 43742  012230  519A               	movf	(_config+3)& (0+255),w,b
 43743  012232  0100               	movlb	0	; () banked
 43744  012234  236C               	addwfc	(__motor_calculate_distance@distance+3)& (0+255),f,b
 43745  012236                     l2523:
 43746                           
 43747                           ;motor.c: 503: };motor.c: 504: };motor.c: 506: return distance;
 43748                           
 43749                           ; BSR set to: 0
 43750                           
 43751                           ; BSR set to: 0
 43752  012236  C069  F060         	movff	__motor_calculate_distance@distance,?__motor_calculate_distance
 43753  01223A  C06A  F061         	movff	__motor_calculate_distance@distance+1,?__motor_calculate_distance+1
 43754  01223E  C06B  F062         	movff	__motor_calculate_distance@distance+2,?__motor_calculate_distance+2
 43755  012242  C06C  F063         	movff	__motor_calculate_distance@distance+3,?__motor_calculate_distance+3
 43756  012246  0012               	return	
 43757  012248                     __end_of__motor_calculate_distance:
 43758                           	opt stack 0
 43759                           tosu	equ	0xFFF
 43760                           tosh	equ	0xFFE
 43761                           tosl	equ	0xFFD
 43762                           pclath	equ	0xFFA
 43763                           tblptru	equ	0xFF8
 43764                           tblptrh	equ	0xFF7
 43765                           tblptrl	equ	0xFF6
 43766                           tablat	equ	0xFF5
 43767                           prodh	equ	0xFF4
 43768                           prodl	equ	0xFF3
 43769                           intcon	equ	0xFF2
 43770                           indf0	equ	0xFEF
 43771                           postinc0	equ	0xFEE
 43772                           fsr0h	equ	0xFEA
 43773                           fsr0l	equ	0xFE9
 43774                           wreg	equ	0xFE8
 43775                           indf1	equ	0xFE7
 43776                           postinc1	equ	0xFE6
 43777                           postdec1	equ	0xFE5
 43778                           plusw1	equ	0xFE3
 43779                           fsr1h	equ	0xFE2
 43780                           fsr1l	equ	0xFE1
 43781                           indf2	equ	0xFDF
 43782                           postinc2	equ	0xFDE
 43783                           postdec2	equ	0xFDD
 43784                           plusw2	equ	0xFDB
 43785                           fsr2h	equ	0xFDA
 43786                           fsr2l	equ	0xFD9
 43787                           status	equ	0xFD8
 43788                           
 43789 ;; *************** function _motor_clear_command_cue *****************
 43790 ;; Defined at:
 43791 ;;		line 613 in file "motor.c"
 43792 ;; Parameters:    Size  Location     Type
 43793 ;;		None
 43794 ;; Auto vars:     Size  Location     Type
 43795 ;;		None
 43796 ;; Return value:  Size  Location     Type
 43797 ;;                  1    wreg      void 
 43798 ;; Registers used:
 43799 ;;		wreg, status,2
 43800 ;; Tracked objects:
 43801 ;;		On entry : 0/0
 43802 ;;		On exit  : 0/0
 43803 ;;		Unchanged: 0/0
 43804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43809 ;;Total ram usage:        0 bytes
 43810 ;; Hardware stack levels used:    1
 43811 ;; Hardware stack levels required when called:   10
 43812 ;; This function calls:
 43813 ;;		Nothing
 43814 ;; This function is called by:
 43815 ;;		__parse_command_short
 43816 ;; This function uses a non-reentrant model
 43817 ;;
 43818                           
 43819                           	psect	text178
 43820  015DB0                     __ptext178:
 43821                           	opt stack 0
 43822  015DB0                     _motor_clear_command_cue:
 43823                           	opt stack 17
 43824                           
 43825                           ;motor.c: 616: motor_cue_read_index = 0;
 43826                           
 43827                           ;incstack = 0
 43828  015DB0  0E00               	movlw	0
 43829  015DB2  0101               	movlb	1	; () banked
 43830  015DB4  6F4D               	movwf	_motor_cue_read_index& (0+255),b
 43831                           
 43832                           ;motor.c: 617: motor_cue_write_index = 0;
 43833  015DB6  0E00               	movlw	0
 43834  015DB8  6F4C               	movwf	_motor_cue_write_index& (0+255),b
 43835                           
 43836                           ; BSR set to: 1
 43837  015DBA  0012               	return		;funcret
 43838  015DBC                     __end_of_motor_clear_command_cue:
 43839                           	opt stack 0
 43840                           tosu	equ	0xFFF
 43841                           tosh	equ	0xFFE
 43842                           tosl	equ	0xFFD
 43843                           pclath	equ	0xFFA
 43844                           tblptru	equ	0xFF8
 43845                           tblptrh	equ	0xFF7
 43846                           tblptrl	equ	0xFF6
 43847                           tablat	equ	0xFF5
 43848                           prodh	equ	0xFF4
 43849                           prodl	equ	0xFF3
 43850                           intcon	equ	0xFF2
 43851                           indf0	equ	0xFEF
 43852                           postinc0	equ	0xFEE
 43853                           fsr0h	equ	0xFEA
 43854                           fsr0l	equ	0xFE9
 43855                           wreg	equ	0xFE8
 43856                           indf1	equ	0xFE7
 43857                           postinc1	equ	0xFE6
 43858                           postdec1	equ	0xFE5
 43859                           plusw1	equ	0xFE3
 43860                           fsr1h	equ	0xFE2
 43861                           fsr1l	equ	0xFE1
 43862                           indf2	equ	0xFDF
 43863                           postinc2	equ	0xFDE
 43864                           postdec2	equ	0xFDD
 43865                           plusw2	equ	0xFDB
 43866                           fsr2h	equ	0xFDA
 43867                           fsr2l	equ	0xFD9
 43868                           status	equ	0xFD8
 43869                           
 43870 ;; *************** function __parse_command_long *****************
 43871 ;; Defined at:
 43872 ;;		line 437 in file "api.c"
 43873 ;; Parameters:    Size  Location     Type
 43874 ;;  data            2   64[BANK0 ] PTR unsigned char 
 43875 ;;		 -> ReceivedDataBuffer(64), 
 43876 ;;  out_buffer      2   66[BANK0 ] PTR unsigned char 
 43877 ;;		 -> ToSendDataBuffer(64), 
 43878 ;;  out_idx_ptr     2   68[BANK0 ] PTR unsigned char 
 43879 ;;		 -> api_parse@out_idx(1), 
 43880 ;; Auto vars:     Size  Location     Type
 43881 ;;  length          1   70[BANK0 ] unsigned char 
 43882 ;; Return value:  Size  Location     Type
 43883 ;;                  1    wreg      unsigned char 
 43884 ;; Registers used:
 43885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43886 ;; Tracked objects:
 43887 ;;		On entry : 0/0
 43888 ;;		On exit  : 0/0
 43889 ;;		Unchanged: 0/0
 43890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43891 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43894 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43895 ;;Total ram usage:        7 bytes
 43896 ;; Hardware stack levels used:    1
 43897 ;; Hardware stack levels required when called:   15
 43898 ;; This function calls:
 43899 ;;		__parse_jump_steps
 43900 ;;		__parse_jump_steps_with_overshoot
 43901 ;;		__parse_set_manual_speed
 43902 ;; This function is called by:
 43903 ;;		_api_parse
 43904 ;; This function uses a non-reentrant model
 43905 ;;
 43906                           
 43907                           	psect	text179
 43908  013CFE                     __ptext179:
 43909                           	opt stack 0
 43910  013CFE                     __parse_command_long:
 43911                           	opt stack 13
 43912                           
 43913                           ;api.c: 439: uint8_t length = 65;
 43914                           
 43915                           ; BSR set to: 1
 43916                           ;incstack = 0
 43917  013CFE  0E41               	movlw	65
 43918  013D00  0100               	movlb	0	; () banked
 43919  013D02  6FA6               	movwf	__parse_command_long@length& (0+255),b
 43920                           
 43921                           ;api.c: 441: switch(data[0])
 43922  013D04  D02F               	goto	l2340
 43923  013D06                     
 43924                           ; BSR set to: 0
 43925                           ;api.c: 448: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 43926                           
 43927                           ; BSR set to: 0
 43928  013D06  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps@data
 43929  013D0A  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 43930  013D0E  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 43931  013D12  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 43932  013D16  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 43933  013D1A  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 43934  013D1E  ECC1  F07D         	call	__parse_jump_steps	;wreg free
 43935  013D22  D01D               	goto	L67
 43936  013D24                     
 43937                           ; BSR set to: 0
 43938                           ;api.c: 452: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 43939                           
 43940                           ; BSR set to: 0
 43941  013D24  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 43942  013D28  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 43943  013D2C  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 43944  013D30  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 43945  013D34  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 43946  013D38  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 43947  013D3C  EC18  F07D         	call	__parse_jump_steps_with_overshoot	;wreg free
 43948  013D40  D00E               	goto	L67
 43949  013D42                     
 43950                           ; BSR set to: 0
 43951                           ;api.c: 456: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 43952                           
 43953                           ; BSR set to: 0
 43954  013D42  C0A0  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 43955  013D46  C0A1  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 43956  013D4A  C0A2  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 43957  013D4E  C0A3  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 43958  013D52  C0A4  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 43959  013D56  C0A5  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 43960  013D5A  EC47  F09F         	call	__parse_set_manual_speed	;wreg free
 43961  013D5E                     L67:
 43962  013D5E  0100               	movlb	0	; () banked
 43963  013D60  6FA6               	movwf	__parse_command_long@length& (0+255),b
 43964                           
 43965                           ; BSR set to: 0
 43966                           ;api.c: 458: }
 43967                           
 43968                           ;api.c: 457: break;
 43969  013D62  D00E               	goto	l2342
 43970  013D64                     l2340:
 43971                           
 43972                           ; BSR set to: 0
 43973                           
 43974                           ; BSR set to: 0
 43975  013D64  C0A0  FFD9         	movff	__parse_command_long@data,fsr2l
 43976  013D68  C0A1  FFDA         	movff	__parse_command_long@data+1,fsr2h
 43977  013D6C  50DF               	movf	indf2,w,c
 43978                           
 43979                           ; Switch size 1, requested type "space"
 43980                           ; Number of cases is 3, Range of values is 144 to 146
 43981                           ; switch strategies available:
 43982                           ; Name         Instructions Cycles
 43983                           ; simple_byte           10     6 (average)
 43984                           ;	Chosen strategy is simple_byte
 43985  013D6E  0A90               	xorlw	144	; case 144
 43986  013D70  B4D8               	btfsc	status,2,c
 43987  013D72  D7C9               	goto	l2341
 43988  013D74  0A01               	xorlw	1	; case 145
 43989  013D76  B4D8               	btfsc	status,2,c
 43990  013D78  D7D5               	goto	l2343
 43991  013D7A  0A03               	xorlw	3	; case 146
 43992  013D7C  B4D8               	btfsc	status,2,c
 43993  013D7E  D7E1               	goto	l2344
 43994  013D80                     l2342:
 43995                           
 43996                           ; BSR set to: 0
 43997                           ;api.c: 462: return length;
 43998                           
 43999                           ; BSR set to: 0
 44000  013D80  51A6               	movf	__parse_command_long@length& (0+255),w,b
 44001  013D82  0012               	return	
 44002  013D84                     __end_of__parse_command_long:
 44003                           	opt stack 0
 44004                           tosu	equ	0xFFF
 44005                           tosh	equ	0xFFE
 44006                           tosl	equ	0xFFD
 44007                           pclath	equ	0xFFA
 44008                           tblptru	equ	0xFF8
 44009                           tblptrh	equ	0xFF7
 44010                           tblptrl	equ	0xFF6
 44011                           tablat	equ	0xFF5
 44012                           prodh	equ	0xFF4
 44013                           prodl	equ	0xFF3
 44014                           intcon	equ	0xFF2
 44015                           indf0	equ	0xFEF
 44016                           postinc0	equ	0xFEE
 44017                           fsr0h	equ	0xFEA
 44018                           fsr0l	equ	0xFE9
 44019                           wreg	equ	0xFE8
 44020                           indf1	equ	0xFE7
 44021                           postinc1	equ	0xFE6
 44022                           postdec1	equ	0xFE5
 44023                           plusw1	equ	0xFE3
 44024                           fsr1h	equ	0xFE2
 44025                           fsr1l	equ	0xFE1
 44026                           indf2	equ	0xFDF
 44027                           postinc2	equ	0xFDE
 44028                           postdec2	equ	0xFDD
 44029                           plusw2	equ	0xFDB
 44030                           fsr2h	equ	0xFDA
 44031                           fsr2l	equ	0xFD9
 44032                           status	equ	0xFD8
 44033                           
 44034 ;; *************** function __parse_set_manual_speed *****************
 44035 ;; Defined at:
 44036 ;;		line 557 in file "api.c"
 44037 ;; Parameters:    Size  Location     Type
 44038 ;;  data            2    4[BANK0 ] PTR unsigned char 
 44039 ;;		 -> ReceivedDataBuffer(64), 
 44040 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 44041 ;;		 -> ToSendDataBuffer(64), 
 44042 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 44043 ;;		 -> api_parse@out_idx(1), 
 44044 ;; Auto vars:     Size  Location     Type
 44045 ;;  new_speed       2   11[BANK0 ] unsigned int 
 44046 ;; Return value:  Size  Location     Type
 44047 ;;                  1    wreg      unsigned char 
 44048 ;; Registers used:
 44049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44050 ;; Tracked objects:
 44051 ;;		On entry : 0/0
 44052 ;;		On exit  : 0/0
 44053 ;;		Unchanged: 0/0
 44054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44057 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44058 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44059 ;;Total ram usage:        9 bytes
 44060 ;; Hardware stack levels used:    1
 44061 ;; Hardware stack levels required when called:   12
 44062 ;; This function calls:
 44063 ;;		_motor_set_manual_speed
 44064 ;; This function is called by:
 44065 ;;		__parse_command_long
 44066 ;; This function uses a non-reentrant model
 44067 ;;
 44068                           
 44069                           	psect	text180
 44070  013E8E                     __ptext180:
 44071                           	opt stack 0
 44072  013E8E                     __parse_set_manual_speed:
 44073                           	opt stack 15
 44074                           
 44075                           ;api.c: 561: uint16_t new_speed;;api.c: 563: new_speed = data[1];
 44076                           
 44077                           ; BSR set to: 0
 44078                           ;incstack = 0
 44079  013E8E  0100               	movlb	0	; () banked
 44080  013E90  EE20 F001          	lfsr	2,1
 44081  013E94  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44082  013E96  26D9               	addwf	fsr2l,f,c
 44083  013E98  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44084  013E9A  22DA               	addwfc	fsr2h,f,c
 44085  013E9C  50DF               	movf	indf2,w,c
 44086  013E9E  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 44087  013EA0  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44088  013EA2  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 44089  013EA4  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44090                           
 44091                           ; BSR set to: 0
 44092                           ;api.c: 564: new_speed <<= 8;
 44093  013EA6  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 44094  013EA8  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44095  013EAA  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 44096                           
 44097                           ; BSR set to: 0
 44098                           ;api.c: 565: new_speed |= data[2];
 44099  013EAC  EE20 F002          	lfsr	2,2
 44100  013EB0  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44101  013EB2  26D9               	addwf	fsr2l,f,c
 44102  013EB4  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44103  013EB6  22DA               	addwfc	fsr2h,f,c
 44104  013EB8  50DF               	movf	indf2,w,c
 44105  013EBA  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 44106  013EBC  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44107  013EBE  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 44108                           
 44109                           ; BSR set to: 0
 44110                           ;api.c: 567: motor_set_manual_speed(new_speed);
 44111  013EC0  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 44112  013EC4  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 44113  013EC8  ECB1  F0A8         	call	_motor_set_manual_speed	;wreg free
 44114                           
 44115                           ;api.c: 570: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 44116  013ECC  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44117  013ED0  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44118  013ED4  50DF               	movf	indf2,w,c
 44119  013ED6  B4D8               	btfsc	status,2,c
 44120  013ED8  D01A               	goto	l2360
 44121  013EDA  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44122  013EDE  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44123  013EE2  0E3F               	movlw	63
 44124  013EE4  60DF               	cpfslt	indf2,c
 44125  013EE6  D013               	goto	l2360
 44126                           
 44127                           ;api.c: 571: {;api.c: 572: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 44128  013EE8  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44129  013EEC  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44130  013EF0  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 44131  013EF4  0E01               	movlw	1
 44132  013EF6  26DF               	addwf	indf2,f,c
 44133  013EF8  0100               	movlb	0	; () banked
 44134  013EFA  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44135  013EFC  0D01               	mullw	1
 44136  013EFE  50F3               	movf	prodl,w,c
 44137  013F00  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 44138  013F02  6ED9               	movwf	fsr2l,c
 44139  013F04  50F4               	movf	prodh,w,c
 44140  013F06  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 44141  013F08  6EDA               	movwf	fsr2h,c
 44142  013F0A  0E92               	movlw	146
 44143  013F0C  6EDF               	movwf	indf2,c
 44144  013F0E                     l2360:
 44145                           
 44146                           ;api.c: 573: };api.c: 575: return 3;
 44147                           
 44148                           ; BSR set to: 0
 44149  013F0E  0E03               	movlw	3
 44150  013F10  0012               	return	
 44151  013F12                     __end_of__parse_set_manual_speed:
 44152                           	opt stack 0
 44153                           tosu	equ	0xFFF
 44154                           tosh	equ	0xFFE
 44155                           tosl	equ	0xFFD
 44156                           pclath	equ	0xFFA
 44157                           tblptru	equ	0xFF8
 44158                           tblptrh	equ	0xFF7
 44159                           tblptrl	equ	0xFF6
 44160                           tablat	equ	0xFF5
 44161                           prodh	equ	0xFF4
 44162                           prodl	equ	0xFF3
 44163                           intcon	equ	0xFF2
 44164                           indf0	equ	0xFEF
 44165                           postinc0	equ	0xFEE
 44166                           fsr0h	equ	0xFEA
 44167                           fsr0l	equ	0xFE9
 44168                           wreg	equ	0xFE8
 44169                           indf1	equ	0xFE7
 44170                           postinc1	equ	0xFE6
 44171                           postdec1	equ	0xFE5
 44172                           plusw1	equ	0xFE3
 44173                           fsr1h	equ	0xFE2
 44174                           fsr1l	equ	0xFE1
 44175                           indf2	equ	0xFDF
 44176                           postinc2	equ	0xFDE
 44177                           postdec2	equ	0xFDD
 44178                           plusw2	equ	0xFDB
 44179                           fsr2h	equ	0xFDA
 44180                           fsr2l	equ	0xFD9
 44181                           status	equ	0xFD8
 44182                           
 44183 ;; *************** function _motor_set_manual_speed *****************
 44184 ;; Defined at:
 44185 ;;		line 882 in file "motor.c"
 44186 ;; Parameters:    Size  Location     Type
 44187 ;;  new_speed       2    2[BANK0 ] unsigned int 
 44188 ;; Auto vars:     Size  Location     Type
 44189 ;;		None
 44190 ;; Return value:  Size  Location     Type
 44191 ;;                  1    wreg      void 
 44192 ;; Registers used:
 44193 ;;		wreg, status,2, status,0, cstack
 44194 ;; Tracked objects:
 44195 ;;		On entry : 0/0
 44196 ;;		On exit  : 0/0
 44197 ;;		Unchanged: 0/0
 44198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44202 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44203 ;;Total ram usage:        2 bytes
 44204 ;; Hardware stack levels used:    1
 44205 ;; Hardware stack levels required when called:   11
 44206 ;; This function calls:
 44207 ;;		_motor_change_speed
 44208 ;; This function is called by:
 44209 ;;		__parse_set_manual_speed
 44210 ;;		_motor_increase_manual_speed
 44211 ;;		_motor_decrease_manual_speed
 44212 ;; This function uses a non-reentrant model
 44213 ;;
 44214                           
 44215                           	psect	text181
 44216  015162                     __ptext181:
 44217                           	opt stack 0
 44218  015162                     _motor_set_manual_speed:
 44219                           	opt stack 17
 44220                           
 44221                           ;motor.c: 884: if(new_speed>config.maximum_speed_manual)
 44222                           
 44223                           ;incstack = 0
 44224  015162  0100               	movlb	0	; () banked
 44225  015164  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 44226  015166  0101               	movlb	1	; () banked
 44227  015168  5DAA               	subwf	(_config+19)& (0+255),w,b
 44228  01516A  0100               	movlb	0	; () banked
 44229  01516C  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44230  01516E  0101               	movlb	1	; () banked
 44231  015170  59AB               	subwfb	(_config+20)& (0+255),w,b
 44232  015172  B0D8               	btfsc	status,0,c
 44233  015174  D005               	goto	l2606
 44234                           
 44235                           ; BSR set to: 1
 44236                           ;motor.c: 885: {;motor.c: 886: os.manual_speed = config.maximum_speed_manual;
 44237  015176  C1AA  F18A         	movff	_config+19,_os+36	;volatile
 44238  01517A  C1AB  F18B         	movff	_config+20,_os+37	;volatile
 44239                           
 44240                           ;motor.c: 887: }
 44241  01517E  D012               	goto	l2609
 44242  015180                     l2606:
 44243                           
 44244                           ; BSR set to: 1
 44245                           ;motor.c: 888: else if(new_speed<config.minimum_speed)
 44246                           
 44247                           ; BSR set to: 1
 44248  015180  51A0               	movf	(_config+9)& (0+255),w,b
 44249  015182  0100               	movlb	0	; () banked
 44250  015184  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 44251  015186  0101               	movlb	1	; () banked
 44252  015188  51A1               	movf	(_config+10)& (0+255),w,b
 44253  01518A  0100               	movlb	0	; () banked
 44254  01518C  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44255  01518E  B0D8               	btfsc	status,0,c
 44256  015190  D005               	goto	l2608
 44257                           
 44258                           ; BSR set to: 0
 44259                           ;motor.c: 889: {;motor.c: 890: os.manual_speed = config.minimum_speed;
 44260  015192  C1A0  F18A         	movff	_config+9,_os+36	;volatile
 44261  015196  C1A1  F18B         	movff	_config+10,_os+37	;volatile
 44262                           
 44263                           ;motor.c: 891: }
 44264  01519A  D004               	goto	l2609
 44265  01519C                     l2608:
 44266                           
 44267                           ; BSR set to: 0
 44268                           ;motor.c: 892: else;motor.c: 893: {;motor.c: 894: os.manual_speed = new_speed;
 44269  01519C  C062  F18A         	movff	motor_set_manual_speed@new_speed,_os+36	;volatile
 44270  0151A0  C063  F18B         	movff	motor_set_manual_speed@new_speed+1,_os+37	;volatile
 44271  0151A4                     l2609:
 44272                           
 44273                           ;motor.c: 895: };motor.c: 896: motor_change_speed(new_speed);
 44274                           
 44275                           ; BSR set to: 0
 44276                           
 44277                           ; BSR set to: 0
 44278  0151A4  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 44279  0151A8  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 44280  0151AC  ECFD  F0AE         	call	_motor_change_speed	;wreg free
 44281  0151B0  0012               	return		;funcret
 44282  0151B2                     __end_of_motor_set_manual_speed:
 44283                           	opt stack 0
 44284                           tosu	equ	0xFFF
 44285                           tosh	equ	0xFFE
 44286                           tosl	equ	0xFFD
 44287                           pclath	equ	0xFFA
 44288                           tblptru	equ	0xFF8
 44289                           tblptrh	equ	0xFF7
 44290                           tblptrl	equ	0xFF6
 44291                           tablat	equ	0xFF5
 44292                           prodh	equ	0xFF4
 44293                           prodl	equ	0xFF3
 44294                           intcon	equ	0xFF2
 44295                           indf0	equ	0xFEF
 44296                           postinc0	equ	0xFEE
 44297                           fsr0h	equ	0xFEA
 44298                           fsr0l	equ	0xFE9
 44299                           wreg	equ	0xFE8
 44300                           indf1	equ	0xFE7
 44301                           postinc1	equ	0xFE6
 44302                           postdec1	equ	0xFE5
 44303                           plusw1	equ	0xFE3
 44304                           fsr1h	equ	0xFE2
 44305                           fsr1l	equ	0xFE1
 44306                           indf2	equ	0xFDF
 44307                           postinc2	equ	0xFDE
 44308                           postdec2	equ	0xFDD
 44309                           plusw2	equ	0xFDB
 44310                           fsr2h	equ	0xFDA
 44311                           fsr2l	equ	0xFD9
 44312                           status	equ	0xFD8
 44313                           
 44314 ;; *************** function _motor_change_speed *****************
 44315 ;; Defined at:
 44316 ;;		line 899 in file "motor.c"
 44317 ;; Parameters:    Size  Location     Type
 44318 ;;  new_speed       2    0[BANK0 ] unsigned int 
 44319 ;; Auto vars:     Size  Location     Type
 44320 ;;		None
 44321 ;; Return value:  Size  Location     Type
 44322 ;;                  1    wreg      void 
 44323 ;; Registers used:
 44324 ;;		None
 44325 ;; Tracked objects:
 44326 ;;		On entry : 0/0
 44327 ;;		On exit  : 0/0
 44328 ;;		Unchanged: 0/0
 44329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44330 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44334 ;;Total ram usage:        2 bytes
 44335 ;; Hardware stack levels used:    1
 44336 ;; Hardware stack levels required when called:   10
 44337 ;; This function calls:
 44338 ;;		Nothing
 44339 ;; This function is called by:
 44340 ;;		_motor_set_manual_speed
 44341 ;;		_encoder_statemachine
 44342 ;; This function uses a non-reentrant model
 44343 ;;
 44344                           
 44345                           	psect	text182
 44346  015DFA                     __ptext182:
 44347                           	opt stack 0
 44348  015DFA                     _motor_change_speed:
 44349                           	opt stack 17
 44350                           
 44351                           ;motor.c: 901: motor_maximum_speed = new_speed;
 44352                           
 44353                           ;incstack = 0
 44354  015DFA  C060  F135         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 44355  015DFE  C061  F136         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 44356  015E02  0012               	return		;funcret
 44357  015E04                     __end_of_motor_change_speed:
 44358                           	opt stack 0
 44359                           tosu	equ	0xFFF
 44360                           tosh	equ	0xFFE
 44361                           tosl	equ	0xFFD
 44362                           pclath	equ	0xFFA
 44363                           tblptru	equ	0xFF8
 44364                           tblptrh	equ	0xFF7
 44365                           tblptrl	equ	0xFF6
 44366                           tablat	equ	0xFF5
 44367                           prodh	equ	0xFF4
 44368                           prodl	equ	0xFF3
 44369                           intcon	equ	0xFF2
 44370                           indf0	equ	0xFEF
 44371                           postinc0	equ	0xFEE
 44372                           fsr0h	equ	0xFEA
 44373                           fsr0l	equ	0xFE9
 44374                           wreg	equ	0xFE8
 44375                           indf1	equ	0xFE7
 44376                           postinc1	equ	0xFE6
 44377                           postdec1	equ	0xFE5
 44378                           plusw1	equ	0xFE3
 44379                           fsr1h	equ	0xFE2
 44380                           fsr1l	equ	0xFE1
 44381                           indf2	equ	0xFDF
 44382                           postinc2	equ	0xFDE
 44383                           postdec2	equ	0xFDD
 44384                           plusw2	equ	0xFDB
 44385                           fsr2h	equ	0xFDA
 44386                           fsr2l	equ	0xFD9
 44387                           status	equ	0xFD8
 44388                           
 44389 ;; *************** function __parse_jump_steps_with_overshoot *****************
 44390 ;; Defined at:
 44391 ;;		line 523 in file "api.c"
 44392 ;; Parameters:    Size  Location     Type
 44393 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44394 ;;		 -> ReceivedDataBuffer(64), 
 44395 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44396 ;;		 -> ToSendDataBuffer(64), 
 44397 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44398 ;;		 -> api_parse@out_idx(1), 
 44399 ;; Auto vars:     Size  Location     Type
 44400 ;;  number_of_st    4   60[BANK0 ] long 
 44401 ;;  return_value    1   59[BANK0 ] unsigned char 
 44402 ;; Return value:  Size  Location     Type
 44403 ;;                  1    wreg      unsigned char 
 44404 ;; Registers used:
 44405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44406 ;; Tracked objects:
 44407 ;;		On entry : 0/0
 44408 ;;		On exit  : 0/0
 44409 ;;		Unchanged: 0/0
 44410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44411 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44412 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44414 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44415 ;;Total ram usage:       12 bytes
 44416 ;; Hardware stack levels used:    1
 44417 ;; Hardware stack levels required when called:   14
 44418 ;; This function calls:
 44419 ;;		_motor_move_steps
 44420 ;; This function is called by:
 44421 ;;		__parse_command_long
 44422 ;; This function uses a non-reentrant model
 44423 ;;
 44424                           
 44425                           	psect	text183
 44426  00FA30                     __ptext183:
 44427                           	opt stack 0
 44428  00FA30                     __parse_jump_steps_with_overshoot:
 44429                           	opt stack 13
 44430                           
 44431                           ;api.c: 526: uint8_t return_value;;api.c: 527: int32_t number_of_steps;;api.c: 529: numb
      +                          er_of_steps = data[1];
 44432                           
 44433                           ;incstack = 0
 44434  00FA30  0100               	movlb	0	; () banked
 44435  00FA32  EE20 F001          	lfsr	2,1
 44436  00FA36  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44437  00FA38  26D9               	addwf	fsr2l,f,c
 44438  00FA3A  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44439  00FA3C  22DA               	addwfc	fsr2h,f,c
 44440  00FA3E  50DF               	movf	indf2,w,c
 44441  00FA40  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44442  00FA42  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44443  00FA44  6F9C               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44444  00FA46  6B9D               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 44445  00FA48  6B9E               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 44446  00FA4A  6B9F               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 44447                           
 44448                           ; BSR set to: 0
 44449                           ;api.c: 530: number_of_steps <<= 8;
 44450  00FA4C  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44451  00FA50  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44452  00FA54  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44453  00FA58  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44454                           
 44455                           ; BSR set to: 0
 44456                           ;api.c: 531: number_of_steps |= data[2];
 44457  00FA5A  EE20 F002          	lfsr	2,2
 44458  00FA5E  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44459  00FA60  26D9               	addwf	fsr2l,f,c
 44460  00FA62  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44461  00FA64  22DA               	addwfc	fsr2h,f,c
 44462  00FA66  50DF               	movf	indf2,w,c
 44463  00FA68  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44464  00FA6A  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44465  00FA6C  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44466                           
 44467                           ;api.c: 532: number_of_steps <<= 8;
 44468  00FA6E  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44469  00FA72  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44470  00FA76  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44471  00FA7A  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44472                           
 44473                           ; BSR set to: 0
 44474                           ;api.c: 533: number_of_steps |= data[3];
 44475  00FA7C  EE20 F003          	lfsr	2,3
 44476  00FA80  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44477  00FA82  26D9               	addwf	fsr2l,f,c
 44478  00FA84  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44479  00FA86  22DA               	addwfc	fsr2h,f,c
 44480  00FA88  50DF               	movf	indf2,w,c
 44481  00FA8A  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44482  00FA8C  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44483  00FA8E  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44484                           
 44485                           ; BSR set to: 0
 44486                           ;api.c: 534: number_of_steps <<= 8;
 44487  00FA90  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44488  00FA94  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44489  00FA98  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44490  00FA9C  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44491                           
 44492                           ;api.c: 535: number_of_steps |= data[4];
 44493  00FA9E  EE20 F004          	lfsr	2,4
 44494  00FAA2  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44495  00FAA4  26D9               	addwf	fsr2l,f,c
 44496  00FAA6  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44497  00FAA8  22DA               	addwfc	fsr2h,f,c
 44498  00FAAA  50DF               	movf	indf2,w,c
 44499  00FAAC  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44500  00FAAE  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44501  00FAB0  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44502                           
 44503                           ; BSR set to: 0
 44504                           ;api.c: 537: if(number_of_steps>0)
 44505  00FAB2  BF9F               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 44506  00FAB4  D018               	goto	l2354
 44507  00FAB6  519F               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 44508  00FAB8  119E               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 44509  00FABA  119D               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 44510  00FABC  E103               	bnz	u14260
 44511  00FABE  059C               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 44512  00FAC0  A0D8               	btfss	status,0,c
 44513  00FAC2  D011               	goto	l2354
 44514  00FAC4                     u14260:
 44515                           
 44516                           ; BSR set to: 0
 44517                           ;api.c: 538: {;api.c: 539: motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t) number_of_ste
      +                          ps, 0xFFFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 44518  00FAC4  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44519  00FAC8  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44520  00FACC  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44521  00FAD0  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44522  00FAD4  0EFF               	movlw	255
 44523  00FAD6  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44524  00FAD8  6990               	setf	motor_move_steps@speed& (0+255),b
 44525  00FADA  0E00               	movlw	0
 44526  00FADC  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44527  00FADE  0E01               	movlw	1
 44528  00FAE0  ECAA  F0AC         	call	_motor_move_steps
 44529                           
 44530                           ;api.c: 540: }
 44531  00FAE4  D019               	goto	l2355
 44532  00FAE6                     l2354:
 44533                           
 44534                           ;api.c: 541: else;api.c: 542: {;api.c: 543: number_of_steps = -number_of_steps;
 44535  00FAE6  0100               	movlb	0	; () banked
 44536  00FAE8  1F9F               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44537  00FAEA  1F9E               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44538  00FAEC  1F9D               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44539  00FAEE  6D9C               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44540  00FAF0  0E00               	movlw	0
 44541  00FAF2  239D               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44542  00FAF4  239E               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44543  00FAF6  239F               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44544                           
 44545                           ; BSR set to: 0
 44546                           ;api.c: 544: motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_steps, 0xFFFF, M
      +                          OTOR_OVERSHOOT_WITH_OVERSHOOT);
 44547  00FAF8  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44548  00FAFC  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44549  00FB00  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44550  00FB04  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44551  00FB08  0EFF               	movlw	255
 44552  00FB0A  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44553  00FB0C  6990               	setf	motor_move_steps@speed& (0+255),b
 44554  00FB0E  0E00               	movlw	0
 44555  00FB10  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44556  00FB12  0EFF               	movlw	255
 44557  00FB14  ECAA  F0AC         	call	_motor_move_steps
 44558  00FB18                     l2355:
 44559                           
 44560                           ;api.c: 545: };api.c: 548: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 44561  00FB18  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44562  00FB1C  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44563  00FB20  50DF               	movf	indf2,w,c
 44564  00FB22  B4D8               	btfsc	status,2,c
 44565  00FB24  D02C               	goto	l2356
 44566  00FB26  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44567  00FB2A  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44568  00FB2E  0E3E               	movlw	62
 44569  00FB30  60DF               	cpfslt	indf2,c
 44570  00FB32  D025               	goto	l2356
 44571                           
 44572                           ;api.c: 549: {;api.c: 550: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 44573  00FB34  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44574  00FB38  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44575  00FB3C  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44576  00FB40  0E01               	movlw	1
 44577  00FB42  26DF               	addwf	indf2,f,c
 44578  00FB44  0100               	movlb	0	; () banked
 44579  00FB46  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44580  00FB48  0D01               	mullw	1
 44581  00FB4A  50F3               	movf	prodl,w,c
 44582  00FB4C  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44583  00FB4E  6ED9               	movwf	fsr2l,c
 44584  00FB50  50F4               	movf	prodh,w,c
 44585  00FB52  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44586  00FB54  6EDA               	movwf	fsr2h,c
 44587  00FB56  0E91               	movlw	145
 44588  00FB58  6EDF               	movwf	indf2,c
 44589                           
 44590                           ;api.c: 551: out_buffer[(*out_idx_ptr)++] = return_value;
 44591  00FB5A  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44592  00FB5E  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44593  00FB62  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44594  00FB66  0E01               	movlw	1
 44595  00FB68  26DF               	addwf	indf2,f,c
 44596  00FB6A  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44597  00FB6C  0D01               	mullw	1
 44598  00FB6E  50F3               	movf	prodl,w,c
 44599  00FB70  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44600  00FB72  6ED9               	movwf	fsr2l,c
 44601  00FB74  50F4               	movf	prodh,w,c
 44602  00FB76  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44603  00FB78  6EDA               	movwf	fsr2h,c
 44604  00FB7A  C09B  FFDF         	movff	__parse_jump_steps_with_overshoot@return_value,indf2
 44605  00FB7E                     l2356:
 44606                           
 44607                           ;api.c: 552: };api.c: 554: return 5;
 44608                           
 44609                           ; BSR set to: 0
 44610  00FB7E  0E05               	movlw	5
 44611  00FB80  0012               	return	
 44612  00FB82                     __end_of__parse_jump_steps_with_overshoot:
 44613                           	opt stack 0
 44614                           tosu	equ	0xFFF
 44615                           tosh	equ	0xFFE
 44616                           tosl	equ	0xFFD
 44617                           pclath	equ	0xFFA
 44618                           tblptru	equ	0xFF8
 44619                           tblptrh	equ	0xFF7
 44620                           tblptrl	equ	0xFF6
 44621                           tablat	equ	0xFF5
 44622                           prodh	equ	0xFF4
 44623                           prodl	equ	0xFF3
 44624                           intcon	equ	0xFF2
 44625                           indf0	equ	0xFEF
 44626                           postinc0	equ	0xFEE
 44627                           fsr0h	equ	0xFEA
 44628                           fsr0l	equ	0xFE9
 44629                           wreg	equ	0xFE8
 44630                           indf1	equ	0xFE7
 44631                           postinc1	equ	0xFE6
 44632                           postdec1	equ	0xFE5
 44633                           plusw1	equ	0xFE3
 44634                           fsr1h	equ	0xFE2
 44635                           fsr1l	equ	0xFE1
 44636                           indf2	equ	0xFDF
 44637                           postinc2	equ	0xFDE
 44638                           postdec2	equ	0xFDD
 44639                           plusw2	equ	0xFDB
 44640                           fsr2h	equ	0xFDA
 44641                           fsr2l	equ	0xFD9
 44642                           status	equ	0xFD8
 44643                           
 44644 ;; *************** function __parse_jump_steps *****************
 44645 ;; Defined at:
 44646 ;;		line 488 in file "api.c"
 44647 ;; Parameters:    Size  Location     Type
 44648 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44649 ;;		 -> ReceivedDataBuffer(64), 
 44650 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44651 ;;		 -> ToSendDataBuffer(64), 
 44652 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44653 ;;		 -> api_parse@out_idx(1), 
 44654 ;; Auto vars:     Size  Location     Type
 44655 ;;  number_of_st    4   60[BANK0 ] long 
 44656 ;;  return_value    1   59[BANK0 ] unsigned char 
 44657 ;; Return value:  Size  Location     Type
 44658 ;;                  1    wreg      unsigned char 
 44659 ;; Registers used:
 44660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44661 ;; Tracked objects:
 44662 ;;		On entry : 0/0
 44663 ;;		On exit  : 0/0
 44664 ;;		Unchanged: 0/0
 44665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44666 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44667 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44668 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44669 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44670 ;;Total ram usage:       12 bytes
 44671 ;; Hardware stack levels used:    1
 44672 ;; Hardware stack levels required when called:   14
 44673 ;; This function calls:
 44674 ;;		_motor_move_steps
 44675 ;; This function is called by:
 44676 ;;		__parse_command_long
 44677 ;; This function uses a non-reentrant model
 44678 ;;
 44679                           
 44680                           	psect	text184
 44681  00FB82                     __ptext184:
 44682                           	opt stack 0
 44683  00FB82                     __parse_jump_steps:
 44684                           	opt stack 13
 44685                           
 44686                           ;api.c: 492: uint8_t return_value;;api.c: 493: int32_t number_of_steps;;api.c: 495: numb
      +                          er_of_steps = data[1];
 44687                           
 44688                           ;incstack = 0
 44689  00FB82  0100               	movlb	0	; () banked
 44690  00FB84  EE20 F001          	lfsr	2,1
 44691  00FB88  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44692  00FB8A  26D9               	addwf	fsr2l,f,c
 44693  00FB8C  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44694  00FB8E  22DA               	addwfc	fsr2h,f,c
 44695  00FB90  50DF               	movf	indf2,w,c
 44696  00FB92  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44697  00FB94  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44698  00FB96  6F9C               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 44699  00FB98  6B9D               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 44700  00FB9A  6B9E               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 44701  00FB9C  6B9F               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 44702                           
 44703                           ; BSR set to: 0
 44704                           ;api.c: 496: number_of_steps <<= 8;
 44705  00FB9E  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44706  00FBA2  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44707  00FBA6  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44708  00FBAA  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44709                           
 44710                           ; BSR set to: 0
 44711                           ;api.c: 497: number_of_steps |= data[2];
 44712  00FBAC  EE20 F002          	lfsr	2,2
 44713  00FBB0  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44714  00FBB2  26D9               	addwf	fsr2l,f,c
 44715  00FBB4  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44716  00FBB6  22DA               	addwfc	fsr2h,f,c
 44717  00FBB8  50DF               	movf	indf2,w,c
 44718  00FBBA  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44719  00FBBC  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44720  00FBBE  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44721                           
 44722                           ;api.c: 498: number_of_steps <<= 8;
 44723  00FBC0  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44724  00FBC4  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44725  00FBC8  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44726  00FBCC  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44727                           
 44728                           ; BSR set to: 0
 44729                           ;api.c: 499: number_of_steps |= data[3];
 44730  00FBCE  EE20 F003          	lfsr	2,3
 44731  00FBD2  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44732  00FBD4  26D9               	addwf	fsr2l,f,c
 44733  00FBD6  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44734  00FBD8  22DA               	addwfc	fsr2h,f,c
 44735  00FBDA  50DF               	movf	indf2,w,c
 44736  00FBDC  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44737  00FBDE  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44738  00FBE0  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44739                           
 44740                           ; BSR set to: 0
 44741                           ;api.c: 500: number_of_steps <<= 8;
 44742  00FBE2  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44743  00FBE6  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44744  00FBEA  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44745  00FBEE  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44746                           
 44747                           ;api.c: 501: number_of_steps |= data[4];
 44748  00FBF0  EE20 F004          	lfsr	2,4
 44749  00FBF4  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44750  00FBF6  26D9               	addwf	fsr2l,f,c
 44751  00FBF8  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44752  00FBFA  22DA               	addwfc	fsr2h,f,c
 44753  00FBFC  50DF               	movf	indf2,w,c
 44754  00FBFE  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44755  00FC00  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44756  00FC02  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44757                           
 44758                           ; BSR set to: 0
 44759                           ;api.c: 503: if(number_of_steps>0)
 44760  00FC04  BF9F               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 44761  00FC06  D018               	goto	l2348
 44762  00FC08  519F               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 44763  00FC0A  119E               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 44764  00FC0C  119D               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 44765  00FC0E  E103               	bnz	u14230
 44766  00FC10  059C               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 44767  00FC12  A0D8               	btfss	status,0,c
 44768  00FC14  D011               	goto	l2348
 44769  00FC16                     u14230:
 44770                           
 44771                           ; BSR set to: 0
 44772                           ;api.c: 504: {;api.c: 505: return_value = motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 44773  00FC16  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 44774  00FC1A  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 44775  00FC1E  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 44776  00FC22  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 44777  00FC26  0EFF               	movlw	255
 44778  00FC28  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44779  00FC2A  6990               	setf	motor_move_steps@speed& (0+255),b
 44780  00FC2C  0E01               	movlw	1
 44781  00FC2E  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44782  00FC30  0E01               	movlw	1
 44783  00FC32  ECAA  F0AC         	call	_motor_move_steps
 44784  00FC36  D018               	goto	L68
 44785  00FC38                     l2348:
 44786                           
 44787                           ; BSR set to: 0
 44788                           ;api.c: 507: else;api.c: 508: {;api.c: 509: number_of_steps = -number_of_steps;
 44789                           
 44790                           ; BSR set to: 0
 44791  00FC38  1F9F               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 44792  00FC3A  1F9E               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 44793  00FC3C  1F9D               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 44794  00FC3E  6D9C               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 44795  00FC40  0E00               	movlw	0
 44796  00FC42  239D               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 44797  00FC44  239E               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 44798  00FC46  239F               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 44799                           
 44800                           ; BSR set to: 0
 44801                           ;api.c: 510: return_value = motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 44802  00FC48  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 44803  00FC4C  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 44804  00FC50  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 44805  00FC54  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 44806  00FC58  0EFF               	movlw	255
 44807  00FC5A  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44808  00FC5C  6990               	setf	motor_move_steps@speed& (0+255),b
 44809  00FC5E  0E01               	movlw	1
 44810  00FC60  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44811  00FC62  0EFF               	movlw	255
 44812  00FC64  ECAA  F0AC         	call	_motor_move_steps
 44813  00FC68                     L68:
 44814  00FC68  0100               	movlb	0	; () banked
 44815  00FC6A  6F9B               	movwf	__parse_jump_steps@return_value& (0+255),b
 44816                           
 44817                           ; BSR set to: 0
 44818                           ;api.c: 511: };api.c: 514: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 44819                           
 44820                           ; BSR set to: 0
 44821  00FC6C  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 44822  00FC70  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 44823  00FC74  50DF               	movf	indf2,w,c
 44824  00FC76  B4D8               	btfsc	status,2,c
 44825  00FC78  D02B               	goto	l2350
 44826                           
 44827                           ; BSR set to: 0
 44828  00FC7A  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 44829  00FC7E  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 44830  00FC82  0E3E               	movlw	62
 44831  00FC84  60DF               	cpfslt	indf2,c
 44832  00FC86  D024               	goto	l2350
 44833                           
 44834                           ; BSR set to: 0
 44835                           ;api.c: 515: {;api.c: 516: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 44836  00FC88  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 44837  00FC8C  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 44838  00FC90  CFDF F09A          	movff	indf2,??__parse_jump_steps
 44839  00FC94  0E01               	movlw	1
 44840  00FC96  26DF               	addwf	indf2,f,c
 44841  00FC98  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44842  00FC9A  0D01               	mullw	1
 44843  00FC9C  50F3               	movf	prodl,w,c
 44844  00FC9E  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 44845  00FCA0  6ED9               	movwf	fsr2l,c
 44846  00FCA2  50F4               	movf	prodh,w,c
 44847  00FCA4  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 44848  00FCA6  6EDA               	movwf	fsr2h,c
 44849  00FCA8  0E90               	movlw	144
 44850  00FCAA  6EDF               	movwf	indf2,c
 44851                           
 44852                           ;api.c: 517: out_buffer[(*out_idx_ptr)++] = return_value;
 44853  00FCAC  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 44854  00FCB0  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 44855  00FCB4  CFDF F09A          	movff	indf2,??__parse_jump_steps
 44856  00FCB8  0E01               	movlw	1
 44857  00FCBA  26DF               	addwf	indf2,f,c
 44858  00FCBC  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44859  00FCBE  0D01               	mullw	1
 44860  00FCC0  50F3               	movf	prodl,w,c
 44861  00FCC2  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 44862  00FCC4  6ED9               	movwf	fsr2l,c
 44863  00FCC6  50F4               	movf	prodh,w,c
 44864  00FCC8  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 44865  00FCCA  6EDA               	movwf	fsr2h,c
 44866  00FCCC  C09B  FFDF         	movff	__parse_jump_steps@return_value,indf2
 44867  00FCD0                     l2350:
 44868                           
 44869                           ; BSR set to: 0
 44870                           ;api.c: 518: };api.c: 520: return 5;
 44871                           
 44872                           ; BSR set to: 0
 44873  00FCD0  0E05               	movlw	5
 44874  00FCD2  0012               	return	
 44875  00FCD4                     __end_of__parse_jump_steps:
 44876                           	opt stack 0
 44877                           tosu	equ	0xFFF
 44878                           tosh	equ	0xFFE
 44879                           tosl	equ	0xFFD
 44880                           pclath	equ	0xFFA
 44881                           tblptru	equ	0xFF8
 44882                           tblptrh	equ	0xFF7
 44883                           tblptrl	equ	0xFF6
 44884                           tablat	equ	0xFF5
 44885                           prodh	equ	0xFF4
 44886                           prodl	equ	0xFF3
 44887                           intcon	equ	0xFF2
 44888                           indf0	equ	0xFEF
 44889                           postinc0	equ	0xFEE
 44890                           fsr0h	equ	0xFEA
 44891                           fsr0l	equ	0xFE9
 44892                           wreg	equ	0xFE8
 44893                           indf1	equ	0xFE7
 44894                           postinc1	equ	0xFE6
 44895                           postdec1	equ	0xFE5
 44896                           plusw1	equ	0xFE3
 44897                           fsr1h	equ	0xFE2
 44898                           fsr1l	equ	0xFE1
 44899                           indf2	equ	0xFDF
 44900                           postinc2	equ	0xFDE
 44901                           postdec2	equ	0xFDD
 44902                           plusw2	equ	0xFDB
 44903                           fsr2h	equ	0xFDA
 44904                           fsr2l	equ	0xFD9
 44905                           status	equ	0xFD8
 44906                           
 44907 ;; *************** function _motor_move_steps *****************
 44908 ;; Defined at:
 44909 ;;		line 986 in file "motor.c"
 44910 ;; Parameters:    Size  Location     Type
 44911 ;;  direction       1    wreg     enum E6622
 44912 ;;  distance        4   44[BANK0 ] unsigned long 
 44913 ;;  speed           2   48[BANK0 ] unsigned int 
 44914 ;;  overshoot       1   50[BANK0 ] enum E6635
 44915 ;; Auto vars:     Size  Location     Type
 44916 ;;  direction       1   51[BANK0 ] enum E6622
 44917 ;; Return value:  Size  Location     Type
 44918 ;;                  1    wreg      enum E6782
 44919 ;; Registers used:
 44920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44921 ;; Tracked objects:
 44922 ;;		On entry : 0/0
 44923 ;;		On exit  : 0/0
 44924 ;;		Unchanged: 0/0
 44925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44926 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44929 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44930 ;;Total ram usage:        8 bytes
 44931 ;; Hardware stack levels used:    1
 44932 ;; Hardware stack levels required when called:   13
 44933 ;; This function calls:
 44934 ;;		__motor_move_steps
 44935 ;; This function is called by:
 44936 ;;		__parse_jump_steps
 44937 ;;		__parse_jump_steps_with_overshoot
 44938 ;;		_motor_arc_move
 44939 ;; This function uses a non-reentrant model
 44940 ;;
 44941                           
 44942                           	psect	text185
 44943  015954                     __ptext185:
 44944                           	opt stack 0
 44945  015954                     _motor_move_steps:
 44946                           	opt stack 15
 44947                           
 44948                           ; BSR set to: 0
 44949                           ;incstack = 0
 44950                           ;motor_move_steps@direction stored from wreg
 44951  015954  0100               	movlb	0	; () banked
 44952  015956  6F93               	movwf	motor_move_steps@direction& (0+255),b
 44953                           
 44954                           ;motor.c: 989: return _motor_move_steps(direction, distance, speed, overshoot, MOTOR_MOV
      +                          E_TYPE_NORMAL);
 44955  015958  C08C  F07D         	movff	motor_move_steps@distance,__motor_move_steps@distance_in_steps
 44956  01595C  C08D  F07E         	movff	motor_move_steps@distance+1,__motor_move_steps@distance_in_steps+1
 44957  015960  C08E  F07F         	movff	motor_move_steps@distance+2,__motor_move_steps@distance_in_steps+2
 44958  015964  C08F  F080         	movff	motor_move_steps@distance+3,__motor_move_steps@distance_in_steps+3
 44959  015968  C090  F081         	movff	motor_move_steps@speed,__motor_move_steps@speed
 44960  01596C  C091  F082         	movff	motor_move_steps@speed+1,__motor_move_steps@speed+1
 44961  015970  C092  F083         	movff	motor_move_steps@overshoot,__motor_move_steps@overshoot
 44962  015974  0E00               	movlw	0
 44963  015976  0100               	movlb	0	; () banked
 44964  015978  6F84               	movwf	__motor_move_steps@type& (0+255),b
 44965  01597A  5193               	movf	motor_move_steps@direction& (0+255),w,b
 44966  01597C  ECBE  F076         	call	__motor_move_steps
 44967  015980  0012               	return	
 44968  015982                     __end_of_motor_move_steps:
 44969                           	opt stack 0
 44970                           tosu	equ	0xFFF
 44971                           tosh	equ	0xFFE
 44972                           tosl	equ	0xFFD
 44973                           pclath	equ	0xFFA
 44974                           tblptru	equ	0xFF8
 44975                           tblptrh	equ	0xFF7
 44976                           tblptrl	equ	0xFF6
 44977                           tablat	equ	0xFF5
 44978                           prodh	equ	0xFF4
 44979                           prodl	equ	0xFF3
 44980                           intcon	equ	0xFF2
 44981                           indf0	equ	0xFEF
 44982                           postinc0	equ	0xFEE
 44983                           fsr0h	equ	0xFEA
 44984                           fsr0l	equ	0xFE9
 44985                           wreg	equ	0xFE8
 44986                           indf1	equ	0xFE7
 44987                           postinc1	equ	0xFE6
 44988                           postdec1	equ	0xFE5
 44989                           plusw1	equ	0xFE3
 44990                           fsr1h	equ	0xFE2
 44991                           fsr1l	equ	0xFE1
 44992                           indf2	equ	0xFDF
 44993                           postinc2	equ	0xFDE
 44994                           postdec2	equ	0xFDD
 44995                           plusw2	equ	0xFDB
 44996                           fsr2h	equ	0xFDA
 44997                           fsr2l	equ	0xFD9
 44998                           status	equ	0xFD8
 44999                           
 45000 ;; *************** function __motor_move_steps *****************
 45001 ;; Defined at:
 45002 ;;		line 187 in file "motor.c"
 45003 ;; Parameters:    Size  Location     Type
 45004 ;;  direction       1    wreg     enum E6622
 45005 ;;  distance_in_    4   29[BANK0 ] unsigned long 
 45006 ;;  speed           2   33[BANK0 ] unsigned int 
 45007 ;;  overshoot       1   35[BANK0 ] enum E6635
 45008 ;;  type            1   36[BANK0 ] enum E6631
 45009 ;; Auto vars:     Size  Location     Type
 45010 ;;  direction       1   43[BANK0 ] enum E6622
 45011 ;;  distance_to_    4   39[BANK0 ] long 
 45012 ;;  return_value    1   38[BANK0 ] enum E6639
 45013 ;;  return_value    1   37[BANK0 ] enum E6639
 45014 ;; Return value:  Size  Location     Type
 45015 ;;                  1    wreg      enum E6639
 45016 ;; Registers used:
 45017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45018 ;; Tracked objects:
 45019 ;;		On entry : 0/0
 45020 ;;		On exit  : 0/0
 45021 ;;		Unchanged: 0/0
 45022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45023 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45024 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45026 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45027 ;;Total ram usage:       15 bytes
 45028 ;; Hardware stack levels used:    1
 45029 ;; Hardware stack levels required when called:   12
 45030 ;; This function calls:
 45031 ;;		__motor_distance_to_limit
 45032 ;;		__motor_schedule_command
 45033 ;;		_motor_items_in_cue
 45034 ;; This function is called by:
 45035 ;;		_motor_move_steps
 45036 ;;		_motor_move_degrees_int
 45037 ;;		_motor_goto_steps
 45038 ;;		_motor_move_endless
 45039 ;;		_motor_move_degrees_float
 45040 ;;		_motor_goto_degrees_float
 45041 ;;		_motor_goto_degrees_int
 45042 ;; This function uses a non-reentrant model
 45043 ;;
 45044                           
 45045                           	psect	text186
 45046  00ED7C                     __ptext186:
 45047                           	opt stack 0
 45048  00ED7C                     __motor_move_steps:
 45049                           	opt stack 16
 45050                           
 45051                           ;incstack = 0
 45052                           ;__motor_move_steps@direction stored from wreg
 45053  00ED7C  0100               	movlb	0	; () banked
 45054  00ED7E  6F8B               	movwf	__motor_move_steps@direction& (0+255),b
 45055                           
 45056                           ;motor.c: 189: int32_t distance_to_limit;;motor.c: 190: motorReturnValue_t return_value_
      +                          1;;motor.c: 191: motorReturnValue_t return_value_2;;motor.c: 193: if(os.busy || motor_it
      +                          ems_in_cue()!=0)
 45057  00ED80  0101               	movlb	1	; () banked
 45058  00ED82  5176               	movf	(_os+16)& (0+255),w,b	;volatile
 45059  00ED84  A4D8               	btfss	status,2,c
 45060  00ED86  D005               	goto	u11610
 45061                           
 45062                           ; BSR set to: 1
 45063  00ED88  ECDE  F0AE         	call	_motor_items_in_cue	;wreg free
 45064  00ED8C  0900               	iorlw	0
 45065  00ED8E  B4D8               	btfsc	status,2,c
 45066  00ED90  D002               	goto	l2463
 45067  00ED92                     u11610:
 45068                           
 45069                           ;motor.c: 194: {;motor.c: 196: return MOTOR_RETURN_VALUE_BUSY;
 45070  00ED92  0E01               	movlw	1
 45071  00ED94  0012               	return	
 45072  00ED96                     l2463:
 45073                           
 45074                           ;motor.c: 197: };motor.c: 199: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45075  00ED96  0100               	movlb	0	; () banked
 45076  00ED98  058B               	decf	__motor_move_steps@direction& (0+255),w,b
 45077  00ED9A  B4D8               	btfsc	status,2,c
 45078  00ED9C  D005               	goto	l2467
 45079                           
 45080                           ; BSR set to: 0
 45081  00ED9E  298B               	incf	__motor_move_steps@direction& (0+255),w,b
 45082  00EDA0  B4D8               	btfsc	status,2,c
 45083  00EDA2  D002               	goto	l2467
 45084                           
 45085                           ; BSR set to: 0
 45086                           ;motor.c: 200: {;motor.c: 202: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45087  00EDA4  0E04               	movlw	4
 45088                           
 45089                           ; BSR set to: 0
 45090  00EDA6  0012               	return	
 45091  00EDA8                     l2467:
 45092                           
 45093                           ; BSR set to: 0
 45094                           ;motor.c: 203: };motor.c: 205: if(distance_in_steps==0)
 45095                           
 45096                           ; BSR set to: 0
 45097  00EDA8  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45098  00EDAA  117E               	iorwf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45099  00EDAC  117F               	iorwf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45100  00EDAE  1180               	iorwf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45101  00EDB0  A4D8               	btfss	status,2,c
 45102  00EDB2  D002               	goto	l2468
 45103                           
 45104                           ; BSR set to: 0
 45105                           ;motor.c: 206: {;motor.c: 208: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45106  00EDB4  0E03               	movlw	3
 45107                           
 45108                           ; BSR set to: 0
 45109  00EDB6  0012               	return	
 45110  00EDB8                     l2468:
 45111                           
 45112                           ; BSR set to: 0
 45113                           ;motor.c: 209: };motor.c: 211: if(speed==0)
 45114                           
 45115                           ; BSR set to: 0
 45116  00EDB8  5181               	movf	__motor_move_steps@speed& (0+255),w,b
 45117  00EDBA  1182               	iorwf	(__motor_move_steps@speed+1)& (0+255),w,b
 45118  00EDBC  A4D8               	btfss	status,2,c
 45119  00EDBE  D002               	goto	l2469
 45120                           
 45121                           ; BSR set to: 0
 45122                           ;motor.c: 212: {;motor.c: 214: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45123  00EDC0  0E02               	movlw	2
 45124                           
 45125                           ; BSR set to: 0
 45126  00EDC2  0012               	return	
 45127  00EDC4                     l2469:
 45128                           
 45129                           ; BSR set to: 0
 45130                           ;motor.c: 215: };motor.c: 217: if(!((type==MOTOR_MOVE_TYPE_NORMAL) || (type==MOTOR_MOVE_
      +                          TYPE_ENDLESS)))
 45131                           
 45132                           ; BSR set to: 0
 45133  00EDC4  5184               	movf	__motor_move_steps@type& (0+255),w,b
 45134  00EDC6  B4D8               	btfsc	status,2,c
 45135  00EDC8  D005               	goto	l2470
 45136                           
 45137                           ; BSR set to: 0
 45138  00EDCA  0584               	decf	__motor_move_steps@type& (0+255),w,b
 45139  00EDCC  B4D8               	btfsc	status,2,c
 45140  00EDCE  D002               	goto	l2470
 45141                           
 45142                           ; BSR set to: 0
 45143                           ;motor.c: 218: {;motor.c: 220: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45144  00EDD0  0E05               	movlw	5
 45145                           
 45146                           ; BSR set to: 0
 45147  00EDD2  0012               	return	
 45148  00EDD4                     l2470:
 45149                           
 45150                           ; BSR set to: 0
 45151                           ;motor.c: 221: };motor.c: 223: if(!((overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT) || (oversh
      +                          oot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)))
 45152                           
 45153                           ; BSR set to: 0
 45154  00EDD4  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45155  00EDD6  B4D8               	btfsc	status,2,c
 45156  00EDD8  D005               	goto	l2471
 45157                           
 45158                           ; BSR set to: 0
 45159  00EDDA  5183               	movf	__motor_move_steps@overshoot& (0+255),w,b
 45160  00EDDC  B4D8               	btfsc	status,2,c
 45161  00EDDE  D002               	goto	l2471
 45162                           
 45163                           ; BSR set to: 0
 45164                           ;motor.c: 224: {;motor.c: 226: return MOTOR_RETURN_VALUE_INVALID_OVERSHOOT;
 45165  00EDE0  0E06               	movlw	6
 45166                           
 45167                           ; BSR set to: 0
 45168  00EDE2  0012               	return	
 45169  00EDE4                     l2471:
 45170                           
 45171                           ; BSR set to: 0
 45172                           ;motor.c: 227: };motor.c: 233: distance_to_limit = _motor_distance_to_limit(direction);
 45173                           
 45174                           ; BSR set to: 0
 45175  00EDE4  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45176  00EDE6  EC10  F07F         	call	__motor_distance_to_limit
 45177  00EDEA  C06C  F087         	movff	?__motor_distance_to_limit,__motor_move_steps@distance_to_limit
 45178  00EDEE  C06D  F088         	movff	?__motor_distance_to_limit+1,__motor_move_steps@distance_to_limit+1
 45179  00EDF2  C06E  F089         	movff	?__motor_distance_to_limit+2,__motor_move_steps@distance_to_limit+2
 45180  00EDF6  C06F  F08A         	movff	?__motor_distance_to_limit+3,__motor_move_steps@distance_to_limit+3
 45181                           
 45182                           ;motor.c: 236: if(distance_to_limit<=0)
 45183  00EDFA  0100               	movlb	0	; () banked
 45184  00EDFC  BF8A               	btfsc	(__motor_move_steps@distance_to_limit+3)& (0+255),7,b
 45185  00EDFE  D007               	goto	u11700
 45186  00EE00  518A               	movf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45187  00EE02  1189               	iorwf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45188  00EE04  1188               	iorwf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45189  00EE06  E105               	bnz	l13346
 45190  00EE08  0587               	decf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45191  00EE0A  B0D8               	btfsc	status,0,c
 45192  00EE0C  D002               	goto	l2472
 45193  00EE0E                     u11700:
 45194                           
 45195                           ; BSR set to: 0
 45196                           ;motor.c: 237: {;motor.c: 238: return MOTOR_RETURN_VALUE_LIMIT_VIOLATED;
 45197  00EE0E  0E07               	movlw	7
 45198                           
 45199                           ; BSR set to: 0
 45200  00EE10  0012               	return	
 45201  00EE12                     l2472:
 45202  00EE12                     l13346:
 45203                           
 45204                           ; BSR set to: 0
 45205                           ;motor.c: 239: };motor.c: 242: if(distance_to_limit!=2147483647)
 45206  00EE12  2987               	incf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45207  00EE14  E108               	bnz	u11710
 45208  00EE16  2988               	incf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45209  00EE18  E106               	bnz	u11710
 45210  00EE1A  2989               	incf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45211  00EE1C  E104               	bnz	u11710
 45212  00EE1E  0E7F               	movlw	127
 45213  00EE20  198A               	xorwf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45214  00EE22  B4D8               	btfsc	status,2,c
 45215  00EE24  D002               	goto	l2473
 45216  00EE26                     u11710:
 45217                           
 45218                           ; BSR set to: 0
 45219                           ;motor.c: 243: {;motor.c: 244: type = MOTOR_MOVE_TYPE_NORMAL;
 45220  00EE26  0E00               	movlw	0
 45221  00EE28  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45222  00EE2A                     l2473:
 45223                           
 45224                           ; BSR set to: 0
 45225                           ;motor.c: 245: };motor.c: 248: if(distance_in_steps>((uint32_t) distance_to_limit))
 45226                           
 45227                           ; BSR set to: 0
 45228  00EE2A  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45229  00EE2C  5D87               	subwf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45230  00EE2E  517E               	movf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45231  00EE30  5988               	subwfb	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45232  00EE32  517F               	movf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45233  00EE34  5989               	subwfb	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45234  00EE36  5180               	movf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45235  00EE38  598A               	subwfb	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45236  00EE3A  B0D8               	btfsc	status,0,c
 45237  00EE3C  D008               	goto	l2474
 45238                           
 45239                           ; BSR set to: 0
 45240                           ;motor.c: 249: {;motor.c: 250: distance_in_steps = (uint32_t) distance_to_limit;
 45241  00EE3E  C087  F07D         	movff	__motor_move_steps@distance_to_limit,__motor_move_steps@distance_in_steps
 45242  00EE42  C088  F07E         	movff	__motor_move_steps@distance_to_limit+1,__motor_move_steps@distance_in_steps+1
 45243  00EE46  C089  F07F         	movff	__motor_move_steps@distance_to_limit+2,__motor_move_steps@distance_in_steps+2
 45244  00EE4A  C08A  F080         	movff	__motor_move_steps@distance_to_limit+3,__motor_move_steps@distance_in_steps+3
 45245  00EE4E                     l2474:
 45246                           
 45247                           ; BSR set to: 0
 45248                           ;motor.c: 251: };motor.c: 255: if(overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT)
 45249                           
 45250                           ; BSR set to: 0
 45251  00EE4E  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45252  00EE50  A4D8               	btfss	status,2,c
 45253  00EE52  D012               	goto	l2475
 45254                           
 45255                           ; BSR set to: 0
 45256                           ;motor.c: 256: {;motor.c: 258: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45257  00EE54  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45258  00EE58  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45259  00EE5C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45260  00EE60  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45261  00EE64  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45262  00EE68  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45263  00EE6C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45264  00EE70  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45265  00EE72  EC74  F08E         	call	__motor_schedule_command
 45266  00EE76  0012               	return	
 45267  00EE78                     l2475:
 45268                           
 45269                           ;motor.c: 260: };motor.c: 264: if(direction==os.approach_direction)
 45270  00EE78  0100               	movlb	0	; () banked
 45271  00EE7A  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45272  00EE7C  0101               	movlb	1	; () banked
 45273  00EE7E  1979               	xorwf	(_os+19)& (0+255),w,b	;volatile
 45274  00EE80  A4D8               	btfss	status,2,c
 45275  00EE82  D013               	goto	l2476
 45276                           
 45277                           ; BSR set to: 1
 45278                           ;motor.c: 265: {;motor.c: 266: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45279  00EE84  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45280  00EE88  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45281  00EE8C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45282  00EE90  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45283  00EE94  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45284  00EE98  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45285  00EE9C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45286  00EEA0  0100               	movlb	0	; () banked
 45287  00EEA2  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45288  00EEA4  EC74  F08E         	call	__motor_schedule_command
 45289  00EEA8  0012               	return	
 45290  00EEAA                     l2476:
 45291                           
 45292                           ;motor.c: 267: };motor.c: 272: if(config.overshoot_in_steps==0)
 45293  00EEAA  0101               	movlb	1	; () banked
 45294  00EEAC  519C               	movf	(_config+5)& (0+255),w,b
 45295  00EEAE  119D               	iorwf	(_config+6)& (0+255),w,b
 45296  00EEB0  A4D8               	btfss	status,2,c
 45297  00EEB2  D013               	goto	l2477
 45298                           
 45299                           ; BSR set to: 1
 45300                           ;motor.c: 273: {;motor.c: 274: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45301  00EEB4  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45302  00EEB8  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45303  00EEBC  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45304  00EEC0  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45305  00EEC4  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45306  00EEC8  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45307  00EECC  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45308  00EED0  0100               	movlb	0	; () banked
 45309  00EED2  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45310  00EED4  EC74  F08E         	call	__motor_schedule_command
 45311  00EED8  0012               	return	
 45312  00EEDA                     l2477:
 45313                           
 45314                           ;motor.c: 275: };motor.c: 280: distance_in_steps += config.overshoot_in_steps;
 45315  00EEDA  0101               	movlb	1	; () banked
 45316  00EEDC  519C               	movf	(_config+5)& (0+255),w,b
 45317  00EEDE  0100               	movlb	0	; () banked
 45318  00EEE0  277D               	addwf	__motor_move_steps@distance_in_steps& (0+255),f,b
 45319  00EEE2  0101               	movlb	1	; () banked
 45320  00EEE4  519D               	movf	(_config+6)& (0+255),w,b
 45321  00EEE6  0100               	movlb	0	; () banked
 45322  00EEE8  237E               	addwfc	(__motor_move_steps@distance_in_steps+1)& (0+255),f,b
 45323  00EEEA  0E00               	movlw	0
 45324  00EEEC  237F               	addwfc	(__motor_move_steps@distance_in_steps+2)& (0+255),f,b
 45325  00EEEE  0E00               	movlw	0
 45326  00EEF0  2380               	addwfc	(__motor_move_steps@distance_in_steps+3)& (0+255),f,b
 45327                           
 45328                           ; BSR set to: 0
 45329                           ;motor.c: 281: return_value_1 = _motor_schedule_command(direction, distance_in_steps, sp
      +                          eed, type);
 45330  00EEF2  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45331  00EEF6  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45332  00EEFA  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45333  00EEFE  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45334  00EF02  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45335  00EF06  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45336  00EF0A  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45337  00EF0E  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45338  00EF10  EC74  F08E         	call	__motor_schedule_command
 45339  00EF14  0100               	movlb	0	; () banked
 45340  00EF16  6F85               	movwf	__motor_move_steps@return_value_1& (0+255),b
 45341                           
 45342                           ; BSR set to: 0
 45343                           ;motor.c: 282: return_value_2 = _motor_schedule_command(os.approach_direction, (uint32_t
      +                          ) config.overshoot_in_steps, speed, type);
 45344  00EF18  C19C  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 45345  00EF1C  C19D  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 45346  00EF20  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 45347  00EF22  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 45348  00EF24  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45349  00EF28  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45350  00EF2C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45351  00EF30  0101               	movlb	1	; () banked
 45352  00EF32  5179               	movf	(_os+19)& (0+255),w,b	;volatile
 45353  00EF34  EC74  F08E         	call	__motor_schedule_command
 45354  00EF38  0100               	movlb	0	; () banked
 45355  00EF3A  6F86               	movwf	__motor_move_steps@return_value_2& (0+255),b
 45356                           
 45357                           ; BSR set to: 0
 45358                           ;motor.c: 286: if(return_value_1 > return_value_2)
 45359  00EF3C  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45360  00EF3E  5D86               	subwf	__motor_move_steps@return_value_2& (0+255),w,b
 45361  00EF40  B0D8               	btfsc	status,0,c
 45362  00EF42  D002               	goto	l2478
 45363                           
 45364                           ; BSR set to: 0
 45365                           ;motor.c: 287: {;motor.c: 288: return return_value_1;
 45366  00EF44  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45367                           
 45368                           ; BSR set to: 0
 45369                           ;motor.c: 289: }
 45370                           
 45371                           ; BSR set to: 0
 45372  00EF46  0012               	return	
 45373  00EF48                     l2478:
 45374                           
 45375                           ; BSR set to: 0
 45376                           ;motor.c: 290: else;motor.c: 291: {;motor.c: 292: return return_value_2;
 45377                           
 45378                           ; BSR set to: 0
 45379  00EF48  5186               	movf	__motor_move_steps@return_value_2& (0+255),w,b
 45380                           
 45381                           ; BSR set to: 0
 45382  00EF4A  0012               	return	
 45383  00EF4C                     __end_of__motor_move_steps:
 45384                           	opt stack 0
 45385                           tosu	equ	0xFFF
 45386                           tosh	equ	0xFFE
 45387                           tosl	equ	0xFFD
 45388                           pclath	equ	0xFFA
 45389                           tblptru	equ	0xFF8
 45390                           tblptrh	equ	0xFF7
 45391                           tblptrl	equ	0xFF6
 45392                           tablat	equ	0xFF5
 45393                           prodh	equ	0xFF4
 45394                           prodl	equ	0xFF3
 45395                           intcon	equ	0xFF2
 45396                           indf0	equ	0xFEF
 45397                           postinc0	equ	0xFEE
 45398                           fsr0h	equ	0xFEA
 45399                           fsr0l	equ	0xFE9
 45400                           wreg	equ	0xFE8
 45401                           indf1	equ	0xFE7
 45402                           postinc1	equ	0xFE6
 45403                           postdec1	equ	0xFE5
 45404                           plusw1	equ	0xFE3
 45405                           fsr1h	equ	0xFE2
 45406                           fsr1l	equ	0xFE1
 45407                           indf2	equ	0xFDF
 45408                           postinc2	equ	0xFDE
 45409                           postdec2	equ	0xFDD
 45410                           plusw2	equ	0xFDB
 45411                           fsr2h	equ	0xFDA
 45412                           fsr2l	equ	0xFD9
 45413                           status	equ	0xFD8
 45414                           
 45415 ;; *************** function __motor_schedule_command *****************
 45416 ;; Defined at:
 45417 ;;		line 135 in file "motor.c"
 45418 ;; Parameters:    Size  Location     Type
 45419 ;;  direction       1    wreg     enum E6622
 45420 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 45421 ;;  speed           2    4[BANK0 ] unsigned int 
 45422 ;;  type            1    6[BANK0 ] enum E6631
 45423 ;; Auto vars:     Size  Location     Type
 45424 ;;  direction       1    7[BANK0 ] enum E6622
 45425 ;; Return value:  Size  Location     Type
 45426 ;;                  1    wreg      enum E6639
 45427 ;; Registers used:
 45428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45429 ;; Tracked objects:
 45430 ;;		On entry : 0/0
 45431 ;;		On exit  : 0/0
 45432 ;;		Unchanged: 0/0
 45433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45434 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45435 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45437 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45438 ;;Total ram usage:        8 bytes
 45439 ;; Hardware stack levels used:    1
 45440 ;; Hardware stack levels required when called:   11
 45441 ;; This function calls:
 45442 ;;		_motor_items_in_cue
 45443 ;; This function is called by:
 45444 ;;		__motor_move_steps
 45445 ;;		__motor_move_back_forth
 45446 ;; This function uses a non-reentrant model
 45447 ;;
 45448                           
 45449                           	psect	text187
 45450  011CE8                     __ptext187:
 45451                           	opt stack 0
 45452  011CE8                     __motor_schedule_command:
 45453                           	opt stack 16
 45454                           
 45455                           ;incstack = 0
 45456                           ;__motor_schedule_command@direction stored from wreg
 45457  011CE8  0100               	movlb	0	; () banked
 45458  011CEA  6F67               	movwf	__motor_schedule_command@direction& (0+255),b
 45459                           
 45460                           ;motor.c: 137: if(motor_items_in_cue()==8-1)
 45461  011CEC  ECDE  F0AE         	call	_motor_items_in_cue	;wreg free
 45462  011CF0  0A07               	xorlw	7
 45463  011CF2  A4D8               	btfss	status,2,c
 45464  011CF4  D002               	goto	l2454
 45465                           
 45466                           ;motor.c: 138: {;motor.c: 140: return MOTOR_RETURN_VALUE_BUFFER_FULL;
 45467  011CF6  0E08               	movlw	8
 45468  011CF8  0012               	return	
 45469  011CFA                     l2454:
 45470                           
 45471                           ;motor.c: 141: };motor.c: 143: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45472  011CFA  0100               	movlb	0	; () banked
 45473  011CFC  0567               	decf	__motor_schedule_command@direction& (0+255),w,b
 45474  011CFE  B4D8               	btfsc	status,2,c
 45475  011D00  D005               	goto	l2456
 45476                           
 45477                           ; BSR set to: 0
 45478  011D02  2967               	incf	__motor_schedule_command@direction& (0+255),w,b
 45479  011D04  B4D8               	btfsc	status,2,c
 45480  011D06  D002               	goto	l2456
 45481                           
 45482                           ; BSR set to: 0
 45483                           ;motor.c: 144: {;motor.c: 146: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45484  011D08  0E04               	movlw	4
 45485                           
 45486                           ; BSR set to: 0
 45487  011D0A  0012               	return	
 45488  011D0C                     l2456:
 45489                           
 45490                           ; BSR set to: 0
 45491                           ;motor.c: 147: };motor.c: 149: if(distance_in_steps==0)
 45492                           
 45493                           ; BSR set to: 0
 45494  011D0C  5160               	movf	__motor_schedule_command@distance_in_steps& (0+255),w,b
 45495  011D0E  1161               	iorwf	(__motor_schedule_command@distance_in_steps+1)& (0+255),w,b
 45496  011D10  1162               	iorwf	(__motor_schedule_command@distance_in_steps+2)& (0+255),w,b
 45497  011D12  1163               	iorwf	(__motor_schedule_command@distance_in_steps+3)& (0+255),w,b
 45498  011D14  A4D8               	btfss	status,2,c
 45499  011D16  D002               	goto	l2457
 45500                           
 45501                           ; BSR set to: 0
 45502                           ;motor.c: 150: {;motor.c: 152: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45503  011D18  0E03               	movlw	3
 45504                           
 45505                           ; BSR set to: 0
 45506  011D1A  0012               	return	
 45507  011D1C                     l2457:
 45508                           
 45509                           ; BSR set to: 0
 45510                           ;motor.c: 153: };motor.c: 155: if((type!=MOTOR_MOVE_TYPE_NORMAL) && (type!=MOTOR_MOVE_TY
      +                          PE_ENDLESS))
 45511                           
 45512                           ; BSR set to: 0
 45513  011D1C  5166               	movf	__motor_schedule_command@type& (0+255),w,b
 45514  011D1E  B4D8               	btfsc	status,2,c
 45515  011D20  D005               	goto	l2458
 45516                           
 45517                           ; BSR set to: 0
 45518  011D22  0566               	decf	__motor_schedule_command@type& (0+255),w,b
 45519  011D24  B4D8               	btfsc	status,2,c
 45520  011D26  D002               	goto	l2458
 45521                           
 45522                           ; BSR set to: 0
 45523                           ;motor.c: 156: {;motor.c: 158: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45524  011D28  0E05               	movlw	5
 45525                           
 45526                           ; BSR set to: 0
 45527  011D2A  0012               	return	
 45528  011D2C                     l2458:
 45529                           
 45530                           ; BSR set to: 0
 45531                           ;motor.c: 159: };motor.c: 161: if(speed==0)
 45532                           
 45533                           ; BSR set to: 0
 45534  011D2C  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45535  011D2E  1165               	iorwf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45536  011D30  A4D8               	btfss	status,2,c
 45537  011D32  D002               	goto	l2459
 45538                           
 45539                           ; BSR set to: 0
 45540                           ;motor.c: 162: {;motor.c: 164: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45541  011D34  0E02               	movlw	2
 45542                           
 45543                           ; BSR set to: 0
 45544  011D36  0012               	return	
 45545  011D38                     l2459:
 45546                           
 45547                           ; BSR set to: 0
 45548                           ;motor.c: 165: };motor.c: 168: if(speed>config.maximum_speed)
 45549                           
 45550                           ; BSR set to: 0
 45551  011D38  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45552  011D3A  0101               	movlb	1	; () banked
 45553  011D3C  5DA2               	subwf	(_config+11)& (0+255),w,b
 45554  011D3E  0100               	movlb	0	; () banked
 45555  011D40  5165               	movf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45556  011D42  0101               	movlb	1	; () banked
 45557  011D44  59A3               	subwfb	(_config+12)& (0+255),w,b
 45558  011D46  B0D8               	btfsc	status,0,c
 45559  011D48  D004               	goto	l2460
 45560                           
 45561                           ; BSR set to: 1
 45562                           ;motor.c: 169: {;motor.c: 170: speed = config.maximum_speed;
 45563  011D4A  C1A2  F064         	movff	_config+11,__motor_schedule_command@speed
 45564  011D4E  C1A3  F065         	movff	_config+12,__motor_schedule_command@speed+1
 45565  011D52                     l2460:
 45566                           
 45567                           ; BSR set to: 1
 45568                           ;motor.c: 171: };motor.c: 174: motor_command_cue[motor_cue_write_index].direction = dire
      +                          ction;
 45569                           
 45570                           ; BSR set to: 1
 45571  011D52  514C               	movf	_motor_cue_write_index& (0+255),w,b
 45572  011D54  0D08               	mullw	8
 45573  011D56  0E00               	movlw	low _motor_command_cue
 45574  011D58  24F3               	addwf	prodl,w,c
 45575  011D5A  6ED9               	movwf	fsr2l,c
 45576  011D5C  0E03               	movlw	high _motor_command_cue
 45577  011D5E  20F4               	addwfc	prodh,w,c
 45578  011D60  6EDA               	movwf	fsr2h,c
 45579  011D62  C067  FFDF         	movff	__motor_schedule_command@direction,indf2
 45580                           
 45581                           ;motor.c: 175: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 45582  011D66  514C               	movf	_motor_cue_write_index& (0+255),w,b
 45583  011D68  0D08               	mullw	8
 45584  011D6A  0E01               	movlw	1
 45585  011D6C  26F3               	addwf	prodl,f,c
 45586  011D6E  0E00               	movlw	0
 45587  011D70  22F4               	addwfc	prodh,f,c
 45588  011D72  0E00               	movlw	low _motor_command_cue
 45589  011D74  24F3               	addwf	prodl,w,c
 45590  011D76  6ED9               	movwf	fsr2l,c
 45591  011D78  0E03               	movlw	high _motor_command_cue
 45592  011D7A  20F4               	addwfc	prodh,w,c
 45593  011D7C  6EDA               	movwf	fsr2h,c
 45594  011D7E  C060  FFDE         	movff	__motor_schedule_command@distance_in_steps,postinc2
 45595  011D82  C061  FFDE         	movff	__motor_schedule_command@distance_in_steps+1,postinc2
 45596  011D86  C062  FFDE         	movff	__motor_schedule_command@distance_in_steps+2,postinc2
 45597  011D8A  C063  FFDE         	movff	__motor_schedule_command@distance_in_steps+3,postinc2
 45598                           
 45599                           ;motor.c: 176: motor_command_cue[motor_cue_write_index].speed = speed;
 45600  011D8E  514C               	movf	_motor_cue_write_index& (0+255),w,b
 45601  011D90  0D08               	mullw	8
 45602  011D92  0E05               	movlw	5
 45603  011D94  26F3               	addwf	prodl,f,c
 45604  011D96  0E00               	movlw	0
 45605  011D98  22F4               	addwfc	prodh,f,c
 45606  011D9A  0E00               	movlw	low _motor_command_cue
 45607  011D9C  24F3               	addwf	prodl,w,c
 45608  011D9E  6ED9               	movwf	fsr2l,c
 45609  011DA0  0E03               	movlw	high _motor_command_cue
 45610  011DA2  20F4               	addwfc	prodh,w,c
 45611  011DA4  6EDA               	movwf	fsr2h,c
 45612  011DA6  C064  FFDE         	movff	__motor_schedule_command@speed,postinc2
 45613  011DAA  C065  FFDD         	movff	__motor_schedule_command@speed+1,postdec2
 45614                           
 45615                           ;motor.c: 177: motor_command_cue[motor_cue_write_index].type = type;
 45616  011DAE  514C               	movf	_motor_cue_write_index& (0+255),w,b
 45617  011DB0  0D08               	mullw	8
 45618  011DB2  0E07               	movlw	7
 45619  011DB4  26F3               	addwf	prodl,f,c
 45620  011DB6  0E00               	movlw	0
 45621  011DB8  22F4               	addwfc	prodh,f,c
 45622  011DBA  0E00               	movlw	low _motor_command_cue
 45623  011DBC  24F3               	addwf	prodl,w,c
 45624  011DBE  6ED9               	movwf	fsr2l,c
 45625  011DC0  0E03               	movlw	high _motor_command_cue
 45626  011DC2  20F4               	addwfc	prodh,w,c
 45627  011DC4  6EDA               	movwf	fsr2h,c
 45628  011DC6  C066  FFDF         	movff	__motor_schedule_command@type,indf2
 45629                           
 45630                           ; BSR set to: 1
 45631                           ;motor.c: 180: ++motor_cue_write_index;
 45632  011DCA  2B4C               	incf	_motor_cue_write_index& (0+255),f,b
 45633                           
 45634                           ; BSR set to: 1
 45635                           ;motor.c: 181: motor_cue_write_index &= 0b111;
 45636  011DCC  0E07               	movlw	7
 45637  011DCE  174C               	andwf	_motor_cue_write_index& (0+255),f,b
 45638                           
 45639                           ; BSR set to: 1
 45640                           ;motor.c: 184: return MOTOR_RETURN_VALUE_OK;
 45641  011DD0  0E00               	movlw	0
 45642  011DD2  0012               	return	
 45643  011DD4                     __end_of__motor_schedule_command:
 45644                           	opt stack 0
 45645                           tosu	equ	0xFFF
 45646                           tosh	equ	0xFFE
 45647                           tosl	equ	0xFFD
 45648                           pclath	equ	0xFFA
 45649                           tblptru	equ	0xFF8
 45650                           tblptrh	equ	0xFF7
 45651                           tblptrl	equ	0xFF6
 45652                           tablat	equ	0xFF5
 45653                           prodh	equ	0xFF4
 45654                           prodl	equ	0xFF3
 45655                           intcon	equ	0xFF2
 45656                           indf0	equ	0xFEF
 45657                           postinc0	equ	0xFEE
 45658                           fsr0h	equ	0xFEA
 45659                           fsr0l	equ	0xFE9
 45660                           wreg	equ	0xFE8
 45661                           indf1	equ	0xFE7
 45662                           postinc1	equ	0xFE6
 45663                           postdec1	equ	0xFE5
 45664                           plusw1	equ	0xFE3
 45665                           fsr1h	equ	0xFE2
 45666                           fsr1l	equ	0xFE1
 45667                           indf2	equ	0xFDF
 45668                           postinc2	equ	0xFDE
 45669                           postdec2	equ	0xFDD
 45670                           plusw2	equ	0xFDB
 45671                           fsr2h	equ	0xFDA
 45672                           fsr2l	equ	0xFD9
 45673                           status	equ	0xFD8
 45674                           
 45675 ;; *************** function _motor_items_in_cue *****************
 45676 ;; Defined at:
 45677 ;;		line 608 in file "motor.c"
 45678 ;; Parameters:    Size  Location     Type
 45679 ;;		None
 45680 ;; Auto vars:     Size  Location     Type
 45681 ;;		None
 45682 ;; Return value:  Size  Location     Type
 45683 ;;                  1    wreg      unsigned char 
 45684 ;; Registers used:
 45685 ;;		wreg, status,2, status,0
 45686 ;; Tracked objects:
 45687 ;;		On entry : 0/0
 45688 ;;		On exit  : 0/0
 45689 ;;		Unchanged: 0/0
 45690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45695 ;;Total ram usage:        0 bytes
 45696 ;; Hardware stack levels used:    1
 45697 ;; Hardware stack levels required when called:   10
 45698 ;; This function calls:
 45699 ;;		Nothing
 45700 ;; This function is called by:
 45701 ;;		__motor_schedule_command
 45702 ;;		__motor_move_steps
 45703 ;;		__motor_move_back_forth
 45704 ;;		_motor_process_cue
 45705 ;; This function uses a non-reentrant model
 45706 ;;
 45707                           
 45708                           	psect	text188
 45709  015DBC                     __ptext188:
 45710                           	opt stack 0
 45711  015DBC                     _motor_items_in_cue:
 45712                           	opt stack 19
 45713                           
 45714                           ;motor.c: 610: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 45715                           
 45716                           ;incstack = 0
 45717  015DBC  0101               	movlb	1	; () banked
 45718  015DBE  514D               	movf	_motor_cue_read_index& (0+255),w,b
 45719  015DC0  0800               	sublw	0
 45720  015DC2  254C               	addwf	_motor_cue_write_index& (0+255),w,b
 45721  015DC4  0B07               	andlw	7
 45722  015DC6  0012               	return	
 45723  015DC8                     __end_of_motor_items_in_cue:
 45724                           	opt stack 0
 45725                           tosu	equ	0xFFF
 45726                           tosh	equ	0xFFE
 45727                           tosl	equ	0xFFD
 45728                           pclath	equ	0xFFA
 45729                           tblptru	equ	0xFF8
 45730                           tblptrh	equ	0xFF7
 45731                           tblptrl	equ	0xFF6
 45732                           tablat	equ	0xFF5
 45733                           prodh	equ	0xFF4
 45734                           prodl	equ	0xFF3
 45735                           intcon	equ	0xFF2
 45736                           indf0	equ	0xFEF
 45737                           postinc0	equ	0xFEE
 45738                           fsr0h	equ	0xFEA
 45739                           fsr0l	equ	0xFE9
 45740                           wreg	equ	0xFE8
 45741                           indf1	equ	0xFE7
 45742                           postinc1	equ	0xFE6
 45743                           postdec1	equ	0xFE5
 45744                           plusw1	equ	0xFE3
 45745                           fsr1h	equ	0xFE2
 45746                           fsr1l	equ	0xFE1
 45747                           indf2	equ	0xFDF
 45748                           postinc2	equ	0xFDE
 45749                           postdec2	equ	0xFDD
 45750                           plusw2	equ	0xFDB
 45751                           fsr2h	equ	0xFDA
 45752                           fsr2l	equ	0xFD9
 45753                           status	equ	0xFD8
 45754                           
 45755 ;; *************** function __motor_distance_to_limit *****************
 45756 ;; Defined at:
 45757 ;;		line 448 in file "motor.c"
 45758 ;; Parameters:    Size  Location     Type
 45759 ;;  direction       1    wreg     enum E6622
 45760 ;; Auto vars:     Size  Location     Type
 45761 ;;  direction       1   24[BANK0 ] enum E6622
 45762 ;;  absolute_pos    4   25[BANK0 ] long 
 45763 ;;  distance_to_    4   20[BANK0 ] long 
 45764 ;; Return value:  Size  Location     Type
 45765 ;;                  4   12[BANK0 ] long 
 45766 ;; Registers used:
 45767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45768 ;; Tracked objects:
 45769 ;;		On entry : 0/0
 45770 ;;		On exit  : 0/0
 45771 ;;		Unchanged: 0/0
 45772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45773 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45774 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45775 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45776 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45777 ;;Total ram usage:       17 bytes
 45778 ;; Hardware stack levels used:    1
 45779 ;; Hardware stack levels required when called:   11
 45780 ;; This function calls:
 45781 ;;		___lmul
 45782 ;; This function is called by:
 45783 ;;		__motor_move_steps
 45784 ;;		__motor_decide_direction
 45785 ;; This function uses a non-reentrant model
 45786 ;;
 45787                           
 45788                           	psect	text189
 45789  00FE20                     __ptext189:
 45790                           	opt stack 0
 45791  00FE20                     __motor_distance_to_limit:
 45792                           	opt stack 16
 45793                           
 45794                           ; BSR set to: 1
 45795                           ;incstack = 0
 45796                           ;__motor_distance_to_limit@direction stored from wreg
 45797  00FE20  0100               	movlb	0	; () banked
 45798  00FE22  6F78               	movwf	__motor_distance_to_limit@direction& (0+255),b
 45799                           
 45800                           ;motor.c: 451: int32_t absolute_position_in_steps;;motor.c: 452: int32_t distance_to_lim
      +                          it_in_steps;;motor.c: 455: if(direction==MOTOR_DIRECTION_CCW && config.use_ccw_limit==0)
 45801  00FE24  0100               	movlb	0	; () banked
 45802  00FE26  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 45803  00FE28  A4D8               	btfss	status,2,c
 45804  00FE2A  D00E               	goto	l2513
 45805                           
 45806                           ; BSR set to: 0
 45807  00FE2C  0101               	movlb	1	; () banked
 45808  00FE2E  51B6               	movf	(_config+31)& (0+255),w,b
 45809  00FE30  A4D8               	btfss	status,2,c
 45810  00FE32  D00A               	goto	l2513
 45811                           
 45812                           ; BSR set to: 1
 45813                           ;motor.c: 456: {;motor.c: 457: return 2147483647;
 45814  00FE34  0EFF               	movlw	255
 45815  00FE36  0100               	movlb	0	; () banked
 45816  00FE38  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 45817  00FE3A  0EFF               	movlw	255
 45818  00FE3C  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 45819  00FE3E  0EFF               	movlw	255
 45820  00FE40  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 45821  00FE42  0E7F               	movlw	127
 45822  00FE44  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 45823                           
 45824                           ; BSR set to: 0
 45825  00FE46  0012               	return	
 45826  00FE48                     l2513:
 45827                           
 45828                           ;motor.c: 458: };motor.c: 459: if(direction==MOTOR_DIRECTION_CW && config.use_cw_limit==
      +                          0)
 45829                           
 45830                           ; BSR set to: 0
 45831  00FE48  0100               	movlb	0	; () banked
 45832  00FE4A  0578               	decf	__motor_distance_to_limit@direction& (0+255),w,b
 45833  00FE4C  A4D8               	btfss	status,2,c
 45834  00FE4E  D00E               	goto	l2515
 45835                           
 45836                           ; BSR set to: 0
 45837  00FE50  0101               	movlb	1	; () banked
 45838  00FE52  51AD               	movf	(_config+22)& (0+255),w,b
 45839  00FE54  A4D8               	btfss	status,2,c
 45840  00FE56  D00A               	goto	l2515
 45841                           
 45842                           ; BSR set to: 1
 45843                           ;motor.c: 460: {;motor.c: 461: return 2147483647;
 45844  00FE58  0EFF               	movlw	255
 45845  00FE5A  0100               	movlb	0	; () banked
 45846  00FE5C  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 45847  00FE5E  0EFF               	movlw	255
 45848  00FE60  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 45849  00FE62  0EFF               	movlw	255
 45850  00FE64  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 45851  00FE66  0E7F               	movlw	127
 45852  00FE68  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 45853                           
 45854                           ; BSR set to: 0
 45855  00FE6A  0012               	return	
 45856  00FE6C                     l2515:
 45857                           
 45858                           ;motor.c: 462: };motor.c: 465: absolute_position_in_steps = os.absolute_position;
 45859                           
 45860                           ; BSR set to: 0
 45861  00FE6C  EE21  F071         	lfsr	2,_os+11	;volatile
 45862  00FE70  CFDE F079          	movff	postinc2,__motor_distance_to_limit@absolute_position_in_steps
 45863  00FE74  CFDD F07A          	movff	postdec2,__motor_distance_to_limit@absolute_position_in_steps+1
 45864  00FE78  0100               	movlb	0	; () banked
 45865  00FE7A  0E00               	movlw	0
 45866  00FE7C  BF7A               	btfsc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),7,b
 45867  00FE7E  0EFF               	movlw	-1
 45868  00FE80  6F7B               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),b
 45869  00FE82  6F7C               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),b
 45870                           
 45871                           ; BSR set to: 0
 45872                           ;motor.c: 466: absolute_position_in_steps *= config.full_circle_in_steps;
 45873  00FE84  C079  F060         	movff	__motor_distance_to_limit@absolute_position_in_steps,___lmul@multiplier
 45874  00FE88  C07A  F061         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,___lmul@multiplier+1
 45875  00FE8C  C07B  F062         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,___lmul@multiplier+2
 45876  00FE90  C07C  F063         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,___lmul@multiplier+3
 45877  00FE94  C197  F064         	movff	_config,___lmul@multiplicand
 45878  00FE98  C198  F065         	movff	_config+1,___lmul@multiplicand+1
 45879  00FE9C  C199  F066         	movff	_config+2,___lmul@multiplicand+2
 45880  00FEA0  C19A  F067         	movff	_config+3,___lmul@multiplicand+3
 45881  00FEA4  EC3F  F0A6         	call	___lmul	;wreg free
 45882  00FEA8  C060  F079         	movff	?___lmul,__motor_distance_to_limit@absolute_position_in_steps
 45883  00FEAC  C061  F07A         	movff	?___lmul+1,__motor_distance_to_limit@absolute_position_in_steps+1
 45884  00FEB0  C062  F07B         	movff	?___lmul+2,__motor_distance_to_limit@absolute_position_in_steps+2
 45885  00FEB4  C063  F07C         	movff	?___lmul+3,__motor_distance_to_limit@absolute_position_in_steps+3
 45886                           
 45887                           ;motor.c: 467: absolute_position_in_steps += os.current_position_in_steps;
 45888  00FEB8  EE21  F06D         	lfsr	2,_os+7	;volatile
 45889  00FEBC  50DE               	movf	postinc2,w,c
 45890  00FEBE  0100               	movlb	0	; () banked
 45891  00FEC0  2779               	addwf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),f,b
 45892  00FEC2  50DE               	movf	postinc2,w,c
 45893  00FEC4  237A               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),f,b
 45894  00FEC6  50DE               	movf	postinc2,w,c
 45895  00FEC8  237B               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),f,b
 45896  00FECA  50DD               	movf	postdec2,w,c
 45897  00FECC  237C               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),f,b
 45898                           
 45899                           ; BSR set to: 0
 45900                           ;motor.c: 470: if(direction==MOTOR_DIRECTION_CCW)
 45901  00FECE  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 45902  00FED0  A4D8               	btfss	status,2,c
 45903  00FED2  D01C               	goto	l2516
 45904                           
 45905                           ; BSR set to: 0
 45906                           ;motor.c: 471: {;motor.c: 472: distance_to_limit_in_steps = absolute_position_in_steps -
      +                           config.ccw_limit_in_steps;
 45907  00FED4  C1BB  F070         	movff	_config+36,??__motor_distance_to_limit
 45908  00FED8  C1BC  F071         	movff	_config+37,??__motor_distance_to_limit+1
 45909  00FEDC  C1BD  F072         	movff	_config+38,??__motor_distance_to_limit+2
 45910  00FEE0  C1BE  F073         	movff	_config+39,??__motor_distance_to_limit+3
 45911  00FEE4  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 45912  00FEE6  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 45913  00FEE8  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 45914  00FEEA  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 45915  00FEEC  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 45916  00FEEE  0E00               	movlw	0
 45917  00FEF0  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 45918  00FEF2  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 45919  00FEF4  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 45920  00FEF6  5179               	movf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),w,b
 45921  00FEF8  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 45922  00FEFA  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 45923  00FEFC  517A               	movf	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),w,b
 45924  00FEFE  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 45925  00FF00  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 45926  00FF02  517B               	movf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),w,b
 45927  00FF04  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 45928  00FF06  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 45929  00FF08  517C               	movf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),w,b
 45930  00FF0A  D023               	goto	L69
 45931  00FF0C                     l2516:
 45932                           
 45933                           ; BSR set to: 0
 45934                           ;motor.c: 474: else;motor.c: 475: {;motor.c: 476: distance_to_limit_in_steps = config.cw
      +                          _limit_in_steps - absolute_position_in_steps;
 45935                           
 45936                           ; BSR set to: 0
 45937  00FF0C  C079  F070         	movff	__motor_distance_to_limit@absolute_position_in_steps,??__motor_distance_to_limit
 45938  00FF10  C07A  F071         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,??__motor_distance_to_limi
      +                          t+1
 45939  00FF14  C07B  F072         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,??__motor_distance_to_limi
      +                          t+2
 45940  00FF18  C07C  F073         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,??__motor_distance_to_limi
      +                          t+3
 45941  00FF1C  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 45942  00FF1E  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 45943  00FF20  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 45944  00FF22  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 45945  00FF24  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 45946  00FF26  0E00               	movlw	0
 45947  00FF28  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 45948  00FF2A  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 45949  00FF2C  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 45950  00FF2E  0101               	movlb	1	; () banked
 45951  00FF30  51B2               	movf	(_config+27)& (0+255),w,b
 45952  00FF32  0100               	movlb	0	; () banked
 45953  00FF34  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 45954  00FF36  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 45955  00FF38  0101               	movlb	1	; () banked
 45956  00FF3A  51B3               	movf	(_config+28)& (0+255),w,b
 45957  00FF3C  0100               	movlb	0	; () banked
 45958  00FF3E  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 45959  00FF40  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 45960  00FF42  0101               	movlb	1	; () banked
 45961  00FF44  51B4               	movf	(_config+29)& (0+255),w,b
 45962  00FF46  0100               	movlb	0	; () banked
 45963  00FF48  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 45964  00FF4A  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 45965  00FF4C  0101               	movlb	1	; () banked
 45966  00FF4E  51B5               	movf	(_config+30)& (0+255),w,b
 45967  00FF50  0100               	movlb	0	; () banked
 45968  00FF52                     L69:
 45969  00FF52  2173               	addwfc	(??__motor_distance_to_limit+3)& (0+255),w,b
 45970  00FF54  6F77               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+3)& (0+255),b
 45971                           
 45972                           ; BSR set to: 0
 45973                           ;motor.c: 477: };motor.c: 479: return distance_to_limit_in_steps;
 45974                           
 45975                           ; BSR set to: 0
 45976  00FF56  C074  F06C         	movff	__motor_distance_to_limit@distance_to_limit_in_steps,?__motor_distance_to_limit
 45977  00FF5A  C075  F06D         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+1,?__motor_distance_to_limit
      +                          +1
 45978  00FF5E  C076  F06E         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+2,?__motor_distance_to_limit
      +                          +2
 45979  00FF62  C077  F06F         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+3,?__motor_distance_to_limit
      +                          +3
 45980  00FF66  0012               	return	
 45981  00FF68                     __end_of__motor_distance_to_limit:
 45982                           	opt stack 0
 45983                           tosu	equ	0xFFF
 45984                           tosh	equ	0xFFE
 45985                           tosl	equ	0xFFD
 45986                           pclath	equ	0xFFA
 45987                           tblptru	equ	0xFF8
 45988                           tblptrh	equ	0xFF7
 45989                           tblptrl	equ	0xFF6
 45990                           tablat	equ	0xFF5
 45991                           prodh	equ	0xFF4
 45992                           prodl	equ	0xFF3
 45993                           intcon	equ	0xFF2
 45994                           indf0	equ	0xFEF
 45995                           postinc0	equ	0xFEE
 45996                           fsr0h	equ	0xFEA
 45997                           fsr0l	equ	0xFE9
 45998                           wreg	equ	0xFE8
 45999                           indf1	equ	0xFE7
 46000                           postinc1	equ	0xFE6
 46001                           postdec1	equ	0xFE5
 46002                           plusw1	equ	0xFE3
 46003                           fsr1h	equ	0xFE2
 46004                           fsr1l	equ	0xFE1
 46005                           indf2	equ	0xFDF
 46006                           postinc2	equ	0xFDE
 46007                           postdec2	equ	0xFDD
 46008                           plusw2	equ	0xFDB
 46009                           fsr2h	equ	0xFDA
 46010                           fsr2l	equ	0xFD9
 46011                           status	equ	0xFD8
 46012                           
 46013 ;; *************** function ___lmul *****************
 46014 ;; Defined at:
 46015 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 46016 ;; Parameters:    Size  Location     Type
 46017 ;;  multiplier      4    0[BANK0 ] unsigned long 
 46018 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 46019 ;; Auto vars:     Size  Location     Type
 46020 ;;  product         4    8[BANK0 ] unsigned long 
 46021 ;; Return value:  Size  Location     Type
 46022 ;;                  4    0[BANK0 ] unsigned long 
 46023 ;; Registers used:
 46024 ;;		wreg, status,2, status,0
 46025 ;; Tracked objects:
 46026 ;;		On entry : 0/0
 46027 ;;		On exit  : 0/0
 46028 ;;		Unchanged: 0/0
 46029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46030 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46031 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46033 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46034 ;;Total ram usage:       12 bytes
 46035 ;; Hardware stack levels used:    1
 46036 ;; Hardware stack levels required when called:   10
 46037 ;; This function calls:
 46038 ;;		Nothing
 46039 ;; This function is called by:
 46040 ;;		__motor_distance_to_limit
 46041 ;;		__motor_get_speed_in_degrees
 46042 ;;		_atol
 46043 ;; This function uses a non-reentrant model
 46044 ;;
 46045                           
 46046                           	psect	text190
 46047  014C7E                     __ptext190:
 46048                           	opt stack 0
 46049  014C7E                     ___lmul:
 46050                           	opt stack 16
 46051                           
 46052                           ; BSR set to: 0
 46053                           ;incstack = 0
 46054  014C7E  0E00               	movlw	0
 46055  014C80  0100               	movlb	0	; () banked
 46056  014C82  6F68               	movwf	___lmul@product& (0+255),b
 46057  014C84  0E00               	movlw	0
 46058  014C86  6F69               	movwf	(___lmul@product+1)& (0+255),b
 46059  014C88  0E00               	movlw	0
 46060  014C8A  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 46061  014C8C  0E00               	movlw	0
 46062  014C8E  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 46063  014C90                     
 46064                           ; BSR set to: 0
 46065                           
 46066                           ; BSR set to: 0
 46067  014C90  A160               	btfss	___lmul@multiplier& (0+255),0,b
 46068  014C92  D008               	goto	l3090
 46069                           
 46070                           ; BSR set to: 0
 46071  014C94  5164               	movf	___lmul@multiplicand& (0+255),w,b
 46072  014C96  2768               	addwf	___lmul@product& (0+255),f,b
 46073  014C98  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 46074  014C9A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 46075  014C9C  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 46076  014C9E  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 46077  014CA0  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 46078  014CA2  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 46079  014CA4                     l3090:
 46080                           
 46081                           ; BSR set to: 0
 46082                           
 46083                           ; BSR set to: 0
 46084  014CA4  90D8               	bcf	status,0,c
 46085  014CA6  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 46086  014CA8  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 46087  014CAA  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 46088  014CAC  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 46089                           
 46090                           ; BSR set to: 0
 46091  014CAE  90D8               	bcf	status,0,c
 46092  014CB0  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 46093  014CB2  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 46094  014CB4  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 46095  014CB6  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 46096  014CB8  5160               	movf	___lmul@multiplier& (0+255),w,b
 46097  014CBA  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 46098  014CBC  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 46099  014CBE  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 46100  014CC0  A4D8               	btfss	status,2,c
 46101  014CC2  D7E6               	goto	l3089
 46102                           
 46103                           ; BSR set to: 0
 46104  014CC4  C068  F060         	movff	___lmul@product,?___lmul
 46105  014CC8  C069  F061         	movff	___lmul@product+1,?___lmul+1
 46106  014CCC  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 46107  014CD0  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 46108                           
 46109                           ; BSR set to: 0
 46110  014CD4  0012               	return		;funcret
 46111  014CD6                     __end_of___lmul:
 46112                           	opt stack 0
 46113                           tosu	equ	0xFFF
 46114                           tosh	equ	0xFFE
 46115                           tosl	equ	0xFFD
 46116                           pclath	equ	0xFFA
 46117                           tblptru	equ	0xFF8
 46118                           tblptrh	equ	0xFF7
 46119                           tblptrl	equ	0xFF6
 46120                           tablat	equ	0xFF5
 46121                           prodh	equ	0xFF4
 46122                           prodl	equ	0xFF3
 46123                           intcon	equ	0xFF2
 46124                           indf0	equ	0xFEF
 46125                           postinc0	equ	0xFEE
 46126                           fsr0h	equ	0xFEA
 46127                           fsr0l	equ	0xFE9
 46128                           wreg	equ	0xFE8
 46129                           indf1	equ	0xFE7
 46130                           postinc1	equ	0xFE6
 46131                           postdec1	equ	0xFE5
 46132                           plusw1	equ	0xFE3
 46133                           fsr1h	equ	0xFE2
 46134                           fsr1l	equ	0xFE1
 46135                           indf2	equ	0xFDF
 46136                           postinc2	equ	0xFDE
 46137                           postdec2	equ	0xFDD
 46138                           plusw2	equ	0xFDB
 46139                           fsr2h	equ	0xFDA
 46140                           fsr2l	equ	0xFD9
 46141                           status	equ	0xFD8
 46142                           
 46143 ;; *************** function _USBTransferOnePacket *****************
 46144 ;; Defined at:
 46145 ;;		line 995 in file "usb_device.c"
 46146 ;; Parameters:    Size  Location     Type
 46147 ;;  ep              1    wreg     unsigned char 
 46148 ;;  dir             1    0[BANK0 ] unsigned char 
 46149 ;;  data            2    1[BANK0 ] PTR unsigned char 
 46150 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 46151 ;;		 -> msd_cbw(31), NULL(0), 
 46152 ;;  len             1    3[BANK0 ] unsigned char 
 46153 ;; Auto vars:     Size  Location     Type
 46154 ;;  ep              1    8[BANK0 ] unsigned char 
 46155 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 46156 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46157 ;; Return value:  Size  Location     Type
 46158 ;;                  2    0[BANK0 ] PTR void 
 46159 ;; Registers used:
 46160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46161 ;; Tracked objects:
 46162 ;;		On entry : 0/0
 46163 ;;		On exit  : 0/0
 46164 ;;		Unchanged: 0/0
 46165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46167 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46168 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46169 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46170 ;;Total ram usage:       11 bytes
 46171 ;; Hardware stack levels used:    1
 46172 ;; Hardware stack levels required when called:   10
 46173 ;; This function calls:
 46174 ;;		Nothing
 46175 ;; This function is called by:
 46176 ;;		_MSDTasks
 46177 ;;		_MSDProcessCommandMediaPresent
 46178 ;;		_MSDReadHandler
 46179 ;;		_MSDWriteHandler
 46180 ;;		_APP_DeviceCustomHIDTasks
 46181 ;; This function uses a non-reentrant model
 46182 ;;
 46183                           
 46184                           	psect	text191
 46185  01130E                     __ptext191:
 46186                           	opt stack 0
 46187  01130E                     _USBTransferOnePacket:
 46188                           	opt stack 18
 46189                           
 46190                           ; BSR set to: 0
 46191                           ;incstack = 0
 46192                           ;USBTransferOnePacket@ep stored from wreg
 46193  01130E  0100               	movlb	0	; () banked
 46194  011310  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 46195                           
 46196                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 46197  011312  0100               	movlb	0	; () banked
 46198  011314  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46199  011316  B4D8               	btfsc	status,2,c
 46200  011318  D007               	goto	l184
 46201                           
 46202                           ; BSR set to: 0
 46203                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 46204  01131A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46205  01131C  0D02               	mullw	2
 46206  01131E  0E09               	movlw	low _pBDTEntryIn
 46207  011320  24F3               	addwf	prodl,w,c
 46208  011322  6ED9               	movwf	fsr2l,c
 46209  011324  0E01               	movlw	high _pBDTEntryIn
 46210  011326  D006               	goto	L70
 46211  011328                     l184:
 46212                           
 46213                           ; BSR set to: 0
 46214                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 46215                           
 46216                           ; BSR set to: 0
 46217  011328  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46218  01132A  0D02               	mullw	2
 46219  01132C  0E0F               	movlw	low _pBDTEntryOut
 46220  01132E  24F3               	addwf	prodl,w,c
 46221  011330  6ED9               	movwf	fsr2l,c
 46222  011332  0E01               	movlw	high _pBDTEntryOut
 46223  011334                     L70:
 46224  011334  20F4               	addwfc	prodh,w,c
 46225  011336  6EDA               	movwf	fsr2h,c
 46226  011338  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 46227  01133C  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 46228                           
 46229                           ; BSR set to: 0
 46230                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 46231                           
 46232                           ; BSR set to: 0
 46233  011340  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46234  011342  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46235  011344  A4D8               	btfss	status,2,c
 46236  011346  D005               	goto	l186
 46237                           
 46238                           ; BSR set to: 0
 46239                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 46240  011348  0E00               	movlw	0
 46241  01134A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 46242  01134C  0E00               	movlw	0
 46243  01134E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 46244                           
 46245                           ; BSR set to: 0
 46246  011350  0012               	return	
 46247  011352                     l186:
 46248                           
 46249                           ; BSR set to: 0
 46250                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 46251                           
 46252                           ; BSR set to: 0
 46253  011352  EE20 F002          	lfsr	2,2
 46254  011356  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46255  011358  26D9               	addwf	fsr2l,f,c
 46256  01135A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46257  01135C  22DA               	addwfc	fsr2h,f,c
 46258  01135E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 46259  011362  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 46260                           
 46261                           ;usb_device.c: 1030: handle->CNT = len;
 46262  011366  EE20 F001          	lfsr	2,1
 46263  01136A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46264  01136C  26D9               	addwf	fsr2l,f,c
 46265  01136E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46266  011370  22DA               	addwfc	fsr2h,f,c
 46267  011372  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 46268                           
 46269                           ; BSR set to: 0
 46270                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 46271  011376  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46272  01137A  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46273  01137E  0E40               	movlw	64
 46274  011380  16DF               	andwf	indf2,f,c
 46275                           
 46276                           ; BSR set to: 0
 46277                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 46278  011382  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46279  011386  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46280  01138A  0E00               	movlw	0
 46281  01138C  86DB               	bsf	plusw2,3,c
 46282                           
 46283                           ; BSR set to: 0
 46284                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 46285  01138E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46286  011392  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46287  011396  0E00               	movlw	0
 46288  011398  8EDB               	bsf	plusw2,7,c
 46289                           
 46290                           ; BSR set to: 0
 46291                           ;usb_device.c: 1036: if(dir != 0)
 46292  01139A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46293  01139C  B4D8               	btfsc	status,2,c
 46294  01139E  D018               	goto	l188
 46295                           
 46296                           ; BSR set to: 0
 46297                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 46298  0113A0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46299  0113A2  0D02               	mullw	2
 46300  0113A4  0E09               	movlw	low _pBDTEntryIn
 46301  0113A6  24F3               	addwf	prodl,w,c
 46302  0113A8  6ED9               	movwf	fsr2l,c
 46303  0113AA  0E01               	movlw	high _pBDTEntryIn
 46304  0113AC  20F4               	addwfc	prodh,w,c
 46305  0113AE  6EDA               	movwf	fsr2h,c
 46306  0113B0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46307  0113B4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46308  0113B8  0E04               	movlw	4
 46309  0113BA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46310  0113BC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46311  0113BE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46312  0113C0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46313  0113C2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46314  0113C4  0D02               	mullw	2
 46315  0113C6  0E09               	movlw	low _pBDTEntryIn
 46316  0113C8  24F3               	addwf	prodl,w,c
 46317  0113CA  6ED9               	movwf	fsr2l,c
 46318  0113CC  0E01               	movlw	high _pBDTEntryIn
 46319  0113CE  D017               	goto	L71
 46320  0113D0                     l188:
 46321                           
 46322                           ; BSR set to: 0
 46323                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 46324                           
 46325                           ; BSR set to: 0
 46326  0113D0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46327  0113D2  0D02               	mullw	2
 46328  0113D4  0E0F               	movlw	low _pBDTEntryOut
 46329  0113D6  24F3               	addwf	prodl,w,c
 46330  0113D8  6ED9               	movwf	fsr2l,c
 46331  0113DA  0E01               	movlw	high _pBDTEntryOut
 46332  0113DC  20F4               	addwfc	prodh,w,c
 46333  0113DE  6EDA               	movwf	fsr2h,c
 46334  0113E0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46335  0113E4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46336  0113E8  0E04               	movlw	4
 46337  0113EA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46338  0113EC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46339  0113EE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46340  0113F0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46341  0113F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46342  0113F4  0D02               	mullw	2
 46343  0113F6  0E0F               	movlw	low _pBDTEntryOut
 46344  0113F8  24F3               	addwf	prodl,w,c
 46345  0113FA  6ED9               	movwf	fsr2l,c
 46346  0113FC  0E01               	movlw	high _pBDTEntryOut
 46347  0113FE                     L71:
 46348  0113FE  20F4               	addwfc	prodh,w,c
 46349  011400  6EDA               	movwf	fsr2h,c
 46350  011402  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 46351  011406  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 46352                           
 46353                           ; BSR set to: 0
 46354                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 46355                           
 46356                           ; BSR set to: 0
 46357  01140A  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 46358  01140E  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 46359  011412  0012               	return	
 46360  011414                     __end_of_USBTransferOnePacket:
 46361                           	opt stack 0
 46362                           tosu	equ	0xFFF
 46363                           tosh	equ	0xFFE
 46364                           tosl	equ	0xFFD
 46365                           pclath	equ	0xFFA
 46366                           tblptru	equ	0xFF8
 46367                           tblptrh	equ	0xFF7
 46368                           tblptrl	equ	0xFF6
 46369                           tablat	equ	0xFF5
 46370                           prodh	equ	0xFF4
 46371                           prodl	equ	0xFF3
 46372                           intcon	equ	0xFF2
 46373                           indf0	equ	0xFEF
 46374                           postinc0	equ	0xFEE
 46375                           fsr0h	equ	0xFEA
 46376                           fsr0l	equ	0xFE9
 46377                           wreg	equ	0xFE8
 46378                           indf1	equ	0xFE7
 46379                           postinc1	equ	0xFE6
 46380                           postdec1	equ	0xFE5
 46381                           plusw1	equ	0xFE3
 46382                           fsr1h	equ	0xFE2
 46383                           fsr1l	equ	0xFE1
 46384                           indf2	equ	0xFDF
 46385                           postinc2	equ	0xFDE
 46386                           postdec2	equ	0xFDD
 46387                           plusw2	equ	0xFDB
 46388                           fsr2h	equ	0xFDA
 46389                           fsr2l	equ	0xFD9
 46390                           status	equ	0xFD8
 46391                           
 46392 ;; *************** function _SYS_InterruptHigh *****************
 46393 ;; Defined at:
 46394 ;;		line 162 in file "system.c"
 46395 ;; Parameters:    Size  Location     Type
 46396 ;;		None
 46397 ;; Auto vars:     Size  Location     Type
 46398 ;;		None
 46399 ;; Return value:  Size  Location     Type
 46400 ;;                  1    wreg      void 
 46401 ;; Registers used:
 46402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 46403 ;; Tracked objects:
 46404 ;;		On entry : 0/0
 46405 ;;		On exit  : 0/0
 46406 ;;		Unchanged: 0/0
 46407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46410 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46411 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46412 ;;Total ram usage:       14 bytes
 46413 ;; Hardware stack levels used:    1
 46414 ;; Hardware stack levels required when called:    9
 46415 ;; This function calls:
 46416 ;;		_USBDeviceTasks
 46417 ;;		_motor_isr
 46418 ;;		_tmr0_isr
 46419 ;; This function is called by:
 46420 ;;		Interrupt level 2
 46421 ;; This function uses a non-reentrant model
 46422 ;;
 46423                           
 46424                           	psect	intcode
 46425  009008                     __pintcode:
 46426                           	opt stack 0
 46427  009008                     _SYS_InterruptHigh:
 46428                           	opt stack 9
 46429                           
 46430                           ; BSR set to: 0
 46431                           ;incstack = 0
 46432  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 46433  00900A  CFFA F045          	movff	pclath,??_SYS_InterruptHigh
 46434  00900E  CFFB F046          	movff	pclatu,??_SYS_InterruptHigh+1
 46435  009012  CFE9 F047          	movff	fsr0l,??_SYS_InterruptHigh+2
 46436  009016  CFEA F048          	movff	fsr0h,??_SYS_InterruptHigh+3
 46437  00901A  CFE1 F049          	movff	fsr1l,??_SYS_InterruptHigh+4
 46438  00901E  CFE2 F04A          	movff	fsr1h,??_SYS_InterruptHigh+5
 46439  009022  CFD9 F04B          	movff	fsr2l,??_SYS_InterruptHigh+6
 46440  009026  CFDA F04C          	movff	fsr2h,??_SYS_InterruptHigh+7
 46441  00902A  CFF3 F04D          	movff	prodl,??_SYS_InterruptHigh+8
 46442  00902E  CFF4 F04E          	movff	prodh,??_SYS_InterruptHigh+9
 46443  009032  CFF6 F04F          	movff	tblptrl,??_SYS_InterruptHigh+10
 46444  009036  CFF7 F050          	movff	tblptrh,??_SYS_InterruptHigh+11
 46445  00903A  CFF8 F051          	movff	tblptru,??_SYS_InterruptHigh+12
 46446  00903E  CFF5 F052          	movff	tablat,??_SYS_InterruptHigh+13
 46447                           
 46448                           ;system.c: 165: USBDeviceTasks();
 46449  009042  ECB4  F07F         	call	_USBDeviceTasks	;wreg free
 46450                           
 46451                           ;system.c: 169: if(PIR1bits.TMR2IF)
 46452  009046  B29E               	btfsc	3998,1,c	;volatile
 46453                           
 46454                           ;system.c: 170: {;system.c: 171: motor_isr();
 46455  009048  ECDF  F05B         	call	_motor_isr	;wreg free
 46456                           
 46457                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 46458  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 46459                           
 46460                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 46461  00904E  ECF8  F0AA         	call	_tmr0_isr	;wreg free
 46462  009052  C052  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 46463  009056  C051  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 46464  00905A  C050  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 46465  00905E  C04F  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 46466  009062  C04E  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 46467  009066  C04D  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 46468  00906A  C04C  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 46469  00906E  C04B  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 46470  009072  C04A  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 46471  009076  C049  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 46472  00907A  C048  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 46473  00907E  C047  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 46474  009082  C046  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 46475  009086  C045  FFFA         	movff	??_SYS_InterruptHigh,pclath
 46476  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 46477  00908C  0011               	retfie		f
 46478  00908E                     __end_of_SYS_InterruptHigh:
 46479                           	opt stack 0
 46480                           tosu	equ	0xFFF
 46481                           tosh	equ	0xFFE
 46482                           tosl	equ	0xFFD
 46483                           pclatu	equ	0xFFB
 46484                           pclath	equ	0xFFA
 46485                           tblptru	equ	0xFF8
 46486                           tblptrh	equ	0xFF7
 46487                           tblptrl	equ	0xFF6
 46488                           tablat	equ	0xFF5
 46489                           prodh	equ	0xFF4
 46490                           prodl	equ	0xFF3
 46491                           intcon	equ	0xFF2
 46492                           indf0	equ	0xFEF
 46493                           postinc0	equ	0xFEE
 46494                           fsr0h	equ	0xFEA
 46495                           fsr0l	equ	0xFE9
 46496                           wreg	equ	0xFE8
 46497                           indf1	equ	0xFE7
 46498                           postinc1	equ	0xFE6
 46499                           postdec1	equ	0xFE5
 46500                           plusw1	equ	0xFE3
 46501                           fsr1h	equ	0xFE2
 46502                           fsr1l	equ	0xFE1
 46503                           indf2	equ	0xFDF
 46504                           postinc2	equ	0xFDE
 46505                           postdec2	equ	0xFDD
 46506                           plusw2	equ	0xFDB
 46507                           fsr2h	equ	0xFDA
 46508                           fsr2l	equ	0xFD9
 46509                           status	equ	0xFD8
 46510                           
 46511 ;; *************** function _tmr0_isr *****************
 46512 ;; Defined at:
 46513 ;;		line 24 in file "os.c"
 46514 ;; Parameters:    Size  Location     Type
 46515 ;;		None
 46516 ;; Auto vars:     Size  Location     Type
 46517 ;;		None
 46518 ;; Return value:  Size  Location     Type
 46519 ;;                  1    wreg      void 
 46520 ;; Registers used:
 46521 ;;		wreg, status,2, status,0, cstack
 46522 ;; Tracked objects:
 46523 ;;		On entry : 0/0
 46524 ;;		On exit  : 0/0
 46525 ;;		Unchanged: 0/0
 46526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46531 ;;Total ram usage:        0 bytes
 46532 ;; Hardware stack levels used:    1
 46533 ;; Hardware stack levels required when called:    1
 46534 ;; This function calls:
 46535 ;;		_encoder_run
 46536 ;; This function is called by:
 46537 ;;		_SYS_InterruptHigh
 46538 ;; This function uses a non-reentrant model
 46539 ;;
 46540                           
 46541                           	psect	text193
 46542  0155F0                     __ptext193:
 46543                           	opt stack 0
 46544  0155F0                     _tmr0_isr:
 46545                           	opt stack 16
 46546                           
 46547                           ;os.c: 27: if(INTCONbits.T0IF)
 46548                           
 46549                           ;incstack = 0
 46550  0155F0  A4F2               	btfss	intcon,2,c	;volatile
 46551  0155F2  0012               	return	
 46552                           
 46553                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 46554  0155F4  0EFA               	movlw	250
 46555  0155F6  6ED7               	movwf	4055,c	;volatile
 46556                           
 46557                           ;os.c: 31: TMR0L = 0x24;
 46558  0155F8  0E24               	movlw	36
 46559  0155FA  6ED6               	movwf	4054,c	;volatile
 46560                           
 46561                           ;os.c: 34: INTCONbits.T0IF = 0;
 46562  0155FC  94F2               	bcf	intcon,2,c	;volatile
 46563                           
 46564                           ;os.c: 37: encoder_run();
 46565  0155FE  EC84  F08D         	call	_encoder_run	;wreg free
 46566                           
 46567                           ;os.c: 40: ++os.subTimeSlot;
 46568  015602  0101               	movlb	1	; () banked
 46569  015604  2B66               	incf	_os& (0+255),f,b	;volatile
 46570                           
 46571                           ; BSR set to: 1
 46572                           ;os.c: 41: if(os.subTimeSlot>=10)
 46573  015606  0E09               	movlw	9
 46574  015608  6566               	cpfsgt	_os& (0+255),b	;volatile
 46575  01560A  0012               	return	
 46576                           
 46577                           ; BSR set to: 1
 46578                           ;os.c: 42: {;os.c: 43: if(os.done)
 46579  01560C  5168               	movf	(_os+2)& (0+255),w,b	;volatile
 46580  01560E  B4D8               	btfsc	status,2,c
 46581  015610  0012               	return	
 46582                           
 46583                           ; BSR set to: 1
 46584                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 46585  015612  2B67               	incf	(_os+1)& (0+255),f,b	;volatile
 46586                           
 46587                           ; BSR set to: 1
 46588                           ;os.c: 46: if(os.timeSlot==16)
 46589  015614  0E10               	movlw	16
 46590  015616  1967               	xorwf	(_os+1)& (0+255),w,b	;volatile
 46591  015618  A4D8               	btfss	status,2,c
 46592  01561A  D002               	goto	i2l1066
 46593                           
 46594                           ; BSR set to: 1
 46595                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 46596  01561C  0E00               	movlw	0
 46597  01561E  6F67               	movwf	(_os+1)& (0+255),b	;volatile
 46598  015620                     i2l1066:
 46599                           
 46600                           ; BSR set to: 1
 46601                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 46602  015620  0E00               	movlw	0
 46603  015622  6F66               	movwf	_os& (0+255),b	;volatile
 46604                           
 46605                           ;os.c: 51: os.done = 0;
 46606  015624  0E00               	movlw	0
 46607  015626  6F68               	movwf	(_os+2)& (0+255),b	;volatile
 46608                           
 46609                           ; BSR set to: 1
 46610                           
 46611                           ; BSR set to: 1
 46612  015628  0012               	return	
 46613  01562A                     __end_of_tmr0_isr:
 46614                           	opt stack 0
 46615                           tosu	equ	0xFFF
 46616                           tosh	equ	0xFFE
 46617                           tosl	equ	0xFFD
 46618                           pclatu	equ	0xFFB
 46619                           pclath	equ	0xFFA
 46620                           tblptru	equ	0xFF8
 46621                           tblptrh	equ	0xFF7
 46622                           tblptrl	equ	0xFF6
 46623                           tablat	equ	0xFF5
 46624                           prodh	equ	0xFF4
 46625                           prodl	equ	0xFF3
 46626                           intcon	equ	0xFF2
 46627                           indf0	equ	0xFEF
 46628                           postinc0	equ	0xFEE
 46629                           fsr0h	equ	0xFEA
 46630                           fsr0l	equ	0xFE9
 46631                           wreg	equ	0xFE8
 46632                           indf1	equ	0xFE7
 46633                           postinc1	equ	0xFE6
 46634                           postdec1	equ	0xFE5
 46635                           plusw1	equ	0xFE3
 46636                           fsr1h	equ	0xFE2
 46637                           fsr1l	equ	0xFE1
 46638                           indf2	equ	0xFDF
 46639                           postinc2	equ	0xFDE
 46640                           postdec2	equ	0xFDD
 46641                           plusw2	equ	0xFDB
 46642                           fsr2h	equ	0xFDA
 46643                           fsr2l	equ	0xFD9
 46644                           status	equ	0xFD8
 46645                           
 46646 ;; *************** function _encoder_run *****************
 46647 ;; Defined at:
 46648 ;;		line 103 in file "encoder.c"
 46649 ;; Parameters:    Size  Location     Type
 46650 ;;		None
 46651 ;; Auto vars:     Size  Location     Type
 46652 ;;		None
 46653 ;; Return value:  Size  Location     Type
 46654 ;;                  1    wreg      void 
 46655 ;; Registers used:
 46656 ;;		wreg, status,2, status,0
 46657 ;; Tracked objects:
 46658 ;;		On entry : 0/0
 46659 ;;		On exit  : 0/0
 46660 ;;		Unchanged: 0/0
 46661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46666 ;;Total ram usage:        0 bytes
 46667 ;; Hardware stack levels used:    1
 46668 ;; This function calls:
 46669 ;;		Nothing
 46670 ;; This function is called by:
 46671 ;;		_tmr0_isr
 46672 ;; This function uses a non-reentrant model
 46673 ;;
 46674                           
 46675                           	psect	text194
 46676  011B08                     __ptext194:
 46677                           	opt stack 0
 46678  011B08                     _encoder_run:
 46679                           	opt stack 16
 46680                           
 46681                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 46682                           
 46683                           ;incstack = 0
 46684  011B08  5084               	movf	3972,w,c	;volatile
 46685  011B0A  0B07               	andlw	7
 46686  011B0C  0101               	movlb	1	; () banked
 46687  011B0E  1948               	xorwf	_enc1& (0+255),w,b
 46688  011B10  B4D8               	btfsc	status,2,c
 46689  011B12  D033               	goto	i2l2745
 46690                           
 46691                           ; BSR set to: 1
 46692                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 46693  011B14  B084               	btfsc	3972,0,c	;volatile
 46694                           
 46695                           ; BSR set to: 1
 46696  011B16  A484               	btfss	3972,2,c	;volatile
 46697  011B18  D00D               	goto	i2l2748
 46698                           
 46699                           ; BSR set to: 1
 46700  011B1A  B148               	btfsc	_enc1& (0+255),0,b
 46701  011B1C  D00B               	goto	i2l2748
 46702                           
 46703                           ; BSR set to: 1
 46704                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 46705  011B1E  0E7F               	movlw	127
 46706  011B20  1969               	xorwf	(_os+3)& (0+255),w,b	;volatile
 46707  011B22  B4D8               	btfsc	status,2,c
 46708  011B24  D007               	goto	i2l2748
 46709                           
 46710                           ; BSR set to: 1
 46711                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 46712  011B26  2B69               	incf	(_os+3)& (0+255),f,b	;volatile
 46713                           
 46714                           ; BSR set to: 1
 46715                           ;encoder.c: 113: if(config.beep_duration)
 46716  011B28  51AC               	movf	(_config+21)& (0+255),w,b
 46717  011B2A  B4D8               	btfsc	status,2,c
 46718  011B2C  D003               	goto	i2l2748
 46719                           
 46720                           ; BSR set to: 1
 46721                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 46722  011B2E  8E8B               	bsf	3979,7,c	;volatile
 46723                           
 46724                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 46725  011B30  C1AC  F18D         	movff	_config+21,_os+39	;volatile
 46726  011B34                     i2l2748:
 46727                           
 46728                           ; BSR set to: 1
 46729                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 46730                           
 46731                           ; BSR set to: 1
 46732                           
 46733                           ; BSR set to: 1
 46734  011B34  B484               	btfsc	3972,2,c	;volatile
 46735                           
 46736                           ; BSR set to: 1
 46737  011B36  A084               	btfss	3972,0,c	;volatile
 46738  011B38  D00E               	goto	i2l2751
 46739                           
 46740                           ; BSR set to: 1
 46741  011B3A  B548               	btfsc	_enc1& (0+255),2,b
 46742  011B3C  D00C               	goto	i2l2751
 46743                           
 46744                           ; BSR set to: 1
 46745                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 46746  011B3E  5169               	movf	(_os+3)& (0+255),w,b	;volatile
 46747  011B40  0A80               	xorlw	128
 46748  011B42  0FFF               	addlw	255
 46749  011B44  A0D8               	btfss	status,0,c
 46750  011B46  D007               	goto	i2l2751
 46751                           
 46752                           ; BSR set to: 1
 46753                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 46754  011B48  0769               	decf	(_os+3)& (0+255),f,b	;volatile
 46755                           
 46756                           ; BSR set to: 1
 46757                           ;encoder.c: 126: if(config.beep_duration)
 46758  011B4A  51AC               	movf	(_config+21)& (0+255),w,b
 46759  011B4C  B4D8               	btfsc	status,2,c
 46760  011B4E  D003               	goto	i2l2751
 46761                           
 46762                           ; BSR set to: 1
 46763                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 46764  011B50  8E8B               	bsf	3979,7,c	;volatile
 46765                           
 46766                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 46767  011B52  C1AC  F18D         	movff	_config+21,_os+39	;volatile
 46768  011B56                     i2l2751:
 46769                           
 46770                           ; BSR set to: 1
 46771                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 46772                           
 46773                           ; BSR set to: 1
 46774                           
 46775                           ; BSR set to: 1
 46776  011B56  B284               	btfsc	3972,1,c	;volatile
 46777                           
 46778                           ; BSR set to: 1
 46779  011B58  B348               	btfsc	_enc1& (0+255),1,b
 46780  011B5A  D008               	goto	i2l2753
 46781                           
 46782                           ; BSR set to: 1
 46783                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 46784  011B5C  0E01               	movlw	1
 46785  011B5E  6F6A               	movwf	(_os+4)& (0+255),b	;volatile
 46786                           
 46787                           ;encoder.c: 137: if(config.beep_duration)
 46788  011B60  51AC               	movf	(_config+21)& (0+255),w,b
 46789  011B62  B4D8               	btfsc	status,2,c
 46790  011B64  D003               	goto	i2l2753
 46791                           
 46792                           ; BSR set to: 1
 46793                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 46794  011B66  8E8B               	bsf	3979,7,c	;volatile
 46795                           
 46796                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 46797  011B68  C1AC  F18D         	movff	_config+21,_os+39	;volatile
 46798  011B6C                     i2l2753:
 46799                           
 46800                           ; BSR set to: 1
 46801                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 46802                           
 46803                           ; BSR set to: 1
 46804  011B6C  A284               	btfss	3972,1,c	;volatile
 46805                           
 46806                           ; BSR set to: 1
 46807  011B6E  A348               	btfss	_enc1& (0+255),1,b
 46808  011B70  D001               	goto	i2l2754
 46809                           
 46810                           ; BSR set to: 1
 46811                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 46812  011B72  696A               	setf	(_os+4)& (0+255),b	;volatile
 46813  011B74                     i2l2754:
 46814                           
 46815                           ; BSR set to: 1
 46816                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 46817                           
 46818                           ; BSR set to: 1
 46819  011B74  5084               	movf	3972,w,c	;volatile
 46820  011B76  0B07               	andlw	7
 46821  011B78  6F48               	movwf	_enc1& (0+255),b
 46822  011B7A                     i2l2745:
 46823                           
 46824                           ; BSR set to: 1
 46825                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 46826  011B7A  5080               	movf	3968,w,c	;volatile
 46827  011B7C  0B07               	andlw	7
 46828  011B7E  1947               	xorwf	_enc2& (0+255),w,b
 46829  011B80  B4D8               	btfsc	status,2,c
 46830  011B82  D033               	goto	i2l2755
 46831                           
 46832                           ; BSR set to: 1
 46833                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 46834  011B84  B480               	btfsc	3968,2,c	;volatile
 46835                           
 46836                           ; BSR set to: 1
 46837  011B86  A080               	btfss	3968,0,c	;volatile
 46838  011B88  D00D               	goto	i2l2758
 46839                           
 46840                           ; BSR set to: 1
 46841  011B8A  B547               	btfsc	_enc2& (0+255),2,b
 46842  011B8C  D00B               	goto	i2l2758
 46843                           
 46844                           ; BSR set to: 1
 46845                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 46846  011B8E  0E7F               	movlw	127
 46847  011B90  196B               	xorwf	(_os+5)& (0+255),w,b	;volatile
 46848  011B92  B4D8               	btfsc	status,2,c
 46849  011B94  D007               	goto	i2l2758
 46850                           
 46851                           ; BSR set to: 1
 46852                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 46853  011B96  2B6B               	incf	(_os+5)& (0+255),f,b	;volatile
 46854                           
 46855                           ; BSR set to: 1
 46856                           ;encoder.c: 160: if(config.beep_duration)
 46857  011B98  51AC               	movf	(_config+21)& (0+255),w,b
 46858  011B9A  B4D8               	btfsc	status,2,c
 46859  011B9C  D003               	goto	i2l2758
 46860                           
 46861                           ; BSR set to: 1
 46862                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 46863  011B9E  8E8B               	bsf	3979,7,c	;volatile
 46864                           
 46865                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 46866  011BA0  C1AC  F18D         	movff	_config+21,_os+39	;volatile
 46867  011BA4                     i2l2758:
 46868                           
 46869                           ; BSR set to: 1
 46870                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 46871                           
 46872                           ; BSR set to: 1
 46873                           
 46874                           ; BSR set to: 1
 46875  011BA4  B080               	btfsc	3968,0,c	;volatile
 46876                           
 46877                           ; BSR set to: 1
 46878  011BA6  A480               	btfss	3968,2,c	;volatile
 46879  011BA8  D00E               	goto	i2l2761
 46880                           
 46881                           ; BSR set to: 1
 46882  011BAA  B147               	btfsc	_enc2& (0+255),0,b
 46883  011BAC  D00C               	goto	i2l2761
 46884                           
 46885                           ; BSR set to: 1
 46886                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 46887  011BAE  516B               	movf	(_os+5)& (0+255),w,b	;volatile
 46888  011BB0  0A80               	xorlw	128
 46889  011BB2  0FFF               	addlw	255
 46890  011BB4  A0D8               	btfss	status,0,c
 46891  011BB6  D007               	goto	i2l2761
 46892                           
 46893                           ; BSR set to: 1
 46894                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 46895  011BB8  076B               	decf	(_os+5)& (0+255),f,b	;volatile
 46896                           
 46897                           ; BSR set to: 1
 46898                           ;encoder.c: 173: if(config.beep_duration)
 46899  011BBA  51AC               	movf	(_config+21)& (0+255),w,b
 46900  011BBC  B4D8               	btfsc	status,2,c
 46901  011BBE  D003               	goto	i2l2761
 46902                           
 46903                           ; BSR set to: 1
 46904                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 46905  011BC0  8E8B               	bsf	3979,7,c	;volatile
 46906                           
 46907                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 46908  011BC2  C1AC  F18D         	movff	_config+21,_os+39	;volatile
 46909  011BC6                     i2l2761:
 46910                           
 46911                           ; BSR set to: 1
 46912                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 46913                           
 46914                           ; BSR set to: 1
 46915                           
 46916                           ; BSR set to: 1
 46917  011BC6  B280               	btfsc	3968,1,c	;volatile
 46918                           
 46919                           ; BSR set to: 1
 46920  011BC8  B347               	btfsc	_enc2& (0+255),1,b
 46921  011BCA  D008               	goto	i2l2763
 46922                           
 46923                           ; BSR set to: 1
 46924                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 46925  011BCC  0E01               	movlw	1
 46926  011BCE  6F6C               	movwf	(_os+6)& (0+255),b	;volatile
 46927                           
 46928                           ;encoder.c: 184: if(config.beep_duration)
 46929  011BD0  51AC               	movf	(_config+21)& (0+255),w,b
 46930  011BD2  B4D8               	btfsc	status,2,c
 46931  011BD4  D003               	goto	i2l2763
 46932                           
 46933                           ; BSR set to: 1
 46934                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 46935  011BD6  8E8B               	bsf	3979,7,c	;volatile
 46936                           
 46937                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 46938  011BD8  C1AC  F18D         	movff	_config+21,_os+39	;volatile
 46939  011BDC                     i2l2763:
 46940                           
 46941                           ; BSR set to: 1
 46942                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 46943                           
 46944                           ; BSR set to: 1
 46945  011BDC  A280               	btfss	3968,1,c	;volatile
 46946                           
 46947                           ; BSR set to: 1
 46948  011BDE  A347               	btfss	_enc2& (0+255),1,b
 46949  011BE0  D001               	goto	i2l2764
 46950                           
 46951                           ; BSR set to: 1
 46952                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 46953  011BE2  696C               	setf	(_os+6)& (0+255),b	;volatile
 46954  011BE4                     i2l2764:
 46955                           
 46956                           ; BSR set to: 1
 46957                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 46958                           
 46959                           ; BSR set to: 1
 46960  011BE4  5080               	movf	3968,w,c	;volatile
 46961  011BE6  0B07               	andlw	7
 46962  011BE8  6F47               	movwf	_enc2& (0+255),b
 46963  011BEA                     i2l2755:
 46964                           
 46965                           ; BSR set to: 1
 46966                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 46967                           
 46968                           ; BSR set to: 1
 46969  011BEA  518D               	movf	(_os+39)& (0+255),w,b	;volatile
 46970  011BEC  B4D8               	btfsc	status,2,c
 46971  011BEE  0012               	return	
 46972                           
 46973                           ; BSR set to: 1
 46974                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 46975  011BF0  078D               	decf	(_os+39)& (0+255),f,b	;volatile
 46976                           
 46977                           ; BSR set to: 1
 46978                           ;encoder.c: 203: if(!os.beep_count)
 46979  011BF2  518D               	movf	(_os+39)& (0+255),w,b	;volatile
 46980  011BF4  A4D8               	btfss	status,2,c
 46981  011BF6  0012               	return	
 46982                           
 46983                           ; BSR set to: 1
 46984                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 46985  011BF8  9E8B               	bcf	3979,7,c	;volatile
 46986                           
 46987                           ; BSR set to: 1
 46988  011BFA  0012               	return	
 46989  011BFC                     __end_of_encoder_run:
 46990                           	opt stack 0
 46991                           tosu	equ	0xFFF
 46992                           tosh	equ	0xFFE
 46993                           tosl	equ	0xFFD
 46994                           pclatu	equ	0xFFB
 46995                           pclath	equ	0xFFA
 46996                           tblptru	equ	0xFF8
 46997                           tblptrh	equ	0xFF7
 46998                           tblptrl	equ	0xFF6
 46999                           tablat	equ	0xFF5
 47000                           prodh	equ	0xFF4
 47001                           prodl	equ	0xFF3
 47002                           intcon	equ	0xFF2
 47003                           indf0	equ	0xFEF
 47004                           postinc0	equ	0xFEE
 47005                           fsr0h	equ	0xFEA
 47006                           fsr0l	equ	0xFE9
 47007                           wreg	equ	0xFE8
 47008                           indf1	equ	0xFE7
 47009                           postinc1	equ	0xFE6
 47010                           postdec1	equ	0xFE5
 47011                           plusw1	equ	0xFE3
 47012                           fsr1h	equ	0xFE2
 47013                           fsr1l	equ	0xFE1
 47014                           indf2	equ	0xFDF
 47015                           postinc2	equ	0xFDE
 47016                           postdec2	equ	0xFDD
 47017                           plusw2	equ	0xFDB
 47018                           fsr2h	equ	0xFDA
 47019                           fsr2l	equ	0xFD9
 47020                           status	equ	0xFD8
 47021                           
 47022 ;; *************** function _motor_isr *****************
 47023 ;; Defined at:
 47024 ;;		line 672 in file "motor.c"
 47025 ;; Parameters:    Size  Location     Type
 47026 ;;		None
 47027 ;; Auto vars:     Size  Location     Type
 47028 ;;  steps_remain    4   64[COMRAM] unsigned long 
 47029 ;;  steps_until_    2   62[COMRAM] unsigned int 
 47030 ;;  steps_until_    2   60[COMRAM] unsigned int 
 47031 ;; Return value:  Size  Location     Type
 47032 ;;                  1    wreg      void 
 47033 ;; Registers used:
 47034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47035 ;; Tracked objects:
 47036 ;;		On entry : 0/0
 47037 ;;		On exit  : 0/0
 47038 ;;		Unchanged: 0/0
 47039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47041 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47042 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47043 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47044 ;;Total ram usage:       24 bytes
 47045 ;; Hardware stack levels used:    1
 47046 ;; Hardware stack levels required when called:    4
 47047 ;; This function calls:
 47048 ;;		_i2c_eeprom_save_position
 47049 ;; This function is called by:
 47050 ;;		_SYS_InterruptHigh
 47051 ;; This function uses a non-reentrant model
 47052 ;;
 47053                           
 47054                           	psect	text195
 47055  00B7BE                     __ptext195:
 47056                           	opt stack 0
 47057  00B7BE                     _motor_isr:
 47058                           	opt stack 13
 47059                           
 47060                           ;motor.c: 674: uint32_t steps_remaining;;motor.c: 675: uint16_t steps_until_standstill;;
      +                          motor.c: 676: uint16_t steps_until_standstill_if_accelerate;;motor.c: 679: PIR1bits.TMR2
      +                          IF = 0;
 47061                           
 47062                           ; BSR set to: 1
 47063                           ;incstack = 0
 47064  00B7BE  929E               	bcf	3998,1,c	;volatile
 47065                           
 47066                           ;motor.c: 682: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 47067  00B7C0  0101               	movlb	1	; () banked
 47068  00B7C2  054B               	decf	_motor_move_type& (0+255),w,b
 47069  00B7C4  A4D8               	btfss	status,2,c
 47070  00B7C6  D004               	goto	i2l2571
 47071                           
 47072                           ; BSR set to: 1
 47073                           ;motor.c: 683: {;motor.c: 684: motor_final_stepcount = 0xFFFFFFFF;
 47074  00B7C8  6919               	setf	_motor_final_stepcount& (0+255),b	;volatile
 47075  00B7CA  691A               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 47076  00B7CC  691B               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 47077  00B7CE  691C               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 47078  00B7D0                     i2l2571:
 47079                           
 47080                           ; BSR set to: 1
 47081                           ;motor.c: 685: };motor.c: 687: if(motor_mode==MOTOR_MODE_MANUAL)
 47082                           
 47083                           ; BSR set to: 1
 47084  00B7D0  5149               	movf	_motor_mode& (0+255),w,b	;volatile
 47085  00B7D2  A4D8               	btfss	status,2,c
 47086  00B7D4  D01A               	goto	i2l2576
 47087                           
 47088                           ; BSR set to: 1
 47089                           ;motor.c: 688: {;motor.c: 690: if(LATBbits.LB1)
 47090  00B7D6  A28A               	btfss	3978,1,c	;volatile
 47091  00B7D8  D017               	goto	i2l2573
 47092                           
 47093                           ; BSR set to: 1
 47094                           ;motor.c: 691: {;motor.c: 693: LATBbits.LB1 = 0;
 47095  00B7DA  928A               	bcf	3978,1,c	;volatile
 47096                           
 47097                           ; BSR set to: 1
 47098                           ;motor.c: 696: if(motor_current_stepcount==motor_final_stepcount)
 47099  00B7DC  5119               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47100  00B7DE  191D               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47101  00B7E0  E109               	bnz	i2u1901_41
 47102  00B7E2  511A               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47103  00B7E4  191E               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47104  00B7E6  E106               	bnz	i2u1901_41
 47105  00B7E8  511B               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47106  00B7EA  191F               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47107  00B7EC  E103               	bnz	i2u1901_41
 47108  00B7EE  511C               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47109  00B7F0  1920               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47110  00B7F2  A4D8               	btfss	status,2,c
 47111  00B7F4                     i2u1901_41:
 47112  00B7F4  0012               	return	
 47113                           
 47114                           ; BSR set to: 1
 47115                           ;motor.c: 697: {;motor.c: 700: T2CONbits.TMR2ON = 0;
 47116  00B7F6  94CA               	bcf	4042,2,c	;volatile
 47117                           
 47118                           ;motor.c: 702: PIR1bits.TMR2IF = 0;
 47119  00B7F8  929E               	bcf	3998,1,c	;volatile
 47120                           
 47121                           ;motor.c: 703: PIE1bits.TMR2IE = 0;
 47122  00B7FA  929D               	bcf	3997,1,c	;volatile
 47123                           
 47124                           ; BSR set to: 1
 47125                           ;motor.c: 705: i2c_eeprom_save_position();
 47126  00B7FC  ECC2  F0A6         	call	_i2c_eeprom_save_position	;wreg free
 47127                           
 47128                           ;motor.c: 707: os.busy = 0;
 47129  00B800  0E00               	movlw	0
 47130  00B802  0101               	movlb	1	; () banked
 47131  00B804  6F76               	movwf	(_os+16)& (0+255),b	;volatile
 47132                           
 47133                           ; BSR set to: 1
 47134                           ;motor.c: 708: };motor.c: 711: return;
 47135                           
 47136                           ; BSR set to: 1
 47137  00B806  0012               	return	
 47138  00B808                     i2l2573:
 47139                           
 47140                           ; BSR set to: 1
 47141                           ;motor.c: 713: else;motor.c: 714: {;motor.c: 716: LATBbits.LB1 = 1;
 47142  00B808  828A               	bsf	3978,1,c	;volatile
 47143  00B80A                     i2l2576:
 47144                           
 47145                           ; BSR set to: 1
 47146                           ;motor.c: 717: };motor.c: 718: };motor.c: 720: ++motor_current_stepcount;
 47147                           
 47148                           ; BSR set to: 1
 47149                           
 47150                           ; BSR set to: 1
 47151  00B80A  0E01               	movlw	1
 47152  00B80C  271D               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 47153  00B80E  0E00               	movlw	0
 47154  00B810  231E               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 47155  00B812  231F               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 47156  00B814  2320               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 47157                           
 47158                           ;motor.c: 723: os.current_position_in_steps += motor_direction;
 47159  00B816  514A               	movf	_motor_direction& (0+255),w,b
 47160  00B818  6E2D               	movwf	??_motor_isr& (0+255),c
 47161  00B81A  0E00               	movlw	0
 47162  00B81C  BE2D               	btfsc	??_motor_isr& (0+255),7,c
 47163  00B81E  0EFF               	movlw	255
 47164  00B820  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47165  00B822  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 47166  00B824  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 47167  00B826  502D               	movf	??_motor_isr,w,c
 47168  00B828  276D               	addwf	(_os+7)& (0+255),f,b	;volatile
 47169  00B82A  502E               	movf	??_motor_isr+1,w,c
 47170  00B82C  236E               	addwfc	(_os+8)& (0+255),f,b	;volatile
 47171  00B82E  502F               	movf	??_motor_isr+2,w,c
 47172  00B830  236F               	addwfc	(_os+9)& (0+255),f,b	;volatile
 47173  00B832  5030               	movf	??_motor_isr+3,w,c
 47174  00B834  2370               	addwfc	(_os+10)& (0+255),f,b	;volatile
 47175                           
 47176                           ;motor.c: 724: if(os.current_position_in_steps==config.full_circle_in_steps)
 47177  00B836  5197               	movf	_config& (0+255),w,b
 47178  00B838  196D               	xorwf	(_os+7)& (0+255),w,b	;volatile
 47179  00B83A  E114               	bnz	i2l19040
 47180  00B83C  5198               	movf	(_config+1)& (0+255),w,b
 47181  00B83E  196E               	xorwf	(_os+8)& (0+255),w,b	;volatile
 47182  00B840  E111               	bnz	i2l19040
 47183  00B842  5199               	movf	(_config+2)& (0+255),w,b
 47184  00B844  196F               	xorwf	(_os+9)& (0+255),w,b	;volatile
 47185  00B846  E10E               	bnz	i2l19040
 47186  00B848  519A               	movf	(_config+3)& (0+255),w,b
 47187  00B84A  1970               	xorwf	(_os+10)& (0+255),w,b	;volatile
 47188  00B84C  A4D8               	btfss	status,2,c
 47189  00B84E  D00A               	goto	i2l2577
 47190                           
 47191                           ; BSR set to: 1
 47192                           ;motor.c: 725: {;motor.c: 726: os.current_position_in_steps = 0;
 47193  00B850  0E00               	movlw	0
 47194  00B852  6F6D               	movwf	(_os+7)& (0+255),b	;volatile
 47195  00B854  0E00               	movlw	0
 47196  00B856  6F6E               	movwf	(_os+8)& (0+255),b	;volatile
 47197  00B858  0E00               	movlw	0
 47198  00B85A  6F6F               	movwf	(_os+9)& (0+255),b	;volatile
 47199  00B85C  0E00               	movlw	0
 47200  00B85E  6F70               	movwf	(_os+10)& (0+255),b	;volatile
 47201                           
 47202                           ; BSR set to: 1
 47203                           ;motor.c: 727: ++os.absolute_position;
 47204  00B860  4B71               	infsnz	(_os+11)& (0+255),f,b	;volatile
 47205  00B862  2B72               	incf	(_os+12)& (0+255),f,b	;volatile
 47206  00B864                     i2l2577:
 47207  00B864                     i2l19040:
 47208                           
 47209                           ; BSR set to: 1
 47210                           ;motor.c: 728: };motor.c: 729: if(os.current_position_in_steps==0xFFFFFFFF)
 47211  00B864  296D               	incf	(_os+7)& (0+255),w,b	;volatile
 47212  00B866  E116               	bnz	i2l19046
 47213  00B868  296E               	incf	(_os+8)& (0+255),w,b	;volatile
 47214  00B86A  E114               	bnz	i2l19046
 47215  00B86C  296F               	incf	(_os+9)& (0+255),w,b	;volatile
 47216  00B86E  E112               	bnz	i2l19046
 47217  00B870  2970               	incf	(_os+10)& (0+255),w,b	;volatile
 47218  00B872  A4D8               	btfss	status,2,c
 47219  00B874  D00F               	goto	i2l2578
 47220                           
 47221                           ; BSR set to: 1
 47222                           ;motor.c: 730: {;motor.c: 731: os.current_position_in_steps = (config.full_circle_in_ste
      +                          ps-1);
 47223  00B876  0EFF               	movlw	255
 47224  00B878  2597               	addwf	_config& (0+255),w,b
 47225  00B87A  6F6D               	movwf	(_os+7)& (0+255),b	;volatile
 47226  00B87C  0EFF               	movlw	255
 47227  00B87E  2198               	addwfc	(_config+1)& (0+255),w,b
 47228  00B880  6F6E               	movwf	(_os+8)& (0+255),b	;volatile
 47229  00B882  0EFF               	movlw	255
 47230  00B884  2199               	addwfc	(_config+2)& (0+255),w,b
 47231  00B886  6F6F               	movwf	(_os+9)& (0+255),b	;volatile
 47232  00B888  0EFF               	movlw	255
 47233  00B88A  219A               	addwfc	(_config+3)& (0+255),w,b
 47234  00B88C  6F70               	movwf	(_os+10)& (0+255),b	;volatile
 47235                           
 47236                           ; BSR set to: 1
 47237                           ;motor.c: 732: --os.absolute_position;
 47238  00B88E  0771               	decf	(_os+11)& (0+255),f,b	;volatile
 47239  00B890  A0D8               	btfss	status,0,c
 47240  00B892  0772               	decf	(_os+12)& (0+255),f,b	;volatile
 47241  00B894                     i2l2578:
 47242  00B894                     i2l19046:
 47243                           
 47244                           ; BSR set to: 1
 47245                           ;motor.c: 733: };motor.c: 736: if(motor_current_stepcount==motor_next_speed_check)
 47246  00B894  5115               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 47247  00B896  191D               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47248  00B898  E109               	bnz	i2u1904_41
 47249  00B89A  5116               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 47250  00B89C  191E               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47251  00B89E  E106               	bnz	i2u1904_41
 47252  00B8A0  5117               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 47253  00B8A2  191F               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47254  00B8A4  E103               	bnz	i2u1904_41
 47255  00B8A6  5118               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 47256  00B8A8  1920               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47257  00B8AA  A4D8               	btfss	status,2,c
 47258  00B8AC                     i2u1904_41:
 47259  00B8AC  0012               	return	
 47260                           
 47261                           ; BSR set to: 1
 47262                           ;motor.c: 737: {;motor.c: 739: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 47263  00B8AE  C11D  F02D         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 47264  00B8B2  C11E  F02E         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 47265  00B8B6  C11F  F02F         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 47266  00B8BA  C120  F030         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 47267  00B8BE  1E2D               	comf	??_motor_isr,f,c
 47268  00B8C0  1E2E               	comf	??_motor_isr+1,f,c
 47269  00B8C2  1E2F               	comf	??_motor_isr+2,f,c
 47270  00B8C4  1E30               	comf	??_motor_isr+3,f,c
 47271  00B8C6  2A2D               	incf	??_motor_isr,f,c
 47272  00B8C8  0E00               	movlw	0
 47273  00B8CA  222E               	addwfc	??_motor_isr+1,f,c
 47274  00B8CC  222F               	addwfc	??_motor_isr+2,f,c
 47275  00B8CE  2230               	addwfc	??_motor_isr+3,f,c
 47276  00B8D0  5119               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47277  00B8D2  242D               	addwf	??_motor_isr,w,c
 47278  00B8D4  6E41               	movwf	motor_isr@steps_remaining,c
 47279  00B8D6  511A               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47280  00B8D8  202E               	addwfc	??_motor_isr+1,w,c
 47281  00B8DA  6E42               	movwf	motor_isr@steps_remaining+1,c
 47282  00B8DC  511B               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47283  00B8DE  202F               	addwfc	??_motor_isr+2,w,c
 47284  00B8E0  6E43               	movwf	motor_isr@steps_remaining+2,c
 47285  00B8E2  511C               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47286  00B8E4  2030               	addwfc	??_motor_isr+3,w,c
 47287  00B8E6  6E44               	movwf	motor_isr@steps_remaining+3,c
 47288                           
 47289                           ; BSR set to: 1
 47290                           ;motor.c: 740: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 47291  00B8E8  90D8               	bcf	status,0,c
 47292  00B8EA  0100               	movlb	0	; () banked
 47293  00B8EC  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47294  00B8EE  6EF6               	movwf	tblptrl,c
 47295  00B8F0  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47296  00B8F2  6EF7               	movwf	tblptrh,c
 47297  00B8F4  0E61               	movlw	low _motor_steps_lookup
 47298  00B8F6  26F6               	addwf	tblptrl,f,c
 47299  00B8F8  0E94               	movlw	high _motor_steps_lookup
 47300  00B8FA  22F7               	addwfc	tblptrh,f,c
 47301  00B8FC                     	if	1	;There are 3 active tblptr bytes
 47302  00B8FC  6AF8               	clrf	tblptru,c
 47303  00B8FE  0E00               	movlw	low (__mediumconst shr (0+16))
 47304  00B900  22F8               	addwfc	tblptru,f,c
 47305  00B902                     	endif
 47306  00B902  0009               	tblrd		*+
 47307  00B904  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill
 47308  00B908  000A               	tblrd		*-
 47309  00B90A  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill+1
 47310                           
 47311                           ; BSR set to: 0
 47312                           ;motor.c: 741: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 47313  00B90E  C0FE  F02D         	movff	_motor_current_speed,??_motor_isr	;volatile
 47314  00B912  C0FF  F02E         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 47315  00B916  90D8               	bcf	status,0,c
 47316  00B918  362D               	rlcf	??_motor_isr,f,c
 47317  00B91A  362E               	rlcf	??_motor_isr+1,f,c
 47318  00B91C  0E04               	movlw	4
 47319  00B91E  262D               	addwf	??_motor_isr,f,c
 47320  00B920  0E00               	movlw	0
 47321  00B922  222E               	addwfc	??_motor_isr+1,f,c
 47322  00B924  0E61               	movlw	low _motor_steps_lookup
 47323  00B926  242D               	addwf	??_motor_isr,w,c
 47324  00B928  6EF6               	movwf	tblptrl,c
 47325  00B92A  0E94               	movlw	high _motor_steps_lookup
 47326  00B92C  202E               	addwfc	??_motor_isr+1,w,c
 47327  00B92E  6EF7               	movwf	tblptrh,c
 47328  00B930                     	if	1	;There are 3 active tblptr bytes
 47329  00B930  6AF8               	clrf	tblptru,c
 47330  00B932  0E00               	movlw	low (__mediumconst shr (0+16))
 47331  00B934  22F8               	addwfc	tblptru,f,c
 47332  00B936                     	endif
 47333  00B936  0009               	tblrd		*+
 47334  00B938  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 47335  00B93C  000A               	tblrd		*-
 47336  00B93E  CFF5 F040          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 47337                           
 47338                           ;motor.c: 743: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 47339  00B942  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47340  00B944  0101               	movlb	1	; () banked
 47341  00B946  5D35               	subwf	_motor_maximum_speed& (0+255),w,b
 47342  00B948  0100               	movlb	0	; () banked
 47343  00B94A  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47344  00B94C  0101               	movlb	1	; () banked
 47345  00B94E  5936               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 47346  00B950  A0D8               	btfss	status,0,c
 47347  00B952  D010               	goto	i2u1906_40
 47348                           
 47349                           ; BSR set to: 1
 47350  00B954  503D               	movf	motor_isr@steps_until_standstill,w,c
 47351  00B956  6E2D               	movwf	??_motor_isr& (0+255),c
 47352  00B958  503E               	movf	motor_isr@steps_until_standstill+1,w,c
 47353  00B95A  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47354  00B95C  6A2F               	clrf	(??_motor_isr+2)& (0+255),c
 47355  00B95E  6A30               	clrf	(??_motor_isr+3)& (0+255),c
 47356  00B960  5041               	movf	motor_isr@steps_remaining,w,c
 47357  00B962  5C2D               	subwf	??_motor_isr,w,c
 47358  00B964  5042               	movf	motor_isr@steps_remaining+1,w,c
 47359  00B966  582E               	subwfb	??_motor_isr+1,w,c
 47360  00B968  5043               	movf	motor_isr@steps_remaining+2,w,c
 47361  00B96A  582F               	subwfb	??_motor_isr+2,w,c
 47362  00B96C  5044               	movf	motor_isr@steps_remaining+3,w,c
 47363  00B96E  5830               	subwfb	??_motor_isr+3,w,c
 47364  00B970  A0D8               	btfss	status,0,c
 47365  00B972  D0E5               	goto	i2l2580
 47366  00B974                     i2u1906_40:
 47367                           
 47368                           ; BSR set to: 1
 47369                           ;motor.c: 744: {;motor.c: 746: if(motor_current_speed>0)
 47370                           
 47371                           ; BSR set to: 1
 47372  00B974  0100               	movlb	0	; () banked
 47373  00B976  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47374  00B978  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47375  00B97A  B4D8               	btfsc	status,2,c
 47376  00B97C  D003               	goto	i2l2583
 47377                           
 47378                           ; BSR set to: 0
 47379                           ;motor.c: 747: {;motor.c: 748: --motor_current_speed;
 47380  00B97E  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 47381  00B980  A0D8               	btfss	status,0,c
 47382  00B982  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 47383  00B984                     i2l2583:
 47384                           
 47385                           ; BSR set to: 0
 47386                           ;motor.c: 749: };motor.c: 752: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 47387                           
 47388                           ; BSR set to: 0
 47389  00B984  0101               	movlb	1	; () banked
 47390  00B986  0549               	decf	_motor_mode& (0+255),w,b	;volatile
 47391  00B988  A4D8               	btfss	status,2,c
 47392  00B98A  D026               	goto	i2l2584
 47393                           
 47394                           ; BSR set to: 1
 47395  00B98C  0E2F               	movlw	low _motor_postscaler_lookup
 47396  00B98E  0100               	movlb	0	; () banked
 47397  00B990  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47398  00B992  6EF6               	movwf	tblptrl,c
 47399  00B994  0E98               	movlw	high _motor_postscaler_lookup
 47400  00B996  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47401  00B998  6EF7               	movwf	tblptrh,c
 47402  00B99A                     	if	1	;There are 3 active tblptr bytes
 47403  00B99A  6AF8               	clrf	tblptru,c
 47404  00B99C  0E00               	movlw	low (__mediumconst shr (0+16))
 47405  00B99E  22F8               	addwfc	tblptru,f,c
 47406  00B9A0                     	endif
 47407  00B9A0  0008               	tblrd		*
 47408  00B9A2  50F5               	movf	tablat,w,c
 47409  00B9A4  0900               	iorlw	0
 47410  00B9A6  B4D8               	btfsc	status,2,c
 47411  00B9A8  D017               	goto	i2l2584
 47412                           
 47413                           ; BSR set to: 0
 47414                           ;motor.c: 753: {;motor.c: 755: motor_mode = MOTOR_MODE_MANUAL;
 47415  00B9AA  0E00               	movlw	0
 47416  00B9AC  0101               	movlb	1	; () banked
 47417  00B9AE  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 47418                           
 47419                           ; BSR set to: 1
 47420                           ;motor.c: 758: LATBbits.LB1 = 1;
 47421  00B9B0  828A               	bsf	3978,1,c	;volatile
 47422                           
 47423                           ;motor.c: 759: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 47424  00B9B2  0E55               	movlw	85
 47425  00B9B4  6EA7               	movwf	4007,c	;volsfr
 47426  00B9B6  0EAA               	movlw	170
 47427  00B9B8  6EA7               	movwf	4007,c	;volsfr
 47428                           
 47429                           ; BSR set to: 1
 47430  00B9BA  010E               	movlb	14	; () banked
 47431  00B9BC  91BF               	bcf	191,0,b	;volatile
 47432                           
 47433                           ;motor.c: 760: RPOR4 = 0;
 47434  00B9BE  0E00               	movlw	0
 47435  00B9C0  6FC4               	movwf	196,b	;volatile
 47436                           
 47437                           ;motor.c: 761: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 47438  00B9C2  0E55               	movlw	85
 47439  00B9C4  6EA7               	movwf	4007,c	;volsfr
 47440  00B9C6  0EAA               	movlw	170
 47441  00B9C8  6EA7               	movwf	4007,c	;volsfr
 47442                           
 47443                           ; BSR set to: 14
 47444  00B9CA  81BF               	bsf	191,0,b	;volatile
 47445                           
 47446                           ;motor.c: 764: TMR2 = 0;
 47447  00B9CC  0E00               	movlw	0
 47448  00B9CE  6ECC               	movwf	4044,c	;volatile
 47449                           
 47450                           ; BSR set to: 14
 47451                           ;motor.c: 767: CCP1CONbits.CCP1M = 0b0000;
 47452  00B9D0  90BA               	bcf	4026,0,c	;volatile
 47453  00B9D2  92BA               	bcf	4026,1,c	;volatile
 47454  00B9D4  94BA               	bcf	4026,2,c	;volatile
 47455  00B9D6  96BA               	bcf	4026,3,c	;volatile
 47456  00B9D8                     i2l2584:
 47457                           
 47458                           ;motor.c: 768: };motor.c: 772: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 47459                           
 47460                           ; BSR set to: 14
 47461  00B9D8  0EFD               	movlw	low _motor_prescaler_lookup
 47462  00B9DA  0100               	movlb	0	; () banked
 47463  00B9DC  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47464  00B9DE  6EF6               	movwf	tblptrl,c
 47465  00B9E0  0E9B               	movlw	high _motor_prescaler_lookup
 47466  00B9E2  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47467  00B9E4  6EF7               	movwf	tblptrh,c
 47468  00B9E6                     	if	1	;There are 3 active tblptr bytes
 47469  00B9E6  6AF8               	clrf	tblptru,c
 47470  00B9E8  0E00               	movlw	low (__mediumconst shr (0+16))
 47471  00B9EA  22F8               	addwfc	tblptru,f,c
 47472  00B9EC                     	endif
 47473  00B9EC  0008               	tblrd		*
 47474  00B9EE  CFF5 F02D          	movff	tablat,??_motor_isr
 47475  00B9F2  50CA               	movf	4042,w,c	;volatile
 47476  00B9F4  182D               	xorwf	??_motor_isr,w,c
 47477  00B9F6  0BFC               	andlw	-4
 47478  00B9F8  182D               	xorwf	??_motor_isr,w,c
 47479  00B9FA  6ECA               	movwf	4042,c	;volatile
 47480                           
 47481                           ; BSR set to: 0
 47482                           ;motor.c: 774: PR2 = motor_period_lookup[motor_current_speed];
 47483  00B9FC  0E16               	movlw	low _motor_period_lookup
 47484  00B9FE  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47485  00BA00  6EF6               	movwf	tblptrl,c
 47486  00BA02  0E9A               	movlw	high _motor_period_lookup
 47487  00BA04  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47488  00BA06  6EF7               	movwf	tblptrh,c
 47489  00BA08                     	if	1	;There are 3 active tblptr bytes
 47490  00BA08  6AF8               	clrf	tblptru,c
 47491  00BA0A  0E00               	movlw	low (__mediumconst shr (0+16))
 47492  00BA0C  22F8               	addwfc	tblptru,f,c
 47493  00BA0E                     	endif
 47494  00BA0E  0008               	tblrd		*
 47495  00BA10  CFF5 FFCB          	movff	tablat,4043	;volatile
 47496                           
 47497                           ; BSR set to: 0
 47498                           ;motor.c: 776: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 47499  00BA14  0E2F               	movlw	low _motor_postscaler_lookup
 47500  00BA16  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47501  00BA18  6EF6               	movwf	tblptrl,c
 47502  00BA1A  0E98               	movlw	high _motor_postscaler_lookup
 47503  00BA1C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47504  00BA1E  6EF7               	movwf	tblptrh,c
 47505  00BA20                     	if	1	;There are 3 active tblptr bytes
 47506  00BA20  6AF8               	clrf	tblptru,c
 47507  00BA22  0E00               	movlw	low (__mediumconst shr (0+16))
 47508  00BA24  22F8               	addwfc	tblptru,f,c
 47509  00BA26                     	endif
 47510  00BA26  0008               	tblrd		*
 47511  00BA28  CFF5 F02D          	movff	tablat,??_motor_isr
 47512  00BA2C  462D               	rlncf	??_motor_isr,f,c
 47513  00BA2E  462D               	rlncf	??_motor_isr,f,c
 47514  00BA30  462D               	rlncf	??_motor_isr,f,c
 47515  00BA32  50CA               	movf	4042,w,c	;volatile
 47516  00BA34  182D               	xorwf	??_motor_isr,w,c
 47517  00BA36  0B87               	andlw	-121
 47518  00BA38  182D               	xorwf	??_motor_isr,w,c
 47519  00BA3A  6ECA               	movwf	4042,c	;volatile
 47520                           
 47521                           ; BSR set to: 0
 47522                           ;motor.c: 778: CCPR1L = PR2>>1;
 47523  00BA3C  90D8               	bcf	status,0,c
 47524  00BA3E  30CB               	rrcf	4043,w,c	;volatile
 47525  00BA40  6EBB               	movwf	4027,c	;volatile
 47526                           
 47527                           ; BSR set to: 0
 47528                           ;motor.c: 781: if(motor_current_speed>0)
 47529  00BA42  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47530  00BA44  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47531  00BA46  B4D8               	btfsc	status,2,c
 47532  00BA48  D059               	goto	i2l2585
 47533                           
 47534                           ; BSR set to: 0
 47535                           ;motor.c: 782: {;motor.c: 783: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 47536  00BA4A  0EFE               	movlw	254
 47537  00BA4C  6E2D               	movwf	??_motor_isr& (0+255),c
 47538  00BA4E  0EFF               	movlw	255
 47539  00BA50  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47540  00BA52  C0FE  F02F         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 47541  00BA56  C0FF  F030         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 47542  00BA5A  90D8               	bcf	status,0,c
 47543  00BA5C  362F               	rlcf	??_motor_isr+2,f,c
 47544  00BA5E  3630               	rlcf	??_motor_isr+3,f,c
 47545  00BA60  502D               	movf	??_motor_isr,w,c
 47546  00BA62  262F               	addwf	??_motor_isr+2,f,c
 47547  00BA64  502E               	movf	??_motor_isr+1,w,c
 47548  00BA66  2230               	addwfc	??_motor_isr+3,f,c
 47549  00BA68  0E61               	movlw	low _motor_steps_lookup
 47550  00BA6A  242F               	addwf	??_motor_isr+2,w,c
 47551  00BA6C  6EF6               	movwf	tblptrl,c
 47552  00BA6E  0E94               	movlw	high _motor_steps_lookup
 47553  00BA70  2030               	addwfc	??_motor_isr+3,w,c
 47554  00BA72  6EF7               	movwf	tblptrh,c
 47555  00BA74                     	if	1	;There are 3 active tblptr bytes
 47556  00BA74  6AF8               	clrf	tblptru,c
 47557  00BA76  0E00               	movlw	low (__mediumconst shr (0+16))
 47558  00BA78  22F8               	addwfc	tblptru,f,c
 47559  00BA7A                     	endif
 47560  00BA7A  0009               	tblrd		*+
 47561  00BA7C  CFF5 F031          	movff	tablat,??_motor_isr+4
 47562  00BA80  0009               	tblrd		*+
 47563  00BA82  CFF5 F032          	movff	tablat,??_motor_isr+5
 47564  00BA86  5031               	movf	??_motor_isr+4,w,c
 47565  00BA88  6E33               	movwf	(??_motor_isr+6)& (0+255),c
 47566  00BA8A  5032               	movf	??_motor_isr+5,w,c
 47567  00BA8C  6E34               	movwf	(??_motor_isr+7)& (0+255),c
 47568  00BA8E  6A35               	clrf	(??_motor_isr+8)& (0+255),c
 47569  00BA90  6A36               	clrf	(??_motor_isr+9)& (0+255),c
 47570  00BA92  1E33               	comf	??_motor_isr+6,f,c
 47571  00BA94  1E34               	comf	??_motor_isr+7,f,c
 47572  00BA96  1E35               	comf	??_motor_isr+8,f,c
 47573  00BA98  1E36               	comf	??_motor_isr+9,f,c
 47574  00BA9A  2A33               	incf	??_motor_isr+6,f,c
 47575  00BA9C  0E00               	movlw	0
 47576  00BA9E  2234               	addwfc	??_motor_isr+7,f,c
 47577  00BAA0  2235               	addwfc	??_motor_isr+8,f,c
 47578  00BAA2  2236               	addwfc	??_motor_isr+9,f,c
 47579  00BAA4  90D8               	bcf	status,0,c
 47580  00BAA6  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47581  00BAA8  6EF6               	movwf	tblptrl,c
 47582  00BAAA  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47583  00BAAC  6EF7               	movwf	tblptrh,c
 47584  00BAAE  0E61               	movlw	low _motor_steps_lookup
 47585  00BAB0  26F6               	addwf	tblptrl,f,c
 47586  00BAB2  0E94               	movlw	high _motor_steps_lookup
 47587  00BAB4  22F7               	addwfc	tblptrh,f,c
 47588  00BAB6                     	if	1	;There are 3 active tblptr bytes
 47589  00BAB6  6AF8               	clrf	tblptru,c
 47590  00BAB8  0E00               	movlw	low (__mediumconst shr (0+16))
 47591  00BABA  22F8               	addwfc	tblptru,f,c
 47592  00BABC                     	endif
 47593  00BABC  0009               	tblrd		*+
 47594  00BABE  CFF5 F037          	movff	tablat,??_motor_isr+10
 47595  00BAC2  0009               	tblrd		*+
 47596  00BAC4  CFF5 F038          	movff	tablat,??_motor_isr+11
 47597  00BAC8  5037               	movf	??_motor_isr+10,w,c
 47598  00BACA  2433               	addwf	??_motor_isr+6,w,c
 47599  00BACC  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 47600  00BACE  5038               	movf	??_motor_isr+11,w,c
 47601  00BAD0  2034               	addwfc	??_motor_isr+7,w,c
 47602  00BAD2  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 47603  00BAD4  0E00               	movlw	0
 47604  00BAD6  2035               	addwfc	??_motor_isr+8,w,c
 47605  00BAD8  6E3B               	movwf	(??_motor_isr+14)& (0+255),c
 47606  00BADA  0E00               	movlw	0
 47607  00BADC  2036               	addwfc	??_motor_isr+9,w,c
 47608  00BADE  6E3C               	movwf	(??_motor_isr+15)& (0+255),c
 47609  00BAE0  0101               	movlb	1	; () banked
 47610  00BAE2  511D               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 47611  00BAE4  2439               	addwf	??_motor_isr+12,w,c
 47612  00BAE6  6F15               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47613  00BAE8  511E               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47614  00BAEA  203A               	addwfc	??_motor_isr+13,w,c
 47615  00BAEC  6F16               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47616  00BAEE  511F               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47617  00BAF0  203B               	addwfc	??_motor_isr+14,w,c
 47618  00BAF2  6F17               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47619  00BAF4  5120               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47620  00BAF6  203C               	addwfc	??_motor_isr+15,w,c
 47621  00BAF8  6F18               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47622                           
 47623                           ;motor.c: 784: }
 47624  00BAFA  0012               	return	
 47625  00BAFC                     i2l2585:
 47626                           
 47627                           ;motor.c: 785: else;motor.c: 786: {;motor.c: 787: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 47628                           
 47629                           ; BSR set to: 1
 47630  00BAFC  90D8               	bcf	status,0,c
 47631  00BAFE  0100               	movlb	0	; () banked
 47632  00BB00  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47633  00BB02  6EF6               	movwf	tblptrl,c
 47634  00BB04  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47635  00BB06  6EF7               	movwf	tblptrh,c
 47636  00BB08  0E61               	movlw	low _motor_steps_lookup
 47637  00BB0A  26F6               	addwf	tblptrl,f,c
 47638  00BB0C  0E94               	movlw	high _motor_steps_lookup
 47639  00BB0E  22F7               	addwfc	tblptrh,f,c
 47640  00BB10                     	if	1	;There are 3 active tblptr bytes
 47641  00BB10  6AF8               	clrf	tblptru,c
 47642  00BB12  0E00               	movlw	low (__mediumconst shr (0+16))
 47643  00BB14  22F8               	addwfc	tblptru,f,c
 47644  00BB16                     	endif
 47645  00BB16  0009               	tblrd		*+
 47646  00BB18  CFF5 F02D          	movff	tablat,??_motor_isr
 47647  00BB1C  0009               	tblrd		*+
 47648  00BB1E  CFF5 F02E          	movff	tablat,??_motor_isr+1
 47649  00BB22  502D               	movf	??_motor_isr,w,c
 47650  00BB24  0101               	movlb	1	; () banked
 47651  00BB26  251D               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47652  00BB28  6F15               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47653  00BB2A  502E               	movf	??_motor_isr+1,w,c
 47654  00BB2C  211E               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47655  00BB2E  6F16               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47656  00BB30  0E00               	movlw	0
 47657  00BB32  211F               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47658  00BB34  6F17               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47659  00BB36  0E00               	movlw	0
 47660  00BB38  2120               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47661  00BB3A  6F18               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47662                           
 47663                           ; BSR set to: 1
 47664                           ;motor.c: 788: };motor.c: 789: }
 47665  00BB3C  0012               	return	
 47666  00BB3E                     i2l2580:
 47667                           
 47668                           ; BSR set to: 1
 47669                           ;motor.c: 790: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 47670                           
 47671                           ; BSR set to: 1
 47672  00BB3E  5135               	movf	_motor_maximum_speed& (0+255),w,b
 47673  00BB40  0100               	movlb	0	; () banked
 47674  00BB42  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 47675  00BB44  E106               	bnz	i2u1911_40
 47676  00BB46  0101               	movlb	1	; () banked
 47677  00BB48  5136               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 47678  00BB4A  0100               	movlb	0	; () banked
 47679  00BB4C  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47680  00BB4E  B4D8               	btfsc	status,2,c
 47681  00BB50  D010               	goto	i2u1912_40
 47682  00BB52                     i2u1911_40:
 47683                           
 47684                           ; BSR set to: 0
 47685  00BB52  503F               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 47686  00BB54  6E2D               	movwf	??_motor_isr& (0+255),c
 47687  00BB56  5040               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 47688  00BB58  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47689  00BB5A  6A2F               	clrf	(??_motor_isr+2)& (0+255),c
 47690  00BB5C  6A30               	clrf	(??_motor_isr+3)& (0+255),c
 47691  00BB5E  5041               	movf	motor_isr@steps_remaining,w,c
 47692  00BB60  5C2D               	subwf	??_motor_isr,w,c
 47693  00BB62  5042               	movf	motor_isr@steps_remaining+1,w,c
 47694  00BB64  582E               	subwfb	??_motor_isr+1,w,c
 47695  00BB66  5043               	movf	motor_isr@steps_remaining+2,w,c
 47696  00BB68  582F               	subwfb	??_motor_isr+2,w,c
 47697  00BB6A  5044               	movf	motor_isr@steps_remaining+3,w,c
 47698  00BB6C  5830               	subwfb	??_motor_isr+3,w,c
 47699  00BB6E  A0D8               	btfss	status,0,c
 47700  00BB70  D055               	goto	i2l2588
 47701  00BB72                     i2u1912_40:
 47702                           
 47703                           ; BSR set to: 0
 47704                           ;motor.c: 791: {;motor.c: 794: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 47705                           
 47706                           ; BSR set to: 0
 47707  00BB72  90D8               	bcf	status,0,c
 47708  00BB74  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47709  00BB76  6EF6               	movwf	tblptrl,c
 47710  00BB78  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47711  00BB7A  6EF7               	movwf	tblptrh,c
 47712  00BB7C  0E61               	movlw	low _motor_steps_lookup
 47713  00BB7E  26F6               	addwf	tblptrl,f,c
 47714  00BB80  0E94               	movlw	high _motor_steps_lookup
 47715  00BB82  22F7               	addwfc	tblptrh,f,c
 47716  00BB84                     	if	1	;There are 3 active tblptr bytes
 47717  00BB84  6AF8               	clrf	tblptru,c
 47718  00BB86  0E00               	movlw	low (__mediumconst shr (0+16))
 47719  00BB88  22F8               	addwfc	tblptru,f,c
 47720  00BB8A                     	endif
 47721  00BB8A  0009               	tblrd		*+
 47722  00BB8C  CFF5 F02D          	movff	tablat,??_motor_isr
 47723  00BB90  0009               	tblrd		*+
 47724  00BB92  CFF5 F02E          	movff	tablat,??_motor_isr+1
 47725  00BB96  502D               	movf	??_motor_isr,w,c
 47726  00BB98  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 47727  00BB9A  502E               	movf	??_motor_isr+1,w,c
 47728  00BB9C  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 47729  00BB9E  6A31               	clrf	(??_motor_isr+4)& (0+255),c
 47730  00BBA0  6A32               	clrf	(??_motor_isr+5)& (0+255),c
 47731  00BBA2  1E2F               	comf	??_motor_isr+2,f,c
 47732  00BBA4  1E30               	comf	??_motor_isr+3,f,c
 47733  00BBA6  1E31               	comf	??_motor_isr+4,f,c
 47734  00BBA8  1E32               	comf	??_motor_isr+5,f,c
 47735  00BBAA  2A2F               	incf	??_motor_isr+2,f,c
 47736  00BBAC  0E00               	movlw	0
 47737  00BBAE  2230               	addwfc	??_motor_isr+3,f,c
 47738  00BBB0  2231               	addwfc	??_motor_isr+4,f,c
 47739  00BBB2  2232               	addwfc	??_motor_isr+5,f,c
 47740  00BBB4  C0FE  F033         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 47741  00BBB8  C0FF  F034         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 47742  00BBBC  90D8               	bcf	status,0,c
 47743  00BBBE  3633               	rlcf	??_motor_isr+6,f,c
 47744  00BBC0  3634               	rlcf	??_motor_isr+7,f,c
 47745  00BBC2  0E02               	movlw	2
 47746  00BBC4  2633               	addwf	??_motor_isr+6,f,c
 47747  00BBC6  0E00               	movlw	0
 47748  00BBC8  2234               	addwfc	??_motor_isr+7,f,c
 47749  00BBCA  0E61               	movlw	low _motor_steps_lookup
 47750  00BBCC  2433               	addwf	??_motor_isr+6,w,c
 47751  00BBCE  6EF6               	movwf	tblptrl,c
 47752  00BBD0  0E94               	movlw	high _motor_steps_lookup
 47753  00BBD2  2034               	addwfc	??_motor_isr+7,w,c
 47754  00BBD4  6EF7               	movwf	tblptrh,c
 47755  00BBD6                     	if	1	;There are 3 active tblptr bytes
 47756  00BBD6  6AF8               	clrf	tblptru,c
 47757  00BBD8  0E00               	movlw	low (__mediumconst shr (0+16))
 47758  00BBDA  22F8               	addwfc	tblptru,f,c
 47759  00BBDC                     	endif
 47760  00BBDC  0009               	tblrd		*+
 47761  00BBDE  CFF5 F035          	movff	tablat,??_motor_isr+8
 47762  00BBE2  0009               	tblrd		*+
 47763  00BBE4  CFF5 F036          	movff	tablat,??_motor_isr+9
 47764  00BBE8  5035               	movf	??_motor_isr+8,w,c
 47765  00BBEA  242F               	addwf	??_motor_isr+2,w,c
 47766  00BBEC  6E37               	movwf	(??_motor_isr+10)& (0+255),c
 47767  00BBEE  5036               	movf	??_motor_isr+9,w,c
 47768  00BBF0  2030               	addwfc	??_motor_isr+3,w,c
 47769  00BBF2  6E38               	movwf	(??_motor_isr+11)& (0+255),c
 47770  00BBF4  0E00               	movlw	0
 47771  00BBF6  2031               	addwfc	??_motor_isr+4,w,c
 47772  00BBF8  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 47773  00BBFA  0E00               	movlw	0
 47774  00BBFC  2032               	addwfc	??_motor_isr+5,w,c
 47775  00BBFE  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 47776  00BC00  0101               	movlb	1	; () banked
 47777  00BC02  511D               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 47778  00BC04  2437               	addwf	??_motor_isr+10,w,c
 47779  00BC06  6F15               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47780  00BC08  511E               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47781  00BC0A  2038               	addwfc	??_motor_isr+11,w,c
 47782  00BC0C  6F16               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47783  00BC0E  511F               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47784  00BC10  2039               	addwfc	??_motor_isr+12,w,c
 47785  00BC12  6F17               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47786  00BC14  5120               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47787  00BC16  203A               	addwfc	??_motor_isr+13,w,c
 47788  00BC18  6F18               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47789                           
 47790                           ;motor.c: 795: }
 47791  00BC1A  0012               	return	
 47792  00BC1C                     i2l2588:
 47793                           
 47794                           ;motor.c: 796: else;motor.c: 797: {;motor.c: 799: ++motor_current_speed;
 47795                           
 47796                           ; BSR set to: 1
 47797  00BC1C  0100               	movlb	0	; () banked
 47798  00BC1E  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 47799  00BC20  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 47800                           
 47801                           ; BSR set to: 0
 47802                           ;motor.c: 803: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 47803  00BC22  0EFD               	movlw	low _motor_prescaler_lookup
 47804  00BC24  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47805  00BC26  6EF6               	movwf	tblptrl,c
 47806  00BC28  0E9B               	movlw	high _motor_prescaler_lookup
 47807  00BC2A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47808  00BC2C  6EF7               	movwf	tblptrh,c
 47809  00BC2E                     	if	1	;There are 3 active tblptr bytes
 47810  00BC2E  6AF8               	clrf	tblptru,c
 47811  00BC30  0E00               	movlw	low (__mediumconst shr (0+16))
 47812  00BC32  22F8               	addwfc	tblptru,f,c
 47813  00BC34                     	endif
 47814  00BC34  0008               	tblrd		*
 47815  00BC36  CFF5 F02D          	movff	tablat,??_motor_isr
 47816  00BC3A  50CA               	movf	4042,w,c	;volatile
 47817  00BC3C  182D               	xorwf	??_motor_isr,w,c
 47818  00BC3E  0BFC               	andlw	-4
 47819  00BC40  182D               	xorwf	??_motor_isr,w,c
 47820  00BC42  6ECA               	movwf	4042,c	;volatile
 47821                           
 47822                           ; BSR set to: 0
 47823                           ;motor.c: 805: PR2 = motor_period_lookup[motor_current_speed];
 47824  00BC44  0E16               	movlw	low _motor_period_lookup
 47825  00BC46  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47826  00BC48  6EF6               	movwf	tblptrl,c
 47827  00BC4A  0E9A               	movlw	high _motor_period_lookup
 47828  00BC4C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47829  00BC4E  6EF7               	movwf	tblptrh,c
 47830  00BC50                     	if	1	;There are 3 active tblptr bytes
 47831  00BC50  6AF8               	clrf	tblptru,c
 47832  00BC52  0E00               	movlw	low (__mediumconst shr (0+16))
 47833  00BC54  22F8               	addwfc	tblptru,f,c
 47834  00BC56                     	endif
 47835  00BC56  0008               	tblrd		*
 47836  00BC58  CFF5 FFCB          	movff	tablat,4043	;volatile
 47837                           
 47838                           ; BSR set to: 0
 47839                           ;motor.c: 807: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 47840  00BC5C  0E2F               	movlw	low _motor_postscaler_lookup
 47841  00BC5E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47842  00BC60  6EF6               	movwf	tblptrl,c
 47843  00BC62  0E98               	movlw	high _motor_postscaler_lookup
 47844  00BC64  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47845  00BC66  6EF7               	movwf	tblptrh,c
 47846  00BC68                     	if	1	;There are 3 active tblptr bytes
 47847  00BC68  6AF8               	clrf	tblptru,c
 47848  00BC6A  0E00               	movlw	low (__mediumconst shr (0+16))
 47849  00BC6C  22F8               	addwfc	tblptru,f,c
 47850  00BC6E                     	endif
 47851  00BC6E  0008               	tblrd		*
 47852  00BC70  CFF5 F02D          	movff	tablat,??_motor_isr
 47853  00BC74  462D               	rlncf	??_motor_isr,f,c
 47854  00BC76  462D               	rlncf	??_motor_isr,f,c
 47855  00BC78  462D               	rlncf	??_motor_isr,f,c
 47856  00BC7A  50CA               	movf	4042,w,c	;volatile
 47857  00BC7C  182D               	xorwf	??_motor_isr,w,c
 47858  00BC7E  0B87               	andlw	-121
 47859  00BC80  182D               	xorwf	??_motor_isr,w,c
 47860  00BC82  6ECA               	movwf	4042,c	;volatile
 47861                           
 47862                           ; BSR set to: 0
 47863                           ;motor.c: 809: CCPR1L = PR2>>1;
 47864  00BC84  90D8               	bcf	status,0,c
 47865  00BC86  30CB               	rrcf	4043,w,c	;volatile
 47866  00BC88  6EBB               	movwf	4027,c	;volatile
 47867                           
 47868                           ; BSR set to: 0
 47869                           ;motor.c: 811: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 47870  00BC8A  0101               	movlb	1	; () banked
 47871  00BC8C  5149               	movf	_motor_mode& (0+255),w,b	;volatile
 47872  00BC8E  A4D8               	btfss	status,2,c
 47873  00BC90  D023               	goto	i2l2592
 47874                           
 47875                           ; BSR set to: 1
 47876  00BC92  0E2F               	movlw	low _motor_postscaler_lookup
 47877  00BC94  0100               	movlb	0	; () banked
 47878  00BC96  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47879  00BC98  6EF6               	movwf	tblptrl,c
 47880  00BC9A  0E98               	movlw	high _motor_postscaler_lookup
 47881  00BC9C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47882  00BC9E  6EF7               	movwf	tblptrh,c
 47883  00BCA0                     	if	1	;There are 3 active tblptr bytes
 47884  00BCA0  6AF8               	clrf	tblptru,c
 47885  00BCA2  0E00               	movlw	low (__mediumconst shr (0+16))
 47886  00BCA4  22F8               	addwfc	tblptru,f,c
 47887  00BCA6                     	endif
 47888  00BCA6  0008               	tblrd		*
 47889  00BCA8  50F5               	movf	tablat,w,c
 47890  00BCAA  0900               	iorlw	0
 47891  00BCAC  A4D8               	btfss	status,2,c
 47892  00BCAE  D014               	goto	i2l2592
 47893                           
 47894                           ; BSR set to: 0
 47895                           ;motor.c: 812: {;motor.c: 814: motor_mode = MOTOR_MODE_PWM;
 47896  00BCB0  0E01               	movlw	1
 47897  00BCB2  0101               	movlb	1	; () banked
 47898  00BCB4  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 47899                           
 47900                           ;motor.c: 817: CCP1CONbits.CCP1M = 0b1100;
 47901  00BCB6  50BA               	movf	4026,w,c	;volatile
 47902  00BCB8  0BF0               	andlw	-16
 47903  00BCBA  090C               	iorlw	12
 47904  00BCBC  6EBA               	movwf	4026,c	;volatile
 47905                           
 47906                           ;motor.c: 820: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 47907  00BCBE  0E55               	movlw	85
 47908  00BCC0  6EA7               	movwf	4007,c	;volsfr
 47909  00BCC2  0EAA               	movlw	170
 47910  00BCC4  6EA7               	movwf	4007,c	;volsfr
 47911                           
 47912                           ; BSR set to: 1
 47913  00BCC6  010E               	movlb	14	; () banked
 47914  00BCC8  91BF               	bcf	191,0,b	;volatile
 47915                           
 47916                           ;motor.c: 821: RPOR4 = 14;
 47917  00BCCA  0E0E               	movlw	14
 47918  00BCCC  6FC4               	movwf	196,b	;volatile
 47919                           
 47920                           ;motor.c: 822: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 47921  00BCCE  0E55               	movlw	85
 47922  00BCD0  6EA7               	movwf	4007,c	;volsfr
 47923  00BCD2  0EAA               	movlw	170
 47924  00BCD4  6EA7               	movwf	4007,c	;volsfr
 47925                           
 47926                           ; BSR set to: 14
 47927  00BCD6  81BF               	bsf	191,0,b	;volatile
 47928  00BCD8                     i2l2592:
 47929                           
 47930                           ;motor.c: 823: };motor.c: 826: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 47931                           
 47932                           ; BSR set to: 14
 47933  00BCD8  90D8               	bcf	status,0,c
 47934  00BCDA  0100               	movlb	0	; () banked
 47935  00BCDC  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47936  00BCDE  6EF6               	movwf	tblptrl,c
 47937  00BCE0  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47938  00BCE2  6EF7               	movwf	tblptrh,c
 47939  00BCE4  0E61               	movlw	low _motor_steps_lookup
 47940  00BCE6  26F6               	addwf	tblptrl,f,c
 47941  00BCE8  0E94               	movlw	high _motor_steps_lookup
 47942  00BCEA  22F7               	addwfc	tblptrh,f,c
 47943  00BCEC                     	if	1	;There are 3 active tblptr bytes
 47944  00BCEC  6AF8               	clrf	tblptru,c
 47945  00BCEE  0E00               	movlw	low (__mediumconst shr (0+16))
 47946  00BCF0  22F8               	addwfc	tblptru,f,c
 47947  00BCF2                     	endif
 47948  00BCF2  0009               	tblrd		*+
 47949  00BCF4  CFF5 F02D          	movff	tablat,??_motor_isr
 47950  00BCF8  0009               	tblrd		*+
 47951  00BCFA  CFF5 F02E          	movff	tablat,??_motor_isr+1
 47952  00BCFE  502D               	movf	??_motor_isr,w,c
 47953  00BD00  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 47954  00BD02  502E               	movf	??_motor_isr+1,w,c
 47955  00BD04  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 47956  00BD06  6A31               	clrf	(??_motor_isr+4)& (0+255),c
 47957  00BD08  6A32               	clrf	(??_motor_isr+5)& (0+255),c
 47958  00BD0A  1E2F               	comf	??_motor_isr+2,f,c
 47959  00BD0C  1E30               	comf	??_motor_isr+3,f,c
 47960  00BD0E  1E31               	comf	??_motor_isr+4,f,c
 47961  00BD10  1E32               	comf	??_motor_isr+5,f,c
 47962  00BD12  2A2F               	incf	??_motor_isr+2,f,c
 47963  00BD14  0E00               	movlw	0
 47964  00BD16  2230               	addwfc	??_motor_isr+3,f,c
 47965  00BD18  2231               	addwfc	??_motor_isr+4,f,c
 47966  00BD1A  2232               	addwfc	??_motor_isr+5,f,c
 47967  00BD1C  C0FE  F033         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 47968  00BD20  C0FF  F034         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 47969  00BD24  90D8               	bcf	status,0,c
 47970  00BD26  3633               	rlcf	??_motor_isr+6,f,c
 47971  00BD28  3634               	rlcf	??_motor_isr+7,f,c
 47972  00BD2A  0E02               	movlw	2
 47973  00BD2C  2633               	addwf	??_motor_isr+6,f,c
 47974  00BD2E  0E00               	movlw	0
 47975  00BD30  2234               	addwfc	??_motor_isr+7,f,c
 47976  00BD32  0E61               	movlw	low _motor_steps_lookup
 47977  00BD34  2433               	addwf	??_motor_isr+6,w,c
 47978  00BD36  6EF6               	movwf	tblptrl,c
 47979  00BD38  0E94               	movlw	high _motor_steps_lookup
 47980  00BD3A  2034               	addwfc	??_motor_isr+7,w,c
 47981  00BD3C  6EF7               	movwf	tblptrh,c
 47982  00BD3E                     	if	1	;There are 3 active tblptr bytes
 47983  00BD3E  6AF8               	clrf	tblptru,c
 47984  00BD40  0E00               	movlw	low (__mediumconst shr (0+16))
 47985  00BD42  22F8               	addwfc	tblptru,f,c
 47986  00BD44                     	endif
 47987  00BD44  0009               	tblrd		*+
 47988  00BD46  CFF5 F035          	movff	tablat,??_motor_isr+8
 47989  00BD4A  0009               	tblrd		*+
 47990  00BD4C  CFF5 F036          	movff	tablat,??_motor_isr+9
 47991  00BD50  5035               	movf	??_motor_isr+8,w,c
 47992  00BD52  242F               	addwf	??_motor_isr+2,w,c
 47993  00BD54  6E37               	movwf	(??_motor_isr+10)& (0+255),c
 47994  00BD56  5036               	movf	??_motor_isr+9,w,c
 47995  00BD58  2030               	addwfc	??_motor_isr+3,w,c
 47996  00BD5A  6E38               	movwf	(??_motor_isr+11)& (0+255),c
 47997  00BD5C  0E00               	movlw	0
 47998  00BD5E  2031               	addwfc	??_motor_isr+4,w,c
 47999  00BD60  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 48000  00BD62  0E00               	movlw	0
 48001  00BD64  2032               	addwfc	??_motor_isr+5,w,c
 48002  00BD66  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 48003  00BD68  0101               	movlb	1	; () banked
 48004  00BD6A  511D               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48005  00BD6C  2437               	addwf	??_motor_isr+10,w,c
 48006  00BD6E  6F15               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48007  00BD70  511E               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48008  00BD72  2038               	addwfc	??_motor_isr+11,w,c
 48009  00BD74  6F16               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48010  00BD76  511F               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48011  00BD78  2039               	addwfc	??_motor_isr+12,w,c
 48012  00BD7A  6F17               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48013  00BD7C  5120               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48014  00BD7E  203A               	addwfc	??_motor_isr+13,w,c
 48015  00BD80  6F18               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48016                           
 48017                           ; BSR set to: 1
 48018                           
 48019                           ; BSR set to: 1
 48020  00BD82  0012               	return	
 48021  00BD84                     __end_of_motor_isr:
 48022                           	opt stack 0
 48023                           tosu	equ	0xFFF
 48024                           tosh	equ	0xFFE
 48025                           tosl	equ	0xFFD
 48026                           pclatu	equ	0xFFB
 48027                           pclath	equ	0xFFA
 48028                           tblptru	equ	0xFF8
 48029                           tblptrh	equ	0xFF7
 48030                           tblptrl	equ	0xFF6
 48031                           tablat	equ	0xFF5
 48032                           prodh	equ	0xFF4
 48033                           prodl	equ	0xFF3
 48034                           intcon	equ	0xFF2
 48035                           indf0	equ	0xFEF
 48036                           postinc0	equ	0xFEE
 48037                           fsr0h	equ	0xFEA
 48038                           fsr0l	equ	0xFE9
 48039                           wreg	equ	0xFE8
 48040                           indf1	equ	0xFE7
 48041                           postinc1	equ	0xFE6
 48042                           postdec1	equ	0xFE5
 48043                           plusw1	equ	0xFE3
 48044                           fsr1h	equ	0xFE2
 48045                           fsr1l	equ	0xFE1
 48046                           indf2	equ	0xFDF
 48047                           postinc2	equ	0xFDE
 48048                           postdec2	equ	0xFDD
 48049                           plusw2	equ	0xFDB
 48050                           fsr2h	equ	0xFDA
 48051                           fsr2l	equ	0xFD9
 48052                           status	equ	0xFD8
 48053                           
 48054 ;; *************** function _i2c_eeprom_save_position *****************
 48055 ;; Defined at:
 48056 ;;		line 293 in file "i2c.c"
 48057 ;; Parameters:    Size  Location     Type
 48058 ;;		None
 48059 ;; Auto vars:     Size  Location     Type
 48060 ;;  buffer          7   37[COMRAM] unsigned char [7]
 48061 ;; Return value:  Size  Location     Type
 48062 ;;                  1    wreg      void 
 48063 ;; Registers used:
 48064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48065 ;; Tracked objects:
 48066 ;;		On entry : 0/0
 48067 ;;		On exit  : 0/0
 48068 ;;		Unchanged: 0/0
 48069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48071 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48073 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48074 ;;Total ram usage:        7 bytes
 48075 ;; Hardware stack levels used:    1
 48076 ;; Hardware stack levels required when called:    3
 48077 ;; This function calls:
 48078 ;;		_i2c_eeprom_write
 48079 ;;		i2_memcpy
 48080 ;; This function is called by:
 48081 ;;		_motor_isr
 48082 ;; This function uses a non-reentrant model
 48083 ;;
 48084                           
 48085                           	psect	text196
 48086  014D84                     __ptext196:
 48087                           	opt stack 0
 48088  014D84                     _i2c_eeprom_save_position:
 48089                           	opt stack 13
 48090                           
 48091                           ;i2c.c: 295: uint8_t buffer[7];;i2c.c: 301: memcpy(&buffer[0], &os.current_position_in_s
      +                          teps, 4);
 48092                           
 48093                           ; BSR set to: 1
 48094                           ;incstack = 0
 48095  014D84  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48096  014D86  6E01               	movwf	i2memcpy@d1,c
 48097  014D88  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48098  014D8A  6E02               	movwf	i2memcpy@d1+1,c
 48099  014D8C  0E6D               	movlw	low (_os+7)
 48100  014D8E  6E03               	movwf	i2memcpy@s1,c
 48101  014D90  0E01               	movlw	high (_os+7)
 48102  014D92  6E04               	movwf	i2memcpy@s1+1,c
 48103  014D94  0E00               	movlw	0
 48104  014D96  6E06               	movwf	i2memcpy@n+1,c
 48105  014D98  0E04               	movlw	4
 48106  014D9A  6E05               	movwf	i2memcpy@n,c
 48107  014D9C  ECAC  F0A4         	call	i2_memcpy	;wreg free
 48108                           
 48109                           ;i2c.c: 302: memcpy(&buffer[4], &os.absolute_position, 2);
 48110  014DA0  0E2A               	movlw	low (i2c_eeprom_save_position@buffer+4)
 48111  014DA2  6E01               	movwf	i2memcpy@d1,c
 48112  014DA4  0E00               	movlw	high (i2c_eeprom_save_position@buffer+4)
 48113  014DA6  6E02               	movwf	i2memcpy@d1+1,c
 48114  014DA8  0E71               	movlw	low (_os+11)
 48115  014DAA  6E03               	movwf	i2memcpy@s1,c
 48116  014DAC  0E01               	movlw	high (_os+11)
 48117  014DAE  6E04               	movwf	i2memcpy@s1+1,c
 48118  014DB0  0E00               	movlw	0
 48119  014DB2  6E06               	movwf	i2memcpy@n+1,c
 48120  014DB4  0E02               	movlw	2
 48121  014DB6  6E05               	movwf	i2memcpy@n,c
 48122  014DB8  ECAC  F0A4         	call	i2_memcpy	;wreg free
 48123                           
 48124                           ;i2c.c: 303: buffer[6] = os.approach_direction;
 48125  014DBC  C179  F02C         	movff	_os+19,i2c_eeprom_save_position@buffer+6	;volatile
 48126                           
 48127                           ;i2c.c: 306: i2c_eeprom_write(0x200, &buffer[0], 7);
 48128  014DC0  0E02               	movlw	2
 48129  014DC2  6E0C               	movwf	i2c_eeprom_write@address+1,c
 48130  014DC4  0E00               	movlw	0
 48131  014DC6  6E0B               	movwf	i2c_eeprom_write@address,c
 48132  014DC8  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48133  014DCA  6E0D               	movwf	i2c_eeprom_write@data,c
 48134  014DCC  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48135  014DCE  6E0E               	movwf	i2c_eeprom_write@data+1,c
 48136  014DD0  0E07               	movlw	7
 48137  014DD2  6E0F               	movwf	i2c_eeprom_write@length,c
 48138  014DD4  EC89  F09F         	call	_i2c_eeprom_write	;wreg free
 48139  014DD8  0012               	return		;funcret
 48140  014DDA                     __end_of_i2c_eeprom_save_position:
 48141                           	opt stack 0
 48142                           tosu	equ	0xFFF
 48143                           tosh	equ	0xFFE
 48144                           tosl	equ	0xFFD
 48145                           pclatu	equ	0xFFB
 48146                           pclath	equ	0xFFA
 48147                           tblptru	equ	0xFF8
 48148                           tblptrh	equ	0xFF7
 48149                           tblptrl	equ	0xFF6
 48150                           tablat	equ	0xFF5
 48151                           prodh	equ	0xFF4
 48152                           prodl	equ	0xFF3
 48153                           intcon	equ	0xFF2
 48154                           indf0	equ	0xFEF
 48155                           postinc0	equ	0xFEE
 48156                           fsr0h	equ	0xFEA
 48157                           fsr0l	equ	0xFE9
 48158                           wreg	equ	0xFE8
 48159                           indf1	equ	0xFE7
 48160                           postinc1	equ	0xFE6
 48161                           postdec1	equ	0xFE5
 48162                           plusw1	equ	0xFE3
 48163                           fsr1h	equ	0xFE2
 48164                           fsr1l	equ	0xFE1
 48165                           indf2	equ	0xFDF
 48166                           postinc2	equ	0xFDE
 48167                           postdec2	equ	0xFDD
 48168                           plusw2	equ	0xFDB
 48169                           fsr2h	equ	0xFDA
 48170                           fsr2l	equ	0xFD9
 48171                           status	equ	0xFD8
 48172                           
 48173 ;; *************** function _i2c_eeprom_write *****************
 48174 ;; Defined at:
 48175 ;;		line 256 in file "i2c.c"
 48176 ;; Parameters:    Size  Location     Type
 48177 ;;  address         2   10[COMRAM] unsigned int 
 48178 ;;  data            2   12[COMRAM] PTR unsigned char 
 48179 ;;		 -> i2c_eeprom_save_position@buffer(7), i2c_eeprom_writeInt16@data(2), i2c_eeprom_writeUint32@data(4), i2c_eeprom_wr
      +iteUint16@data(2), 
 48180 ;;  length          1   14[COMRAM] unsigned char 
 48181 ;; Auto vars:     Size  Location     Type
 48182 ;;  dat            17   18[COMRAM] unsigned char [17]
 48183 ;;  cntr            1   36[COMRAM] unsigned char 
 48184 ;;  slave_addres    1   35[COMRAM] unsigned char 
 48185 ;; Return value:  Size  Location     Type
 48186 ;;                  1    wreg      void 
 48187 ;; Registers used:
 48188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48189 ;; Tracked objects:
 48190 ;;		On entry : 0/0
 48191 ;;		On exit  : 0/0
 48192 ;;		Unchanged: 0/0
 48193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48194 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48195 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48196 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48197 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48198 ;;Total ram usage:       27 bytes
 48199 ;; Hardware stack levels used:    1
 48200 ;; Hardware stack levels required when called:    2
 48201 ;; This function calls:
 48202 ;;		i2__i2c_eeprom_busy
 48203 ;;		i2__i2c_write
 48204 ;; This function is called by:
 48205 ;;		_i2c_eeprom_save_position
 48206 ;;		_i2c_eeprom_writeUint16
 48207 ;;		_i2c_eeprom_writeUint32
 48208 ;;		_i2c_eeprom_writeInt16
 48209 ;; This function uses a non-reentrant model
 48210 ;;
 48211                           
 48212                           	psect	text197
 48213  013F12                     __ptext197:
 48214                           	opt stack 0
 48215  013F12                     _i2c_eeprom_write:
 48216                           	opt stack 13
 48217                           
 48218                           ;i2c.c: 258: uint8_t cntr;;i2c.c: 259: uint8_t slave_address;;i2c.c: 260: uint8_t dat[17
      +                          ];;i2c.c: 262: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 48219                           
 48220                           ;incstack = 0
 48221  013F12  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 48222  013F16  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 48223  013F1A  0E07               	movlw	7
 48224  013F1C  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 48225  013F1E                     i2u1506_45:
 48226  013F1E  90D8               	bcf	status,0,c
 48227  013F20  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 48228  013F22  3210               	rrcf	??_i2c_eeprom_write,f,c
 48229  013F24  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 48230  013F26  D7FB               	goto	i2u1506_45
 48231  013F28  5010               	movf	??_i2c_eeprom_write,w,c
 48232  013F2A  0B0E               	andlw	14
 48233  013F2C  09A0               	iorlw	160
 48234  013F2E  6E24               	movwf	i2c_eeprom_write@slave_address,c
 48235                           
 48236                           ;i2c.c: 263: dat[0] = address & 0xFF;
 48237  013F30  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 48238                           
 48239                           ;i2c.c: 265: length &= 0b00001111;
 48240  013F34  0E0F               	movlw	15
 48241  013F36  160F               	andwf	i2c_eeprom_write@length,f,c
 48242                           
 48243                           ;i2c.c: 266: for(cntr=0; cntr<length; ++cntr)
 48244  013F38  0E00               	movlw	0
 48245  013F3A  6E25               	movwf	i2c_eeprom_write@cntr,c
 48246  013F3C  D018               	goto	i2l1211
 48247  013F3E                     
 48248                           ;i2c.c: 267: {;i2c.c: 268: dat[cntr+1] = data[cntr];
 48249  013F3E  5025               	movf	i2c_eeprom_write@cntr,w,c
 48250  013F40  0D01               	mullw	1
 48251  013F42  50F3               	movf	prodl,w,c
 48252  013F44  240D               	addwf	i2c_eeprom_write@data,w,c
 48253  013F46  6ED9               	movwf	fsr2l,c
 48254  013F48  50F4               	movf	prodh,w,c
 48255  013F4A  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 48256  013F4C  6EDA               	movwf	fsr2h,c
 48257  013F4E  5025               	movf	i2c_eeprom_write@cntr,w,c
 48258  013F50  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 48259  013F52  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 48260  013F54  0E01               	movlw	1
 48261  013F56  2610               	addwf	??_i2c_eeprom_write,f,c
 48262  013F58  0E00               	movlw	0
 48263  013F5A  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 48264  013F5C  0E13               	movlw	low i2c_eeprom_write@dat
 48265  013F5E  2410               	addwf	??_i2c_eeprom_write,w,c
 48266  013F60  6EE1               	movwf	fsr1l,c
 48267  013F62  0E00               	movlw	high i2c_eeprom_write@dat
 48268  013F64  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 48269  013F66  6EE2               	movwf	fsr1h,c
 48270  013F68  CFDF FFE7          	movff	indf2,indf1
 48271  013F6C  2A25               	incf	i2c_eeprom_write@cntr,f,c
 48272  013F6E                     i2l1211:
 48273  013F6E  500F               	movf	i2c_eeprom_write@length,w,c
 48274  013F70  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 48275  013F72  A0D8               	btfss	status,0,c
 48276  013F74  D7E4               	goto	i2l1212
 48277  013F76                     i2u1507_40:
 48278                           
 48279                           ;i2c.c: 269: };i2c.c: 272: while(_i2c_eeprom_busy());
 48280  013F76  EC8F  F0AD         	call	i2__i2c_eeprom_busy	;wreg free
 48281  013F7A  0900               	iorlw	0
 48282  013F7C  A4D8               	btfss	status,2,c
 48283  013F7E  D7FB               	goto	i2u1507_40
 48284                           
 48285                           ;i2c.c: 274: _i2c_write(slave_address, &dat[0], length+1);
 48286  013F80  0E13               	movlw	low i2c_eeprom_write@dat
 48287  013F82  6E06               	movwf	i2__i2c_write@data,c
 48288  013F84  0E00               	movlw	high i2c_eeprom_write@dat
 48289  013F86  6E07               	movwf	i2__i2c_write@data+1,c
 48290  013F88  280F               	incf	i2c_eeprom_write@length,w,c
 48291  013F8A  6E08               	movwf	i2__i2c_write@length,c
 48292  013F8C  5024               	movf	i2c_eeprom_write@slave_address,w,c
 48293  013F8E  EC94  F0A9         	call	i2__i2c_write
 48294  013F92  0012               	return		;funcret
 48295  013F94                     __end_of_i2c_eeprom_write:
 48296                           	opt stack 0
 48297                           tosu	equ	0xFFF
 48298                           tosh	equ	0xFFE
 48299                           tosl	equ	0xFFD
 48300                           pclatu	equ	0xFFB
 48301                           pclath	equ	0xFFA
 48302                           tblptru	equ	0xFF8
 48303                           tblptrh	equ	0xFF7
 48304                           tblptrl	equ	0xFF6
 48305                           tablat	equ	0xFF5
 48306                           prodh	equ	0xFF4
 48307                           prodl	equ	0xFF3
 48308                           intcon	equ	0xFF2
 48309                           indf0	equ	0xFEF
 48310                           postinc0	equ	0xFEE
 48311                           fsr0h	equ	0xFEA
 48312                           fsr0l	equ	0xFE9
 48313                           wreg	equ	0xFE8
 48314                           indf1	equ	0xFE7
 48315                           postinc1	equ	0xFE6
 48316                           postdec1	equ	0xFE5
 48317                           plusw1	equ	0xFE3
 48318                           fsr1h	equ	0xFE2
 48319                           fsr1l	equ	0xFE1
 48320                           indf2	equ	0xFDF
 48321                           postinc2	equ	0xFDE
 48322                           postdec2	equ	0xFDD
 48323                           plusw2	equ	0xFDB
 48324                           fsr2h	equ	0xFDA
 48325                           fsr2l	equ	0xFD9
 48326                           status	equ	0xFD8
 48327                           
 48328 ;; *************** function i2__i2c_write *****************
 48329 ;; Defined at:
 48330 ;;		line 86 in file "i2c.c"
 48331 ;; Parameters:    Size  Location     Type
 48332 ;;  slave_addres    1    wreg     unsigned char 
 48333 ;;  data            2    5[COMRAM] PTR unsigned char 
 48334 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 48335 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 48336 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 48337 ;;  length          1    7[COMRAM] unsigned char 
 48338 ;; Auto vars:     Size  Location     Type
 48339 ;;  slave_addres    1    8[COMRAM] unsigned char 
 48340 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 48341 ;; Return value:  Size  Location     Type
 48342 ;;                  1    wreg      void 
 48343 ;; Registers used:
 48344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48345 ;; Tracked objects:
 48346 ;;		On entry : 0/0
 48347 ;;		On exit  : 0/0
 48348 ;;		Unchanged: 0/0
 48349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48350 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48353 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48354 ;;Total ram usage:        5 bytes
 48355 ;; Hardware stack levels used:    1
 48356 ;; Hardware stack levels required when called:    1
 48357 ;; This function calls:
 48358 ;;		i2__i2c_send
 48359 ;;		i2__i2c_start
 48360 ;;		i2__i2c_stop
 48361 ;;		i2__i2c_wait_idle
 48362 ;; This function is called by:
 48363 ;;		_i2c_eeprom_write
 48364 ;; This function uses a non-reentrant model
 48365 ;;
 48366                           
 48367                           	psect	text198
 48368  015328                     __ptext198:
 48369                           	opt stack 0
 48370  015328                     i2__i2c_write:
 48371                           	opt stack 13
 48372                           
 48373                           ;incstack = 0
 48374                           ;i2__i2c_write@slave_address stored from wreg
 48375  015328  6E09               	movwf	i2__i2c_write@slave_address,c
 48376                           
 48377                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 48378  01532A  EC6B  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48379                           
 48380                           ;i2c.c: 91: _i2c_start();
 48381  01532E  EC0E  F0AF         	call	i2__i2c_start	;wreg free
 48382                           
 48383                           ;i2c.c: 92: _i2c_wait_idle();
 48384  015332  EC6B  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48385                           
 48386                           ;i2c.c: 93: _i2c_send(slave_address);
 48387  015336  5009               	movf	i2__i2c_write@slave_address,w,c
 48388  015338  EC12  F0AF         	call	i2__i2c_send
 48389                           
 48390                           ;i2c.c: 94: _i2c_wait_idle();
 48391  01533C  EC6B  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48392                           
 48393                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 48394  015340  0E00               	movlw	0
 48395  015342  6E0A               	movwf	i2__i2c_write@cntr,c
 48396  015344  D00E               	goto	i2l1160
 48397  015346                     
 48398                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 48399  015346  500A               	movf	i2__i2c_write@cntr,w,c
 48400  015348  0D01               	mullw	1
 48401  01534A  50F3               	movf	prodl,w,c
 48402  01534C  2406               	addwf	i2__i2c_write@data,w,c
 48403  01534E  6ED9               	movwf	fsr2l,c
 48404  015350  50F4               	movf	prodh,w,c
 48405  015352  2007               	addwfc	i2__i2c_write@data+1,w,c
 48406  015354  6EDA               	movwf	fsr2h,c
 48407  015356  50DF               	movf	indf2,w,c
 48408  015358  EC12  F0AF         	call	i2__i2c_send
 48409                           
 48410                           ;i2c.c: 99: _i2c_wait_idle();
 48411  01535C  EC6B  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48412  015360  2A0A               	incf	i2__i2c_write@cntr,f,c
 48413  015362                     i2l1160:
 48414  015362  5008               	movf	i2__i2c_write@length,w,c
 48415  015364  5C0A               	subwf	i2__i2c_write@cntr,w,c
 48416  015366  A0D8               	btfss	status,0,c
 48417  015368  D7EE               	goto	i2l1161
 48418                           
 48419                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 48420  01536A  EC0A  F0AF         	call	i2__i2c_stop	;wreg free
 48421  01536E  0012               	return		;funcret
 48422  015370                     __end_ofi2__i2c_write:
 48423                           	opt stack 0
 48424                           tosu	equ	0xFFF
 48425                           tosh	equ	0xFFE
 48426                           tosl	equ	0xFFD
 48427                           pclatu	equ	0xFFB
 48428                           pclath	equ	0xFFA
 48429                           tblptru	equ	0xFF8
 48430                           tblptrh	equ	0xFF7
 48431                           tblptrl	equ	0xFF6
 48432                           tablat	equ	0xFF5
 48433                           prodh	equ	0xFF4
 48434                           prodl	equ	0xFF3
 48435                           intcon	equ	0xFF2
 48436                           indf0	equ	0xFEF
 48437                           postinc0	equ	0xFEE
 48438                           fsr0h	equ	0xFEA
 48439                           fsr0l	equ	0xFE9
 48440                           wreg	equ	0xFE8
 48441                           indf1	equ	0xFE7
 48442                           postinc1	equ	0xFE6
 48443                           postdec1	equ	0xFE5
 48444                           plusw1	equ	0xFE3
 48445                           fsr1h	equ	0xFE2
 48446                           fsr1l	equ	0xFE1
 48447                           indf2	equ	0xFDF
 48448                           postinc2	equ	0xFDE
 48449                           postdec2	equ	0xFDD
 48450                           plusw2	equ	0xFDB
 48451                           fsr2h	equ	0xFDA
 48452                           fsr2l	equ	0xFD9
 48453                           status	equ	0xFD8
 48454                           
 48455 ;; *************** function i2__i2c_eeprom_busy *****************
 48456 ;; Defined at:
 48457 ;;		line 171 in file "i2c.c"
 48458 ;; Parameters:    Size  Location     Type
 48459 ;;		None
 48460 ;; Auto vars:     Size  Location     Type
 48461 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 48462 ;; Return value:  Size  Location     Type
 48463 ;;                  1    wreg      unsigned char 
 48464 ;; Registers used:
 48465 ;;		wreg, status,2, status,0, cstack
 48466 ;; Tracked objects:
 48467 ;;		On entry : 0/0
 48468 ;;		On exit  : 0/0
 48469 ;;		Unchanged: 0/0
 48470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48475 ;;Total ram usage:        1 bytes
 48476 ;; Hardware stack levels used:    1
 48477 ;; Hardware stack levels required when called:    1
 48478 ;; This function calls:
 48479 ;;		i2__i2c_send
 48480 ;;		i2__i2c_start
 48481 ;;		i2__i2c_stop
 48482 ;;		i2__i2c_wait_idle
 48483 ;; This function is called by:
 48484 ;;		_i2c_eeprom_write
 48485 ;; This function uses a non-reentrant model
 48486 ;;
 48487                           
 48488                           	psect	text199
 48489  015B1E                     __ptext199:
 48490                           	opt stack 0
 48491  015B1E                     i2__i2c_eeprom_busy:
 48492                           	opt stack 13
 48493                           
 48494                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 48495                           
 48496                           ;incstack = 0
 48497  015B1E  EC6B  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48498                           
 48499                           ;i2c.c: 175: _i2c_start();
 48500  015B22  EC0E  F0AF         	call	i2__i2c_start	;wreg free
 48501                           
 48502                           ;i2c.c: 176: _i2c_wait_idle();
 48503  015B26  EC6B  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48504                           
 48505                           ;i2c.c: 177: _i2c_send(0b10100000);
 48506  015B2A  0EA0               	movlw	160
 48507  015B2C  EC12  F0AF         	call	i2__i2c_send
 48508                           
 48509                           ;i2c.c: 178: _i2c_wait_idle();
 48510  015B30  EC6B  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48511                           
 48512                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 48513  015B34  0E00               	movlw	0
 48514  015B36  BCC5               	btfsc	4037,6,c	;volatile
 48515  015B38  0E01               	movlw	1
 48516  015B3A  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 48517                           
 48518                           ;i2c.c: 183: _i2c_stop();
 48519  015B3C  EC0A  F0AF         	call	i2__i2c_stop	;wreg free
 48520                           
 48521                           ;i2c.c: 185: return 0;
 48522  015B40  0E00               	movlw	0
 48523  015B42  0012               	return	
 48524  015B44                     __end_ofi2__i2c_eeprom_busy:
 48525                           	opt stack 0
 48526                           tosu	equ	0xFFF
 48527                           tosh	equ	0xFFE
 48528                           tosl	equ	0xFFD
 48529                           pclatu	equ	0xFFB
 48530                           pclath	equ	0xFFA
 48531                           tblptru	equ	0xFF8
 48532                           tblptrh	equ	0xFF7
 48533                           tblptrl	equ	0xFF6
 48534                           tablat	equ	0xFF5
 48535                           prodh	equ	0xFF4
 48536                           prodl	equ	0xFF3
 48537                           intcon	equ	0xFF2
 48538                           indf0	equ	0xFEF
 48539                           postinc0	equ	0xFEE
 48540                           fsr0h	equ	0xFEA
 48541                           fsr0l	equ	0xFE9
 48542                           wreg	equ	0xFE8
 48543                           indf1	equ	0xFE7
 48544                           postinc1	equ	0xFE6
 48545                           postdec1	equ	0xFE5
 48546                           plusw1	equ	0xFE3
 48547                           fsr1h	equ	0xFE2
 48548                           fsr1l	equ	0xFE1
 48549                           indf2	equ	0xFDF
 48550                           postinc2	equ	0xFDE
 48551                           postdec2	equ	0xFDD
 48552                           plusw2	equ	0xFDB
 48553                           fsr2h	equ	0xFDA
 48554                           fsr2l	equ	0xFD9
 48555                           status	equ	0xFD8
 48556                           
 48557 ;; *************** function i2__i2c_wait_idle *****************
 48558 ;; Defined at:
 48559 ;;		line 42 in file "i2c.c"
 48560 ;; Parameters:    Size  Location     Type
 48561 ;;		None
 48562 ;; Auto vars:     Size  Location     Type
 48563 ;;		None
 48564 ;; Return value:  Size  Location     Type
 48565 ;;                  1    wreg      void 
 48566 ;; Registers used:
 48567 ;;		wreg, status,2, status,0
 48568 ;; Tracked objects:
 48569 ;;		On entry : 0/0
 48570 ;;		On exit  : 0/0
 48571 ;;		Unchanged: 0/0
 48572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48575 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48576 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48577 ;;Total ram usage:        5 bytes
 48578 ;; Hardware stack levels used:    1
 48579 ;; This function calls:
 48580 ;;		Nothing
 48581 ;; This function is called by:
 48582 ;;		i2__i2c_write
 48583 ;;		i2__i2c_eeprom_busy
 48584 ;; This function uses a non-reentrant model
 48585 ;;
 48586                           
 48587                           	psect	text200
 48588  014CD6                     __ptext200:
 48589                           	opt stack 0
 48590  014CD6                     i2__i2c_wait_idle:
 48591                           	opt stack 13
 48592                           
 48593                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 48594                           
 48595                           ;incstack = 0
 48596  014CD6  A4C7               	btfss	4039,2,c	;volatile
 48597  014CD8  D003               	goto	i2u1356_40
 48598  014CDA  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48599  014CDC  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 48600  014CDE  D001               	goto	i2u1356_48
 48601  014CE0                     i2u1356_40:
 48602  014CE0  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48603  014CE2                     i2u1356_48:
 48604  014CE2  A0C5               	btfss	4037,0,c	;volatile
 48605  014CE4  D003               	goto	i2u1357_40
 48606  014CE6  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48607  014CE8  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 48608  014CEA  D001               	goto	i2u1357_48
 48609  014CEC                     i2u1357_40:
 48610  014CEC  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48611  014CEE                     i2u1357_48:
 48612  014CEE  A2C5               	btfss	4037,1,c	;volatile
 48613  014CF0  D003               	goto	i2u1358_40
 48614  014CF2  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48615  014CF4  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 48616  014CF6  D001               	goto	i2u1358_48
 48617  014CF8                     i2u1358_40:
 48618  014CF8  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48619  014CFA                     i2u1358_48:
 48620  014CFA  A4C5               	btfss	4037,2,c	;volatile
 48621  014CFC  D003               	goto	i2u1359_40
 48622  014CFE  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48623  014D00  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 48624  014D02  D001               	goto	i2u1359_48
 48625  014D04                     i2u1359_40:
 48626  014D04  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48627  014D06                     i2u1359_48:
 48628  014D06  A6C5               	btfss	4037,3,c	;volatile
 48629  014D08  D003               	goto	i2u1360_40
 48630  014D0A  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 48631  014D0C  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 48632  014D0E  D001               	goto	i2u1360_48
 48633  014D10                     i2u1360_40:
 48634  014D10  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 48635  014D12                     i2u1360_48:
 48636  014D12  A8C5               	btfss	4037,4,c	;volatile
 48637  014D14  D002               	goto	i2u1361_40
 48638  014D16  0E01               	movlw	1
 48639  014D18  D001               	goto	i2u1361_46
 48640  014D1A                     i2u1361_40:
 48641  014D1A  0E00               	movlw	0
 48642  014D1C                     i2u1361_46:
 48643  014D1C  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 48644  014D1E  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 48645  014D20  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 48646  014D22  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 48647  014D24  1001               	iorwf	??i2__i2c_wait_idle,w,c
 48648  014D26  0900               	iorlw	0
 48649  014D28  B4D8               	btfsc	status,2,c
 48650  014D2A  0012               	return	
 48651  014D2C  D7D4               	goto	i2__i2c_wait_idle
 48652  014D2E                     __end_ofi2__i2c_wait_idle:
 48653                           	opt stack 0
 48654                           tosu	equ	0xFFF
 48655                           tosh	equ	0xFFE
 48656                           tosl	equ	0xFFD
 48657                           pclatu	equ	0xFFB
 48658                           pclath	equ	0xFFA
 48659                           tblptru	equ	0xFF8
 48660                           tblptrh	equ	0xFF7
 48661                           tblptrl	equ	0xFF6
 48662                           tablat	equ	0xFF5
 48663                           prodh	equ	0xFF4
 48664                           prodl	equ	0xFF3
 48665                           intcon	equ	0xFF2
 48666                           indf0	equ	0xFEF
 48667                           postinc0	equ	0xFEE
 48668                           fsr0h	equ	0xFEA
 48669                           fsr0l	equ	0xFE9
 48670                           wreg	equ	0xFE8
 48671                           indf1	equ	0xFE7
 48672                           postinc1	equ	0xFE6
 48673                           postdec1	equ	0xFE5
 48674                           plusw1	equ	0xFE3
 48675                           fsr1h	equ	0xFE2
 48676                           fsr1l	equ	0xFE1
 48677                           indf2	equ	0xFDF
 48678                           postinc2	equ	0xFDE
 48679                           postdec2	equ	0xFDD
 48680                           plusw2	equ	0xFDB
 48681                           fsr2h	equ	0xFDA
 48682                           fsr2l	equ	0xFD9
 48683                           status	equ	0xFD8
 48684                           
 48685 ;; *************** function i2__i2c_stop *****************
 48686 ;; Defined at:
 48687 ;;		line 65 in file "i2c.c"
 48688 ;; Parameters:    Size  Location     Type
 48689 ;;		None
 48690 ;; Auto vars:     Size  Location     Type
 48691 ;;		None
 48692 ;; Return value:  Size  Location     Type
 48693 ;;                  1    wreg      void 
 48694 ;; Registers used:
 48695 ;;		None
 48696 ;; Tracked objects:
 48697 ;;		On entry : 0/0
 48698 ;;		On exit  : 0/0
 48699 ;;		Unchanged: 0/0
 48700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48705 ;;Total ram usage:        0 bytes
 48706 ;; Hardware stack levels used:    1
 48707 ;; This function calls:
 48708 ;;		Nothing
 48709 ;; This function is called by:
 48710 ;;		i2__i2c_write
 48711 ;;		i2__i2c_eeprom_busy
 48712 ;; This function uses a non-reentrant model
 48713 ;;
 48714                           
 48715                           	psect	text201
 48716  015E14                     __ptext201:
 48717                           	opt stack 0
 48718  015E14                     i2__i2c_stop:
 48719                           	opt stack 13
 48720                           
 48721                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 48722                           
 48723                           ;incstack = 0
 48724  015E14  84C5               	bsf	4037,2,c	;volatile
 48725  015E16  A4C5               	btfss	4037,2,c	;volatile
 48726  015E18  0012               	return	
 48727  015E1A  D7FD               	goto	i2l1143
 48728  015E1C                     __end_ofi2__i2c_stop:
 48729                           	opt stack 0
 48730                           tosu	equ	0xFFF
 48731                           tosh	equ	0xFFE
 48732                           tosl	equ	0xFFD
 48733                           pclatu	equ	0xFFB
 48734                           pclath	equ	0xFFA
 48735                           tblptru	equ	0xFF8
 48736                           tblptrh	equ	0xFF7
 48737                           tblptrl	equ	0xFF6
 48738                           tablat	equ	0xFF5
 48739                           prodh	equ	0xFF4
 48740                           prodl	equ	0xFF3
 48741                           intcon	equ	0xFF2
 48742                           indf0	equ	0xFEF
 48743                           postinc0	equ	0xFEE
 48744                           fsr0h	equ	0xFEA
 48745                           fsr0l	equ	0xFE9
 48746                           wreg	equ	0xFE8
 48747                           indf1	equ	0xFE7
 48748                           postinc1	equ	0xFE6
 48749                           postdec1	equ	0xFE5
 48750                           plusw1	equ	0xFE3
 48751                           fsr1h	equ	0xFE2
 48752                           fsr1l	equ	0xFE1
 48753                           indf2	equ	0xFDF
 48754                           postinc2	equ	0xFDE
 48755                           postdec2	equ	0xFDD
 48756                           plusw2	equ	0xFDB
 48757                           fsr2h	equ	0xFDA
 48758                           fsr2l	equ	0xFD9
 48759                           status	equ	0xFD8
 48760                           
 48761 ;; *************** function i2__i2c_start *****************
 48762 ;; Defined at:
 48763 ;;		line 47 in file "i2c.c"
 48764 ;; Parameters:    Size  Location     Type
 48765 ;;		None
 48766 ;; Auto vars:     Size  Location     Type
 48767 ;;		None
 48768 ;; Return value:  Size  Location     Type
 48769 ;;                  1    wreg      void 
 48770 ;; Registers used:
 48771 ;;		None
 48772 ;; Tracked objects:
 48773 ;;		On entry : 0/0
 48774 ;;		On exit  : 0/0
 48775 ;;		Unchanged: 0/0
 48776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48781 ;;Total ram usage:        0 bytes
 48782 ;; Hardware stack levels used:    1
 48783 ;; This function calls:
 48784 ;;		Nothing
 48785 ;; This function is called by:
 48786 ;;		i2__i2c_write
 48787 ;;		i2__i2c_eeprom_busy
 48788 ;; This function uses a non-reentrant model
 48789 ;;
 48790                           
 48791                           	psect	text202
 48792  015E1C                     __ptext202:
 48793                           	opt stack 0
 48794  015E1C                     i2__i2c_start:
 48795                           	opt stack 13
 48796                           
 48797                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 48798                           
 48799                           ;incstack = 0
 48800  015E1C  80C5               	bsf	4037,0,c	;volatile
 48801  015E1E  A0C5               	btfss	4037,0,c	;volatile
 48802  015E20  0012               	return	
 48803  015E22  D7FD               	goto	i2l1128
 48804  015E24                     __end_ofi2__i2c_start:
 48805                           	opt stack 0
 48806                           tosu	equ	0xFFF
 48807                           tosh	equ	0xFFE
 48808                           tosl	equ	0xFFD
 48809                           pclatu	equ	0xFFB
 48810                           pclath	equ	0xFFA
 48811                           tblptru	equ	0xFF8
 48812                           tblptrh	equ	0xFF7
 48813                           tblptrl	equ	0xFF6
 48814                           tablat	equ	0xFF5
 48815                           prodh	equ	0xFF4
 48816                           prodl	equ	0xFF3
 48817                           intcon	equ	0xFF2
 48818                           indf0	equ	0xFEF
 48819                           postinc0	equ	0xFEE
 48820                           fsr0h	equ	0xFEA
 48821                           fsr0l	equ	0xFE9
 48822                           wreg	equ	0xFE8
 48823                           indf1	equ	0xFE7
 48824                           postinc1	equ	0xFE6
 48825                           postdec1	equ	0xFE5
 48826                           plusw1	equ	0xFE3
 48827                           fsr1h	equ	0xFE2
 48828                           fsr1l	equ	0xFE1
 48829                           indf2	equ	0xFDF
 48830                           postinc2	equ	0xFDE
 48831                           postdec2	equ	0xFDD
 48832                           plusw2	equ	0xFDB
 48833                           fsr2h	equ	0xFDA
 48834                           fsr2l	equ	0xFD9
 48835                           status	equ	0xFD8
 48836                           
 48837 ;; *************** function i2__i2c_send *****************
 48838 ;; Defined at:
 48839 ;;		line 53 in file "i2c.c"
 48840 ;; Parameters:    Size  Location     Type
 48841 ;;  dat             1    wreg     unsigned char 
 48842 ;; Auto vars:     Size  Location     Type
 48843 ;;  dat             1    0[COMRAM] unsigned char 
 48844 ;; Return value:  Size  Location     Type
 48845 ;;                  1    wreg      void 
 48846 ;; Registers used:
 48847 ;;		wreg
 48848 ;; Tracked objects:
 48849 ;;		On entry : 0/0
 48850 ;;		On exit  : 0/0
 48851 ;;		Unchanged: 0/0
 48852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48857 ;;Total ram usage:        1 bytes
 48858 ;; Hardware stack levels used:    1
 48859 ;; This function calls:
 48860 ;;		Nothing
 48861 ;; This function is called by:
 48862 ;;		i2__i2c_write
 48863 ;;		i2__i2c_eeprom_busy
 48864 ;; This function uses a non-reentrant model
 48865 ;;
 48866                           
 48867                           	psect	text203
 48868  015E24                     __ptext203:
 48869                           	opt stack 0
 48870  015E24                     i2__i2c_send:
 48871                           	opt stack 13
 48872                           
 48873                           ;incstack = 0
 48874                           ;i2__i2c_send@dat stored from wreg
 48875  015E24  6E01               	movwf	i2__i2c_send@dat,c
 48876                           
 48877                           ;i2c.c: 55: SSP1BUF = dat;
 48878  015E26  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 48879  015E2A  0012               	return		;funcret
 48880  015E2C                     __end_ofi2__i2c_send:
 48881                           	opt stack 0
 48882                           tosu	equ	0xFFF
 48883                           tosh	equ	0xFFE
 48884                           tosl	equ	0xFFD
 48885                           pclatu	equ	0xFFB
 48886                           pclath	equ	0xFFA
 48887                           tblptru	equ	0xFF8
 48888                           tblptrh	equ	0xFF7
 48889                           tblptrl	equ	0xFF6
 48890                           tablat	equ	0xFF5
 48891                           prodh	equ	0xFF4
 48892                           prodl	equ	0xFF3
 48893                           intcon	equ	0xFF2
 48894                           indf0	equ	0xFEF
 48895                           postinc0	equ	0xFEE
 48896                           fsr0h	equ	0xFEA
 48897                           fsr0l	equ	0xFE9
 48898                           wreg	equ	0xFE8
 48899                           indf1	equ	0xFE7
 48900                           postinc1	equ	0xFE6
 48901                           postdec1	equ	0xFE5
 48902                           plusw1	equ	0xFE3
 48903                           fsr1h	equ	0xFE2
 48904                           fsr1l	equ	0xFE1
 48905                           indf2	equ	0xFDF
 48906                           postinc2	equ	0xFDE
 48907                           postdec2	equ	0xFDD
 48908                           plusw2	equ	0xFDB
 48909                           fsr2h	equ	0xFDA
 48910                           fsr2l	equ	0xFD9
 48911                           status	equ	0xFD8
 48912                           
 48913 ;; *************** function _USBDeviceTasks *****************
 48914 ;; Defined at:
 48915 ;;		line 477 in file "usb_device.c"
 48916 ;; Parameters:    Size  Location     Type
 48917 ;;		None
 48918 ;; Auto vars:     Size  Location     Type
 48919 ;;  i               1   30[COMRAM] unsigned char 
 48920 ;; Return value:  Size  Location     Type
 48921 ;;                  1    wreg      void 
 48922 ;; Registers used:
 48923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 48924 ;; Tracked objects:
 48925 ;;		On entry : 0/0
 48926 ;;		On exit  : 0/0
 48927 ;;		Unchanged: 0/0
 48928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48933 ;;Total ram usage:        1 bytes
 48934 ;; Hardware stack levels used:    1
 48935 ;; Hardware stack levels required when called:    8
 48936 ;; This function calls:
 48937 ;;		_USBCtrlEPAllowStatusStage
 48938 ;;		_USBCtrlEPService
 48939 ;;		_USBIncrement1msInternalTimers
 48940 ;;		_USBStallHandler
 48941 ;;		_USBSuspend
 48942 ;;		_USBWakeFromSuspend
 48943 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48944 ;;		i2_USBDeviceInit
 48945 ;; This function is called by:
 48946 ;;		_SYS_InterruptHigh
 48947 ;; This function uses a non-reentrant model
 48948 ;;
 48949                           
 48950                           	psect	text204
 48951  00FF68                     __ptext204:
 48952                           	opt stack 0
 48953  00FF68                     _USBDeviceTasks:
 48954                           	opt stack 9
 48955                           
 48956                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 48957                           
 48958                           ;incstack = 0
 48959  00FF68  045D               	decf	_USBDeviceState,w,c	;volatile
 48960  00FF6A  B4D8               	btfsc	status,2,c
 48961                           
 48962                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 48963  00FF6C  BA65               	btfsc	3941,5,c	;volatile
 48964  00FF6E  D007               	goto	i2l155
 48965                           
 48966                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 48967  00FF70  0E00               	movlw	0
 48968  00FF72  6E62               	movwf	3938,c	;volatile
 48969                           
 48970                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 48971  00FF74  010F               	movlb	15	; () banked
 48972  00FF76  8136               	bsf	54,0,b	;volatile
 48973                           
 48974                           ; BSR set to: 15
 48975                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 48976  00FF78  8936               	bsf	54,4,b	;volatile
 48977                           
 48978                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 48979  00FF7A  0E02               	movlw	2
 48980  00FF7C  6E5D               	movwf	_USBDeviceState,c	;volatile
 48981  00FF7E                     i2l155:
 48982                           
 48983                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 48984                           
 48985                           ; BSR set to: 15
 48986                           
 48987                           ; BSR set to: 15
 48988  00FF7E  A462               	btfss	3938,2,c	;volatile
 48989  00FF80  D006               	goto	i2l156
 48990  00FF82  010F               	movlb	15	; () banked
 48991  00FF84  A536               	btfss	54,2,b	;volatile
 48992  00FF86  D003               	goto	i2l156
 48993                           
 48994                           ; BSR set to: 15
 48995                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 48996  00FF88  9462               	bcf	3938,2,c	;volatile
 48997                           
 48998                           ; BSR set to: 15
 48999                           ;usb_device.c: 640: USBWakeFromSuspend();
 49000  00FF8A  EC4D  F0AB         	call	_USBWakeFromSuspend	;wreg free
 49001  00FF8E                     i2l156:
 49002                           
 49003                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 49004  00FF8E  A265               	btfss	3941,1,c	;volatile
 49005  00FF90  D002               	goto	i2l157
 49006                           
 49007                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 49008  00FF92  98A1               	bcf	4001,4,c	;volatile
 49009                           
 49010                           ;usb_device.c: 650: return;
 49011  00FF94  0012               	return	
 49012  00FF96                     i2l157:
 49013                           
 49014                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 49015  00FF96  A062               	btfss	3938,0,c	;volatile
 49016  00FF98  D009               	goto	i2l159
 49017  00FF9A  010F               	movlb	15	; () banked
 49018  00FF9C  A136               	btfss	54,0,b	;volatile
 49019  00FF9E  D006               	goto	i2l159
 49020                           
 49021                           ; BSR set to: 15
 49022                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 49023  00FFA0  EC57  F080         	call	i2_USBDeviceInit	;wreg free
 49024                           
 49025                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 49026  00FFA4  88A0               	bsf	4000,4,c	;volatile
 49027                           
 49028                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 49029  00FFA6  0E04               	movlw	4
 49030  00FFA8  6E5D               	movwf	_USBDeviceState,c	;volatile
 49031                           
 49032                           ;usb_device.c: 681: (UIR &= 0xFE);
 49033  00FFAA  9062               	bcf	3938,0,c	;volatile
 49034  00FFAC                     i2l159:
 49035                           
 49036                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 49037  00FFAC  A862               	btfss	3938,4,c	;volatile
 49038  00FFAE  D004               	goto	i2l160
 49039  00FFB0  010F               	movlb	15	; () banked
 49040  00FFB2  B936               	btfsc	54,4,b	;volatile
 49041                           
 49042                           ; BSR set to: 15
 49043                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 49044  00FFB4  EC4D  F0AC         	call	_USBSuspend	;wreg free
 49045  00FFB8                     i2l160:
 49046                           
 49047                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 49048  00FFB8  AC62               	btfss	3938,6,c	;volatile
 49049  00FFBA  D01C               	goto	i2l164
 49050                           
 49051                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 49052  00FFBC  010F               	movlb	15	; () banked
 49053  00FFBE  AD36               	btfss	54,6,b	;volatile
 49054  00FFC0  D00E               	goto	i2l162
 49055                           
 49056                           ; BSR set to: 15
 49057                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 49058  00FFC2  0E00               	movlw	0
 49059  00FFC4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49060  00FFC6  0E73               	movlw	115
 49061  00FFC8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49062  00FFCA  0E00               	movlw	0
 49063  00FFCC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49064  00FFCE  0E00               	movlw	0
 49065  00FFD0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49066  00FFD2  0E00               	movlw	0
 49067  00FFD4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49068  00FFD6  0E01               	movlw	1
 49069  00FFD8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49070  00FFDA  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49071  00FFDE                     i2l162:
 49072                           
 49073                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 49074  00FFDE  9C62               	bcf	3938,6,c	;volatile
 49075                           
 49076                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 49077  00FFE0  EC1C  F0AE         	call	_USBIncrement1msInternalTimers	;wreg free
 49078                           
 49079                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 49080  00FFE4  0101               	movlb	1	; () banked
 49081  00FFE6  515F               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49082  00FFE8  A4D8               	btfss	status,2,c
 49083                           
 49084                           ; BSR set to: 1
 49085                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 49086  00FFEA  075F               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 49087                           
 49088                           ; BSR set to: 1
 49089                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 49090                           
 49091                           ; BSR set to: 1
 49092  00FFEC  515F               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49093  00FFEE  B4D8               	btfsc	status,2,c
 49094                           
 49095                           ; BSR set to: 1
 49096                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 49097  00FFF0  ECC2  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49098  00FFF4                     i2l164:
 49099                           
 49100                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 49101  00FFF4  AA62               	btfss	3938,5,c	;volatile
 49102  00FFF6  D004               	goto	i2l165
 49103  00FFF8  010F               	movlb	15	; () banked
 49104  00FFFA  BB36               	btfsc	54,5,b	;volatile
 49105                           
 49106                           ; BSR set to: 15
 49107                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 49108  00FFFC  EC1E  F0AA         	call	_USBStallHandler	;wreg free
 49109  010000                     i2l165:
 49110                           
 49111                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 49112  010000  A262               	btfss	3938,1,c	;volatile
 49113  010002  D012               	goto	i2l166
 49114  010004  010F               	movlb	15	; () banked
 49115  010006  A336               	btfss	54,1,b	;volatile
 49116  010008  D00F               	goto	i2l166
 49117                           
 49118                           ; BSR set to: 15
 49119                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 49120  01000A  0E7F               	movlw	127
 49121  01000C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49122  01000E  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49123  010010  0E00               	movlw	0
 49124  010012  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49125  010014  0E00               	movlw	0
 49126  010016  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49127  010018  0E00               	movlw	0
 49128  01001A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49129  01001C  0E01               	movlw	1
 49130  01001E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49131  010020  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49132                           
 49133                           ;usb_device.c: 759: {UEIR = 0;};
 49134  010024  0E00               	movlw	0
 49135  010026  6E63               	movwf	3939,c	;volatile
 49136  010028                     i2l166:
 49137                           
 49138                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 49139  010028  0E04               	movlw	4
 49140  01002A  605D               	cpfslt	_USBDeviceState,c	;volatile
 49141  01002C  D002               	goto	i2l167
 49142                           
 49143                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 49144  01002E  98A1               	bcf	4001,4,c	;volatile
 49145                           
 49146                           ;usb_device.c: 777: return;
 49147  010030  0012               	return	
 49148  010032                     i2l167:
 49149                           
 49150                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 49151  010032  010F               	movlb	15	; () banked
 49152  010034  A736               	btfss	54,3,b	;volatile
 49153  010036  D039               	goto	i2u1754_40
 49154                           
 49155                           ; BSR set to: 15
 49156                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 49157  010038  0E00               	movlw	0
 49158  01003A  6E1F               	movwf	USBDeviceTasks@i,c
 49159  01003C                     i2l18036:
 49160                           
 49161                           ; BSR set to: 15
 49162  01003C  0E03               	movlw	3
 49163  01003E  641F               	cpfsgt	USBDeviceTasks@i,c
 49164  010040  D001               	goto	i2l169
 49165  010042  D033               	goto	i2u1754_40
 49166  010044                     i2l169:
 49167                           
 49168                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 49169  010044  A662               	btfss	3938,3,c	;volatile
 49170  010046  D031               	goto	i2u1754_40
 49171                           
 49172                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 49173  010048  CF64 F05E          	movff	3940,_USTATcopy	;volatile
 49174                           
 49175                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 49176  01004C  305E               	rrcf	_USTATcopy,w,c	;volatile
 49177  01004E  32E8               	rrcf	wreg,f,c
 49178  010050  32E8               	rrcf	wreg,f,c
 49179  010052  0B0F               	andlw	15
 49180  010054  0101               	movlb	1	; () banked
 49181  010056  6F61               	movwf	_endpoint_number& (0+255),b	;volatile
 49182                           
 49183                           ; BSR set to: 1
 49184                           ;usb_device.c: 793: (UIR &= 0xF7);
 49185  010058  9662               	bcf	3938,3,c	;volatile
 49186                           
 49187                           ; BSR set to: 1
 49188                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 49189  01005A  B45E               	btfsc	_USTATcopy,2,c	;volatile
 49190  01005C  D007               	goto	i2l172
 49191                           
 49192                           ; BSR set to: 1
 49193                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 49194  01005E  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49195  010060  0D01               	mullw	1
 49196  010062  0E2F               	movlw	low _ep_data_out
 49197  010064  24F3               	addwf	prodl,w,c
 49198  010066  6ED9               	movwf	fsr2l,c
 49199  010068  0E01               	movlw	high _ep_data_out
 49200  01006A  D006               	goto	L72
 49201  01006C                     i2l172:
 49202                           
 49203                           ; BSR set to: 1
 49204                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 49205                           
 49206                           ; BSR set to: 1
 49207  01006C  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49208  01006E  0D01               	mullw	1
 49209  010070  0E32               	movlw	low _ep_data_in
 49210  010072  24F3               	addwf	prodl,w,c
 49211  010074  6ED9               	movwf	fsr2l,c
 49212  010076  0E01               	movlw	high _ep_data_in
 49213  010078                     L72:
 49214  010078  20F4               	addwfc	prodh,w,c
 49215  01007A  6EDA               	movwf	fsr2h,c
 49216  01007C  70DF               	btg	indf2,0,c
 49217                           
 49218                           ; BSR set to: 1
 49219                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 49220                           
 49221                           ; BSR set to: 1
 49222  01007E  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49223  010080  A4D8               	btfss	status,2,c
 49224  010082  D003               	goto	i2l174
 49225                           
 49226                           ; BSR set to: 1
 49227                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 49228  010084  EC31  F09C         	call	_USBCtrlEPService	;wreg free
 49229                           
 49230                           ;usb_device.c: 813: }
 49231  010088  D00E               	goto	i2l176
 49232  01008A                     i2l174:
 49233                           
 49234                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 49235  01008A  0E00               	movlw	0
 49236  01008C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49237  01008E  0E72               	movlw	114
 49238  010090  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49239  010092  0E5E               	movlw	low _USTATcopy
 49240  010094  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49241  010096  0E00               	movlw	high _USTATcopy
 49242  010098  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49243  01009A  0E00               	movlw	0
 49244  01009C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49245  01009E  0E00               	movlw	0
 49246  0100A0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49247  0100A2  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49248  0100A6                     i2l176:
 49249  0100A6  2A1F               	incf	USBDeviceTasks@i,f,c
 49250  0100A8  D7C9               	goto	i2l18036
 49251  0100AA                     i2u1754_40:
 49252                           
 49253                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 49254  0100AA  98A1               	bcf	4001,4,c	;volatile
 49255  0100AC  0012               	return		;funcret
 49256  0100AE                     __end_of_USBDeviceTasks:
 49257                           	opt stack 0
 49258                           tosu	equ	0xFFF
 49259                           tosh	equ	0xFFE
 49260                           tosl	equ	0xFFD
 49261                           pclatu	equ	0xFFB
 49262                           pclath	equ	0xFFA
 49263                           tblptru	equ	0xFF8
 49264                           tblptrh	equ	0xFF7
 49265                           tblptrl	equ	0xFF6
 49266                           tablat	equ	0xFF5
 49267                           prodh	equ	0xFF4
 49268                           prodl	equ	0xFF3
 49269                           intcon	equ	0xFF2
 49270                           indf0	equ	0xFEF
 49271                           postinc0	equ	0xFEE
 49272                           fsr0h	equ	0xFEA
 49273                           fsr0l	equ	0xFE9
 49274                           wreg	equ	0xFE8
 49275                           indf1	equ	0xFE7
 49276                           postinc1	equ	0xFE6
 49277                           postdec1	equ	0xFE5
 49278                           plusw1	equ	0xFE3
 49279                           fsr1h	equ	0xFE2
 49280                           fsr1l	equ	0xFE1
 49281                           indf2	equ	0xFDF
 49282                           postinc2	equ	0xFDE
 49283                           postdec2	equ	0xFDD
 49284                           plusw2	equ	0xFDB
 49285                           fsr2h	equ	0xFDA
 49286                           fsr2l	equ	0xFD9
 49287                           status	equ	0xFD8
 49288                           
 49289 ;; *************** function i2_USBDeviceInit *****************
 49290 ;; Defined at:
 49291 ;;		line 277 in file "usb_device.c"
 49292 ;; Parameters:    Size  Location     Type
 49293 ;;		None
 49294 ;; Auto vars:     Size  Location     Type
 49295 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 49296 ;; Return value:  Size  Location     Type
 49297 ;;                  1    wreg      void 
 49298 ;; Registers used:
 49299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49300 ;; Tracked objects:
 49301 ;;		On entry : 0/0
 49302 ;;		On exit  : 0/0
 49303 ;;		Unchanged: 0/0
 49304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49309 ;;Total ram usage:        1 bytes
 49310 ;; Hardware stack levels used:    1
 49311 ;; Hardware stack levels required when called:    1
 49312 ;; This function calls:
 49313 ;;		i2_memset
 49314 ;; This function is called by:
 49315 ;;		_USBDeviceTasks
 49316 ;; This function uses a non-reentrant model
 49317 ;;
 49318                           
 49319                           	psect	text205
 49320  0100AE                     __ptext205:
 49321                           	opt stack 0
 49322  0100AE                     i2_USBDeviceInit:
 49323                           	opt stack 15
 49324                           
 49325                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 49326                           
 49327                           ;incstack = 0
 49328  0100AE  98A0               	bcf	4000,4,c	;volatile
 49329                           
 49330                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 49331  0100B0  0E00               	movlw	0
 49332  0100B2  6E63               	movwf	3939,c	;volatile
 49333                           
 49334                           ;usb_device.c: 291: {UIR = 0;};
 49335  0100B4  0E00               	movlw	0
 49336  0100B6  6E62               	movwf	3938,c	;volatile
 49337                           
 49338                           ;usb_device.c: 294: UEP0 = 0;
 49339  0100B8  0E00               	movlw	0
 49340  0100BA  010F               	movlb	15	; () banked
 49341  0100BC  6F26               	movwf	38,b	;volatile
 49342                           
 49343                           ; BSR set to: 15
 49344                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 49345  0100BE  0E27               	movlw	39
 49346  0100C0  6E01               	movwf	i2memset@p1,c
 49347  0100C2  0E0F               	movlw	15
 49348  0100C4  6E02               	movwf	i2memset@p1+1,c
 49349  0100C6  0E00               	movlw	0
 49350  0100C8  6E04               	movwf	i2memset@c+1,c
 49351  0100CA  0E00               	movlw	0
 49352  0100CC  6E03               	movwf	i2memset@c,c
 49353  0100CE  0E00               	movlw	0
 49354  0100D0  6E06               	movwf	i2memset@n+1,c
 49355  0100D2  0E02               	movlw	2
 49356  0100D4  6E05               	movwf	i2memset@n,c
 49357  0100D6  ECD7  F0AC         	call	i2_memset	;wreg free
 49358                           
 49359                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 49360  0100DA  0E16               	movlw	22
 49361  0100DC  010F               	movlb	15	; () banked
 49362  0100DE  6F39               	movwf	57,b	;volatile
 49363                           
 49364                           ; BSR set to: 15
 49365  0100E0  0E9F               	movlw	159
 49366  0100E2  6F37               	movwf	55,b	;volatile
 49367                           
 49368                           ; BSR set to: 15
 49369  0100E4  0E7B               	movlw	123
 49370  0100E6  6F36               	movwf	54,b	;volatile
 49371                           
 49372                           ; BSR set to: 15
 49373                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 49374  0100E8  0E00               	movlw	0
 49375  0100EA  6E09               	movwf	i2USBDeviceInit@i,c
 49376  0100EC                     i2l17830:
 49377                           
 49378                           ; BSR set to: 15
 49379  0100EC  0E0B               	movlw	11
 49380  0100EE  6409               	cpfsgt	i2USBDeviceInit@i,c
 49381  0100F0  D001               	goto	i2l145
 49382  0100F2  D00E               	goto	i2u1722_40
 49383  0100F4                     i2l145:
 49384                           
 49385                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 49386                           
 49387                           ; BSR set to: 15
 49388  0100F4  5009               	movf	i2USBDeviceInit@i,w,c
 49389  0100F6  0D04               	mullw	4
 49390  0100F8  0E00               	movlw	0
 49391  0100FA  24F3               	addwf	prodl,w,c
 49392  0100FC  6ED9               	movwf	fsr2l,c
 49393  0100FE  0E0D               	movlw	13
 49394  010100  20F4               	addwfc	prodh,w,c
 49395  010102  6EDA               	movwf	fsr2h,c
 49396  010104  6ADE               	clrf	postinc2,c
 49397  010106  6ADE               	clrf	postinc2,c
 49398  010108  6ADE               	clrf	postinc2,c
 49399  01010A  6ADD               	clrf	postdec2,c
 49400  01010C  2A09               	incf	i2USBDeviceInit@i,f,c
 49401  01010E  D7EE               	goto	i2l17830
 49402  010110                     i2u1722_40:
 49403                           
 49404                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 49405  010110  8C65               	bsf	3941,6,c	;volatile
 49406                           
 49407                           ;usb_device.c: 316: UADDR = 0x00;
 49408  010112  0E00               	movlw	0
 49409  010114  010F               	movlb	15	; () banked
 49410  010116  6F38               	movwf	56,b	;volatile
 49411                           
 49412                           ; BSR set to: 15
 49413                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 49414  010118  9865               	bcf	3941,4,c	;volatile
 49415                           
 49416                           ; BSR set to: 15
 49417                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 49418  01011A  9C65               	bcf	3941,6,c	;volatile
 49419  01011C                     
 49420                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 49421                           
 49422                           ; BSR set to: 15
 49423  01011C  9662               	bcf	3938,3,c	;volatile
 49424                           
 49425                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 49426  01011E  0E00               	movlw	0
 49427  010120  6E56               	movwf	_inPipes+3,c	;volatile
 49428                           
 49429                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 49430  010122  0E00               	movlw	0
 49431  010124  0101               	movlb	1	; () banked
 49432  010126  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49433                           
 49434                           ; BSR set to: 1
 49435                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 49436  010128  0E00               	movlw	0
 49437  01012A  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49438  01012C  0E00               	movlw	0
 49439  01012E  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49440                           
 49441                           ; BSR set to: 1
 49442                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 49443  010130  B662               	btfsc	3938,3,c	;volatile
 49444  010132  D7F4               	goto	i2l147
 49445                           
 49446                           ; BSR set to: 1
 49447                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 49448                           
 49449                           ; BSR set to: 1
 49450  010134  0E01               	movlw	1
 49451  010136  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49452                           
 49453                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 49454  010138  0E01               	movlw	1
 49455  01013A  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49456                           
 49457                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 49458  01013C  0E00               	movlw	0
 49459  01013E  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49460                           
 49461                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 49462  010140  0E00               	movlw	0
 49463  010142  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49464                           
 49465                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 49466  010144  0E00               	movlw	0
 49467  010146  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49468                           
 49469                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 49470  010148  0E00               	movlw	0
 49471  01014A  6E09               	movwf	i2USBDeviceInit@i,c
 49472  01014C                     i2l17858:
 49473                           
 49474                           ; BSR set to: 1
 49475  01014C  0E02               	movlw	2
 49476  01014E  6409               	cpfsgt	i2USBDeviceInit@i,c
 49477  010150  D001               	goto	i2l149
 49478  010152  D02E               	goto	i2u1725_40
 49479  010154                     i2l149:
 49480                           
 49481                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 49482                           
 49483                           ; BSR set to: 1
 49484  010154  5009               	movf	i2USBDeviceInit@i,w,c
 49485  010156  0D02               	mullw	2
 49486  010158  0E09               	movlw	low _pBDTEntryIn
 49487  01015A  24F3               	addwf	prodl,w,c
 49488  01015C  6ED9               	movwf	fsr2l,c
 49489  01015E  0E01               	movlw	high _pBDTEntryIn
 49490  010160  20F4               	addwfc	prodh,w,c
 49491  010162  6EDA               	movwf	fsr2h,c
 49492  010164  0E00               	movlw	0
 49493  010166  6EDE               	movwf	postinc2,c
 49494  010168  0E00               	movlw	0
 49495  01016A  6EDD               	movwf	postdec2,c
 49496                           
 49497                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 49498  01016C  5009               	movf	i2USBDeviceInit@i,w,c
 49499  01016E  0D02               	mullw	2
 49500  010170  0E0F               	movlw	low _pBDTEntryOut
 49501  010172  24F3               	addwf	prodl,w,c
 49502  010174  6ED9               	movwf	fsr2l,c
 49503  010176  0E01               	movlw	high _pBDTEntryOut
 49504  010178  20F4               	addwfc	prodh,w,c
 49505  01017A  6EDA               	movwf	fsr2h,c
 49506  01017C  0E00               	movlw	0
 49507  01017E  6EDE               	movwf	postinc2,c
 49508  010180  0E00               	movlw	0
 49509  010182  6EDD               	movwf	postdec2,c
 49510                           
 49511                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 49512  010184  5009               	movf	i2USBDeviceInit@i,w,c
 49513  010186  0D01               	mullw	1
 49514  010188  0E32               	movlw	low _ep_data_in
 49515  01018A  24F3               	addwf	prodl,w,c
 49516  01018C  6ED9               	movwf	fsr2l,c
 49517  01018E  0E01               	movlw	high _ep_data_in
 49518  010190  20F4               	addwfc	prodh,w,c
 49519  010192  6EDA               	movwf	fsr2h,c
 49520  010194  0E00               	movlw	0
 49521  010196  6EDF               	movwf	indf2,c
 49522                           
 49523                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 49524  010198  5009               	movf	i2USBDeviceInit@i,w,c
 49525  01019A  0D01               	mullw	1
 49526  01019C  0E2F               	movlw	low _ep_data_out
 49527  01019E  24F3               	addwf	prodl,w,c
 49528  0101A0  6ED9               	movwf	fsr2l,c
 49529  0101A2  0E01               	movlw	high _ep_data_out
 49530  0101A4  20F4               	addwfc	prodh,w,c
 49531  0101A6  6EDA               	movwf	fsr2h,c
 49532  0101A8  0E00               	movlw	0
 49533  0101AA  6EDF               	movwf	indf2,c
 49534  0101AC  2A09               	incf	i2USBDeviceInit@i,f,c
 49535  0101AE  D7CE               	goto	i2l17858
 49536  0101B0                     i2u1725_40:
 49537                           
 49538                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 49539  0101B0  0E08               	movlw	8
 49540  0101B2  0101               	movlb	1	; () banked
 49541  0101B4  6F09               	movwf	_pBDTEntryIn& (0+255),b
 49542  0101B6  0E0D               	movlw	13
 49543  0101B8  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49544                           
 49545                           ; BSR set to: 1
 49546                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 49547  0101BA  0E16               	movlw	22
 49548  0101BC  010F               	movlb	15	; () banked
 49549  0101BE  6F26               	movwf	38,b	;volatile
 49550                           
 49551                           ; BSR set to: 15
 49552                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 49553  0101C0  0E0D               	movlw	13
 49554  0101C2  010D               	movlb	13	; () banked
 49555  0101C4  6F03               	movwf	3,b	;volatile
 49556  0101C6  0E30               	movlw	48
 49557  0101C8  6F02               	movwf	2,b	;volatile
 49558                           
 49559                           ; BSR set to: 13
 49560                           ;usb_device.c: 359: BDT[0].CNT = 8;
 49561  0101CA  0E08               	movlw	8
 49562  0101CC  6F01               	movwf	1,b	;volatile
 49563                           
 49564                           ; BSR set to: 13
 49565                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 49566  0101CE  0E04               	movlw	4
 49567  0101D0  6F00               	movwf	0,b	;volatile
 49568                           
 49569                           ; BSR set to: 13
 49570                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 49571  0101D2  8F00               	bsf	0,7,b	;volatile
 49572                           
 49573                           ; BSR set to: 13
 49574                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 49575  0101D4  0E00               	movlw	0
 49576  0101D6  0101               	movlb	1	; () banked
 49577  0101D8  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 49578                           
 49579                           ; BSR set to: 1
 49580                           ;usb_device.c: 366: USB1msTickCount = 0;
 49581  0101DA  0E00               	movlw	0
 49582  0101DC  6F25               	movwf	_USB1msTickCount& (0+255),b	;volatile
 49583  0101DE  0E00               	movlw	0
 49584  0101E0  6F26               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 49585  0101E2  0E00               	movlw	0
 49586  0101E4  6F27               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 49587  0101E6  0E00               	movlw	0
 49588  0101E8  6F28               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 49589                           
 49590                           ; BSR set to: 1
 49591                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 49592  0101EA  0E00               	movlw	0
 49593  0101EC  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49594                           
 49595                           ; BSR set to: 1
 49596                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 49597  0101EE  0E00               	movlw	0
 49598  0101F0  6E5D               	movwf	_USBDeviceState,c	;volatile
 49599                           
 49600                           ; BSR set to: 1
 49601  0101F2  0012               	return		;funcret
 49602  0101F4                     __end_ofi2_USBDeviceInit:
 49603                           	opt stack 0
 49604                           tosu	equ	0xFFF
 49605                           tosh	equ	0xFFE
 49606                           tosl	equ	0xFFD
 49607                           pclatu	equ	0xFFB
 49608                           pclath	equ	0xFFA
 49609                           tblptru	equ	0xFF8
 49610                           tblptrh	equ	0xFF7
 49611                           tblptrl	equ	0xFF6
 49612                           tablat	equ	0xFF5
 49613                           prodh	equ	0xFF4
 49614                           prodl	equ	0xFF3
 49615                           intcon	equ	0xFF2
 49616                           indf0	equ	0xFEF
 49617                           postinc0	equ	0xFEE
 49618                           fsr0h	equ	0xFEA
 49619                           fsr0l	equ	0xFE9
 49620                           wreg	equ	0xFE8
 49621                           indf1	equ	0xFE7
 49622                           postinc1	equ	0xFE6
 49623                           postdec1	equ	0xFE5
 49624                           plusw1	equ	0xFE3
 49625                           fsr1h	equ	0xFE2
 49626                           fsr1l	equ	0xFE1
 49627                           indf2	equ	0xFDF
 49628                           postinc2	equ	0xFDE
 49629                           postdec2	equ	0xFDD
 49630                           plusw2	equ	0xFDB
 49631                           fsr2h	equ	0xFDA
 49632                           fsr2l	equ	0xFD9
 49633                           status	equ	0xFD8
 49634                           
 49635 ;; *************** function _USBWakeFromSuspend *****************
 49636 ;; Defined at:
 49637 ;;		line 2305 in file "usb_device.c"
 49638 ;; Parameters:    Size  Location     Type
 49639 ;;		None
 49640 ;; Auto vars:     Size  Location     Type
 49641 ;;		None
 49642 ;; Return value:  Size  Location     Type
 49643 ;;                  1    wreg      void 
 49644 ;; Registers used:
 49645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49646 ;; Tracked objects:
 49647 ;;		On entry : 0/0
 49648 ;;		On exit  : 0/0
 49649 ;;		Unchanged: 0/0
 49650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49655 ;;Total ram usage:        0 bytes
 49656 ;; Hardware stack levels used:    1
 49657 ;; Hardware stack levels required when called:    4
 49658 ;; This function calls:
 49659 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49660 ;; This function is called by:
 49661 ;;		_USBDeviceTasks
 49662 ;; This function uses a non-reentrant model
 49663 ;;
 49664                           
 49665                           	psect	text206
 49666  01569A                     __ptext206:
 49667                           	opt stack 0
 49668  01569A                     _USBWakeFromSuspend:
 49669                           	opt stack 12
 49670                           
 49671                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 49672                           
 49673                           ; BSR set to: 1
 49674                           ;incstack = 0
 49675  01569A  0E00               	movlw	0
 49676  01569C  0101               	movlb	1	; () banked
 49677  01569E  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49678                           
 49679                           ; BSR set to: 1
 49680                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 49681  0156A0  0E00               	movlw	0
 49682  0156A2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49683  0156A4  0E74               	movlw	116
 49684  0156A6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49685  0156A8  0E00               	movlw	0
 49686  0156AA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49687  0156AC  0E00               	movlw	0
 49688  0156AE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49689  0156B0  0E00               	movlw	0
 49690  0156B2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49691  0156B4  0E00               	movlw	0
 49692  0156B6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49693  0156B8  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49694                           
 49695                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 49696  0156BC  9265               	bcf	3941,1,c	;volatile
 49697                           
 49698                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 49699  0156BE  010F               	movlb	15	; () banked
 49700  0156C0  9536               	bcf	54,2,b	;volatile
 49701                           
 49702                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 49703  0156C2  D001               	goto	i2l315
 49704  0156C4                     
 49705                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 49706                           
 49707                           ; BSR set to: 15
 49708  0156C4  9462               	bcf	3938,2,c	;volatile
 49709  0156C6                     i2l315:
 49710  0156C6  B462               	btfsc	3938,2,c	;volatile
 49711  0156C8  D7FD               	goto	i2l316
 49712                           
 49713                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 49714  0156CA  0E00               	movlw	0
 49715  0156CC  0101               	movlb	1	; () banked
 49716  0156CE  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49717                           
 49718                           ; BSR set to: 1
 49719  0156D0  0012               	return		;funcret
 49720  0156D2                     __end_of_USBWakeFromSuspend:
 49721                           	opt stack 0
 49722                           tosu	equ	0xFFF
 49723                           tosh	equ	0xFFE
 49724                           tosl	equ	0xFFD
 49725                           pclatu	equ	0xFFB
 49726                           pclath	equ	0xFFA
 49727                           tblptru	equ	0xFF8
 49728                           tblptrh	equ	0xFF7
 49729                           tblptrl	equ	0xFF6
 49730                           tablat	equ	0xFF5
 49731                           prodh	equ	0xFF4
 49732                           prodl	equ	0xFF3
 49733                           intcon	equ	0xFF2
 49734                           indf0	equ	0xFEF
 49735                           postinc0	equ	0xFEE
 49736                           fsr0h	equ	0xFEA
 49737                           fsr0l	equ	0xFE9
 49738                           wreg	equ	0xFE8
 49739                           indf1	equ	0xFE7
 49740                           postinc1	equ	0xFE6
 49741                           postdec1	equ	0xFE5
 49742                           plusw1	equ	0xFE3
 49743                           fsr1h	equ	0xFE2
 49744                           fsr1l	equ	0xFE1
 49745                           indf2	equ	0xFDF
 49746                           postinc2	equ	0xFDE
 49747                           postdec2	equ	0xFDD
 49748                           plusw2	equ	0xFDB
 49749                           fsr2h	equ	0xFDA
 49750                           fsr2l	equ	0xFD9
 49751                           status	equ	0xFD8
 49752                           
 49753 ;; *************** function _USBSuspend *****************
 49754 ;; Defined at:
 49755 ;;		line 2247 in file "usb_device.c"
 49756 ;; Parameters:    Size  Location     Type
 49757 ;;		None
 49758 ;; Auto vars:     Size  Location     Type
 49759 ;;		None
 49760 ;; Return value:  Size  Location     Type
 49761 ;;                  1    wreg      void 
 49762 ;; Registers used:
 49763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49764 ;; Tracked objects:
 49765 ;;		On entry : 0/0
 49766 ;;		On exit  : 0/0
 49767 ;;		Unchanged: 0/0
 49768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49773 ;;Total ram usage:        0 bytes
 49774 ;; Hardware stack levels used:    1
 49775 ;; Hardware stack levels required when called:    4
 49776 ;; This function calls:
 49777 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49778 ;; This function is called by:
 49779 ;;		_USBDeviceTasks
 49780 ;; This function uses a non-reentrant model
 49781 ;;
 49782                           
 49783                           	psect	text207
 49784  01589A                     __ptext207:
 49785                           	opt stack 0
 49786  01589A                     _USBSuspend:
 49787                           	opt stack 12
 49788                           
 49789                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 49790                           
 49791                           ; BSR set to: 1
 49792                           ;incstack = 0
 49793  01589A  010F               	movlb	15	; () banked
 49794  01589C  8536               	bsf	54,2,b	;volatile
 49795                           
 49796                           ; BSR set to: 15
 49797                           ;usb_device.c: 2273: (UIR &= 0xEF);
 49798  01589E  9862               	bcf	3938,4,c	;volatile
 49799                           
 49800                           ; BSR set to: 15
 49801                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 49802  0158A0  8265               	bsf	3941,1,c	;volatile
 49803                           
 49804                           ; BSR set to: 15
 49805                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 49806  0158A2  0E01               	movlw	1
 49807  0158A4  0101               	movlb	1	; () banked
 49808  0158A6  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49809                           
 49810                           ; BSR set to: 1
 49811                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 49812  0158A8  0E00               	movlw	0
 49813  0158AA  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49814                           
 49815                           ; BSR set to: 1
 49816                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 49817  0158AC  0E00               	movlw	0
 49818  0158AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49819  0158B0  0E75               	movlw	117
 49820  0158B2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49821  0158B4  0E00               	movlw	0
 49822  0158B6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49823  0158B8  0E00               	movlw	0
 49824  0158BA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49825  0158BC  0E00               	movlw	0
 49826  0158BE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49827  0158C0  0E00               	movlw	0
 49828  0158C2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49829  0158C4  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49830  0158C8  0012               	return		;funcret
 49831  0158CA                     __end_of_USBSuspend:
 49832                           	opt stack 0
 49833                           tosu	equ	0xFFF
 49834                           tosh	equ	0xFFE
 49835                           tosl	equ	0xFFD
 49836                           pclatu	equ	0xFFB
 49837                           pclath	equ	0xFFA
 49838                           tblptru	equ	0xFF8
 49839                           tblptrh	equ	0xFF7
 49840                           tblptrl	equ	0xFF6
 49841                           tablat	equ	0xFF5
 49842                           prodh	equ	0xFF4
 49843                           prodl	equ	0xFF3
 49844                           intcon	equ	0xFF2
 49845                           indf0	equ	0xFEF
 49846                           postinc0	equ	0xFEE
 49847                           fsr0h	equ	0xFEA
 49848                           fsr0l	equ	0xFE9
 49849                           wreg	equ	0xFE8
 49850                           indf1	equ	0xFE7
 49851                           postinc1	equ	0xFE6
 49852                           postdec1	equ	0xFE5
 49853                           plusw1	equ	0xFE3
 49854                           fsr1h	equ	0xFE2
 49855                           fsr1l	equ	0xFE1
 49856                           indf2	equ	0xFDF
 49857                           postinc2	equ	0xFDE
 49858                           postdec2	equ	0xFDD
 49859                           plusw2	equ	0xFDB
 49860                           fsr2h	equ	0xFDA
 49861                           fsr2l	equ	0xFD9
 49862                           status	equ	0xFD8
 49863                           
 49864 ;; *************** function _USBStallHandler *****************
 49865 ;; Defined at:
 49866 ;;		line 2204 in file "usb_device.c"
 49867 ;; Parameters:    Size  Location     Type
 49868 ;;		None
 49869 ;; Auto vars:     Size  Location     Type
 49870 ;;		None
 49871 ;; Return value:  Size  Location     Type
 49872 ;;                  1    wreg      void 
 49873 ;; Registers used:
 49874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49875 ;; Tracked objects:
 49876 ;;		On entry : 0/0
 49877 ;;		On exit  : 0/0
 49878 ;;		Unchanged: 0/0
 49879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49884 ;;Total ram usage:        1 bytes
 49885 ;; Hardware stack levels used:    1
 49886 ;; This function calls:
 49887 ;;		Nothing
 49888 ;; This function is called by:
 49889 ;;		_USBDeviceTasks
 49890 ;; This function uses a non-reentrant model
 49891 ;;
 49892                           
 49893                           	psect	text208
 49894  01543C                     __ptext208:
 49895                           	opt stack 0
 49896  01543C                     _USBStallHandler:
 49897                           	opt stack 16
 49898                           
 49899                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 49900                           
 49901                           ;incstack = 0
 49902  01543C  010F               	movlb	15	; () banked
 49903  01543E  A126               	btfss	38,0,b	;volatile
 49904  015440  D01D               	goto	i2l307
 49905                           
 49906                           ; BSR set to: 15
 49907                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 49908  015442  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49909  015446  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49910  01544A  0E80               	movlw	128
 49911  01544C  18DE               	xorwf	postinc2,w,c
 49912  01544E  A4D8               	btfss	status,2,c
 49913  015450  D014               	goto	i2l308
 49914                           
 49915                           ; BSR set to: 15
 49916  015452  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 49917  015456  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49918  01545A  0E84               	movlw	132
 49919  01545C  18DE               	xorwf	postinc2,w,c
 49920  01545E  A4D8               	btfss	status,2,c
 49921  015460  D00C               	goto	i2l308
 49922                           
 49923                           ; BSR set to: 15
 49924                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 49925  015462  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49926  015466  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49927  01546A  0E0C               	movlw	12
 49928  01546C  6EDF               	movwf	indf2,c
 49929                           
 49930                           ; BSR set to: 15
 49931                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 49932  01546E  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49933  015472  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49934  015476  0E00               	movlw	0
 49935  015478  8EDB               	bsf	plusw2,7,c
 49936  01547A                     i2l308:
 49937                           
 49938                           ; BSR set to: 15
 49939                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 49940                           
 49941                           ; BSR set to: 15
 49942  01547A  9126               	bcf	38,0,b	;volatile
 49943  01547C                     i2l307:
 49944                           
 49945                           ; BSR set to: 15
 49946                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 49947  01547C  9A62               	bcf	3938,5,c	;volatile
 49948                           
 49949                           ; BSR set to: 15
 49950  01547E  0012               	return		;funcret
 49951  015480                     __end_of_USBStallHandler:
 49952                           	opt stack 0
 49953                           tosu	equ	0xFFF
 49954                           tosh	equ	0xFFE
 49955                           tosl	equ	0xFFD
 49956                           pclatu	equ	0xFFB
 49957                           pclath	equ	0xFFA
 49958                           tblptru	equ	0xFF8
 49959                           tblptrh	equ	0xFF7
 49960                           tblptrl	equ	0xFF6
 49961                           tablat	equ	0xFF5
 49962                           prodh	equ	0xFF4
 49963                           prodl	equ	0xFF3
 49964                           intcon	equ	0xFF2
 49965                           indf0	equ	0xFEF
 49966                           postinc0	equ	0xFEE
 49967                           fsr0h	equ	0xFEA
 49968                           fsr0l	equ	0xFE9
 49969                           wreg	equ	0xFE8
 49970                           indf1	equ	0xFE7
 49971                           postinc1	equ	0xFE6
 49972                           postdec1	equ	0xFE5
 49973                           plusw1	equ	0xFE3
 49974                           fsr1h	equ	0xFE2
 49975                           fsr1l	equ	0xFE1
 49976                           indf2	equ	0xFDF
 49977                           postinc2	equ	0xFDE
 49978                           postdec2	equ	0xFDD
 49979                           plusw2	equ	0xFDB
 49980                           fsr2h	equ	0xFDA
 49981                           fsr2l	equ	0xFD9
 49982                           status	equ	0xFD8
 49983                           
 49984 ;; *************** function _USBIncrement1msInternalTimers *****************
 49985 ;; Defined at:
 49986 ;;		line 3027 in file "usb_device.c"
 49987 ;; Parameters:    Size  Location     Type
 49988 ;;		None
 49989 ;; Auto vars:     Size  Location     Type
 49990 ;;		None
 49991 ;; Return value:  Size  Location     Type
 49992 ;;                  1    wreg      void 
 49993 ;; Registers used:
 49994 ;;		wreg, status,2, status,0
 49995 ;; Tracked objects:
 49996 ;;		On entry : 0/0
 49997 ;;		On exit  : 0/0
 49998 ;;		Unchanged: 0/0
 49999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50004 ;;Total ram usage:        0 bytes
 50005 ;; Hardware stack levels used:    1
 50006 ;; This function calls:
 50007 ;;		Nothing
 50008 ;; This function is called by:
 50009 ;;		_USBDeviceTasks
 50010 ;; This function uses a non-reentrant model
 50011 ;;
 50012                           
 50013                           	psect	text209
 50014  015C38                     __ptext209:
 50015                           	opt stack 0
 50016  015C38                     _USBIncrement1msInternalTimers:
 50017                           	opt stack 16
 50018                           
 50019                           ;usb_device.c: 3035: USB1msTickCount++;
 50020                           
 50021                           ; BSR set to: 15
 50022                           ;incstack = 0
 50023  015C38  0E01               	movlw	1
 50024  015C3A  0101               	movlb	1	; () banked
 50025  015C3C  2725               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 50026  015C3E  0E00               	movlw	0
 50027  015C40  2326               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 50028  015C42  2327               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 50029  015C44  2328               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 50030                           
 50031                           ; BSR set to: 1
 50032                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 50033  015C46  5162               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 50034  015C48  A4D8               	btfss	status,2,c
 50035  015C4A  0012               	return	
 50036                           
 50037                           ; BSR set to: 1
 50038                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 50039  015C4C  2B59               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 50040                           
 50041                           ; BSR set to: 1
 50042                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 50043  015C4E  5159               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 50044  015C50  A4D8               	btfss	status,2,c
 50045  015C52  0012               	return	
 50046                           
 50047                           ; BSR set to: 1
 50048                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 50049  015C54  6959               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50050                           
 50051                           ; BSR set to: 1
 50052  015C56  0012               	return	
 50053  015C58                     __end_of_USBIncrement1msInternalTimers:
 50054                           	opt stack 0
 50055                           tosu	equ	0xFFF
 50056                           tosh	equ	0xFFE
 50057                           tosl	equ	0xFFD
 50058                           pclatu	equ	0xFFB
 50059                           pclath	equ	0xFFA
 50060                           tblptru	equ	0xFF8
 50061                           tblptrh	equ	0xFF7
 50062                           tblptrl	equ	0xFF6
 50063                           tablat	equ	0xFF5
 50064                           prodh	equ	0xFF4
 50065                           prodl	equ	0xFF3
 50066                           intcon	equ	0xFF2
 50067                           indf0	equ	0xFEF
 50068                           postinc0	equ	0xFEE
 50069                           fsr0h	equ	0xFEA
 50070                           fsr0l	equ	0xFE9
 50071                           wreg	equ	0xFE8
 50072                           indf1	equ	0xFE7
 50073                           postinc1	equ	0xFE6
 50074                           postdec1	equ	0xFE5
 50075                           plusw1	equ	0xFE3
 50076                           fsr1h	equ	0xFE2
 50077                           fsr1l	equ	0xFE1
 50078                           indf2	equ	0xFDF
 50079                           postinc2	equ	0xFDE
 50080                           postdec2	equ	0xFDD
 50081                           plusw2	equ	0xFDB
 50082                           fsr2h	equ	0xFDA
 50083                           fsr2l	equ	0xFD9
 50084                           status	equ	0xFD8
 50085                           
 50086 ;; *************** function _USBCtrlEPService *****************
 50087 ;; Defined at:
 50088 ;;		line 2374 in file "usb_device.c"
 50089 ;; Parameters:    Size  Location     Type
 50090 ;;		None
 50091 ;; Auto vars:     Size  Location     Type
 50092 ;;		None
 50093 ;; Return value:  Size  Location     Type
 50094 ;;                  1    wreg      void 
 50095 ;; Registers used:
 50096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 50097 ;; Tracked objects:
 50098 ;;		On entry : 0/0
 50099 ;;		On exit  : 0/0
 50100 ;;		Unchanged: 0/0
 50101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50106 ;;Total ram usage:        1 bytes
 50107 ;; Hardware stack levels used:    1
 50108 ;; Hardware stack levels required when called:    7
 50109 ;; This function calls:
 50110 ;;		_USBCtrlTrfInHandler
 50111 ;;		_USBCtrlTrfOutHandler
 50112 ;;		_USBCtrlTrfSetupHandler
 50113 ;;		i2_memcpy
 50114 ;; This function is called by:
 50115 ;;		_USBDeviceTasks
 50116 ;; This function uses a non-reentrant model
 50117 ;;
 50118                           
 50119                           	psect	text210
 50120  013862                     __ptext210:
 50121                           	opt stack 0
 50122  013862                     _USBCtrlEPService:
 50123                           	opt stack 9
 50124                           
 50125                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 50126                           
 50127                           ; BSR set to: 1
 50128                           ;incstack = 0
 50129  013862  0E2D               	movlw	45
 50130  013864  0101               	movlb	1	; () banked
 50131  013866  6F5F               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 50132                           
 50133                           ; BSR set to: 1
 50134                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 50135  013868  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50136  01386C  0EFD               	movlw	253
 50137  01386E  161E               	andwf	??_USBCtrlEPService,f,c
 50138  013870  A4D8               	btfss	status,2,c
 50139  013872  D03B               	goto	i2l321
 50140                           
 50141                           ; BSR set to: 1
 50142                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 50143  013874  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50144  013878  90D8               	bcf	status,0,c
 50145  01387A  321E               	rrcf	??_USBCtrlEPService,f,c
 50146  01387C  0E3F               	movlw	63
 50147  01387E  161E               	andwf	??_USBCtrlEPService,f,c
 50148  013880  501E               	movf	??_USBCtrlEPService,w,c
 50149  013882  0D04               	mullw	4
 50150  013884  0E00               	movlw	0
 50151  013886  24F3               	addwf	prodl,w,c
 50152  013888  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 50153  01388A  0E0D               	movlw	13
 50154  01388C  20F4               	addwfc	prodh,w,c
 50155  01388E  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 50156                           
 50157                           ; BSR set to: 1
 50158                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50159  013890  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50160  013894  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50161                           
 50162                           ; BSR set to: 1
 50163                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 50164  013898  0E04               	movlw	4
 50165  01389A  1859               	xorwf	_pBDTEntryEP0OutNext,w,c
 50166  01389C  6E59               	movwf	_pBDTEntryEP0OutNext,c
 50167  01389E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50168  0138A0  6E5A               	movwf	_pBDTEntryEP0OutNext+1,c
 50169                           
 50170                           ; BSR set to: 1
 50171                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 50172  0138A2  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50173  0138A6  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50174  0138AA  30DF               	rrcf	indf2,w,c
 50175  0138AC  32E8               	rrcf	wreg,f,c
 50176  0138AE  0B0F               	andlw	15
 50177  0138B0  0A0D               	xorlw	13
 50178  0138B2  A4D8               	btfss	status,2,c
 50179  0138B4  D017               	goto	i2l322
 50180                           
 50181                           ; BSR set to: 1
 50182                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 50183  0138B6  0E30               	movlw	48
 50184  0138B8  6E01               	movwf	i2memcpy@d1,c
 50185  0138BA  0E0D               	movlw	13
 50186  0138BC  6E02               	movwf	i2memcpy@d1+1,c
 50187  0138BE  EE20 F002          	lfsr	2,2
 50188  0138C2  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 50189  0138C4  26D9               	addwf	fsr2l,f,c
 50190  0138C6  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50191  0138C8  22DA               	addwfc	fsr2h,f,c
 50192  0138CA  CFDE F003          	movff	postinc2,i2memcpy@s1
 50193  0138CE  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 50194  0138D2  0E00               	movlw	0
 50195  0138D4  6E06               	movwf	i2memcpy@n+1,c
 50196  0138D6  0E08               	movlw	8
 50197  0138D8  6E05               	movwf	i2memcpy@n,c
 50198  0138DA  ECAC  F0A4         	call	i2_memcpy	;wreg free
 50199                           
 50200                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 50201  0138DE  EC37  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 50202                           
 50203                           ;usb_device.c: 2411: }
 50204  0138E2  0012               	return	
 50205  0138E4                     i2l322:
 50206                           
 50207                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 50208  0138E4  EC1F  F0A4         	call	_USBCtrlTrfOutHandler	;wreg free
 50209                           
 50210                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 50211  0138E8  0012               	return	
 50212  0138EA                     i2l321:
 50213                           
 50214                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 50215  0138EA  505E               	movf	_USTATcopy,w,c	;volatile
 50216  0138EC  0BFD               	andlw	253
 50217  0138EE  0A04               	xorlw	4
 50218  0138F0  A4D8               	btfss	status,2,c
 50219  0138F2  0012               	return	
 50220                           
 50221                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 50222  0138F4  EC24  F096         	call	_USBCtrlTrfInHandler	;wreg free
 50223  0138F8  0012               	return	
 50224  0138FA                     __end_of_USBCtrlEPService:
 50225                           	opt stack 0
 50226                           tosu	equ	0xFFF
 50227                           tosh	equ	0xFFE
 50228                           tosl	equ	0xFFD
 50229                           pclatu	equ	0xFFB
 50230                           pclath	equ	0xFFA
 50231                           tblptru	equ	0xFF8
 50232                           tblptrh	equ	0xFF7
 50233                           tblptrl	equ	0xFF6
 50234                           tablat	equ	0xFF5
 50235                           prodh	equ	0xFF4
 50236                           prodl	equ	0xFF3
 50237                           intcon	equ	0xFF2
 50238                           indf0	equ	0xFEF
 50239                           postinc0	equ	0xFEE
 50240                           fsr0h	equ	0xFEA
 50241                           fsr0l	equ	0xFE9
 50242                           wreg	equ	0xFE8
 50243                           indf1	equ	0xFE7
 50244                           postinc1	equ	0xFE6
 50245                           postdec1	equ	0xFE5
 50246                           plusw1	equ	0xFE3
 50247                           fsr1h	equ	0xFE2
 50248                           fsr1l	equ	0xFE1
 50249                           indf2	equ	0xFDF
 50250                           postinc2	equ	0xFDE
 50251                           postdec2	equ	0xFDD
 50252                           plusw2	equ	0xFDB
 50253                           fsr2h	equ	0xFDA
 50254                           fsr2l	equ	0xFD9
 50255                           status	equ	0xFD8
 50256                           
 50257 ;; *************** function i2_memcpy *****************
 50258 ;; Defined at:
 50259 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 50260 ;; Parameters:    Size  Location     Type
 50261 ;;  d1              2    0[COMRAM] PTR void 
 50262 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 50263 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50264 ;;  s1              2    2[COMRAM] PTR const void 
 50265 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50266 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50267 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50268 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50269 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50270 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(40), os.absolute_position(2), os.current_position_in_steps(4), 
 50271 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), CtrlTrfData(8), 
 50272 ;;		 -> RAM(3759), SetupPkt(8), 
 50273 ;;  n               2    4[COMRAM] unsigned int 
 50274 ;; Auto vars:     Size  Location     Type
 50275 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 50276 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50277 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50278 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50279 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50280 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50281 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(40), os.absolute_position(2), os.current_position_in_steps(4), 
 50282 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), CtrlTrfData(8), 
 50283 ;;		 -> RAM(3759), SetupPkt(8), 
 50284 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 50285 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 50286 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50287 ;;  memcpy          1   10[COMRAM] unsigned char 
 50288 ;; Return value:  Size  Location     Type
 50289 ;;                  2    0[COMRAM] PTR void 
 50290 ;; Registers used:
 50291 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 50292 ;; Tracked objects:
 50293 ;;		On entry : 0/0
 50294 ;;		On exit  : 0/0
 50295 ;;		Unchanged: 0/0
 50296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50297 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50298 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50300 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50301 ;;Total ram usage:       11 bytes
 50302 ;; Hardware stack levels used:    1
 50303 ;; This function calls:
 50304 ;;		Nothing
 50305 ;; This function is called by:
 50306 ;;		_USBCtrlEPService
 50307 ;;		_i2c_eeprom_save_position
 50308 ;; This function uses a non-reentrant model
 50309 ;;
 50310                           
 50311                           	psect	text211
 50312  014958                     __ptext211:
 50313                           	opt stack 0
 50314  014958                     i2_memcpy:
 50315                           	opt stack 15
 50316                           
 50317                           ;incstack = 0
 50318  014958  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 50319  01495C  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 50320  014960  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 50321  014964  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 50322  014968  D01C               	goto	i2l3804
 50323  01496A                     i2l16936:
 50324  01496A  C009  FFF6         	movff	i2memcpy@s,tblptrl
 50325  01496E  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 50326  014972  0E00               	movlw	low (__mediumconst shr (0+16))
 50327  014974  6EF8               	movwf	tblptru,c
 50328  014976  0E0E               	movlw	(high __ramtop+-1)
 50329  014978  64F7               	cpfsgt	tblptrh,c
 50330  01497A  D003               	bra	i2u1614_47
 50331  01497C  0008               	tblrd		*
 50332  01497E  50F5               	movf	tablat,w,c
 50333  014980  D005               	bra	i2u1614_40
 50334  014982                     i2u1614_47:
 50335  014982  CFF6 FFE9          	movff	tblptrl,fsr0l
 50336  014986  CFF7 FFEA          	movff	tblptrh,fsr0h
 50337  01498A  50EF               	movf	indf0,w,c
 50338  01498C                     i2u1614_40:
 50339  01498C  6E0B               	movwf	i2memcpy@tmp,c
 50340  01498E  4A09               	infsnz	i2memcpy@s,f,c
 50341  014990  2A0A               	incf	i2memcpy@s+1,f,c
 50342  014992  C007  FFD9         	movff	i2memcpy@d,fsr2l
 50343  014996  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 50344  01499A  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 50345  01499E  4A07               	infsnz	i2memcpy@d,f,c
 50346  0149A0  2A08               	incf	i2memcpy@d+1,f,c
 50347  0149A2                     i2l3804:
 50348  0149A2  0605               	decf	i2memcpy@n,f,c
 50349  0149A4  A0D8               	btfss	status,0,c
 50350  0149A6  0606               	decf	i2memcpy@n+1,f,c
 50351  0149A8  2805               	incf	i2memcpy@n,w,c
 50352  0149AA  E1DF               	bnz	i2l16936
 50353  0149AC  2806               	incf	i2memcpy@n+1,w,c
 50354  0149AE  B4D8               	btfsc	status,2,c
 50355  0149B0  0012               	return	
 50356  0149B2  D7DB               	goto	i2l3805
 50357  0149B4                     __end_ofi2_memcpy:
 50358                           	opt stack 0
 50359                           tosu	equ	0xFFF
 50360                           tosh	equ	0xFFE
 50361                           tosl	equ	0xFFD
 50362                           pclatu	equ	0xFFB
 50363                           pclath	equ	0xFFA
 50364                           tblptru	equ	0xFF8
 50365                           tblptrh	equ	0xFF7
 50366                           tblptrl	equ	0xFF6
 50367                           tablat	equ	0xFF5
 50368                           prodh	equ	0xFF4
 50369                           prodl	equ	0xFF3
 50370                           intcon	equ	0xFF2
 50371                           indf0	equ	0xFEF
 50372                           postinc0	equ	0xFEE
 50373                           fsr0h	equ	0xFEA
 50374                           fsr0l	equ	0xFE9
 50375                           wreg	equ	0xFE8
 50376                           indf1	equ	0xFE7
 50377                           postinc1	equ	0xFE6
 50378                           postdec1	equ	0xFE5
 50379                           plusw1	equ	0xFE3
 50380                           fsr1h	equ	0xFE2
 50381                           fsr1l	equ	0xFE1
 50382                           indf2	equ	0xFDF
 50383                           postinc2	equ	0xFDE
 50384                           postdec2	equ	0xFDD
 50385                           plusw2	equ	0xFDB
 50386                           fsr2h	equ	0xFDA
 50387                           fsr2l	equ	0xFD9
 50388                           status	equ	0xFD8
 50389                           
 50390 ;; *************** function _USBCtrlTrfSetupHandler *****************
 50391 ;; Defined at:
 50392 ;;		line 2467 in file "usb_device.c"
 50393 ;; Parameters:    Size  Location     Type
 50394 ;;		None
 50395 ;; Auto vars:     Size  Location     Type
 50396 ;;		None
 50397 ;; Return value:  Size  Location     Type
 50398 ;;                  1    wreg      void 
 50399 ;; Registers used:
 50400 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50401 ;; Tracked objects:
 50402 ;;		On entry : 0/0
 50403 ;;		On exit  : 0/0
 50404 ;;		Unchanged: 0/0
 50405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50410 ;;Total ram usage:        0 bytes
 50411 ;; Hardware stack levels used:    1
 50412 ;; Hardware stack levels required when called:    6
 50413 ;; This function calls:
 50414 ;;		_USBCheckStdRequest
 50415 ;;		_USBCtrlEPServiceComplete
 50416 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50417 ;; This function is called by:
 50418 ;;		_USBCtrlEPService
 50419 ;; This function uses a non-reentrant model
 50420 ;;
 50421                           
 50422                           	psect	text212
 50423  013C6E                     __ptext212:
 50424                           	opt stack 0
 50425  013C6E                     _USBCtrlTrfSetupHandler:
 50426                           	opt stack 9
 50427                           
 50428                           ;usb_device.c: 2472: shortPacketStatus = 0;
 50429                           
 50430                           ;incstack = 0
 50431  013C6E  0E00               	movlw	0
 50432  013C70  0101               	movlb	1	; () banked
 50433  013C72  6F65               	movwf	_shortPacketStatus& (0+255),b	;volatile
 50434                           
 50435                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 50436  013C74  0E00               	movlw	0
 50437  013C76  6F5E               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 50438                           
 50439                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 50440  013C78  0E00               	movlw	0
 50441  013C7A  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 50442                           
 50443                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 50444  013C7C  0E00               	movlw	0
 50445  013C7E  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 50446                           
 50447                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 50448  013C80  0E00               	movlw	0
 50449  013C82  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50450                           
 50451                           ;usb_device.c: 2477: controlTransferState = 0;
 50452  013C84  0E00               	movlw	0
 50453  013C86  6F64               	movwf	_controlTransferState& (0+255),b	;volatile
 50454                           
 50455                           ; BSR set to: 1
 50456                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50457  013C88  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50458  013C8C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50459  013C90  0E7F               	movlw	127
 50460  013C92  16DF               	andwf	indf2,f,c
 50461                           
 50462                           ; BSR set to: 1
 50463                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50464  013C94  0E04               	movlw	4
 50465  013C96  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 50466  013C98  6F09               	movwf	_pBDTEntryIn& (0+255),b
 50467  013C9A  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50468  013C9C  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50469                           
 50470                           ; BSR set to: 1
 50471                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50472  013C9E  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50473  013CA2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50474  013CA6  0E7F               	movlw	127
 50475  013CA8  16DF               	andwf	indf2,f,c
 50476                           
 50477                           ; BSR set to: 1
 50478                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50479  013CAA  0E04               	movlw	4
 50480  013CAC  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 50481  013CAE  6F09               	movwf	_pBDTEntryIn& (0+255),b
 50482  013CB0  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50483  013CB2  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50484                           
 50485                           ; BSR set to: 1
 50486                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 50487  013CB4  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50488  013CB8  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50489  013CBC  0E7F               	movlw	127
 50490  013CBE  16DF               	andwf	indf2,f,c
 50491                           
 50492                           ; BSR set to: 1
 50493                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 50494  013CC0  0E00               	movlw	0
 50495  013CC2  6E56               	movwf	_inPipes+3,c	;volatile
 50496                           
 50497                           ; BSR set to: 1
 50498                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 50499  013CC4  0E00               	movlw	0
 50500  013CC6  6E58               	movwf	_inPipes+5,c	;volatile
 50501  013CC8  0E00               	movlw	0
 50502  013CCA  6E57               	movwf	_inPipes+4,c	;volatile
 50503                           
 50504                           ; BSR set to: 1
 50505                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 50506  013CCC  0E00               	movlw	0
 50507  013CCE  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 50508                           
 50509                           ; BSR set to: 1
 50510                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 50511  013CD0  0E00               	movlw	0
 50512  013CD2  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 50513  013CD4  0E00               	movlw	0
 50514  013CD6  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 50515                           
 50516                           ; BSR set to: 1
 50517                           ;usb_device.c: 2502: USBCheckStdRequest();
 50518  013CD8  EC4C  F093         	call	_USBCheckStdRequest	;wreg free
 50519                           
 50520                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 50521  013CDC  0E00               	movlw	0
 50522  013CDE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50523  013CE0  0E03               	movlw	3
 50524  013CE2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50525  013CE4  0E00               	movlw	0
 50526  013CE6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50527  013CE8  0E00               	movlw	0
 50528  013CEA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50529  013CEC  0E00               	movlw	0
 50530  013CEE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50531  013CF0  0E00               	movlw	0
 50532  013CF2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50533  013CF4  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50534                           
 50535                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 50536  013CF8  EC07  F08D         	call	_USBCtrlEPServiceComplete	;wreg free
 50537  013CFC  0012               	return		;funcret
 50538  013CFE                     __end_of_USBCtrlTrfSetupHandler:
 50539                           	opt stack 0
 50540                           tosu	equ	0xFFF
 50541                           tosh	equ	0xFFE
 50542                           tosl	equ	0xFFD
 50543                           pclatu	equ	0xFFB
 50544                           pclath	equ	0xFFA
 50545                           tblptru	equ	0xFF8
 50546                           tblptrh	equ	0xFF7
 50547                           tblptrl	equ	0xFF6
 50548                           tablat	equ	0xFF5
 50549                           prodh	equ	0xFF4
 50550                           prodl	equ	0xFF3
 50551                           intcon	equ	0xFF2
 50552                           indf0	equ	0xFEF
 50553                           postinc0	equ	0xFEE
 50554                           fsr0h	equ	0xFEA
 50555                           fsr0l	equ	0xFE9
 50556                           wreg	equ	0xFE8
 50557                           indf1	equ	0xFE7
 50558                           postinc1	equ	0xFE6
 50559                           postdec1	equ	0xFE5
 50560                           plusw1	equ	0xFE3
 50561                           fsr1h	equ	0xFE2
 50562                           fsr1l	equ	0xFE1
 50563                           indf2	equ	0xFDF
 50564                           postinc2	equ	0xFDE
 50565                           postdec2	equ	0xFDD
 50566                           plusw2	equ	0xFDB
 50567                           fsr2h	equ	0xFDA
 50568                           fsr2l	equ	0xFD9
 50569                           status	equ	0xFD8
 50570                           
 50571 ;; *************** function _USBCtrlEPServiceComplete *****************
 50572 ;; Defined at:
 50573 ;;		line 1618 in file "usb_device.c"
 50574 ;; Parameters:    Size  Location     Type
 50575 ;;		None
 50576 ;; Auto vars:     Size  Location     Type
 50577 ;;		None
 50578 ;; Return value:  Size  Location     Type
 50579 ;;                  1    wreg      void 
 50580 ;; Registers used:
 50581 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50582 ;; Tracked objects:
 50583 ;;		On entry : 0/0
 50584 ;;		On exit  : 0/0
 50585 ;;		Unchanged: 0/0
 50586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50591 ;;Total ram usage:        0 bytes
 50592 ;; Hardware stack levels used:    1
 50593 ;; Hardware stack levels required when called:    2
 50594 ;; This function calls:
 50595 ;;		_USBCtrlEPAllowDataStage
 50596 ;;		_USBCtrlEPAllowStatusStage
 50597 ;; This function is called by:
 50598 ;;		_USBCtrlTrfSetupHandler
 50599 ;; This function uses a non-reentrant model
 50600 ;;
 50601                           
 50602                           	psect	text213
 50603  011A0E                     __ptext213:
 50604                           	opt stack 0
 50605  011A0E                     _USBCtrlEPServiceComplete:
 50606                           	opt stack 12
 50607                           
 50608                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 50609                           
 50610                           ;incstack = 0
 50611  011A0E  9865               	bcf	3941,4,c	;volatile
 50612                           
 50613                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 50614  011A10  BE56               	btfsc	_inPipes+3,7,c	;volatile
 50615  011A12  D03A               	goto	i2l231
 50616                           
 50617                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 50618  011A14  0101               	movlb	1	; () banked
 50619  011A16  AF03               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 50620  011A18  D00C               	goto	i2l232
 50621                           
 50622                           ; BSR set to: 1
 50623                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 50624  011A1A  0E02               	movlw	2
 50625  011A1C  6F64               	movwf	_controlTransferState& (0+255),b	;volatile
 50626                           
 50627                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 50628  011A1E  515A               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 50629  011A20  B4D8               	btfsc	status,2,c
 50630                           
 50631                           ; BSR set to: 1
 50632                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 50633  011A22  EC98  F09B         	call	_USBCtrlEPAllowDataStage	;wreg free
 50634                           
 50635                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 50636  011A26  0E00               	movlw	0
 50637  011A28  0101               	movlb	1	; () banked
 50638  011A2A  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50639                           
 50640                           ; BSR set to: 1
 50641                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 50642  011A2C  0E00               	movlw	0
 50643  011A2E  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50644                           
 50645                           ;usb_device.c: 1654: }
 50646  011A30  0012               	return	
 50647  011A32                     i2l232:
 50648                           
 50649                           ; BSR set to: 1
 50650                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 50651                           
 50652                           ; BSR set to: 1
 50653  011A32  EE20 F001          	lfsr	2,1
 50654  011A36  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50655  011A38  26D9               	addwf	fsr2l,f,c
 50656  011A3A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50657  011A3C  22DA               	addwfc	fsr2h,f,c
 50658  011A3E  0E08               	movlw	8
 50659  011A40  6EDF               	movwf	indf2,c
 50660                           
 50661                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50662  011A42  EE20 F002          	lfsr	2,2
 50663  011A46  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50664  011A48  26D9               	addwf	fsr2l,f,c
 50665  011A4A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50666  011A4C  22DA               	addwfc	fsr2h,f,c
 50667  011A4E  0E30               	movlw	48
 50668  011A50  6EDE               	movwf	postinc2,c
 50669  011A52  0E0D               	movlw	13
 50670  011A54  6EDD               	movwf	postdec2,c
 50671                           
 50672                           ; BSR set to: 1
 50673                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 50674  011A56  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50675  011A5A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50676  011A5E  0E0C               	movlw	12
 50677  011A60  6EDF               	movwf	indf2,c
 50678                           
 50679                           ; BSR set to: 1
 50680                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50681  011A62  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50682  011A66  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50683  011A6A  0E00               	movlw	0
 50684  011A6C  8EDB               	bsf	plusw2,7,c
 50685                           
 50686                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 50687  011A6E  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50688  011A72  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50689  011A76  0E04               	movlw	4
 50690  011A78  6EDF               	movwf	indf2,c
 50691                           
 50692                           ; BSR set to: 1
 50693                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50694  011A7A  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50695  011A7E  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50696  011A82  0E00               	movlw	0
 50697  011A84  8EDB               	bsf	plusw2,7,c
 50698                           
 50699                           ; BSR set to: 1
 50700                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 50701  011A86  0012               	return	
 50702  011A88                     i2l231:
 50703                           
 50704                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 50705  011A88  010D               	movlb	13	; () banked
 50706  011A8A  AF30               	btfss	48,7,b	;volatile
 50707  011A8C  D012               	goto	i2l236
 50708                           
 50709                           ; BSR set to: 13
 50710                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 50711  011A8E  0E01               	movlw	1
 50712  011A90  0101               	movlb	1	; () banked
 50713  011A92  6F64               	movwf	_controlTransferState& (0+255),b	;volatile
 50714                           
 50715                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 50716  011A94  515B               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 50717  011A96  B4D8               	btfsc	status,2,c
 50718                           
 50719                           ; BSR set to: 1
 50720                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 50721  011A98  EC98  F09B         	call	_USBCtrlEPAllowDataStage	;wreg free
 50722                           
 50723                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 50724  011A9C  0E00               	movlw	0
 50725  011A9E  0101               	movlb	1	; () banked
 50726  011AA0  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50727                           
 50728                           ; BSR set to: 1
 50729                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 50730  011AA2  0E00               	movlw	0
 50731  011AA4  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50732                           
 50733                           ; BSR set to: 1
 50734                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 50735  011AA6  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 50736  011AA8  A4D8               	btfss	status,2,c
 50737  011AAA  0012               	return	
 50738                           
 50739                           ; BSR set to: 1
 50740                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 50741  011AAC  ECC2  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 50742                           
 50743                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 50744  011AB0  0012               	return	
 50745  011AB2                     i2l236:
 50746                           
 50747                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 50748  011AB2  0E02               	movlw	2
 50749  011AB4  0101               	movlb	1	; () banked
 50750  011AB6  6F64               	movwf	_controlTransferState& (0+255),b	;volatile
 50751                           
 50752                           ; BSR set to: 1
 50753                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 50754  011AB8  EE20 F001          	lfsr	2,1
 50755  011ABC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50756  011ABE  26D9               	addwf	fsr2l,f,c
 50757  011AC0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50758  011AC2  22DA               	addwfc	fsr2h,f,c
 50759  011AC4  0E08               	movlw	8
 50760  011AC6  6EDF               	movwf	indf2,c
 50761                           
 50762                           ; BSR set to: 1
 50763                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50764  011AC8  EE20 F002          	lfsr	2,2
 50765  011ACC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50766  011ACE  26D9               	addwf	fsr2l,f,c
 50767  011AD0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50768  011AD2  22DA               	addwfc	fsr2h,f,c
 50769  011AD4  0E30               	movlw	48
 50770  011AD6  6EDE               	movwf	postinc2,c
 50771  011AD8  0E0D               	movlw	13
 50772  011ADA  6EDD               	movwf	postdec2,c
 50773                           
 50774                           ; BSR set to: 1
 50775                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 50776  011ADC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50777  011AE0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50778  011AE4  0E04               	movlw	4
 50779  011AE6  6EDF               	movwf	indf2,c
 50780                           
 50781                           ; BSR set to: 1
 50782                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50783  011AE8  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50784  011AEC  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50785  011AF0  0E00               	movlw	0
 50786  011AF2  8EDB               	bsf	plusw2,7,c
 50787                           
 50788                           ; BSR set to: 1
 50789                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 50790  011AF4  0E00               	movlw	0
 50791  011AF6  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50792                           
 50793                           ; BSR set to: 1
 50794                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 50795  011AF8  0E00               	movlw	0
 50796  011AFA  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50797                           
 50798                           ; BSR set to: 1
 50799                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 50800  011AFC  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 50801  011AFE  A4D8               	btfss	status,2,c
 50802  011B00  0012               	return	
 50803                           
 50804                           ; BSR set to: 1
 50805                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 50806  011B02  ECC2  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 50807  011B06  0012               	return	
 50808  011B08                     __end_of_USBCtrlEPServiceComplete:
 50809                           	opt stack 0
 50810                           tosu	equ	0xFFF
 50811                           tosh	equ	0xFFE
 50812                           tosl	equ	0xFFD
 50813                           pclatu	equ	0xFFB
 50814                           pclath	equ	0xFFA
 50815                           tblptru	equ	0xFF8
 50816                           tblptrh	equ	0xFF7
 50817                           tblptrl	equ	0xFF6
 50818                           tablat	equ	0xFF5
 50819                           prodh	equ	0xFF4
 50820                           prodl	equ	0xFF3
 50821                           intcon	equ	0xFF2
 50822                           indf0	equ	0xFEF
 50823                           postinc0	equ	0xFEE
 50824                           fsr0h	equ	0xFEA
 50825                           fsr0l	equ	0xFE9
 50826                           wreg	equ	0xFE8
 50827                           indf1	equ	0xFE7
 50828                           postinc1	equ	0xFE6
 50829                           postdec1	equ	0xFE5
 50830                           plusw1	equ	0xFE3
 50831                           fsr1h	equ	0xFE2
 50832                           fsr1l	equ	0xFE1
 50833                           indf2	equ	0xFDF
 50834                           postinc2	equ	0xFDE
 50835                           postdec2	equ	0xFDD
 50836                           plusw2	equ	0xFDB
 50837                           fsr2h	equ	0xFDA
 50838                           fsr2l	equ	0xFD9
 50839                           status	equ	0xFD8
 50840                           
 50841 ;; *************** function _USBCtrlEPAllowDataStage *****************
 50842 ;; Defined at:
 50843 ;;		line 1490 in file "usb_device.c"
 50844 ;; Parameters:    Size  Location     Type
 50845 ;;		None
 50846 ;; Auto vars:     Size  Location     Type
 50847 ;;		None
 50848 ;; Return value:  Size  Location     Type
 50849 ;;                  1    wreg      void 
 50850 ;; Registers used:
 50851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50852 ;; Tracked objects:
 50853 ;;		On entry : 0/0
 50854 ;;		On exit  : 0/0
 50855 ;;		Unchanged: 0/0
 50856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50861 ;;Total ram usage:        0 bytes
 50862 ;; Hardware stack levels used:    1
 50863 ;; Hardware stack levels required when called:    1
 50864 ;; This function calls:
 50865 ;;		_USBCtrlTrfTxService
 50866 ;; This function is called by:
 50867 ;;		_USBCtrlEPServiceComplete
 50868 ;; This function uses a non-reentrant model
 50869 ;;
 50870                           
 50871                           	psect	text214
 50872  013730                     __ptext214:
 50873                           	opt stack 0
 50874  013730                     _USBCtrlEPAllowDataStage:
 50875                           	opt stack 12
 50876                           
 50877                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 50878                           
 50879                           ;incstack = 0
 50880  013730  0E00               	movlw	0
 50881  013732  0101               	movlb	1	; () banked
 50882  013734  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 50883                           
 50884                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 50885  013736  0E00               	movlw	0
 50886  013738  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 50887                           
 50888                           ; BSR set to: 1
 50889                           ;usb_device.c: 1495: if(controlTransferState == 2)
 50890  01373A  0E02               	movlw	2
 50891  01373C  1964               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 50892  01373E  A4D8               	btfss	status,2,c
 50893  013740  D01F               	goto	i2l220
 50894                           
 50895                           ; BSR set to: 1
 50896                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 50897  013742  EE20 F001          	lfsr	2,1
 50898  013746  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50899  013748  26D9               	addwf	fsr2l,f,c
 50900  01374A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50901  01374C  22DA               	addwfc	fsr2h,f,c
 50902  01374E  0E08               	movlw	8
 50903  013750  6EDF               	movwf	indf2,c
 50904                           
 50905                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 50906  013752  EE20 F002          	lfsr	2,2
 50907  013756  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50908  013758  26D9               	addwf	fsr2l,f,c
 50909  01375A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50910  01375C  22DA               	addwfc	fsr2h,f,c
 50911  01375E  0E38               	movlw	56
 50912  013760  6EDE               	movwf	postinc2,c
 50913  013762  0E0D               	movlw	13
 50914  013764  6EDD               	movwf	postdec2,c
 50915                           
 50916                           ; BSR set to: 1
 50917                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 50918  013766  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50919  01376A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50920  01376E  0E48               	movlw	72
 50921  013770  6EDF               	movwf	indf2,c
 50922                           
 50923                           ; BSR set to: 1
 50924                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50925  013772  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50926  013776  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50927  01377A  0E00               	movlw	0
 50928  01377C  8EDB               	bsf	plusw2,7,c
 50929                           
 50930                           ;usb_device.c: 1502: }
 50931  01377E  0012               	return	
 50932  013780                     i2l220:
 50933                           
 50934                           ; BSR set to: 1
 50935                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 50936                           
 50937                           ; BSR set to: 1
 50938  013780  5057               	movf	_inPipes+4,w,c	;volatile
 50939  013782  010D               	movlb	13	; () banked
 50940  013784  5D36               	subwf	54,w,b	;volatile
 50941  013786  5058               	movf	_inPipes+5,w,c	;volatile
 50942  013788  5937               	subwfb	55,w,b	;volatile
 50943  01378A  B0D8               	btfsc	status,0,c
 50944  01378C  D004               	goto	i2l222
 50945                           
 50946                           ; BSR set to: 13
 50947                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 50948  01378E  CD36 F057          	movff	3382,_inPipes+4	;volatile
 50949  013792  CD37 F058          	movff	3383,_inPipes+5	;volatile
 50950  013796                     i2l222:
 50951                           
 50952                           ; BSR set to: 13
 50953                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 50954                           
 50955                           ; BSR set to: 13
 50956  013796  EC23  F094         	call	_USBCtrlTrfTxService	;wreg free
 50957                           
 50958                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 50959  01379A  0101               	movlb	1	; () banked
 50960  01379C  EE20 F002          	lfsr	2,2
 50961  0137A0  5109               	movf	_pBDTEntryIn& (0+255),w,b
 50962  0137A2  26D9               	addwf	fsr2l,f,c
 50963  0137A4  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50964  0137A6  22DA               	addwfc	fsr2h,f,c
 50965  0137A8  0E38               	movlw	56
 50966  0137AA  6EDE               	movwf	postinc2,c
 50967  0137AC  0E0D               	movlw	13
 50968  0137AE  6EDD               	movwf	postdec2,c
 50969                           
 50970                           ; BSR set to: 1
 50971                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 50972  0137B0  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50973  0137B4  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50974  0137B8  0E48               	movlw	72
 50975  0137BA  6EDF               	movwf	indf2,c
 50976                           
 50977                           ; BSR set to: 1
 50978                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50979  0137BC  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50980  0137C0  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50981  0137C4  0E00               	movlw	0
 50982  0137C6  8EDB               	bsf	plusw2,7,c
 50983  0137C8  0012               	return	
 50984  0137CA                     __end_of_USBCtrlEPAllowDataStage:
 50985                           	opt stack 0
 50986                           tosu	equ	0xFFF
 50987                           tosh	equ	0xFFE
 50988                           tosl	equ	0xFFD
 50989                           pclatu	equ	0xFFB
 50990                           pclath	equ	0xFFA
 50991                           tblptru	equ	0xFF8
 50992                           tblptrh	equ	0xFF7
 50993                           tblptrl	equ	0xFF6
 50994                           tablat	equ	0xFF5
 50995                           prodh	equ	0xFF4
 50996                           prodl	equ	0xFF3
 50997                           intcon	equ	0xFF2
 50998                           indf0	equ	0xFEF
 50999                           postinc0	equ	0xFEE
 51000                           fsr0h	equ	0xFEA
 51001                           fsr0l	equ	0xFE9
 51002                           wreg	equ	0xFE8
 51003                           indf1	equ	0xFE7
 51004                           postinc1	equ	0xFE6
 51005                           postdec1	equ	0xFE5
 51006                           plusw1	equ	0xFE3
 51007                           fsr1h	equ	0xFE2
 51008                           fsr1l	equ	0xFE1
 51009                           indf2	equ	0xFDF
 51010                           postinc2	equ	0xFDE
 51011                           postdec2	equ	0xFDD
 51012                           plusw2	equ	0xFDB
 51013                           fsr2h	equ	0xFDA
 51014                           fsr2l	equ	0xFD9
 51015                           status	equ	0xFD8
 51016                           
 51017 ;; *************** function _USBCheckStdRequest *****************
 51018 ;; Defined at:
 51019 ;;		line 2688 in file "usb_device.c"
 51020 ;; Parameters:    Size  Location     Type
 51021 ;;		None
 51022 ;; Auto vars:     Size  Location     Type
 51023 ;;		None
 51024 ;; Return value:  Size  Location     Type
 51025 ;;                  1    wreg      void 
 51026 ;; Registers used:
 51027 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51028 ;; Tracked objects:
 51029 ;;		On entry : 0/0
 51030 ;;		On exit  : 0/0
 51031 ;;		Unchanged: 0/0
 51032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51037 ;;Total ram usage:        0 bytes
 51038 ;; Hardware stack levels used:    1
 51039 ;; Hardware stack levels required when called:    5
 51040 ;; This function calls:
 51041 ;;		_USBStdFeatureReqHandler
 51042 ;;		_USBStdGetDscHandler
 51043 ;;		_USBStdGetStatusHandler
 51044 ;;		_USBStdSetCfgHandler
 51045 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51046 ;; This function is called by:
 51047 ;;		_USBCtrlTrfSetupHandler
 51048 ;; This function uses a non-reentrant model
 51049 ;;
 51050                           
 51051                           	psect	text215
 51052  012698                     __ptext215:
 51053                           	opt stack 0
 51054  012698                     _USBCheckStdRequest:
 51055                           	opt stack 9
 51056                           
 51057                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 51058                           
 51059                           ; BSR set to: 1
 51060                           ;incstack = 0
 51061  012698  010D               	movlb	13	; () banked
 51062  01269A  3930               	swapf	48,w,b	;volatile
 51063  01269C  32E8               	rrcf	wreg,f,c
 51064  01269E  0B03               	andlw	3
 51065  0126A0  0900               	iorlw	0
 51066  0126A2  A4D8               	btfss	status,2,c
 51067  0126A4  0012               	return	
 51068  0126A6  D042               	goto	i2l355
 51069  0126A8                     i2l356:
 51070                           
 51071                           ; BSR set to: 13
 51072                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 51073  0126A8  8E56               	bsf	_inPipes+3,7,c	;volatile
 51074                           
 51075                           ; BSR set to: 13
 51076                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 51077  0126AA  0E08               	movlw	8
 51078  0126AC  6E5D               	movwf	_USBDeviceState,c	;volatile
 51079                           
 51080                           ;usb_device.c: 2698: break;
 51081  0126AE  0012               	return	
 51082  0126B0                     
 51083                           ; BSR set to: 13
 51084                           ;usb_device.c: 2700: USBStdGetDscHandler();
 51085                           
 51086                           ; BSR set to: 13
 51087  0126B0  EC0C  F084         	call	_USBStdGetDscHandler	;wreg free
 51088                           
 51089                           ;usb_device.c: 2701: break;
 51090  0126B4  0012               	return	
 51091  0126B6                     
 51092                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 51093  0126B6  EC71  F092         	call	_USBStdSetCfgHandler	;wreg free
 51094                           
 51095                           ;usb_device.c: 2704: break;
 51096  0126BA  0012               	return	
 51097  0126BC                     
 51098                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 51099  0126BC  0EC3               	movlw	low _USBActiveConfiguration
 51100  0126BE  6E53               	movwf	_inPipes,c	;volatile
 51101  0126C0  0E01               	movlw	high _USBActiveConfiguration
 51102  0126C2  6E54               	movwf	_inPipes+1,c	;volatile
 51103                           
 51104                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51105  0126C4  8056               	bsf	_inPipes+3,0,c	;volatile
 51106                           
 51107                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 51108  0126C6  0E01               	movlw	1
 51109  0126C8  6E57               	movwf	_inPipes+4,c	;volatile
 51110                           
 51111                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 51112  0126CA  8E56               	bsf	_inPipes+3,7,c	;volatile
 51113                           
 51114                           ;usb_device.c: 2710: break;
 51115  0126CC  0012               	return	
 51116  0126CE                     
 51117                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 51118  0126CE  ECAE  F09A         	call	_USBStdGetStatusHandler	;wreg free
 51119                           
 51120                           ;usb_device.c: 2713: break;
 51121  0126D2  0012               	return	
 51122  0126D4                     
 51123                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 51124  0126D4  ECFB  F06B         	call	_USBStdFeatureReqHandler	;wreg free
 51125                           
 51126                           ;usb_device.c: 2717: break;
 51127  0126D8  0012               	return	
 51128  0126DA                     
 51129                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 51130  0126DA  010D               	movlb	13	; () banked
 51131  0126DC  5134               	movf	52,w,b	;volatile
 51132  0126DE  0D01               	mullw	1
 51133  0126E0  0EBF               	movlw	low _USBAlternateInterface
 51134  0126E2  24F3               	addwf	prodl,w,c
 51135  0126E4  6E53               	movwf	_inPipes,c	;volatile
 51136  0126E6  0E01               	movlw	high _USBAlternateInterface
 51137  0126E8  20F4               	addwfc	prodh,w,c
 51138  0126EA  6E54               	movwf	_inPipes+1,c	;volatile
 51139                           
 51140                           ; BSR set to: 13
 51141                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51142  0126EC  8056               	bsf	_inPipes+3,0,c	;volatile
 51143                           
 51144                           ; BSR set to: 13
 51145                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 51146  0126EE  0E01               	movlw	1
 51147  0126F0  6E57               	movwf	_inPipes+4,c	;volatile
 51148                           
 51149                           ; BSR set to: 13
 51150                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 51151  0126F2  8E56               	bsf	_inPipes+3,7,c	;volatile
 51152                           
 51153                           ;usb_device.c: 2723: break;
 51154  0126F4  0012               	return	
 51155  0126F6                     i2l365:
 51156                           
 51157                           ; BSR set to: 13
 51158                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 51159  0126F6  8E56               	bsf	_inPipes+3,7,c	;volatile
 51160                           
 51161                           ; BSR set to: 13
 51162                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 51163  0126F8  5134               	movf	52,w,b	;volatile
 51164  0126FA  0D01               	mullw	1
 51165  0126FC  0EBF               	movlw	low _USBAlternateInterface
 51166  0126FE  24F3               	addwf	prodl,w,c
 51167  012700  6ED9               	movwf	fsr2l,c
 51168  012702  0E01               	movlw	high _USBAlternateInterface
 51169  012704  20F4               	addwfc	prodh,w,c
 51170  012706  6EDA               	movwf	fsr2h,c
 51171  012708  CD32 FFDF          	movff	3378,indf2	;volatile
 51172                           
 51173                           ;usb_device.c: 2727: break;
 51174  01270C  0012               	return	
 51175  01270E                     
 51176                           ; BSR set to: 13
 51177                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 51178                           
 51179                           ; BSR set to: 13
 51180  01270E  0E00               	movlw	0
 51181  012710  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51182  012712  0E02               	movlw	2
 51183  012714  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51184  012716  0E00               	movlw	0
 51185  012718  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51186  01271A  0E00               	movlw	0
 51187  01271C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51188  01271E  0E00               	movlw	0
 51189  012720  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51190  012722  0E00               	movlw	0
 51191  012724  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51192  012726  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51193                           
 51194                           ;usb_device.c: 2734: }
 51195                           
 51196                           ;usb_device.c: 2733: break;
 51197                           
 51198                           ;usb_device.c: 2732: default:
 51199                           
 51200                           ;usb_device.c: 2731: case 12:
 51201                           
 51202                           ;usb_device.c: 2730: break;
 51203  01272A  0012               	return	
 51204  01272C                     i2l355:
 51205  01272C  010D               	movlb	13	; () banked
 51206  01272E  5131               	movf	49,w,b	;volatile
 51207                           
 51208                           ; Switch size 1, requested type "space"
 51209                           ; Number of cases is 11, Range of values is 0 to 12
 51210                           ; switch strategies available:
 51211                           ; Name         Instructions Cycles
 51212                           ; simple_byte           34    18 (average)
 51213                           ;	Chosen strategy is simple_byte
 51214  012730  0A00               	xorlw	0	; case 0
 51215  012732  B4D8               	btfsc	status,2,c
 51216  012734  D7CC               	goto	i2l361
 51217  012736  0A01               	xorlw	1	; case 1
 51218  012738  B4D8               	btfsc	status,2,c
 51219  01273A  D7CC               	goto	i2l362
 51220  01273C  0A02               	xorlw	2	; case 3
 51221  01273E  B4D8               	btfsc	status,2,c
 51222  012740  D7C9               	goto	i2l362
 51223  012742  0A06               	xorlw	6	; case 5
 51224  012744  B4D8               	btfsc	status,2,c
 51225  012746  D7B0               	goto	i2l356
 51226  012748  0A03               	xorlw	3	; case 6
 51227  01274A  B4D8               	btfsc	status,2,c
 51228  01274C  D7B1               	goto	i2l358
 51229  01274E  0A01               	xorlw	1	; case 7
 51230  012750  B4D8               	btfsc	status,2,c
 51231  012752  D7DD               	goto	i2l366
 51232  012754  0A0F               	xorlw	15	; case 8
 51233  012756  B4D8               	btfsc	status,2,c
 51234  012758  D7B1               	goto	i2l360
 51235  01275A  0A01               	xorlw	1	; case 9
 51236  01275C  B4D8               	btfsc	status,2,c
 51237  01275E  D7AB               	goto	i2l359
 51238  012760  0A03               	xorlw	3	; case 10
 51239  012762  B4D8               	btfsc	status,2,c
 51240  012764  D7BA               	goto	i2l364
 51241  012766  0A01               	xorlw	1	; case 11
 51242  012768  B4D8               	btfsc	status,2,c
 51243  01276A  D7C5               	goto	i2l365
 51244  01276C  0A07               	xorlw	7	; case 12
 51245  01276E  0012               	return	
 51246  012770                     __end_of_USBCheckStdRequest:
 51247                           	opt stack 0
 51248                           tosu	equ	0xFFF
 51249                           tosh	equ	0xFFE
 51250                           tosl	equ	0xFFD
 51251                           pclatu	equ	0xFFB
 51252                           pclath	equ	0xFFA
 51253                           tblptru	equ	0xFF8
 51254                           tblptrh	equ	0xFF7
 51255                           tblptrl	equ	0xFF6
 51256                           tablat	equ	0xFF5
 51257                           prodh	equ	0xFF4
 51258                           prodl	equ	0xFF3
 51259                           intcon	equ	0xFF2
 51260                           indf0	equ	0xFEF
 51261                           postinc0	equ	0xFEE
 51262                           fsr0h	equ	0xFEA
 51263                           fsr0l	equ	0xFE9
 51264                           wreg	equ	0xFE8
 51265                           indf1	equ	0xFE7
 51266                           postinc1	equ	0xFE6
 51267                           postdec1	equ	0xFE5
 51268                           plusw1	equ	0xFE3
 51269                           fsr1h	equ	0xFE2
 51270                           fsr1l	equ	0xFE1
 51271                           indf2	equ	0xFDF
 51272                           postinc2	equ	0xFDE
 51273                           postdec2	equ	0xFDD
 51274                           plusw2	equ	0xFDB
 51275                           fsr2h	equ	0xFDA
 51276                           fsr2l	equ	0xFD9
 51277                           status	equ	0xFD8
 51278                           
 51279 ;; *************** function _USBStdSetCfgHandler *****************
 51280 ;; Defined at:
 51281 ;;		line 1970 in file "usb_device.c"
 51282 ;; Parameters:    Size  Location     Type
 51283 ;;		None
 51284 ;; Auto vars:     Size  Location     Type
 51285 ;;  i               1   23[COMRAM] unsigned char 
 51286 ;; Return value:  Size  Location     Type
 51287 ;;                  1    wreg      void 
 51288 ;; Registers used:
 51289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51290 ;; Tracked objects:
 51291 ;;		On entry : 0/0
 51292 ;;		On exit  : 0/0
 51293 ;;		Unchanged: 0/0
 51294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51299 ;;Total ram usage:        1 bytes
 51300 ;; Hardware stack levels used:    1
 51301 ;; Hardware stack levels required when called:    4
 51302 ;; This function calls:
 51303 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51304 ;;		i2_memset
 51305 ;; This function is called by:
 51306 ;;		_USBCheckStdRequest
 51307 ;; This function uses a non-reentrant model
 51308 ;;
 51309                           
 51310                           	psect	text216
 51311  0124E2                     __ptext216:
 51312                           	opt stack 0
 51313  0124E2                     _USBStdSetCfgHandler:
 51314                           	opt stack 9
 51315                           
 51316                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 51317                           
 51318                           ;incstack = 0
 51319  0124E2  8E56               	bsf	_inPipes+3,7,c	;volatile
 51320                           
 51321                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 51322  0124E4  0E27               	movlw	39
 51323  0124E6  6E01               	movwf	i2memset@p1,c
 51324  0124E8  0E0F               	movlw	15
 51325  0124EA  6E02               	movwf	i2memset@p1+1,c
 51326  0124EC  0E00               	movlw	0
 51327  0124EE  6E04               	movwf	i2memset@c+1,c
 51328  0124F0  0E00               	movlw	0
 51329  0124F2  6E03               	movwf	i2memset@c,c
 51330  0124F4  0E00               	movlw	0
 51331  0124F6  6E06               	movwf	i2memset@n+1,c
 51332  0124F8  0E02               	movlw	2
 51333  0124FA  6E05               	movwf	i2memset@n,c
 51334  0124FC  ECD7  F0AC         	call	i2_memset	;wreg free
 51335                           
 51336                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 51337  012500  0E00               	movlw	0
 51338  012502  6E01               	movwf	i2memset@p1,c
 51339  012504  0E0D               	movlw	13
 51340  012506  6E02               	movwf	i2memset@p1+1,c
 51341  012508  0E00               	movlw	0
 51342  01250A  6E04               	movwf	i2memset@c+1,c
 51343  01250C  0E00               	movlw	0
 51344  01250E  6E03               	movwf	i2memset@c,c
 51345  012510  0E00               	movlw	0
 51346  012512  6E06               	movwf	i2memset@n+1,c
 51347  012514  0E30               	movlw	48
 51348  012516  6E05               	movwf	i2memset@n,c
 51349  012518  ECD7  F0AC         	call	i2_memset	;wreg free
 51350                           
 51351                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 51352  01251C  8C65               	bsf	3941,6,c	;volatile
 51353                           
 51354                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 51355  01251E  0E00               	movlw	0
 51356  012520  6E18               	movwf	USBStdSetCfgHandler@i,c
 51357  012522                     i2l13546:
 51358  012522  0E02               	movlw	2
 51359  012524  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 51360  012526  D001               	goto	i2l272
 51361  012528  D016               	goto	i2u1197_40
 51362  01252A                     i2l272:
 51363                           
 51364                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 51365  01252A  5018               	movf	USBStdSetCfgHandler@i,w,c
 51366  01252C  0D01               	mullw	1
 51367  01252E  0E32               	movlw	low _ep_data_in
 51368  012530  24F3               	addwf	prodl,w,c
 51369  012532  6ED9               	movwf	fsr2l,c
 51370  012534  0E01               	movlw	high _ep_data_in
 51371  012536  20F4               	addwfc	prodh,w,c
 51372  012538  6EDA               	movwf	fsr2h,c
 51373  01253A  0E00               	movlw	0
 51374  01253C  6EDF               	movwf	indf2,c
 51375                           
 51376                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 51377  01253E  5018               	movf	USBStdSetCfgHandler@i,w,c
 51378  012540  0D01               	mullw	1
 51379  012542  0E2F               	movlw	low _ep_data_out
 51380  012544  24F3               	addwf	prodl,w,c
 51381  012546  6ED9               	movwf	fsr2l,c
 51382  012548  0E01               	movlw	high _ep_data_out
 51383  01254A  20F4               	addwfc	prodh,w,c
 51384  01254C  6EDA               	movwf	fsr2h,c
 51385  01254E  0E00               	movlw	0
 51386  012550  6EDF               	movwf	indf2,c
 51387  012552  2A18               	incf	USBStdSetCfgHandler@i,f,c
 51388  012554  D7E6               	goto	i2l13546
 51389  012556                     i2u1197_40:
 51390                           
 51391                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 51392  012556  0EBF               	movlw	low _USBAlternateInterface
 51393  012558  6E01               	movwf	i2memset@p1,c
 51394  01255A  0E01               	movlw	high _USBAlternateInterface
 51395  01255C  6E02               	movwf	i2memset@p1+1,c
 51396  01255E  0E00               	movlw	0
 51397  012560  6E04               	movwf	i2memset@c+1,c
 51398  012562  0E00               	movlw	0
 51399  012564  6E03               	movwf	i2memset@c,c
 51400  012566  0E00               	movlw	0
 51401  012568  6E06               	movwf	i2memset@n+1,c
 51402  01256A  0E02               	movlw	2
 51403  01256C  6E05               	movwf	i2memset@n,c
 51404  01256E  ECD7  F0AC         	call	i2_memset	;wreg free
 51405                           
 51406                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 51407  012572  9C65               	bcf	3941,6,c	;volatile
 51408                           
 51409                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 51410  012574  0E08               	movlw	8
 51411  012576  0101               	movlb	1	; () banked
 51412  012578  6F09               	movwf	_pBDTEntryIn& (0+255),b
 51413  01257A  0E0D               	movlw	13
 51414  01257C  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 51415                           
 51416                           ; BSR set to: 1
 51417                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 51418  01257E  0E00               	movlw	0
 51419  012580  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 51420  012582  0E0D               	movlw	13
 51421  012584  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 51422                           
 51423                           ; BSR set to: 1
 51424                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 51425  012586  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 51426  01258A  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 51427                           
 51428                           ; BSR set to: 1
 51429                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 51430  01258E  CD32 F1C3          	movff	3378,_USBActiveConfiguration	;volatile
 51431                           
 51432                           ; BSR set to: 1
 51433                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 51434  012592  51C3               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 51435  012594  A4D8               	btfss	status,2,c
 51436  012596  D003               	goto	i2l274
 51437                           
 51438                           ; BSR set to: 1
 51439                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 51440  012598  0E10               	movlw	16
 51441  01259A  6E5D               	movwf	_USBDeviceState,c	;volatile
 51442                           
 51443                           ;usb_device.c: 2015: }
 51444  01259C  0012               	return	
 51445  01259E                     i2l274:
 51446                           
 51447                           ; BSR set to: 1
 51448                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 51449                           
 51450                           ; BSR set to: 1
 51451  01259E  0E00               	movlw	0
 51452  0125A0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51453  0125A2  0E01               	movlw	1
 51454  0125A4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51455  0125A6  0EC3               	movlw	low _USBActiveConfiguration
 51456  0125A8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51457  0125AA  0E01               	movlw	high _USBActiveConfiguration
 51458  0125AC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51459  0125AE  0E00               	movlw	0
 51460  0125B0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51461  0125B2  0E01               	movlw	1
 51462  0125B4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51463  0125B6  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51464                           
 51465                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 51466  0125BA  0E20               	movlw	32
 51467  0125BC  6E5D               	movwf	_USBDeviceState,c	;volatile
 51468  0125BE  0012               	return	
 51469  0125C0                     __end_of_USBStdSetCfgHandler:
 51470                           	opt stack 0
 51471                           tosu	equ	0xFFF
 51472                           tosh	equ	0xFFE
 51473                           tosl	equ	0xFFD
 51474                           pclatu	equ	0xFFB
 51475                           pclath	equ	0xFFA
 51476                           tblptru	equ	0xFF8
 51477                           tblptrh	equ	0xFF7
 51478                           tblptrl	equ	0xFF6
 51479                           tablat	equ	0xFF5
 51480                           prodh	equ	0xFF4
 51481                           prodl	equ	0xFF3
 51482                           intcon	equ	0xFF2
 51483                           indf0	equ	0xFEF
 51484                           postinc0	equ	0xFEE
 51485                           fsr0h	equ	0xFEA
 51486                           fsr0l	equ	0xFE9
 51487                           wreg	equ	0xFE8
 51488                           indf1	equ	0xFE7
 51489                           postinc1	equ	0xFE6
 51490                           postdec1	equ	0xFE5
 51491                           plusw1	equ	0xFE3
 51492                           fsr1h	equ	0xFE2
 51493                           fsr1l	equ	0xFE1
 51494                           indf2	equ	0xFDF
 51495                           postinc2	equ	0xFDE
 51496                           postdec2	equ	0xFDD
 51497                           plusw2	equ	0xFDB
 51498                           fsr2h	equ	0xFDA
 51499                           fsr2l	equ	0xFD9
 51500                           status	equ	0xFD8
 51501                           
 51502 ;; *************** function i2_memset *****************
 51503 ;; Defined at:
 51504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 51505 ;; Parameters:    Size  Location     Type
 51506 ;;  p1              2    0[COMRAM] PTR void 
 51507 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51508 ;;  c               2    2[COMRAM] int 
 51509 ;;  n               2    4[COMRAM] unsigned int 
 51510 ;; Auto vars:     Size  Location     Type
 51511 ;;  memset          2    6[COMRAM] PTR unsigned char 
 51512 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51513 ;; Return value:  Size  Location     Type
 51514 ;;                  2    0[COMRAM] PTR void 
 51515 ;; Registers used:
 51516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51517 ;; Tracked objects:
 51518 ;;		On entry : 0/0
 51519 ;;		On exit  : 0/0
 51520 ;;		Unchanged: 0/0
 51521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51522 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51525 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51526 ;;Total ram usage:        8 bytes
 51527 ;; Hardware stack levels used:    1
 51528 ;; This function calls:
 51529 ;;		Nothing
 51530 ;; This function is called by:
 51531 ;;		_USBStdSetCfgHandler
 51532 ;;		i2_USBDeviceInit
 51533 ;; This function uses a non-reentrant model
 51534 ;;
 51535                           
 51536                           	psect	text217
 51537  0159AE                     __ptext217:
 51538                           	opt stack 0
 51539  0159AE                     i2_memset:
 51540                           	opt stack 15
 51541                           
 51542                           ;incstack = 0
 51543  0159AE  C001  F007         	movff	i2memset@p1,i2memset@p
 51544  0159B2  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 51545  0159B6  D008               	goto	i2l3810
 51546  0159B8                     i2l13476:
 51547  0159B8  C007  FFD9         	movff	i2memset@p,fsr2l
 51548  0159BC  C008  FFDA         	movff	i2memset@p+1,fsr2h
 51549  0159C0  C003  FFDF         	movff	i2memset@c,indf2
 51550  0159C4  4A07               	infsnz	i2memset@p,f,c
 51551  0159C6  2A08               	incf	i2memset@p+1,f,c
 51552  0159C8                     i2l3810:
 51553  0159C8  0605               	decf	i2memset@n,f,c
 51554  0159CA  A0D8               	btfss	status,0,c
 51555  0159CC  0606               	decf	i2memset@n+1,f,c
 51556  0159CE  2805               	incf	i2memset@n,w,c
 51557  0159D0  E1F3               	bnz	i2l13476
 51558  0159D2  2806               	incf	i2memset@n+1,w,c
 51559  0159D4  B4D8               	btfsc	status,2,c
 51560  0159D6  0012               	return	
 51561  0159D8  D7EF               	goto	i2l3811
 51562  0159DA                     __end_ofi2_memset:
 51563                           	opt stack 0
 51564                           tosu	equ	0xFFF
 51565                           tosh	equ	0xFFE
 51566                           tosl	equ	0xFFD
 51567                           pclatu	equ	0xFFB
 51568                           pclath	equ	0xFFA
 51569                           tblptru	equ	0xFF8
 51570                           tblptrh	equ	0xFF7
 51571                           tblptrl	equ	0xFF6
 51572                           tablat	equ	0xFF5
 51573                           prodh	equ	0xFF4
 51574                           prodl	equ	0xFF3
 51575                           intcon	equ	0xFF2
 51576                           indf0	equ	0xFEF
 51577                           postinc0	equ	0xFEE
 51578                           fsr0h	equ	0xFEA
 51579                           fsr0l	equ	0xFE9
 51580                           wreg	equ	0xFE8
 51581                           indf1	equ	0xFE7
 51582                           postinc1	equ	0xFE6
 51583                           postdec1	equ	0xFE5
 51584                           plusw1	equ	0xFE3
 51585                           fsr1h	equ	0xFE2
 51586                           fsr1l	equ	0xFE1
 51587                           indf2	equ	0xFDF
 51588                           postinc2	equ	0xFDE
 51589                           postdec2	equ	0xFDD
 51590                           plusw2	equ	0xFDB
 51591                           fsr2h	equ	0xFDA
 51592                           fsr2l	equ	0xFD9
 51593                           status	equ	0xFD8
 51594                           
 51595 ;; *************** function _USBStdGetStatusHandler *****************
 51596 ;; Defined at:
 51597 ;;		line 2131 in file "usb_device.c"
 51598 ;; Parameters:    Size  Location     Type
 51599 ;;		None
 51600 ;; Auto vars:     Size  Location     Type
 51601 ;;  p               2    1[COMRAM] PTR struct __BDT
 51602 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51603 ;; Return value:  Size  Location     Type
 51604 ;;                  1    wreg      void 
 51605 ;; Registers used:
 51606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51607 ;; Tracked objects:
 51608 ;;		On entry : 0/0
 51609 ;;		On exit  : 0/0
 51610 ;;		Unchanged: 0/0
 51611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51615 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51616 ;;Total ram usage:        3 bytes
 51617 ;; Hardware stack levels used:    1
 51618 ;; This function calls:
 51619 ;;		Nothing
 51620 ;; This function is called by:
 51621 ;;		_USBCheckStdRequest
 51622 ;; This function uses a non-reentrant model
 51623 ;;
 51624                           
 51625                           	psect	text218
 51626  01355C                     __ptext218:
 51627                           	opt stack 0
 51628  01355C                     _USBStdGetStatusHandler:
 51629                           	opt stack 13
 51630                           
 51631                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 51632                           
 51633                           ;incstack = 0
 51634  01355C  0E00               	movlw	0
 51635  01355E  010D               	movlb	13	; () banked
 51636  013560  6F38               	movwf	56,b	;volatile
 51637                           
 51638                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 51639  013562  0E00               	movlw	0
 51640  013564  6F39               	movwf	57,b	;volatile
 51641                           
 51642                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 51643  013566  D035               	goto	i2l293
 51644  013568                     i2l294:
 51645                           
 51646                           ; BSR set to: 13
 51647                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 51648  013568  8E56               	bsf	_inPipes+3,7,c	;volatile
 51649                           
 51650                           ; BSR set to: 13
 51651                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 51652                           
 51653                           ; BSR set to: 13
 51654                           
 51655                           ; BSR set to: 13
 51656                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 51657                           
 51658                           ;usb_device.c: 2144: if(0 == 1)
 51659  01356A  0101               	movlb	1	; () banked
 51660  01356C  0563               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 51661  01356E  A4D8               	btfss	status,2,c
 51662  013570  D03B               	goto	i2l297
 51663                           
 51664                           ; BSR set to: 1
 51665                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 51666  013572  010D               	movlb	13	; () banked
 51667  013574  8338               	bsf	56,1,b	;volatile
 51668                           
 51669                           ; BSR set to: 13
 51670                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 51671  013576  D038               	goto	i2l297
 51672  013578                     i2l298:
 51673                           
 51674                           ; BSR set to: 13
 51675                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 51676  013578  8E56               	bsf	_inPipes+3,7,c	;volatile
 51677                           
 51678                           ;usb_device.c: 2156: break;
 51679  01357A  D036               	goto	i2l297
 51680  01357C                     i2l299:
 51681                           
 51682                           ; BSR set to: 13
 51683                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 51684  01357C  8E56               	bsf	_inPipes+3,7,c	;volatile
 51685                           
 51686                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 51687  01357E  BF34               	btfsc	52,7,b	;volatile
 51688  013580  D00A               	goto	i2l300
 51689                           
 51690                           ; BSR set to: 13
 51691                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 51692  013582  5134               	movf	52,w,b	;volatile
 51693  013584  0B0F               	andlw	15
 51694  013586  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 51695  013588  5001               	movf	??_USBStdGetStatusHandler,w,c
 51696  01358A  0D02               	mullw	2
 51697  01358C  0E0F               	movlw	low _pBDTEntryOut
 51698  01358E  24F3               	addwf	prodl,w,c
 51699  013590  6ED9               	movwf	fsr2l,c
 51700  013592  0E01               	movlw	high _pBDTEntryOut
 51701  013594  D009               	goto	L73
 51702  013596                     i2l300:
 51703                           
 51704                           ; BSR set to: 13
 51705                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 51706                           
 51707                           ; BSR set to: 13
 51708  013596  5134               	movf	52,w,b	;volatile
 51709  013598  0B0F               	andlw	15
 51710  01359A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 51711  01359C  5001               	movf	??_USBStdGetStatusHandler,w,c
 51712  01359E  0D02               	mullw	2
 51713  0135A0  0E09               	movlw	low _pBDTEntryIn
 51714  0135A2  24F3               	addwf	prodl,w,c
 51715  0135A4  6ED9               	movwf	fsr2l,c
 51716  0135A6  0E01               	movlw	high _pBDTEntryIn
 51717  0135A8                     L73:
 51718  0135A8  20F4               	addwfc	prodh,w,c
 51719  0135AA  6EDA               	movwf	fsr2h,c
 51720  0135AC  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 51721  0135B0  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 51722                           
 51723                           ; BSR set to: 13
 51724                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 51725                           
 51726                           ; BSR set to: 13
 51727  0135B4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 51728  0135B8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 51729  0135BC  AEDF               	btfss	indf2,7,c
 51730  0135BE  D014               	goto	i2l297
 51731                           
 51732                           ; BSR set to: 13
 51733  0135C0  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 51734  0135C4  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 51735  0135C8  A4DF               	btfss	indf2,2,c
 51736  0135CA  D00E               	goto	i2l297
 51737                           
 51738                           ; BSR set to: 13
 51739                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 51740  0135CC  0E01               	movlw	1
 51741  0135CE  6F38               	movwf	56,b	;volatile
 51742                           
 51743                           ; BSR set to: 13
 51744                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 51745                           
 51746                           ; BSR set to: 13
 51747                           ;usb_device.c: 2176: break;
 51748  0135D0  D00B               	goto	i2l297
 51749  0135D2                     i2l293:
 51750                           
 51751                           ; BSR set to: 13
 51752                           
 51753                           ; BSR set to: 13
 51754  0135D2  5130               	movf	48,w,b	;volatile
 51755  0135D4  0B1F               	andlw	31
 51756                           
 51757                           ; Switch size 1, requested type "space"
 51758                           ; Number of cases is 3, Range of values is 0 to 2
 51759                           ; switch strategies available:
 51760                           ; Name         Instructions Cycles
 51761                           ; simple_byte           10     6 (average)
 51762                           ;	Chosen strategy is simple_byte
 51763  0135D6  0A00               	xorlw	0	; case 0
 51764  0135D8  B4D8               	btfsc	status,2,c
 51765  0135DA  D7C6               	goto	i2l294
 51766  0135DC  0A01               	xorlw	1	; case 1
 51767  0135DE  B4D8               	btfsc	status,2,c
 51768  0135E0  D7CB               	goto	i2l298
 51769  0135E2  0A03               	xorlw	3	; case 2
 51770  0135E4  B4D8               	btfsc	status,2,c
 51771  0135E6  D7CA               	goto	i2l299
 51772  0135E8                     i2l297:
 51773                           
 51774                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 51775  0135E8  AE56               	btfss	_inPipes+3,7,c	;volatile
 51776  0135EA  0012               	return	
 51777                           
 51778                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 51779  0135EC  0E38               	movlw	56
 51780  0135EE  6E53               	movwf	_inPipes,c	;volatile
 51781  0135F0  0E0D               	movlw	13
 51782  0135F2  6E54               	movwf	_inPipes+1,c	;volatile
 51783                           
 51784                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51785  0135F4  8056               	bsf	_inPipes+3,0,c	;volatile
 51786                           
 51787                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 51788  0135F6  0E02               	movlw	2
 51789  0135F8  6E57               	movwf	_inPipes+4,c	;volatile
 51790  0135FA  0012               	return	
 51791  0135FC                     __end_of_USBStdGetStatusHandler:
 51792                           	opt stack 0
 51793                           tosu	equ	0xFFF
 51794                           tosh	equ	0xFFE
 51795                           tosl	equ	0xFFD
 51796                           pclatu	equ	0xFFB
 51797                           pclath	equ	0xFFA
 51798                           tblptru	equ	0xFF8
 51799                           tblptrh	equ	0xFF7
 51800                           tblptrl	equ	0xFF6
 51801                           tablat	equ	0xFF5
 51802                           prodh	equ	0xFF4
 51803                           prodl	equ	0xFF3
 51804                           intcon	equ	0xFF2
 51805                           indf0	equ	0xFEF
 51806                           postinc0	equ	0xFEE
 51807                           fsr0h	equ	0xFEA
 51808                           fsr0l	equ	0xFE9
 51809                           wreg	equ	0xFE8
 51810                           indf1	equ	0xFE7
 51811                           postinc1	equ	0xFE6
 51812                           postdec1	equ	0xFE5
 51813                           plusw1	equ	0xFE3
 51814                           fsr1h	equ	0xFE2
 51815                           fsr1l	equ	0xFE1
 51816                           indf2	equ	0xFDF
 51817                           postinc2	equ	0xFDE
 51818                           postdec2	equ	0xFDD
 51819                           plusw2	equ	0xFDB
 51820                           fsr2h	equ	0xFDA
 51821                           fsr2l	equ	0xFD9
 51822                           status	equ	0xFD8
 51823                           
 51824 ;; *************** function _USBStdGetDscHandler *****************
 51825 ;; Defined at:
 51826 ;;		line 2045 in file "usb_device.c"
 51827 ;; Parameters:    Size  Location     Type
 51828 ;;		None
 51829 ;; Auto vars:     Size  Location     Type
 51830 ;;		None
 51831 ;; Return value:  Size  Location     Type
 51832 ;;                  1    wreg      void 
 51833 ;; Registers used:
 51834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 51835 ;; Tracked objects:
 51836 ;;		On entry : 0/0
 51837 ;;		On exit  : 0/0
 51838 ;;		Unchanged: 0/0
 51839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51844 ;;Total ram usage:        2 bytes
 51845 ;; Hardware stack levels used:    1
 51846 ;; This function calls:
 51847 ;;		Nothing
 51848 ;; This function is called by:
 51849 ;;		_USBCheckStdRequest
 51850 ;; This function uses a non-reentrant model
 51851 ;;
 51852                           
 51853                           	psect	text219
 51854  010818                     __ptext219:
 51855                           	opt stack 0
 51856  010818                     _USBStdGetDscHandler:
 51857                           	opt stack 13
 51858                           
 51859                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 51860                           
 51861                           ;incstack = 0
 51862  010818  0E80               	movlw	128
 51863  01081A  010D               	movlb	13	; () banked
 51864  01081C  1930               	xorwf	48,w,b	;volatile
 51865  01081E  A4D8               	btfss	status,2,c
 51866  010820  0012               	return	
 51867                           
 51868                           ; BSR set to: 13
 51869                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 51870  010822  0EC0               	movlw	192
 51871  010824  6E56               	movwf	_inPipes+3,c	;volatile
 51872                           
 51873                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 51874  010826  D082               	goto	i2l280
 51875  010828                     
 51876                           ; BSR set to: 13
 51877                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 51878                           
 51879                           ; BSR set to: 13
 51880  010828  0E5B               	movlw	low _device_dsc
 51881  01082A  6E53               	movwf	_inPipes,c	;volatile
 51882  01082C  0EA2               	movlw	high _device_dsc
 51883  01082E  6E54               	movwf	_inPipes+1,c	;volatile
 51884                           
 51885                           ; BSR set to: 13
 51886                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 51887  010830  0E00               	movlw	0
 51888  010832  6E58               	movwf	_inPipes+5,c	;volatile
 51889  010834  0E12               	movlw	18
 51890  010836  6E57               	movwf	_inPipes+4,c	;volatile
 51891                           
 51892                           ;usb_device.c: 2060: break;
 51893  010838  0012               	return	
 51894  01083A                     
 51895                           ; BSR set to: 13
 51896                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 51897                           
 51898                           ; BSR set to: 13
 51899  01083A  5132               	movf	50,w,b	;volatile
 51900  01083C  A4D8               	btfss	status,2,c
 51901  01083E  D042               	goto	i2l284
 51902                           
 51903                           ; BSR set to: 13
 51904                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 51905  010840  5132               	movf	50,w,b	;volatile
 51906  010842  0D02               	mullw	2
 51907  010844  0EEC               	movlw	low _USB_CD_Ptr
 51908  010846  24F3               	addwf	prodl,w,c
 51909  010848  6EF6               	movwf	tblptrl,c
 51910  01084A  0E9D               	movlw	high _USB_CD_Ptr
 51911  01084C  20F4               	addwfc	prodh,w,c
 51912  01084E  6EF7               	movwf	tblptrh,c
 51913  010850                     	if	1	;There are 3 active tblptr bytes
 51914  010850  6AF8               	clrf	tblptru,c
 51915  010852  0E00               	movlw	low (__mediumconst shr (0+16))
 51916  010854  22F8               	addwfc	tblptru,f,c
 51917  010856                     	endif
 51918  010856  0009               	tblrd		*+
 51919  010858  CFF5 F053          	movff	tablat,_inPipes	;volatile
 51920  01085C  000A               	tblrd		*-
 51921  01085E  CFF5 F054          	movff	tablat,_inPipes+1	;volatile
 51922                           
 51923                           ; BSR set to: 13
 51924                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 51925  010862  0E02               	movlw	2
 51926  010864  2453               	addwf	_inPipes,w,c	;volatile
 51927  010866  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51928  010868  0E00               	movlw	0
 51929  01086A  2054               	addwfc	_inPipes+1,w,c	;volatile
 51930  01086C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 51931  01086E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 51932  010872  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 51933  010876  0E00               	movlw	low (__mediumconst shr (0+16))
 51934  010878  6EF8               	movwf	tblptru,c
 51935  01087A  0E0E               	movlw	(high __ramtop+-1)
 51936  01087C  64F7               	cpfsgt	tblptrh,c
 51937  01087E  D003               	bra	i2u1201_47
 51938  010880  0008               	tblrd		*
 51939  010882  50F5               	movf	tablat,w,c
 51940  010884  D005               	bra	i2u1201_40
 51941  010886                     i2u1201_47:
 51942  010886  CFF6 FFE9          	movff	tblptrl,fsr0l
 51943  01088A  CFF7 FFEA          	movff	tblptrh,fsr0h
 51944  01088E  50EF               	movf	indf0,w,c
 51945  010890                     i2u1201_40:
 51946  010890  6E57               	movwf	_inPipes+4,c	;volatile
 51947                           
 51948                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 51949  010892  0E03               	movlw	3
 51950  010894  2453               	addwf	_inPipes,w,c	;volatile
 51951  010896  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51952  010898  0E00               	movlw	0
 51953  01089A  2054               	addwfc	_inPipes+1,w,c	;volatile
 51954  01089C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 51955  01089E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 51956  0108A2  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 51957  0108A6  0E00               	movlw	low (__mediumconst shr (0+16))
 51958  0108A8  6EF8               	movwf	tblptru,c
 51959  0108AA  0E0E               	movlw	(high __ramtop+-1)
 51960  0108AC  64F7               	cpfsgt	tblptrh,c
 51961  0108AE  D003               	bra	i2u1202_47
 51962  0108B0  0008               	tblrd		*
 51963  0108B2  50F5               	movf	tablat,w,c
 51964  0108B4  D005               	bra	i2u1202_40
 51965  0108B6                     i2u1202_47:
 51966  0108B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 51967  0108BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 51968  0108BE  50EF               	movf	indf0,w,c
 51969  0108C0                     i2u1202_40:
 51970  0108C0  6E58               	movwf	_inPipes+5,c	;volatile
 51971                           
 51972                           ;usb_device.c: 2078: }
 51973  0108C2  0012               	return	
 51974  0108C4                     i2l284:
 51975                           
 51976                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 51977  0108C4  0E00               	movlw	0
 51978  0108C6  6E56               	movwf	_inPipes+3,c	;volatile
 51979                           
 51980                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 51981  0108C8  0012               	return	
 51982  0108CA                     
 51983                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 51984  0108CA  0E04               	movlw	4
 51985  0108CC  010D               	movlb	13	; () banked
 51986  0108CE  6132               	cpfslt	50,b	;volatile
 51987  0108D0  D027               	goto	i2l287
 51988                           
 51989                           ; BSR set to: 13
 51990                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 51991  0108D2  5132               	movf	50,w,b	;volatile
 51992  0108D4  0D02               	mullw	2
 51993  0108D6  0EE4               	movlw	low _USB_SD_Ptr
 51994  0108D8  24F3               	addwf	prodl,w,c
 51995  0108DA  6EF6               	movwf	tblptrl,c
 51996  0108DC  0E9D               	movlw	high _USB_SD_Ptr
 51997  0108DE  20F4               	addwfc	prodh,w,c
 51998  0108E0  6EF7               	movwf	tblptrh,c
 51999  0108E2                     	if	1	;There are 3 active tblptr bytes
 52000  0108E2  6AF8               	clrf	tblptru,c
 52001  0108E4  0E00               	movlw	low (__mediumconst shr (0+16))
 52002  0108E6  22F8               	addwfc	tblptru,f,c
 52003  0108E8                     	endif
 52004  0108E8  0009               	tblrd		*+
 52005  0108EA  CFF5 F053          	movff	tablat,_inPipes	;volatile
 52006  0108EE  000A               	tblrd		*-
 52007  0108F0  CFF5 F054          	movff	tablat,_inPipes+1	;volatile
 52008                           
 52009                           ; BSR set to: 13
 52010                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 52011  0108F4  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 52012  0108F8  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52013  0108FC  0E00               	movlw	low (__mediumconst shr (0+16))
 52014  0108FE  6EF8               	movwf	tblptru,c
 52015  010900  0E0E               	movlw	(high __ramtop+-1)
 52016  010902  64F7               	cpfsgt	tblptrh,c
 52017  010904  D003               	bra	i2u1204_47
 52018  010906  0008               	tblrd		*
 52019  010908  50F5               	movf	tablat,w,c
 52020  01090A  D005               	bra	i2u1204_40
 52021  01090C                     i2u1204_47:
 52022  01090C  CFF6 FFE9          	movff	tblptrl,fsr0l
 52023  010910  CFF7 FFEA          	movff	tblptrh,fsr0h
 52024  010914  50EF               	movf	indf0,w,c
 52025  010916                     i2u1204_40:
 52026  010916  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52027  010918  5001               	movf	??_USBStdGetDscHandler,w,c
 52028  01091A  6E57               	movwf	_inPipes+4,c	;volatile
 52029  01091C  6A58               	clrf	_inPipes+5,c	;volatile
 52030                           
 52031                           ;usb_device.c: 2094: }
 52032  01091E  0012               	return	
 52033  010920                     i2l287:
 52034                           
 52035                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 52036  010920  0E00               	movlw	0
 52037  010922  6E56               	movwf	_inPipes+3,c	;volatile
 52038                           
 52039                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 52040  010924  0012               	return	
 52041  010926                     
 52042                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 52043  010926  0E00               	movlw	0
 52044  010928  6E56               	movwf	_inPipes+3,c	;volatile
 52045                           
 52046                           ;usb_device.c: 2112: }
 52047                           
 52048                           ;usb_device.c: 2111: break;
 52049  01092A  0012               	return	
 52050  01092C                     i2l280:
 52051  01092C  010D               	movlb	13	; () banked
 52052  01092E  5133               	movf	51,w,b	;volatile
 52053                           
 52054                           ; Switch size 1, requested type "space"
 52055                           ; Number of cases is 3, Range of values is 1 to 3
 52056                           ; switch strategies available:
 52057                           ; Name         Instructions Cycles
 52058                           ; simple_byte           10     6 (average)
 52059                           ;	Chosen strategy is simple_byte
 52060  010930  0A01               	xorlw	1	; case 1
 52061  010932  B4D8               	btfsc	status,2,c
 52062  010934  D779               	goto	i2l281
 52063  010936  0A03               	xorlw	3	; case 2
 52064  010938  B4D8               	btfsc	status,2,c
 52065  01093A  D77F               	goto	i2l283
 52066  01093C  0A01               	xorlw	1	; case 3
 52067  01093E  B4D8               	btfsc	status,2,c
 52068  010940  D7C4               	goto	i2l286
 52069  010942  D7F1               	goto	i2l289
 52070  010944                     __end_of_USBStdGetDscHandler:
 52071                           	opt stack 0
 52072                           tosu	equ	0xFFF
 52073                           tosh	equ	0xFFE
 52074                           tosl	equ	0xFFD
 52075                           pclatu	equ	0xFFB
 52076                           pclath	equ	0xFFA
 52077                           tblptru	equ	0xFF8
 52078                           tblptrh	equ	0xFF7
 52079                           tblptrl	equ	0xFF6
 52080                           tablat	equ	0xFF5
 52081                           prodh	equ	0xFF4
 52082                           prodl	equ	0xFF3
 52083                           intcon	equ	0xFF2
 52084                           indf0	equ	0xFEF
 52085                           postinc0	equ	0xFEE
 52086                           fsr0h	equ	0xFEA
 52087                           fsr0l	equ	0xFE9
 52088                           wreg	equ	0xFE8
 52089                           indf1	equ	0xFE7
 52090                           postinc1	equ	0xFE6
 52091                           postdec1	equ	0xFE5
 52092                           plusw1	equ	0xFE3
 52093                           fsr1h	equ	0xFE2
 52094                           fsr1l	equ	0xFE1
 52095                           indf2	equ	0xFDF
 52096                           postinc2	equ	0xFDE
 52097                           postdec2	equ	0xFDD
 52098                           plusw2	equ	0xFDB
 52099                           fsr2h	equ	0xFDA
 52100                           fsr2l	equ	0xFD9
 52101                           status	equ	0xFD8
 52102                           
 52103 ;; *************** function _USBStdFeatureReqHandler *****************
 52104 ;; Defined at:
 52105 ;;		line 2756 in file "usb_device.c"
 52106 ;; Parameters:    Size  Location     Type
 52107 ;;		None
 52108 ;; Auto vars:     Size  Location     Type
 52109 ;;  p               2   27[COMRAM] PTR struct __BDT
 52110 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52111 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 52112 ;;		 -> UEP0(1), 
 52113 ;;  current_ep_d    1   26[COMRAM] struct .
 52114 ;; Return value:  Size  Location     Type
 52115 ;;                  1    wreg      void 
 52116 ;; Registers used:
 52117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52118 ;; Tracked objects:
 52119 ;;		On entry : 0/0
 52120 ;;		On exit  : 0/0
 52121 ;;		Unchanged: 0/0
 52122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52124 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52127 ;;Total ram usage:        6 bytes
 52128 ;; Hardware stack levels used:    1
 52129 ;; Hardware stack levels required when called:    4
 52130 ;; This function calls:
 52131 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52132 ;; This function is called by:
 52133 ;;		_USBCheckStdRequest
 52134 ;; This function uses a non-reentrant model
 52135 ;;
 52136                           
 52137                           	psect	text220
 52138  00D7F6                     __ptext220:
 52139                           	opt stack 0
 52140  00D7F6                     _USBStdFeatureReqHandler:
 52141                           	opt stack 9
 52142                           
 52143                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 52144                           
 52145                           ;incstack = 0
 52146  00D7F6  010D               	movlb	13	; () banked
 52147  00D7F8  0532               	decf	50,w,b	;volatile
 52148  00D7FA  A4D8               	btfss	status,2,c
 52149  00D7FC  D00F               	goto	i2l373
 52150                           
 52151                           ; BSR set to: 13
 52152  00D7FE  5130               	movf	48,w,b	;volatile
 52153  00D800  0B1F               	andlw	31
 52154  00D802  0900               	iorlw	0
 52155  00D804  A4D8               	btfss	status,2,c
 52156  00D806  D00A               	goto	i2l373
 52157                           
 52158                           ; BSR set to: 13
 52159                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 52160  00D808  8E56               	bsf	_inPipes+3,7,c	;volatile
 52161                           
 52162                           ; BSR set to: 13
 52163                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 52164  00D80A  0E03               	movlw	3
 52165  00D80C  1931               	xorwf	49,w,b	;volatile
 52166  00D80E  A4D8               	btfss	status,2,c
 52167  00D810  D002               	goto	i2l372
 52168                           
 52169                           ; BSR set to: 13
 52170                           ;usb_device.c: 2806: RemoteWakeup = 1;
 52171  00D812  0E01               	movlw	1
 52172  00D814  D001               	goto	L74
 52173  00D816                     i2l372:
 52174                           
 52175                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 52176                           
 52177                           ; BSR set to: 1
 52178  00D816  0E00               	movlw	0
 52179  00D818                     L74:
 52180  00D818  0101               	movlb	1	; () banked
 52181  00D81A  6F63               	movwf	_RemoteWakeup& (0+255),b	;volatile
 52182  00D81C                     i2l373:
 52183                           
 52184                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 52185                           
 52186                           ; BSR set to: 1
 52187  00D81C  010D               	movlb	13	; () banked
 52188  00D81E  5132               	movf	50,w,b	;volatile
 52189  00D820  A4D8               	btfss	status,2,c
 52190  00D822  0012               	return	
 52191                           
 52192                           ; BSR set to: 13
 52193  00D824  5130               	movf	48,w,b	;volatile
 52194  00D826  0B1F               	andlw	31
 52195  00D828  0A02               	xorlw	2
 52196  00D82A  A4D8               	btfss	status,2,c
 52197  00D82C  0012               	return	
 52198                           
 52199                           ; BSR set to: 13
 52200  00D82E  5134               	movf	52,w,b	;volatile
 52201  00D830  0B0F               	andlw	15
 52202  00D832  0900               	iorlw	0
 52203  00D834  B4D8               	btfsc	status,2,c
 52204  00D836  0012               	return	
 52205                           
 52206                           ; BSR set to: 13
 52207  00D838  5134               	movf	52,w,b	;volatile
 52208  00D83A  0B0F               	andlw	15
 52209  00D83C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52210  00D83E  0E03               	movlw	3
 52211  00D840  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 52212  00D842  0012               	return	
 52213                           
 52214                           ; BSR set to: 13
 52215  00D844  0E20               	movlw	32
 52216  00D846  185D               	xorwf	_USBDeviceState,w,c	;volatile
 52217  00D848  A4D8               	btfss	status,2,c
 52218  00D84A  0012               	return	
 52219                           
 52220                           ; BSR set to: 13
 52221                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 52222  00D84C  8E56               	bsf	_inPipes+3,7,c	;volatile
 52223                           
 52224                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 52225  00D84E  BF34               	btfsc	52,7,b	;volatile
 52226  00D850  D019               	goto	i2l375
 52227                           
 52228                           ; BSR set to: 13
 52229                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 52230  00D852  5134               	movf	52,w,b	;volatile
 52231  00D854  0B0F               	andlw	15
 52232  00D856  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52233  00D858  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52234  00D85A  0D02               	mullw	2
 52235  00D85C  0E0F               	movlw	low _pBDTEntryOut
 52236  00D85E  24F3               	addwf	prodl,w,c
 52237  00D860  6ED9               	movwf	fsr2l,c
 52238  00D862  0E01               	movlw	high _pBDTEntryOut
 52239  00D864  20F4               	addwfc	prodh,w,c
 52240  00D866  6EDA               	movwf	fsr2h,c
 52241  00D868  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52242  00D86C  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52243                           
 52244                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 52245  00D870  5134               	movf	52,w,b	;volatile
 52246  00D872  0B0F               	andlw	15
 52247  00D874  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52248  00D876  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52249  00D878  0D01               	mullw	1
 52250  00D87A  0E2F               	movlw	low _ep_data_out
 52251  00D87C  24F3               	addwf	prodl,w,c
 52252  00D87E  6ED9               	movwf	fsr2l,c
 52253  00D880  0E01               	movlw	high _ep_data_out
 52254  00D882  D018               	goto	L75
 52255  00D884                     i2l375:
 52256                           
 52257                           ; BSR set to: 13
 52258                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 52259                           
 52260                           ; BSR set to: 13
 52261  00D884  5134               	movf	52,w,b	;volatile
 52262  00D886  0B0F               	andlw	15
 52263  00D888  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52264  00D88A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52265  00D88C  0D02               	mullw	2
 52266  00D88E  0E09               	movlw	low _pBDTEntryIn
 52267  00D890  24F3               	addwf	prodl,w,c
 52268  00D892  6ED9               	movwf	fsr2l,c
 52269  00D894  0E01               	movlw	high _pBDTEntryIn
 52270  00D896  20F4               	addwfc	prodh,w,c
 52271  00D898  6EDA               	movwf	fsr2h,c
 52272  00D89A  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52273  00D89E  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52274                           
 52275                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 52276  00D8A2  5134               	movf	52,w,b	;volatile
 52277  00D8A4  0B0F               	andlw	15
 52278  00D8A6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52279  00D8A8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52280  00D8AA  0D01               	mullw	1
 52281  00D8AC  0E32               	movlw	low _ep_data_in
 52282  00D8AE  24F3               	addwf	prodl,w,c
 52283  00D8B0  6ED9               	movwf	fsr2l,c
 52284  00D8B2  0E01               	movlw	high _ep_data_in
 52285  00D8B4                     L75:
 52286  00D8B4  20F4               	addwfc	prodh,w,c
 52287  00D8B6  6EDA               	movwf	fsr2h,c
 52288  00D8B8  50DF               	movf	indf2,w,c
 52289  00D8BA  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 52290                           
 52291                           ; BSR set to: 13
 52292                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 52293                           
 52294                           ; BSR set to: 13
 52295  00D8BC  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 52296  00D8BE  D006               	goto	i2l377
 52297                           
 52298                           ; BSR set to: 13
 52299                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 52300  00D8C0  0EFB               	movlw	251
 52301  00D8C2  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 52302  00D8C4  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52303  00D8C6  0EFF               	movlw	255
 52304  00D8C8  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 52305  00D8CA  D004               	goto	L76
 52306  00D8CC                     i2l377:
 52307                           
 52308                           ; BSR set to: 13
 52309                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 52310                           
 52311                           ; BSR set to: 13
 52312  00D8CC  0E04               	movlw	4
 52313  00D8CE  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 52314  00D8D0  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52315  00D8D2  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52316  00D8D4                     L76:
 52317  00D8D4  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52318                           
 52319                           ; BSR set to: 13
 52320                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 52321                           
 52322                           ; BSR set to: 13
 52323  00D8D6  BF34               	btfsc	52,7,b	;volatile
 52324  00D8D8  D00A               	goto	i2l379
 52325                           
 52326                           ; BSR set to: 13
 52327                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 52328  00D8DA  5134               	movf	52,w,b	;volatile
 52329  00D8DC  0B0F               	andlw	15
 52330  00D8DE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52331  00D8E0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52332  00D8E2  0D02               	mullw	2
 52333  00D8E4  0E0F               	movlw	low _pBDTEntryOut
 52334  00D8E6  24F3               	addwf	prodl,w,c
 52335  00D8E8  6ED9               	movwf	fsr2l,c
 52336  00D8EA  0E01               	movlw	high _pBDTEntryOut
 52337  00D8EC  D009               	goto	L77
 52338  00D8EE                     i2l379:
 52339                           
 52340                           ; BSR set to: 13
 52341                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 52342                           
 52343                           ; BSR set to: 13
 52344  00D8EE  5134               	movf	52,w,b	;volatile
 52345  00D8F0  0B0F               	andlw	15
 52346  00D8F2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52347  00D8F4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52348  00D8F6  0D02               	mullw	2
 52349  00D8F8  0E09               	movlw	low _pBDTEntryIn
 52350  00D8FA  24F3               	addwf	prodl,w,c
 52351  00D8FC  6ED9               	movwf	fsr2l,c
 52352  00D8FE  0E01               	movlw	high _pBDTEntryIn
 52353  00D900                     L77:
 52354  00D900  20F4               	addwfc	prodh,w,c
 52355  00D902  6EDA               	movwf	fsr2h,c
 52356  00D904  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 52357  00D908  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 52358                           
 52359                           ; BSR set to: 13
 52360                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 52361                           
 52362                           ; BSR set to: 13
 52363  00D90C  0E03               	movlw	3
 52364  00D90E  1931               	xorwf	49,w,b	;volatile
 52365  00D910  A4D8               	btfss	status,2,c
 52366  00D912  D02D               	goto	i2l381
 52367                           
 52368                           ; BSR set to: 13
 52369                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 52370  00D914  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52371  00D918  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52372  00D91C  AEDF               	btfss	indf2,7,c
 52373  00D91E  D01A               	goto	i2l384
 52374                           
 52375                           ; BSR set to: 13
 52376                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 52377  00D920  BF34               	btfsc	52,7,b	;volatile
 52378  00D922  D00A               	goto	i2l383
 52379                           
 52380                           ; BSR set to: 13
 52381                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 52382  00D924  5134               	movf	52,w,b	;volatile
 52383  00D926  0B0F               	andlw	15
 52384  00D928  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52385  00D92A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52386  00D92C  0D01               	mullw	1
 52387  00D92E  0E2F               	movlw	low _ep_data_out
 52388  00D930  24F3               	addwf	prodl,w,c
 52389  00D932  6ED9               	movwf	fsr2l,c
 52390  00D934  0E01               	movlw	high _ep_data_out
 52391  00D936  D00A               	goto	L78
 52392  00D938                     i2l383:
 52393                           
 52394                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 52395                           
 52396                           ; BSR set to: 1
 52397  00D938  010D               	movlb	13	; () banked
 52398  00D93A  5134               	movf	52,w,b	;volatile
 52399  00D93C  0B0F               	andlw	15
 52400  00D93E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52401  00D940  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52402  00D942  0D01               	mullw	1
 52403  00D944  0E32               	movlw	low _ep_data_in
 52404  00D946  24F3               	addwf	prodl,w,c
 52405  00D948  6ED9               	movwf	fsr2l,c
 52406  00D94A  0E01               	movlw	high _ep_data_in
 52407  00D94C                     L78:
 52408  00D94C  20F4               	addwfc	prodh,w,c
 52409  00D94E  6EDA               	movwf	fsr2h,c
 52410  00D950  0101               	movlb	1	; () banked
 52411  00D952  82DF               	bsf	indf2,1,c
 52412  00D954                     i2l384:
 52413                           
 52414                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 52415                           
 52416                           ; BSR set to: 1
 52417                           
 52418                           ; BSR set to: 1
 52419  00D954  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52420  00D958  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52421  00D95C  0E00               	movlw	0
 52422  00D95E  84DB               	bsf	plusw2,2,c
 52423                           
 52424                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 52425  00D960  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52426  00D964  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52427  00D968  0E00               	movlw	0
 52428  00D96A  8EDB               	bsf	plusw2,7,c
 52429                           
 52430                           ;usb_device.c: 2878: }
 52431  00D96C  0012               	return	
 52432  00D96E                     i2l381:
 52433                           
 52434                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 52435  00D96E  0E04               	movlw	4
 52436  00D970  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52437  00D972  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52438  00D974  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52439  00D976  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52440                           
 52441                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 52442  00D978  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52443  00D97C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52444  00D980  AEDF               	btfss	indf2,7,c
 52445  00D982  D01B               	goto	i2l386
 52446                           
 52447                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 52448  00D984  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52449  00D988  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52450  00D98C  0E7F               	movlw	127
 52451  00D98E  16DF               	andwf	indf2,f,c
 52452                           
 52453                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 52454  00D990  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52455  00D994  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52456  00D998  0E00               	movlw	0
 52457  00D99A  8CDB               	bsf	plusw2,6,c
 52458                           
 52459                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52460  00D99C  0E00               	movlw	0
 52461  00D99E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52462  00D9A0  0E05               	movlw	5
 52463  00D9A2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52464  00D9A4  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52465  00D9A8  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52466  00D9AC  0E00               	movlw	0
 52467  00D9AE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52468  00D9B0  0E02               	movlw	2
 52469  00D9B2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52470  00D9B4  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52471                           
 52472                           ;usb_device.c: 2893: }
 52473  00D9B8  D006               	goto	i2l387
 52474  00D9BA                     i2l386:
 52475                           
 52476                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 52477  00D9BA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52478  00D9BE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52479  00D9C2  0E00               	movlw	0
 52480  00D9C4  8CDB               	bsf	plusw2,6,c
 52481  00D9C6                     i2l387:
 52482                           
 52483                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 52484  00D9C6  0E04               	movlw	4
 52485  00D9C8  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52486  00D9CA  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52487  00D9CC  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52488  00D9CE  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52489                           
 52490                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 52491  00D9D0  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 52492  00D9D2  D006               	goto	i2u1226_40
 52493  00D9D4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52494  00D9D8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52495  00D9DC  AEDF               	btfss	indf2,7,c
 52496  00D9DE  D030               	goto	i2l388
 52497  00D9E0                     i2u1226_40:
 52498                           
 52499                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 52500  00D9E0  010D               	movlb	13	; () banked
 52501  00D9E2  BF34               	btfsc	52,7,b	;volatile
 52502  00D9E4  D00A               	goto	i2l391
 52503                           
 52504                           ; BSR set to: 13
 52505                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 52506  00D9E6  5134               	movf	52,w,b	;volatile
 52507  00D9E8  0B0F               	andlw	15
 52508  00D9EA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52509  00D9EC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52510  00D9EE  0D01               	mullw	1
 52511  00D9F0  0E2F               	movlw	low _ep_data_out
 52512  00D9F2  24F3               	addwf	prodl,w,c
 52513  00D9F4  6ED9               	movwf	fsr2l,c
 52514  00D9F6  0E01               	movlw	high _ep_data_out
 52515  00D9F8  D00A               	goto	L79
 52516  00D9FA                     i2l391:
 52517                           
 52518                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 52519                           
 52520                           ; BSR set to: 1
 52521  00D9FA  010D               	movlb	13	; () banked
 52522  00D9FC  5134               	movf	52,w,b	;volatile
 52523  00D9FE  0B0F               	andlw	15
 52524  00DA00  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52525  00DA02  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52526  00DA04  0D01               	mullw	1
 52527  00DA06  0E32               	movlw	low _ep_data_in
 52528  00DA08  24F3               	addwf	prodl,w,c
 52529  00DA0A  6ED9               	movwf	fsr2l,c
 52530  00DA0C  0E01               	movlw	high _ep_data_in
 52531  00DA0E                     L79:
 52532  00DA0E  20F4               	addwfc	prodh,w,c
 52533  00DA10  6EDA               	movwf	fsr2h,c
 52534  00DA12  0101               	movlb	1	; () banked
 52535  00DA14  92DF               	bcf	indf2,1,c
 52536                           
 52537                           ; BSR set to: 1
 52538                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 52539                           
 52540                           ; BSR set to: 1
 52541  00DA16  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52542  00DA1A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52543  00DA1E  0E3B               	movlw	59
 52544  00DA20  16DF               	andwf	indf2,f,c
 52545                           
 52546                           ; BSR set to: 1
 52547                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52548  00DA22  0E00               	movlw	0
 52549  00DA24  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52550  00DA26  0E05               	movlw	5
 52551  00DA28  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52552  00DA2A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52553  00DA2E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52554  00DA32  0E00               	movlw	0
 52555  00DA34  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52556  00DA36  0E02               	movlw	2
 52557  00DA38  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52558  00DA3A  ECC2  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52559                           
 52560                           ;usb_device.c: 2923: }
 52561  00DA3E  D006               	goto	i2l393
 52562  00DA40                     i2l388:
 52563                           
 52564                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 52565  00DA40  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52566  00DA44  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52567  00DA48  0E3B               	movlw	59
 52568  00DA4A  16DF               	andwf	indf2,f,c
 52569  00DA4C                     i2l393:
 52570                           
 52571                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 52572  00DA4C  010D               	movlb	13	; () banked
 52573  00DA4E  5134               	movf	52,w,b	;volatile
 52574  00DA50  0B0F               	andlw	15
 52575  00DA52  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52576  00DA54  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52577  00DA56  0D01               	mullw	1
 52578  00DA58  0E26               	movlw	38
 52579  00DA5A  24F3               	addwf	prodl,w,c
 52580  00DA5C  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 52581  00DA5E  0E0F               	movlw	15
 52582  00DA60  20F4               	addwfc	prodh,w,c
 52583  00DA62  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 52584                           
 52585                           ; BSR set to: 13
 52586                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 52587  00DA64  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 52588  00DA68  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 52589  00DA6C  0EFE               	movlw	254
 52590  00DA6E  16DF               	andwf	indf2,f,c
 52591                           
 52592                           ; BSR set to: 13
 52593  00DA70  0012               	return	
 52594  00DA72                     __end_of_USBStdFeatureReqHandler:
 52595                           	opt stack 0
 52596                           tosu	equ	0xFFF
 52597                           tosh	equ	0xFFE
 52598                           tosl	equ	0xFFD
 52599                           pclatu	equ	0xFFB
 52600                           pclath	equ	0xFFA
 52601                           tblptru	equ	0xFF8
 52602                           tblptrh	equ	0xFF7
 52603                           tblptrl	equ	0xFF6
 52604                           tablat	equ	0xFF5
 52605                           prodh	equ	0xFF4
 52606                           prodl	equ	0xFF3
 52607                           intcon	equ	0xFF2
 52608                           indf0	equ	0xFEF
 52609                           postinc0	equ	0xFEE
 52610                           fsr0h	equ	0xFEA
 52611                           fsr0l	equ	0xFE9
 52612                           wreg	equ	0xFE8
 52613                           indf1	equ	0xFE7
 52614                           postinc1	equ	0xFE6
 52615                           postdec1	equ	0xFE5
 52616                           plusw1	equ	0xFE3
 52617                           fsr1h	equ	0xFE2
 52618                           fsr1l	equ	0xFE1
 52619                           indf2	equ	0xFDF
 52620                           postinc2	equ	0xFDE
 52621                           postdec2	equ	0xFDD
 52622                           plusw2	equ	0xFDB
 52623                           fsr2h	equ	0xFDA
 52624                           fsr2l	equ	0xFD9
 52625                           status	equ	0xFD8
 52626                           
 52627 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 52628 ;; Defined at:
 52629 ;;		line 54 in file "usb_events.c"
 52630 ;; Parameters:    Size  Location     Type
 52631 ;;  event           2   15[COMRAM] enum E6832
 52632 ;;  pdata           2   17[COMRAM] PTR void 
 52633 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52634 ;;		 -> BDT(48), 
 52635 ;;  size            2   19[COMRAM] unsigned int 
 52636 ;; Auto vars:     Size  Location     Type
 52637 ;;		None
 52638 ;; Return value:  Size  Location     Type
 52639 ;;                  1    wreg      unsigned char 
 52640 ;; Registers used:
 52641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52642 ;; Tracked objects:
 52643 ;;		On entry : 0/0
 52644 ;;		On exit  : 0/0
 52645 ;;		Unchanged: 0/0
 52646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52647 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52650 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52651 ;;Total ram usage:        8 bytes
 52652 ;; Hardware stack levels used:    1
 52653 ;; Hardware stack levels required when called:    3
 52654 ;; This function calls:
 52655 ;;		_APP_DeviceCustomHIDInitialize
 52656 ;;		_APP_DeviceMSDInitialize
 52657 ;;		_MSDTransferTerminated
 52658 ;;		_USBCheckHIDRequest
 52659 ;;		_USBCheckMSDRequest
 52660 ;;		i2_SYSTEM_Initialize
 52661 ;; This function is called by:
 52662 ;;		_USBDeviceTasks
 52663 ;;		_USBStdSetCfgHandler
 52664 ;;		_USBSuspend
 52665 ;;		_USBWakeFromSuspend
 52666 ;;		_USBCtrlTrfSetupHandler
 52667 ;;		_USBCheckStdRequest
 52668 ;;		_USBStdFeatureReqHandler
 52669 ;; This function uses a non-reentrant model
 52670 ;;
 52671                           
 52672                           	psect	text221
 52673  013D84                     __ptext221:
 52674                           	opt stack 0
 52675  013D84                     _USER_USB_CALLBACK_EVENT_HANDLER:
 52676                           	opt stack 13
 52677                           
 52678                           ;usb_events.c: 56: switch((int)event)
 52679                           
 52680                           ;incstack = 0
 52681  013D84  D019               	goto	i2l816
 52682  013D86                     
 52683                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 52684  013D86  0E01               	movlw	1
 52685  013D88  EC96  F0A7         	call	i2_SYSTEM_Initialize
 52686                           
 52687                           ;usb_events.c: 79: break;
 52688  013D8C  0012               	return	
 52689  013D8E                     
 52690                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 52691  013D8E  0E02               	movlw	2
 52692  013D90  EC96  F0A7         	call	i2_SYSTEM_Initialize
 52693                           
 52694                           ;usb_events.c: 90: break;
 52695  013D94  0012               	return	
 52696  013D96                     
 52697                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 52698  013D96  ECD2  F0AB         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 52699                           
 52700                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 52701  013D9A  ECB7  F0AE         	call	_APP_DeviceMSDInitialize	;wreg free
 52702                           
 52703                           ;usb_events.c: 100: break;
 52704                           
 52705                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 52706                           
 52707                           ;usb_events.c: 97: break;
 52708  013D9E  0012               	return	
 52709  013DA0                     
 52710                           ;usb_events.c: 105: USBCheckHIDRequest();
 52711  013DA0  ECB8  F093         	call	_USBCheckHIDRequest	;wreg free
 52712                           
 52713                           ;usb_events.c: 108: USBCheckMSDRequest();
 52714  013DA4  ECE6  F096         	call	_USBCheckMSDRequest	;wreg free
 52715                           
 52716                           ;usb_events.c: 112: break;
 52717                           
 52718                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 52719                           
 52720                           ;usb_events.c: 109: break;
 52721  013DA8  0012               	return	
 52722  013DAA                     
 52723                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 52724  013DAA  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 52725  013DAE  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 52726  013DB2  ECED  F0A6         	call	_MSDTransferTerminated	;wreg free
 52727                           
 52728                           ;usb_events.c: 129: }
 52729                           
 52730                           ;usb_events.c: 128: break;
 52731                           
 52732                           ;usb_events.c: 127: default:
 52733                           
 52734                           ;usb_events.c: 125: break;
 52735  013DB6  0012               	return	
 52736  013DB8                     i2l816:
 52737  013DB8  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 52738  013DBC  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 52739                           
 52740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 52741                           ; Switch size 1, requested type "space"
 52742                           ; Number of cases is 2, Range of values is 0 to 127
 52743                           ; switch strategies available:
 52744                           ; Name         Instructions Cycles
 52745                           ; simple_byte            7     4 (average)
 52746                           ;	Chosen strategy is simple_byte
 52747  013DC0  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 52748  013DC2  0A00               	xorlw	0	; case 0
 52749  013DC4  B4D8               	btfsc	status,2,c
 52750  013DC6  D004               	goto	i2l20036
 52751  013DC8  0A7F               	xorlw	127	; case 127
 52752  013DCA  A4D8               	btfss	status,2,c
 52753  013DCC  0012               	return	
 52754  013DCE  D01A               	goto	i2l20038
 52755  013DD0                     i2l20036:
 52756                           
 52757                           ; Switch size 1, requested type "space"
 52758                           ; Number of cases is 8, Range of values is 1 to 117
 52759                           ; switch strategies available:
 52760                           ; Name         Instructions Cycles
 52761                           ; simple_byte           25    13 (average)
 52762                           ;	Chosen strategy is simple_byte
 52763  013DD0  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 52764  013DD2  0A01               	xorlw	1	; case 1
 52765  013DD4  B4D8               	btfsc	status,2,c
 52766  013DD6  D7DF               	goto	i2l822
 52767  013DD8  0A03               	xorlw	3	; case 2
 52768  013DDA  B4D8               	btfsc	status,2,c
 52769  013DDC  0012               	return	
 52770  013DDE  0A01               	xorlw	1	; case 3
 52771  013DE0  B4D8               	btfsc	status,2,c
 52772  013DE2  D7DE               	goto	i2l824
 52773  013DE4  0A06               	xorlw	6	; case 5
 52774  013DE6  B4D8               	btfsc	status,2,c
 52775  013DE8  D7E0               	goto	i2l826
 52776  013DEA  0A77               	xorlw	119	; case 114
 52777  013DEC  B4D8               	btfsc	status,2,c
 52778  013DEE  0012               	return	
 52779  013DF0  0A01               	xorlw	1	; case 115
 52780  013DF2  B4D8               	btfsc	status,2,c
 52781  013DF4  0012               	return	
 52782  013DF6  0A07               	xorlw	7	; case 116
 52783  013DF8  B4D8               	btfsc	status,2,c
 52784  013DFA  D7C9               	goto	i2l821
 52785  013DFC  0A01               	xorlw	1	; case 117
 52786  013DFE  A4D8               	btfss	status,2,c
 52787  013E00  0012               	return	
 52788  013E02  D7C1               	goto	i2l820
 52789  013E04                     i2l20038:
 52790                           
 52791                           ; Switch size 1, requested type "space"
 52792                           ; Number of cases is 1, Range of values is 255 to 255
 52793                           ; switch strategies available:
 52794                           ; Name         Instructions Cycles
 52795                           ; simple_byte            4     3 (average)
 52796                           ;	Chosen strategy is simple_byte
 52797  013E04  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 52798  013E06  0AFF               	xorlw	255	; case 255
 52799  013E08  0012               	return	
 52800  013E0A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 52801                           	opt stack 0
 52802                           tosu	equ	0xFFF
 52803                           tosh	equ	0xFFE
 52804                           tosl	equ	0xFFD
 52805                           pclatu	equ	0xFFB
 52806                           pclath	equ	0xFFA
 52807                           tblptru	equ	0xFF8
 52808                           tblptrh	equ	0xFF7
 52809                           tblptrl	equ	0xFF6
 52810                           tablat	equ	0xFF5
 52811                           prodh	equ	0xFF4
 52812                           prodl	equ	0xFF3
 52813                           intcon	equ	0xFF2
 52814                           indf0	equ	0xFEF
 52815                           postinc0	equ	0xFEE
 52816                           fsr0h	equ	0xFEA
 52817                           fsr0l	equ	0xFE9
 52818                           wreg	equ	0xFE8
 52819                           indf1	equ	0xFE7
 52820                           postinc1	equ	0xFE6
 52821                           postdec1	equ	0xFE5
 52822                           plusw1	equ	0xFE3
 52823                           fsr1h	equ	0xFE2
 52824                           fsr1l	equ	0xFE1
 52825                           indf2	equ	0xFDF
 52826                           postinc2	equ	0xFDE
 52827                           postdec2	equ	0xFDD
 52828                           plusw2	equ	0xFDB
 52829                           fsr2h	equ	0xFDA
 52830                           fsr2l	equ	0xFD9
 52831                           status	equ	0xFD8
 52832                           
 52833 ;; *************** function i2_SYSTEM_Initialize *****************
 52834 ;; Defined at:
 52835 ;;		line 39 in file "system.c"
 52836 ;; Parameters:    Size  Location     Type
 52837 ;;  state           1    wreg     enum E6623
 52838 ;; Auto vars:     Size  Location     Type
 52839 ;;  state           1    4[COMRAM] enum E6623
 52840 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 52841 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 52842 ;; Return value:  Size  Location     Type
 52843 ;;                  1    wreg      void 
 52844 ;; Registers used:
 52845 ;;		wreg, status,2, status,0
 52846 ;; Tracked objects:
 52847 ;;		On entry : 0/0
 52848 ;;		On exit  : 0/0
 52849 ;;		Unchanged: 0/0
 52850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52852 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52854 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52855 ;;Total ram usage:        5 bytes
 52856 ;; Hardware stack levels used:    1
 52857 ;; This function calls:
 52858 ;;		Nothing
 52859 ;; This function is called by:
 52860 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52861 ;; This function uses a non-reentrant model
 52862 ;;
 52863                           
 52864                           	psect	text222
 52865  014F2C                     __ptext222:
 52866                           	opt stack 0
 52867  014F2C                     i2_SYSTEM_Initialize:
 52868                           	opt stack 15
 52869                           
 52870                           ;incstack = 0
 52871                           ;i2SYSTEM_Initialize@state stored from wreg
 52872  014F2C  6E05               	movwf	i2SYSTEM_Initialize@state,c
 52873                           
 52874                           ;system.c: 41: switch(state)
 52875  014F2E  D01D               	goto	i2l897
 52876  014F30                     
 52877                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 52878  014F30  0E02               	movlw	2
 52879  014F32  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 52880  014F34  0E58               	movlw	88
 52881  014F36  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 52882                           
 52883                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 52884  014F38  8C9B               	bsf	3995,6,c	;volatile
 52885  014F3A                     i2l12924:
 52886  014F3A  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 52887  014F3C  A0D8               	btfss	status,0,c
 52888  014F3E  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 52889  014F40  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 52890  014F42  E1FB               	bnz	i2l12924
 52891  014F44  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 52892  014F46  B4D8               	btfsc	status,2,c
 52893  014F48  0012               	return	
 52894  014F4A  D7F7               	goto	i2l900
 52895  014F4C                     
 52896                           ;system.c: 78: OSCCON = 0x70;
 52897  014F4C  0E70               	movlw	112
 52898  014F4E  6ED3               	movwf	4051,c	;volatile
 52899                           
 52900                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 52901  014F50  0E03               	movlw	3
 52902  014F52  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3140+1,c
 52903  014F54  0E20               	movlw	32
 52904  014F56  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3140,c
 52905  014F58                     i2l12928:
 52906  014F58  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3140,f,c
 52907  014F5A  A0D8               	btfss	status,0,c
 52908  014F5C  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3140+1,f,c
 52909  014F5E  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3140,w,c
 52910  014F60  E1FB               	bnz	i2l12928
 52911  014F62  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3140+1,w,c
 52912  014F64  B4D8               	btfsc	status,2,c
 52913  014F66  0012               	return	
 52914  014F68  D7F7               	goto	i2l906
 52915  014F6A                     i2l897:
 52916  014F6A  5005               	movf	i2SYSTEM_Initialize@state,w,c
 52917                           
 52918                           ; Switch size 1, requested type "space"
 52919                           ; Number of cases is 3, Range of values is 0 to 2
 52920                           ; switch strategies available:
 52921                           ; Name         Instructions Cycles
 52922                           ; simple_byte           10     6 (average)
 52923                           ;	Chosen strategy is simple_byte
 52924  014F6C  0A00               	xorlw	0	; case 0
 52925  014F6E  B4D8               	btfsc	status,2,c
 52926  014F70  D7DF               	goto	i2l898
 52927  014F72  0A01               	xorlw	1	; case 1
 52928  014F74  B4D8               	btfsc	status,2,c
 52929  014F76  0012               	return	
 52930  014F78  0A03               	xorlw	3	; case 2
 52931  014F7A  A4D8               	btfss	status,2,c
 52932  014F7C  0012               	return	
 52933  014F7E  D7E6               	goto	i2l904
 52934  014F80                     __end_ofi2_SYSTEM_Initialize:
 52935                           	opt stack 0
 52936                           tosu	equ	0xFFF
 52937                           tosh	equ	0xFFE
 52938                           tosl	equ	0xFFD
 52939                           pclatu	equ	0xFFB
 52940                           pclath	equ	0xFFA
 52941                           tblptru	equ	0xFF8
 52942                           tblptrh	equ	0xFF7
 52943                           tblptrl	equ	0xFF6
 52944                           tablat	equ	0xFF5
 52945                           prodh	equ	0xFF4
 52946                           prodl	equ	0xFF3
 52947                           intcon	equ	0xFF2
 52948                           indf0	equ	0xFEF
 52949                           postinc0	equ	0xFEE
 52950                           fsr0h	equ	0xFEA
 52951                           fsr0l	equ	0xFE9
 52952                           wreg	equ	0xFE8
 52953                           indf1	equ	0xFE7
 52954                           postinc1	equ	0xFE6
 52955                           postdec1	equ	0xFE5
 52956                           plusw1	equ	0xFE3
 52957                           fsr1h	equ	0xFE2
 52958                           fsr1l	equ	0xFE1
 52959                           indf2	equ	0xFDF
 52960                           postinc2	equ	0xFDE
 52961                           postdec2	equ	0xFDD
 52962                           plusw2	equ	0xFDB
 52963                           fsr2h	equ	0xFDA
 52964                           fsr2l	equ	0xFD9
 52965                           status	equ	0xFD8
 52966                           
 52967 ;; *************** function _USBCheckMSDRequest *****************
 52968 ;; Defined at:
 52969 ;;		line 218 in file "usb_device_msd.c"
 52970 ;; Parameters:    Size  Location     Type
 52971 ;;		None
 52972 ;; Auto vars:     Size  Location     Type
 52973 ;;		None
 52974 ;; Return value:  Size  Location     Type
 52975 ;;                  1    wreg      void 
 52976 ;; Registers used:
 52977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52978 ;; Tracked objects:
 52979 ;;		On entry : 0/0
 52980 ;;		On exit  : 0/0
 52981 ;;		Unchanged: 0/0
 52982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52984 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52987 ;;Total ram usage:        4 bytes
 52988 ;; Hardware stack levels used:    1
 52989 ;; Hardware stack levels required when called:    1
 52990 ;; This function calls:
 52991 ;;		i2_USBTransferOnePacket
 52992 ;; This function is called by:
 52993 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52994 ;; This function uses a non-reentrant model
 52995 ;;
 52996                           
 52997                           	psect	text223
 52998  012DCC                     __ptext223:
 52999                           	opt stack 0
 53000  012DCC                     _USBCheckMSDRequest:
 53001                           	opt stack 14
 53002                           
 53003                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 53004                           
 53005                           ;incstack = 0
 53006  012DCC  010D               	movlb	13	; () banked
 53007  012DCE  5130               	movf	48,w,b	;volatile
 53008  012DD0  0B1F               	andlw	31
 53009  012DD2  06E8               	decf	wreg,f,c
 53010  012DD4  A4D8               	btfss	status,2,c
 53011  012DD6  0012               	return	
 53012                           
 53013                           ; BSR set to: 13
 53014                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 53015                           
 53016                           ; BSR set to: 13
 53017                           
 53018                           ; BSR set to: 13
 53019                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 53020  012DD8  5134               	movf	52,w,b	;volatile
 53021  012DDA  A4D8               	btfss	status,2,c
 53022  012DDC  0012               	return	
 53023  012DDE  D04C               	goto	i2l545
 53024  012DE0                     
 53025                           ; BSR set to: 13
 53026                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 53027                           
 53028                           ; BSR set to: 13
 53029  012DE0  5132               	movf	50,w,b	;volatile
 53030  012DE2  1133               	iorwf	51,w,b	;volatile
 53031  012DE4  A4D8               	btfss	status,2,c
 53032  012DE6  0012               	return	
 53033                           
 53034                           ; BSR set to: 13
 53035  012DE8  5136               	movf	54,w,b	;volatile
 53036  012DEA  1137               	iorwf	55,w,b	;volatile
 53037  012DEC  A4D8               	btfss	status,2,c
 53038  012DEE  0012               	return	
 53039                           
 53040                           ; BSR set to: 13
 53041                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 53042                           
 53043                           ; BSR set to: 13
 53044                           
 53045                           ; BSR set to: 13
 53046                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 53047  012DF0  0E00               	movlw	0
 53048  012DF2  0101               	movlb	1	; () banked
 53049  012DF4  6F58               	movwf	_MSD_State& (0+255),b
 53050                           
 53051                           ; BSR set to: 1
 53052                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 53053  012DF6  6957               	setf	_MSDCommandState& (0+255),b
 53054                           
 53055                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 53056  012DF8  0E00               	movlw	0
 53057  012DFA  6F56               	movwf	_MSDReadState& (0+255),b
 53058                           
 53059                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 53060  012DFC  0E00               	movlw	0
 53061  012DFE  6F55               	movwf	_MSDWriteState& (0+255),b
 53062                           
 53063                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 53064  012E00  0E01               	movlw	1
 53065  012E02  6F50               	movwf	_MSDCBWValid& (0+255),b
 53066                           
 53067                           ; BSR set to: 1
 53068                           
 53069                           ; BSR set to: 1
 53070                           
 53071                           ; BSR set to: 1
 53072                           
 53073                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 53074  012E04  C113  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 53075  012E08  C114  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 53076                           
 53077                           ; BSR set to: 1
 53078  012E0C  500C               	movf	_USBCheckMSDRequest$2534,w,c
 53079  012E0E  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 53080  012E10  B4D8               	btfsc	status,2,c
 53081  012E12  D00A               	goto	i2u1055_40
 53082                           
 53083                           ; BSR set to: 1
 53084                           
 53085                           ; BSR set to: 1
 53086                           
 53087                           ; BSR set to: 1
 53088                           
 53089                           ; BSR set to: 1
 53090  012E14  C113  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 53091  012E18  C114  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 53092                           
 53093                           ; BSR set to: 1
 53094                           
 53095                           ; BSR set to: 1
 53096  012E1C  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 53097  012E20  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 53098  012E24  BEDF               	btfsc	indf2,7,c
 53099  012E26  D00F               	goto	i2l550
 53100  012E28                     i2u1055_40:
 53101                           
 53102                           ; BSR set to: 1
 53103                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 53104                           
 53105                           ; BSR set to: 1
 53106  012E28  0E00               	movlw	0
 53107  012E2A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53108  012E2C  0E40               	movlw	64
 53109  012E2E  6E02               	movwf	i2USBTransferOnePacket@data,c
 53110  012E30  0E0D               	movlw	13
 53111  012E32  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53112  012E34  0E40               	movlw	64
 53113  012E36  6E04               	movwf	i2USBTransferOnePacket@len,c
 53114  012E38  0E02               	movlw	2
 53115  012E3A  EC8D  F08A         	call	i2_USBTransferOnePacket
 53116  012E3E  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53117  012E42  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53118  012E46                     i2l550:
 53119                           
 53120                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 53121  012E46  0E80               	movlw	128
 53122  012E48  6E56               	movwf	_inPipes+3,c	;volatile
 53123                           
 53124                           ;usb_device_msd.c: 263: break;
 53125  012E4A  0012               	return	
 53126  012E4C                     
 53127                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 53128  012E4C  010D               	movlb	13	; () banked
 53129  012E4E  5132               	movf	50,w,b	;volatile
 53130  012E50  1133               	iorwf	51,w,b	;volatile
 53131  012E52  A4D8               	btfss	status,2,c
 53132  012E54  0012               	return	
 53133                           
 53134                           ; BSR set to: 13
 53135  012E56  0536               	decf	54,w,b	;volatile
 53136  012E58  1137               	iorwf	55,w,b	;volatile
 53137  012E5A  A4D8               	btfss	status,2,c
 53138  012E5C  0012               	return	
 53139                           
 53140                           ; BSR set to: 13
 53141                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 53142                           
 53143                           ; BSR set to: 13
 53144                           
 53145                           ; BSR set to: 13
 53146                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 53147  012E5E  0E00               	movlw	0
 53148  012E60  6F38               	movwf	56,b	;volatile
 53149                           
 53150                           ; BSR set to: 13
 53151                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53152  012E62  0E38               	movlw	56
 53153  012E64  6E53               	movwf	_inPipes,c	;volatile
 53154  012E66  0E0D               	movlw	13
 53155  012E68  6E54               	movwf	_inPipes+1,c	;volatile
 53156                           
 53157                           ; BSR set to: 13
 53158  012E6A  0E00               	movlw	0
 53159  012E6C  6E58               	movwf	_inPipes+5,c	;volatile
 53160  012E6E  0E01               	movlw	1
 53161  012E70  6E57               	movwf	_inPipes+4,c	;volatile
 53162                           
 53163                           ; BSR set to: 13
 53164  012E72  0EC1               	movlw	193
 53165  012E74  6E56               	movwf	_inPipes+3,c	;volatile
 53166                           
 53167                           ; BSR set to: 13
 53168                           ;usb_device_msd.c: 278: }
 53169                           
 53170                           ;usb_device_msd.c: 277: break;
 53171  012E76  0012               	return	
 53172  012E78                     i2l545:
 53173                           
 53174                           ; BSR set to: 13
 53175                           
 53176                           ; BSR set to: 13
 53177  012E78  5131               	movf	49,w,b	;volatile
 53178                           
 53179                           ; Switch size 1, requested type "space"
 53180                           ; Number of cases is 2, Range of values is 254 to 255
 53181                           ; switch strategies available:
 53182                           ; Name         Instructions Cycles
 53183                           ; simple_byte            7     4 (average)
 53184                           ;	Chosen strategy is simple_byte
 53185  012E7A  0AFE               	xorlw	254	; case 254
 53186  012E7C  B4D8               	btfsc	status,2,c
 53187  012E7E  D7E6               	goto	i2l562
 53188  012E80  0A01               	xorlw	1	; case 255
 53189  012E82  A4D8               	btfss	status,2,c
 53190  012E84  0012               	return	
 53191  012E86  D7AC               	goto	i2l546
 53192  012E88                     __end_of_USBCheckMSDRequest:
 53193                           	opt stack 0
 53194                           tosu	equ	0xFFF
 53195                           tosh	equ	0xFFE
 53196                           tosl	equ	0xFFD
 53197                           pclatu	equ	0xFFB
 53198                           pclath	equ	0xFFA
 53199                           tblptru	equ	0xFF8
 53200                           tblptrh	equ	0xFF7
 53201                           tblptrl	equ	0xFF6
 53202                           tablat	equ	0xFF5
 53203                           prodh	equ	0xFF4
 53204                           prodl	equ	0xFF3
 53205                           intcon	equ	0xFF2
 53206                           indf0	equ	0xFEF
 53207                           postinc0	equ	0xFEE
 53208                           fsr0h	equ	0xFEA
 53209                           fsr0l	equ	0xFE9
 53210                           wreg	equ	0xFE8
 53211                           indf1	equ	0xFE7
 53212                           postinc1	equ	0xFE6
 53213                           postdec1	equ	0xFE5
 53214                           plusw1	equ	0xFE3
 53215                           fsr1h	equ	0xFE2
 53216                           fsr1l	equ	0xFE1
 53217                           indf2	equ	0xFDF
 53218                           postinc2	equ	0xFDE
 53219                           postdec2	equ	0xFDD
 53220                           plusw2	equ	0xFDB
 53221                           fsr2h	equ	0xFDA
 53222                           fsr2l	equ	0xFD9
 53223                           status	equ	0xFD8
 53224                           
 53225 ;; *************** function _USBCheckHIDRequest *****************
 53226 ;; Defined at:
 53227 ;;		line 153 in file "usb_device_hid.c"
 53228 ;; Parameters:    Size  Location     Type
 53229 ;;		None
 53230 ;; Auto vars:     Size  Location     Type
 53231 ;;		None
 53232 ;; Return value:  Size  Location     Type
 53233 ;;                  1    wreg      void 
 53234 ;; Registers used:
 53235 ;;		wreg, status,2, status,0
 53236 ;; Tracked objects:
 53237 ;;		On entry : 0/0
 53238 ;;		On exit  : 0/0
 53239 ;;		Unchanged: 0/0
 53240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53245 ;;Total ram usage:        0 bytes
 53246 ;; Hardware stack levels used:    1
 53247 ;; This function calls:
 53248 ;;		Nothing
 53249 ;; This function is called by:
 53250 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53251 ;; This function uses a non-reentrant model
 53252 ;;
 53253                           
 53254                           	psect	text224
 53255  012770                     __ptext224:
 53256                           	opt stack 0
 53257  012770                     _USBCheckHIDRequest:
 53258                           	opt stack 15
 53259                           
 53260                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 53261                           
 53262                           ;incstack = 0
 53263  012770  010D               	movlb	13	; () banked
 53264  012772  5130               	movf	48,w,b	;volatile
 53265  012774  0B1F               	andlw	31
 53266  012776  06E8               	decf	wreg,f,c
 53267  012778  A4D8               	btfss	status,2,c
 53268  01277A  0012               	return	
 53269                           
 53270                           ; BSR set to: 13
 53271                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 53272                           
 53273                           ; BSR set to: 13
 53274                           
 53275                           ; BSR set to: 13
 53276  01277C  5134               	movf	52,w,b	;volatile
 53277  01277E  A4D8               	btfss	status,2,c
 53278  012780  0012               	return	
 53279                           
 53280                           ; BSR set to: 13
 53281                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 53282                           
 53283                           ; BSR set to: 13
 53284                           
 53285                           ; BSR set to: 13
 53286  012782  0E06               	movlw	6
 53287  012784  1931               	xorwf	49,w,b	;volatile
 53288  012786  B4D8               	btfsc	status,2,c
 53289  012788  D019               	goto	i2l425
 53290  01278A  D021               	goto	i2l428
 53291  01278C                     
 53292                           ; BSR set to: 13
 53293                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 53294                           
 53295                           ; BSR set to: 13
 53296  01278C  0101               	movlb	1	; () banked
 53297  01278E  05C3               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 53298  012790  A4D8               	btfss	status,2,c
 53299  012792  D01D               	goto	i2l428
 53300                           
 53301                           ; BSR set to: 1
 53302                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 53303  012794  0ED0               	movlw	low (_configDescriptor1+18)
 53304  012796  6E53               	movwf	_inPipes,c	;volatile
 53305  012798  0EA0               	movlw	high (_configDescriptor1+18)
 53306  01279A  6E54               	movwf	_inPipes+1,c	;volatile
 53307                           
 53308                           ; BSR set to: 1
 53309  01279C  0E00               	movlw	0
 53310  01279E  6E58               	movwf	_inPipes+5,c	;volatile
 53311  0127A0  0E09               	movlw	9
 53312  0127A2  D00A               	goto	L80
 53313  0127A4                     i2l12560:
 53314                           
 53315                           ; BSR set to: 1
 53316  0127A4  0EC0               	movlw	192
 53317  0127A6  6E56               	movwf	_inPipes+3,c	;volatile
 53318                           
 53319                           ; BSR set to: 1
 53320                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 53321  0127A8  D012               	goto	i2l428
 53322  0127AA                     
 53323                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 53324                           
 53325                           ; BSR set to: 1
 53326  0127AA  0E84               	movlw	low _hid_rpt01
 53327  0127AC  6E53               	movwf	_inPipes,c	;volatile
 53328  0127AE  0EA1               	movlw	high _hid_rpt01
 53329  0127B0  6E54               	movwf	_inPipes+1,c	;volatile
 53330  0127B2  0E00               	movlw	0
 53331  0127B4  6E58               	movwf	_inPipes+5,c	;volatile
 53332  0127B6  0E1D               	movlw	29
 53333  0127B8                     L80:
 53334  0127B8  6E57               	movwf	_inPipes+4,c	;volatile
 53335  0127BA  D7F4               	goto	i2l12560
 53336  0127BC                     i2l425:
 53337  0127BC  010D               	movlb	13	; () banked
 53338  0127BE  5133               	movf	51,w,b	;volatile
 53339                           
 53340                           ; Switch size 1, requested type "space"
 53341                           ; Number of cases is 3, Range of values is 33 to 35
 53342                           ; switch strategies available:
 53343                           ; Name         Instructions Cycles
 53344                           ; simple_byte           10     6 (average)
 53345                           ;	Chosen strategy is simple_byte
 53346  0127C0  0A21               	xorlw	33	; case 33
 53347  0127C2  B4D8               	btfsc	status,2,c
 53348  0127C4  D7E3               	goto	i2l426
 53349  0127C6  0A03               	xorlw	3	; case 34
 53350  0127C8  B4D8               	btfsc	status,2,c
 53351  0127CA  D7EF               	goto	i2l429
 53352  0127CC  0A01               	xorlw	1	; case 35
 53353  0127CE                     i2l428:
 53354                           
 53355                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 53356                           
 53357                           ; BSR set to: 13
 53358                           
 53359                           ; BSR set to: 13
 53360  0127CE  010D               	movlb	13	; () banked
 53361  0127D0  3930               	swapf	48,w,b	;volatile
 53362  0127D2  32E8               	rrcf	wreg,f,c
 53363  0127D4  0B03               	andlw	3
 53364  0127D6  06E8               	decf	wreg,f,c
 53365  0127D8  A4D8               	btfss	status,2,c
 53366  0127DA  0012               	return	
 53367  0127DC  D020               	goto	i2l432
 53368  0127DE                     
 53369                           ; BSR set to: 13
 53370                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53371                           
 53372                           ; BSR set to: 13
 53373  0127DE  0EC2               	movlw	low _idle_rate
 53374  0127E0  6E53               	movwf	_inPipes,c	;volatile
 53375  0127E2  0E01               	movlw	high _idle_rate
 53376  0127E4  6E54               	movwf	_inPipes+1,c	;volatile
 53377                           
 53378                           ; BSR set to: 13
 53379  0127E6  0E00               	movlw	0
 53380  0127E8  6E58               	movwf	_inPipes+5,c	;volatile
 53381  0127EA  0E01               	movlw	1
 53382  0127EC  6E57               	movwf	_inPipes+4,c	;volatile
 53383                           
 53384                           ; BSR set to: 13
 53385  0127EE  0EC1               	movlw	193
 53386  0127F0  6E56               	movwf	_inPipes+3,c	;volatile
 53387                           
 53388                           ;usb_device_hid.c: 223: break;
 53389  0127F2  0012               	return	
 53390  0127F4                     
 53391                           ; BSR set to: 13
 53392                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 53393                           
 53394                           ; BSR set to: 13
 53395  0127F4  0E80               	movlw	128
 53396  0127F6  6E56               	movwf	_inPipes+3,c	;volatile
 53397                           
 53398                           ; BSR set to: 13
 53399                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 53400  0127F8  CD33 F1C2          	movff	3379,_idle_rate	;volatile
 53401                           
 53402                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 53403  0127FC  0012               	return	
 53404  0127FE                     
 53405                           ; BSR set to: 13
 53406                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 53407                           
 53408                           ; BSR set to: 13
 53409  0127FE  0EC1               	movlw	low _active_protocol
 53410  012800  6E53               	movwf	_inPipes,c	;volatile
 53411  012802  0E01               	movlw	high _active_protocol
 53412  012804  6E54               	movwf	_inPipes+1,c	;volatile
 53413                           
 53414                           ; BSR set to: 13
 53415  012806  0E00               	movlw	0
 53416  012808  6E58               	movwf	_inPipes+5,c	;volatile
 53417  01280A  0E01               	movlw	1
 53418  01280C  6E57               	movwf	_inPipes+4,c	;volatile
 53419                           
 53420                           ; BSR set to: 13
 53421  01280E  0E81               	movlw	129
 53422  012810  6E56               	movwf	_inPipes+3,c	;volatile
 53423                           
 53424                           ;usb_device_hid.c: 234: break;
 53425  012812  0012               	return	
 53426  012814                     
 53427                           ; BSR set to: 13
 53428                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 53429                           
 53430                           ; BSR set to: 13
 53431  012814  0E80               	movlw	128
 53432  012816  6E56               	movwf	_inPipes+3,c	;volatile
 53433                           
 53434                           ; BSR set to: 13
 53435                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 53436  012818  CD32 F1C1          	movff	3378,_active_protocol	;volatile
 53437                           
 53438                           ; BSR set to: 13
 53439                           ;usb_device_hid.c: 239: }
 53440                           
 53441                           ;usb_device_hid.c: 238: break;
 53442  01281C  0012               	return	
 53443  01281E                     i2l432:
 53444                           
 53445                           ; BSR set to: 13
 53446                           
 53447                           ; BSR set to: 13
 53448  01281E  5131               	movf	49,w,b	;volatile
 53449                           
 53450                           ; Switch size 1, requested type "space"
 53451                           ; Number of cases is 6, Range of values is 1 to 11
 53452                           ; switch strategies available:
 53453                           ; Name         Instructions Cycles
 53454                           ; simple_byte           19    10 (average)
 53455                           ;	Chosen strategy is simple_byte
 53456  012820  0A01               	xorlw	1	; case 1
 53457  012822  B4D8               	btfsc	status,2,c
 53458  012824  0012               	return	
 53459  012826  0A03               	xorlw	3	; case 2
 53460  012828  B4D8               	btfsc	status,2,c
 53461  01282A  D7D9               	goto	i2l436
 53462  01282C  0A01               	xorlw	1	; case 3
 53463  01282E  B4D8               	btfsc	status,2,c
 53464  012830  D7E6               	goto	i2l438
 53465  012832  0A0A               	xorlw	10	; case 9
 53466  012834  B4D8               	btfsc	status,2,c
 53467  012836  0012               	return	
 53468  012838  0A03               	xorlw	3	; case 10
 53469  01283A  B4D8               	btfsc	status,2,c
 53470  01283C  D7DB               	goto	i2l437
 53471  01283E  0A01               	xorlw	1	; case 11
 53472  012840  A4D8               	btfss	status,2,c
 53473  012842  0012               	return	
 53474  012844  D7E7               	goto	i2l439
 53475  012846                     __end_of_USBCheckHIDRequest:
 53476                           	opt stack 0
 53477                           tosu	equ	0xFFF
 53478                           tosh	equ	0xFFE
 53479                           tosl	equ	0xFFD
 53480                           pclatu	equ	0xFFB
 53481                           pclath	equ	0xFFA
 53482                           tblptru	equ	0xFF8
 53483                           tblptrh	equ	0xFF7
 53484                           tblptrl	equ	0xFF6
 53485                           tablat	equ	0xFF5
 53486                           prodh	equ	0xFF4
 53487                           prodl	equ	0xFF3
 53488                           intcon	equ	0xFF2
 53489                           indf0	equ	0xFEF
 53490                           postinc0	equ	0xFEE
 53491                           fsr0h	equ	0xFEA
 53492                           fsr0l	equ	0xFE9
 53493                           wreg	equ	0xFE8
 53494                           indf1	equ	0xFE7
 53495                           postinc1	equ	0xFE6
 53496                           postdec1	equ	0xFE5
 53497                           plusw1	equ	0xFE3
 53498                           fsr1h	equ	0xFE2
 53499                           fsr1l	equ	0xFE1
 53500                           indf2	equ	0xFDF
 53501                           postinc2	equ	0xFDE
 53502                           postdec2	equ	0xFDD
 53503                           plusw2	equ	0xFDB
 53504                           fsr2h	equ	0xFDA
 53505                           fsr2l	equ	0xFD9
 53506                           status	equ	0xFD8
 53507                           
 53508 ;; *************** function _MSDTransferTerminated *****************
 53509 ;; Defined at:
 53510 ;;		line 1674 in file "usb_device_msd.c"
 53511 ;; Parameters:    Size  Location     Type
 53512 ;;  handle          2   11[COMRAM] PTR void 
 53513 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 53514 ;;		 -> BDT(48), 
 53515 ;; Auto vars:     Size  Location     Type
 53516 ;;		None
 53517 ;; Return value:  Size  Location     Type
 53518 ;;                  1    wreg      void 
 53519 ;; Registers used:
 53520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53521 ;; Tracked objects:
 53522 ;;		On entry : 0/0
 53523 ;;		On exit  : 0/0
 53524 ;;		Unchanged: 0/0
 53525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53530 ;;Total ram usage:        4 bytes
 53531 ;; Hardware stack levels used:    1
 53532 ;; Hardware stack levels required when called:    1
 53533 ;; This function calls:
 53534 ;;		i2_USBStallEndpoint
 53535 ;;		i2_USBTransferOnePacket
 53536 ;; This function is called by:
 53537 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53538 ;; This function uses a non-reentrant model
 53539 ;;
 53540                           
 53541                           	psect	text225
 53542  014DDA                     __ptext225:
 53543                           	opt stack 0
 53544  014DDA                     _MSDTransferTerminated:
 53545                           	opt stack 14
 53546                           
 53547                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 53548                           
 53549                           ; BSR set to: 13
 53550                           ;incstack = 0
 53551  014DDA  0101               	movlb	1	; () banked
 53552  014DDC  5150               	movf	_MSDCBWValid& (0+255),w,b
 53553  014DDE  A4D8               	btfss	status,2,c
 53554  014DE0  D00B               	goto	i2l780
 53555                           
 53556                           ; BSR set to: 1
 53557                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 53558  014DE2  0E01               	movlw	1
 53559  014DE4  6E01               	movwf	i2USBStallEndpoint@dir,c
 53560  014DE6  0E02               	movlw	2
 53561  014DE8  EC0A  F08A         	call	i2_USBStallEndpoint
 53562                           
 53563                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 53564  014DEC  0E00               	movlw	0
 53565  014DEE  6E01               	movwf	i2USBStallEndpoint@dir,c
 53566  014DF0  0E02               	movlw	2
 53567  014DF2  EC0A  F08A         	call	i2_USBStallEndpoint
 53568                           
 53569                           ;usb_device_msd.c: 1681: }
 53570  014DF6  0012               	return	
 53571  014DF8                     i2l780:
 53572  014DF8  C113  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 53573  014DFC  C114  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 53574  014E00  500E               	movf	_MSDTransferTerminated$2623,w,c
 53575  014E02  180C               	xorwf	MSDTransferTerminated@handle,w,c
 53576  014E04  E114               	bnz	i2l783
 53577  014E06  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 53578  014E08  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 53579  014E0A  A4D8               	btfss	status,2,c
 53580  014E0C  0012               	return	
 53581                           
 53582                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 53583  014E0E  0E00               	movlw	0
 53584  014E10  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53585  014E12  0E40               	movlw	64
 53586  014E14  6E02               	movwf	i2USBTransferOnePacket@data,c
 53587  014E16  0E0D               	movlw	13
 53588  014E18  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53589  014E1A  0E40               	movlw	64
 53590  014E1C  6E04               	movwf	i2USBTransferOnePacket@len,c
 53591  014E1E  0E02               	movlw	2
 53592  014E20  EC8D  F08A         	call	i2_USBTransferOnePacket
 53593  014E24  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53594  014E28  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53595  014E2C  0012               	return	
 53596  014E2E                     i2l783:
 53597  014E2E  0012               	return		;funcret
 53598  014E30                     __end_of_MSDTransferTerminated:
 53599                           	opt stack 0
 53600                           tosu	equ	0xFFF
 53601                           tosh	equ	0xFFE
 53602                           tosl	equ	0xFFD
 53603                           pclatu	equ	0xFFB
 53604                           pclath	equ	0xFFA
 53605                           tblptru	equ	0xFF8
 53606                           tblptrh	equ	0xFF7
 53607                           tblptrl	equ	0xFF6
 53608                           tablat	equ	0xFF5
 53609                           prodh	equ	0xFF4
 53610                           prodl	equ	0xFF3
 53611                           intcon	equ	0xFF2
 53612                           indf0	equ	0xFEF
 53613                           postinc0	equ	0xFEE
 53614                           fsr0h	equ	0xFEA
 53615                           fsr0l	equ	0xFE9
 53616                           wreg	equ	0xFE8
 53617                           indf1	equ	0xFE7
 53618                           postinc1	equ	0xFE6
 53619                           postdec1	equ	0xFE5
 53620                           plusw1	equ	0xFE3
 53621                           fsr1h	equ	0xFE2
 53622                           fsr1l	equ	0xFE1
 53623                           indf2	equ	0xFDF
 53624                           postinc2	equ	0xFDE
 53625                           postdec2	equ	0xFDD
 53626                           plusw2	equ	0xFDB
 53627                           fsr2h	equ	0xFDA
 53628                           fsr2l	equ	0xFD9
 53629                           status	equ	0xFD8
 53630                           
 53631 ;; *************** function i2_USBStallEndpoint *****************
 53632 ;; Defined at:
 53633 ;;		line 1073 in file "usb_device.c"
 53634 ;; Parameters:    Size  Location     Type
 53635 ;;  ep              1    wreg     unsigned char 
 53636 ;;  dir             1    0[COMRAM] unsigned char 
 53637 ;; Auto vars:     Size  Location     Type
 53638 ;;  ep              1    5[COMRAM] unsigned char 
 53639 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 53640 ;;		 -> BDT(48), 
 53641 ;; Return value:  Size  Location     Type
 53642 ;;                  1    wreg      void 
 53643 ;; Registers used:
 53644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53645 ;; Tracked objects:
 53646 ;;		On entry : 0/0
 53647 ;;		On exit  : 0/0
 53648 ;;		Unchanged: 0/0
 53649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53653 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53654 ;;Total ram usage:        8 bytes
 53655 ;; Hardware stack levels used:    1
 53656 ;; This function calls:
 53657 ;;		Nothing
 53658 ;; This function is called by:
 53659 ;;		_MSDTransferTerminated
 53660 ;; This function uses a non-reentrant model
 53661 ;;
 53662                           
 53663                           	psect	text226
 53664  011414                     __ptext226:
 53665                           	opt stack 0
 53666  011414                     i2_USBStallEndpoint:
 53667                           	opt stack 14
 53668                           
 53669                           ;incstack = 0
 53670                           ;i2USBStallEndpoint@ep stored from wreg
 53671  011414  6E06               	movwf	i2USBStallEndpoint@ep,c
 53672                           
 53673                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 53674  011416  5006               	movf	i2USBStallEndpoint@ep,w,c
 53675  011418  A4D8               	btfss	status,2,c
 53676  01141A  D02B               	goto	i2l192
 53677                           
 53678                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 53679  01141C  EE20 F001          	lfsr	2,1
 53680  011420  5059               	movf	_pBDTEntryEP0OutNext,w,c
 53681  011422  26D9               	addwf	fsr2l,f,c
 53682  011424  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 53683  011426  22DA               	addwfc	fsr2h,f,c
 53684  011428  0E08               	movlw	8
 53685  01142A  6EDF               	movwf	indf2,c
 53686                           
 53687                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53688  01142C  EE20 F002          	lfsr	2,2
 53689  011430  5059               	movf	_pBDTEntryEP0OutNext,w,c
 53690  011432  26D9               	addwf	fsr2l,f,c
 53691  011434  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 53692  011436  22DA               	addwfc	fsr2h,f,c
 53693  011438  0E30               	movlw	48
 53694  01143A  6EDE               	movwf	postinc2,c
 53695  01143C  0E0D               	movlw	13
 53696  01143E  6EDD               	movwf	postdec2,c
 53697                           
 53698                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 53699  011440  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53700  011444  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53701  011448  0E0C               	movlw	12
 53702  01144A  6EDF               	movwf	indf2,c
 53703                           
 53704                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53705  01144C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53706  011450  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53707  011454  0E00               	movlw	0
 53708  011456  8EDB               	bsf	plusw2,7,c
 53709                           
 53710                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 53711  011458  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 53712  01145C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53713  011460  0E04               	movlw	4
 53714  011462  6EDF               	movwf	indf2,c
 53715                           
 53716                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 53717  011464  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 53718  011468  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53719  01146C  0E00               	movlw	0
 53720  01146E  8EDB               	bsf	plusw2,7,c
 53721                           
 53722                           ;usb_device.c: 1089: }
 53723  011470  0012               	return	
 53724  011472                     i2l192:
 53725                           
 53726                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 53727  011472  5001               	movf	i2USBStallEndpoint@dir,w,c
 53728  011474  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 53729  011476  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 53730  011478  90D8               	bcf	status,0,c
 53731  01147A  3602               	rlcf	??i2_USBStallEndpoint,f,c
 53732  01147C  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 53733  01147E  5006               	movf	i2USBStallEndpoint@ep,w,c
 53734  011480  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 53735  011482  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 53736  011484  90D8               	bcf	status,0,c
 53737  011486  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53738  011488  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53739  01148A  90D8               	bcf	status,0,c
 53740  01148C  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53741  01148E  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53742  011490  5002               	movf	??i2_USBStallEndpoint,w,c
 53743  011492  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 53744  011494  5003               	movf	??i2_USBStallEndpoint+1,w,c
 53745  011496  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 53746  011498  90D8               	bcf	status,0,c
 53747  01149A  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53748  01149C  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53749  01149E  90D8               	bcf	status,0,c
 53750  0114A0  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53751  0114A2  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53752  0114A4  0E00               	movlw	0
 53753  0114A6  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 53754  0114A8  6E07               	movwf	i2USBStallEndpoint@p,c
 53755  0114AA  0E0D               	movlw	13
 53756  0114AC  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 53757  0114AE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 53758                           
 53759                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 53760  0114B0  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 53761  0114B4  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 53762  0114B8  0E00               	movlw	0
 53763  0114BA  84DB               	bsf	plusw2,2,c
 53764                           
 53765                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 53766  0114BC  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 53767  0114C0  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 53768  0114C4  0E00               	movlw	0
 53769  0114C6  8EDB               	bsf	plusw2,7,c
 53770                           
 53771                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 53772  0114C8  5006               	movf	i2USBStallEndpoint@ep,w,c
 53773  0114CA  0D04               	mullw	4
 53774  0114CC  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 53775  0114D0  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 53776  0114D4  5001               	movf	i2USBStallEndpoint@dir,w,c
 53777  0114D6  0D02               	mullw	2
 53778  0114D8  50F3               	movf	prodl,w,c
 53779  0114DA  2602               	addwf	??i2_USBStallEndpoint,f,c
 53780  0114DC  50F4               	movf	prodh,w,c
 53781  0114DE  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 53782  0114E0  90D8               	bcf	status,0,c
 53783  0114E2  3602               	rlcf	??i2_USBStallEndpoint,f,c
 53784  0114E4  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 53785  0114E6  90D8               	bcf	status,0,c
 53786  0114E8  3602               	rlcf	??i2_USBStallEndpoint,f,c
 53787  0114EA  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 53788  0114EC  0E04               	movlw	4
 53789  0114EE  2602               	addwf	??i2_USBStallEndpoint,f,c
 53790  0114F0  0E00               	movlw	0
 53791  0114F2  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 53792  0114F4  0E00               	movlw	0
 53793  0114F6  2402               	addwf	??i2_USBStallEndpoint,w,c
 53794  0114F8  6E07               	movwf	i2USBStallEndpoint@p,c
 53795  0114FA  0E0D               	movlw	13
 53796  0114FC  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 53797  0114FE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 53798                           
 53799                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 53800  011500  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 53801  011504  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 53802  011508  0E00               	movlw	0
 53803  01150A  84DB               	bsf	plusw2,2,c
 53804                           
 53805                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 53806  01150C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 53807  011510  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 53808  011514  0E00               	movlw	0
 53809  011516  8EDB               	bsf	plusw2,7,c
 53810  011518  0012               	return	
 53811  01151A                     __end_ofi2_USBStallEndpoint:
 53812                           	opt stack 0
 53813                           tosu	equ	0xFFF
 53814                           tosh	equ	0xFFE
 53815                           tosl	equ	0xFFD
 53816                           pclatu	equ	0xFFB
 53817                           pclath	equ	0xFFA
 53818                           tblptru	equ	0xFF8
 53819                           tblptrh	equ	0xFF7
 53820                           tblptrl	equ	0xFF6
 53821                           tablat	equ	0xFF5
 53822                           prodh	equ	0xFF4
 53823                           prodl	equ	0xFF3
 53824                           intcon	equ	0xFF2
 53825                           indf0	equ	0xFEF
 53826                           postinc0	equ	0xFEE
 53827                           fsr0h	equ	0xFEA
 53828                           fsr0l	equ	0xFE9
 53829                           wreg	equ	0xFE8
 53830                           indf1	equ	0xFE7
 53831                           postinc1	equ	0xFE6
 53832                           postdec1	equ	0xFE5
 53833                           plusw1	equ	0xFE3
 53834                           fsr1h	equ	0xFE2
 53835                           fsr1l	equ	0xFE1
 53836                           indf2	equ	0xFDF
 53837                           postinc2	equ	0xFDE
 53838                           postdec2	equ	0xFDD
 53839                           plusw2	equ	0xFDB
 53840                           fsr2h	equ	0xFDA
 53841                           fsr2l	equ	0xFD9
 53842                           status	equ	0xFD8
 53843                           
 53844 ;; *************** function _APP_DeviceMSDInitialize *****************
 53845 ;; Defined at:
 53846 ;;		line 84 in file "app_device_msd.c"
 53847 ;; Parameters:    Size  Location     Type
 53848 ;;		None
 53849 ;; Auto vars:     Size  Location     Type
 53850 ;;		None
 53851 ;; Return value:  Size  Location     Type
 53852 ;;                  1    wreg      void 
 53853 ;; Registers used:
 53854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53855 ;; Tracked objects:
 53856 ;;		On entry : 0/0
 53857 ;;		On exit  : 0/0
 53858 ;;		Unchanged: 0/0
 53859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53864 ;;Total ram usage:        0 bytes
 53865 ;; Hardware stack levels used:    1
 53866 ;; Hardware stack levels required when called:    2
 53867 ;; This function calls:
 53868 ;;		_USBEnableEndpoint
 53869 ;;		_USBMSDInit
 53870 ;; This function is called by:
 53871 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53872 ;; This function uses a non-reentrant model
 53873 ;;
 53874                           
 53875                           	psect	text227
 53876  015D6E                     __ptext227:
 53877                           	opt stack 0
 53878  015D6E                     _APP_DeviceMSDInitialize:
 53879                           	opt stack 13
 53880                           
 53881                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 53882                           
 53883                           ;incstack = 0
 53884  015D6E  0E1E               	movlw	30
 53885  015D70  6E09               	movwf	USBEnableEndpoint@options,c
 53886  015D72  0E02               	movlw	2
 53887  015D74  ECBD  F0AA         	call	_USBEnableEndpoint
 53888                           
 53889                           ;app_device_msd.c: 93: USBMSDInit();
 53890  015D78  ECF4  F087         	call	_USBMSDInit	;wreg free
 53891  015D7C  0012               	return		;funcret
 53892  015D7E                     __end_of_APP_DeviceMSDInitialize:
 53893                           	opt stack 0
 53894                           tosu	equ	0xFFF
 53895                           tosh	equ	0xFFE
 53896                           tosl	equ	0xFFD
 53897                           pclatu	equ	0xFFB
 53898                           pclath	equ	0xFFA
 53899                           tblptru	equ	0xFF8
 53900                           tblptrh	equ	0xFF7
 53901                           tblptrl	equ	0xFF6
 53902                           tablat	equ	0xFF5
 53903                           prodh	equ	0xFF4
 53904                           prodl	equ	0xFF3
 53905                           intcon	equ	0xFF2
 53906                           indf0	equ	0xFEF
 53907                           postinc0	equ	0xFEE
 53908                           fsr0h	equ	0xFEA
 53909                           fsr0l	equ	0xFE9
 53910                           wreg	equ	0xFE8
 53911                           indf1	equ	0xFE7
 53912                           postinc1	equ	0xFE6
 53913                           postdec1	equ	0xFE5
 53914                           plusw1	equ	0xFE3
 53915                           fsr1h	equ	0xFE2
 53916                           fsr1l	equ	0xFE1
 53917                           indf2	equ	0xFDF
 53918                           postinc2	equ	0xFDE
 53919                           postdec2	equ	0xFDD
 53920                           plusw2	equ	0xFDB
 53921                           fsr2h	equ	0xFDA
 53922                           fsr2l	equ	0xFD9
 53923                           status	equ	0xFD8
 53924                           
 53925 ;; *************** function _USBMSDInit *****************
 53926 ;; Defined at:
 53927 ;;		line 142 in file "usb_device_msd.c"
 53928 ;; Parameters:    Size  Location     Type
 53929 ;;		None
 53930 ;; Auto vars:     Size  Location     Type
 53931 ;;		None
 53932 ;; Return value:  Size  Location     Type
 53933 ;;                  1    wreg      void 
 53934 ;; Registers used:
 53935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53936 ;; Tracked objects:
 53937 ;;		On entry : 0/0
 53938 ;;		On exit  : 0/0
 53939 ;;		Unchanged: 0/0
 53940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53943 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53944 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53945 ;;Total ram usage:        3 bytes
 53946 ;; Hardware stack levels used:    1
 53947 ;; Hardware stack levels required when called:    1
 53948 ;; This function calls:
 53949 ;;		i2_ExternalFlash_MediaDetect
 53950 ;;		i2_ExternalFlash_MediaInitialize
 53951 ;;		i2_ResetSenseData
 53952 ;;		i2_USBTransferOnePacket
 53953 ;; This function is called by:
 53954 ;;		_APP_DeviceMSDInitialize
 53955 ;; This function uses a non-reentrant model
 53956 ;;
 53957                           
 53958                           	psect	text228
 53959  010FE8                     __ptext228:
 53960                           	opt stack 0
 53961  010FE8                     _USBMSDInit:
 53962                           	opt stack 13
 53963                           
 53964                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 53965                           
 53966                           ;incstack = 0
 53967  010FE8  0E00               	movlw	0
 53968  010FEA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53969  010FEC  0E40               	movlw	64
 53970  010FEE  6E02               	movwf	i2USBTransferOnePacket@data,c
 53971  010FF0  0E0D               	movlw	13
 53972  010FF2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53973  010FF4  0E40               	movlw	64
 53974  010FF6  6E04               	movwf	i2USBTransferOnePacket@len,c
 53975  010FF8  0E02               	movlw	2
 53976  010FFA  EC8D  F08A         	call	i2_USBTransferOnePacket
 53977  010FFE  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53978  011002  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53979  011006  C10D  F13F         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 53980  01100A  C10E  F140         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 53981                           
 53982                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 53983  01100E  0E00               	movlw	0
 53984  011010  0101               	movlb	1	; () banked
 53985  011012  6F58               	movwf	_MSD_State& (0+255),b
 53986                           
 53987                           ; BSR set to: 1
 53988                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 53989  011014  6957               	setf	_MSDCommandState& (0+255),b
 53990                           
 53991                           ; BSR set to: 1
 53992                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 53993  011016  0E00               	movlw	0
 53994  011018  6F56               	movwf	_MSDReadState& (0+255),b
 53995                           
 53996                           ; BSR set to: 1
 53997                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 53998  01101A  0E00               	movlw	0
 53999  01101C  6F55               	movwf	_MSDWriteState& (0+255),b
 54000                           
 54001                           ; BSR set to: 1
 54002                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 54003  01101E  0E00               	movlw	0
 54004  011020  6F51               	movwf	_MSDHostNoData& (0+255),b
 54005                           
 54006                           ; BSR set to: 1
 54007                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 54008  011022  0E00               	movlw	0
 54009  011024  0102               	movlb	2	; () banked
 54010  011026  6F3C               	movwf	_gblNumBLKS& (0+255),b
 54011  011028  0E00               	movlw	0
 54012  01102A  6F3D               	movwf	(_gblNumBLKS+1)& (0+255),b
 54013  01102C  0E00               	movlw	0
 54014  01102E  6F3E               	movwf	(_gblNumBLKS+2)& (0+255),b
 54015  011030  0E00               	movlw	0
 54016  011032  6F3F               	movwf	(_gblNumBLKS+3)& (0+255),b
 54017                           
 54018                           ; BSR set to: 2
 54019                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 54020  011034  0E00               	movlw	0
 54021  011036  6F38               	movwf	_gblBLKLen& (0+255),b
 54022  011038  0E00               	movlw	0
 54023  01103A  6F39               	movwf	(_gblBLKLen+1)& (0+255),b
 54024  01103C  0E00               	movlw	0
 54025  01103E  6F3A               	movwf	(_gblBLKLen+2)& (0+255),b
 54026  011040  0E00               	movlw	0
 54027  011042  6F3B               	movwf	(_gblBLKLen+3)& (0+255),b
 54028                           
 54029                           ; BSR set to: 2
 54030                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 54031  011044  0E01               	movlw	1
 54032  011046  0101               	movlb	1	; () banked
 54033  011048  6F50               	movwf	_MSDCBWValid& (0+255),b
 54034                           
 54035                           ; BSR set to: 1
 54036                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 54037  01104A  0E00               	movlw	0
 54038  01104C  6F3E               	movwf	(_gblMediaPresent+1)& (0+255),b
 54039  01104E  0E00               	movlw	0
 54040  011050  6F3D               	movwf	_gblMediaPresent& (0+255),b
 54041                           
 54042                           ; BSR set to: 1
 54043                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 54044  011052  0E00               	movlw	0
 54045  011054  0102               	movlb	2	; () banked
 54046  011056  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 54047  011058  D04A               	goto	i2l534
 54048  01105A                     
 54049                           ; BSR set to: 2
 54050                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 54051                           
 54052                           ; BSR set to: 2
 54053  01105A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54054  01105C  0D01               	mullw	1
 54055  01105E  0E52               	movlw	low _SoftDetach
 54056  011060  24F3               	addwf	prodl,w,c
 54057  011062  6ED9               	movwf	fsr2l,c
 54058  011064  0E01               	movlw	high _SoftDetach
 54059  011066  20F4               	addwfc	prodh,w,c
 54060  011068  6EDA               	movwf	fsr2h,c
 54061  01106A  0E00               	movlw	0
 54062  01106C  6EDF               	movwf	indf2,c
 54063                           
 54064                           ; BSR set to: 2
 54065                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 54066  01106E  C2AC  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 54067  011072  C2AD  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 54068  011076  EE22  F0A0         	lfsr	2,_LUN+9
 54069  01107A  D801               	call	i2u1026_48
 54070  01107C  D00A               	goto	i2u1026_49
 54071  01107E                     i2u1026_48:
 54072  01107E  0005               	push	
 54073  011080  6EFA               	movwf	pclath,c
 54074  011082  50DE               	movf	postinc2,w,c
 54075  011084  6EFD               	movwf	tosl,c
 54076  011086  50DE               	movf	postinc2,w,c
 54077  011088  6EFE               	movwf	tosh,c
 54078  01108A  50DE               	movf	postinc2,w,c
 54079  01108C  6EFF               	movwf	tosu,c
 54080  01108E  50FA               	movf	pclath,w,c
 54081  011090  0012               	return		;indir
 54082  011092                     i2u1026_49:
 54083  011092  0900               	iorlw	0
 54084  011094  B4D8               	btfsc	status,2,c
 54085  011096  D027               	goto	i2l537
 54086                           
 54087                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 54088  011098  C2AC  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 54089  01109C  C2AD  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 54090  0110A0  D801               	call	i2u1028_48
 54091  0110A2  D00B               	goto	i2u1028_49
 54092  0110A4                     i2u1028_48:
 54093  0110A4  0005               	push	
 54094  0110A6  6EFA               	movwf	pclath,c
 54095  0110A8  0102               	movlb	2	; () banked
 54096  0110AA  5197               	movf	_LUN& (0+255),w,b
 54097  0110AC  6EFD               	movwf	tosl,c
 54098  0110AE  5198               	movf	(_LUN+1)& (0+255),w,b
 54099  0110B0  6EFE               	movwf	tosh,c
 54100  0110B2  5199               	movf	(_LUN+2)& (0+255),w,b
 54101  0110B4  6EFF               	movwf	tosu,c
 54102  0110B6  50FA               	movf	pclath,w,c
 54103  0110B8  0012               	return		;indir
 54104  0110BA                     i2u1028_49:
 54105  0110BA  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 54106  0110BC  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 54107  0110BE  B4D8               	btfsc	status,2,c
 54108  0110C0  D012               	goto	i2l537
 54109                           
 54110                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 54111  0110C2  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 54112  0110C6  0E01               	movlw	1
 54113  0110C8  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 54114  0110CA  0E00               	movlw	0
 54115  0110CC  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 54116  0110CE  2A0C               	incf	??_USBMSDInit,f,c
 54117  0110D0  D003               	goto	i2u1030_44
 54118  0110D2                     i2u1030_45:
 54119  0110D2  90D8               	bcf	status,0,c
 54120  0110D4  360D               	rlcf	??_USBMSDInit+1,f,c
 54121  0110D6  360E               	rlcf	??_USBMSDInit+2,f,c
 54122  0110D8                     i2u1030_44:
 54123  0110D8  2E0C               	decfsz	??_USBMSDInit,f,c
 54124  0110DA  D7FB               	goto	i2u1030_45
 54125  0110DC  500D               	movf	??_USBMSDInit+1,w,c
 54126  0110DE  0101               	movlb	1	; () banked
 54127  0110E0  133D               	iorwf	_gblMediaPresent& (0+255),f,b
 54128  0110E2  500E               	movf	??_USBMSDInit+2,w,c
 54129  0110E4  133E               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 54130  0110E6                     i2l537:
 54131                           
 54132                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 54133                           
 54134                           ; BSR set to: 1
 54135                           
 54136                           ; BSR set to: 1
 54137  0110E6  ECBE  F0A3         	call	i2_ResetSenseData	;wreg free
 54138  0110EA  0102               	movlb	2	; () banked
 54139  0110EC  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 54140  0110EE                     i2l534:
 54141                           
 54142                           ; BSR set to: 2
 54143                           
 54144                           ; BSR set to: 2
 54145  0110EE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54146  0110F0  A4D8               	btfss	status,2,c
 54147  0110F2  0012               	return	
 54148  0110F4  D7B2               	goto	i2l535
 54149  0110F6                     __end_of_USBMSDInit:
 54150                           	opt stack 0
 54151                           tosu	equ	0xFFF
 54152                           tosh	equ	0xFFE
 54153                           tosl	equ	0xFFD
 54154                           pclatu	equ	0xFFB
 54155                           pclath	equ	0xFFA
 54156                           tblptru	equ	0xFF8
 54157                           tblptrh	equ	0xFF7
 54158                           tblptrl	equ	0xFF6
 54159                           tablat	equ	0xFF5
 54160                           prodh	equ	0xFF4
 54161                           prodl	equ	0xFF3
 54162                           intcon	equ	0xFF2
 54163                           indf0	equ	0xFEF
 54164                           postinc0	equ	0xFEE
 54165                           fsr0h	equ	0xFEA
 54166                           fsr0l	equ	0xFE9
 54167                           wreg	equ	0xFE8
 54168                           indf1	equ	0xFE7
 54169                           postinc1	equ	0xFE6
 54170                           postdec1	equ	0xFE5
 54171                           plusw1	equ	0xFE3
 54172                           fsr1h	equ	0xFE2
 54173                           fsr1l	equ	0xFE1
 54174                           indf2	equ	0xFDF
 54175                           postinc2	equ	0xFDE
 54176                           postdec2	equ	0xFDD
 54177                           plusw2	equ	0xFDB
 54178                           fsr2h	equ	0xFDA
 54179                           fsr2l	equ	0xFD9
 54180                           status	equ	0xFD8
 54181                           
 54182 ;; *************** function i2_ResetSenseData *****************
 54183 ;; Defined at:
 54184 ;;		line 1373 in file "usb_device_msd.c"
 54185 ;; Parameters:    Size  Location     Type
 54186 ;;		None
 54187 ;; Auto vars:     Size  Location     Type
 54188 ;;		None
 54189 ;; Return value:  Size  Location     Type
 54190 ;;                  1    wreg      void 
 54191 ;; Registers used:
 54192 ;;		wreg, status,2
 54193 ;; Tracked objects:
 54194 ;;		On entry : 0/0
 54195 ;;		On exit  : 0/0
 54196 ;;		Unchanged: 0/0
 54197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54202 ;;Total ram usage:        0 bytes
 54203 ;; Hardware stack levels used:    1
 54204 ;; This function calls:
 54205 ;;		Nothing
 54206 ;; This function is called by:
 54207 ;;		_USBMSDInit
 54208 ;; This function uses a non-reentrant model
 54209 ;;
 54210                           
 54211                           	psect	text229
 54212  01477C                     __ptext229:
 54213                           	opt stack 0
 54214  01477C                     i2_ResetSenseData:
 54215                           	opt stack 13
 54216                           
 54217                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 54218                           
 54219                           ; BSR set to: 2
 54220                           ;incstack = 0
 54221  01477C  0102               	movlb	2	; () banked
 54222  01477E  911F               	bcf	_gblSenseData& (0+255),0,b
 54223  014780  931F               	bcf	_gblSenseData& (0+255),1,b
 54224  014782  951F               	bcf	_gblSenseData& (0+255),2,b
 54225  014784  971F               	bcf	_gblSenseData& (0+255),3,b
 54226  014786  891F               	bsf	_gblSenseData& (0+255),4,b
 54227  014788  8B1F               	bsf	_gblSenseData& (0+255),5,b
 54228  01478A  8D1F               	bsf	_gblSenseData& (0+255),6,b
 54229                           
 54230                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 54231  01478C  9F1F               	bcf	_gblSenseData& (0+255),7,b
 54232                           
 54233                           ; BSR set to: 2
 54234                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 54235  01478E  0E00               	movlw	0
 54236  014790  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 54237                           
 54238                           ; BSR set to: 2
 54239                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 54240  014792  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 54241  014794  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 54242  014796  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 54243  014798  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 54244                           
 54245                           ; BSR set to: 2
 54246                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 54247  01479A  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 54248                           
 54249                           ; BSR set to: 2
 54250                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 54251  01479C  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 54252                           
 54253                           ; BSR set to: 2
 54254                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 54255  01479E  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 54256                           
 54257                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 54258  0147A0  0E00               	movlw	0
 54259  0147A2  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 54260                           
 54261                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 54262  0147A4  0E00               	movlw	0
 54263  0147A6  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 54264                           
 54265                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 54266  0147A8  0E00               	movlw	0
 54267  0147AA  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 54268                           
 54269                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 54270  0147AC  0E00               	movlw	0
 54271  0147AE  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 54272                           
 54273                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 54274  0147B0  0E0A               	movlw	10
 54275  0147B2  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 54276                           
 54277                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 54278  0147B4  0E00               	movlw	0
 54279  0147B6  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 54280  0147B8  0E00               	movlw	0
 54281  0147BA  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 54282  0147BC  0E00               	movlw	0
 54283  0147BE  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 54284  0147C0  0E00               	movlw	0
 54285  0147C2  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 54286                           
 54287                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 54288  0147C4  0E00               	movlw	0
 54289  0147C6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 54290                           
 54291                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 54292  0147C8  0E00               	movlw	0
 54293  0147CA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 54294                           
 54295                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 54296  0147CC  0E00               	movlw	0
 54297  0147CE  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 54298                           
 54299                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 54300  0147D0  0E00               	movlw	0
 54301  0147D2  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 54302                           
 54303                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 54304  0147D4  0E00               	movlw	0
 54305  0147D6  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 54306                           
 54307                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 54308  0147D8  0E00               	movlw	0
 54309  0147DA  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 54310                           
 54311                           ; BSR set to: 2
 54312  0147DC  0012               	return		;funcret
 54313  0147DE                     __end_ofi2_ResetSenseData:
 54314                           	opt stack 0
 54315                           tosu	equ	0xFFF
 54316                           tosh	equ	0xFFE
 54317                           tosl	equ	0xFFD
 54318                           pclatu	equ	0xFFB
 54319                           pclath	equ	0xFFA
 54320                           tblptru	equ	0xFF8
 54321                           tblptrh	equ	0xFF7
 54322                           tblptrl	equ	0xFF6
 54323                           tablat	equ	0xFF5
 54324                           prodh	equ	0xFF4
 54325                           prodl	equ	0xFF3
 54326                           intcon	equ	0xFF2
 54327                           indf0	equ	0xFEF
 54328                           postinc0	equ	0xFEE
 54329                           fsr0h	equ	0xFEA
 54330                           fsr0l	equ	0xFE9
 54331                           wreg	equ	0xFE8
 54332                           indf1	equ	0xFE7
 54333                           postinc1	equ	0xFE6
 54334                           postdec1	equ	0xFE5
 54335                           plusw1	equ	0xFE3
 54336                           fsr1h	equ	0xFE2
 54337                           fsr1l	equ	0xFE1
 54338                           indf2	equ	0xFDF
 54339                           postinc2	equ	0xFDE
 54340                           postdec2	equ	0xFDD
 54341                           plusw2	equ	0xFDB
 54342                           fsr2h	equ	0xFDA
 54343                           fsr2l	equ	0xFD9
 54344                           status	equ	0xFD8
 54345                           
 54346 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 54347 ;; Defined at:
 54348 ;;		line 10 in file "external_flash.c"
 54349 ;; Parameters:    Size  Location     Type
 54350 ;;  config          2    0[COMRAM] PTR void 
 54351 ;;		 -> NULL(0), 
 54352 ;; Auto vars:     Size  Location     Type
 54353 ;;		None
 54354 ;; Return value:  Size  Location     Type
 54355 ;;                  2    0[COMRAM] PTR struct .
 54356 ;; Registers used:
 54357 ;;		wreg, status,2, status,0
 54358 ;; Tracked objects:
 54359 ;;		On entry : 0/0
 54360 ;;		On exit  : 0/0
 54361 ;;		Unchanged: 0/0
 54362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54367 ;;Total ram usage:        2 bytes
 54368 ;; Hardware stack levels used:    1
 54369 ;; This function calls:
 54370 ;;		Nothing
 54371 ;; This function is called by:
 54372 ;;		_USBMSDInit
 54373 ;;		_MSDProcessCommand
 54374 ;; This function uses a non-reentrant model
 54375 ;;
 54376                           
 54377                           	psect	text230
 54378  015CE0                     __ptext230:
 54379                           	opt stack 0
 54380  015CE0                     i2_ExternalFlash_MediaInitialize:
 54381                           	opt stack 13
 54382                           
 54383                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 54384                           
 54385                           ; BSR set to: 2
 54386                           ;incstack = 0
 54387  015CE0  0102               	movlb	2	; () banked
 54388  015CE2  8193               	bsf	(_mediaInformation+1)& (0+255),0,b
 54389                           
 54390                           ; BSR set to: 2
 54391                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 54392  015CE4  0E02               	movlw	2
 54393  015CE6  6F95               	movwf	(_mediaInformation+3)& (0+255),b
 54394  015CE8  0E00               	movlw	0
 54395  015CEA  6F94               	movwf	(_mediaInformation+2)& (0+255),b
 54396                           
 54397                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 54398  015CEC  0E00               	movlw	0
 54399  015CEE  6F92               	movwf	_mediaInformation& (0+255),b
 54400                           
 54401                           ; BSR set to: 2
 54402                           ;external_flash.c: 15: return &mediaInformation;
 54403  015CF0  0E92               	movlw	low _mediaInformation
 54404  015CF2  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 54405  015CF4  0E02               	movlw	high _mediaInformation
 54406  015CF6  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 54407  015CF8  0012               	return	
 54408  015CFA                     __end_ofi2_ExternalFlash_MediaInitialize:
 54409                           	opt stack 0
 54410                           tosu	equ	0xFFF
 54411                           tosh	equ	0xFFE
 54412                           tosl	equ	0xFFD
 54413                           pclatu	equ	0xFFB
 54414                           pclath	equ	0xFFA
 54415                           tblptru	equ	0xFF8
 54416                           tblptrh	equ	0xFF7
 54417                           tblptrl	equ	0xFF6
 54418                           tablat	equ	0xFF5
 54419                           prodh	equ	0xFF4
 54420                           prodl	equ	0xFF3
 54421                           intcon	equ	0xFF2
 54422                           indf0	equ	0xFEF
 54423                           postinc0	equ	0xFEE
 54424                           fsr0h	equ	0xFEA
 54425                           fsr0l	equ	0xFE9
 54426                           wreg	equ	0xFE8
 54427                           indf1	equ	0xFE7
 54428                           postinc1	equ	0xFE6
 54429                           postdec1	equ	0xFE5
 54430                           plusw1	equ	0xFE3
 54431                           fsr1h	equ	0xFE2
 54432                           fsr1l	equ	0xFE1
 54433                           indf2	equ	0xFDF
 54434                           postinc2	equ	0xFDE
 54435                           postdec2	equ	0xFDD
 54436                           plusw2	equ	0xFDB
 54437                           fsr2h	equ	0xFDA
 54438                           fsr2l	equ	0xFD9
 54439                           status	equ	0xFD8
 54440                           
 54441 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 54442 ;; Defined at:
 54443 ;;		line 29 in file "external_flash.c"
 54444 ;; Parameters:    Size  Location     Type
 54445 ;;  config          2    0[COMRAM] PTR void 
 54446 ;;		 -> NULL(0), 
 54447 ;; Auto vars:     Size  Location     Type
 54448 ;;		None
 54449 ;; Return value:  Size  Location     Type
 54450 ;;                  1    wreg      unsigned char 
 54451 ;; Registers used:
 54452 ;;		wreg
 54453 ;; Tracked objects:
 54454 ;;		On entry : 0/0
 54455 ;;		On exit  : 0/0
 54456 ;;		Unchanged: 0/0
 54457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54462 ;;Total ram usage:        2 bytes
 54463 ;; Hardware stack levels used:    1
 54464 ;; This function calls:
 54465 ;;		Nothing
 54466 ;; This function is called by:
 54467 ;;		_USBMSDInit
 54468 ;;		_MSDProcessCommand
 54469 ;; This function uses a non-reentrant model
 54470 ;;
 54471                           
 54472                           	psect	text231
 54473  015E34                     __ptext231:
 54474                           	opt stack 0
 54475  015E34                     i2_ExternalFlash_MediaDetect:
 54476                           	opt stack 13
 54477                           
 54478                           ;external_flash.c: 31: return 1;
 54479                           
 54480                           ; BSR set to: 2
 54481                           ;incstack = 0
 54482  015E34  0E01               	movlw	1
 54483  015E36  0012               	return	
 54484  015E38                     __end_ofi2_ExternalFlash_MediaDetect:
 54485                           	opt stack 0
 54486                           tosu	equ	0xFFF
 54487                           tosh	equ	0xFFE
 54488                           tosl	equ	0xFFD
 54489                           pclatu	equ	0xFFB
 54490                           pclath	equ	0xFFA
 54491                           tblptru	equ	0xFF8
 54492                           tblptrh	equ	0xFF7
 54493                           tblptrl	equ	0xFF6
 54494                           tablat	equ	0xFF5
 54495                           prodh	equ	0xFF4
 54496                           prodl	equ	0xFF3
 54497                           intcon	equ	0xFF2
 54498                           indf0	equ	0xFEF
 54499                           postinc0	equ	0xFEE
 54500                           fsr0h	equ	0xFEA
 54501                           fsr0l	equ	0xFE9
 54502                           wreg	equ	0xFE8
 54503                           indf1	equ	0xFE7
 54504                           postinc1	equ	0xFE6
 54505                           postdec1	equ	0xFE5
 54506                           plusw1	equ	0xFE3
 54507                           fsr1h	equ	0xFE2
 54508                           fsr1l	equ	0xFE1
 54509                           indf2	equ	0xFDF
 54510                           postinc2	equ	0xFDE
 54511                           postdec2	equ	0xFDD
 54512                           plusw2	equ	0xFDB
 54513                           fsr2h	equ	0xFDA
 54514                           fsr2l	equ	0xFD9
 54515                           status	equ	0xFD8
 54516                           
 54517 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 54518 ;; Defined at:
 54519 ;;		line 46 in file "app_device_custom_hid.c"
 54520 ;; Parameters:    Size  Location     Type
 54521 ;;		None
 54522 ;; Auto vars:     Size  Location     Type
 54523 ;;		None
 54524 ;; Return value:  Size  Location     Type
 54525 ;;                  1    wreg      void 
 54526 ;; Registers used:
 54527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54528 ;; Tracked objects:
 54529 ;;		On entry : 0/0
 54530 ;;		On exit  : 0/0
 54531 ;;		Unchanged: 0/0
 54532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54537 ;;Total ram usage:        0 bytes
 54538 ;; Hardware stack levels used:    1
 54539 ;; Hardware stack levels required when called:    2
 54540 ;; This function calls:
 54541 ;;		_USBEnableEndpoint
 54542 ;;		i2_USBTransferOnePacket
 54543 ;; This function is called by:
 54544 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54545 ;; This function uses a non-reentrant model
 54546 ;;
 54547                           
 54548                           	psect	text232
 54549  0157A4                     __ptext232:
 54550                           	opt stack 0
 54551  0157A4                     _APP_DeviceCustomHIDInitialize:
 54552                           	opt stack 13
 54553                           
 54554                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 54555                           
 54556                           ;incstack = 0
 54557  0157A4  0E00               	movlw	0
 54558  0157A6  0101               	movlb	1	; () banked
 54559  0157A8  6F37               	movwf	_USBInHandle& (0+255),b
 54560  0157AA  0E00               	movlw	0
 54561  0157AC  6F38               	movwf	(_USBInHandle+1)& (0+255),b
 54562                           
 54563                           ; BSR set to: 1
 54564                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 54565  0157AE  0E1E               	movlw	30
 54566  0157B0  6E09               	movwf	USBEnableEndpoint@options,c
 54567  0157B2  0E01               	movlw	1
 54568  0157B4  ECBD  F0AA         	call	_USBEnableEndpoint
 54569                           
 54570                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 54571  0157B8  0E00               	movlw	0
 54572  0157BA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54573  0157BC  0E80               	movlw	low _ReceivedDataBuffer
 54574  0157BE  6E02               	movwf	i2USBTransferOnePacket@data,c
 54575  0157C0  0E03               	movlw	high _ReceivedDataBuffer
 54576  0157C2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54577  0157C4  0E40               	movlw	64
 54578  0157C6  6E04               	movwf	i2USBTransferOnePacket@len,c
 54579  0157C8  0E01               	movlw	1
 54580  0157CA  EC8D  F08A         	call	i2_USBTransferOnePacket
 54581  0157CE  C001  F139         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 54582  0157D2  C002  F13A         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 54583  0157D6  0012               	return		;funcret
 54584  0157D8                     __end_of_APP_DeviceCustomHIDInitialize:
 54585                           	opt stack 0
 54586                           tosu	equ	0xFFF
 54587                           tosh	equ	0xFFE
 54588                           tosl	equ	0xFFD
 54589                           pclatu	equ	0xFFB
 54590                           pclath	equ	0xFFA
 54591                           tblptru	equ	0xFF8
 54592                           tblptrh	equ	0xFF7
 54593                           tblptrl	equ	0xFF6
 54594                           tablat	equ	0xFF5
 54595                           prodh	equ	0xFF4
 54596                           prodl	equ	0xFF3
 54597                           intcon	equ	0xFF2
 54598                           indf0	equ	0xFEF
 54599                           postinc0	equ	0xFEE
 54600                           fsr0h	equ	0xFEA
 54601                           fsr0l	equ	0xFE9
 54602                           wreg	equ	0xFE8
 54603                           indf1	equ	0xFE7
 54604                           postinc1	equ	0xFE6
 54605                           postdec1	equ	0xFE5
 54606                           plusw1	equ	0xFE3
 54607                           fsr1h	equ	0xFE2
 54608                           fsr1l	equ	0xFE1
 54609                           indf2	equ	0xFDF
 54610                           postinc2	equ	0xFDE
 54611                           postdec2	equ	0xFDD
 54612                           plusw2	equ	0xFDB
 54613                           fsr2h	equ	0xFDA
 54614                           fsr2l	equ	0xFD9
 54615                           status	equ	0xFD8
 54616                           
 54617 ;; *************** function i2_USBTransferOnePacket *****************
 54618 ;; Defined at:
 54619 ;;		line 995 in file "usb_device.c"
 54620 ;; Parameters:    Size  Location     Type
 54621 ;;  ep              1    wreg     unsigned char 
 54622 ;;  dir             1    0[COMRAM] unsigned char 
 54623 ;;  data            2    1[COMRAM] PTR unsigned char 
 54624 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 54625 ;;		 -> msd_cbw(31), NULL(0), 
 54626 ;;  len             1    3[COMRAM] unsigned char 
 54627 ;; Auto vars:     Size  Location     Type
 54628 ;;  ep              1    8[COMRAM] unsigned char 
 54629 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 54630 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 54631 ;; Return value:  Size  Location     Type
 54632 ;;                  2    0[COMRAM] PTR void 
 54633 ;; Registers used:
 54634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54635 ;; Tracked objects:
 54636 ;;		On entry : 0/0
 54637 ;;		On exit  : 0/0
 54638 ;;		Unchanged: 0/0
 54639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54641 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54642 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54643 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54644 ;;Total ram usage:       11 bytes
 54645 ;; Hardware stack levels used:    1
 54646 ;; This function calls:
 54647 ;;		Nothing
 54648 ;; This function is called by:
 54649 ;;		_USBMSDInit
 54650 ;;		_USBCheckMSDRequest
 54651 ;;		_MSDTransferTerminated
 54652 ;;		_APP_DeviceCustomHIDInitialize
 54653 ;; This function uses a non-reentrant model
 54654 ;;
 54655                           
 54656                           	psect	text233
 54657  01151A                     __ptext233:
 54658                           	opt stack 0
 54659  01151A                     i2_USBTransferOnePacket:
 54660                           	opt stack 14
 54661                           
 54662                           ;incstack = 0
 54663                           ;i2USBTransferOnePacket@ep stored from wreg
 54664  01151A  6E09               	movwf	i2USBTransferOnePacket@ep,c
 54665                           
 54666                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 54667  01151C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 54668  01151E  B4D8               	btfsc	status,2,c
 54669  011520  D007               	goto	i2l184
 54670                           
 54671                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 54672  011522  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54673  011524  0D02               	mullw	2
 54674  011526  0E09               	movlw	low _pBDTEntryIn
 54675  011528  24F3               	addwf	prodl,w,c
 54676  01152A  6ED9               	movwf	fsr2l,c
 54677  01152C  0E01               	movlw	high _pBDTEntryIn
 54678  01152E  D006               	goto	L81
 54679  011530                     i2l184:
 54680                           
 54681                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 54682  011530  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54683  011532  0D02               	mullw	2
 54684  011534  0E0F               	movlw	low _pBDTEntryOut
 54685  011536  24F3               	addwf	prodl,w,c
 54686  011538  6ED9               	movwf	fsr2l,c
 54687  01153A  0E01               	movlw	high _pBDTEntryOut
 54688  01153C                     L81:
 54689  01153C  20F4               	addwfc	prodh,w,c
 54690  01153E  6EDA               	movwf	fsr2h,c
 54691  011540  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 54692  011544  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 54693                           
 54694                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 54695  011548  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54696  01154A  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 54697  01154C  A4D8               	btfss	status,2,c
 54698  01154E  D005               	goto	i2l186
 54699                           
 54700                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 54701  011550  0E00               	movlw	0
 54702  011552  6E01               	movwf	?i2_USBTransferOnePacket,c
 54703  011554  0E00               	movlw	0
 54704  011556  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 54705  011558  0012               	return	
 54706  01155A                     i2l186:
 54707                           
 54708                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 54709  01155A  EE20 F002          	lfsr	2,2
 54710  01155E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54711  011560  26D9               	addwf	fsr2l,f,c
 54712  011562  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 54713  011564  22DA               	addwfc	fsr2h,f,c
 54714  011566  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 54715  01156A  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 54716                           
 54717                           ;usb_device.c: 1030: handle->CNT = len;
 54718  01156E  EE20 F001          	lfsr	2,1
 54719  011572  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54720  011574  26D9               	addwf	fsr2l,f,c
 54721  011576  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 54722  011578  22DA               	addwfc	fsr2h,f,c
 54723  01157A  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 54724                           
 54725                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 54726  01157E  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54727  011582  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 54728  011586  0E40               	movlw	64
 54729  011588  16DF               	andwf	indf2,f,c
 54730                           
 54731                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 54732  01158A  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54733  01158E  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 54734  011592  0E00               	movlw	0
 54735  011594  86DB               	bsf	plusw2,3,c
 54736                           
 54737                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 54738  011596  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54739  01159A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 54740  01159E  0E00               	movlw	0
 54741  0115A0  8EDB               	bsf	plusw2,7,c
 54742                           
 54743                           ;usb_device.c: 1036: if(dir != 0)
 54744  0115A2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 54745  0115A4  B4D8               	btfsc	status,2,c
 54746  0115A6  D018               	goto	i2l188
 54747                           
 54748                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 54749  0115A8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54750  0115AA  0D02               	mullw	2
 54751  0115AC  0E09               	movlw	low _pBDTEntryIn
 54752  0115AE  24F3               	addwf	prodl,w,c
 54753  0115B0  6ED9               	movwf	fsr2l,c
 54754  0115B2  0E01               	movlw	high _pBDTEntryIn
 54755  0115B4  20F4               	addwfc	prodh,w,c
 54756  0115B6  6EDA               	movwf	fsr2h,c
 54757  0115B8  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 54758  0115BC  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 54759  0115C0  0E04               	movlw	4
 54760  0115C2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 54761  0115C4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 54762  0115C6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 54763  0115C8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 54764  0115CA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54765  0115CC  0D02               	mullw	2
 54766  0115CE  0E09               	movlw	low _pBDTEntryIn
 54767  0115D0  24F3               	addwf	prodl,w,c
 54768  0115D2  6ED9               	movwf	fsr2l,c
 54769  0115D4  0E01               	movlw	high _pBDTEntryIn
 54770  0115D6  D017               	goto	L82
 54771  0115D8                     i2l188:
 54772                           
 54773                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 54774  0115D8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54775  0115DA  0D02               	mullw	2
 54776  0115DC  0E0F               	movlw	low _pBDTEntryOut
 54777  0115DE  24F3               	addwf	prodl,w,c
 54778  0115E0  6ED9               	movwf	fsr2l,c
 54779  0115E2  0E01               	movlw	high _pBDTEntryOut
 54780  0115E4  20F4               	addwfc	prodh,w,c
 54781  0115E6  6EDA               	movwf	fsr2h,c
 54782  0115E8  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 54783  0115EC  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 54784  0115F0  0E04               	movlw	4
 54785  0115F2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 54786  0115F4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 54787  0115F6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 54788  0115F8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 54789  0115FA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54790  0115FC  0D02               	mullw	2
 54791  0115FE  0E0F               	movlw	low _pBDTEntryOut
 54792  011600  24F3               	addwf	prodl,w,c
 54793  011602  6ED9               	movwf	fsr2l,c
 54794  011604  0E01               	movlw	high _pBDTEntryOut
 54795  011606                     L82:
 54796  011606  20F4               	addwfc	prodh,w,c
 54797  011608  6EDA               	movwf	fsr2h,c
 54798  01160A  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 54799  01160E  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 54800                           
 54801                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 54802  011612  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 54803  011616  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 54804  01161A  0012               	return	
 54805  01161C                     __end_ofi2_USBTransferOnePacket:
 54806                           	opt stack 0
 54807                           tosu	equ	0xFFF
 54808                           tosh	equ	0xFFE
 54809                           tosl	equ	0xFFD
 54810                           pclatu	equ	0xFFB
 54811                           pclath	equ	0xFFA
 54812                           tblptru	equ	0xFF8
 54813                           tblptrh	equ	0xFF7
 54814                           tblptrl	equ	0xFF6
 54815                           tablat	equ	0xFF5
 54816                           prodh	equ	0xFF4
 54817                           prodl	equ	0xFF3
 54818                           intcon	equ	0xFF2
 54819                           indf0	equ	0xFEF
 54820                           postinc0	equ	0xFEE
 54821                           fsr0h	equ	0xFEA
 54822                           fsr0l	equ	0xFE9
 54823                           wreg	equ	0xFE8
 54824                           indf1	equ	0xFE7
 54825                           postinc1	equ	0xFE6
 54826                           postdec1	equ	0xFE5
 54827                           plusw1	equ	0xFE3
 54828                           fsr1h	equ	0xFE2
 54829                           fsr1l	equ	0xFE1
 54830                           indf2	equ	0xFDF
 54831                           postinc2	equ	0xFDE
 54832                           postdec2	equ	0xFDD
 54833                           plusw2	equ	0xFDB
 54834                           fsr2h	equ	0xFDA
 54835                           fsr2l	equ	0xFD9
 54836                           status	equ	0xFD8
 54837                           
 54838 ;; *************** function _USBEnableEndpoint *****************
 54839 ;; Defined at:
 54840 ;;		line 878 in file "usb_device.c"
 54841 ;; Parameters:    Size  Location     Type
 54842 ;;  ep              1    wreg     unsigned char 
 54843 ;;  options         1    8[COMRAM] unsigned char 
 54844 ;; Auto vars:     Size  Location     Type
 54845 ;;  ep              1   11[COMRAM] unsigned char 
 54846 ;;  p               2    9[COMRAM] PTR unsigned char 
 54847 ;;		 -> UEP0(1), 
 54848 ;; Return value:  Size  Location     Type
 54849 ;;                  1    wreg      void 
 54850 ;; Registers used:
 54851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54852 ;; Tracked objects:
 54853 ;;		On entry : 0/0
 54854 ;;		On exit  : 0/0
 54855 ;;		Unchanged: 0/0
 54856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54858 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54860 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54861 ;;Total ram usage:        4 bytes
 54862 ;; Hardware stack levels used:    1
 54863 ;; Hardware stack levels required when called:    1
 54864 ;; This function calls:
 54865 ;;		_USBConfigureEndpoint
 54866 ;; This function is called by:
 54867 ;;		_APP_DeviceCustomHIDInitialize
 54868 ;;		_APP_DeviceMSDInitialize
 54869 ;; This function uses a non-reentrant model
 54870 ;;
 54871                           
 54872                           	psect	text234
 54873  01557A                     __ptext234:
 54874                           	opt stack 0
 54875  01557A                     _USBEnableEndpoint:
 54876                           	opt stack 13
 54877                           
 54878                           ;incstack = 0
 54879                           ;USBEnableEndpoint@ep stored from wreg
 54880  01557A  6E0C               	movwf	USBEnableEndpoint@ep,c
 54881                           
 54882                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 54883  01557C  A409               	btfss	USBEnableEndpoint@options,2,c
 54884  01557E  D005               	goto	i2l179
 54885                           
 54886                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 54887  015580  0E00               	movlw	0
 54888  015582  6E01               	movwf	USBConfigureEndpoint@direction,c
 54889  015584  500C               	movf	USBEnableEndpoint@ep,w,c
 54890  015586  EC5C  F09D         	call	_USBConfigureEndpoint
 54891  01558A                     i2l179:
 54892                           
 54893                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 54894  01558A  A209               	btfss	USBEnableEndpoint@options,1,c
 54895  01558C  D005               	goto	i2l180
 54896                           
 54897                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 54898  01558E  0E01               	movlw	1
 54899  015590  6E01               	movwf	USBConfigureEndpoint@direction,c
 54900  015592  500C               	movf	USBEnableEndpoint@ep,w,c
 54901  015594  EC5C  F09D         	call	_USBConfigureEndpoint
 54902  015598                     i2l180:
 54903                           
 54904                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 54905  015598  500C               	movf	USBEnableEndpoint@ep,w,c
 54906  01559A  0D01               	mullw	1
 54907  01559C  0E26               	movlw	38
 54908  01559E  24F3               	addwf	prodl,w,c
 54909  0155A0  6E0A               	movwf	USBEnableEndpoint@p,c
 54910  0155A2  0E0F               	movlw	15
 54911  0155A4  20F4               	addwfc	prodh,w,c
 54912  0155A6  6E0B               	movwf	USBEnableEndpoint@p+1,c
 54913                           
 54914                           ;usb_device.c: 901: *p = options;
 54915  0155A8  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 54916  0155AC  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 54917  0155B0  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 54918  0155B4  0012               	return		;funcret
 54919  0155B6                     __end_of_USBEnableEndpoint:
 54920                           	opt stack 0
 54921                           tosu	equ	0xFFF
 54922                           tosh	equ	0xFFE
 54923                           tosl	equ	0xFFD
 54924                           pclatu	equ	0xFFB
 54925                           pclath	equ	0xFFA
 54926                           tblptru	equ	0xFF8
 54927                           tblptrh	equ	0xFF7
 54928                           tblptrl	equ	0xFF6
 54929                           tablat	equ	0xFF5
 54930                           prodh	equ	0xFF4
 54931                           prodl	equ	0xFF3
 54932                           intcon	equ	0xFF2
 54933                           indf0	equ	0xFEF
 54934                           postinc0	equ	0xFEE
 54935                           fsr0h	equ	0xFEA
 54936                           fsr0l	equ	0xFE9
 54937                           wreg	equ	0xFE8
 54938                           indf1	equ	0xFE7
 54939                           postinc1	equ	0xFE6
 54940                           postdec1	equ	0xFE5
 54941                           plusw1	equ	0xFE3
 54942                           fsr1h	equ	0xFE2
 54943                           fsr1l	equ	0xFE1
 54944                           indf2	equ	0xFDF
 54945                           postinc2	equ	0xFDE
 54946                           postdec2	equ	0xFDD
 54947                           plusw2	equ	0xFDB
 54948                           fsr2h	equ	0xFDA
 54949                           fsr2l	equ	0xFD9
 54950                           status	equ	0xFD8
 54951                           
 54952 ;; *************** function _USBConfigureEndpoint *****************
 54953 ;; Defined at:
 54954 ;;		line 1545 in file "usb_device.c"
 54955 ;; Parameters:    Size  Location     Type
 54956 ;;  EPNum           1    wreg     unsigned char 
 54957 ;;  direction       1    0[COMRAM] unsigned char 
 54958 ;; Auto vars:     Size  Location     Type
 54959 ;;  EPNum           1    5[COMRAM] unsigned char 
 54960 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 54961 ;;		 -> BDT(48), 
 54962 ;; Return value:  Size  Location     Type
 54963 ;;                  1    wreg      void 
 54964 ;; Registers used:
 54965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54966 ;; Tracked objects:
 54967 ;;		On entry : 0/0
 54968 ;;		On exit  : 0/0
 54969 ;;		Unchanged: 0/0
 54970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54971 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54972 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54974 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54975 ;;Total ram usage:        8 bytes
 54976 ;; Hardware stack levels used:    1
 54977 ;; This function calls:
 54978 ;;		Nothing
 54979 ;; This function is called by:
 54980 ;;		_USBEnableEndpoint
 54981 ;; This function uses a non-reentrant model
 54982 ;;
 54983                           
 54984                           	psect	text235
 54985  013AB8                     __ptext235:
 54986                           	opt stack 0
 54987  013AB8                     _USBConfigureEndpoint:
 54988                           	opt stack 13
 54989                           
 54990                           ;incstack = 0
 54991                           ;USBConfigureEndpoint@EPNum stored from wreg
 54992  013AB8  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 54993                           
 54994                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 54995  013ABA  0E00               	movlw	0
 54996  013ABC  6E07               	movwf	USBConfigureEndpoint@handle,c
 54997  013ABE  0E0D               	movlw	13
 54998  013AC0  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 54999                           
 55000                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 55001  013AC2  5001               	movf	USBConfigureEndpoint@direction,w,c
 55002  013AC4  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 55003  013AC6  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 55004  013AC8  90D8               	bcf	status,0,c
 55005  013ACA  3602               	rlcf	??_USBConfigureEndpoint,f,c
 55006  013ACC  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 55007  013ACE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55008  013AD0  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 55009  013AD2  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 55010  013AD4  90D8               	bcf	status,0,c
 55011  013AD6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55012  013AD8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55013  013ADA  90D8               	bcf	status,0,c
 55014  013ADC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55015  013ADE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55016  013AE0  5002               	movf	??_USBConfigureEndpoint,w,c
 55017  013AE2  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 55018  013AE4  5003               	movf	??_USBConfigureEndpoint+1,w,c
 55019  013AE6  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 55020  013AE8  90D8               	bcf	status,0,c
 55021  013AEA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55022  013AEC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55023  013AEE  90D8               	bcf	status,0,c
 55024  013AF0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55025  013AF2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55026  013AF4  5004               	movf	??_USBConfigureEndpoint+2,w,c
 55027  013AF6  2607               	addwf	USBConfigureEndpoint@handle,f,c
 55028  013AF8  5005               	movf	??_USBConfigureEndpoint+3,w,c
 55029  013AFA  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 55030                           
 55031                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 55032  013AFC  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55033  013B00  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55034  013B04  9EDF               	bcf	indf2,7,c
 55035                           
 55036                           ;usb_device.c: 1559: if(direction == 0)
 55037  013B06  5001               	movf	USBConfigureEndpoint@direction,w,c
 55038  013B08  A4D8               	btfss	status,2,c
 55039  013B0A  D007               	goto	i2l226
 55040                           
 55041                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 55042  013B0C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55043  013B0E  0D02               	mullw	2
 55044  013B10  0E0F               	movlw	low _pBDTEntryOut
 55045  013B12  24F3               	addwf	prodl,w,c
 55046  013B14  6ED9               	movwf	fsr2l,c
 55047  013B16  0E01               	movlw	high _pBDTEntryOut
 55048  013B18  D006               	goto	L83
 55049  013B1A                     i2l226:
 55050                           
 55051                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 55052  013B1A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55053  013B1C  0D02               	mullw	2
 55054  013B1E  0E09               	movlw	low _pBDTEntryIn
 55055  013B20  24F3               	addwf	prodl,w,c
 55056  013B22  6ED9               	movwf	fsr2l,c
 55057  013B24  0E01               	movlw	high _pBDTEntryIn
 55058  013B26                     L83:
 55059  013B26  20F4               	addwfc	prodh,w,c
 55060  013B28  6EDA               	movwf	fsr2h,c
 55061  013B2A  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 55062  013B2E  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 55063                           
 55064                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 55065  013B32  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55066  013B36  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55067  013B3A  9CDF               	bcf	indf2,6,c
 55068                           
 55069                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 55070  013B3C  EE20 F004          	lfsr	2,4
 55071  013B40  5007               	movf	USBConfigureEndpoint@handle,w,c
 55072  013B42  26D9               	addwf	fsr2l,f,c
 55073  013B44  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 55074  013B46  22DA               	addwfc	fsr2h,f,c
 55075  013B48  8CDF               	bsf	indf2,6,c
 55076  013B4A  0012               	return		;funcret
 55077  013B4C                     __end_of_USBConfigureEndpoint:
 55078                           	opt stack 0
 55079                           tosu	equ	0xFFF
 55080                           tosh	equ	0xFFE
 55081                           tosl	equ	0xFFD
 55082                           pclatu	equ	0xFFB
 55083                           pclath	equ	0xFFA
 55084                           tblptru	equ	0xFF8
 55085                           tblptrh	equ	0xFF7
 55086                           tblptrl	equ	0xFF6
 55087                           tablat	equ	0xFF5
 55088                           prodh	equ	0xFF4
 55089                           prodl	equ	0xFF3
 55090                           intcon	equ	0xFF2
 55091                           indf0	equ	0xFEF
 55092                           postinc0	equ	0xFEE
 55093                           fsr0h	equ	0xFEA
 55094                           fsr0l	equ	0xFE9
 55095                           wreg	equ	0xFE8
 55096                           indf1	equ	0xFE7
 55097                           postinc1	equ	0xFE6
 55098                           postdec1	equ	0xFE5
 55099                           plusw1	equ	0xFE3
 55100                           fsr1h	equ	0xFE2
 55101                           fsr1l	equ	0xFE1
 55102                           indf2	equ	0xFDF
 55103                           postinc2	equ	0xFDE
 55104                           postdec2	equ	0xFDD
 55105                           plusw2	equ	0xFDB
 55106                           fsr2h	equ	0xFDA
 55107                           fsr2l	equ	0xFD9
 55108                           status	equ	0xFD8
 55109                           
 55110 ;; *************** function _USBCtrlTrfOutHandler *****************
 55111 ;; Defined at:
 55112 ;;		line 2540 in file "usb_device.c"
 55113 ;; Parameters:    Size  Location     Type
 55114 ;;		None
 55115 ;; Auto vars:     Size  Location     Type
 55116 ;;		None
 55117 ;; Return value:  Size  Location     Type
 55118 ;;                  1    wreg      void 
 55119 ;; Registers used:
 55120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55121 ;; Tracked objects:
 55122 ;;		On entry : 0/0
 55123 ;;		On exit  : 0/0
 55124 ;;		Unchanged: 0/0
 55125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55130 ;;Total ram usage:        0 bytes
 55131 ;; Hardware stack levels used:    1
 55132 ;; Hardware stack levels required when called:    2
 55133 ;; This function calls:
 55134 ;;		_USBCtrlTrfRxService
 55135 ;; This function is called by:
 55136 ;;		_USBCtrlEPService
 55137 ;; This function uses a non-reentrant model
 55138 ;;
 55139                           
 55140                           	psect	text236
 55141  01483E                     __ptext236:
 55142                           	opt stack 0
 55143  01483E                     _USBCtrlTrfOutHandler:
 55144                           	opt stack 13
 55145                           
 55146                           ;usb_device.c: 2542: if(controlTransferState == 2)
 55147                           
 55148                           ;incstack = 0
 55149  01483E  0E02               	movlw	2
 55150  014840  0101               	movlb	1	; () banked
 55151  014842  1964               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55152  014844  A4D8               	btfss	status,2,c
 55153  014846  D003               	goto	i2l332
 55154                           
 55155                           ; BSR set to: 1
 55156                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 55157  014848  EC7B  F088         	call	_USBCtrlTrfRxService	;wreg free
 55158                           
 55159                           ;usb_device.c: 2545: }
 55160  01484C  0012               	return	
 55161  01484E                     i2l332:
 55162                           
 55163                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 55164  01484E  0E00               	movlw	0
 55165  014850  0101               	movlb	1	; () banked
 55166  014852  6F64               	movwf	_controlTransferState& (0+255),b	;volatile
 55167                           
 55168                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 55169  014854  5160               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 55170  014856  A4D8               	btfss	status,2,c
 55171  014858  D01F               	goto	i2l334
 55172                           
 55173                           ; BSR set to: 1
 55174                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 55175  01485A  EE20 F001          	lfsr	2,1
 55176  01485E  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55177  014860  26D9               	addwf	fsr2l,f,c
 55178  014862  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55179  014864  22DA               	addwfc	fsr2h,f,c
 55180  014866  0E08               	movlw	8
 55181  014868  6EDF               	movwf	indf2,c
 55182                           
 55183                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55184  01486A  EE20 F002          	lfsr	2,2
 55185  01486E  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55186  014870  26D9               	addwf	fsr2l,f,c
 55187  014872  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55188  014874  22DA               	addwfc	fsr2h,f,c
 55189  014876  0E30               	movlw	48
 55190  014878  6EDE               	movwf	postinc2,c
 55191  01487A  0E0D               	movlw	13
 55192  01487C  6EDD               	movwf	postdec2,c
 55193                           
 55194                           ; BSR set to: 1
 55195                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 55196  01487E  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55197  014882  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55198  014886  0E0C               	movlw	12
 55199  014888  6EDF               	movwf	indf2,c
 55200                           
 55201                           ; BSR set to: 1
 55202                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55203  01488A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55204  01488E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55205  014892  0E00               	movlw	0
 55206  014894  8EDB               	bsf	plusw2,7,c
 55207                           
 55208                           ;usb_device.c: 2563: }
 55209  014896  0012               	return	
 55210  014898                     i2l334:
 55211                           
 55212                           ; BSR set to: 1
 55213                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 55214                           
 55215                           ; BSR set to: 1
 55216  014898  0E00               	movlw	0
 55217  01489A  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55218                           
 55219                           ; BSR set to: 1
 55220  01489C  0012               	return	
 55221  01489E                     __end_of_USBCtrlTrfOutHandler:
 55222                           	opt stack 0
 55223                           tosu	equ	0xFFF
 55224                           tosh	equ	0xFFE
 55225                           tosl	equ	0xFFD
 55226                           pclatu	equ	0xFFB
 55227                           pclath	equ	0xFFA
 55228                           tblptru	equ	0xFF8
 55229                           tblptrh	equ	0xFF7
 55230                           tblptrl	equ	0xFF6
 55231                           tablat	equ	0xFF5
 55232                           prodh	equ	0xFF4
 55233                           prodl	equ	0xFF3
 55234                           intcon	equ	0xFF2
 55235                           indf0	equ	0xFEF
 55236                           postinc0	equ	0xFEE
 55237                           fsr0h	equ	0xFEA
 55238                           fsr0l	equ	0xFE9
 55239                           wreg	equ	0xFE8
 55240                           indf1	equ	0xFE7
 55241                           postinc1	equ	0xFE6
 55242                           postdec1	equ	0xFE5
 55243                           plusw1	equ	0xFE3
 55244                           fsr1h	equ	0xFE2
 55245                           fsr1l	equ	0xFE1
 55246                           indf2	equ	0xFDF
 55247                           postinc2	equ	0xFDE
 55248                           postdec2	equ	0xFDD
 55249                           plusw2	equ	0xFDB
 55250                           fsr2h	equ	0xFDA
 55251                           fsr2l	equ	0xFD9
 55252                           status	equ	0xFD8
 55253                           
 55254 ;; *************** function _USBCtrlTrfRxService *****************
 55255 ;; Defined at:
 55256 ;;		line 1854 in file "usb_device.c"
 55257 ;; Parameters:    Size  Location     Type
 55258 ;;		None
 55259 ;; Auto vars:     Size  Location     Type
 55260 ;;  byteToRead      1    1[COMRAM] unsigned char 
 55261 ;;  i               1    0[COMRAM] unsigned char 
 55262 ;; Return value:  Size  Location     Type
 55263 ;;                  1    wreg      void 
 55264 ;; Registers used:
 55265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55266 ;; Tracked objects:
 55267 ;;		On entry : 0/0
 55268 ;;		On exit  : 0/0
 55269 ;;		Unchanged: 0/0
 55270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55275 ;;Total ram usage:        2 bytes
 55276 ;; Hardware stack levels used:    1
 55277 ;; Hardware stack levels required when called:    1
 55278 ;; This function calls:
 55279 ;;		_USBCtrlEPAllowStatusStage
 55280 ;; This function is called by:
 55281 ;;		_USBCtrlTrfOutHandler
 55282 ;; This function uses a non-reentrant model
 55283 ;;
 55284                           
 55285                           	psect	text237
 55286  0110F6                     __ptext237:
 55287                           	opt stack 0
 55288  0110F6                     _USBCtrlTrfRxService:
 55289                           	opt stack 13
 55290                           
 55291                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 55292                           
 55293                           ;incstack = 0
 55294  0110F6  EE20 F001          	lfsr	2,1
 55295  0110FA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55296  0110FC  26D9               	addwf	fsr2l,f,c
 55297  0110FE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55298  011100  22DA               	addwfc	fsr2h,f,c
 55299  011102  50DF               	movf	indf2,w,c
 55300  011104  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 55301                           
 55302                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 55303  011106  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55304  011108  0101               	movlb	1	; () banked
 55305  01110A  5D04               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 55306  01110C  0E00               	movlw	0
 55307  01110E  5905               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 55308  011110  A0D8               	btfss	status,0,c
 55309                           
 55310                           ; BSR set to: 1
 55311                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 55312  011112  C104  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 55313                           
 55314                           ; BSR set to: 1
 55315                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 55316                           
 55317                           ; BSR set to: 1
 55318  011116  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55319  011118  5F04               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 55320  01111A  0E00               	movlw	0
 55321  01111C  5B05               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 55322                           
 55323                           ; BSR set to: 1
 55324                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 55325  01111E  0E00               	movlw	0
 55326  011120  6E01               	movwf	USBCtrlTrfRxService@i,c
 55327  011122  D011               	goto	i2l260
 55328  011124                     
 55329                           ; BSR set to: 1
 55330                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 55331                           
 55332                           ; BSR set to: 1
 55333  011124  5001               	movf	USBCtrlTrfRxService@i,w,c
 55334  011126  0D01               	mullw	1
 55335  011128  0E38               	movlw	56
 55336  01112A  24F3               	addwf	prodl,w,c
 55337  01112C  6ED9               	movwf	fsr2l,c
 55338  01112E  0E0D               	movlw	13
 55339  011130  20F4               	addwfc	prodh,w,c
 55340  011132  6EDA               	movwf	fsr2h,c
 55341  011134  C100  FFE1         	movff	_outPipes,fsr1l	;volatile
 55342  011138  C101  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 55343  01113C  CFDF FFE7          	movff	indf2,indf1
 55344                           
 55345                           ; BSR set to: 1
 55346  011140  4B00               	infsnz	_outPipes& (0+255),f,b	;volatile
 55347  011142  2B01               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 55348                           
 55349                           ; BSR set to: 1
 55350  011144  2A01               	incf	USBCtrlTrfRxService@i,f,c
 55351  011146                     i2l260:
 55352                           
 55353                           ; BSR set to: 1
 55354                           
 55355                           ; BSR set to: 1
 55356  011146  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55357  011148  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 55358  01114A  A0D8               	btfss	status,0,c
 55359  01114C  D7EB               	goto	i2l261
 55360                           
 55361                           ; BSR set to: 1
 55362                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 55363                           
 55364                           ; BSR set to: 1
 55365  01114E  5104               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 55366  011150  1105               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 55367  011152  B4D8               	btfsc	status,2,c
 55368  011154  D032               	goto	i2l263
 55369                           
 55370                           ; BSR set to: 1
 55371                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 55372  011156  EE20 F001          	lfsr	2,1
 55373  01115A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55374  01115C  26D9               	addwf	fsr2l,f,c
 55375  01115E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55376  011160  22DA               	addwfc	fsr2h,f,c
 55377  011162  0E08               	movlw	8
 55378  011164  6EDF               	movwf	indf2,c
 55379                           
 55380                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 55381  011166  EE20 F002          	lfsr	2,2
 55382  01116A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55383  01116C  26D9               	addwf	fsr2l,f,c
 55384  01116E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55385  011170  22DA               	addwfc	fsr2h,f,c
 55386  011172  0E38               	movlw	56
 55387  011174  6EDE               	movwf	postinc2,c
 55388  011176  0E0D               	movlw	13
 55389  011178  6EDD               	movwf	postdec2,c
 55390                           
 55391                           ; BSR set to: 1
 55392                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 55393  01117A  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55394  01117E  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55395  011182  BCDF               	btfsc	indf2,6,c
 55396  011184  D00D               	goto	i2l264
 55397                           
 55398                           ; BSR set to: 1
 55399                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 55400  011186  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55401  01118A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55402  01118E  0E48               	movlw	72
 55403  011190  6EDF               	movwf	indf2,c
 55404                           
 55405                           ; BSR set to: 1
 55406                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55407  011192  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55408  011196  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55409  01119A  0E00               	movlw	0
 55410  01119C  8EDB               	bsf	plusw2,7,c
 55411                           
 55412                           ;usb_device.c: 1891: }
 55413  01119E  0012               	return	
 55414  0111A0                     i2l264:
 55415                           
 55416                           ; BSR set to: 1
 55417                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 55418                           
 55419                           ; BSR set to: 1
 55420  0111A0  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55421  0111A4  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55422  0111A8  0E08               	movlw	8
 55423  0111AA  6EDF               	movwf	indf2,c
 55424                           
 55425                           ; BSR set to: 1
 55426                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55427  0111AC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55428  0111B0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55429  0111B4  0E00               	movlw	0
 55430  0111B6  8EDB               	bsf	plusw2,7,c
 55431                           
 55432                           ; BSR set to: 1
 55433                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 55434  0111B8  0012               	return	
 55435  0111BA                     i2l263:
 55436                           
 55437                           ; BSR set to: 1
 55438                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 55439                           
 55440                           ; BSR set to: 1
 55441  0111BA  EE20 F001          	lfsr	2,1
 55442  0111BE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55443  0111C0  26D9               	addwf	fsr2l,f,c
 55444  0111C2  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55445  0111C4  22DA               	addwfc	fsr2h,f,c
 55446  0111C6  0E08               	movlw	8
 55447  0111C8  6EDF               	movwf	indf2,c
 55448                           
 55449                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55450  0111CA  EE20 F002          	lfsr	2,2
 55451  0111CE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55452  0111D0  26D9               	addwf	fsr2l,f,c
 55453  0111D2  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55454  0111D4  22DA               	addwfc	fsr2h,f,c
 55455  0111D6  0E30               	movlw	48
 55456  0111D8  6EDE               	movwf	postinc2,c
 55457  0111DA  0E0D               	movlw	13
 55458  0111DC  6EDD               	movwf	postdec2,c
 55459                           
 55460                           ; BSR set to: 1
 55461                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 55462  0111DE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55463  0111E2  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55464  0111E6  0E04               	movlw	4
 55465  0111E8  6EDF               	movwf	indf2,c
 55466                           
 55467                           ; BSR set to: 1
 55468                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55469  0111EA  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55470  0111EE  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55471  0111F2  0E00               	movlw	0
 55472  0111F4  8EDB               	bsf	plusw2,7,c
 55473                           
 55474                           ; BSR set to: 1
 55475                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 55476                           
 55477                           ; BSR set to: 1
 55478                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 55479  0111F6  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 55480                           
 55481                           ; BSR set to: 1
 55482                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 55483  0111F8  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 55484  0111FA  A4D8               	btfss	status,2,c
 55485  0111FC  0012               	return	
 55486                           
 55487                           ; BSR set to: 1
 55488                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 55489  0111FE  ECC2  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 55490  011202  0012               	return	
 55491  011204                     __end_of_USBCtrlTrfRxService:
 55492                           	opt stack 0
 55493                           tosu	equ	0xFFF
 55494                           tosh	equ	0xFFE
 55495                           tosl	equ	0xFFD
 55496                           pclatu	equ	0xFFB
 55497                           pclath	equ	0xFFA
 55498                           tblptru	equ	0xFF8
 55499                           tblptrh	equ	0xFF7
 55500                           tblptrl	equ	0xFF6
 55501                           tablat	equ	0xFF5
 55502                           prodh	equ	0xFF4
 55503                           prodl	equ	0xFF3
 55504                           intcon	equ	0xFF2
 55505                           indf0	equ	0xFEF
 55506                           postinc0	equ	0xFEE
 55507                           fsr0h	equ	0xFEA
 55508                           fsr0l	equ	0xFE9
 55509                           wreg	equ	0xFE8
 55510                           indf1	equ	0xFE7
 55511                           postinc1	equ	0xFE6
 55512                           postdec1	equ	0xFE5
 55513                           plusw1	equ	0xFE3
 55514                           fsr1h	equ	0xFE2
 55515                           fsr1l	equ	0xFE1
 55516                           indf2	equ	0xFDF
 55517                           postinc2	equ	0xFDE
 55518                           postdec2	equ	0xFDD
 55519                           plusw2	equ	0xFDB
 55520                           fsr2h	equ	0xFDA
 55521                           fsr2l	equ	0xFD9
 55522                           status	equ	0xFD8
 55523                           
 55524 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 55525 ;; Defined at:
 55526 ;;		line 1418 in file "usb_device.c"
 55527 ;; Parameters:    Size  Location     Type
 55528 ;;		None
 55529 ;; Auto vars:     Size  Location     Type
 55530 ;;		None
 55531 ;; Return value:  Size  Location     Type
 55532 ;;                  1    wreg      void 
 55533 ;; Registers used:
 55534 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55535 ;; Tracked objects:
 55536 ;;		On entry : 0/0
 55537 ;;		On exit  : 0/0
 55538 ;;		Unchanged: 0/0
 55539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55544 ;;Total ram usage:        0 bytes
 55545 ;; Hardware stack levels used:    1
 55546 ;; This function calls:
 55547 ;;		Nothing
 55548 ;; This function is called by:
 55549 ;;		_USBDeviceTasks
 55550 ;;		_USBCtrlEPServiceComplete
 55551 ;;		_USBCtrlTrfRxService
 55552 ;; This function uses a non-reentrant model
 55553 ;;
 55554                           
 55555                           	psect	text238
 55556  012B84                     __ptext238:
 55557                           	opt stack 0
 55558  012B84                     _USBCtrlEPAllowStatusStage:
 55559                           	opt stack 13
 55560                           
 55561                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 55562                           
 55563                           ;incstack = 0
 55564  012B84  0101               	movlb	1	; () banked
 55565  012B86  515D               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 55566  012B88  A4D8               	btfss	status,2,c
 55567  012B8A  0012               	return	
 55568                           
 55569                           ; BSR set to: 1
 55570                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 55571  012B8C  0E01               	movlw	1
 55572  012B8E  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 55573                           
 55574                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 55575  012B90  515C               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 55576  012B92  A4D8               	btfss	status,2,c
 55577  012B94  0012               	return	
 55578                           
 55579                           ; BSR set to: 1
 55580                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 55581  012B96  0E01               	movlw	1
 55582  012B98  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 55583                           
 55584                           ; BSR set to: 1
 55585                           ;usb_device.c: 1434: if(controlTransferState == 2)
 55586  012B9A  0E02               	movlw	2
 55587  012B9C  1964               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55588  012B9E  A4D8               	btfss	status,2,c
 55589  012BA0  D015               	goto	i2l214
 55590                           
 55591                           ; BSR set to: 1
 55592                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 55593  012BA2  EE20 F001          	lfsr	2,1
 55594  012BA6  5109               	movf	_pBDTEntryIn& (0+255),w,b
 55595  012BA8  26D9               	addwf	fsr2l,f,c
 55596  012BAA  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55597  012BAC  22DA               	addwfc	fsr2h,f,c
 55598  012BAE  0E00               	movlw	0
 55599  012BB0  6EDF               	movwf	indf2,c
 55600                           
 55601                           ; BSR set to: 1
 55602                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 55603  012BB2  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55604  012BB6  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55605  012BBA  0E48               	movlw	72
 55606  012BBC  6EDF               	movwf	indf2,c
 55607                           
 55608                           ; BSR set to: 1
 55609                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55610  012BBE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55611  012BC2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55612  012BC6  0E00               	movlw	0
 55613  012BC8  8EDB               	bsf	plusw2,7,c
 55614                           
 55615                           ;usb_device.c: 1439: }
 55616  012BCA  0012               	return	
 55617  012BCC                     i2l214:
 55618                           
 55619                           ; BSR set to: 1
 55620                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 55621                           
 55622                           ; BSR set to: 1
 55623  012BCC  0564               	decf	_controlTransferState& (0+255),w,b	;volatile
 55624  012BCE  A4D8               	btfss	status,2,c
 55625  012BD0  0012               	return	
 55626                           
 55627                           ; BSR set to: 1
 55628                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 55629  012BD2  0E00               	movlw	0
 55630  012BD4  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55631                           
 55632                           ; BSR set to: 1
 55633                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 55634  012BD6  EE20 F001          	lfsr	2,1
 55635  012BDA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55636  012BDC  26D9               	addwf	fsr2l,f,c
 55637  012BDE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55638  012BE0  22DA               	addwfc	fsr2h,f,c
 55639  012BE2  0E08               	movlw	8
 55640  012BE4  6EDF               	movwf	indf2,c
 55641                           
 55642                           ; BSR set to: 1
 55643                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 55644  012BE6  EE20 F002          	lfsr	2,2
 55645  012BEA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55646  012BEC  26D9               	addwf	fsr2l,f,c
 55647  012BEE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55648  012BF0  22DA               	addwfc	fsr2h,f,c
 55649  012BF2  0E30               	movlw	48
 55650  012BF4  6EDE               	movwf	postinc2,c
 55651  012BF6  0E0D               	movlw	13
 55652  012BF8  6EDD               	movwf	postdec2,c
 55653                           
 55654                           ; BSR set to: 1
 55655                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 55656  012BFA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55657  012BFE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55658  012C02  0E04               	movlw	4
 55659  012C04  6EDF               	movwf	indf2,c
 55660                           
 55661                           ; BSR set to: 1
 55662                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 55663  012C06  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55664  012C0A  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55665  012C0E  0E00               	movlw	0
 55666  012C10  8EDB               	bsf	plusw2,7,c
 55667                           
 55668                           ; BSR set to: 1
 55669                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 55670  012C12  0E01               	movlw	1
 55671  012C14  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55672                           
 55673                           ; BSR set to: 1
 55674                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 55675  012C16  EE20 F001          	lfsr	2,1
 55676  012C1A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55677  012C1C  26D9               	addwf	fsr2l,f,c
 55678  012C1E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55679  012C20  22DA               	addwfc	fsr2h,f,c
 55680  012C22  0E08               	movlw	8
 55681  012C24  6EDF               	movwf	indf2,c
 55682                           
 55683                           ; BSR set to: 1
 55684                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55685  012C26  EE20 F002          	lfsr	2,2
 55686  012C2A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55687  012C2C  26D9               	addwf	fsr2l,f,c
 55688  012C2E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55689  012C30  22DA               	addwfc	fsr2h,f,c
 55690  012C32  0E30               	movlw	48
 55691  012C34  6EDE               	movwf	postinc2,c
 55692  012C36  0E0D               	movlw	13
 55693  012C38  6EDD               	movwf	postdec2,c
 55694                           
 55695                           ; BSR set to: 1
 55696                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 55697  012C3A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55698  012C3E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55699  012C42  0E80               	movlw	128
 55700  012C44  6EDF               	movwf	indf2,c
 55701                           
 55702                           ; BSR set to: 1
 55703                           
 55704                           ; BSR set to: 1
 55705                           
 55706                           ; BSR set to: 1
 55707  012C46  0012               	return	
 55708  012C48                     __end_of_USBCtrlEPAllowStatusStage:
 55709                           	opt stack 0
 55710                           tosu	equ	0xFFF
 55711                           tosh	equ	0xFFE
 55712                           tosl	equ	0xFFD
 55713                           pclatu	equ	0xFFB
 55714                           pclath	equ	0xFFA
 55715                           tblptru	equ	0xFF8
 55716                           tblptrh	equ	0xFF7
 55717                           tblptrl	equ	0xFF6
 55718                           tablat	equ	0xFF5
 55719                           prodh	equ	0xFF4
 55720                           prodl	equ	0xFF3
 55721                           intcon	equ	0xFF2
 55722                           indf0	equ	0xFEF
 55723                           postinc0	equ	0xFEE
 55724                           fsr0h	equ	0xFEA
 55725                           fsr0l	equ	0xFE9
 55726                           wreg	equ	0xFE8
 55727                           indf1	equ	0xFE7
 55728                           postinc1	equ	0xFE6
 55729                           postdec1	equ	0xFE5
 55730                           plusw1	equ	0xFE3
 55731                           fsr1h	equ	0xFE2
 55732                           fsr1l	equ	0xFE1
 55733                           indf2	equ	0xFDF
 55734                           postinc2	equ	0xFDE
 55735                           postdec2	equ	0xFDD
 55736                           plusw2	equ	0xFDB
 55737                           fsr2h	equ	0xFDA
 55738                           fsr2l	equ	0xFD9
 55739                           status	equ	0xFD8
 55740                           
 55741 ;; *************** function _USBCtrlTrfInHandler *****************
 55742 ;; Defined at:
 55743 ;;		line 2594 in file "usb_device.c"
 55744 ;; Parameters:    Size  Location     Type
 55745 ;;		None
 55746 ;; Auto vars:     Size  Location     Type
 55747 ;;  lastDTS         1    1[COMRAM] unsigned char 
 55748 ;; Return value:  Size  Location     Type
 55749 ;;                  1    wreg      void 
 55750 ;; Registers used:
 55751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 55752 ;; Tracked objects:
 55753 ;;		On entry : 0/0
 55754 ;;		On exit  : 0/0
 55755 ;;		Unchanged: 0/0
 55756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55761 ;;Total ram usage:        1 bytes
 55762 ;; Hardware stack levels used:    1
 55763 ;; Hardware stack levels required when called:    1
 55764 ;; This function calls:
 55765 ;;		_USBCtrlTrfTxService
 55766 ;; This function is called by:
 55767 ;;		_USBCtrlEPService
 55768 ;; This function uses a non-reentrant model
 55769 ;;
 55770                           
 55771                           	psect	text239
 55772  012C48                     __ptext239:
 55773                           	opt stack 0
 55774  012C48                     _USBCtrlTrfInHandler:
 55775                           	opt stack 14
 55776                           
 55777                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 55778                           
 55779                           ; BSR set to: 1
 55780                           ;incstack = 0
 55781  012C48  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55782  012C4C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55783  012C50  0101               	movlb	1	; () banked
 55784  012C52  0E00               	movlw	0
 55785  012C54  BCDF               	btfsc	indf2,6,c
 55786  012C56  0E01               	movlw	1
 55787  012C58  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 55788                           
 55789                           ; BSR set to: 1
 55790                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 55791  012C5A  0E04               	movlw	4
 55792  012C5C  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 55793  012C5E  6F09               	movwf	_pBDTEntryIn& (0+255),b
 55794  012C60  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55795  012C62  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 55796                           
 55797                           ; BSR set to: 1
 55798                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 55799  012C64  0E08               	movlw	8
 55800  012C66  185D               	xorwf	_USBDeviceState,w,c	;volatile
 55801  012C68  A4D8               	btfss	status,2,c
 55802  012C6A  D00C               	goto	i2l341
 55803                           
 55804                           ; BSR set to: 1
 55805                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 55806  012C6C  010D               	movlb	13	; () banked
 55807  012C6E  5132               	movf	50,w,b	;volatile
 55808  012C70  0B7F               	andlw	127
 55809  012C72  010F               	movlb	15	; () banked
 55810  012C74  6F38               	movwf	56,b	;volatile
 55811                           
 55812                           ; BSR set to: 15
 55813                           ;usb_device.c: 2609: if(UADDR != 0u)
 55814  012C76  5138               	movf	56,w,b	;volatile
 55815  012C78  B4D8               	btfsc	status,2,c
 55816  012C7A  D002               	goto	i2l340
 55817                           
 55818                           ; BSR set to: 15
 55819                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 55820  012C7C  0E10               	movlw	16
 55821  012C7E  D001               	goto	L84
 55822  012C80                     i2l340:
 55823                           
 55824                           ; BSR set to: 15
 55825                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 55826                           
 55827                           ; BSR set to: 15
 55828  012C80  0E04               	movlw	4
 55829  012C82                     L84:
 55830  012C82  6E5D               	movwf	_USBDeviceState,c	;volatile
 55831  012C84                     i2l341:
 55832                           
 55833                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 55834                           
 55835                           ; BSR set to: 15
 55836                           
 55837                           ; BSR set to: 15
 55838  012C84  0101               	movlb	1	; () banked
 55839  012C86  0564               	decf	_controlTransferState& (0+255),w,b	;volatile
 55840  012C88  A4D8               	btfss	status,2,c
 55841  012C8A  D03B               	goto	i2l342
 55842                           
 55843                           ; BSR set to: 1
 55844                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 55845  012C8C  EE20 F002          	lfsr	2,2
 55846  012C90  5109               	movf	_pBDTEntryIn& (0+255),w,b
 55847  012C92  26D9               	addwf	fsr2l,f,c
 55848  012C94  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55849  012C96  22DA               	addwfc	fsr2h,f,c
 55850  012C98  0E38               	movlw	56
 55851  012C9A  6EDE               	movwf	postinc2,c
 55852  012C9C  0E0D               	movlw	13
 55853  012C9E  6EDD               	movwf	postdec2,c
 55854                           
 55855                           ; BSR set to: 1
 55856                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 55857  012CA0  EC23  F094         	call	_USBCtrlTrfTxService	;wreg free
 55858                           
 55859                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 55860  012CA4  0E02               	movlw	2
 55861  012CA6  0101               	movlb	1	; () banked
 55862  012CA8  1965               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 55863  012CAA  A4D8               	btfss	status,2,c
 55864  012CAC  D00D               	goto	i2l343
 55865                           
 55866                           ; BSR set to: 1
 55867                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 55868  012CAE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55869  012CB2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55870  012CB6  0E04               	movlw	4
 55871  012CB8  6EDF               	movwf	indf2,c
 55872                           
 55873                           ; BSR set to: 1
 55874                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55875  012CBA  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55876  012CBE  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55877  012CC2  0E00               	movlw	0
 55878  012CC4  8EDB               	bsf	plusw2,7,c
 55879                           
 55880                           ;usb_device.c: 2635: }
 55881  012CC6  0012               	return	
 55882  012CC8                     i2l343:
 55883                           
 55884                           ; BSR set to: 1
 55885                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 55886                           
 55887                           ; BSR set to: 1
 55888  012CC8  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 55889  012CCA  A4D8               	btfss	status,2,c
 55890  012CCC  D00D               	goto	i2l345
 55891                           
 55892                           ; BSR set to: 1
 55893                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 55894  012CCE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55895  012CD2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55896  012CD6  0E48               	movlw	72
 55897  012CD8  6EDF               	movwf	indf2,c
 55898                           
 55899                           ; BSR set to: 1
 55900                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55901  012CDA  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55902  012CDE  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55903  012CE2  0E00               	movlw	0
 55904  012CE4  8EDB               	bsf	plusw2,7,c
 55905                           
 55906                           ;usb_device.c: 2642: }
 55907  012CE6  0012               	return	
 55908  012CE8                     i2l345:
 55909                           
 55910                           ; BSR set to: 1
 55911                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 55912                           
 55913                           ; BSR set to: 1
 55914  012CE8  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55915  012CEC  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55916  012CF0  0E08               	movlw	8
 55917  012CF2  6EDF               	movwf	indf2,c
 55918                           
 55919                           ; BSR set to: 1
 55920                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55921  012CF4  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55922  012CF8  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55923  012CFC  0E00               	movlw	0
 55924  012CFE  8EDB               	bsf	plusw2,7,c
 55925                           
 55926                           ; BSR set to: 1
 55927                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 55928                           
 55929                           ; BSR set to: 1
 55930  012D00  0012               	return	
 55931  012D02                     i2l342:
 55932                           
 55933                           ; BSR set to: 1
 55934                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 55935  012D02  BF03               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 55936                           
 55937                           ; BSR set to: 1
 55938                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 55939                           
 55940                           ; BSR set to: 1
 55941                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 55942  012D04  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 55943                           
 55944                           ; BSR set to: 1
 55945                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 55946                           
 55947                           ; BSR set to: 1
 55948  012D06  0E00               	movlw	0
 55949  012D08  6F64               	movwf	_controlTransferState& (0+255),b	;volatile
 55950  012D0A  0012               	return	
 55951  012D0C                     __end_of_USBCtrlTrfInHandler:
 55952                           	opt stack 0
 55953                           tosu	equ	0xFFF
 55954                           tosh	equ	0xFFE
 55955                           tosl	equ	0xFFD
 55956                           pclatu	equ	0xFFB
 55957                           pclath	equ	0xFFA
 55958                           tblptru	equ	0xFF8
 55959                           tblptrh	equ	0xFF7
 55960                           tblptrl	equ	0xFF6
 55961                           tablat	equ	0xFF5
 55962                           prodh	equ	0xFF4
 55963                           prodl	equ	0xFF3
 55964                           intcon	equ	0xFF2
 55965                           indf0	equ	0xFEF
 55966                           postinc0	equ	0xFEE
 55967                           fsr0h	equ	0xFEA
 55968                           fsr0l	equ	0xFE9
 55969                           wreg	equ	0xFE8
 55970                           indf1	equ	0xFE7
 55971                           postinc1	equ	0xFE6
 55972                           postdec1	equ	0xFE5
 55973                           plusw1	equ	0xFE3
 55974                           fsr1h	equ	0xFE2
 55975                           fsr1l	equ	0xFE1
 55976                           indf2	equ	0xFDF
 55977                           postinc2	equ	0xFDE
 55978                           postdec2	equ	0xFDD
 55979                           plusw2	equ	0xFDB
 55980                           fsr2h	equ	0xFDA
 55981                           fsr2l	equ	0xFD9
 55982                           status	equ	0xFD8
 55983                           
 55984 ;; *************** function _USBCtrlTrfTxService *****************
 55985 ;; Defined at:
 55986 ;;		line 1773 in file "usb_device.c"
 55987 ;; Parameters:    Size  Location     Type
 55988 ;;		None
 55989 ;; Auto vars:     Size  Location     Type
 55990 ;;  byteToSend      1    0[COMRAM] unsigned char 
 55991 ;; Return value:  Size  Location     Type
 55992 ;;                  1    wreg      void 
 55993 ;; Registers used:
 55994 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 55995 ;; Tracked objects:
 55996 ;;		On entry : 0/0
 55997 ;;		On exit  : 0/0
 55998 ;;		Unchanged: 0/0
 55999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56004 ;;Total ram usage:        1 bytes
 56005 ;; Hardware stack levels used:    1
 56006 ;; This function calls:
 56007 ;;		Nothing
 56008 ;; This function is called by:
 56009 ;;		_USBCtrlEPAllowDataStage
 56010 ;;		_USBCtrlTrfInHandler
 56011 ;; This function uses a non-reentrant model
 56012 ;;
 56013                           
 56014                           	psect	text240
 56015  012846                     __ptext240:
 56016                           	opt stack 0
 56017  012846                     _USBCtrlTrfTxService:
 56018                           	opt stack 12
 56019                           
 56020                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 56021                           
 56022                           ; BSR set to: 1
 56023                           ;incstack = 0
 56024  012846  0E08               	movlw	8
 56025  012848  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 56026                           
 56027                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 56028  01284A  5058               	movf	_inPipes+5,w,c	;volatile
 56029  01284C  E111               	bnz	i2l12976
 56030  01284E  0E08               	movlw	8
 56031  012850  5C57               	subwf	_inPipes+4,w,c	;volatile
 56032  012852  B0D8               	btfsc	status,0,c
 56033  012854  D00D               	goto	i2l247
 56034                           
 56035                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 56036  012856  C057  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 56037                           
 56038                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 56039  01285A  0101               	movlb	1	; () banked
 56040  01285C  5165               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 56041  01285E  A4D8               	btfss	status,2,c
 56042  012860  D002               	goto	i2l245
 56043                           
 56044                           ; BSR set to: 1
 56045                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 56046  012862  0E01               	movlw	1
 56047  012864  D004               	goto	L85
 56048  012866                     i2l245:
 56049                           
 56050                           ; BSR set to: 1
 56051                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 56052                           
 56053                           ; BSR set to: 1
 56054  012866  0565               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 56055  012868  A4D8               	btfss	status,2,c
 56056  01286A  D002               	goto	i2l247
 56057                           
 56058                           ; BSR set to: 1
 56059                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 56060  01286C  0E02               	movlw	2
 56061  01286E                     L85:
 56062  01286E  6F65               	movwf	_shortPacketStatus& (0+255),b	;volatile
 56063  012870                     i2l247:
 56064  012870                     i2l12976:
 56065                           
 56066                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 56067  012870  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56068  012872  5E57               	subwf	_inPipes+4,f,c	;volatile
 56069  012874  0E00               	movlw	0
 56070  012876  5A58               	subwfb	_inPipes+5,f,c	;volatile
 56071                           
 56072                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 56073  012878  0101               	movlb	1	; () banked
 56074  01287A  EE20 F001          	lfsr	2,1
 56075  01287E  5109               	movf	_pBDTEntryIn& (0+255),w,b
 56076  012880  26D9               	addwf	fsr2l,f,c
 56077  012882  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56078  012884  22DA               	addwfc	fsr2h,f,c
 56079  012886  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 56080                           
 56081                           ; BSR set to: 1
 56082                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 56083  01288A  0E38               	movlw	56
 56084  01288C  6F45               	movwf	_pDst& (0+255),b
 56085  01288E  0E0D               	movlw	13
 56086  012890  6F46               	movwf	(_pDst+1)& (0+255),b
 56087                           
 56088                           ; BSR set to: 1
 56089                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 56090  012892  A056               	btfss	_inPipes+3,0,c	;volatile
 56091  012894  D01D               	goto	i2l249
 56092  012896  D03C               	goto	i2l253
 56093  012898                     
 56094                           ; BSR set to: 1
 56095                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 56096                           
 56097                           ; BSR set to: 1
 56098  012898  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 56099  01289C  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56100  0128A0  0E00               	movlw	low (__mediumconst shr (0+16))
 56101  0128A2  6EF8               	movwf	tblptru,c
 56102  0128A4  C145  FFD9         	movff	_pDst,fsr2l
 56103  0128A8  C146  FFDA         	movff	_pDst+1,fsr2h
 56104  0128AC  0E0E               	movlw	(high __ramtop+-1)
 56105  0128AE  64F7               	cpfsgt	tblptrh,c
 56106  0128B0  D003               	bra	i2u1105_47
 56107  0128B2  0008               	tblrd		*
 56108  0128B4  50F5               	movf	tablat,w,c
 56109  0128B6  D005               	bra	i2u1105_40
 56110  0128B8                     i2u1105_47:
 56111  0128B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 56112  0128BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 56113  0128C0  50EF               	movf	indf0,w,c
 56114  0128C2                     i2u1105_40:
 56115  0128C2  6EDF               	movwf	indf2,c
 56116  0128C4  4A53               	infsnz	_inPipes,f,c	;volatile
 56117  0128C6  2A54               	incf	_inPipes+1,f,c	;volatile
 56118  0128C8  0101               	movlb	1	; () banked
 56119  0128CA  4B45               	infsnz	_pDst& (0+255),f,b
 56120  0128CC  2B46               	incf	(_pDst+1)& (0+255),f,b
 56121                           
 56122                           ; BSR set to: 1
 56123                           ;usb_device.c: 1816: byteToSend--;
 56124  0128CE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56125  0128D0                     i2l249:
 56126                           
 56127                           ; BSR set to: 1
 56128                           
 56129                           ; BSR set to: 1
 56130  0128D0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56131  0128D2  B4D8               	btfsc	status,2,c
 56132  0128D4  0012               	return	
 56133  0128D6  D7E0               	goto	i2l250
 56134  0128D8                     
 56135                           ; BSR set to: 1
 56136                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 56137                           
 56138                           ; BSR set to: 1
 56139  0128D8  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 56140  0128DC  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56141  0128E0  0E00               	movlw	low (__mediumconst shr (0+16))
 56142  0128E2  6EF8               	movwf	tblptru,c
 56143  0128E4  C145  FFD9         	movff	_pDst,fsr2l
 56144  0128E8  C146  FFDA         	movff	_pDst+1,fsr2h
 56145  0128EC  0E0E               	movlw	(high __ramtop+-1)
 56146  0128EE  64F7               	cpfsgt	tblptrh,c
 56147  0128F0  D003               	bra	i2u1107_47
 56148  0128F2  0008               	tblrd		*
 56149  0128F4  50F5               	movf	tablat,w,c
 56150  0128F6  D005               	bra	i2u1107_40
 56151  0128F8                     i2u1107_47:
 56152  0128F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 56153  0128FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 56154  012900  50EF               	movf	indf0,w,c
 56155  012902                     i2u1107_40:
 56156  012902  6EDF               	movwf	indf2,c
 56157  012904  4A53               	infsnz	_inPipes,f,c	;volatile
 56158  012906  2A54               	incf	_inPipes+1,f,c	;volatile
 56159  012908  0101               	movlb	1	; () banked
 56160  01290A  4B45               	infsnz	_pDst& (0+255),f,b
 56161  01290C  2B46               	incf	(_pDst+1)& (0+255),f,b
 56162                           
 56163                           ; BSR set to: 1
 56164                           ;usb_device.c: 1824: byteToSend--;
 56165  01290E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56166  012910                     i2l253:
 56167                           
 56168                           ; BSR set to: 1
 56169                           
 56170                           ; BSR set to: 1
 56171  012910  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56172  012912  B4D8               	btfsc	status,2,c
 56173  012914  0012               	return	
 56174  012916  D7E0               	goto	i2l254
 56175  012918                     __end_of_USBCtrlTrfTxService:
 56176                           	opt stack 0
 56177                           tosu	equ	0xFFF
 56178                           tosh	equ	0xFFE
 56179                           tosl	equ	0xFFD
 56180                           pclatu	equ	0xFFB
 56181                           pclath	equ	0xFFA
 56182                           tblptru	equ	0xFF8
 56183                           tblptrh	equ	0xFF7
 56184                           tblptrl	equ	0xFF6
 56185                           tablat	equ	0xFF5
 56186                           prodh	equ	0xFF4
 56187                           prodl	equ	0xFF3
 56188                           intcon	equ	0xFF2
 56189                           indf0	equ	0xFEF
 56190                           postinc0	equ	0xFEE
 56191                           fsr0h	equ	0xFEA
 56192                           fsr0l	equ	0xFE9
 56193                           wreg	equ	0xFE8
 56194                           indf1	equ	0xFE7
 56195                           postinc1	equ	0xFE6
 56196                           postdec1	equ	0xFE5
 56197                           plusw1	equ	0xFE3
 56198                           fsr1h	equ	0xFE2
 56199                           fsr1l	equ	0xFE1
 56200                           indf2	equ	0xFDF
 56201                           postinc2	equ	0xFDE
 56202                           postdec2	equ	0xFDD
 56203                           plusw2	equ	0xFDB
 56204                           fsr2h	equ	0xFDA
 56205                           fsr2l	equ	0xFD9
 56206                           status	equ	0xFD8
 56207                           tosu	equ	0xFFF
 56208                           tosh	equ	0xFFE
 56209                           tosl	equ	0xFFD
 56210                           pclatu	equ	0xFFB
 56211                           pclath	equ	0xFFA
 56212                           tblptru	equ	0xFF8
 56213                           tblptrh	equ	0xFF7
 56214                           tblptrl	equ	0xFF6
 56215                           tablat	equ	0xFF5
 56216                           prodh	equ	0xFF4
 56217                           prodl	equ	0xFF3
 56218                           intcon	equ	0xFF2
 56219                           indf0	equ	0xFEF
 56220                           postinc0	equ	0xFEE
 56221                           fsr0h	equ	0xFEA
 56222                           fsr0l	equ	0xFE9
 56223                           wreg	equ	0xFE8
 56224                           indf1	equ	0xFE7
 56225                           postinc1	equ	0xFE6
 56226                           postdec1	equ	0xFE5
 56227                           plusw1	equ	0xFE3
 56228                           fsr1h	equ	0xFE2
 56229                           fsr1l	equ	0xFE1
 56230                           indf2	equ	0xFDF
 56231                           postinc2	equ	0xFDE
 56232                           postdec2	equ	0xFDD
 56233                           plusw2	equ	0xFDB
 56234                           fsr2h	equ	0xFDA
 56235                           fsr2l	equ	0xFD9
 56236                           status	equ	0xFD8
 56237                           
 56238                           	psect	text241
 56239  000000                     __ptext241:
 56240                           	opt stack 0
 56241                           tosu	equ	0xFFF
 56242                           tosh	equ	0xFFE
 56243                           tosl	equ	0xFFD
 56244                           pclatu	equ	0xFFB
 56245                           pclath	equ	0xFFA
 56246                           tblptru	equ	0xFF8
 56247                           tblptrh	equ	0xFF7
 56248                           tblptrl	equ	0xFF6
 56249                           tablat	equ	0xFF5
 56250                           prodh	equ	0xFF4
 56251                           prodl	equ	0xFF3
 56252                           intcon	equ	0xFF2
 56253                           indf0	equ	0xFEF
 56254                           postinc0	equ	0xFEE
 56255                           fsr0h	equ	0xFEA
 56256                           fsr0l	equ	0xFE9
 56257                           wreg	equ	0xFE8
 56258                           indf1	equ	0xFE7
 56259                           postinc1	equ	0xFE6
 56260                           postdec1	equ	0xFE5
 56261                           plusw1	equ	0xFE3
 56262                           fsr1h	equ	0xFE2
 56263                           fsr1l	equ	0xFE1
 56264                           indf2	equ	0xFDF
 56265                           postinc2	equ	0xFDE
 56266                           postdec2	equ	0xFDD
 56267                           plusw2	equ	0xFDB
 56268                           fsr2h	equ	0xFDA
 56269                           fsr2l	equ	0xFD9
 56270                           status	equ	0xFD8
 56271                           
 56272                           	psect	rparam
 56273  0000                     tosu	equ	0xFFF
 56274                           tosh	equ	0xFFE
 56275                           tosl	equ	0xFFD
 56276                           pclatu	equ	0xFFB
 56277                           pclath	equ	0xFFA
 56278                           tblptru	equ	0xFF8
 56279                           tblptrh	equ	0xFF7
 56280                           tblptrl	equ	0xFF6
 56281                           tablat	equ	0xFF5
 56282                           prodh	equ	0xFF4
 56283                           prodl	equ	0xFF3
 56284                           intcon	equ	0xFF2
 56285                           indf0	equ	0xFEF
 56286                           postinc0	equ	0xFEE
 56287                           fsr0h	equ	0xFEA
 56288                           fsr0l	equ	0xFE9
 56289                           wreg	equ	0xFE8
 56290                           indf1	equ	0xFE7
 56291                           postinc1	equ	0xFE6
 56292                           postdec1	equ	0xFE5
 56293                           plusw1	equ	0xFE3
 56294                           fsr1h	equ	0xFE2
 56295                           fsr1l	equ	0xFE1
 56296                           indf2	equ	0xFDF
 56297                           postinc2	equ	0xFDE
 56298                           postdec2	equ	0xFDD
 56299                           plusw2	equ	0xFDB
 56300                           fsr2h	equ	0xFDA
 56301                           fsr2l	equ	0xFD9
 56302                           status	equ	0xFD8
 56303                           
 56304                           	psect	temp
 56305  00005F                     btemp:
 56306                           	opt stack 0
 56307  00005F                     	ds	1
 56308  0000                     int$flags	set	btemp
 56309  0000                     wtemp8	set	btemp+1
 56310  0000                     ttemp5	set	btemp+1
 56311  0000                     ttemp6	set	btemp+4
 56312  0000                     ttemp7	set	btemp+8
 56313                           tosu	equ	0xFFF
 56314                           tosh	equ	0xFFE
 56315                           tosl	equ	0xFFD
 56316                           pclatu	equ	0xFFB
 56317                           pclath	equ	0xFFA
 56318                           tblptru	equ	0xFF8
 56319                           tblptrh	equ	0xFF7
 56320                           tblptrl	equ	0xFF6
 56321                           tablat	equ	0xFF5
 56322                           prodh	equ	0xFF4
 56323                           prodl	equ	0xFF3
 56324                           intcon	equ	0xFF2
 56325                           indf0	equ	0xFEF
 56326                           postinc0	equ	0xFEE
 56327                           fsr0h	equ	0xFEA
 56328                           fsr0l	equ	0xFE9
 56329                           wreg	equ	0xFE8
 56330                           indf1	equ	0xFE7
 56331                           postinc1	equ	0xFE6
 56332                           postdec1	equ	0xFE5
 56333                           plusw1	equ	0xFE3
 56334                           fsr1h	equ	0xFE2
 56335                           fsr1l	equ	0xFE1
 56336                           indf2	equ	0xFDF
 56337                           postinc2	equ	0xFDE
 56338                           postdec2	equ	0xFDD
 56339                           plusw2	equ	0xFDB
 56340                           fsr2h	equ	0xFDA
 56341                           fsr2l	equ	0xFD9
 56342                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1577
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      94
    BANK0           160    158     160
    BANK1           256     60     256
    BANK2           256      0     228
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), config(BANK1[40]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), config(BANK1[40]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_save_position@buffer(COMRAM[7]), i2c_eeprom_writeInt16@data(COMRAM[2]), i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_save_position
    _i2c_eeprom_save_position->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    _i2c_eeprom_recover_position->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->__steps_from_degrees
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    __steps_from_degrees->___fldiv
    __steps_from_degrees->___flmul
    ___flge->___xxtofl
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_move_degrees_int->__motor_steps_from_degrees_int
    __motor_steps_from_degrees_int->___fldiv
    __motor_steps_from_degrees_int->___flmul
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_goto_steps
    _motor_divide_jump->_motor_goto_steps
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_move_steps
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___xxtofl->___fltol
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_motor_goto_steps
    _motor_set_zero->__motor_move_back_forth
    __motor_move_back_forth->__motor_schedule_command
    _motor_move_endless->__motor_move_steps
    _motor_goto_steps->__motor_decide_direction
    __motor_decide_direction->__motor_distance_to_limit
    __parse_command_long->__parse_jump_steps
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps
    __parse_jump_steps->_motor_move_steps
    _motor_move_steps->__motor_move_steps
    __motor_move_steps->__motor_distance_to_limit
    __motor_distance_to_limit->___lmul

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  769402
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  401930
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_recover_position
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    9741
                                             49 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_recover_position                          7     7      0   11661
                                             25 BANK0      7     7      0
                    _i2c_eeprom_read
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3647
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   12280
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   12058
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   17356
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   11199
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  232442
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   84268
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6260
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   91065
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   24816
                                             57 BANK0      4     0      4
                __steps_from_degrees
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1878
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) __steps_from_degrees                                  8     4      4   10723
                                             49 BANK0      8     4      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     716
                                             24 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     377
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          12     5      7     377
                                              0 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  118356
                                             72 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
                   _motor_goto_steps
        _motor_increase_manual_speed
             _motor_move_degrees_int
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_move_degrees_int                              10     5      5   20726
                                             57 BANK0     10     5      5
                  __motor_move_steps
      __motor_steps_from_degrees_int
 ---------------------------------------------------------------------------------
 (3) __motor_steps_from_degrees_int                        8     4      4   12986
                                             49 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   34265
                                             62 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   21548
                                             62 BANK0      7     7      0
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    9941
                                             49 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       5     5      0   18281
                                             52 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   46206
                                            102 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8013
                                             61 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7813
                                             49 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2875
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             87 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             63 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   10091
                                             49 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2280
                                             10 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1297
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     223
                                             24 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3220
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3000
                                             28 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  115300
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  115300
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  110500
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   56001
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   54295
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   63705
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   18386
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    8646
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    7919
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   42318
                                             71 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   21737
                                             62 BANK0      1     1      0
            _motor_clear_command_cue
                   _motor_goto_steps
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0    2728
                                             10 BANK0      1     1      0
             __motor_move_back_forth
 ---------------------------------------------------------------------------------
 (3) __motor_move_back_forth                               2     2      0    2706
                                              8 BANK0      2     2      0
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_move_endless                                   3     1      2    7495
                                             44 BANK0      3     1      2
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (2) _motor_goto_steps                                    12     5      7   11492
                                             50 BANK0     12     5      7
          __motor_calculate_distance
            __motor_decide_direction
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_decide_direction                             21    16      5    2526
                                             29 BANK0     21    16      5
          __motor_calculate_distance
           __motor_distance_to_limit
 ---------------------------------------------------------------------------------
 (4) __motor_calculate_distance                           13     9      4     581
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19829
                                             64 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    12     6      6    9123
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    9125
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (3) _motor_move_steps                                     8     1      7    8518
                                             44 BANK0      8     1      7
                            ___fltol (ARG)
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_move_steps                                   15     7      8    7095
                                             29 BANK0     15     7      8
           __motor_distance_to_limit
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (4) __motor_schedule_command                              8     1      7    2646
                                              0 BANK0      8     1      7
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __motor_distance_to_limit                            17    13      4    1115
                                             12 BANK0     17    13      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     956
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   56869
                                             68 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    2091
                                             44 COMRAM    24    24      0
           _i2c_eeprom_save_position
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_save_position                            7     7      0    2000
                                             37 COMRAM     7     7      0
                   _i2c_eeprom_write
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5    1528
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54778
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31661
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     377
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_jump_steps_with_overshoot
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_move_endless
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_set_zero
           __motor_move_back_forth
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___lmul
           ___xxtofl
             ___fltol (ARG)
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___lmul
             ___xxtofl
               ___fltol (ARG)
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___lmul
         ___xxtofl
           ___fltol (ARG)
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       _motor_move_steps
         ___fltol (ARG)
         __motor_move_steps (ARG)
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_goto_steps
       __motor_calculate_distance
       __motor_decide_direction
         __motor_calculate_distance
         __motor_distance_to_limit
           ___lmul
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_move_degrees_int
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
       __motor_steps_from_degrees_int
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
     _motor_move_endless
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_set_zero
       __motor_move_back_forth
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         __steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flge
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_recover_position
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _memcpy
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_save_position
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
       i2_memcpy
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E4       9       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F2      31        0.0%
DATA                 0      0     7F2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 05 12:23:40 2020

                           __end_of_fat_read_from_file 1FA2  
                               _motor_next_speed_check 0115  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0090  
                                         ___fldiv@bexp 008F  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 0088  
               motor_calculate_position_in_degrees@tmp 0091  
                                  __system_timer0_init 5982  
                      __size_of_configFile_readDefault 0074  
                     __motor_move_steps@return_value_1 0085  
                     __motor_move_steps@return_value_2 0086  
                         __motor_schedule_command@type 0066  
                            __end_of_motor_divide_jump 2F40  
                              configFile_read@position 01FC  
                                                   _os 0166  
                                        _USBDeviceInit FCD4  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2770  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 58F8  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 58CA  
                                     __i2c_eeprom_busy 5A58  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 06E4  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 161C  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                        __motor_schedule_command@speed 0064  
                                                  l206 5800  
                                                  l207 57FE  
                                                  l145 FD1E  
                                                  l147 FD46  
                                                  l149 FD80  
                          __end_of_USBStdGetDscHandler 0944  
                                                  l184 1328  
                                                  l192 1266  
                                                  l186 1352  
                                                  l602 DF0A  
                                                  l188 13D0  
                                                  l700 D23C  
                                                  l620 46BA  
                                                  l612 080E  
                                                  l701 CF7C  
                                                  l613 0808  
                                                  l605 DF12  
                                                  l710 D07C  
                                                  l630 C128  
                                                  l622 46D6  
                                                  l703 D260  
                                                  l711 D0EA  
                                                  l631 BD86  
                                                  l615 0812  
                                                  l720 D222  
                                                  l712 D0E6  
                                                  l704 D028  
                                                  l640 BECA  
                                                  l624 46E2  
                                                  l608 0760  
                                                  l641 BED4  
                                                  l625 46E8  
                                                  l714 D0FE  
                                                  l706 D02E  
                                                  l650 BFCE  
                                                  l642 BEF8  
                                                  l634 BD96  
                                                  l626 46EE  
                                                  l570 DF2A  
                                                  l731 0E2C  
                                                  l715 D182  
                                                  l707 D03A  
                                                  l619 46F6  
                                                  l571 DCF2  
                                                  l708 D058  
                                                  l660 C074  
                                                  l652 C004  
                                                  l644 BF28  
                                                  l636 BDA6  
                                                  l580 DE00  
                                                  l900 4A7A  
                                                  l709 D0A4  
                                                  l661 C088  
                                                  l637 BDB0  
                                                  l734 0E38  
                                                  l726 0DD6  
                                                  l718 D1F2  
                                                  l670 C120  
                                                  l662 C0B0  
                                                  l654 C020  
                                                  l646 BF68  
                                                  l582 DE18  
                                                  l735 0E60  
                                                  l719 D20A  
                                                  l639 BE04  
                                                  l591 DE8C  
                                                  l575 DD16  
                                                  l728 0DEE  
                                                  l664 C0E4  
                                                  l656 C038  
                                                  l592 DE90  
                                                  l904 4A8C  
                                                  l753 0ECA  
                                                  l737 0E9C  
                                                  l681 E99E  
                                                  l665 C0B8  
                                                  l649 BFA0  
                                                  l593 DEB6  
                                                  l577 DE3E  
                                                  l770 0D50  
                                                  l738 0E82  
                                                  l690 E8B4  
                                                  l682 E7E0  
                                                  l666 C0CA  
                                                  l578 DE24  
                                                  l586 DF48  
                                                  l906 4A98  
                                                  l675 2D58  
                                                  l763 0D9A  
                                                  l771 0D8C  
                                                  l747 0EAA  
                                                  l691 E8DE  
                                                  l667 C0E0  
                                                  l587 DE5E  
                                                  l579 DDF8  
                                                  l764 0D04  
                                                  l684 E9C2  
                                                  l692 E90C  
                                                  _BDT 000D00  
                                                  l677 2D74  
                                                  l757 0CD8  
                                                  l749 0EB8  
                                                  l693 E91E  
                                                  l685 E83A  
                                                  l589 DE6A  
                                                  l950 347A  
                                                  l766 0D0C  
                                                  l694 E924  
                                                  l686 E846  
                                                  l862 3914  
                                                  l767 0D1A  
                                                  l695 E938  
                                                  l687 E850  
                                                  l871 3956  
                                                  l863 392E  
                                                  l944 3416  
                                                  l768 0D2E  
                                                  l696 E986  
                                                  l688 E864  
                                                  l872 395A  
                                                  l769 0D3C  
                                                  l873 3960  
                                                  l867 3966  
                                                  l869 3988  
                                                  l897 4AAA  
                                                  l986 5D44  
                                                  l898 4A6E  
                                                  _LBA 0121  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0297  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 006A  
                                   api_prepare@command 0074  
                                           _USBSuspend 589A  
                               __end_of_display_update 569A  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks FF68  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005D  
                                         ___flmul@aexp 0089  
                                         ___flmul@bexp 008A  
                                         ?__write_root 0088  
                              __parse_item@item_string 0099  
                                         ___flmul@sign 0084  
                                         ___flmul@temp 008F  
                                         ___flmul@prod 008B  
                            __size_of_i2c_display_init 0050  
                                    ?_motor_goto_steps 0092  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                             ?__motor_decide_direction 007D  
                                    __find_nth_cluster 34B6  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 DB88  
                                                 l2001 DB8C  
                                                 l2002 DB90  
                                                 l2003 DB94  
                                                 l2004 DB98  
                                                 l2005 DB9C  
                                                 l1221 4D50  
                                                 l2006 DBA0  
                                                 l1143 5E06  
                                                 l2200 3C66  
                                                 l1400 A392  
                                                 l1128 5E0E  
                                                 l1160 50B4  
                                                 l1401 A3DC  
                                                 l1161 5096  
                                                 l1137 5DD4  
                                                 l1410 A436  
                                                 l1082 06DA  
                                                 l1331 20D4  
                                                 l1411 A46A  
                                                 l1403 A418  
                                                 l1155 5DCC  
                                                 l2300 F266  
                                                 l1324 52A4  
                                                 l1332 20BE  
                                                 l1340 538A  
                                                 l1420 A54C  
                                                 l1412 A456  
                                                 l1404 A3E8  
                                                 l2060 31AE  
                                                 l1421 A538  
                                                 l1149 5DE0  
                                                 l2310 F230  
                                                 l2206 381C  
                                                 l1326 52B0  
                                                 l1350 E47A  
                                                 l1334 2132  
                                                 l1430 A6E2  
                                                 l1414 A460  
                                                 l1166 3A68  
                                                 l2303 F146  
                                                 l1335 2102  
                                                 l1431 A6B2  
                                                 l1423 A542  
                                                 l1415 A47E  
                                                 l3015 1954  
                                                 l1263 4036  
                                                 l1167 3A4A  
                                                 l2320 F8FA  
                                                 l1352 E510  
                                                 l1440 A85C  
                                                 l1424 A560  
                                                 l1416 A4C2  
                                                 l3024 F5FC  
                                                 l3040 C1E6  
                                                 l3112 3E6E  
                                                 l3016 191C  
                                                 l2064 3202  
                                                 l2321 F902  
                                                 l2305 F158  
                                                 l2209 385A  
                                                 l1361 E5A2  
                                                 l1345 E484  
                                                 l1441 A84C  
                                                 l1433 A770  
                                                 l1425 A5D0  
                                                 l3041 C21C  
                                                 l3113 3E7C  
                                                 l1257 4E76  
                                                 l2314 F9BE  
                                                 l2330 F968  
                                                 l2322 F90A  
                                                 l1362 E572  
                                                 l1450 A930  
                                                 l1442 A86C  
                                                 l1434 A740  
                                                 l1426 A5A0  
                                                 l1418 A510  
                                                 l3050 C402  
                                                 l3042 C252  
                                                 l3018 19C6  
                                                 l1258 4E58  
                                                 l2331 F96E  
                                                 l2323 F912  
                                                 l2315 F8DA  
                                                 l2307 F1D6  
                                                 l1355 E4F4  
                                                 l1443 A854  
                                                 l3027 F65E  
                                                 l3051 C438  
                                                 l3043 C288  
                                                 l3019 19C2  
                                                 l2340 3D64  
                                                 l2500 F5EA  
                                                 l2324 F91A  
                                                 l2260 2436  
                                                 l1356 E508  
                                                 l1460 AB0C  
                                                 l1452 A994  
                                                 l1444 A8C6  
                                                 l1436 A816  
                                                 l1428 A654  
                                                 l3060 F0E0  
                                                 l3052 C49A  
                                                 l3044 C2BE  
                                                 l3108 3E3A  
                                                 l1380 3098  
                                                 l2341 3D06  
                                                 l2333 F98A  
                                                 l2325 F94A  
                                                 l2317 F8E2  
                                                 l2261 2444  
                                                 l1357 E568  
                                                 l1349 E45C  
                                                 l1461 AAD4  
                                                 l1453 A9FC  
                                                 l1445 A896  
                                                 l1437 A7E6  
                                                 l3053 C4D0  
                                                 l3045 C2F4  
                                                 l3109 3E2E  
                                                 l1373 3038  
                                                 l2350 FCD0  
                                                 l2342 3D80  
                                                 l2326 F950  
                                                 l2318 F8EA  
                                                 l2262 2458  
                                                 l3150 2AEC  
                                                 l1358 E522  
                                                 l1390 AF1C  
                                                 l1470 AC38  
                                                 l1454 A9B2  
                                                 l3046 C32A  
                                                 l3038 C1B0  
                                                 l3070 F394  
                                                 l2343 3D24  
                                                 l2335 F9A6  
                                                 l2327 F956  
                                                 l2319 F8F2  
                                                 l2263 246C  
                                                 l2191 4B6E  
                                                 l1359 E566  
                                                 l1367 0F2A  
                                                 l1471 ACDE  
                                                 l1463 AB80  
                                                 l1455 AA0C  
                                                 l1447 A924  
                                                 l1439 A82E  
                                                 l1391 A334  
                                                 l3047 C360  
                                                 l3071 F3C6  
                                                 l2183 54AA  
                                                 l2360 3F0E  
                                                 l2344 3D42  
                                                 l2520 21AC  
                                                 l2328 F95C  
                                                 l2280 0A04  
                                                 l2272 09B0  
                                                 l2264 247A  
                                                 l1544 4C6C  
                                                 l3152 2B1A  
                                                 l1480 ADAC  
                                                 l1472 AC56  
                                                 l1464 AB50  
                                                 l1456 A9BE  
                                                 l1392 A372  
                                                 l3048 C396  
                                                 l1800 D426  
                                                 l1376 3058  
                                                 l1536 4400  
                                                 l2184 5486  
                                                 l2513 FE48  
                                                 l2329 F962  
                                                 l2257 24BA  
                                                 l2265 249A  
                                                 l1545 4C28  
                                                 l3153 2B0E  
                                                 l1473 ACF4  
                                                 l1457 AA66  
                                                 l1449 A960  
                                                 l1393 A354  
                                                 l3057 EF6C  
                                                 l3049 C3CC  
                                                 l2097 411C  
                                                 l1801 D42E  
                                                 l1537 4424  
                                                 l2185 54BA  
                                                 l3090 4CA4  
                                                 l2354 FAE6  
                                                 l2274 09B6  
                                                 l2290 2F8E  
                                                 l1562 40A6  
                                                 l3170 3292  
                                                 l3162 322A  
                                                 l1482 AE4E  
                                                 l1474 AC62  
                                                 l1466 AB98  
                                                 l1458 AA36  
                                                 l2450 ECE0  
                                                 l2442 EBDA  
                                                 l1810 D532  
                                                 l1554 49CA  
                                                 l1378 3078  
                                                 l2186 5498  
                                                 l2515 FE6C  
                                                 l2355 FB18  
                                                 l2523 2236  
                                                 l1547 4C52  
                                                 l1563 40B0  
                                                 l3171 32A8  
                                                 l3163 323E  
                                                 l1491 AEEA  
                                                 l1483 AE78  
                                                 l1475 ACA0  
                                                 l1467 AC0A  
                                                 l1395 A35E  
                                                 l2443 EC36  
                                                 l3059 F07A  
                                                 l2099 4182  
                                                 l1803 D4A4  
                                                 l1555 49D4  
                                                 l3075 C8AC  
                                                 l2516 FF0C  
                                                 l2460 1D52  
                                                 l2348 FC38  
                                                 l2356 FB7E  
                                                 l2276 0A2E  
                                                 l2292 2FCE  
                                                 l3156 2B4E  
                                                 l1476 AD68  
                                                 l1468 ABDA  
                                                 l3340 0B16  
                                                 l1820 4526  
                                                 l3068 F40A  
                                                 l1804 D49C  
                                                 l3076 C8C2  
                           USBConfigureEndpoint@handle 0007  
                                                 l2277 09D0  
                                                 l2269 0962  
                                                 l2293 2F98  
                                                 l1565 40E8  
                                                 l2197 3C30  
                                                 l1581 4F96  
                                                 l3157 2B5C  
                                                 l3149 2AD4  
                                                 l3165 325C  
                                                 l1493 AF14  
                                                 l1485 AE86  
                                                 l1477 AD30  
                                                 l1397 A368  
                                                 l2509 0BAC  
                                                 l3341 0B54  
                                                 l3069 F2FE  
                                                 l1805 D4E4  
                                                 l2454 1CFA  
                                                 l2470 EDD4  
                                                 l2606 5180  
                                                 l2278 0A64  
                                                 l2294 2FA4  
                                                 l1590 4AE2  
                                                 l1582 4FA0  
                                                 l3158 2B72  
                                                 l3166 3250  
                                                 l1822 457E  
                                                 l1830 5A24  
                                                 l2471 EDE4  
                                                 l2463 ED96  
                                                 l2279 09E8  
                                                 l1567 4108  
                                                 l1487 AEB0  
                                                 l1479 ADDC  
                                                 l1399 AF78  
                                                 l2703 4324  
                                                 l2447 EC42  
                                                 l2456 1D0C  
                                                 l2472 EE12  
                                                 l2608 519C  
                                                 l2288 2F54  
                                                 l3600 CD80  
                                                 l2704 42F0  
                                                 l2616 2ED4  
                                                 l2800 B150  
                                                 l2448 EC44  
                                                 l3089 4C90  
                                                 l2457 1D1C  
                                                 l2473 EE2A  
                                                 l2609 51A4  
                                                 l3345 5858  
                                                 l3169 3284  
                                                 l1489 AEDC  
                                                 l2713 58E0  
                                                 l2801 B160  
                                                 l2449 ECB0  
                                                 l1809 D51E  
                                                 l2458 1D2C  
                                                 l2474 EE4E  
                                                 l3370 23B2  
                                                 l2722 4394  
                                                 l2714 58D0  
                                                 l2706 42FC  
                                                 l2810 B1DE  
                                                 l3338 0AA4  
                                                 l1850 1E2A  
                                                 l1914 162C  
                                                 l2459 1D38  
                                                 l2475 EE78  
                                                 l2467 EDA8  
                                                 l1595 5BAC  
                                                 l1691 5758  
                                                 l3611 CE74  
                                                 l3603 CDEC  
                                                 l3371 23A2  
                                                 l2723 4360  
                                                 l2707 4306  
                                                 l2619 2EF8  
                                                 l2811 B200  
                                                 l3339 0AD8  
                                                 l1755 48AC  
                                                 l1771 2A42  
                                                 l1499 5670  
                                                 l2539 2324  
                                                 l2476 EEAA  
                                                 l2468 EDB8  
                                                 l3620 CEC8  
                                                 l3604 CDB4  
                                                 l3700 CC28  
                                                 l2732 54D6  
                                                 l2716 58D4  
                                                 l2708 4310  
                                                 l2812 B20E  
                                                 l2804 B192  
                                                 l1828 5A12  
                                                 l1924 DFC6  
                                                 l1916 163C  
                                                 l1932 2966  
                                                 l1940 2932  
                                                 l2477 EEDA  
                                                 l2469 EDC4  
                                                 l2493 F4FE  
                                                 l2645 36E0  
                                                 l1589 4AD8  
                                                 l3613 CE84  
                                                 l2725 436C  
                                                 l2717 58D8  
                                                 l2709 431A  
                                                 l2821 B28E  
                                                 l1781 3548  
                                                 l1757 48E6  
                                                 l1925 E15E  
                                                 l1917 16F8  
                                                 l1941 2936  
                                                 l1933 291A  
                                                 l2478 EF48  
                                                 l2726 4376  
                                                 l2718 58DC  
                                                 l2902 B742  
                                                 l2830 B2FC  
                                                 l2814 B248  
                                                 l1782 34DE  
                                                 l1774 2A9C  
                                                 l1926 E04C  
                                                 l1918 16F0  
                                                 l1950 295A  
                                                 l1942 293A  
                                                 l2495 F516  
                                                 l2487 33CA  
                                                 l1695 5724  
                                                 l3607 CDD6  
                                                 l2727 4380  
                                                 l2807 B7AA  
                                                 l2911 B70E  
                                                 l2903 B6C4  
                                                 l2815 B216  
                                                 l1847 1EB8  
                                                 l1783 352A  
                                                 l1791 D2DE  
                                                 l1863 0356  
                                                 l1927 E074  
                                                 l1951 295E  
                                                 l1943 293E  
                                                 l1935 291E  
                                                 l2496 F52E  
                                                 l3632 CF54  
                                                 l3616 CEA8  
                                                 l3608 CDDA  
                                                 l3376 23D6  
                                                 l3368 2346  
                                                 l3560 4EF8  
                                                 l2728 438A  
                                                 l2912 B726  
                                                 l2904 B6E0  
                                                 l2840 B3E6  
                                                 l2816 B220  
                                                 l1856 1EA2  
                                                 l1776 2AA6  
                                                 l1792 D384  
                                                 l1928 E11C  
                                                 l1960 DA7C  
                                                 l1952 2962  
                                                 l1944 2942  
                                                 l1936 2922  
                                                 l3633 CF5C  
                                                 l3625 CEE8  
                                                 l3377 23CA  
                                                 l3561 4EF0  
                                                 l2737 4450  
                                                 l2841 B39E  
                                                 l2825 B38C  
                                                 l2833 B322  
                                                 l2809 B238  
                                                 l2817 B22E  
                                                 l1793 D330  
                                                 l1865 0368  
                                                 l1961 DA80  
                                                 l1945 2946  
                                                 l1937 2926  
                                                 l2498 F582  
                                                 l3810 5886  
                                                 l3634 CF5E  
                                                 l3618 CEBE  
                                                 l3730 02B4  
                                                 l3570 5410  
                                                 l3642 D56E  
                                                 l2914 B730  
                                                 l2850 B406  
                                                 l2842 B3AE  
                                                 l2834 B334  
                                                 l2826 B2B6  
                                                 l3490 4600  
                                                 l1794 D44C  
                                                 l1866 03C6  
                                                 l1970 DB14  
                                                 l1962 DA92  
                                                 l1946 294A  
                                                 l1938 292A  
                                                 l2499 F5D0  
                                                 l3811 5874  
                                                 l3379 23F2  
                                                 l3731 029C  
                                                 l3723 0236  
                                                 l3571 5408  
                                                 l3651 D620  
                                                 l3643 D56A  
                                                 l2907 B6EE  
                                                 l2851 B418  
                                                 l2843 B3BC  
                                                 l2827 B2CA  
                                                 l2819 B262  
                                                 l1859 41A4  
                                                 l1891 1F54  
                                                 l1971 DB18  
                                                 l1963 DAA4  
                                                 l1947 294E  
                                                 l1939 292E  
                                                 l3804 482A  
                                                 l3628 CF2E  
                                                 l3724 0246  
                                                 l3564 4F18  
                                                 l3660 D6E4  
                                                 l3652 D6CE  
                                                 l2772 B760  
                                                 l2908 B6F8  
                                                 l1788 D2D4  
                                                 l1956 DBA4  
                                                 l1980 DB3C  
                                                 l1972 DB1C  
                                                 l1964 DAB6  
                                                 l1948 2952  
                                                 l3805 47F0  
                                                 l3733 02E6  
                                                 l3725 0264  
                                                 l2941 EB82  
                                                 l3565 4F22  
                                                 l3653 D67E  
                                                 l2909 B706  
                                                 l2861 B4CA  
                                                 l2853 B44C  
                                                 l2845 B3F6  
                                                 l2837 B366  
                                                 l3493 4634  
                                                 l1981 DB40  
                                                 l1973 DB20  
                                                 l1965 DAC8  
                                                 l1957 DA74  
                                                 l1949 2956  
                                                 l3590 CCB8  
                                                 l3734 02DA  
                                                 l3574 5428  
                                                 l3670 D7CC  
                                                 l3654 D6A6  
                                                 l3646 D5AE  
                                                 l2862 B486  
                                                 l2846 B3C4  
                                                 l2774 B1B8  
                                                 l2782 B018  
                                                 l3750 265A  
                                                 l1894 E1C4  
                                                 l3494 4642  
                                                 l1798 D418  
                                                 l1990 DB64  
                                                 l1982 DB44  
                                                 l1974 DB24  
                                                 l1966 DADA  
                                                 l3591 CCB4  
                                                 l3727 0276  
                                                 l3575 5432  
                                                 l3671 D7D8  
                                                 l3647 D5AA  
                                                 l2871 B4F4  
                                                 l2863 B492  
                                                 l2855 B458  
                                                 l2847 B3CE  
                                                 l2783 B028  
                                                 l2775 AFB0  
                                                 l3751 261C  
                                                 l1991 DB68  
                                                 l1983 DB48  
                                                 l1975 DB28  
                                                 l1967 DAEC  
                                                 l1959 DA78  
                                                 l3680 C95E  
                                                 l3728 026A  
                                                 l2944 EB98  
                                                 l3672 D7DA  
                                                 l3656 D6CC  
                                                 l2864 B4A0  
                                                 l2856 B464  
                                                 l2848 B3DC  
                                                 l2792 B0C2  
                                                 l2776 AFC0  
                                                 l3744 25C8  
                                                 l3832 3FF8  
                                                 l1896 E38E  
                                                 l1992 DB6C  
                                                 l1984 DB4C  
                                                 l1976 DB2C  
                                                 l1968 DAFE  
                                                 l3593 CD14  
                                                 l3585 CC70  
                                                 l3681 C95A  
                                                 l3649 D5F8  
                                                 l2881 B5D6  
                                                 l2873 B538  
                                                 l3753 268E  
                                                 l3745 25C2  
                                                 l3761 185A  
                                                 l3841 5D0E  
                                                 l3833 3F96  
                                                 l1897 E27C  
                                                 l3489 460C  
                                                 l1993 DB70  
                                                 l1985 DB50  
                                                 l1977 DB30  
                                                 l1969 DB10  
                                                 l3594 CCD8  
                                                 l3586 CC6C  
                                                 l3682 C96E  
                                                 l2938 EB5C  
                                                 l3826 5510  
                                                 l3666 D73A  
                                                 l2866 B4DA  
                                                 l2794 B0E8  
                                                 l2786 B05A  
                                                 l3818 4A1A  
                                                 l3834 3FEE  
                                                 l1898 E2A4  
                                                 l1994 DB74  
                                                 l1986 DB54  
                                                 l1978 DB34  
                                                 l3683 C98C  
                                                 l3739 0326  
                                                 l3827 550A  
                                                 l3659 D702  
                                                 l2883 B650  
                                                 l2891 B62E  
                                                 l2867 B4A8  
                                                 l2795 B0F8  
                                                 l2779 AFF2  
                                                 l3747 260A  
                                                 l3819 4A10  
                                                 l1899 E34C  
                                                 l1987 DB58  
                                                 l1979 DB38  
                                                 l3676 C91E  
                                                 l3668 D77E  
                                                 l2884 B5EA  
                                                 l2876 B590  
                                                 l2868 B4B2  
                                                 l2788 B080  
                                                 l3772 5BEC  
                                                 l3764 18BC  
                                                 l1996 DB78  
                                                 l1988 DB5C  
                                                 l3597 CD90  
                                                 l3677 C91A  
                                                 l3669 D7A2  
                                                 l2893 B636  
                                                 l2885 B5FE  
                                                 l2869 B4C0  
                                                 l2789 B090  
                                                 l3765 1864  
                                                 l1997 DB7C  
                                                 l1989 DB60  
                            ?__offset_from_file_number 0060  
                                                 l3598 CD6E  
                                                 l3694 CB84  
                                                 l3678 C92E  
                                                 l3782 32C2  
                                                 l2894 B648  
                                                 l2878 B5AC  
                                                 l2798 B12A  
                                                 l1998 DB80  
                                                 l3599 CD7C  
                                                 l3687 CB4C  
                                                 l2879 B5BE  
                                                 l3767 1902  
                                                 l1999 DB84  
                                                 l3696 CBC8  
                                                 l3688 CB2E  
                                                 l3784 32FE  
                                                 l2896 B668  
                                                 l2888 B60C  
                                                 l3792 4EB2  
                                                 l3697 CBE6  
                                                 l3785 3340  
                                                 l2897 B6A0  
                                                 l2889 B620  
                                                 l3778 53DA  
                                                 l3699 CC0A  
                                                 l2899 B6AA  
                                                 l3796 172A  
                                                 l3798 1786  
                                                 l3799 17F4  
                  __end_of__encoder_next_arc_step_size 43CE  
                          __encoder_next_arc_step_size 435E  
                        __size_of_encoder_statemachine 082A  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                   ??_motor_goto_steps 0099  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02E1  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00AE  
                                       _ResetSenseData 471A  
                          __end_of_fat_restore_mbr_fbr 3BDE  
                                                 _enc1 0148  
                                                 _enc2 0147  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 0145  
                                                 _atoi 25C0  
                                                 _atol 1818  
                                                 _main 38FA  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 53B4  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 4E84  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                    motor_goto_steps@distance_in_steps 0099  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 57D8  
                                                 btemp 005F  
                                                 _utoa 32BA  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 5DF0  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5D7E  
                         ?__motor_get_speed_in_degrees 0091  
                                      ___fldiv@new_exp 0089  
                                _display_get_character 58F8  
                                 ??_USBCheckHIDRequest 0001  
  __motor_distance_to_limit@absolute_position_in_steps 0079  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E180  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2770  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0139  
                     __end_of__fat_sector_from_cluster 5CAC  
                               __get_available_cluster 29E8  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 5B44  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 3F12  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 5770  
                 __make_cluster_chain@sector_in_buffer 00A6  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 009D  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02CE  
                           __end_of_motor_speed_lookup 9461  
                                    ?_motor_move_steps 008C  
                        i2c_display_write_fixed@length 0067  
                                                l20022 433E  
                                                l20024 4354  
                                                l20016 DBBE  
                                                l20026 43AE  
                                                l20018 DCD6  
                                                l20028 43C4  
                                                l13008 47F0  
                                                l12064 0B8C  
                                                l14014 3F96  
                                                l15020 1EB8  
                                                l13086 E998  
                                                l14240 D7CC  
                                                l13346 EE12  
                                                l12678 0E38  
                                                l16118 E49E  
                                                l16232 03C6  
                                                l17034 DD0E  
                                                l16058 402E  
                                                l17212 09FE  
                                                l16404 3B56  
                                                l17142 5668  
                                                l16174 43D2  
                                                l16512 2F9C  
                                                l13944 2A0C  
                                         spi_tx@length 0062  
                                                l13778 BEF0  
                                                l16098 E3F4  
                                                l16418 3B9E  
                                                l17502 529C  
                                                l16702 F5F4  
                                                l16366 317E  
                                                l13968 2AAC  
                                                l16384 31D2  
                                                l18082 4A7A  
                                                l17610 ECB0  
                                                l16722 F656  
                                                l17508 52A8  
                                                l15596 2656  
                                                l14956 5A0A  
                                                l18086 4A98  
                                                l17616 ECE0  
                                                l17538 0F2A  
                                                l16738 F6E8  
                                                l14986 1E0C  
                                                l17902 FD16  
                                                l17930 FD78  
                                                l16948 5874  
                                                l18732 A4BA  
                                                l18746 A508  
                                        ___fltol@sign1 0068  
                                motor_move_steps@speed 0090  
                                      __end_of___aldiv 2B84  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 32BA  
                                                ?_atol 006C  
                                      __end_of___fladd CF7A  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv D7F6  
                                                ?_itoa 0070  
                                      __end_of___flneg 586A  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul CC3E  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 2404  
                                      __end_of___lldiv 3E8E  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u10205 421A  
                                                u10330 0CC4  
                                                u11115 E80C  
                                                u10095 40BC  
                                                u10185 4AEE  
                                                u11225 CFA8  
                                                u11090 4812  
                                                u11308 D0B4  
                                                u13020 D736  
                                                u11420 4660  
                                                u11309 D0C8  
                                                u10710 0E98  
                                                u11350 D1BE  
                                                u11430 466E  
                                                u11168 E88E  
                                                u11360 D1C0  
                                                u11248 CFE0  
                                                u11440 467C  
                                                u11097 4808  
                                                u11169 E8A2  
                                                u11249 CFF4  
                                      __end_of___llmod 4654  
                               __end_of_USBDeviceTasks 00AE  
                                                u11610 ED92  
                                                u10730 0EB2  
                                                u13210 CB80  
                                                u13050 D78C  
                                                u11450 468A  
                                                u11700 EE0E  
                                                u13060 D7B0  
                                                u14100 1EAE  
                                                u11460 4698  
                                                u11428 4664  
                                                u11710 EE26  
                                                u10750 0EC6  
                                                u12430 C04C  
                                                u13150 C97A  
                                                u14110 1EB8  
                                                u14030 5A2A  
                                                u11470 46A4  
                                                u11438 4672  
                                                u10680 0E7E  
                                                u12440 C05E  
                                                u12360 BF20  
                                                u12328 BE14  
                                                u13240 CBD6  
                                                u13160 CAF0  
                                                u11448 4680  
                                                u12329 BE28  
                                                u11545 49E0  
                                                u11378 D1CC  
                                                u12338 BE48  
                                                u13250 CBF4  
                                                u13330 2364  
                                                u11810 3E3E  
                                                u12610 2AAC  
                                                u11458 468E  
                                                u11379 D1E0  
                                                u12339 BE5C  
                                                u11555 5A44  
                                                u10780 5754  
                                                u15004 073E  
                                                u10940 4EFC  
                                                u14140 417E  
                                                u11476 46A6  
                                                u11468 469C  
                                                u15005 0738  
                                                u13165 CAE6  
                                                u14230 FC16  
                                                u10790 5720  
                                                u12470 C0EC  
                                                u15014 0778  
                                                u12630 3516  
                                                u14150 E1A0  
                                                u15015 0772  
                                                u13335 235A  
                                                u15111 502C  
                                                u15200 E408  
                                                u11840 4610  
                                                u12378 BF44  
                                                u13370 23DC  
                                                u13450 02F0  
                                                u10970 5414  
                                                u15210 E47E  
                                                u14330 4A5C  
                                                u12379 BF58  
                                                u14155 E194  
                                                u14260 FAC4  
                                                u15140 407C  
                                                u15054 07D6  
                                                u15038 07A0  
                                                u16110 3260  
                                                u12670 457A  
                                                u12590 2A6C  
                                                u15055 07D0  
                                                u15039 07B6  
                                                u14175 E238  
                                                u14600 CD56  
                                                u15240 E4B2  
                                                u15400 16AA  
                                                u16050 2B1E  
                                                u15250 E50C  
                                                u12690 3FBC  
                                                u15410 16C4  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u16300 DD3E  
                                                u13900 D3BA  
                                                u13820 3064  
                                                u15405 16A0  
                                                u14630 CD98  
                                                u13910 D3C6  
                                                u15350 038E  
                                                u13830 3084  
                                                u15095 4D40  
                                   ??_motor_move_steps 0093  
                                                u13920 D3F2  
                                                u15600 3B80  
                                                u17130 2E98  
                                                u15355 0384  
                                                u17300 FDDC  
                                                u14580 CD44  
                                                u15460 DFEC  
                                                u15620 3BC8  
                                                u14590 CD54  
                                                u13950 D47C  
                                                u13870 D316  
                                                u15390 1678  
                                                u15550 31B4  
                                                u16280 DD08  
                                                u14840 CF3A  
                                                u14760 CECC  
                                                u18040 B2C4  
                                                u15465 DFE2  
                                                u18050 B2F6  
                                                u17090 EC3E  
                                                u15810 F6D4  
                                                u13970 D4F8  
                                                u13890 D390  
                                                u15395 166E  
                                                u15660 2FCC  
                                                u13980 D504  
                                                u15580 3208  
                                                u15725 04A8  
                                                u16470 DEEA  
                                                u17270 FD3A  
                                                u14790 CEE4  
                                                u18080 B32E  
                                                u18330 B528  
                                                u18090 B360  
                                                u15770 F63C  
                                                u14990 0726  
                                                u18350 B57E  
                                                u18351 B57C  
                                                u17650 3430  
                                                u14978 06F4  
                                                u17810 B08C  
                                                u17730 AFBC  
                                                u14979 0708  
                                      __end_of___lwdiv 4F2C  
                                                u17900 B18C  
                                                u17820 B0BC  
                                                u17740 AFEC  
                                                u16941 F456  
                                                u17670 3444  
                                                u19280 3936  
                                                u17850 B0F4  
                                                u17770 B024  
                         __flash_write_to_buffer@start 0073  
                                                u18660 EB46  
                                                u16980 52DC  
                                                u18740 A4EA  
                                                u17860 B124  
                                                u17780 B054  
                                                u18670 EB56  
                                                u18680 EB6C  
                                                u18690 EB7C  
                                                u17890 B15C  
                          __size_of_motor_change_speed 000A  
                                                u19907 503E  
                                                u19917 5052  
                                                u19927 4C44  
                                                u19937 4C56  
                                      __end_of___lwmod 543C  
                                                u19947 4C60  
                                                i2l300 3596  
                                                i2l220 3780  
                                                i2l214 2BCC  
                                                i2l222 3796  
                                                i2l231 1A88  
                                                i2l232 1A32  
                                                i2l160 FFB8  
                                                i2l321 38EA  
                                                i2l145 00F4  
                                                i2l250 2898  
                                                i2l226 3B1A  
                                                i2l322 38E4  
                                                i2l162 FFDE  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 547C  
                                                i2l315 56C6  
                                                i2l147 011C  
                                                i2l155 FF7E  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2C80  
                                                i2l260 1146  
                                                i2l332 484E  
                                                i2l180 5598  
                                                i2l236 1AB2  
                                                i2l308 547A  
                                                i2l316 56C4  
                                                i2l172 006C  
                                                i2l164 FFF4  
                                                i2l156 FF8E  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2910  
                                                i2l245 2866  
                                                i2l341 2C84  
                                                i2l261 1124  
                                                i2l149 0154  
                                                i2l165 0000  
                                                i2l157 FF96  
                                                i2l254 28D8  
                                                i2l342 2D02  
                                                i2l334 4898  
                                                i2l174 008A  
                                                i2l166 0028  
                                                i2l247 2870  
                                                i2l343 2CC8  
                                                i2l263 11BA  
                                                i2l167 0032  
                                                i2l159 FFAC  
                                                i2l264 11A0  
                                                i2l184 1530  
                                                i2l192 1472  
                                                i2l432 281E  
                                                i2l280 092C  
                                                i2l272 252A  
                                                i2l360 26BC  
                                                i2l176 00A6  
                                                i2l249 28D0  
                                                i2l345 2CE8  
                                                i2l425 27BC  
                                                i2l281 0828  
                                                i2l361 26CE  
                                                i2l169 0044  
                                                i2l186 155A  
                                                i2l426 278C  
                                                i2l274 259E  
                                                i2l362 26D4  
                                                i2l179 558A  
                                                i2l283 083A  
                                                i2l355 272C  
                                                i2l188 15D8  
                                                i2l436 27DE  
                                                i2l428 27CE  
                                                i2l372 D816  
                                                i2l284 08C4  
                                                i2l364 26DA  
                                                i2l356 26A8  
                                                i2l437 27F4  
                                                i2l429 27AA  
                                                i2l381 D96E  
                                                i2l373 D81C  
                                                i2l293 35D2  
                                                i2l365 26F6  
                                                i2l534 10EE  
                                                i2l438 27FE  
                                                i2l550 2E46  
                                                i2l286 08CA  
                                                i2l294 3568  
                                                i2l366 270E  
                                                i2l358 26B0  
                                                i2l535 105A  
                                                i2l439 2814  
                                                i2l391 D9FA  
                                                i2l383 D938  
                                                i2l375 D884  
                                                i2l287 0920  
                                                i2l359 26B6  
                                                i2l384 D954  
                                                i2l537 10E6  
                                                i2l545 2E78  
                                                i2l393 DA4C  
                                                i2l377 D8CC  
                                                i2l289 0926  
                                                i2l297 35E8  
                                                i2l562 2E4C  
                                                i2l546 2DE0  
                                                i2l386 D9BA  
                                                i2l298 3578  
                                                i2l387 D9C6  
                                                i2l379 D8EE  
                                                i2l299 357C  
                                                i2l900 4F3A  
                                                i2l820 3D86  
                                                i2l388 DA40  
                                                i2l821 3D8E  
                                                i2l822 3D96  
                                                i2l904 4F4C  
                                                i2l816 3DB8  
                                                i2l824 3DA0  
                                                i2l906 4F58  
                                                i2l826 3DAA  
                                                i2l780 4DF8  
                                                i2l783 4E2E  
                                                _UADDR 000F38  
                                                i2l897 4F6A  
                                                i2l898 4F30  
          __end_of_motor_calculate_position_in_degrees 2326  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0091  
                  _motor_calculate_position_in_degrees 2248  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                          __motor_move_steps@direction 008B  
                      __end_of__motor_schedule_command 1DD4  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                           ?__motor_calculate_distance 0060  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 4D2E  
                                  ___lmul@multiplicand 0064  
                               __motor_move_back_forth 3364  
                            __end_of__find_nth_cluster 355C  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks DF4C  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2DCC  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 37CA  
            motor_divide_jump@target_position_in_steps 009F  
                                                _sd000 A2E5  
                               __write_value_to_offset 56D2  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                __i2c_display_send_init_sequence@F7089 02BD  
                        __end_of_MSDTransferTerminated 4E30  
                                         _gblCBWLength 0153  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 427A  
                                      __end_of_isdigit 5BF4  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 477C  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 5E30  
                                      __motor_run@type 0066  
                                                _ultoa 171A  
                             __parse_command_long@data 00A0  
                            __data_sector_from_cluster 5D5E  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0FE8  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0157  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 47DE  
                                      __end_of_stricmp 4A68  
                                      __end_of_strncmp 4014  
                                      __end_of_toupper 5D12  
                                     __end_ofi2_memcpy 49B4  
                                     __end_ofi2_memset 59DA  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 03C0  
                                       _MSDReadHandler E7DE  
          i2c_display_program_custom_character@address 007F  
                                  __steps_from_degrees EF4C  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain D53C  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3990  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 57A4  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 5CFA  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5C38  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5CE0  
                        _ExternalFlash_MediaInitialize 5C16  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 05AE  
        __motor_decide_direction@distance_to_limit_ccw 0086  
                              __end_of_fat_resize_file 171A  
                                         __end_of_atoi 2698  
                                         __end_of_atol 1914  
                                         __end_of_main 3990  
                                         __end_of_itoa 53F8  
               __end_of__ic2_display_set_ddram_address 5B8C  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5B68  
                                         __end_of_ltoa 4ED8  
                      __end_of_i2c_display_write_fixed 4E84  
                                         __end_of_utoa 3364  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 009E  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 5C92  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 5DE6  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00B8  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature E9C8  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 0098  
                 __end_of_motor_divide_jump_to_nearest F8D4  
                __size_of_motor_divide_jump_to_nearest 015C  
                         _motor_divide_jump_to_nearest F778  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 5DDC  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
        __motor_decide_direction@distance_to_target_cw 008A  
                             _fat_get_file_information 410C  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 5E34  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 5E30  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0119  
                             __steps_from_degrees@temp 0095  
                                 ?__steps_from_degrees 0091  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 5DBC  
                          __motor_move_steps@overshoot 0083  
                        __get_available_cluster@sector 0093  
                              motor_move_endless@speed 008C  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 580A  
                               __flash_write_to_buffer 4F80  
               __end_of__ic2_display_set_cgram_address 5A04  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 59DA  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 5CC6  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 5E0C  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 5072  
                          motor_move_endless@direction 008E  
                                     __end_of_adc_init 4C26  
                                               i2l1211 3F6E  
                                               i2l1212 3F3E  
                            fat_read_from_file@cluster 00D9  
                                               i2l1143 5E16  
                                  ?_motor_items_in_cue 0001  
                                               i2l1128 5E1E  
                                               i2l1160 5362  
                                               i2l1161 5346  
                                               i2l1066 5620  
                                               i2l2571 B7D0  
                                               i2l2580 BB3E  
                                               i2l2573 B808  
                                               i2l2583 B984  
                                               i2l2751 1B56  
                                               i2l2592 BCD8  
                                               i2l2584 B9D8  
                                               i2l2576 B80A  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2585 BAFC  
                                               i2l2577 B864  
                                               i2l2761 1BC6  
                                               i2l2753 1B6C  
                                               i2l2745 1B7A  
                                               i2l3810 59C8  
                                               i2l2578 B894  
                                               i2l2754 1B74  
                                               i2l3811 59B8  
                                               i2l2755 1BEA  
                                               i2l2763 1BDC  
                                               i2l3804 49A2  
                                               i2l2588 BC1C  
                                               i2l2764 1BE4  
                                               i2l2748 1B34  
                                               i2l3805 496A  
                                               i2l2758 1BA4  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr DCE6  
                                     __end_of__get_mbr 29E8  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00B5  
                               __end_of_MSDReadHandler E9C8  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 0338  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 009D  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                             __motor_distance_to_limit FE20  
                                     _configFile_write C532  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5D5E  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0165  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 3F12  
                                     ?_fat_modify_file 00A1  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
        __parse_jump_steps_with_overshoot@return_value 009B  
                                    _motor_process_cue 35FC  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 443C  
                                               ___flge 0A6E  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 4C7E  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 4186  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 0084  
                                               ___wmul 5AA8  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0080  
                                            ??___flneg 007C  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0080  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3140 0003  
            SYSTEM_Initialize@pll_startup_counter_3140 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 0152  
                                            ??___lwmod 0064  
                                               _config 0197  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 557A  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02DE  
                                               _memcpy 47DE  
                                   ?_fat_get_file_size 0095  
                                               _memset 586A  
                     __end_of__sector_from_file_number 583A  
                              __end_of_i2c_eeprom_read 4D84  
                                               _params 0231  
                                               clear_0 39D8  
                                               clear_1 39EA  
                                               clear_2 39F6  
                                               clear_3 3A02  
                                               clear_4 3A14  
                            _ExternalFlash_SectorWrite 5708  
                                    api_parse@inBuffer 00A7  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 5B68  
                                               _spi_tx 4B1C  
                                   ?_USBEnableEndpoint 0009  
                           ??_i2c_eeprom_save_position 0026  
                                   _flash_partial_read 5AF8  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02C6  
                                i2c_display_init@F7092 02B4  
                                               _strlen 5500  
                              _motor_current_stepcount 011D  
                           __parse_command_long@length 00A6  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 006A  
                                     __end_of_tmr0_isr 562A  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                 __size_of_i2c_eeprom_recover_position 005C  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006C  
                                ??__steps_from_degrees 0095  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                    i2c_eeprom_recover_position@buffer 0079  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1EBC  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00A2  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 015C  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 54C0  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 014A  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 5022  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 4582  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                motor_goto_steps@speed 0096  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 4582  
                                            ??_strncmp 0066  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 0164  
                           ??_APP_DeviceCustomHIDTasks 00B2  
                                           ___flge@ff1 0078  
                                           ___flge@ff2 007C  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 0074  
                                         ___xxtofl@exp 0073  
                                    _SYSTEM_Initialize 4A68  
                                         ___xxtofl@val 006A  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 5A80  
                                           __accesstop 0060  
                              __end_of__initialization 3A1A  
                       __end_of_motor_speed_from_index 5D28  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 0078  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 55F0  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003F  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5DD2  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3696  
                          __end_of__parse_command_long 3D84  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 4200  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 0135  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5CE0  
                          _motor_increase_manual_speed 5CC6  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 55B6  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 51B2  
                                         __pidataBANK4 4FD2  
                             __parse_item@value_string 009B  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 5A04  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01C1  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2D0C  
                                        __end_of_ultoa 1818  
                                  display_prepare@cntr 00D3  
                                  display_prepare@temp 00C8  
                                         _gblSenseData 021F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0CAA  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 151A  
                       __end_of_motor_set_manual_speed 51B2  
                                   __size_of_api_parse 012A  
                      ??__motor_steps_from_degrees_int 0095  
                                      _motor_move_type 014B  
                                   _motor_move_endless 5926  
                                   _flash_sector_write 50C2  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1EBC  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C172  
               __size_of_MSDProcessCommandMediaPresent 03EE  
                        _MSDProcessCommandMediaPresent BD84  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 45EC  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0159  
                       motor_move_degrees_int@distance 0099  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                                  ?_motor_move_endless 008C  
                            __end_of_SYSTEM_Initialize 4AC2  
                                    __end_of__i2c_read 3AB8  
                                    __end_of__i2c_send 5DF0  
                               _USBStdGetStatusHandler 355C  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 5E0C  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
       __motor_decide_direction@distance_to_target_ccw 008E  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 1204  
                                           _gblNumBLKS 023C  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0292  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 320C  
                                        __flash_wakeup 4C26  
                             __fill_buffer_get_display 2F40  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                                          _pBDTEntryIn 0109  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1B08  
                __end_of_APP_DeviceCustomHIDInitialize 57D8  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 57A4  
                          MSDTransferTerminated@handle 000C  
                               __motor_move_steps@type 0084  
                   __size_of__data_sector_from_cluster 0010  
                            __size_of_motor_goto_steps 009A  
                     __size_of__motor_decide_direction 0196  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___flge 0078  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 00A1  
                         __parse_jump_steps@out_buffer 0096  
                                 ??_motor_move_endless 008E  
                               ??_adc_read_temperature 0091  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7BE  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1A0E  
                                            MSDTasks@i 00B1  
                             ??_motor_move_degrees_int 009E  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run EBA6  
                                       ___lmul@product 0068  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 3862  
                                    ??_configFile_read 01C4  
                                           _ep_data_in 0132  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
            __motor_calculate_distance@target_position 0060  
                              ?__motor_move_back_forth 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 1204  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa E3A6  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 2698  
                                   __size_of_motor_isr 05C6  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l20036 3DD0  
                                              i2l20038 3E04  
                                              i2l12560 27A4  
                                              i2l13546 2522  
                                              i2l12924 4F3A  
                                              i2l13476 59B8  
                                              i2l12928 4F58  
                                              i2l12976 2870  
                                              i2l18036 003C  
                                              i2l19040 B864  
                                              i2l19046 B894  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l17830 00EC  
                                              i2l16936 496A  
                                              i2l17858 014C  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 006A  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 4F80  
                                           ??i2_memcpy 0007  
                          ??__motor_calculate_distance 0064  
                                           ??i2_memset 0007  
                                           _flash_init 5D7E  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 2918  
                                    __end_of__get_date 5DA4  
                                  _USBStdSetCfgHandler 24E2  
                                    __end_of__get_item F778  
                                   i2__i2c_eeprom_busy 5B1E  
                                    __end_of__get_time 5D98  
                     __end_of_maximum_speed_arc_string A237  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 0094  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 2168  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 151A  
                       ??_motor_divide_jump_to_nearest 009E  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 43CE  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
                            __size_of_motor_move_steps 002E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5D4E  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 4BCE  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 410C  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 4090  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                             ?__motor_schedule_command 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2AB6  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0A6E  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 06E4  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 009A  
                             fat_find_file@file_number 0091  
                            motor_goto_steps@direction 009D  
                                        __i2c_send@dat 0060  
                  __motor_move_steps@distance_in_steps 007D  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 48FC  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 489E  
                                    __end_of__spi_init 5662  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 00A2  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0DC4  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A249  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2AB6  
                                      __size_of___flge 0122  
                                              ___almod 320C  
                                            ?_spi_init 0001  
                                              ___fladd CC3E  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0EDA  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv D53C  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 583A  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5D6E  
                                              ___flmul C8EC  
                                              ___fltol 2326  
                                              ___lldiv 3E0A  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 45EC  
                    __motor_decide_direction@overshoot 0081  
                                              ___lwdiv 4ED8  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 53F8  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                       __end_of__motor_move_back_forth 340E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 5E04  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E4  
                                              __pcinit 3990  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 5708  
                                  ??_MSDProcessCommand 00A7  
                  __motor_move_steps@distance_to_limit 0087  
                                              __ramtop 0F00  
                                    __motor_move_steps ED7C  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 38FA  
                                              __ptext1 05AE  
                                              __ptext2 5C58  
                                              __ptext3 2248  
                                              __ptext4 5C76  
                                              __ptext5 48FC  
                                              __ptext6 4D2E  
                                              __ptext7 3A24  
                                              __ptext8 5DC8  
                                              __ptext9 5DD2  
                                       ?__display_itoa 009F  
                                              _inPipes 0053  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 015A  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 42EE  
                                  ?__display_itoa_long 00B7  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00A3  
                                 __motor_run@direction 006B  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 59AE  
                              __read_value_from_offset 52E0  
                                   ?__motor_move_steps 007D  
                              _fat_read_from_file_fast E180  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 10F6  
                                              _isdigit 5BD2  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C8EC  
                                           ??___xxtofl 006E  
                              _APP_DeviceMSDInitialize 5D6E  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 5DC8  
                             __offset_from_file_number 5A2E  
                             __end_of_i2c_eeprom_write 3F94  
                          __display_itoa_long@decimals 00BB  
                                      i2_USBDeviceInit 00AE  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                   __size_of_ExternalFlash_SectorWrite 0034  
                __end_of__motor_steps_from_degrees_int 0CAA  
               __size_of__motor_steps_from_degrees_int 011A  
                        __motor_steps_from_degrees_int 0B90  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           ??__motor_distance_to_limit 0070  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                  ??__motor_move_steps 0085  
                                              _stricmp 4A0E  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 3F94  
                                              _toupper 5CFA  
                                  _flash_partial_write 44AA  
                                 end_of_initialization 3A1A  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 4DDA  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 003C  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 009D  
              __motor_get_speed_in_degrees@speed_index 0091  
                                  _pBDTEntryEP0OutNext 0059  
                            __end_of_MSDProcessCommand 0818  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 5B44  
                                      _USB1msTickCount 0125  
                                 ??__display_itoa_long 00BE  
                                            i2u1030_44 10D8  
                                            i2u1030_45 10D2  
                             __flash_partial_read@data 0079  
                                            i2u1105_40 28C2  
                                            i2u1201_40 0890  
                                            i2u1105_47 28B8  
                                            i2u1201_47 0886  
                                            i2u1202_40 08C0  
                                            i2u1202_47 08B6  
                                            i2u1107_40 2902  
                                            i2u1026_48 107E  
                                            i2u1026_49 1092  
                                            i2u1107_47 28F8  
                                            i2u1204_40 0916  
                                            i2u1204_47 090C  
                                            i2u1028_48 10A4  
                                            i2u1028_49 10BA  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1055_40 2E28  
                             __flash_partial_read@page 0073  
                                            i2u1226_40 D9E0  
                        i2c_eeprom_write@slave_address 0024  
                                            i2u1360_40 4D10  
                                              ltoa@buf 007A  
                                            i2u1361_40 4D1A  
                                            i2u1360_48 4D12  
                                            i2u1361_46 4D1C  
                                            i2u1506_45 3F1E  
                                            i2u1507_40 3F76  
                                            i2u1356_40 4CE0  
                                            i2u1197_40 2556  
                                            i2u1357_40 4CEC  
                                            i2u1356_48 4CE2  
                                              ltoa@val 007C  
                                            i2u1614_40 498C  
                                            i2u1358_40 4CF8  
                                            i2u1357_48 4CEE  
                                            i2u1614_47 4982  
                                            i2u1359_40 4D04  
                                            i2u1358_48 4CFA  
                                            i2u1359_48 4D06  
                                            i2u1722_40 0110  
                                    __end_of_motor_isr BD84  
                                            i2u1725_40 01B0  
                                            i2u1901_41 B7F4  
                                            i2u1911_40 BB52  
                                            i2u1912_40 BB72  
                                            i2u1904_41 B8AC  
                                            i2u1754_40 00AA  
                                            i2u1906_40 B974  
                            __motor_calculate_distance 2168  
                                ??_USBStdSetCfgHandler 0018  
                      __parse_command_long@out_idx_ptr 00A4  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
              motor_move_degrees_int@distance_in_steps 009E  
                                 __size_ofi2__i2c_stop 0008  
                         ?_i2c_eeprom_recover_position 0001  
                            motor_goto_steps@overshoot 0098  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 58CA  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3730  
                                    __end_of_spi_tx_rx 3862  
                                    __end_of_spi_tx_tx 3C6E  
                             __end_of_i2c_display_init 5072  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 5DB0  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 5DA4  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                            __end_of__motor_move_steps EF4C  
                     __size_of__fill_buffer_get_status 0214  
                                              utoa@buf 0067  
                                           _motor_init 5C58  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0149  
                             _USBCtrlEPServiceComplete 1A0E  
                                              utoa@val 0069  
                                            _MSD_State 0158  
                                           _motor_stop 5112  
              __end_of__cluster_from_sector_and_offset 5AA8  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 5A80  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                      __size_of_motor_move_degrees_int 004A  
                           _USBStatusStageEnabledFlag1 015D  
                           _USBStatusStageEnabledFlag2 015C  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 4FD2  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 55B6  
motor_divide_jump_to_nearest@nearest_position_in_steps 009E  
                                          ___fladd@grs 008F  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 0095  
                                        ___xxtofl@sign 0072  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00AA  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 000C  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 0160  
                                          ___fldiv@grs 008B  
                                          ___fldiv@rem 0084  
                       i2c_eeprom_save_position@buffer 0026  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 4E30  
                           motor_arc_move@arc_in_steps 0095  
     __parse_jump_steps_with_overshoot@number_of_steps 009C  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 005E  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0091  
                 __end_of__encoder_next_setup_stepsize 435E  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 42EE  
                                          ___flmul@grs 0085  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1414  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 5E38  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 5E34  
                    __parse_jump_steps@number_of_steps 009C  
                         __end_of__display_signed_itoa 53B4  
                  __end_of__motor_get_speed_in_degrees 05AE  
                          __motor_get_speed_in_degrees 0474  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FA30  
                                   ??__i2c_eeprom_busy 0065  
                              __motor_decide_direction F458  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 4516  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                                     _motor_goto_steps 3696  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item C532  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3C6E  
                        ??_i2c_eeprom_recover_position 0079  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 2086  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                                       __end_of___flge 0B90  
                        ??__motor_get_speed_in_degrees 0093  
                                __end_of_USBDeviceInit FE20  
                __end_of_USBIncrement1msInternalTimers 5C58  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5C38  
                          __end_of__steps_from_degrees F106  
                                       __end_of___lmul 4CD6  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 00A4  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5AD0  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 0266  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 130E  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0093  
                              __end_ofi2_USBDeviceInit 01F4  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 483E  
                                      _MSDRetryAttempt 0154  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 589A  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0162  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 4B76  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 553E  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3990  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00D2  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 24E2  
                    __end_of__get_available_root_entry 5A2E  
                            __display_itoa_long@length 00C2  
         __motor_decide_direction@distance_to_limit_cw 0082  
  __step_position_from_divide_position@target_position 0095  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 0141  
                         __end_of_USBConfigureEndpoint 3B4C  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler DA72  
                                  __flash_partial_read 4200  
                                    USBStallEndpoint@p 0066  
                                     _motor_move_steps 5954  
                                        _MSDHostNoData 0151  
                                 ??__root_is_available 008F  
                               _motor_move_degrees_int 524C  
                    __end_of_USBCtrlEPAllowStatusStage 2C48  
                         ?__encoder_next_arc_step_size 0060  
                    __size_of_i2c_eeprom_save_position 0056  
                             __end_of_USBCtrlEPService 38FA  
                       ?__motor_steps_from_degrees_int 0091  
                           __size_of_MSDProcessCommand 0134  
                                  __size_of__motor_run 01D6  
                            ?_i2c_eeprom_save_position 0001  
                                            __i2c_read 3A24  
                                            __i2c_send 5DE6  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 5E04  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5C1C  
             __end_of__parse_jump_steps_with_overshoot FB82  
            __size_of__parse_jump_steps_with_overshoot 0152  
                   ??__parse_jump_steps_with_overshoot 009A  
                    ?__parse_jump_steps_with_overshoot 0094  
                     __parse_jump_steps_with_overshoot FA30  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FB  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 014C  
                                      _configFile_name 02D6  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F2B4  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 5C16  
                          _motor_decrease_manual_speed 5BF4  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 005B  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 4186  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 161C  
                          __size_of_flash_partial_read 0026  
                                             ??___flge 0080  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                      motor_move_degrees_int@direction 00A2  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0818  
                           __size_of__motor_move_steps 01D0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1BFC  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0297  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0041  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 1FA2  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 0136  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
     __motor_decide_direction@target_position_in_steps 007D  
                         __size_of__parse_command_long 0086  
                                   __end_of__i2c_start 5E14  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 50C2  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 0096  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0080  
                                            ___fladd@b 007C  
  motor_divide_jump_to_nearest@nearest_divide_position 00A2  
                                            __add_item 1914  
                               _USBActiveConfiguration 01C3  
                       __end_of_USBStdGetStatusHandler 35FC  
                                            ___fldiv@a 007C  
                                            ___fldiv@b 0078  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 5C92  
                          api_parse@receivedDataLength 00A9  
                                     api_parse@out_idx 00B0  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 007C  
                                            ___flmul@b 0078  
                                          __pbssCOMRAM 0053  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C4  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0EDA  
                     __end_of__motor_distance_to_limit FF68  
                                  _fat_restore_mbr_fbr 3B4C  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 0238  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 5B8C  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8422 0061  
         __end_of_i2c_display_program_custom_character 4090  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 4014  
                                            __get_date 5D98  
                                    _flash_sector_read 5AD0  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 5328  
                                            __get_item F5EE  
                      __end_of_fat_read_from_file_fast E3A6  
                                       _motor_set_zero 553E  
                                            __get_time 5D8C  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 4CD6  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 524C  
                                            _dc_manual 9DEE  
                          motor_move_degrees_int@speed 009B  
                           __end_of_USBWakeFromSuspend 56D2  
                            ??__motor_decide_direction 0082  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 5BD2  
                                          __parse_item C172  
                  __end_of__divide_jump_size_decrement 44AA  
                          __divide_jump_size_decrement 443C  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 543C  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 010F  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             motor_move_steps@distance 008C  
                                            __read_fat 4B76  
                          configFile_read@value_string 01EB  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 5770  
          __end_of__step_position_from_divide_position 1CE8  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 0095  
                 ?__step_position_from_divide_position 0091  
                  __step_position_from_divide_position 1BFC  
                              __motor_move_steps@speed 0081  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1414  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 014D  
                                _fat_get_format_status 315E  
                    fat_read_from_file_fast@start_byte 00A1  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                                            _api_parse 0944  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 2086  
                              __fill_buffer_get_status E5CA  
                                   _APP_DeviceMSDTasks 5D3C  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 007C  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 0094  
                                             ?___fldiv 0078  
                                            __ptext100 42EE  
                                            __ptext101 58CA  
                                            __ptext110 2086  
                                            __ptext102 435E  
                                             ?___flneg 0078  
                                            __ptext111 0EDA  
                                            __ptext103 54C0  
                                            __ptext200 4CD6  
                                            __ptext120 5296  
                                            __ptext112 E3A6  
                                            __ptext104 443C  
                                            __ptext201 5E14  
                                            __ptext121 E9C8  
                                            __ptext113 5500  
                                            __ptext105 A330  
                                            __ptext210 3862  
                                            __ptext202 5E1C  
                                            __ptext130 4A68  
                                            __ptext122 01F4  
                                            __ptext114 53B4  
                                            __ptext106 5D12  
                                            __ptext211 4958  
                                            __ptext203 5E24  
                                            __ptext131 5D3C  
                                            __ptext123 2326  
                                            __ptext115 32BA  
                                            __ptext107 0474  
                                            __ptext220 D7F6  
                                            __ptext212 3C6E  
                                            __ptext204 FF68  
                                            __ptext140 4F80  
                                            __ptext132 DCE6  
                                            __ptext124 583A  
                                            __ptext116 53F8  
                                            __ptext108 D53C  
                                            __ptext221 3D84  
                                            __ptext213 1A0E  
                                            __ptext205 00AE  
                                            __ptext141 3BDE  
                                            __ptext133 06E4  
                                            __ptext125 C8EC  
                                            __ptext117 4ED8  
                                            __ptext109 5370  
                                            __ptext230 5CE0  
                                            __ptext222 4F2C  
                                            __ptext214 3730  
                                            __ptext206 569A  
                                            __ptext150 5AD0  
                                            __ptext142 4AC2  
                                            __ptext134 46B8  
                                            __ptext126 CC3E  
                                            __ptext118 320C  
                                            __ptext231 5E34  
                                            __ptext223 2DCC  
                                            __ptext215 2698  
                                            __ptext207 589A  
                                            __ptext151 4200  
                                            __ptext143 4090  
                                            __ptext135 BD84  
                                            __ptext127 FCD4  
                                            __ptext119 2AB6  
                                            __ptext240 2846  
                                            __ptext232 57A4  
                                            __ptext224 2770  
                                            __ptext216 24E2  
                                            __ptext208 543C  
                                            __ptext160 5C16  
                                            __ptext152 5B8C  
                                            __ptext144 E7DE  
                                            __ptext136 CF7A  
                                            __ptext128 586A  
                                            __ptext241 0000  
                                            __ptext233 151A  
                                            __ptext225 4DDA  
                                            __ptext217 59AE  
                                            __ptext209 5C38  
                                            __ptext161 5DF0  
                                            __ptext153 4C26  
                                            __ptext145 0DC4  
                                            __ptext137 5E30  
                                            __ptext129 57D8  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext234 557A  
                                            __ptext226 1414  
                                            __ptext218 355C  
                                            __ptext170 F8D4  
                                            __ptext162 340E  
                                            __ptext154 4B1C  
                                            __ptext146 0CAA  
                                            __ptext138 5708  
                                            __ptext235 3AB8  
                                            __ptext227 5D6E  
                                            __ptext219 0818  
                                            __ptext171 5112  
                                            __ptext163 2404  
                                            __ptext155 5770  
                                            __ptext147 1204  
                                            __ptext139 50C2  
                                            __ptext236 483E  
                                            __ptext228 0FE8  
                                            __ptext180 3E8E  
                                            __ptext172 553E  
                                            __ptext164 E5CA  
                                            __ptext156 37CA  
                                            __ptext148 471A  
                                            __ptext237 10F6  
                                            __ptext229 477C  
                                            __ptext181 5162  
                                            __ptext173 3364  
                                            __ptext165 47DE  
                                            __ptext157 2D0C  
                                            __ptext149 573C  
                                            __ptext238 2B84  
                                            __ptext190 4C7E  
                                            __ptext182 5DFA  
                                            __ptext174 5926  
                                            __ptext166 F106  
                                            __ptext158 5DA4  
                                            __ptext239 2C48  
                                            __ptext191 130E  
                                            __ptext183 FA30  
                                            __ptext175 3696  
                                            __ptext167 2F40  
                                            __ptext159 5D28  
                                            __ptext184 FB82  
                                            __ptext176 F458  
                                            __ptext168 58F8  
                                            __ptext193 55F0  
                                            __ptext185 5954  
                                            __ptext177 2168  
                                            __ptext169 0944  
                                            __ptext194 1B08  
                                            __ptext186 ED7C  
                                            __ptext178 5DB0  
                                            __ptext195 B7BE  
                                            __ptext187 1CE8  
                                            __ptext179 3CFE  
                                            __ptext196 4D84  
                                            __ptext188 5DBC  
                                            __ptext197 3F12  
                                            __ptext189 FE20  
                                            __ptext198 5328  
                                            __ptext199 5B1E  
                                             ?___flmul 0078  
                          __size_of_motor_move_endless 002E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                      motor_move_degrees_int@overshoot 009D  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 562A  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                     __size_of__motor_schedule_command 00EC  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 0098  
                                            _idle_rate 01C2  
                   __size_of__motor_calculate_distance 00E0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 2404  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __motor_calculate_distance@distance 0069  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 130E  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 5370  
                  __end_of__divide_jump_size_increment 5500  
                          __divide_jump_size_increment 54C0  
                                    ??_display_prepare 00C6  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 5DB0  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F8D4  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 5BB0  
                                        _fat_find_file 1DD4  
                                    __display_itoa@len 00B4  
                                    __display_itoa@pos 00B6  
                                    __display_itoa@tmp 00AA  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2FF8  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 489E  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00A8  
                             ??_motor_speed_from_index 009F  
                            __end_of_flash_sector_read 5AF8  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 012F  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 557A  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 5DFA  
                                        _MSDWriteState 0155  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 5296  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F458  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 012C  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0129  
                                       __display_start 30AC  
                                  __size_of_motor_stop 0050  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D266  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5926  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2846  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003D  
                           configFile_read@item_string 01CC  
                                          _encoder_run 1B08  
                             __fat_offset_from_cluster 5CAC  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00A7  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks DCE6  
                                            _motor_isr B7BE  
                           _USBDeferINDataStagePackets 015B  
                                 _active_configuration 014E  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F2B4  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F106  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 5E24  
                                 __end_ofi2__i2c_write 5370  
                                 _USBConfigureEndpoint 3AB8  
                                         ??__motor_run 0067  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 37CA  
                                            _spi_tx_tx 3BDE  
                          __size_ofi2__i2c_eeprom_busy 0026  
                      __end_of__motor_decide_direction F5EE  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 013F  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                    __end_of__motor_calculate_distance 2248  
                __motor_steps_from_degrees_int@degrees 0091  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 5DF6  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 30AC  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0163  
                    __end_of_ExternalFlash_MediaDetect 5DFA  
                                             i2_memcpy 4958  
                                             i2_memset 59AE  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2FF8  
                                          __write_root 5200  
                                   ?_SYS_InterruptHigh 0001  
                             __end_of_motor_goto_steps 3730  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 52E0  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 5480  
                    __motor_schedule_command@direction 0067  
                             __sector_from_file_number 580A  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 315E  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 39A4  
                                            copy_data1 39C4  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 25C0  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 5C76  
                                  ??_SYS_InterruptHigh 0045  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0156  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run ED7C  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5DD2  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 0338  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 009F  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FB82  
                    __size_of__motor_distance_to_limit 0148  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 5D8C  
                                       _TransferLength 013B  
                                           ?_motor_isr 0001  
                            ?__motor_distance_to_limit 006C  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2E88  
                                      api_parse@in_idx 00B1  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 573C  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 0094  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 4654  
                                      _MSDWriteHandler CF7A  
                                     __size_of___fldiv 02BA  
                             __end_of_motor_move_steps 5982  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00C3  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 0150  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00C5  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 4BCE  
                          __steps_from_degrees@degrees 0091  
  __motor_distance_to_limit@distance_to_limit_in_steps 0074  
                                             __get_fbr DA72  
                                             __get_mbr 2918  
                                          ??__add_item 008C  
                     __end_of_i2c_eeprom_save_position 4DDA  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 009A  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 5D3C  
                           _ExternalFlash_CapacityRead 5D28  
                                             ___xxtofl 01F4  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 0098  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5D4E  
                              ?_motor_move_degrees_int 0099  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5DDC  
                                             __ptext11 5A58  
                                             __ptext20 DA72  
                                             __ptext12 5D7E  
                                             __ptext21 5B44  
                                             __ptext13 5480  
                                             __ptext30 5072  
                                             __ptext22 5662  
                                             __ptext14 562A  
                                             __ptext31 4654  
                                             __ptext23 4E30  
                                             __ptext15 43CE  
                                             __ptext40 0338  
                                             __ptext32 5E04  
                                             __ptext24 5BB0  
                                             __ptext16 5D4E  
                                             __ptext41 5200  
                                             __ptext33 5E0C  
                                             __ptext25 5B68  
                                             __ptext17 3B4C  
                                             __ptext50 5D98  
                                             __ptext42 44AA  
                                             __ptext34 5DE6  
                                             __ptext26 55B6  
                                             __ptext18 315E  
                                             __ptext51 5A04  
                                             __ptext43 49B4  
                                             __ptext35 30AC  
                                             __ptext27 4014  
                                             __ptext19 2918  
                                             __ptext60 E180  
                                             __ptext52 1914  
                                             __ptext44 D266  
                                             __ptext36 2FF8  
                                             __ptext28 59DA  
                                             __ptext61 34B6  
                                             __ptext53 4E84  
                                             __ptext45 56D2  
                                             __ptext37 C532  
                                             __ptext29 5022  
                                             __ptext70 5AF8  
                                             __ptext62 52E0  
                                             __ptext54 171A  
                                             __ptext46 29E8  
                                             __ptext38 161C  
                                             __ptext71 580A  
                                             __ptext63 4B76  
                                             __ptext55 45EC  
                                             __ptext47 489E  
                                             __ptext39 DF4C  
                                             __ptext80 5BD2  
                                             __ptext72 5A2E  
                                             __ptext64 5C92  
                                             __ptext56 3E0A  
                                             __ptext48 5A80  
                                             __ptext81 5AA8  
                                             __ptext73 1DD4  
                                             __ptext65 5CAC  
                                             __ptext57 427A  
                                             __ptext49 5D8C  
                                             __ptext90 EBA6  
                                             __ptext82 EF4C  
                                             __ptext74 3F94  
                                             __ptext66 5D5E  
                                             __ptext58 F2B4  
                                             __ptext91 AF94  
                                             __ptext83 0A6E  
                                             __ptext75 C172  
                                             __ptext67 410C  
                                             __ptext59 1EBC  
                                             __ptext92 524C  
                                             __ptext84 F5EE  
                                             __ptext76 4A0E  
                                             __ptext68 4186  
                                             __ptext93 0B90  
                                             __ptext85 4BCE  
                                             __ptext77 5CFA  
                                             __ptext69 4516  
                                             __ptext94 5CC6  
                                             __ptext86 5982  
                                             __ptext78 1818  
                                             __ptext95 F778  
                                             __ptext87 4582  
                                             __ptext79 25C0  
                                             __ptext96 2E88  
                                             __ptext88 5E2C  
                                             __ptext97 1BFC  
                                             __ptext89 35FC  
                                             __ptext98 5BF4  
                                             __ptext99 1FA2  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 471A  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 46B8  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 3CFE  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4A0E  
                           __flash_copy_page_to_buffer 49B4  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 34B6  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 4C7E  
                              __parse_set_manual_speed 3E8E  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3CFE  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                                        __size_of_utoa 00AA  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 4516  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FCD4  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 55F0  
                             ??__motor_move_back_forth 0068  
                                  _USBCtrlTrfInHandler 2C48  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00AC  
                               __end_of__i2c_wait_idle 46B8  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 5E2C  
                           __end_of_motor_items_in_cue 5DC8  
                                             _outPipes 0100  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 5E1C  
                                             _spi_init 5480  
                              __motor_schedule_command 1CE8  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 483E  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5A58  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2B84  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00A0  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4D2E  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa E5CA  
                                     i2_ResetSenseData 477C  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 009E  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 015E  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status E7DE  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __end_of_motor_move_degrees_int 5296  
                       __parse_jump_steps@return_value 009B  
                            motor_move_steps@direction 0093  
                         __size_of__steps_from_degrees 01BA  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 0099  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                __motor_move_back_forth@return_value_1 0068  
                __motor_move_back_forth@return_value_2 0069  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2DCC  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2D0C  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 5DDC  
                              __end_of_fat_create_file 0474  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 5DBC  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3E0A  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 3D84  
            __motor_schedule_command@distance_in_steps 0060  
                                   __end_of_motor_init 5C76  
                                         ?__parse_item 0099  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 573C  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 5162  
                __end_of__flash_write_page_from_buffer 4B1C  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4AC2  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0242  
                           __end_of_flash_partial_read 5B1E  
                              __end_of_MSDWriteHandler D266  
                                            strncmp@s1 0060  
                  __end_of_i2c_eeprom_recover_position 4958  
                                            strncmp@s2 0062  
                          _i2c_eeprom_recover_position 48FC  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 5D12  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                             motor_goto_steps@position 0092  
                                      _display_prepare A330  
                                          ??_motor_isr 002D  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 10F6  
                                   _USBWakeFromSuspend 569A  
                                ??__parse_command_long 00A6  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 5BB0  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler D7F6  
                                      _fat_modify_file DF4C  
                                  i2_SYSTEM_Initialize 4F2C  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2846  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 0095  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2E88  
                                             ultoa@val 006F  
                                      _gblMediaPresent 013D  
                   __motor_steps_from_degrees_int@temp 0095  
                             configFile_read@file_size 01F7  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                  __motor_calculate_distance@direction 0068  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BF  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 0143  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            motor_move_steps@overshoot 0092  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 0161  
                                       _display_update 5662  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 5162  
                             _i2c_eeprom_save_position 4D84  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 008C  
                         __end_of_adc_read_temperature EBA6  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 0DC4  
                                  ??_motor_divide_jump 009E  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 5E1C  
                              motor_arc_move@direction 0094  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 5328  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0240  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                                         ___fladd@aexp 008D  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 008E  
                                           _USBMSDInit 0FE8  
                         _USBStatusStageTimeoutCounter 015F  
                                          i2__i2c_send 5E24  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 5E14  
                                     ??_motor_arc_move 0094  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00B7  
                          __end_of__flash_partial_read 427A  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 5E2C  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00A4  
                           __size_of__parse_jump_steps 0152  
                            __size_of_configFile_write 03BA  
                              __display_itoa_long@text 00BC  
                            ??__motor_schedule_command 0067  
                   __motor_distance_to_limit@direction 0078  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                           __end_of_motor_move_endless 5954  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 014F  
                                          _USBInHandle 0137  
                             _APP_DeviceCustomHIDTasks 340E  
                      __size_of__motor_move_back_forth 00AA  
                           __end_of_flash_sector_write 5112  
