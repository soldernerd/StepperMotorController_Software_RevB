

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Dec 15 23:33:16 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   249                           	psect	text228,global,reloc=2,class=CODE,delta=1
   250                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   251                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   252                           	dabs	1,0x600,512,_msd_buffer
   253                           	dabs	1,0xD00,48,_BDT
   254                           	dabs	1,0xD40,31,_msd_cbw
   255                           	dabs	1,0xD80,13,_msd_csw
   256                           	dabs	1,0xD38,8,_CtrlTrfData
   257                           	dabs	1,0xD30,8,_SetupPkt
   258  0000                     
   259                           ; Version 2.00
   260                           ; Generated 27/05/2018 GMT
   261                           ; 
   262                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   263                           ; All rights reserved.
   264                           ; 
   265                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   266                           ; 
   267                           ; Redistribution and use in source and binary forms, with or without modification, are
   268                           ; permitted provided that the following conditions are met:
   269                           ; 
   270                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   271                           ;        conditions and the following disclaimer.
   272                           ; 
   273                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   274                           ;        of conditions and the following disclaimer in the documentation and/or other
   275                           ;        materials provided with the distribution.
   276                           ; 
   277                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   278                           ;        software without specific prior written permission.
   279                           ; 
   280                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   281                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   282                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   283                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   284                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   285                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   286                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   287                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   288                           ; 
   289                           ; 
   290                           ; Code-generator required, PIC18F47J53 Definitions
   291                           ; 
   292                           ; SFR Addresses
   293  0000                     
   294                           	psect	idataBANK2
   295  014B88                     __pidataBANK2:
   296                           	opt stack 0
   297                           
   298                           ;initializer for _LUN
   299  014B88  0E                 	db	low _ExternalFlash_MediaInitialize
   300  014B89  56                 	db	high _ExternalFlash_MediaInitialize
   301  014B8A  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   302  014B8B  20                 	db	low _ExternalFlash_CapacityRead
   303  014B8C  57                 	db	high _ExternalFlash_CapacityRead
   304  014B8D  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   305  014B8E  9C                 	db	low _ExternalFlash_SectorSizeRead
   306  014B8F  57                 	db	high _ExternalFlash_SectorSizeRead
   307  014B90  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   308  014B91  E6                 	db	low _ExternalFlash_MediaDetect
   309  014B92  57                 	db	high _ExternalFlash_MediaDetect
   310  014B93  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   311  014B94  5C                 	db	low _ExternalFlash_SectorRead
   312  014B95  51                 	db	high _ExternalFlash_SectorRead
   313  014B96  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   314  014B97  1C                 	db	low _ExternalFlash_WriteProtectStateGet
   315  014B98  58                 	db	high _ExternalFlash_WriteProtectStateGet
   316  014B99  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   317  014B9A  28                 	db	low _ExternalFlash_SectorWrite
   318  014B9B  51                 	db	high _ExternalFlash_SectorWrite
   319  014B9C  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   320  014B9D  00                 	db	0
   321  014B9E  00                 	db	0
   322  014B9F  00                 	db	0
   323  014BA0  00                 	db	0
   324  014BA1  00                 	db	0
   325  014BA2  00                 	db	0
   326  014BA3  00                 	db	0
   327  014BA4  00                 	db	0
   328                           
   329                           ;initializer for i2c_display_init@F6932
   330  014BA5  3A                 	db	58
   331  014BA6  1E                 	db	30
   332  014BA7  39                 	db	57
   333  014BA8  0C                 	db	12
   334  014BA9  74                 	db	116
   335  014BAA  5C                 	db	92
   336  014BAB  6D                 	db	109
   337  014BAC  0C                 	db	12
   338  014BAD  01                 	db	1
   339                           
   340                           ;initializer for __i2c_display_send_init_sequence@F6929
   341  014BAE  3A                 	db	58
   342  014BAF  1E                 	db	30
   343  014BB0  39                 	db	57
   344  014BB1  0C                 	db	12
   345  014BB2  74                 	db	116
   346  014BB3  5C                 	db	92
   347  014BB4  6D                 	db	109
   348  014BB5  0C                 	db	12
   349  014BB6  01                 	db	1
   350                           
   351                           ;initializer for _tx_buf
   352  014BB7  01                 	db	1
   353  014BB8  02                 	db	2
   354  014BB9  03                 	db	3
   355  014BBA  04                 	db	4
   356  014BBB  05                 	db	5
   357  014BBC  06                 	db	6
   358  014BBD  07                 	db	7
   359  014BBE  08                 	db	8
   360                           
   361                           ;initializer for _configFile_used_name
   362  014BBF  55                 	db	85
   363  014BC0  53                 	db	83
   364  014BC1  45                 	db	69
   365  014BC2  44                 	db	68
   366  014BC3  43                 	db	67
   367  014BC4  4F                 	db	79
   368  014BC5  4E                 	db	78
   369  014BC6  46                 	db	70
   370                           
   371                           ;initializer for _configFile_name
   372  014BC7  43                 	db	67
   373  014BC8  4F                 	db	79
   374  014BC9  4E                 	db	78
   375  014BCA  46                 	db	70
   376  014BCB  49                 	db	73
   377  014BCC  47                 	db	71
   378  014BCD  20                 	db	32
   379  014BCE  20                 	db	32
   380                           
   381                           ;initializer for _configFile_used_extention
   382  014BCF  54                 	db	84
   383  014BD0  58                 	db	88
   384  014BD1  54                 	db	84
   385                           
   386                           ;initializer for _configFile_extention
   387  014BD2  54                 	db	84
   388  014BD3  58                 	db	88
   389  014BD4  54                 	db	84
   390                           
   391                           	psect	idataBANK4
   392  014A48                     __pidataBANK4:
   393                           	opt stack 0
   394                           
   395                           ;initializer for _dc_startup
   396  014A48  2A                 	db	42
   397  014A49  20                 	db	32
   398  014A4A  20                 	db	32
   399  014A4B  53                 	db	83
   400  014A4C  74                 	db	116
   401  014A4D  65                 	db	101
   402  014A4E  70                 	db	112
   403  014A4F  70                 	db	112
   404  014A50  65                 	db	101
   405  014A51  72                 	db	114
   406  014A52  20                 	db	32
   407  014A53  4D                 	db	77
   408  014A54  6F                 	db	111
   409  014A55  74                 	db	116
   410  014A56  6F                 	db	111
   411  014A57  72                 	db	114
   412  014A58  20                 	db	32
   413  014A59  20                 	db	32
   414  014A5A  20                 	db	32
   415  014A5B  2A                 	db	42
   416  014A5C  2A                 	db	42
   417  014A5D  20                 	db	32
   418  014A5E  20                 	db	32
   419  014A5F  20                 	db	32
   420  014A60  20                 	db	32
   421  014A61  43                 	db	67
   422  014A62  6F                 	db	111
   423  014A63  6E                 	db	110
   424  014A64  74                 	db	116
   425  014A65  72                 	db	114
   426  014A66  6F                 	db	111
   427  014A67  6C                 	db	108
   428  014A68  6C                 	db	108
   429  014A69  65                 	db	101
   430  014A6A  72                 	db	114
   431  014A6B  20                 	db	32
   432  014A6C  20                 	db	32
   433  014A6D  20                 	db	32
   434  014A6E  20                 	db	32
   435  014A6F  2A                 	db	42
   436  014A70  2A                 	db	42
   437  014A71  20                 	db	32
   438  014A72  20                 	db	32
   439  014A73  20                 	db	32
   440  014A74  20                 	db	32
   441  014A75  76                 	db	118
   442  014A76  20                 	db	32
   443  014A77  20                 	db	32
   444  014A78  20                 	db	32
   445  014A79  20                 	db	32
   446  014A7A  20                 	db	32
   447  014A7B  20                 	db	32
   448  014A7C  20                 	db	32
   449  014A7D  20                 	db	32
   450  014A7E  20                 	db	32
   451  014A7F  20                 	db	32
   452  014A80  20                 	db	32
   453  014A81  20                 	db	32
   454  014A82  20                 	db	32
   455  014A83  2A                 	db	42
   456  014A84  2A                 	db	42
   457  014A85  20                 	db	32
   458  014A86  20                 	db	32
   459  014A87  73                 	db	115
   460  014A88  6F                 	db	111
   461  014A89  6C                 	db	108
   462  014A8A  64                 	db	100
   463  014A8B  65                 	db	101
   464  014A8C  72                 	db	114
   465  014A8D  6E                 	db	110
   466  014A8E  65                 	db	101
   467  014A8F  72                 	db	114
   468  014A90  64                 	db	100
   469  014A91  2E                 	db	46
   470  014A92  63                 	db	99
   471  014A93  6F                 	db	111
   472  014A94  6D                 	db	109
   473  014A95  20                 	db	32
   474  014A96  20                 	db	32
   475  014A97  2A                 	db	42
   476                           
   477                           	psect	mediumconst
   478  009092                     __pmediumconst:
   479                           	opt stack 0
   480  009092  00                 	db	0
   481  009093                     _motor_speed_lookup:
   482                           	opt stack 0
   483  009093  0008               	dw	8
   484  009095  000C               	dw	12
   485  009097  0010               	dw	16
   486  009099  0013               	dw	19
   487  00909B  0016               	dw	22
   488  00909D  0019               	dw	25
   489  00909F  001C               	dw	28
   490  0090A1  001E               	dw	30
   491  0090A3  0021               	dw	33
   492  0090A5  0023               	dw	35
   493  0090A7  0026               	dw	38
   494  0090A9  0028               	dw	40
   495  0090AB  002A               	dw	42
   496  0090AD  002C               	dw	44
   497  0090AF  002E               	dw	46
   498  0090B1  0030               	dw	48
   499  0090B3  0032               	dw	50
   500  0090B5  0034               	dw	52
   501  0090B7  0036               	dw	54
   502  0090B9  0038               	dw	56
   503  0090BB  003A               	dw	58
   504  0090BD  003C               	dw	60
   505  0090BF  003D               	dw	61
   506  0090C1  003F               	dw	63
   507  0090C3  0041               	dw	65
   508  0090C5  0043               	dw	67
   509  0090C7  0045               	dw	69
   510  0090C9  0046               	dw	70
   511  0090CB  0048               	dw	72
   512  0090CD  0049               	dw	73
   513  0090CF  004B               	dw	75
   514  0090D1  004D               	dw	77
   515  0090D3  004E               	dw	78
   516  0090D5  0050               	dw	80
   517  0090D7  0051               	dw	81
   518  0090D9  0053               	dw	83
   519  0090DB  0054               	dw	84
   520  0090DD  0056               	dw	86
   521  0090DF  0057               	dw	87
   522  0090E1  0059               	dw	89
   523  0090E3  005A               	dw	90
   524  0090E5  005C               	dw	92
   525  0090E7  005D               	dw	93
   526  0090E9  005F               	dw	95
   527  0090EB  0060               	dw	96
   528  0090ED  0062               	dw	98
   529  0090EF  0063               	dw	99
   530  0090F1  0064               	dw	100
   531  0090F3  0066               	dw	102
   532  0090F5  0067               	dw	103
   533  0090F7  0069               	dw	105
   534  0090F9  006A               	dw	106
   535  0090FB  006C               	dw	108
   536  0090FD  006D               	dw	109
   537  0090FF  006E               	dw	110
   538  009101  0070               	dw	112
   539  009103  0071               	dw	113
   540  009105  0072               	dw	114
   541  009107  0073               	dw	115
   542  009109  0074               	dw	116
   543  00910B  0076               	dw	118
   544  00910D  0078               	dw	120
   545  00910F  0079               	dw	121
   546  009111  007A               	dw	122
   547  009113  007B               	dw	123
   548  009115  007D               	dw	125
   549  009117  007E               	dw	126
   550  009119  007F               	dw	127
   551  00911B  0082               	dw	130
   552  00911D  0085               	dw	133
   553  00911F  0087               	dw	135
   554  009121  008A               	dw	138
   555  009123  008C               	dw	140
   556  009125  008F               	dw	143
   557  009127  0091               	dw	145
   558  009129  0092               	dw	146
   559  00912B  0094               	dw	148
   560  00912D  0098               	dw	152
   561  00912F  009A               	dw	154
   562  009131  009C               	dw	156
   563  009133  009E               	dw	158
   564  009135  00A1               	dw	161
   565  009137  00A3               	dw	163
   566  009139  00A5               	dw	165
   567  00913B  00A7               	dw	167
   568  00913D  00AA               	dw	170
   569  00913F  00AC               	dw	172
   570  009141  00AF               	dw	175
   571  009143  00B2               	dw	178
   572  009145  00B4               	dw	180
   573  009147  00B7               	dw	183
   574  009149  00B8               	dw	184
   575  00914B  00BA               	dw	186
   576  00914D  00BC               	dw	188
   577  00914F  00BE               	dw	190
   578  009151  00C0               	dw	192
   579  009153  00C3               	dw	195
   580  009155  00C4               	dw	196
   581  009157  00C6               	dw	198
   582  009159  00C8               	dw	200
   583  00915B  00CA               	dw	202
   584  00915D  00CC               	dw	204
   585  00915F  00CE               	dw	206
   586  009161  00D0               	dw	208
   587  009163  00D2               	dw	210
   588  009165  00D4               	dw	212
   589  009167  00D6               	dw	214
   590  009169  00D8               	dw	216
   591  00916B  00D9               	dw	217
   592  00916D  00DB               	dw	219
   593  00916F  00DD               	dw	221
   594  009171  00DF               	dw	223
   595  009173  00E1               	dw	225
   596  009175  00E2               	dw	226
   597  009177  00E5               	dw	229
   598  009179  00E7               	dw	231
   599  00917B  00E8               	dw	232
   600  00917D  00EA               	dw	234
   601  00917F  00EC               	dw	236
   602  009181  00EE               	dw	238
   603  009183  00EF               	dw	239
   604  009185  00F2               	dw	242
   605  009187  00F3               	dw	243
   606  009189  00F5               	dw	245
   607  00918B  00F7               	dw	247
   608  00918D  00F8               	dw	248
   609  00918F  00FB               	dw	251
   610  009191  00FD               	dw	253
   611  009193  0100               	dw	256
   612  009195  0103               	dw	259
   613  009197  0104               	dw	260
   614  009199  0107               	dw	263
   615  00919B  010A               	dw	266
   616  00919D  010C               	dw	268
   617  00919F  010F               	dw	271
   618  0091A1  0112               	dw	274
   619  0091A3  0114               	dw	276
   620  0091A5  0117               	dw	279
   621  0091A7  0119               	dw	281
   622  0091A9  011C               	dw	284
   623  0091AB  011E               	dw	286
   624  0091AD  0121               	dw	289
   625  0091AF  0123               	dw	291
   626  0091B1  0125               	dw	293
   627  0091B3  0129               	dw	297
   628  0091B5  012B               	dw	299
   629  0091B7  012C               	dw	300
   630  0091B9  012E               	dw	302
   631  0091BB  0132               	dw	306
   632  0091BD  0134               	dw	308
   633  0091BF  0136               	dw	310
   634  0091C1  0138               	dw	312
   635  0091C3  013B               	dw	315
   636  0091C5  013D               	dw	317
   637  0091C7  013F               	dw	319
   638  0091C9  0143               	dw	323
   639  0091CB  0146               	dw	326
   640  0091CD  0148               	dw	328
   641  0091CF  014A               	dw	330
   642  0091D1  014C               	dw	332
   643  0091D3  014F               	dw	335
   644  0091D5  0151               	dw	337
   645  0091D7  0154               	dw	340
   646  0091D9  0156               	dw	342
   647  0091DB  0159               	dw	345
   648  0091DD  015B               	dw	347
   649  0091DF  015E               	dw	350
   650  0091E1  0160               	dw	352
   651  0091E3  0163               	dw	355
   652  0091E5  0166               	dw	358
   653  0091E7  0169               	dw	361
   654  0091E9  016B               	dw	363
   655  0091EB  016E               	dw	366
   656  0091ED  0171               	dw	369
   657  0091EF  0174               	dw	372
   658  0091F1  0177               	dw	375
   659  0091F3  017A               	dw	378
   660  0091F5  017D               	dw	381
   661  0091F7  0180               	dw	384
   662  0091F9  0183               	dw	387
   663  0091FB  0187               	dw	391
   664  0091FD  018A               	dw	394
   665  0091FF  018D               	dw	397
   666  009201  0191               	dw	401
   667  009203  0194               	dw	404
   668  009205  0198               	dw	408
   669  009207  019B               	dw	411
   670  009209  019F               	dw	415
   671  00920B  01A3               	dw	419
   672  00920D  01A6               	dw	422
   673  00920F  01AA               	dw	426
   674  009211  01AE               	dw	430
   675  009213  01B2               	dw	434
   676  009215  01B6               	dw	438
   677  009217  01BA               	dw	442
   678  009219  01BE               	dw	446
   679  00921B  01C3               	dw	451
   680  00921D  01C7               	dw	455
   681  00921F  01CC               	dw	460
   682  009221  01D0               	dw	464
   683  009223  01D5               	dw	469
   684  009225  01D9               	dw	473
   685  009227  01DE               	dw	478
   686  009229  01E3               	dw	483
   687  00922B  01E8               	dw	488
   688  00922D  01ED               	dw	493
   689  00922F  01F3               	dw	499
   690  009231  01F8               	dw	504
   691  009233  01FE               	dw	510
   692  009235  0203               	dw	515
   693  009237  0209               	dw	521
   694  009239  020F               	dw	527
   695  00923B  0215               	dw	533
   696  00923D  021B               	dw	539
   697  00923F  0221               	dw	545
   698  009241  0227               	dw	551
   699  009243  022E               	dw	558
   700  009245  0235               	dw	565
   701  009247  023C               	dw	572
   702  009249  0243               	dw	579
   703  00924B  024A               	dw	586
   704  00924D  0251               	dw	593
   705  00924F  0259               	dw	601
   706  009251  0261               	dw	609
   707  009253  0269               	dw	617
   708  009255  0271               	dw	625
   709  009257  0279               	dw	633
   710  009259  0282               	dw	642
   711  00925B  028B               	dw	651
   712  00925D  0294               	dw	660
   713  00925F  029E               	dw	670
   714  009261  02A7               	dw	679
   715  009263  02B1               	dw	689
   716  009265  02BC               	dw	700
   717  009267  02C6               	dw	710
   718  009269  02D1               	dw	721
   719  00926B  02DC               	dw	732
   720  00926D  02DC               	dw	732
   721  00926F  02DF               	dw	735
   722  009271  02E2               	dw	738
   723  009273  02E5               	dw	741
   724  009275  02E8               	dw	744
   725  009277  02EB               	dw	747
   726  009279  02EE               	dw	750
   727  00927B  02F1               	dw	753
   728  00927D  02F4               	dw	756
   729  00927F  02F7               	dw	759
   730  009281  02FA               	dw	762
   731  009283  02FD               	dw	765
   732  009285  0300               	dw	768
   733  009287  0304               	dw	772
   734  009289  0307               	dw	775
   735  00928B  030A               	dw	778
   736  00928D  030D               	dw	781
   737  00928F  0311               	dw	785
   738  009291  0314               	dw	788
   739  009293  0317               	dw	791
   740  009295  031A               	dw	794
   741  009297  031E               	dw	798
   742  009299  0321               	dw	801
   743  00929B  0325               	dw	805
   744  00929D  0328               	dw	808
   745  00929F  032C               	dw	812
   746  0092A1  032F               	dw	815
   747  0092A3  0333               	dw	819
   748  0092A5  0336               	dw	822
   749  0092A7  033A               	dw	826
   750  0092A9  033E               	dw	830
   751  0092AB  0341               	dw	833
   752  0092AD  0345               	dw	837
   753  0092AF  0349               	dw	841
   754  0092B1  034D               	dw	845
   755  0092B3  0350               	dw	848
   756  0092B5  0354               	dw	852
   757  0092B7  0358               	dw	856
   758  0092B9  035C               	dw	860
   759  0092BB  0360               	dw	864
   760  0092BD  0364               	dw	868
   761  0092BF  0368               	dw	872
   762  0092C1  036C               	dw	876
   763  0092C3  0370               	dw	880
   764  0092C5  0374               	dw	884
   765  0092C7  0379               	dw	889
   766  0092C9  037D               	dw	893
   767  0092CB  0381               	dw	897
   768  0092CD  0385               	dw	901
   769  0092CF  038A               	dw	906
   770  0092D1  038E               	dw	910
   771  0092D3  0393               	dw	915
   772  0092D5  0397               	dw	919
   773  0092D7  039C               	dw	924
   774  0092D9  03A0               	dw	928
   775  0092DB  03A5               	dw	933
   776  0092DD  03AA               	dw	938
   777  0092DF  03AE               	dw	942
   778  0092E1  03B3               	dw	947
   779  0092E3  03B8               	dw	952
   780  0092E5  03BD               	dw	957
   781  0092E7  03C2               	dw	962
   782  0092E9  03C6               	dw	966
   783  0092EB  03CC               	dw	972
   784  0092ED  03D1               	dw	977
   785  0092EF  03D6               	dw	982
   786  0092F1  03DB               	dw	987
   787  0092F3  03E0               	dw	992
   788  0092F5  03E5               	dw	997
   789  0092F7  03EB               	dw	1003
   790  0092F9  03F0               	dw	1008
   791  0092FB  03F6               	dw	1014
   792  0092FD  03FB               	dw	1019
   793  0092FF  0401               	dw	1025
   794  009301  0406               	dw	1030
   795  009303  040C               	dw	1036
   796  009305  0412               	dw	1042
   797  009307  0417               	dw	1047
   798  009309  041D               	dw	1053
   799  00930B  0423               	dw	1059
   800  00930D  0429               	dw	1065
   801  00930F  042F               	dw	1071
   802  009311  0436               	dw	1078
   803  009313  043C               	dw	1084
   804  009315  0442               	dw	1090
   805  009317  0448               	dw	1096
   806  009319  044F               	dw	1103
   807  00931B  0455               	dw	1109
   808  00931D  045C               	dw	1116
   809  00931F  0463               	dw	1123
   810  009321  046A               	dw	1130
   811  009323  0470               	dw	1136
   812  009325  0477               	dw	1143
   813  009327  047E               	dw	1150
   814  009329  0485               	dw	1157
   815  00932B  048D               	dw	1165
   816  00932D  0494               	dw	1172
   817  00932F  049B               	dw	1179
   818  009331  04A3               	dw	1187
   819  009333  04AA               	dw	1194
   820  009335  04B2               	dw	1202
   821  009337  04BA               	dw	1210
   822  009339  04C2               	dw	1218
   823  00933B  04C9               	dw	1225
   824  00933D  04D2               	dw	1234
   825  00933F  04DA               	dw	1242
   826  009341  04E2               	dw	1250
   827  009343  04EA               	dw	1258
   828  009345  04F3               	dw	1267
   829  009347  04FC               	dw	1276
   830  009349  0504               	dw	1284
   831  00934B  050D               	dw	1293
   832  00934D  0516               	dw	1302
   833  00934F  051F               	dw	1311
   834  009351  0528               	dw	1320
   835  009353  0532               	dw	1330
   836  009355  053B               	dw	1339
   837  009357  0545               	dw	1349
   838  009359  054F               	dw	1359
   839  00935B  0559               	dw	1369
   840  00935D  0563               	dw	1379
   841  00935F  056D               	dw	1389
   842  009361  0577               	dw	1399
   843  009363  0582               	dw	1410
   844  009365  058C               	dw	1420
   845  009367  0597               	dw	1431
   846  009369  05A2               	dw	1442
   847  00936B  05AD               	dw	1453
   848  00936D  05B9               	dw	1465
   849  00936F  05C4               	dw	1476
   850  009371  05D0               	dw	1488
   851  009373  05DC               	dw	1500
   852  009375  05E8               	dw	1512
   853  009377  05F4               	dw	1524
   854  009379  0601               	dw	1537
   855  00937B  060E               	dw	1550
   856  00937D  061A               	dw	1562
   857  00937F  0628               	dw	1576
   858  009381  0635               	dw	1589
   859  009383  0643               	dw	1603
   860  009385  0650               	dw	1616
   861  009387  065E               	dw	1630
   862  009389  066D               	dw	1645
   863  00938B  067B               	dw	1659
   864  00938D  068A               	dw	1674
   865  00938F  0699               	dw	1689
   866  009391  06A9               	dw	1705
   867  009393  06B8               	dw	1720
   868  009395  06C8               	dw	1736
   869  009397  06D8               	dw	1752
   870  009399  06E9               	dw	1769
   871  00939B  06FA               	dw	1786
   872  00939D  070B               	dw	1803
   873  00939F  071C               	dw	1820
   874  0093A1  072E               	dw	1838
   875  0093A3  0740               	dw	1856
   876  0093A5  0753               	dw	1875
   877  0093A7  0766               	dw	1894
   878  0093A9  0779               	dw	1913
   879  0093AB  078D               	dw	1933
   880  0093AD  07A1               	dw	1953
   881  0093AF  07B6               	dw	1974
   882  0093B1  07CB               	dw	1995
   883  0093B3  07E0               	dw	2016
   884  0093B5  07F6               	dw	2038
   885  0093B7  080C               	dw	2060
   886  0093B9  0823               	dw	2083
   887  0093BB  083B               	dw	2107
   888  0093BD  0853               	dw	2131
   889  0093BF  086B               	dw	2155
   890  0093C1  0884               	dw	2180
   891  0093C3  089E               	dw	2206
   892  0093C5  08B8               	dw	2232
   893  0093C7  08D3               	dw	2259
   894  0093C9  08EF               	dw	2287
   895  0093CB  090B               	dw	2315
   896  0093CD  0928               	dw	2344
   897  0093CF  0945               	dw	2373
   898  0093D1  0964               	dw	2404
   899  0093D3  0983               	dw	2435
   900  0093D5  09A3               	dw	2467
   901  0093D7  09C4               	dw	2500
   902  0093D9  09E6               	dw	2534
   903  0093DB  0A08               	dw	2568
   904  0093DD  0A2C               	dw	2604
   905  0093DF  0A51               	dw	2641
   906  0093E1  0A77               	dw	2679
   907  0093E3  0A9D               	dw	2717
   908  0093E5  0AC5               	dw	2757
   909  0093E7  0AEF               	dw	2799
   910  0093E9  0B19               	dw	2841
   911  0093EB  0B45               	dw	2885
   912  0093ED  0B72               	dw	2930
   913  0093EF  0B72               	dw	2930
   914  0093F1  0B7D               	dw	2941
   915  0093F3  0B89               	dw	2953
   916  0093F5  0B94               	dw	2964
   917  0093F7  0BA0               	dw	2976
   918  0093F9  0BAC               	dw	2988
   919  0093FB  0BB8               	dw	3000
   920  0093FD  0BC4               	dw	3012
   921  0093FF  0BD0               	dw	3024
   922  009401  0BDC               	dw	3036
   923  009403  0BE9               	dw	3049
   924  009405  0BF5               	dw	3061
   925  009407  0C02               	dw	3074
   926  009409  0C0E               	dw	3086
   927  00940B  0C1B               	dw	3099
   928  00940D  0C28               	dw	3112
   929  00940F  0C35               	dw	3125
   930  009411  0C42               	dw	3138
   931  009413  0C4F               	dw	3151
   932  009415  0C5D               	dw	3165
   933  009417  0C6A               	dw	3178
   934  009419  0C77               	dw	3191
   935  00941B  0C85               	dw	3205
   936  00941D  0C93               	dw	3219
   937  00941F  0CA1               	dw	3233
   938  009421  0CAF               	dw	3247
   939  009423  0CBD               	dw	3261
   940  009425  0CCB               	dw	3275
   941  009427  0CD9               	dw	3289
   942  009429  0CE8               	dw	3304
   943  00942B  0CF7               	dw	3319
   944  00942D  0D05               	dw	3333
   945  00942F  0D14               	dw	3348
   946  009431  0D23               	dw	3363
   947  009433  0D32               	dw	3378
   948  009435  0D42               	dw	3394
   949  009437  0D51               	dw	3409
   950  009439  0D61               	dw	3425
   951  00943B  0D70               	dw	3440
   952  00943D  0D80               	dw	3456
   953  00943F  0D90               	dw	3472
   954  009441  0DA0               	dw	3488
   955  009443  0DB1               	dw	3505
   956  009445  0DC1               	dw	3521
   957  009447  0DD2               	dw	3538
   958  009449  0DE3               	dw	3555
   959  00944B  0DF3               	dw	3571
   960  00944D  0E05               	dw	3589
   961  00944F  0E16               	dw	3606
   962  009451  0E27               	dw	3623
   963  009453  0E39               	dw	3641
   964  009455  0E4B               	dw	3659
   965  009457  0E5C               	dw	3676
   966  009459  0E6F               	dw	3695
   967  00945B  0E81               	dw	3713
   968  00945D  0E93               	dw	3731
   969  00945F  0EA6               	dw	3750
   970  009461                     __end_of_motor_speed_lookup:
   971                           	opt stack 0
   972  009461                     _motor_steps_lookup:
   973                           	opt stack 0
   974  009461  0001               	dw	1
   975  009463  0002               	dw	2
   976  009465  0003               	dw	3
   977  009467  0004               	dw	4
   978  009469  0005               	dw	5
   979  00946B  0006               	dw	6
   980  00946D  0007               	dw	7
   981  00946F  0008               	dw	8
   982  009471  0009               	dw	9
   983  009473  000A               	dw	10
   984  009475  000B               	dw	11
   985  009477  000C               	dw	12
   986  009479  000D               	dw	13
   987  00947B  000E               	dw	14
   988  00947D  000F               	dw	15
   989  00947F  0010               	dw	16
   990  009481  0011               	dw	17
   991  009483  0012               	dw	18
   992  009485  0013               	dw	19
   993  009487  0014               	dw	20
   994  009489  0015               	dw	21
   995  00948B  0016               	dw	22
   996  00948D  0017               	dw	23
   997  00948F  0018               	dw	24
   998  009491  0019               	dw	25
   999  009493  001A               	dw	26
  1000  009495  001B               	dw	27
  1001  009497  001C               	dw	28
  1002  009499  001D               	dw	29
  1003  00949B  001E               	dw	30
  1004  00949D  001F               	dw	31
  1005  00949F  0020               	dw	32
  1006  0094A1  0021               	dw	33
  1007  0094A3  0022               	dw	34
  1008  0094A5  0023               	dw	35
  1009  0094A7  0024               	dw	36
  1010  0094A9  0025               	dw	37
  1011  0094AB  0026               	dw	38
  1012  0094AD  0027               	dw	39
  1013  0094AF  0028               	dw	40
  1014  0094B1  0029               	dw	41
  1015  0094B3  002A               	dw	42
  1016  0094B5  002B               	dw	43
  1017  0094B7  002C               	dw	44
  1018  0094B9  002D               	dw	45
  1019  0094BB  002E               	dw	46
  1020  0094BD  002F               	dw	47
  1021  0094BF  0030               	dw	48
  1022  0094C1  0031               	dw	49
  1023  0094C3  0032               	dw	50
  1024  0094C5  0033               	dw	51
  1025  0094C7  0034               	dw	52
  1026  0094C9  0035               	dw	53
  1027  0094CB  0036               	dw	54
  1028  0094CD  0037               	dw	55
  1029  0094CF  0038               	dw	56
  1030  0094D1  0039               	dw	57
  1031  0094D3  003A               	dw	58
  1032  0094D5  003B               	dw	59
  1033  0094D7  003C               	dw	60
  1034  0094D9  003D               	dw	61
  1035  0094DB  003E               	dw	62
  1036  0094DD  003F               	dw	63
  1037  0094DF  0040               	dw	64
  1038  0094E1  0041               	dw	65
  1039  0094E3  0042               	dw	66
  1040  0094E5  0043               	dw	67
  1041  0094E7  0045               	dw	69
  1042  0094E9  0047               	dw	71
  1043  0094EB  0049               	dw	73
  1044  0094ED  004B               	dw	75
  1045  0094EF  004D               	dw	77
  1046  0094F1  004F               	dw	79
  1047  0094F3  0051               	dw	81
  1048  0094F5  0053               	dw	83
  1049  0094F7  0055               	dw	85
  1050  0094F9  0057               	dw	87
  1051  0094FB  0059               	dw	89
  1052  0094FD  005B               	dw	91
  1053  0094FF  005D               	dw	93
  1054  009501  005F               	dw	95
  1055  009503  0061               	dw	97
  1056  009505  0063               	dw	99
  1057  009507  0065               	dw	101
  1058  009509  0067               	dw	103
  1059  00950B  0069               	dw	105
  1060  00950D  006B               	dw	107
  1061  00950F  006E               	dw	110
  1062  009511  0070               	dw	112
  1063  009513  0073               	dw	115
  1064  009515  0075               	dw	117
  1065  009517  0077               	dw	119
  1066  009519  0079               	dw	121
  1067  00951B  007B               	dw	123
  1068  00951D  007D               	dw	125
  1069  00951F  007F               	dw	127
  1070  009521  0081               	dw	129
  1071  009523  0083               	dw	131
  1072  009525  0085               	dw	133
  1073  009527  0087               	dw	135
  1074  009529  0089               	dw	137
  1075  00952B  008B               	dw	139
  1076  00952D  008D               	dw	141
  1077  00952F  008F               	dw	143
  1078  009531  0091               	dw	145
  1079  009533  0093               	dw	147
  1080  009535  0095               	dw	149
  1081  009537  0097               	dw	151
  1082  009539  0099               	dw	153
  1083  00953B  009B               	dw	155
  1084  00953D  009D               	dw	157
  1085  00953F  009F               	dw	159
  1086  009541  00A1               	dw	161
  1087  009543  00A3               	dw	163
  1088  009545  00A5               	dw	165
  1089  009547  00A7               	dw	167
  1090  009549  00A9               	dw	169
  1091  00954B  00AB               	dw	171
  1092  00954D  00AD               	dw	173
  1093  00954F  00AF               	dw	175
  1094  009551  00B1               	dw	177
  1095  009553  00B3               	dw	179
  1096  009555  00B5               	dw	181
  1097  009557  00B7               	dw	183
  1098  009559  00B9               	dw	185
  1099  00955B  00BB               	dw	187
  1100  00955D  00BD               	dw	189
  1101  00955F  00C0               	dw	192
  1102  009561  00C3               	dw	195
  1103  009563  00C6               	dw	198
  1104  009565  00C9               	dw	201
  1105  009567  00CC               	dw	204
  1106  009569  00CF               	dw	207
  1107  00956B  00D2               	dw	210
  1108  00956D  00D5               	dw	213
  1109  00956F  00D8               	dw	216
  1110  009571  00DB               	dw	219
  1111  009573  00DE               	dw	222
  1112  009575  00E1               	dw	225
  1113  009577  00E4               	dw	228
  1114  009579  00E7               	dw	231
  1115  00957B  00EA               	dw	234
  1116  00957D  00ED               	dw	237
  1117  00957F  00F0               	dw	240
  1118  009581  00F3               	dw	243
  1119  009583  00F6               	dw	246
  1120  009585  00F9               	dw	249
  1121  009587  00FC               	dw	252
  1122  009589  00FF               	dw	255
  1123  00958B  0102               	dw	258
  1124  00958D  0105               	dw	261
  1125  00958F  0108               	dw	264
  1126  009591  010B               	dw	267
  1127  009593  010E               	dw	270
  1128  009595  0111               	dw	273
  1129  009597  0114               	dw	276
  1130  009599  0117               	dw	279
  1131  00959B  011A               	dw	282
  1132  00959D  011D               	dw	285
  1133  00959F  0120               	dw	288
  1134  0095A1  0123               	dw	291
  1135  0095A3  0126               	dw	294
  1136  0095A5  012A               	dw	298
  1137  0095A7  012D               	dw	301
  1138  0095A9  0130               	dw	304
  1139  0095AB  0133               	dw	307
  1140  0095AD  0137               	dw	311
  1141  0095AF  013A               	dw	314
  1142  0095B1  013E               	dw	318
  1143  0095B3  0142               	dw	322
  1144  0095B5  0145               	dw	325
  1145  0095B7  0149               	dw	329
  1146  0095B9  014D               	dw	333
  1147  0095BB  0151               	dw	337
  1148  0095BD  0155               	dw	341
  1149  0095BF  0159               	dw	345
  1150  0095C1  015D               	dw	349
  1151  0095C3  0161               	dw	353
  1152  0095C5  0166               	dw	358
  1153  0095C7  016A               	dw	362
  1154  0095C9  016E               	dw	366
  1155  0095CB  0173               	dw	371
  1156  0095CD  0178               	dw	376
  1157  0095CF  017D               	dw	381
  1158  0095D1  0182               	dw	386
  1159  0095D3  0187               	dw	391
  1160  0095D5  018C               	dw	396
  1161  0095D7  0191               	dw	401
  1162  0095D9  0196               	dw	406
  1163  0095DB  019C               	dw	412
  1164  0095DD  01A1               	dw	417
  1165  0095DF  01A7               	dw	423
  1166  0095E1  01AD               	dw	429
  1167  0095E3  01B3               	dw	435
  1168  0095E5  01B9               	dw	441
  1169  0095E7  01BF               	dw	447
  1170  0095E9  01C6               	dw	454
  1171  0095EB  01CC               	dw	460
  1172  0095ED  01D3               	dw	467
  1173  0095EF  01DA               	dw	474
  1174  0095F1  01E1               	dw	481
  1175  0095F3  01E8               	dw	488
  1176  0095F5  01F0               	dw	496
  1177  0095F7  01F7               	dw	503
  1178  0095F9  01FF               	dw	511
  1179  0095FB  0207               	dw	519
  1180  0095FD  020F               	dw	527
  1181  0095FF  0218               	dw	536
  1182  009601  0221               	dw	545
  1183  009603  022A               	dw	554
  1184  009605  0233               	dw	563
  1185  009607  023D               	dw	573
  1186  009609  0247               	dw	583
  1187  00960B  0251               	dw	593
  1188  00960D  025C               	dw	604
  1189  00960F  0267               	dw	615
  1190  009611  0272               	dw	626
  1191  009613  027E               	dw	638
  1192  009615  028A               	dw	650
  1193  009617  0297               	dw	663
  1194  009619  02A4               	dw	676
  1195  00961B  02B2               	dw	690
  1196  00961D  02C0               	dw	704
  1197  00961F  02CF               	dw	719
  1198  009621  02DF               	dw	735
  1199  009623  02EF               	dw	751
  1200  009625  02FF               	dw	767
  1201  009627  0311               	dw	785
  1202  009629  0323               	dw	803
  1203  00962B  0336               	dw	822
  1204  00962D  0349               	dw	841
  1205  00962F  035E               	dw	862
  1206  009631  0373               	dw	883
  1207  009633  0389               	dw	905
  1208  009635  03A1               	dw	929
  1209  009637  03B9               	dw	953
  1210  009639  03D3               	dw	979
  1211  00963B  03DD               	dw	989
  1212  00963D  03E4               	dw	996
  1213  00963F  03EA               	dw	1002
  1214  009641  03F1               	dw	1009
  1215  009643  03F8               	dw	1016
  1216  009645  03FF               	dw	1023
  1217  009647  0406               	dw	1030
  1218  009649  040D               	dw	1037
  1219  00964B  0415               	dw	1045
  1220  00964D  041C               	dw	1052
  1221  00964F  0424               	dw	1060
  1222  009651  042B               	dw	1067
  1223  009653  0433               	dw	1075
  1224  009655  043B               	dw	1083
  1225  009657  0442               	dw	1090
  1226  009659  044A               	dw	1098
  1227  00965B  0452               	dw	1106
  1228  00965D  045A               	dw	1114
  1229  00965F  0463               	dw	1123
  1230  009661  046B               	dw	1131
  1231  009663  0474               	dw	1140
  1232  009665  047C               	dw	1148
  1233  009667  0485               	dw	1157
  1234  009669  048E               	dw	1166
  1235  00966B  0496               	dw	1174
  1236  00966D  049F               	dw	1183
  1237  00966F  04A9               	dw	1193
  1238  009671  04B2               	dw	1202
  1239  009673  04BB               	dw	1211
  1240  009675  04C5               	dw	1221
  1241  009677  04CE               	dw	1230
  1242  009679  04D8               	dw	1240
  1243  00967B  04E2               	dw	1250
  1244  00967D  04EC               	dw	1260
  1245  00967F  04F6               	dw	1270
  1246  009681  0500               	dw	1280
  1247  009683  050B               	dw	1291
  1248  009685  0515               	dw	1301
  1249  009687  0520               	dw	1312
  1250  009689  052B               	dw	1323
  1251  00968B  0536               	dw	1334
  1252  00968D  0541               	dw	1345
  1253  00968F  054C               	dw	1356
  1254  009691  0558               	dw	1368
  1255  009693  0564               	dw	1380
  1256  009695  056F               	dw	1391
  1257  009697  057B               	dw	1403
  1258  009699  0587               	dw	1415
  1259  00969B  0594               	dw	1428
  1260  00969D  05A0               	dw	1440
  1261  00969F  05AD               	dw	1453
  1262  0096A1  05BA               	dw	1466
  1263  0096A3  05C7               	dw	1479
  1264  0096A5  05D4               	dw	1492
  1265  0096A7  05E2               	dw	1506
  1266  0096A9  05EF               	dw	1519
  1267  0096AB  05FD               	dw	1533
  1268  0096AD  060B               	dw	1547
  1269  0096AF  0619               	dw	1561
  1270  0096B1  0628               	dw	1576
  1271  0096B3  0637               	dw	1591
  1272  0096B5  0646               	dw	1606
  1273  0096B7  0655               	dw	1621
  1274  0096B9  0664               	dw	1636
  1275  0096BB  0674               	dw	1652
  1276  0096BD  0684               	dw	1668
  1277  0096BF  0694               	dw	1684
  1278  0096C1  06A4               	dw	1700
  1279  0096C3  06B5               	dw	1717
  1280  0096C5  06C6               	dw	1734
  1281  0096C7  06D7               	dw	1751
  1282  0096C9  06E9               	dw	1769
  1283  0096CB  06FA               	dw	1786
  1284  0096CD  070C               	dw	1804
  1285  0096CF  071F               	dw	1823
  1286  0096D1  0731               	dw	1841
  1287  0096D3  0744               	dw	1860
  1288  0096D5  0758               	dw	1880
  1289  0096D7  076B               	dw	1899
  1290  0096D9  077F               	dw	1919
  1291  0096DB  0793               	dw	1939
  1292  0096DD  07A8               	dw	1960
  1293  0096DF  07BD               	dw	1981
  1294  0096E1  07D2               	dw	2002
  1295  0096E3  07E8               	dw	2024
  1296  0096E5  07FE               	dw	2046
  1297  0096E7  0815               	dw	2069
  1298  0096E9  082C               	dw	2092
  1299  0096EB  0843               	dw	2115
  1300  0096ED  085B               	dw	2139
  1301  0096EF  0873               	dw	2163
  1302  0096F1  088B               	dw	2187
  1303  0096F3  08A5               	dw	2213
  1304  0096F5  08BE               	dw	2238
  1305  0096F7  08D8               	dw	2264
  1306  0096F9  08F2               	dw	2290
  1307  0096FB  090D               	dw	2317
  1308  0096FD  0929               	dw	2345
  1309  0096FF  0945               	dw	2373
  1310  009701  0961               	dw	2401
  1311  009703  097E               	dw	2430
  1312  009705  099C               	dw	2460
  1313  009707  09BA               	dw	2490
  1314  009709  09D9               	dw	2521
  1315  00970B  09F9               	dw	2553
  1316  00970D  0A19               	dw	2585
  1317  00970F  0A39               	dw	2617
  1318  009711  0A5B               	dw	2651
  1319  009713  0A7D               	dw	2685
  1320  009715  0A9F               	dw	2719
  1321  009717  0AC3               	dw	2755
  1322  009719  0AE7               	dw	2791
  1323  00971B  0B0C               	dw	2828
  1324  00971D  0B31               	dw	2865
  1325  00971F  0B58               	dw	2904
  1326  009721  0B7F               	dw	2943
  1327  009723  0BA7               	dw	2983
  1328  009725  0BD0               	dw	3024
  1329  009727  0BFA               	dw	3066
  1330  009729  0C25               	dw	3109
  1331  00972B  0C51               	dw	3153
  1332  00972D  0C7E               	dw	3198
  1333  00972F  0CAB               	dw	3243
  1334  009731  0CDA               	dw	3290
  1335  009733  0D0A               	dw	3338
  1336  009735  0D3B               	dw	3387
  1337  009737  0D6D               	dw	3437
  1338  009739  0DA0               	dw	3488
  1339  00973B  0DD4               	dw	3540
  1340  00973D  0E0A               	dw	3594
  1341  00973F  0E41               	dw	3649
  1342  009741  0E79               	dw	3705
  1343  009743  0EB3               	dw	3763
  1344  009745  0EEE               	dw	3822
  1345  009747  0F2A               	dw	3882
  1346  009749  0F68               	dw	3944
  1347  00974B  0FA8               	dw	4008
  1348  00974D  0FE9               	dw	4073
  1349  00974F  102C               	dw	4140
  1350  009751  1070               	dw	4208
  1351  009753  10B6               	dw	4278
  1352  009755  10FE               	dw	4350
  1353  009757  1148               	dw	4424
  1354  009759  1194               	dw	4500
  1355  00975B  11E2               	dw	4578
  1356  00975D  1232               	dw	4658
  1357  00975F  1285               	dw	4741
  1358  009761  12D9               	dw	4825
  1359  009763  1330               	dw	4912
  1360  009765  1389               	dw	5001
  1361  009767  13E5               	dw	5093
  1362  009769  1444               	dw	5188
  1363  00976B  14A5               	dw	5285
  1364  00976D  1509               	dw	5385
  1365  00976F  1570               	dw	5488
  1366  009771  15DA               	dw	5594
  1367  009773  1647               	dw	5703
  1368  009775  16B8               	dw	5816
  1369  009777  172B               	dw	5931
  1370  009779  17A3               	dw	6051
  1371  00977B  181E               	dw	6174
  1372  00977D  189D               	dw	6301
  1373  00977F  1921               	dw	6433
  1374  009781  19A8               	dw	6568
  1375  009783  1A34               	dw	6708
  1376  009785  1AC4               	dw	6852
  1377  009787  1B5A               	dw	7002
  1378  009789  1BF4               	dw	7156
  1379  00978B  1C94               	dw	7316
  1380  00978D  1D39               	dw	7481
  1381  00978F  1DE4               	dw	7652
  1382  009791  1E95               	dw	7829
  1383  009793  1F4C               	dw	8012
  1384  009795  200A               	dw	8202
  1385  009797  20CE               	dw	8398
  1386  009799  219A               	dw	8602
  1387  00979B  226E               	dw	8814
  1388  00979D  234A               	dw	9034
  1389  00979F  242E               	dw	9262
  1390  0097A1  251B               	dw	9499
  1391  0097A3  2612               	dw	9746
  1392  0097A5  2712               	dw	10002
  1393  0097A7  281D               	dw	10269
  1394  0097A9  2932               	dw	10546
  1395  0097AB  2A53               	dw	10835
  1396  0097AD  2B81               	dw	11137
  1397  0097AF  2CBB               	dw	11451
  1398  0097B1  2E03               	dw	11779
  1399  0097B3  2F5A               	dw	12122
  1400  0097B5  30C0               	dw	12480
  1401  0097B7  3236               	dw	12854
  1402  0097B9  33BD               	dw	13245
  1403  0097BB  3557               	dw	13655
  1404  0097BD  35F5               	dw	13813
  1405  0097BF  3661               	dw	13921
  1406  0097C1  36CD               	dw	14029
  1407  0097C3  373B               	dw	14139
  1408  0097C5  37AA               	dw	14250
  1409  0097C7  381B               	dw	14363
  1410  0097C9  388C               	dw	14476
  1411  0097CB  3900               	dw	14592
  1412  0097CD  3974               	dw	14708
  1413  0097CF  39EA               	dw	14826
  1414  0097D1  3A62               	dw	14946
  1415  0097D3  3ADB               	dw	15067
  1416  0097D5  3B55               	dw	15189
  1417  0097D7  3BD1               	dw	15313
  1418  0097D9  3C4E               	dw	15438
  1419  0097DB  3CCD               	dw	15565
  1420  0097DD  3D4E               	dw	15694
  1421  0097DF  3DD0               	dw	15824
  1422  0097E1  3E54               	dw	15956
  1423  0097E3  3EDA               	dw	16090
  1424  0097E5  3F61               	dw	16225
  1425  0097E7  3FEA               	dw	16362
  1426  0097E9  4074               	dw	16500
  1427  0097EB  4101               	dw	16641
  1428  0097ED  418F               	dw	16783
  1429  0097EF  421F               	dw	16927
  1430  0097F1  42B1               	dw	17073
  1431  0097F3  4345               	dw	17221
  1432  0097F5  43DB               	dw	17371
  1433  0097F7  4473               	dw	17523
  1434  0097F9  450D               	dw	17677
  1435  0097FB  45A9               	dw	17833
  1436  0097FD  4647               	dw	17991
  1437  0097FF  46E7               	dw	18151
  1438  009801  4789               	dw	18313
  1439  009803  482E               	dw	18478
  1440  009805  48D5               	dw	18645
  1441  009807  497E               	dw	18814
  1442  009809  4A29               	dw	18985
  1443  00980B  4AD7               	dw	19159
  1444  00980D  4B87               	dw	19335
  1445  00980F  4C3A               	dw	19514
  1446  009811  4CEF               	dw	19695
  1447  009813  4DA6               	dw	19878
  1448  009815  4E61               	dw	20065
  1449  009817  4F1E               	dw	20254
  1450  009819  4FDD               	dw	20445
  1451  00981B  50A0               	dw	20640
  1452  00981D  5165               	dw	20837
  1453  00981F  522D               	dw	21037
  1454  009821  52F8               	dw	21240
  1455  009823  53C6               	dw	21446
  1456  009825  5497               	dw	21655
  1457  009827  556B               	dw	21867
  1458  009829  5642               	dw	22082
  1459  00982B  571C               	dw	22300
  1460  00982D  57FA               	dw	22522
  1461  00982F                     __end_of_motor_steps_lookup:
  1462                           	opt stack 0
  1463  00982F                     _motor_postscaler_lookup:
  1464                           	opt stack 0
  1465  00982F  0C                 	db	12
  1466  009830  07                 	db	7
  1467  009831  05                 	db	5
  1468  009832  04                 	db	4
  1469  009833  04                 	db	4
  1470  009834  03                 	db	3
  1471  009835  03                 	db	3
  1472  009836  03                 	db	3
  1473  009837  02                 	db	2
  1474  009838  02                 	db	2
  1475  009839  02                 	db	2
  1476  00983A  02                 	db	2
  1477  00983B  02                 	db	2
  1478  00983C  02                 	db	2
  1479  00983D  01                 	db	1
  1480  00983E  01                 	db	1
  1481  00983F  01                 	db	1
  1482  009840  01                 	db	1
  1483  009841  01                 	db	1
  1484  009842  01                 	db	1
  1485  009843  01                 	db	1
  1486  009844  01                 	db	1
  1487  009845  01                 	db	1
  1488  009846  01                 	db	1
  1489  009847  01                 	db	1
  1490  009848  01                 	db	1
  1491  009849  01                 	db	1
  1492  00984A  01                 	db	1
  1493  00984B  01                 	db	1
  1494  00984C  01                 	db	1
  1495  00984D  01                 	db	1
  1496  00984E  01                 	db	1
  1497  00984F  01                 	db	1
  1498  009850  01                 	db	1
  1499  009851  01                 	db	1
  1500  009852  01                 	db	1
  1501  009853  01                 	db	1
  1502  009854  01                 	db	1
  1503  009855  01                 	db	1
  1504  009856  01                 	db	1
  1505  009857  01                 	db	1
  1506  009858  01                 	db	1
  1507  009859  01                 	db	1
  1508  00985A  01                 	db	1
  1509  00985B  01                 	db	1
  1510  00985C  01                 	db	1
  1511  00985D  01                 	db	1
  1512  00985E  01                 	db	1
  1513  00985F  01                 	db	1
  1514  009860  01                 	db	1
  1515  009861  01                 	db	1
  1516  009862  01                 	db	1
  1517  009863  01                 	db	1
  1518  009864  01                 	db	1
  1519  009865  01                 	db	1
  1520  009866  01                 	db	1
  1521  009867  01                 	db	1
  1522  009868  01                 	db	1
  1523  009869  01                 	db	1
  1524  00986A  01                 	db	1
  1525  00986B  01                 	db	1
  1526  00986C  01                 	db	1
  1527  00986D  01                 	db	1
  1528  00986E  01                 	db	1
  1529  00986F  01                 	db	1
  1530  009870  01                 	db	1
  1531  009871  01                 	db	1
  1532  009872  01                 	db	1
  1533  009873  01                 	db	1
  1534  009874  01                 	db	1
  1535  009875  01                 	db	1
  1536  009876  01                 	db	1
  1537  009877  01                 	db	1
  1538  009878  01                 	db	1
  1539  009879  01                 	db	1
  1540  00987A  01                 	db	1
  1541  00987B  01                 	db	1
  1542  00987C  01                 	db	1
  1543  00987D  01                 	db	1
  1544  00987E  01                 	db	1
  1545  00987F  01                 	db	1
  1546  009880  01                 	db	1
  1547  009881  01                 	db	1
  1548  009882  01                 	db	1
  1549  009883  01                 	db	1
  1550  009884  01                 	db	1
  1551  009885  01                 	db	1
  1552  009886  01                 	db	1
  1553  009887  01                 	db	1
  1554  009888  01                 	db	1
  1555  009889  01                 	db	1
  1556  00988A  00                 	db	0
  1557  00988B  00                 	db	0
  1558  00988C  00                 	db	0
  1559  00988D  00                 	db	0
  1560  00988E  00                 	db	0
  1561  00988F  00                 	db	0
  1562  009890  00                 	db	0
  1563  009891  00                 	db	0
  1564  009892  00                 	db	0
  1565  009893  00                 	db	0
  1566  009894  00                 	db	0
  1567  009895  00                 	db	0
  1568  009896  00                 	db	0
  1569  009897  00                 	db	0
  1570  009898  00                 	db	0
  1571  009899  00                 	db	0
  1572  00989A  00                 	db	0
  1573  00989B  00                 	db	0
  1574  00989C  00                 	db	0
  1575  00989D  00                 	db	0
  1576  00989E  00                 	db	0
  1577  00989F  00                 	db	0
  1578  0098A0  00                 	db	0
  1579  0098A1  00                 	db	0
  1580  0098A2  00                 	db	0
  1581  0098A3  00                 	db	0
  1582  0098A4  00                 	db	0
  1583  0098A5  00                 	db	0
  1584  0098A6  00                 	db	0
  1585  0098A7  00                 	db	0
  1586  0098A8  00                 	db	0
  1587  0098A9  00                 	db	0
  1588  0098AA  00                 	db	0
  1589  0098AB  00                 	db	0
  1590  0098AC  00                 	db	0
  1591  0098AD  00                 	db	0
  1592  0098AE  00                 	db	0
  1593  0098AF  00                 	db	0
  1594  0098B0  00                 	db	0
  1595  0098B1  00                 	db	0
  1596  0098B2  00                 	db	0
  1597  0098B3  00                 	db	0
  1598  0098B4  00                 	db	0
  1599  0098B5  00                 	db	0
  1600  0098B6  00                 	db	0
  1601  0098B7  00                 	db	0
  1602  0098B8  00                 	db	0
  1603  0098B9  00                 	db	0
  1604  0098BA  00                 	db	0
  1605  0098BB  00                 	db	0
  1606  0098BC  00                 	db	0
  1607  0098BD  00                 	db	0
  1608  0098BE  00                 	db	0
  1609  0098BF  00                 	db	0
  1610  0098C0  00                 	db	0
  1611  0098C1  00                 	db	0
  1612  0098C2  00                 	db	0
  1613  0098C3  00                 	db	0
  1614  0098C4  00                 	db	0
  1615  0098C5  00                 	db	0
  1616  0098C6  00                 	db	0
  1617  0098C7  00                 	db	0
  1618  0098C8  00                 	db	0
  1619  0098C9  00                 	db	0
  1620  0098CA  00                 	db	0
  1621  0098CB  00                 	db	0
  1622  0098CC  00                 	db	0
  1623  0098CD  00                 	db	0
  1624  0098CE  00                 	db	0
  1625  0098CF  00                 	db	0
  1626  0098D0  00                 	db	0
  1627  0098D1  00                 	db	0
  1628  0098D2  00                 	db	0
  1629  0098D3  00                 	db	0
  1630  0098D4  00                 	db	0
  1631  0098D5  00                 	db	0
  1632  0098D6  00                 	db	0
  1633  0098D7  00                 	db	0
  1634  0098D8  00                 	db	0
  1635  0098D9  00                 	db	0
  1636  0098DA  00                 	db	0
  1637  0098DB  00                 	db	0
  1638  0098DC  00                 	db	0
  1639  0098DD  00                 	db	0
  1640  0098DE  00                 	db	0
  1641  0098DF  00                 	db	0
  1642  0098E0  00                 	db	0
  1643  0098E1  00                 	db	0
  1644  0098E2  00                 	db	0
  1645  0098E3  00                 	db	0
  1646  0098E4  00                 	db	0
  1647  0098E5  00                 	db	0
  1648  0098E6  00                 	db	0
  1649  0098E7  00                 	db	0
  1650  0098E8  00                 	db	0
  1651  0098E9  00                 	db	0
  1652  0098EA  00                 	db	0
  1653  0098EB  00                 	db	0
  1654  0098EC  00                 	db	0
  1655  0098ED  00                 	db	0
  1656  0098EE  00                 	db	0
  1657  0098EF  00                 	db	0
  1658  0098F0  00                 	db	0
  1659  0098F1  00                 	db	0
  1660  0098F2  00                 	db	0
  1661  0098F3  00                 	db	0
  1662  0098F4  00                 	db	0
  1663  0098F5  00                 	db	0
  1664  0098F6  00                 	db	0
  1665  0098F7  00                 	db	0
  1666  0098F8  00                 	db	0
  1667  0098F9  00                 	db	0
  1668  0098FA  00                 	db	0
  1669  0098FB  00                 	db	0
  1670  0098FC  00                 	db	0
  1671  0098FD  00                 	db	0
  1672  0098FE  00                 	db	0
  1673  0098FF  00                 	db	0
  1674  009900  00                 	db	0
  1675  009901  00                 	db	0
  1676  009902  00                 	db	0
  1677  009903  00                 	db	0
  1678  009904  00                 	db	0
  1679  009905  00                 	db	0
  1680  009906  00                 	db	0
  1681  009907  00                 	db	0
  1682  009908  00                 	db	0
  1683  009909  00                 	db	0
  1684  00990A  00                 	db	0
  1685  00990B  00                 	db	0
  1686  00990C  00                 	db	0
  1687  00990D  00                 	db	0
  1688  00990E  00                 	db	0
  1689  00990F  00                 	db	0
  1690  009910  00                 	db	0
  1691  009911  00                 	db	0
  1692  009912  00                 	db	0
  1693  009913  00                 	db	0
  1694  009914  00                 	db	0
  1695  009915  00                 	db	0
  1696  009916  00                 	db	0
  1697  009917  00                 	db	0
  1698  009918  00                 	db	0
  1699  009919  00                 	db	0
  1700  00991A  00                 	db	0
  1701  00991B  00                 	db	0
  1702  00991C  00                 	db	0
  1703  00991D  00                 	db	0
  1704  00991E  00                 	db	0
  1705  00991F  00                 	db	0
  1706  009920  00                 	db	0
  1707  009921  00                 	db	0
  1708  009922  00                 	db	0
  1709  009923  00                 	db	0
  1710  009924  00                 	db	0
  1711  009925  00                 	db	0
  1712  009926  00                 	db	0
  1713  009927  00                 	db	0
  1714  009928  00                 	db	0
  1715  009929  00                 	db	0
  1716  00992A  00                 	db	0
  1717  00992B  00                 	db	0
  1718  00992C  00                 	db	0
  1719  00992D  00                 	db	0
  1720  00992E  00                 	db	0
  1721  00992F  00                 	db	0
  1722  009930  00                 	db	0
  1723  009931  00                 	db	0
  1724  009932  00                 	db	0
  1725  009933  00                 	db	0
  1726  009934  00                 	db	0
  1727  009935  00                 	db	0
  1728  009936  00                 	db	0
  1729  009937  00                 	db	0
  1730  009938  00                 	db	0
  1731  009939  00                 	db	0
  1732  00993A  00                 	db	0
  1733  00993B  00                 	db	0
  1734  00993C  00                 	db	0
  1735  00993D  00                 	db	0
  1736  00993E  00                 	db	0
  1737  00993F  00                 	db	0
  1738  009940  00                 	db	0
  1739  009941  00                 	db	0
  1740  009942  00                 	db	0
  1741  009943  00                 	db	0
  1742  009944  00                 	db	0
  1743  009945  00                 	db	0
  1744  009946  00                 	db	0
  1745  009947  00                 	db	0
  1746  009948  00                 	db	0
  1747  009949  00                 	db	0
  1748  00994A  00                 	db	0
  1749  00994B  00                 	db	0
  1750  00994C  00                 	db	0
  1751  00994D  00                 	db	0
  1752  00994E  00                 	db	0
  1753  00994F  00                 	db	0
  1754  009950  00                 	db	0
  1755  009951  00                 	db	0
  1756  009952  00                 	db	0
  1757  009953  00                 	db	0
  1758  009954  00                 	db	0
  1759  009955  00                 	db	0
  1760  009956  00                 	db	0
  1761  009957  00                 	db	0
  1762  009958  00                 	db	0
  1763  009959  00                 	db	0
  1764  00995A  00                 	db	0
  1765  00995B  00                 	db	0
  1766  00995C  00                 	db	0
  1767  00995D  00                 	db	0
  1768  00995E  00                 	db	0
  1769  00995F  00                 	db	0
  1770  009960  00                 	db	0
  1771  009961  00                 	db	0
  1772  009962  00                 	db	0
  1773  009963  00                 	db	0
  1774  009964  00                 	db	0
  1775  009965  00                 	db	0
  1776  009966  00                 	db	0
  1777  009967  00                 	db	0
  1778  009968  00                 	db	0
  1779  009969  00                 	db	0
  1780  00996A  00                 	db	0
  1781  00996B  00                 	db	0
  1782  00996C  00                 	db	0
  1783  00996D  00                 	db	0
  1784  00996E  00                 	db	0
  1785  00996F  00                 	db	0
  1786  009970  00                 	db	0
  1787  009971  00                 	db	0
  1788  009972  00                 	db	0
  1789  009973  00                 	db	0
  1790  009974  00                 	db	0
  1791  009975  00                 	db	0
  1792  009976  00                 	db	0
  1793  009977  00                 	db	0
  1794  009978  00                 	db	0
  1795  009979  00                 	db	0
  1796  00997A  00                 	db	0
  1797  00997B  00                 	db	0
  1798  00997C  00                 	db	0
  1799  00997D  00                 	db	0
  1800  00997E  00                 	db	0
  1801  00997F  00                 	db	0
  1802  009980  00                 	db	0
  1803  009981  00                 	db	0
  1804  009982  00                 	db	0
  1805  009983  00                 	db	0
  1806  009984  00                 	db	0
  1807  009985  00                 	db	0
  1808  009986  00                 	db	0
  1809  009987  00                 	db	0
  1810  009988  00                 	db	0
  1811  009989  00                 	db	0
  1812  00998A  00                 	db	0
  1813  00998B  00                 	db	0
  1814  00998C  00                 	db	0
  1815  00998D  00                 	db	0
  1816  00998E  00                 	db	0
  1817  00998F  00                 	db	0
  1818  009990  00                 	db	0
  1819  009991  00                 	db	0
  1820  009992  00                 	db	0
  1821  009993  00                 	db	0
  1822  009994  00                 	db	0
  1823  009995  00                 	db	0
  1824  009996  00                 	db	0
  1825  009997  00                 	db	0
  1826  009998  00                 	db	0
  1827  009999  00                 	db	0
  1828  00999A  00                 	db	0
  1829  00999B  00                 	db	0
  1830  00999C  00                 	db	0
  1831  00999D  00                 	db	0
  1832  00999E  00                 	db	0
  1833  00999F  00                 	db	0
  1834  0099A0  00                 	db	0
  1835  0099A1  00                 	db	0
  1836  0099A2  00                 	db	0
  1837  0099A3  00                 	db	0
  1838  0099A4  00                 	db	0
  1839  0099A5  00                 	db	0
  1840  0099A6  00                 	db	0
  1841  0099A7  00                 	db	0
  1842  0099A8  00                 	db	0
  1843  0099A9  00                 	db	0
  1844  0099AA  00                 	db	0
  1845  0099AB  00                 	db	0
  1846  0099AC  00                 	db	0
  1847  0099AD  00                 	db	0
  1848  0099AE  00                 	db	0
  1849  0099AF  00                 	db	0
  1850  0099B0  00                 	db	0
  1851  0099B1  00                 	db	0
  1852  0099B2  00                 	db	0
  1853  0099B3  00                 	db	0
  1854  0099B4  00                 	db	0
  1855  0099B5  00                 	db	0
  1856  0099B6  00                 	db	0
  1857  0099B7  00                 	db	0
  1858  0099B8  00                 	db	0
  1859  0099B9  00                 	db	0
  1860  0099BA  00                 	db	0
  1861  0099BB  00                 	db	0
  1862  0099BC  00                 	db	0
  1863  0099BD  00                 	db	0
  1864  0099BE  00                 	db	0
  1865  0099BF  00                 	db	0
  1866  0099C0  00                 	db	0
  1867  0099C1  00                 	db	0
  1868  0099C2  00                 	db	0
  1869  0099C3  00                 	db	0
  1870  0099C4  00                 	db	0
  1871  0099C5  00                 	db	0
  1872  0099C6  00                 	db	0
  1873  0099C7  00                 	db	0
  1874  0099C8  00                 	db	0
  1875  0099C9  00                 	db	0
  1876  0099CA  00                 	db	0
  1877  0099CB  00                 	db	0
  1878  0099CC  00                 	db	0
  1879  0099CD  00                 	db	0
  1880  0099CE  00                 	db	0
  1881  0099CF  00                 	db	0
  1882  0099D0  00                 	db	0
  1883  0099D1  00                 	db	0
  1884  0099D2  00                 	db	0
  1885  0099D3  00                 	db	0
  1886  0099D4  00                 	db	0
  1887  0099D5  00                 	db	0
  1888  0099D6  00                 	db	0
  1889  0099D7  00                 	db	0
  1890  0099D8  00                 	db	0
  1891  0099D9  00                 	db	0
  1892  0099DA  00                 	db	0
  1893  0099DB  00                 	db	0
  1894  0099DC  00                 	db	0
  1895  0099DD  00                 	db	0
  1896  0099DE  00                 	db	0
  1897  0099DF  00                 	db	0
  1898  0099E0  00                 	db	0
  1899  0099E1  00                 	db	0
  1900  0099E2  00                 	db	0
  1901  0099E3  00                 	db	0
  1902  0099E4  00                 	db	0
  1903  0099E5  00                 	db	0
  1904  0099E6  00                 	db	0
  1905  0099E7  00                 	db	0
  1906  0099E8  00                 	db	0
  1907  0099E9  00                 	db	0
  1908  0099EA  00                 	db	0
  1909  0099EB  00                 	db	0
  1910  0099EC  00                 	db	0
  1911  0099ED  00                 	db	0
  1912  0099EE  00                 	db	0
  1913  0099EF  00                 	db	0
  1914  0099F0  00                 	db	0
  1915  0099F1  00                 	db	0
  1916  0099F2  00                 	db	0
  1917  0099F3  00                 	db	0
  1918  0099F4  00                 	db	0
  1919  0099F5  00                 	db	0
  1920  0099F6  00                 	db	0
  1921  0099F7  00                 	db	0
  1922  0099F8  00                 	db	0
  1923  0099F9  00                 	db	0
  1924  0099FA  00                 	db	0
  1925  0099FB  00                 	db	0
  1926  0099FC  00                 	db	0
  1927  0099FD  00                 	db	0
  1928  0099FE  00                 	db	0
  1929  0099FF  00                 	db	0
  1930  009A00  00                 	db	0
  1931  009A01  00                 	db	0
  1932  009A02  00                 	db	0
  1933  009A03  00                 	db	0
  1934  009A04  00                 	db	0
  1935  009A05  00                 	db	0
  1936  009A06  00                 	db	0
  1937  009A07  00                 	db	0
  1938  009A08  00                 	db	0
  1939  009A09  00                 	db	0
  1940  009A0A  00                 	db	0
  1941  009A0B  00                 	db	0
  1942  009A0C  00                 	db	0
  1943  009A0D  00                 	db	0
  1944  009A0E  00                 	db	0
  1945  009A0F  00                 	db	0
  1946  009A10  00                 	db	0
  1947  009A11  00                 	db	0
  1948  009A12  00                 	db	0
  1949  009A13  00                 	db	0
  1950  009A14  00                 	db	0
  1951  009A15  00                 	db	0
  1952  009A16                     __end_of_motor_postscaler_lookup:
  1953                           	opt stack 0
  1954  009A16                     _motor_period_lookup:
  1955                           	opt stack 0
  1956  009A16  EC                 	db	236
  1957  009A17  F2                 	db	242
  1958  009A18  F6                 	db	246
  1959  009A19  F4                 	db	244
  1960  009A1A  D2                 	db	210
  1961  009A1B  E8                 	db	232
  1962  009A1C  D2                 	db	210
  1963  009A1D  C0                 	db	192
  1964  009A1E  EC                 	db	236
  1965  009A1F  DC                 	db	220
  1966  009A20  CF                 	db	207
  1967  009A21  C3                 	db	195
  1968  009A22  B9                 	db	185
  1969  009A23  B0                 	db	176
  1970  009A24  FC                 	db	252
  1971  009A25  F2                 	db	242
  1972  009A26  E8                 	db	232
  1973  009A27  DF                 	db	223
  1974  009A28  D7                 	db	215
  1975  009A29  D0                 	db	208
  1976  009A2A  CA                 	db	202
  1977  009A2B  C3                 	db	195
  1978  009A2C  BE                 	db	190
  1979  009A2D  B8                 	db	184
  1980  009A2E  B3                 	db	179
  1981  009A2F  AF                 	db	175
  1982  009A30  AA                 	db	170
  1983  009A31  A6                 	db	166
  1984  009A32  A2                 	db	162
  1985  009A33  9F                 	db	159
  1986  009A34  9B                 	db	155
  1987  009A35  98                 	db	152
  1988  009A36  95                 	db	149
  1989  009A37  92                 	db	146
  1990  009A38  8F                 	db	143
  1991  009A39  8C                 	db	140
  1992  009A3A  8A                 	db	138
  1993  009A3B  87                 	db	135
  1994  009A3C  85                 	db	133
  1995  009A3D  83                 	db	131
  1996  009A3E  81                 	db	129
  1997  009A3F  7F                 	db	127
  1998  009A40  7D                 	db	125
  1999  009A41  7B                 	db	123
  2000  009A42  79                 	db	121
  2001  009A43  77                 	db	119
  2002  009A44  75                 	db	117
  2003  009A45  74                 	db	116
  2004  009A46  72                 	db	114
  2005  009A47  71                 	db	113
  2006  009A48  6F                 	db	111
  2007  009A49  6E                 	db	110
  2008  009A4A  6C                 	db	108
  2009  009A4B  6B                 	db	107
  2010  009A4C  6A                 	db	106
  2011  009A4D  68                 	db	104
  2012  009A4E  67                 	db	103
  2013  009A4F  66                 	db	102
  2014  009A50  65                 	db	101
  2015  009A51  64                 	db	100
  2016  009A52  62                 	db	98
  2017  009A53  61                 	db	97
  2018  009A54  60                 	db	96
  2019  009A55  5F                 	db	95
  2020  009A56  5E                 	db	94
  2021  009A57  5D                 	db	93
  2022  009A58  5C                 	db	92
  2023  009A59  5B                 	db	91
  2024  009A5A  59                 	db	89
  2025  009A5B  57                 	db	87
  2026  009A5C  56                 	db	86
  2027  009A5D  54                 	db	84
  2028  009A5E  53                 	db	83
  2029  009A5F  51                 	db	81
  2030  009A60  50                 	db	80
  2031  009A61  4F                 	db	79
  2032  009A62  4E                 	db	78
  2033  009A63  4C                 	db	76
  2034  009A64  4B                 	db	75
  2035  009A65  4A                 	db	74
  2036  009A66  49                 	db	73
  2037  009A67  48                 	db	72
  2038  009A68  47                 	db	71
  2039  009A69  46                 	db	70
  2040  009A6A  45                 	db	69
  2041  009A6B  44                 	db	68
  2042  009A6C  43                 	db	67
  2043  009A6D  42                 	db	66
  2044  009A6E  41                 	db	65
  2045  009A6F  40                 	db	64
  2046  009A70  3F                 	db	63
  2047  009A71  FE                 	db	254
  2048  009A72  FB                 	db	251
  2049  009A73  F8                 	db	248
  2050  009A74  F6                 	db	246
  2051  009A75  F3                 	db	243
  2052  009A76  F0                 	db	240
  2053  009A77  EE                 	db	238
  2054  009A78  EC                 	db	236
  2055  009A79  E9                 	db	233
  2056  009A7A  E7                 	db	231
  2057  009A7B  E5                 	db	229
  2058  009A7C  E3                 	db	227
  2059  009A7D  E0                 	db	224
  2060  009A7E  DE                 	db	222
  2061  009A7F  DC                 	db	220
  2062  009A80  DA                 	db	218
  2063  009A81  D8                 	db	216
  2064  009A82  D7                 	db	215
  2065  009A83  D5                 	db	213
  2066  009A84  D3                 	db	211
  2067  009A85  D1                 	db	209
  2068  009A86  CF                 	db	207
  2069  009A87  CE                 	db	206
  2070  009A88  CC                 	db	204
  2071  009A89  CA                 	db	202
  2072  009A8A  C9                 	db	201
  2073  009A8B  C7                 	db	199
  2074  009A8C  C6                 	db	198
  2075  009A8D  C4                 	db	196
  2076  009A8E  C3                 	db	195
  2077  009A8F  C1                 	db	193
  2078  009A90  C0                 	db	192
  2079  009A91  BE                 	db	190
  2080  009A92  BD                 	db	189
  2081  009A93  BC                 	db	188
  2082  009A94  BA                 	db	186
  2083  009A95  B8                 	db	184
  2084  009A96  B6                 	db	182
  2085  009A97  B4                 	db	180
  2086  009A98  B3                 	db	179
  2087  009A99  B1                 	db	177
  2088  009A9A  AF                 	db	175
  2089  009A9B  AE                 	db	174
  2090  009A9C  AC                 	db	172
  2091  009A9D  AA                 	db	170
  2092  009A9E  A9                 	db	169
  2093  009A9F  A7                 	db	167
  2094  009AA0  A6                 	db	166
  2095  009AA1  A4                 	db	164
  2096  009AA2  A3                 	db	163
  2097  009AA3  A1                 	db	161
  2098  009AA4  A0                 	db	160
  2099  009AA5  9F                 	db	159
  2100  009AA6  9D                 	db	157
  2101  009AA7  9C                 	db	156
  2102  009AA8  9B                 	db	155
  2103  009AA9  9A                 	db	154
  2104  009AAA  98                 	db	152
  2105  009AAB  97                 	db	151
  2106  009AAC  96                 	db	150
  2107  009AAD  95                 	db	149
  2108  009AAE  94                 	db	148
  2109  009AAF  93                 	db	147
  2110  009AB0  92                 	db	146
  2111  009AB1  90                 	db	144
  2112  009AB2  8F                 	db	143
  2113  009AB3  8E                 	db	142
  2114  009AB4  8D                 	db	141
  2115  009AB5  8C                 	db	140
  2116  009AB6  8B                 	db	139
  2117  009AB7  8A                 	db	138
  2118  009AB8  89                 	db	137
  2119  009AB9  88                 	db	136
  2120  009ABA  87                 	db	135
  2121  009ABB  86                 	db	134
  2122  009ABC  85                 	db	133
  2123  009ABD  84                 	db	132
  2124  009ABE  83                 	db	131
  2125  009ABF  82                 	db	130
  2126  009AC0  81                 	db	129
  2127  009AC1  80                 	db	128
  2128  009AC2  7F                 	db	127
  2129  009AC3  7E                 	db	126
  2130  009AC4  7D                 	db	125
  2131  009AC5  7C                 	db	124
  2132  009AC6  7B                 	db	123
  2133  009AC7  7A                 	db	122
  2134  009AC8  79                 	db	121
  2135  009AC9  78                 	db	120
  2136  009ACA  77                 	db	119
  2137  009ACB  76                 	db	118
  2138  009ACC  75                 	db	117
  2139  009ACD  74                 	db	116
  2140  009ACE  73                 	db	115
  2141  009ACF  72                 	db	114
  2142  009AD0  71                 	db	113
  2143  009AD1  70                 	db	112
  2144  009AD2  6F                 	db	111
  2145  009AD3  6E                 	db	110
  2146  009AD4  6D                 	db	109
  2147  009AD5  6C                 	db	108
  2148  009AD6  6B                 	db	107
  2149  009AD7  6A                 	db	106
  2150  009AD8  69                 	db	105
  2151  009AD9  68                 	db	104
  2152  009ADA  67                 	db	103
  2153  009ADB  66                 	db	102
  2154  009ADC  65                 	db	101
  2155  009ADD  64                 	db	100
  2156  009ADE  63                 	db	99
  2157  009ADF  62                 	db	98
  2158  009AE0  61                 	db	97
  2159  009AE1  60                 	db	96
  2160  009AE2  5F                 	db	95
  2161  009AE3  5E                 	db	94
  2162  009AE4  5D                 	db	93
  2163  009AE5  5C                 	db	92
  2164  009AE6  5B                 	db	91
  2165  009AE7  5A                 	db	90
  2166  009AE8  59                 	db	89
  2167  009AE9  58                 	db	88
  2168  009AEA  57                 	db	87
  2169  009AEB  56                 	db	86
  2170  009AEC  55                 	db	85
  2171  009AED  54                 	db	84
  2172  009AEE  53                 	db	83
  2173  009AEF  52                 	db	82
  2174  009AF0  51                 	db	81
  2175  009AF1  50                 	db	80
  2176  009AF2  4F                 	db	79
  2177  009AF3  4E                 	db	78
  2178  009AF4  4D                 	db	77
  2179  009AF5  4C                 	db	76
  2180  009AF6  4B                 	db	75
  2181  009AF7  4A                 	db	74
  2182  009AF8  49                 	db	73
  2183  009AF9  48                 	db	72
  2184  009AFA  47                 	db	71
  2185  009AFB  46                 	db	70
  2186  009AFC  45                 	db	69
  2187  009AFD  44                 	db	68
  2188  009AFE  43                 	db	67
  2189  009AFF  42                 	db	66
  2190  009B00  41                 	db	65
  2191  009B01  40                 	db	64
  2192  009B02  3F                 	db	63
  2193  009B03  FF                 	db	255
  2194  009B04  FE                 	db	254
  2195  009B05  FD                 	db	253
  2196  009B06  FC                 	db	252
  2197  009B07  FB                 	db	251
  2198  009B08  FA                 	db	250
  2199  009B09  F9                 	db	249
  2200  009B0A  F8                 	db	248
  2201  009B0B  F7                 	db	247
  2202  009B0C  F6                 	db	246
  2203  009B0D  F5                 	db	245
  2204  009B0E  F4                 	db	244
  2205  009B0F  F3                 	db	243
  2206  009B10  F2                 	db	242
  2207  009B11  F1                 	db	241
  2208  009B12  F0                 	db	240
  2209  009B13  EF                 	db	239
  2210  009B14  EE                 	db	238
  2211  009B15  ED                 	db	237
  2212  009B16  EC                 	db	236
  2213  009B17  EB                 	db	235
  2214  009B18  EA                 	db	234
  2215  009B19  E9                 	db	233
  2216  009B1A  E8                 	db	232
  2217  009B1B  E7                 	db	231
  2218  009B1C  E6                 	db	230
  2219  009B1D  E5                 	db	229
  2220  009B1E  E4                 	db	228
  2221  009B1F  E3                 	db	227
  2222  009B20  E2                 	db	226
  2223  009B21  E1                 	db	225
  2224  009B22  E0                 	db	224
  2225  009B23  DF                 	db	223
  2226  009B24  DE                 	db	222
  2227  009B25  DD                 	db	221
  2228  009B26  DC                 	db	220
  2229  009B27  DB                 	db	219
  2230  009B28  DA                 	db	218
  2231  009B29  D9                 	db	217
  2232  009B2A  D8                 	db	216
  2233  009B2B  D7                 	db	215
  2234  009B2C  D6                 	db	214
  2235  009B2D  D5                 	db	213
  2236  009B2E  D4                 	db	212
  2237  009B2F  D3                 	db	211
  2238  009B30  D2                 	db	210
  2239  009B31  D1                 	db	209
  2240  009B32  D0                 	db	208
  2241  009B33  CF                 	db	207
  2242  009B34  CE                 	db	206
  2243  009B35  CD                 	db	205
  2244  009B36  CC                 	db	204
  2245  009B37  CB                 	db	203
  2246  009B38  CA                 	db	202
  2247  009B39  C9                 	db	201
  2248  009B3A  C8                 	db	200
  2249  009B3B  C7                 	db	199
  2250  009B3C  C6                 	db	198
  2251  009B3D  C5                 	db	197
  2252  009B3E  C4                 	db	196
  2253  009B3F  C3                 	db	195
  2254  009B40  C2                 	db	194
  2255  009B41  C1                 	db	193
  2256  009B42  C0                 	db	192
  2257  009B43  BF                 	db	191
  2258  009B44  BE                 	db	190
  2259  009B45  BD                 	db	189
  2260  009B46  BC                 	db	188
  2261  009B47  BB                 	db	187
  2262  009B48  BA                 	db	186
  2263  009B49  B9                 	db	185
  2264  009B4A  B8                 	db	184
  2265  009B4B  B7                 	db	183
  2266  009B4C  B6                 	db	182
  2267  009B4D  B5                 	db	181
  2268  009B4E  B4                 	db	180
  2269  009B4F  B3                 	db	179
  2270  009B50  B2                 	db	178
  2271  009B51  B1                 	db	177
  2272  009B52  B0                 	db	176
  2273  009B53  AF                 	db	175
  2274  009B54  AE                 	db	174
  2275  009B55  AD                 	db	173
  2276  009B56  AC                 	db	172
  2277  009B57  AB                 	db	171
  2278  009B58  AA                 	db	170
  2279  009B59  A9                 	db	169
  2280  009B5A  A8                 	db	168
  2281  009B5B  A7                 	db	167
  2282  009B5C  A6                 	db	166
  2283  009B5D  A5                 	db	165
  2284  009B5E  A4                 	db	164
  2285  009B5F  A3                 	db	163
  2286  009B60  A2                 	db	162
  2287  009B61  A1                 	db	161
  2288  009B62  A0                 	db	160
  2289  009B63  9F                 	db	159
  2290  009B64  9E                 	db	158
  2291  009B65  9D                 	db	157
  2292  009B66  9C                 	db	156
  2293  009B67  9B                 	db	155
  2294  009B68  9A                 	db	154
  2295  009B69  99                 	db	153
  2296  009B6A  98                 	db	152
  2297  009B6B  97                 	db	151
  2298  009B6C  96                 	db	150
  2299  009B6D  95                 	db	149
  2300  009B6E  94                 	db	148
  2301  009B6F  93                 	db	147
  2302  009B70  92                 	db	146
  2303  009B71  91                 	db	145
  2304  009B72  90                 	db	144
  2305  009B73  8F                 	db	143
  2306  009B74  8E                 	db	142
  2307  009B75  8D                 	db	141
  2308  009B76  8C                 	db	140
  2309  009B77  8B                 	db	139
  2310  009B78  8A                 	db	138
  2311  009B79  89                 	db	137
  2312  009B7A  88                 	db	136
  2313  009B7B  87                 	db	135
  2314  009B7C  86                 	db	134
  2315  009B7D  85                 	db	133
  2316  009B7E  84                 	db	132
  2317  009B7F  83                 	db	131
  2318  009B80  82                 	db	130
  2319  009B81  81                 	db	129
  2320  009B82  80                 	db	128
  2321  009B83  7F                 	db	127
  2322  009B84  7E                 	db	126
  2323  009B85  7D                 	db	125
  2324  009B86  7C                 	db	124
  2325  009B87  7B                 	db	123
  2326  009B88  7A                 	db	122
  2327  009B89  79                 	db	121
  2328  009B8A  78                 	db	120
  2329  009B8B  77                 	db	119
  2330  009B8C  76                 	db	118
  2331  009B8D  75                 	db	117
  2332  009B8E  74                 	db	116
  2333  009B8F  73                 	db	115
  2334  009B90  72                 	db	114
  2335  009B91  71                 	db	113
  2336  009B92  70                 	db	112
  2337  009B93  6F                 	db	111
  2338  009B94  6E                 	db	110
  2339  009B95  6D                 	db	109
  2340  009B96  6C                 	db	108
  2341  009B97  6B                 	db	107
  2342  009B98  6A                 	db	106
  2343  009B99  69                 	db	105
  2344  009B9A  68                 	db	104
  2345  009B9B  67                 	db	103
  2346  009B9C  66                 	db	102
  2347  009B9D  65                 	db	101
  2348  009B9E  64                 	db	100
  2349  009B9F  63                 	db	99
  2350  009BA0  62                 	db	98
  2351  009BA1  61                 	db	97
  2352  009BA2  60                 	db	96
  2353  009BA3  5F                 	db	95
  2354  009BA4  5E                 	db	94
  2355  009BA5  5D                 	db	93
  2356  009BA6  5C                 	db	92
  2357  009BA7  5B                 	db	91
  2358  009BA8  5A                 	db	90
  2359  009BA9  59                 	db	89
  2360  009BAA  58                 	db	88
  2361  009BAB  57                 	db	87
  2362  009BAC  56                 	db	86
  2363  009BAD  55                 	db	85
  2364  009BAE  54                 	db	84
  2365  009BAF  53                 	db	83
  2366  009BB0  52                 	db	82
  2367  009BB1  51                 	db	81
  2368  009BB2  50                 	db	80
  2369  009BB3  4F                 	db	79
  2370  009BB4  4E                 	db	78
  2371  009BB5  4D                 	db	77
  2372  009BB6  4C                 	db	76
  2373  009BB7  4B                 	db	75
  2374  009BB8  4A                 	db	74
  2375  009BB9  49                 	db	73
  2376  009BBA  48                 	db	72
  2377  009BBB  47                 	db	71
  2378  009BBC  46                 	db	70
  2379  009BBD  45                 	db	69
  2380  009BBE  44                 	db	68
  2381  009BBF  43                 	db	67
  2382  009BC0  42                 	db	66
  2383  009BC1  41                 	db	65
  2384  009BC2  40                 	db	64
  2385  009BC3  3F                 	db	63
  2386  009BC4  FF                 	db	255
  2387  009BC5  FE                 	db	254
  2388  009BC6  FD                 	db	253
  2389  009BC7  FC                 	db	252
  2390  009BC8  FB                 	db	251
  2391  009BC9  FA                 	db	250
  2392  009BCA  F9                 	db	249
  2393  009BCB  F8                 	db	248
  2394  009BCC  F7                 	db	247
  2395  009BCD  F6                 	db	246
  2396  009BCE  F5                 	db	245
  2397  009BCF  F4                 	db	244
  2398  009BD0  F3                 	db	243
  2399  009BD1  F2                 	db	242
  2400  009BD2  F1                 	db	241
  2401  009BD3  F0                 	db	240
  2402  009BD4  EF                 	db	239
  2403  009BD5  EE                 	db	238
  2404  009BD6  ED                 	db	237
  2405  009BD7  EC                 	db	236
  2406  009BD8  EB                 	db	235
  2407  009BD9  EA                 	db	234
  2408  009BDA  E9                 	db	233
  2409  009BDB  E8                 	db	232
  2410  009BDC  E7                 	db	231
  2411  009BDD  E6                 	db	230
  2412  009BDE  E5                 	db	229
  2413  009BDF  E4                 	db	228
  2414  009BE0  E3                 	db	227
  2415  009BE1  E2                 	db	226
  2416  009BE2  E1                 	db	225
  2417  009BE3  E0                 	db	224
  2418  009BE4  DF                 	db	223
  2419  009BE5  DE                 	db	222
  2420  009BE6  DD                 	db	221
  2421  009BE7  DC                 	db	220
  2422  009BE8  DB                 	db	219
  2423  009BE9  DA                 	db	218
  2424  009BEA  D9                 	db	217
  2425  009BEB  D8                 	db	216
  2426  009BEC  D7                 	db	215
  2427  009BED  D6                 	db	214
  2428  009BEE  D5                 	db	213
  2429  009BEF  D4                 	db	212
  2430  009BF0  D3                 	db	211
  2431  009BF1  D2                 	db	210
  2432  009BF2  D1                 	db	209
  2433  009BF3  D0                 	db	208
  2434  009BF4  CF                 	db	207
  2435  009BF5  CE                 	db	206
  2436  009BF6  CD                 	db	205
  2437  009BF7  CC                 	db	204
  2438  009BF8  CB                 	db	203
  2439  009BF9  CA                 	db	202
  2440  009BFA  C9                 	db	201
  2441  009BFB  C8                 	db	200
  2442  009BFC  C7                 	db	199
  2443  009BFD                     __end_of_motor_period_lookup:
  2444                           	opt stack 0
  2445  009BFD                     _motor_prescaler_lookup:
  2446                           	opt stack 0
  2447  009BFD  02                 	db	2
  2448  009BFE  02                 	db	2
  2449  009BFF  02                 	db	2
  2450  009C00  02                 	db	2
  2451  009C01  02                 	db	2
  2452  009C02  02                 	db	2
  2453  009C03  02                 	db	2
  2454  009C04  02                 	db	2
  2455  009C05  02                 	db	2
  2456  009C06  02                 	db	2
  2457  009C07  02                 	db	2
  2458  009C08  02                 	db	2
  2459  009C09  02                 	db	2
  2460  009C0A  02                 	db	2
  2461  009C0B  02                 	db	2
  2462  009C0C  02                 	db	2
  2463  009C0D  02                 	db	2
  2464  009C0E  02                 	db	2
  2465  009C0F  02                 	db	2
  2466  009C10  02                 	db	2
  2467  009C11  02                 	db	2
  2468  009C12  02                 	db	2
  2469  009C13  02                 	db	2
  2470  009C14  02                 	db	2
  2471  009C15  02                 	db	2
  2472  009C16  02                 	db	2
  2473  009C17  02                 	db	2
  2474  009C18  02                 	db	2
  2475  009C19  02                 	db	2
  2476  009C1A  02                 	db	2
  2477  009C1B  02                 	db	2
  2478  009C1C  02                 	db	2
  2479  009C1D  02                 	db	2
  2480  009C1E  02                 	db	2
  2481  009C1F  02                 	db	2
  2482  009C20  02                 	db	2
  2483  009C21  02                 	db	2
  2484  009C22  02                 	db	2
  2485  009C23  02                 	db	2
  2486  009C24  02                 	db	2
  2487  009C25  02                 	db	2
  2488  009C26  02                 	db	2
  2489  009C27  02                 	db	2
  2490  009C28  02                 	db	2
  2491  009C29  02                 	db	2
  2492  009C2A  02                 	db	2
  2493  009C2B  02                 	db	2
  2494  009C2C  02                 	db	2
  2495  009C2D  02                 	db	2
  2496  009C2E  02                 	db	2
  2497  009C2F  02                 	db	2
  2498  009C30  02                 	db	2
  2499  009C31  02                 	db	2
  2500  009C32  02                 	db	2
  2501  009C33  02                 	db	2
  2502  009C34  02                 	db	2
  2503  009C35  02                 	db	2
  2504  009C36  02                 	db	2
  2505  009C37  02                 	db	2
  2506  009C38  02                 	db	2
  2507  009C39  02                 	db	2
  2508  009C3A  02                 	db	2
  2509  009C3B  02                 	db	2
  2510  009C3C  02                 	db	2
  2511  009C3D  02                 	db	2
  2512  009C3E  02                 	db	2
  2513  009C3F  02                 	db	2
  2514  009C40  02                 	db	2
  2515  009C41  02                 	db	2
  2516  009C42  02                 	db	2
  2517  009C43  02                 	db	2
  2518  009C44  02                 	db	2
  2519  009C45  02                 	db	2
  2520  009C46  02                 	db	2
  2521  009C47  02                 	db	2
  2522  009C48  02                 	db	2
  2523  009C49  02                 	db	2
  2524  009C4A  02                 	db	2
  2525  009C4B  02                 	db	2
  2526  009C4C  02                 	db	2
  2527  009C4D  02                 	db	2
  2528  009C4E  02                 	db	2
  2529  009C4F  02                 	db	2
  2530  009C50  02                 	db	2
  2531  009C51  02                 	db	2
  2532  009C52  02                 	db	2
  2533  009C53  02                 	db	2
  2534  009C54  02                 	db	2
  2535  009C55  02                 	db	2
  2536  009C56  02                 	db	2
  2537  009C57  02                 	db	2
  2538  009C58  02                 	db	2
  2539  009C59  02                 	db	2
  2540  009C5A  02                 	db	2
  2541  009C5B  02                 	db	2
  2542  009C5C  02                 	db	2
  2543  009C5D  02                 	db	2
  2544  009C5E  02                 	db	2
  2545  009C5F  02                 	db	2
  2546  009C60  02                 	db	2
  2547  009C61  02                 	db	2
  2548  009C62  02                 	db	2
  2549  009C63  02                 	db	2
  2550  009C64  02                 	db	2
  2551  009C65  02                 	db	2
  2552  009C66  02                 	db	2
  2553  009C67  02                 	db	2
  2554  009C68  02                 	db	2
  2555  009C69  02                 	db	2
  2556  009C6A  02                 	db	2
  2557  009C6B  02                 	db	2
  2558  009C6C  02                 	db	2
  2559  009C6D  02                 	db	2
  2560  009C6E  02                 	db	2
  2561  009C6F  02                 	db	2
  2562  009C70  02                 	db	2
  2563  009C71  02                 	db	2
  2564  009C72  02                 	db	2
  2565  009C73  02                 	db	2
  2566  009C74  02                 	db	2
  2567  009C75  02                 	db	2
  2568  009C76  02                 	db	2
  2569  009C77  02                 	db	2
  2570  009C78  02                 	db	2
  2571  009C79  02                 	db	2
  2572  009C7A  02                 	db	2
  2573  009C7B  02                 	db	2
  2574  009C7C  02                 	db	2
  2575  009C7D  02                 	db	2
  2576  009C7E  02                 	db	2
  2577  009C7F  02                 	db	2
  2578  009C80  02                 	db	2
  2579  009C81  02                 	db	2
  2580  009C82  02                 	db	2
  2581  009C83  02                 	db	2
  2582  009C84  02                 	db	2
  2583  009C85  02                 	db	2
  2584  009C86  02                 	db	2
  2585  009C87  02                 	db	2
  2586  009C88  02                 	db	2
  2587  009C89  02                 	db	2
  2588  009C8A  02                 	db	2
  2589  009C8B  02                 	db	2
  2590  009C8C  02                 	db	2
  2591  009C8D  02                 	db	2
  2592  009C8E  02                 	db	2
  2593  009C8F  02                 	db	2
  2594  009C90  02                 	db	2
  2595  009C91  02                 	db	2
  2596  009C92  02                 	db	2
  2597  009C93  02                 	db	2
  2598  009C94  02                 	db	2
  2599  009C95  02                 	db	2
  2600  009C96  02                 	db	2
  2601  009C97  02                 	db	2
  2602  009C98  02                 	db	2
  2603  009C99  02                 	db	2
  2604  009C9A  02                 	db	2
  2605  009C9B  02                 	db	2
  2606  009C9C  02                 	db	2
  2607  009C9D  02                 	db	2
  2608  009C9E  02                 	db	2
  2609  009C9F  02                 	db	2
  2610  009CA0  02                 	db	2
  2611  009CA1  02                 	db	2
  2612  009CA2  02                 	db	2
  2613  009CA3  02                 	db	2
  2614  009CA4  02                 	db	2
  2615  009CA5  02                 	db	2
  2616  009CA6  02                 	db	2
  2617  009CA7  02                 	db	2
  2618  009CA8  02                 	db	2
  2619  009CA9  02                 	db	2
  2620  009CAA  02                 	db	2
  2621  009CAB  02                 	db	2
  2622  009CAC  02                 	db	2
  2623  009CAD  02                 	db	2
  2624  009CAE  02                 	db	2
  2625  009CAF  02                 	db	2
  2626  009CB0  02                 	db	2
  2627  009CB1  02                 	db	2
  2628  009CB2  02                 	db	2
  2629  009CB3  02                 	db	2
  2630  009CB4  02                 	db	2
  2631  009CB5  02                 	db	2
  2632  009CB6  02                 	db	2
  2633  009CB7  02                 	db	2
  2634  009CB8  02                 	db	2
  2635  009CB9  02                 	db	2
  2636  009CBA  02                 	db	2
  2637  009CBB  02                 	db	2
  2638  009CBC  02                 	db	2
  2639  009CBD  02                 	db	2
  2640  009CBE  02                 	db	2
  2641  009CBF  02                 	db	2
  2642  009CC0  02                 	db	2
  2643  009CC1  02                 	db	2
  2644  009CC2  02                 	db	2
  2645  009CC3  02                 	db	2
  2646  009CC4  02                 	db	2
  2647  009CC5  02                 	db	2
  2648  009CC6  02                 	db	2
  2649  009CC7  02                 	db	2
  2650  009CC8  02                 	db	2
  2651  009CC9  02                 	db	2
  2652  009CCA  02                 	db	2
  2653  009CCB  02                 	db	2
  2654  009CCC  02                 	db	2
  2655  009CCD  02                 	db	2
  2656  009CCE  02                 	db	2
  2657  009CCF  02                 	db	2
  2658  009CD0  02                 	db	2
  2659  009CD1  02                 	db	2
  2660  009CD2  02                 	db	2
  2661  009CD3  02                 	db	2
  2662  009CD4  02                 	db	2
  2663  009CD5  02                 	db	2
  2664  009CD6  02                 	db	2
  2665  009CD7  02                 	db	2
  2666  009CD8  02                 	db	2
  2667  009CD9  02                 	db	2
  2668  009CDA  02                 	db	2
  2669  009CDB  02                 	db	2
  2670  009CDC  02                 	db	2
  2671  009CDD  02                 	db	2
  2672  009CDE  02                 	db	2
  2673  009CDF  02                 	db	2
  2674  009CE0  02                 	db	2
  2675  009CE1  02                 	db	2
  2676  009CE2  02                 	db	2
  2677  009CE3  02                 	db	2
  2678  009CE4  02                 	db	2
  2679  009CE5  02                 	db	2
  2680  009CE6  02                 	db	2
  2681  009CE7  02                 	db	2
  2682  009CE8  02                 	db	2
  2683  009CE9  02                 	db	2
  2684  009CEA  01                 	db	1
  2685  009CEB  01                 	db	1
  2686  009CEC  01                 	db	1
  2687  009CED  01                 	db	1
  2688  009CEE  01                 	db	1
  2689  009CEF  01                 	db	1
  2690  009CF0  01                 	db	1
  2691  009CF1  01                 	db	1
  2692  009CF2  01                 	db	1
  2693  009CF3  01                 	db	1
  2694  009CF4  01                 	db	1
  2695  009CF5  01                 	db	1
  2696  009CF6  01                 	db	1
  2697  009CF7  01                 	db	1
  2698  009CF8  01                 	db	1
  2699  009CF9  01                 	db	1
  2700  009CFA  01                 	db	1
  2701  009CFB  01                 	db	1
  2702  009CFC  01                 	db	1
  2703  009CFD  01                 	db	1
  2704  009CFE  01                 	db	1
  2705  009CFF  01                 	db	1
  2706  009D00  01                 	db	1
  2707  009D01  01                 	db	1
  2708  009D02  01                 	db	1
  2709  009D03  01                 	db	1
  2710  009D04  01                 	db	1
  2711  009D05  01                 	db	1
  2712  009D06  01                 	db	1
  2713  009D07  01                 	db	1
  2714  009D08  01                 	db	1
  2715  009D09  01                 	db	1
  2716  009D0A  01                 	db	1
  2717  009D0B  01                 	db	1
  2718  009D0C  01                 	db	1
  2719  009D0D  01                 	db	1
  2720  009D0E  01                 	db	1
  2721  009D0F  01                 	db	1
  2722  009D10  01                 	db	1
  2723  009D11  01                 	db	1
  2724  009D12  01                 	db	1
  2725  009D13  01                 	db	1
  2726  009D14  01                 	db	1
  2727  009D15  01                 	db	1
  2728  009D16  01                 	db	1
  2729  009D17  01                 	db	1
  2730  009D18  01                 	db	1
  2731  009D19  01                 	db	1
  2732  009D1A  01                 	db	1
  2733  009D1B  01                 	db	1
  2734  009D1C  01                 	db	1
  2735  009D1D  01                 	db	1
  2736  009D1E  01                 	db	1
  2737  009D1F  01                 	db	1
  2738  009D20  01                 	db	1
  2739  009D21  01                 	db	1
  2740  009D22  01                 	db	1
  2741  009D23  01                 	db	1
  2742  009D24  01                 	db	1
  2743  009D25  01                 	db	1
  2744  009D26  01                 	db	1
  2745  009D27  01                 	db	1
  2746  009D28  01                 	db	1
  2747  009D29  01                 	db	1
  2748  009D2A  01                 	db	1
  2749  009D2B  01                 	db	1
  2750  009D2C  01                 	db	1
  2751  009D2D  01                 	db	1
  2752  009D2E  01                 	db	1
  2753  009D2F  01                 	db	1
  2754  009D30  01                 	db	1
  2755  009D31  01                 	db	1
  2756  009D32  01                 	db	1
  2757  009D33  01                 	db	1
  2758  009D34  01                 	db	1
  2759  009D35  01                 	db	1
  2760  009D36  01                 	db	1
  2761  009D37  01                 	db	1
  2762  009D38  01                 	db	1
  2763  009D39  01                 	db	1
  2764  009D3A  01                 	db	1
  2765  009D3B  01                 	db	1
  2766  009D3C  01                 	db	1
  2767  009D3D  01                 	db	1
  2768  009D3E  01                 	db	1
  2769  009D3F  01                 	db	1
  2770  009D40  01                 	db	1
  2771  009D41  01                 	db	1
  2772  009D42  01                 	db	1
  2773  009D43  01                 	db	1
  2774  009D44  01                 	db	1
  2775  009D45  01                 	db	1
  2776  009D46  01                 	db	1
  2777  009D47  01                 	db	1
  2778  009D48  01                 	db	1
  2779  009D49  01                 	db	1
  2780  009D4A  01                 	db	1
  2781  009D4B  01                 	db	1
  2782  009D4C  01                 	db	1
  2783  009D4D  01                 	db	1
  2784  009D4E  01                 	db	1
  2785  009D4F  01                 	db	1
  2786  009D50  01                 	db	1
  2787  009D51  01                 	db	1
  2788  009D52  01                 	db	1
  2789  009D53  01                 	db	1
  2790  009D54  01                 	db	1
  2791  009D55  01                 	db	1
  2792  009D56  01                 	db	1
  2793  009D57  01                 	db	1
  2794  009D58  01                 	db	1
  2795  009D59  01                 	db	1
  2796  009D5A  01                 	db	1
  2797  009D5B  01                 	db	1
  2798  009D5C  01                 	db	1
  2799  009D5D  01                 	db	1
  2800  009D5E  01                 	db	1
  2801  009D5F  01                 	db	1
  2802  009D60  01                 	db	1
  2803  009D61  01                 	db	1
  2804  009D62  01                 	db	1
  2805  009D63  01                 	db	1
  2806  009D64  01                 	db	1
  2807  009D65  01                 	db	1
  2808  009D66  01                 	db	1
  2809  009D67  01                 	db	1
  2810  009D68  01                 	db	1
  2811  009D69  01                 	db	1
  2812  009D6A  01                 	db	1
  2813  009D6B  01                 	db	1
  2814  009D6C  01                 	db	1
  2815  009D6D  01                 	db	1
  2816  009D6E  01                 	db	1
  2817  009D6F  01                 	db	1
  2818  009D70  01                 	db	1
  2819  009D71  01                 	db	1
  2820  009D72  01                 	db	1
  2821  009D73  01                 	db	1
  2822  009D74  01                 	db	1
  2823  009D75  01                 	db	1
  2824  009D76  01                 	db	1
  2825  009D77  01                 	db	1
  2826  009D78  01                 	db	1
  2827  009D79  01                 	db	1
  2828  009D7A  01                 	db	1
  2829  009D7B  01                 	db	1
  2830  009D7C  01                 	db	1
  2831  009D7D  01                 	db	1
  2832  009D7E  01                 	db	1
  2833  009D7F  01                 	db	1
  2834  009D80  01                 	db	1
  2835  009D81  01                 	db	1
  2836  009D82  01                 	db	1
  2837  009D83  01                 	db	1
  2838  009D84  01                 	db	1
  2839  009D85  01                 	db	1
  2840  009D86  01                 	db	1
  2841  009D87  01                 	db	1
  2842  009D88  01                 	db	1
  2843  009D89  01                 	db	1
  2844  009D8A  01                 	db	1
  2845  009D8B  01                 	db	1
  2846  009D8C  01                 	db	1
  2847  009D8D  01                 	db	1
  2848  009D8E  01                 	db	1
  2849  009D8F  01                 	db	1
  2850  009D90  01                 	db	1
  2851  009D91  01                 	db	1
  2852  009D92  01                 	db	1
  2853  009D93  01                 	db	1
  2854  009D94  01                 	db	1
  2855  009D95  01                 	db	1
  2856  009D96  01                 	db	1
  2857  009D97  01                 	db	1
  2858  009D98  01                 	db	1
  2859  009D99  01                 	db	1
  2860  009D9A  01                 	db	1
  2861  009D9B  01                 	db	1
  2862  009D9C  01                 	db	1
  2863  009D9D  01                 	db	1
  2864  009D9E  01                 	db	1
  2865  009D9F  01                 	db	1
  2866  009DA0  01                 	db	1
  2867  009DA1  01                 	db	1
  2868  009DA2  01                 	db	1
  2869  009DA3  01                 	db	1
  2870  009DA4  01                 	db	1
  2871  009DA5  01                 	db	1
  2872  009DA6  01                 	db	1
  2873  009DA7  01                 	db	1
  2874  009DA8  01                 	db	1
  2875  009DA9  01                 	db	1
  2876  009DAA  01                 	db	1
  2877  009DAB  00                 	db	0
  2878  009DAC  00                 	db	0
  2879  009DAD  00                 	db	0
  2880  009DAE  00                 	db	0
  2881  009DAF  00                 	db	0
  2882  009DB0  00                 	db	0
  2883  009DB1  00                 	db	0
  2884  009DB2  00                 	db	0
  2885  009DB3  00                 	db	0
  2886  009DB4  00                 	db	0
  2887  009DB5  00                 	db	0
  2888  009DB6  00                 	db	0
  2889  009DB7  00                 	db	0
  2890  009DB8  00                 	db	0
  2891  009DB9  00                 	db	0
  2892  009DBA  00                 	db	0
  2893  009DBB  00                 	db	0
  2894  009DBC  00                 	db	0
  2895  009DBD  00                 	db	0
  2896  009DBE  00                 	db	0
  2897  009DBF  00                 	db	0
  2898  009DC0  00                 	db	0
  2899  009DC1  00                 	db	0
  2900  009DC2  00                 	db	0
  2901  009DC3  00                 	db	0
  2902  009DC4  00                 	db	0
  2903  009DC5  00                 	db	0
  2904  009DC6  00                 	db	0
  2905  009DC7  00                 	db	0
  2906  009DC8  00                 	db	0
  2907  009DC9  00                 	db	0
  2908  009DCA  00                 	db	0
  2909  009DCB  00                 	db	0
  2910  009DCC  00                 	db	0
  2911  009DCD  00                 	db	0
  2912  009DCE  00                 	db	0
  2913  009DCF  00                 	db	0
  2914  009DD0  00                 	db	0
  2915  009DD1  00                 	db	0
  2916  009DD2  00                 	db	0
  2917  009DD3  00                 	db	0
  2918  009DD4  00                 	db	0
  2919  009DD5  00                 	db	0
  2920  009DD6  00                 	db	0
  2921  009DD7  00                 	db	0
  2922  009DD8  00                 	db	0
  2923  009DD9  00                 	db	0
  2924  009DDA  00                 	db	0
  2925  009DDB  00                 	db	0
  2926  009DDC  00                 	db	0
  2927  009DDD  00                 	db	0
  2928  009DDE  00                 	db	0
  2929  009DDF  00                 	db	0
  2930  009DE0  00                 	db	0
  2931  009DE1  00                 	db	0
  2932  009DE2  00                 	db	0
  2933  009DE3  00                 	db	0
  2934  009DE4                     __end_of_motor_prescaler_lookup:
  2935                           	opt stack 0
  2936  009DE4                     _USB_SD_Ptr:
  2937                           	opt stack 0
  2938  009DE4  E5                 	db	low _sd000
  2939  009DE5  A2                 	db	high _sd000
  2940  009DE6  FE                 	db	low _sd001
  2941  009DE7  A0                 	db	high _sd001
  2942  009DE8  32                 	db	low _sd002
  2943  009DE9  A1                 	db	high _sd002
  2944  009DEA  A1                 	db	low _sd003
  2945  009DEB  A1                 	db	high _sd003
  2946  009DEC                     __end_of_USB_SD_Ptr:
  2947                           	opt stack 0
  2948  009DEC                     _USB_CD_Ptr:
  2949                           	opt stack 0
  2950  009DEC  BE                 	db	low _configDescriptor1
  2951  009DED  A0                 	db	high _configDescriptor1
  2952  009DEE                     __end_of_USB_CD_Ptr:
  2953                           	opt stack 0
  2954  009DEE                     _dc_manual:
  2955                           	opt stack 0
  2956  009DEE  4D                 	db	77
  2957  009DEF  61                 	db	97
  2958  009DF0  6E                 	db	110
  2959  009DF1  75                 	db	117
  2960  009DF2  61                 	db	97
  2961  009DF3  6C                 	db	108
  2962  009DF4  20                 	db	32
  2963  009DF5  4D                 	db	77
  2964  009DF6  6F                 	db	111
  2965  009DF7  64                 	db	100
  2966  009DF8  65                 	db	101
  2967  009DF9  20                 	db	32
  2968  009DFA  20                 	db	32
  2969  009DFB  20                 	db	32
  2970  009DFC  20                 	db	32
  2971  009DFD  20                 	db	32
  2972  009DFE  20                 	db	32
  2973  009DFF  20                 	db	32
  2974  009E00  20                 	db	32
  2975  009E01  20                 	db	32
  2976  009E02  43                 	db	67
  2977  009E03  75                 	db	117
  2978  009E04  72                 	db	114
  2979  009E05  72                 	db	114
  2980  009E06  65                 	db	101
  2981  009E07  6E                 	db	110
  2982  009E08  74                 	db	116
  2983  009E09  20                 	db	32
  2984  009E0A  70                 	db	112
  2985  009E0B  6F                 	db	111
  2986  009E0C  73                 	db	115
  2987  009E0D  3A                 	db	58
  2988  009E0E  20                 	db	32
  2989  009E0F  20                 	db	32
  2990  009E10  20                 	db	32
  2991  009E11  20                 	db	32
  2992  009E12  20                 	db	32
  2993  009E13  20                 	db	32
  2994  009E14  20                 	db	32
  2995  009E15  01                 	db	1
  2996  009E16  54                 	db	84
  2997  009E17  75                 	db	117
  2998  009E18  72                 	db	114
  2999  009E19  6E                 	db	110
  3000  009E1A  20                 	db	32
  3001  009E1B  43                 	db	67
  3002  009E1C  43                 	db	67
  3003  009E1D  57                 	db	87
  3004  009E1E  20                 	db	32
  3005  009E1F  00                 	db	0
  3006  009E20  20                 	db	32
  3007  009E21  53                 	db	83
  3008  009E22  70                 	db	112
  3009  009E23  65                 	db	101
  3010  009E24  65                 	db	101
  3011  009E25  64                 	db	100
  3012  009E26  20                 	db	32
  3013  009E27  20                 	db	32
  3014  009E28  20                 	db	32
  3015  009E29  20                 	db	32
  3016  009E2A  53                 	db	83
  3017  009E2B  74                 	db	116
  3018  009E2C  61                 	db	97
  3019  009E2D  72                 	db	114
  3020  009E2E  74                 	db	116
  3021  009E2F  20                 	db	32
  3022  009E30  20                 	db	32
  3023  009E31  20                 	db	32
  3024  009E32  20                 	db	32
  3025  009E33  00                 	db	0
  3026  009E34  20                 	db	32
  3027  009E35  20                 	db	32
  3028  009E36  20                 	db	32
  3029  009E37  20                 	db	32
  3030  009E38  20                 	db	32
  3031  009E39  20                 	db	32
  3032  009E3A  20                 	db	32
  3033  009E3B  20                 	db	32
  3034  009E3C  20                 	db	32
  3035  009E3D  20                 	db	32
  3036  009E3E                     __end_of_dc_manual:
  3037                           	opt stack 0
  3038  009E3E                     _dc_zero:
  3039                           	opt stack 0
  3040  009E3E  52                 	db	82
  3041  009E3F  65                 	db	101
  3042  009E40  74                 	db	116
  3043  009E41  75                 	db	117
  3044  009E42  72                 	db	114
  3045  009E43  6E                 	db	110
  3046  009E44  20                 	db	32
  3047  009E45  74                 	db	116
  3048  009E46  6F                 	db	111
  3049  009E47  20                 	db	32
  3050  009E48  5A                 	db	90
  3051  009E49  65                 	db	101
  3052  009E4A  72                 	db	114
  3053  009E4B  6F                 	db	111
  3054  009E4C  3F                 	db	63
  3055  009E4D  20                 	db	32
  3056  009E4E  20                 	db	32
  3057  009E4F  20                 	db	32
  3058  009E50  20                 	db	32
  3059  009E51  20                 	db	32
  3060  009E52  43                 	db	67
  3061  009E53  75                 	db	117
  3062  009E54  72                 	db	114
  3063  009E55  72                 	db	114
  3064  009E56  65                 	db	101
  3065  009E57  6E                 	db	110
  3066  009E58  74                 	db	116
  3067  009E59  20                 	db	32
  3068  009E5A  70                 	db	112
  3069  009E5B  6F                 	db	111
  3070  009E5C  73                 	db	115
  3071  009E5D  3A                 	db	58
  3072  009E5E  20                 	db	32
  3073  009E5F  20                 	db	32
  3074  009E60  20                 	db	32
  3075  009E61  20                 	db	32
  3076  009E62  20                 	db	32
  3077  009E63  20                 	db	32
  3078  009E64  20                 	db	32
  3079  009E65  20                 	db	32
  3080  009E66  20                 	db	32
  3081  009E67  20                 	db	32
  3082  009E68  20                 	db	32
  3083  009E69  20                 	db	32
  3084  009E6A  20                 	db	32
  3085  009E6B  20                 	db	32
  3086  009E6C  20                 	db	32
  3087  009E6D  20                 	db	32
  3088  009E6E  20                 	db	32
  3089  009E6F  20                 	db	32
  3090  009E70  20                 	db	32
  3091  009E71  20                 	db	32
  3092  009E72  20                 	db	32
  3093  009E73  20                 	db	32
  3094  009E74  20                 	db	32
  3095  009E75  20                 	db	32
  3096  009E76  20                 	db	32
  3097  009E77  20                 	db	32
  3098  009E78  20                 	db	32
  3099  009E79  20                 	db	32
  3100  009E7A  20                 	db	32
  3101  009E7B  59                 	db	89
  3102  009E7C  65                 	db	101
  3103  009E7D  73                 	db	115
  3104  009E7E  20                 	db	32
  3105  009E7F  20                 	db	32
  3106  009E80  20                 	db	32
  3107  009E81  20                 	db	32
  3108  009E82  20                 	db	32
  3109  009E83  20                 	db	32
  3110  009E84  20                 	db	32
  3111  009E85  20                 	db	32
  3112  009E86  20                 	db	32
  3113  009E87  20                 	db	32
  3114  009E88  20                 	db	32
  3115  009E89  20                 	db	32
  3116  009E8A  4E                 	db	78
  3117  009E8B  6F                 	db	111
  3118  009E8C  20                 	db	32
  3119  009E8D  20                 	db	32
  3120  009E8E                     __end_of_dc_zero:
  3121                           	opt stack 0
  3122  009E8E                     _dc_arc2:
  3123                           	opt stack 0
  3124  009E8E  41                 	db	65
  3125  009E8F  72                 	db	114
  3126  009E90  63                 	db	99
  3127  009E91  3A                 	db	58
  3128  009E92  20                 	db	32
  3129  009E93  53                 	db	83
  3130  009E94  69                 	db	105
  3131  009E95  7A                 	db	122
  3132  009E96  65                 	db	101
  3133  009E97  3D                 	db	61
  3134  009E98  20                 	db	32
  3135  009E99  20                 	db	32
  3136  009E9A  20                 	db	32
  3137  009E9B  20                 	db	32
  3138  009E9C  20                 	db	32
  3139  009E9D  20                 	db	32
  3140  009E9E  20                 	db	32
  3141  009E9F  20                 	db	32
  3142  009EA0  20                 	db	32
  3143  009EA1  20                 	db	32
  3144  009EA2  43                 	db	67
  3145  009EA3  75                 	db	117
  3146  009EA4  72                 	db	114
  3147  009EA5  72                 	db	114
  3148  009EA6  65                 	db	101
  3149  009EA7  6E                 	db	110
  3150  009EA8  74                 	db	116
  3151  009EA9  20                 	db	32
  3152  009EAA  70                 	db	112
  3153  009EAB  6F                 	db	111
  3154  009EAC  73                 	db	115
  3155  009EAD  3A                 	db	58
  3156  009EAE  20                 	db	32
  3157  009EAF  20                 	db	32
  3158  009EB0  20                 	db	32
  3159  009EB1  20                 	db	32
  3160  009EB2  20                 	db	32
  3161  009EB3  20                 	db	32
  3162  009EB4  20                 	db	32
  3163  009EB5  01                 	db	1
  3164  009EB6  54                 	db	84
  3165  009EB7  75                 	db	117
  3166  009EB8  72                 	db	114
  3167  009EB9  6E                 	db	110
  3168  009EBA  20                 	db	32
  3169  009EBB  43                 	db	67
  3170  009EBC  43                 	db	67
  3171  009EBD  57                 	db	87
  3172  009EBE  20                 	db	32
  3173  009EBF  00                 	db	0
  3174  009EC0  20                 	db	32
  3175  009EC1  53                 	db	83
  3176  009EC2  70                 	db	112
  3177  009EC3  65                 	db	101
  3178  009EC4  65                 	db	101
  3179  009EC5  64                 	db	100
  3180  009EC6  20                 	db	32
  3181  009EC7  20                 	db	32
  3182  009EC8  20                 	db	32
  3183  009EC9  20                 	db	32
  3184  009ECA  53                 	db	83
  3185  009ECB  74                 	db	116
  3186  009ECC  61                 	db	97
  3187  009ECD  72                 	db	114
  3188  009ECE  74                 	db	116
  3189  009ECF  20                 	db	32
  3190  009ED0  20                 	db	32
  3191  009ED1  20                 	db	32
  3192  009ED2  20                 	db	32
  3193  009ED3  00                 	db	0
  3194  009ED4  20                 	db	32
  3195  009ED5  20                 	db	32
  3196  009ED6  20                 	db	32
  3197  009ED7  20                 	db	32
  3198  009ED8  20                 	db	32
  3199  009ED9  20                 	db	32
  3200  009EDA  20                 	db	32
  3201  009EDB  20                 	db	32
  3202  009EDC  20                 	db	32
  3203  009EDD  20                 	db	32
  3204  009EDE                     __end_of_dc_arc2:
  3205                           	opt stack 0
  3206  009EDE                     _dc_arc1:
  3207                           	opt stack 0
  3208  009EDE  41                 	db	65
  3209  009EDF  72                 	db	114
  3210  009EE0  63                 	db	99
  3211  009EE1  3A                 	db	58
  3212  009EE2  20                 	db	32
  3213  009EE3  53                 	db	83
  3214  009EE4  65                 	db	101
  3215  009EE5  74                 	db	116
  3216  009EE6  20                 	db	32
  3217  009EE7  61                 	db	97
  3218  009EE8  72                 	db	114
  3219  009EE9  63                 	db	99
  3220  009EEA  20                 	db	32
  3221  009EEB  73                 	db	115
  3222  009EEC  69                 	db	105
  3223  009EED  7A                 	db	122
  3224  009EEE  65                 	db	101
  3225  009EEF  20                 	db	32
  3226  009EF0  20                 	db	32
  3227  009EF1  20                 	db	32
  3228  009EF2  41                 	db	65
  3229  009EF3  72                 	db	114
  3230  009EF4  63                 	db	99
  3231  009EF5  20                 	db	32
  3232  009EF6  73                 	db	115
  3233  009EF7  69                 	db	105
  3234  009EF8  7A                 	db	122
  3235  009EF9  65                 	db	101
  3236  009EFA  3A                 	db	58
  3237  009EFB  20                 	db	32
  3238  009EFC  20                 	db	32
  3239  009EFD  20                 	db	32
  3240  009EFE  20                 	db	32
  3241  009EFF  20                 	db	32
  3242  009F00  20                 	db	32
  3243  009F01  20                 	db	32
  3244  009F02  20                 	db	32
  3245  009F03  20                 	db	32
  3246  009F04  20                 	db	32
  3247  009F05  20                 	db	32
  3248  009F06  53                 	db	83
  3249  009F07  74                 	db	116
  3250  009F08  65                 	db	101
  3251  009F09  70                 	db	112
  3252  009F0A  20                 	db	32
  3253  009F0B  73                 	db	115
  3254  009F0C  69                 	db	105
  3255  009F0D  7A                 	db	122
  3256  009F0E  65                 	db	101
  3257  009F0F  20                 	db	32
  3258  009F10  00                 	db	0
  3259  009F11  20                 	db	32
  3260  009F12  20                 	db	32
  3261  009F13  43                 	db	67
  3262  009F14  6F                 	db	111
  3263  009F15  6E                 	db	110
  3264  009F16  66                 	db	102
  3265  009F17  69                 	db	105
  3266  009F18  72                 	db	114
  3267  009F19  6D                 	db	109
  3268  009F1A  20                 	db	32
  3269  009F1B  20                 	db	32
  3270  009F1C  20                 	db	32
  3271  009F1D  20                 	db	32
  3272  009F1E  20                 	db	32
  3273  009F1F  20                 	db	32
  3274  009F20  20                 	db	32
  3275  009F21  20                 	db	32
  3276  009F22  20                 	db	32
  3277  009F23  20                 	db	32
  3278  009F24  00                 	db	0
  3279  009F25  20                 	db	32
  3280  009F26  20                 	db	32
  3281  009F27  43                 	db	67
  3282  009F28  61                 	db	97
  3283  009F29  6E                 	db	110
  3284  009F2A  63                 	db	99
  3285  009F2B  65                 	db	101
  3286  009F2C  6C                 	db	108
  3287  009F2D  20                 	db	32
  3288  009F2E                     __end_of_dc_arc1:
  3289                           	opt stack 0
  3290  009F2E                     _dc_divide2:
  3291                           	opt stack 0
  3292  009F2E  44                 	db	68
  3293  009F2F  69                 	db	105
  3294  009F30  76                 	db	118
  3295  009F31  69                 	db	105
  3296  009F32  64                 	db	100
  3297  009F33  65                 	db	101
  3298  009F34  3A                 	db	58
  3299  009F35  20                 	db	32
  3300  009F36  20                 	db	32
  3301  009F37  20                 	db	32
  3302  009F38  20                 	db	32
  3303  009F39  20                 	db	32
  3304  009F3A  20                 	db	32
  3305  009F3B  20                 	db	32
  3306  009F3C  20                 	db	32
  3307  009F3D  20                 	db	32
  3308  009F3E  20                 	db	32
  3309  009F3F  20                 	db	32
  3310  009F40  20                 	db	32
  3311  009F41  20                 	db	32
  3312  009F42  50                 	db	80
  3313  009F43  6F                 	db	111
  3314  009F44  73                 	db	115
  3315  009F45  3A                 	db	58
  3316  009F46  20                 	db	32
  3317  009F47  20                 	db	32
  3318  009F48  20                 	db	32
  3319  009F49  20                 	db	32
  3320  009F4A  20                 	db	32
  3321  009F4B  20                 	db	32
  3322  009F4C  20                 	db	32
  3323  009F4D  20                 	db	32
  3324  009F4E  20                 	db	32
  3325  009F4F  20                 	db	32
  3326  009F50  20                 	db	32
  3327  009F51  20                 	db	32
  3328  009F52  20                 	db	32
  3329  009F53  20                 	db	32
  3330  009F54  20                 	db	32
  3331  009F55  20                 	db	32
  3332  009F56  4A                 	db	74
  3333  009F57  75                 	db	117
  3334  009F58  6D                 	db	109
  3335  009F59  70                 	db	112
  3336  009F5A  20                 	db	32
  3337  009F5B  73                 	db	115
  3338  009F5C  69                 	db	105
  3339  009F5D  7A                 	db	122
  3340  009F5E  65                 	db	101
  3341  009F5F  3A                 	db	58
  3342  009F60  20                 	db	32
  3343  009F61  20                 	db	32
  3344  009F62  20                 	db	32
  3345  009F63  20                 	db	32
  3346  009F64  20                 	db	32
  3347  009F65  20                 	db	32
  3348  009F66  20                 	db	32
  3349  009F67  20                 	db	32
  3350  009F68  20                 	db	32
  3351  009F69  20                 	db	32
  3352  009F6A  50                 	db	80
  3353  009F6B  72                 	db	114
  3354  009F6C  65                 	db	101
  3355  009F6D  73                 	db	115
  3356  009F6E  73                 	db	115
  3357  009F6F  54                 	db	84
  3358  009F70  6F                 	db	111
  3359  009F71  4A                 	db	74
  3360  009F72  75                 	db	117
  3361  009F73  6D                 	db	109
  3362  009F74  70                 	db	112
  3363  009F75  20                 	db	32
  3364  009F76  00                 	db	0
  3365  009F77  20                 	db	32
  3366  009F78  43                 	db	67
  3367  009F79  61                 	db	97
  3368  009F7A  6E                 	db	110
  3369  009F7B  63                 	db	99
  3370  009F7C  65                 	db	101
  3371  009F7D  6C                 	db	108
  3372  009F7E                     __end_of_dc_divide2:
  3373                           	opt stack 0
  3374  009F7E                     _dc_divide1:
  3375                           	opt stack 0
  3376  009F7E  44                 	db	68
  3377  009F7F  69                 	db	105
  3378  009F80  76                 	db	118
  3379  009F81  69                 	db	105
  3380  009F82  64                 	db	100
  3381  009F83  65                 	db	101
  3382  009F84  3A                 	db	58
  3383  009F85  20                 	db	32
  3384  009F86  53                 	db	83
  3385  009F87  65                 	db	101
  3386  009F88  74                 	db	116
  3387  009F89  20                 	db	32
  3388  009F8A  64                 	db	100
  3389  009F8B  69                 	db	105
  3390  009F8C  76                 	db	118
  3391  009F8D  69                 	db	105
  3392  009F8E  73                 	db	115
  3393  009F8F  69                 	db	105
  3394  009F90  6F                 	db	111
  3395  009F91  6E                 	db	110
  3396  009F92  20                 	db	32
  3397  009F93  20                 	db	32
  3398  009F94  20                 	db	32
  3399  009F95  20                 	db	32
  3400  009F96  20                 	db	32
  3401  009F97  20                 	db	32
  3402  009F98  20                 	db	32
  3403  009F99  20                 	db	32
  3404  009F9A  20                 	db	32
  3405  009F9B  20                 	db	32
  3406  009F9C  20                 	db	32
  3407  009F9D  20                 	db	32
  3408  009F9E  20                 	db	32
  3409  009F9F  20                 	db	32
  3410  009FA0  20                 	db	32
  3411  009FA1  20                 	db	32
  3412  009FA2  20                 	db	32
  3413  009FA3  20                 	db	32
  3414  009FA4  20                 	db	32
  3415  009FA5  20                 	db	32
  3416  009FA6  20                 	db	32
  3417  009FA7  20                 	db	32
  3418  009FA8  20                 	db	32
  3419  009FA9  2F                 	db	47
  3420  009FAA  73                 	db	115
  3421  009FAB  74                 	db	116
  3422  009FAC  65                 	db	101
  3423  009FAD  70                 	db	112
  3424  009FAE  20                 	db	32
  3425  009FAF  20                 	db	32
  3426  009FB0  00                 	db	0
  3427  009FB1  20                 	db	32
  3428  009FB2  20                 	db	32
  3429  009FB3  43                 	db	67
  3430  009FB4  6F                 	db	111
  3431  009FB5  6E                 	db	110
  3432  009FB6  66                 	db	102
  3433  009FB7  69                 	db	105
  3434  009FB8  72                 	db	114
  3435  009FB9  6D                 	db	109
  3436  009FBA  31                 	db	49
  3437  009FBB  32                 	db	50
  3438  009FBC  33                 	db	51
  3439  009FBD  34                 	db	52
  3440  009FBE  20                 	db	32
  3441  009FBF  20                 	db	32
  3442  009FC0  20                 	db	32
  3443  009FC1  20                 	db	32
  3444  009FC2  20                 	db	32
  3445  009FC3  20                 	db	32
  3446  009FC4  00                 	db	0
  3447  009FC5  20                 	db	32
  3448  009FC6  20                 	db	32
  3449  009FC7  43                 	db	67
  3450  009FC8  61                 	db	97
  3451  009FC9  6E                 	db	110
  3452  009FCA  63                 	db	99
  3453  009FCB  65                 	db	101
  3454  009FCC  6C                 	db	108
  3455  009FCD  20                 	db	32
  3456  009FCE                     __end_of_dc_divide1:
  3457                           	opt stack 0
  3458  009FCE                     _dc_setup2:
  3459                           	opt stack 0
  3460  009FCE  53                 	db	83
  3461  009FCF  65                 	db	101
  3462  009FD0  74                 	db	116
  3463  009FD1  75                 	db	117
  3464  009FD2  70                 	db	112
  3465  009FD3  3A                 	db	58
  3466  009FD4  20                 	db	32
  3467  009FD5  53                 	db	83
  3468  009FD6  65                 	db	101
  3469  009FD7  74                 	db	116
  3470  009FD8  20                 	db	32
  3471  009FD9  64                 	db	100
  3472  009FDA  69                 	db	105
  3473  009FDB  72                 	db	114
  3474  009FDC  65                 	db	101
  3475  009FDD  63                 	db	99
  3476  009FDE  74                 	db	116
  3477  009FDF  69                 	db	105
  3478  009FE0  6F                 	db	111
  3479  009FE1  6E                 	db	110
  3480  009FE2  20                 	db	32
  3481  009FE3  20                 	db	32
  3482  009FE4  20                 	db	32
  3483  009FE5  20                 	db	32
  3484  009FE6  20                 	db	32
  3485  009FE7  20                 	db	32
  3486  009FE8  20                 	db	32
  3487  009FE9  20                 	db	32
  3488  009FEA  20                 	db	32
  3489  009FEB  20                 	db	32
  3490  009FEC  20                 	db	32
  3491  009FED  20                 	db	32
  3492  009FEE  20                 	db	32
  3493  009FEF  20                 	db	32
  3494  009FF0  20                 	db	32
  3495  009FF1  20                 	db	32
  3496  009FF2  20                 	db	32
  3497  009FF3  20                 	db	32
  3498  009FF4  20                 	db	32
  3499  009FF5  20                 	db	32
  3500  009FF6  20                 	db	32
  3501  009FF7  43                 	db	67
  3502  009FF8  6F                 	db	111
  3503  009FF9  75                 	db	117
  3504  009FFA  6E                 	db	110
  3505  009FFB  74                 	db	116
  3506  009FFC  65                 	db	101
  3507  009FFD  72                 	db	114
  3508  009FFE  43                 	db	67
  3509  009FFF  6C                 	db	108
  3510  00A000  6F                 	db	111
  3511  00A001  63                 	db	99
  3512  00A002  6B                 	db	107
  3513  00A003  77                 	db	119
  3514  00A004  69                 	db	105
  3515  00A005  73                 	db	115
  3516  00A006  65                 	db	101
  3517  00A007  20                 	db	32
  3518  00A008  20                 	db	32
  3519  00A009  20                 	db	32
  3520  00A00A  20                 	db	32
  3521  00A00B  43                 	db	67
  3522  00A00C  6C                 	db	108
  3523  00A00D  6F                 	db	111
  3524  00A00E  63                 	db	99
  3525  00A00F  6B                 	db	107
  3526  00A010  77                 	db	119
  3527  00A011  69                 	db	105
  3528  00A012  73                 	db	115
  3529  00A013  65                 	db	101
  3530  00A014  20                 	db	32
  3531  00A015  20                 	db	32
  3532  00A016  20                 	db	32
  3533  00A017  20                 	db	32
  3534  00A018  20                 	db	32
  3535  00A019  20                 	db	32
  3536  00A01A  20                 	db	32
  3537  00A01B  20                 	db	32
  3538  00A01C  20                 	db	32
  3539  00A01D  20                 	db	32
  3540  00A01E                     __end_of_dc_setup2:
  3541                           	opt stack 0
  3542  00A01E                     _dc_setup1:
  3543                           	opt stack 0
  3544  00A01E  53                 	db	83
  3545  00A01F  65                 	db	101
  3546  00A020  74                 	db	116
  3547  00A021  75                 	db	117
  3548  00A022  70                 	db	112
  3549  00A023  3A                 	db	58
  3550  00A024  20                 	db	32
  3551  00A025  53                 	db	83
  3552  00A026  65                 	db	101
  3553  00A027  74                 	db	116
  3554  00A028  20                 	db	32
  3555  00A029  7A                 	db	122
  3556  00A02A  65                 	db	101
  3557  00A02B  72                 	db	114
  3558  00A02C  6F                 	db	111
  3559  00A02D  20                 	db	32
  3560  00A02E  70                 	db	112
  3561  00A02F  6F                 	db	111
  3562  00A030  73                 	db	115
  3563  00A031  2E                 	db	46
  3564  00A032  20                 	db	32
  3565  00A033  20                 	db	32
  3566  00A034  20                 	db	32
  3567  00A035  20                 	db	32
  3568  00A036  20                 	db	32
  3569  00A037  20                 	db	32
  3570  00A038  20                 	db	32
  3571  00A039  20                 	db	32
  3572  00A03A  20                 	db	32
  3573  00A03B  20                 	db	32
  3574  00A03C  20                 	db	32
  3575  00A03D  20                 	db	32
  3576  00A03E  20                 	db	32
  3577  00A03F  20                 	db	32
  3578  00A040  20                 	db	32
  3579  00A041  20                 	db	32
  3580  00A042  20                 	db	32
  3581  00A043  20                 	db	32
  3582  00A044  20                 	db	32
  3583  00A045  20                 	db	32
  3584  00A046  53                 	db	83
  3585  00A047  74                 	db	116
  3586  00A048  65                 	db	101
  3587  00A049  70                 	db	112
  3588  00A04A  20                 	db	32
  3589  00A04B  73                 	db	115
  3590  00A04C  69                 	db	105
  3591  00A04D  7A                 	db	122
  3592  00A04E  65                 	db	101
  3593  00A04F  20                 	db	32
  3594  00A050  00                 	db	0
  3595  00A051  20                 	db	32
  3596  00A052  20                 	db	32
  3597  00A053  43                 	db	67
  3598  00A054  6F                 	db	111
  3599  00A055  6E                 	db	110
  3600  00A056  66                 	db	102
  3601  00A057  69                 	db	105
  3602  00A058  72                 	db	114
  3603  00A059  6D                 	db	109
  3604  00A05A  20                 	db	32
  3605  00A05B  78                 	db	120
  3606  00A05C  2E                 	db	46
  3607  00A05D  78                 	db	120
  3608  00A05E  78                 	db	120
  3609  00A05F  01                 	db	1
  3610  00A060  20                 	db	32
  3611  00A061  20                 	db	32
  3612  00A062  20                 	db	32
  3613  00A063  20                 	db	32
  3614  00A064  00                 	db	0
  3615  00A065  20                 	db	32
  3616  00A066  20                 	db	32
  3617  00A067  43                 	db	67
  3618  00A068  61                 	db	97
  3619  00A069  6E                 	db	110
  3620  00A06A  63                 	db	99
  3621  00A06B  65                 	db	101
  3622  00A06C  6C                 	db	108
  3623  00A06D  20                 	db	32
  3624  00A06E                     __end_of_dc_setup1:
  3625                           	opt stack 0
  3626  00A06E                     _dc_main:
  3627                           	opt stack 0
  3628  00A06E  4D                 	db	77
  3629  00A06F  61                 	db	97
  3630  00A070  69                 	db	105
  3631  00A071  6E                 	db	110
  3632  00A072  20                 	db	32
  3633  00A073  4D                 	db	77
  3634  00A074  65                 	db	101
  3635  00A075  6E                 	db	110
  3636  00A076  75                 	db	117
  3637  00A077  3A                 	db	58
  3638  00A078  20                 	db	32
  3639  00A079  20                 	db	32
  3640  00A07A  20                 	db	32
  3641  00A07B  20                 	db	32
  3642  00A07C  20                 	db	32
  3643  00A07D  20                 	db	32
  3644  00A07E  20                 	db	32
  3645  00A07F  20                 	db	32
  3646  00A080  20                 	db	32
  3647  00A081  20                 	db	32
  3648  00A082  20                 	db	32
  3649  00A083  53                 	db	83
  3650  00A084  65                 	db	101
  3651  00A085  74                 	db	116
  3652  00A086  75                 	db	117
  3653  00A087  70                 	db	112
  3654  00A088  20                 	db	32
  3655  00A089  20                 	db	32
  3656  00A08A  20                 	db	32
  3657  00A08B  20                 	db	32
  3658  00A08C  44                 	db	68
  3659  00A08D  69                 	db	105
  3660  00A08E  76                 	db	118
  3661  00A08F  69                 	db	105
  3662  00A090  64                 	db	100
  3663  00A091  65                 	db	101
  3664  00A092  20                 	db	32
  3665  00A093  20                 	db	32
  3666  00A094  20                 	db	32
  3667  00A095  20                 	db	32
  3668  00A096  20                 	db	32
  3669  00A097  41                 	db	65
  3670  00A098  72                 	db	114
  3671  00A099  63                 	db	99
  3672  00A09A  20                 	db	32
  3673  00A09B  20                 	db	32
  3674  00A09C  20                 	db	32
  3675  00A09D  20                 	db	32
  3676  00A09E  20                 	db	32
  3677  00A09F  20                 	db	32
  3678  00A0A0  4D                 	db	77
  3679  00A0A1  61                 	db	97
  3680  00A0A2  6E                 	db	110
  3681  00A0A3  75                 	db	117
  3682  00A0A4  61                 	db	97
  3683  00A0A5  6C                 	db	108
  3684  00A0A6  20                 	db	32
  3685  00A0A7  20                 	db	32
  3686  00A0A8  20                 	db	32
  3687  00A0A9  20                 	db	32
  3688  00A0AA  20                 	db	32
  3689  00A0AB  47                 	db	71
  3690  00A0AC  6F                 	db	111
  3691  00A0AD  32                 	db	50
  3692  00A0AE  5A                 	db	90
  3693  00A0AF  65                 	db	101
  3694  00A0B0  72                 	db	114
  3695  00A0B1  6F                 	db	111
  3696  00A0B2  20                 	db	32
  3697  00A0B3  20                 	db	32
  3698  00A0B4  20                 	db	32
  3699  00A0B5  20                 	db	32
  3700  00A0B6  20                 	db	32
  3701  00A0B7  20                 	db	32
  3702  00A0B8  20                 	db	32
  3703  00A0B9  20                 	db	32
  3704  00A0BA  20                 	db	32
  3705  00A0BB  20                 	db	32
  3706  00A0BC  20                 	db	32
  3707  00A0BD  20                 	db	32
  3708  00A0BE                     __end_of_dc_main:
  3709                           	opt stack 0
  3710  00A0BE                     _configDescriptor1:
  3711                           	opt stack 0
  3712  00A0BE  09                 	db	9
  3713  00A0BF  02                 	db	2
  3714  00A0C0  40                 	db	64
  3715  00A0C1  00                 	db	0
  3716  00A0C2  02                 	db	2
  3717  00A0C3  01                 	db	1
  3718  00A0C4  00                 	db	0
  3719  00A0C5  C0                 	db	192
  3720  00A0C6  32                 	db	50
  3721  00A0C7  09                 	db	9
  3722  00A0C8  04                 	db	4
  3723  00A0C9  00                 	db	0
  3724  00A0CA  00                 	db	0
  3725  00A0CB  02                 	db	2
  3726  00A0CC  03                 	db	3
  3727  00A0CD  00                 	db	0
  3728  00A0CE  00                 	db	0
  3729  00A0CF  00                 	db	0
  3730  00A0D0  09                 	db	9
  3731  00A0D1  21                 	db	33
  3732  00A0D2  11                 	db	17
  3733  00A0D3  01                 	db	1
  3734  00A0D4  00                 	db	0
  3735  00A0D5  01                 	db	1
  3736  00A0D6  22                 	db	34
  3737  00A0D7  1D                 	db	29
  3738  00A0D8  00                 	db	0
  3739  00A0D9  07                 	db	7
  3740  00A0DA  05                 	db	5
  3741  00A0DB  81                 	db	129
  3742  00A0DC  03                 	db	3
  3743  00A0DD  40                 	db	64
  3744  00A0DE  00                 	db	0
  3745  00A0DF  01                 	db	1
  3746  00A0E0  07                 	db	7
  3747  00A0E1  05                 	db	5
  3748  00A0E2  01                 	db	1
  3749  00A0E3  03                 	db	3
  3750  00A0E4  40                 	db	64
  3751  00A0E5  00                 	db	0
  3752  00A0E6  01                 	db	1
  3753  00A0E7  09                 	db	9
  3754  00A0E8  04                 	db	4
  3755  00A0E9  01                 	db	1
  3756  00A0EA  00                 	db	0
  3757  00A0EB  02                 	db	2
  3758  00A0EC  08                 	db	8
  3759  00A0ED  06                 	db	6
  3760  00A0EE  50                 	db	80
  3761  00A0EF  00                 	db	0
  3762  00A0F0  07                 	db	7
  3763  00A0F1  05                 	db	5
  3764  00A0F2  82                 	db	130
  3765  00A0F3  02                 	db	2
  3766  00A0F4  40                 	db	64
  3767  00A0F5  00                 	db	0
  3768  00A0F6  01                 	db	1
  3769  00A0F7  07                 	db	7
  3770  00A0F8  05                 	db	5
  3771  00A0F9  02                 	db	2
  3772  00A0FA  02                 	db	2
  3773  00A0FB  40                 	db	64
  3774  00A0FC  00                 	db	0
  3775  00A0FD  01                 	db	1
  3776  00A0FE                     __end_of_configDescriptor1:
  3777                           	opt stack 0
  3778  00A0FE                     _sd001:
  3779                           	opt stack 0
  3780  00A0FE  34                 	db	52
  3781  00A0FF  03                 	db	3
  3782  00A100  0053               	dw	83
  3783  00A102  006F               	dw	111
  3784  00A104  006C               	dw	108
  3785  00A106  0064               	dw	100
  3786  00A108  0065               	dw	101
  3787  00A10A  0072               	dw	114
  3788  00A10C  006E               	dw	110
  3789  00A10E  0065               	dw	101
  3790  00A110  0072               	dw	114
  3791  00A112  0064               	dw	100
  3792  00A114  002E               	dw	46
  3793  00A116  0063               	dw	99
  3794  00A118  006F               	dw	111
  3795  00A11A  006D               	dw	109
  3796  00A11C  0020               	dw	32
  3797  00A11E  0020               	dw	32
  3798  00A120  0020               	dw	32
  3799  00A122  0020               	dw	32
  3800  00A124  0020               	dw	32
  3801  00A126  0020               	dw	32
  3802  00A128  0020               	dw	32
  3803  00A12A  0020               	dw	32
  3804  00A12C  0020               	dw	32
  3805  00A12E  0020               	dw	32
  3806  00A130  0020               	dw	32
  3807  00A132                     __end_of_sd001:
  3808                           	opt stack 0
  3809  00A132                     _sd002:
  3810                           	opt stack 0
  3811  00A132  2E                 	db	46
  3812  00A133  03                 	db	3
  3813  00A134  0053               	dw	83
  3814  00A136  0074               	dw	116
  3815  00A138  0065               	dw	101
  3816  00A13A  0070               	dw	112
  3817  00A13C  0070               	dw	112
  3818  00A13E  0065               	dw	101
  3819  00A140  0072               	dw	114
  3820  00A142  004D               	dw	77
  3821  00A144  006F               	dw	111
  3822  00A146  0074               	dw	116
  3823  00A148  006F               	dw	111
  3824  00A14A  0072               	dw	114
  3825  00A14C  0043               	dw	67
  3826  00A14E  006F               	dw	111
  3827  00A150  006E               	dw	110
  3828  00A152  0074               	dw	116
  3829  00A154  0072               	dw	114
  3830  00A156  006F               	dw	111
  3831  00A158  006C               	dw	108
  3832  00A15A  006C               	dw	108
  3833  00A15C  0065               	dw	101
  3834  00A15E  0072               	dw	114
  3835  00A160                     __end_of_sd002:
  3836                           	opt stack 0
  3837  00A160                     _inq_resp:
  3838                           	opt stack 0
  3839  00A160  00                 	db	0
  3840  00A161  80                 	db	128
  3841  00A162  04                 	db	4
  3842  00A163  02                 	db	2
  3843  00A164  20                 	db	32
  3844  00A165  00                 	db	0
  3845  00A166  00                 	db	0
  3846  00A167  00                 	db	0
  3847  00A168  4D                 	db	77
  3848  00A169  69                 	db	105
  3849  00A16A  63                 	db	99
  3850  00A16B  72                 	db	114
  3851  00A16C  6F                 	db	111
  3852  00A16D  63                 	db	99
  3853  00A16E  68                 	db	104
  3854  00A16F  70                 	db	112
  3855  00A170  4D                 	db	77
  3856  00A171  61                 	db	97
  3857  00A172  73                 	db	115
  3858  00A173  73                 	db	115
  3859  00A174  20                 	db	32
  3860  00A175  53                 	db	83
  3861  00A176  74                 	db	116
  3862  00A177  6F                 	db	111
  3863  00A178  72                 	db	114
  3864  00A179  61                 	db	97
  3865  00A17A  67                 	db	103
  3866  00A17B  65                 	db	101
  3867  00A17C  20                 	db	32
  3868  00A17D  20                 	db	32
  3869  00A17E  20                 	db	32
  3870  00A17F  20                 	db	32
  3871  00A180  30                 	db	48
  3872  00A181  30                 	db	48
  3873  00A182  30                 	db	48
  3874  00A183  31                 	db	49
  3875  00A184                     __end_of_inq_resp:
  3876                           	opt stack 0
  3877  00A184                     _hid_rpt01:
  3878                           	opt stack 0
  3879  00A184  06                 	db	6
  3880  00A185  00                 	db	0
  3881  00A186  FF                 	db	255
  3882  00A187  09                 	db	9
  3883  00A188  01                 	db	1
  3884  00A189  A1                 	db	161
  3885  00A18A  01                 	db	1
  3886  00A18B  19                 	db	25
  3887  00A18C  01                 	db	1
  3888  00A18D  29                 	db	41
  3889  00A18E  40                 	db	64
  3890  00A18F  15                 	db	21
  3891  00A190  00                 	db	0
  3892  00A191  26                 	db	38
  3893  00A192  FF                 	db	255
  3894  00A193  00                 	db	0
  3895  00A194  75                 	db	117
  3896  00A195  08                 	db	8
  3897  00A196  95                 	db	149
  3898  00A197  40                 	db	64
  3899  00A198  81                 	db	129
  3900  00A199  00                 	db	0
  3901  00A19A  19                 	db	25
  3902  00A19B  01                 	db	1
  3903  00A19C  29                 	db	41
  3904  00A19D  40                 	db	64
  3905  00A19E  91                 	db	145
  3906  00A19F  00                 	db	0
  3907  00A1A0  C0                 	db	192
  3908  00A1A1                     __end_of_hid_rpt01:
  3909                           	opt stack 0
  3910  00A1A1                     _sd003:
  3911                           	opt stack 0
  3912  00A1A1  1A                 	db	26
  3913  00A1A2  03                 	db	3
  3914  00A1A3  0031               	dw	49
  3915  00A1A5  0032               	dw	50
  3916  00A1A7  0033               	dw	51
  3917  00A1A9  0034               	dw	52
  3918  00A1AB  0035               	dw	53
  3919  00A1AD  0036               	dw	54
  3920  00A1AF  0037               	dw	55
  3921  00A1B1  0038               	dw	56
  3922  00A1B3  0039               	dw	57
  3923  00A1B5  0030               	dw	48
  3924  00A1B7  0039               	dw	57
  3925  00A1B9  0039               	dw	57
  3926  00A1BB                     __end_of_sd003:
  3927                           	opt stack 0
  3928  00A1BB                     _overshoot_cost_in_steps_string:
  3929                           	opt stack 0
  3930  00A1BB  4F                 	db	79
  3931  00A1BC  56                 	db	86
  3932  00A1BD  45                 	db	69
  3933  00A1BE  52                 	db	82
  3934  00A1BF  53                 	db	83
  3935  00A1C0  48                 	db	72
  3936  00A1C1  4F                 	db	79
  3937  00A1C2  4F                 	db	79
  3938  00A1C3  54                 	db	84
  3939  00A1C4  5F                 	db	95
  3940  00A1C5  43                 	db	67
  3941  00A1C6  4F                 	db	79
  3942  00A1C7  53                 	db	83
  3943  00A1C8  54                 	db	84
  3944  00A1C9  5F                 	db	95
  3945  00A1CA  49                 	db	73
  3946  00A1CB  4E                 	db	78
  3947  00A1CC  5F                 	db	95
  3948  00A1CD  53                 	db	83
  3949  00A1CE  54                 	db	84
  3950  00A1CF  45                 	db	69
  3951  00A1D0  50                 	db	80
  3952  00A1D1  53                 	db	83
  3953  00A1D2  00                 	db	0
  3954  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3955                           	opt stack 0
  3956  00A1D3                     _maximum_speed_manual_string:
  3957                           	opt stack 0
  3958  00A1D3  4D                 	db	77
  3959  00A1D4  41                 	db	65
  3960  00A1D5  58                 	db	88
  3961  00A1D6  49                 	db	73
  3962  00A1D7  4D                 	db	77
  3963  00A1D8  55                 	db	85
  3964  00A1D9  4D                 	db	77
  3965  00A1DA  5F                 	db	95
  3966  00A1DB  53                 	db	83
  3967  00A1DC  50                 	db	80
  3968  00A1DD  45                 	db	69
  3969  00A1DE  45                 	db	69
  3970  00A1DF  44                 	db	68
  3971  00A1E0  5F                 	db	95
  3972  00A1E1  4D                 	db	77
  3973  00A1E2  41                 	db	65
  3974  00A1E3  4E                 	db	78
  3975  00A1E4  55                 	db	85
  3976  00A1E5  41                 	db	65
  3977  00A1E6  4C                 	db	76
  3978  00A1E7  00                 	db	0
  3979  00A1E8                     __end_of_maximum_speed_manual_string:
  3980                           	opt stack 0
  3981  00A1E8                     _initial_speed_manual_string:
  3982                           	opt stack 0
  3983  00A1E8  49                 	db	73
  3984  00A1E9  4E                 	db	78
  3985  00A1EA  49                 	db	73
  3986  00A1EB  54                 	db	84
  3987  00A1EC  49                 	db	73
  3988  00A1ED  41                 	db	65
  3989  00A1EE  4C                 	db	76
  3990  00A1EF  5F                 	db	95
  3991  00A1F0  53                 	db	83
  3992  00A1F1  50                 	db	80
  3993  00A1F2  45                 	db	69
  3994  00A1F3  45                 	db	69
  3995  00A1F4  44                 	db	68
  3996  00A1F5  5F                 	db	95
  3997  00A1F6  4D                 	db	77
  3998  00A1F7  41                 	db	65
  3999  00A1F8  4E                 	db	78
  4000  00A1F9  55                 	db	85
  4001  00A1FA  41                 	db	65
  4002  00A1FB  4C                 	db	76
  4003  00A1FC  00                 	db	0
  4004  00A1FD                     __end_of_initial_speed_manual_string:
  4005                           	opt stack 0
  4006  00A1FD                     _full_circle_in_steps_string:
  4007                           	opt stack 0
  4008  00A1FD  46                 	db	70
  4009  00A1FE  55                 	db	85
  4010  00A1FF  4C                 	db	76
  4011  00A200  4C                 	db	76
  4012  00A201  5F                 	db	95
  4013  00A202  43                 	db	67
  4014  00A203  49                 	db	73
  4015  00A204  52                 	db	82
  4016  00A205  43                 	db	67
  4017  00A206  4C                 	db	76
  4018  00A207  45                 	db	69
  4019  00A208  5F                 	db	95
  4020  00A209  49                 	db	73
  4021  00A20A  4E                 	db	78
  4022  00A20B  5F                 	db	95
  4023  00A20C  53                 	db	83
  4024  00A20D  54                 	db	84
  4025  00A20E  45                 	db	69
  4026  00A20F  50                 	db	80
  4027  00A210  53                 	db	83
  4028  00A211  00                 	db	0
  4029  00A212                     __end_of_full_circle_in_steps_string:
  4030                           	opt stack 0
  4031  00A212                     _overshoot_in_steps_string:
  4032                           	opt stack 0
  4033  00A212  4F                 	db	79
  4034  00A213  56                 	db	86
  4035  00A214  45                 	db	69
  4036  00A215  52                 	db	82
  4037  00A216  53                 	db	83
  4038  00A217  48                 	db	72
  4039  00A218  4F                 	db	79
  4040  00A219  4F                 	db	79
  4041  00A21A  54                 	db	84
  4042  00A21B  5F                 	db	95
  4043  00A21C  49                 	db	73
  4044  00A21D  4E                 	db	78
  4045  00A21E  5F                 	db	95
  4046  00A21F  53                 	db	83
  4047  00A220  54                 	db	84
  4048  00A221  45                 	db	69
  4049  00A222  50                 	db	80
  4050  00A223  53                 	db	83
  4051  00A224  00                 	db	0
  4052  00A225                     __end_of_overshoot_in_steps_string:
  4053                           	opt stack 0
  4054  00A225                     _maximum_speed_arc_string:
  4055                           	opt stack 0
  4056  00A225  4D                 	db	77
  4057  00A226  41                 	db	65
  4058  00A227  58                 	db	88
  4059  00A228  49                 	db	73
  4060  00A229  4D                 	db	77
  4061  00A22A  55                 	db	85
  4062  00A22B  4D                 	db	77
  4063  00A22C  5F                 	db	95
  4064  00A22D  53                 	db	83
  4065  00A22E  50                 	db	80
  4066  00A22F  45                 	db	69
  4067  00A230  45                 	db	69
  4068  00A231  44                 	db	68
  4069  00A232  5F                 	db	95
  4070  00A233  41                 	db	65
  4071  00A234  52                 	db	82
  4072  00A235  43                 	db	67
  4073  00A236  00                 	db	0
  4074  00A237                     __end_of_maximum_speed_arc_string:
  4075                           	opt stack 0
  4076  00A237                     _initial_speed_arc_string:
  4077                           	opt stack 0
  4078  00A237  49                 	db	73
  4079  00A238  4E                 	db	78
  4080  00A239  49                 	db	73
  4081  00A23A  54                 	db	84
  4082  00A23B  49                 	db	73
  4083  00A23C  41                 	db	65
  4084  00A23D  4C                 	db	76
  4085  00A23E  5F                 	db	95
  4086  00A23F  53                 	db	83
  4087  00A240  50                 	db	80
  4088  00A241  45                 	db	69
  4089  00A242  45                 	db	69
  4090  00A243  44                 	db	68
  4091  00A244  5F                 	db	95
  4092  00A245  41                 	db	65
  4093  00A246  52                 	db	82
  4094  00A247  43                 	db	67
  4095  00A248  00                 	db	0
  4096  00A249                     __end_of_initial_speed_arc_string:
  4097                           	opt stack 0
  4098  00A249                     _inverse_direction_string:
  4099                           	opt stack 0
  4100  00A249  49                 	db	73
  4101  00A24A  4E                 	db	78
  4102  00A24B  56                 	db	86
  4103  00A24C  45                 	db	69
  4104  00A24D  52                 	db	82
  4105  00A24E  53                 	db	83
  4106  00A24F  45                 	db	69
  4107  00A250  5F                 	db	95
  4108  00A251  44                 	db	68
  4109  00A252  49                 	db	73
  4110  00A253  52                 	db	82
  4111  00A254  45                 	db	69
  4112  00A255  43                 	db	67
  4113  00A256  54                 	db	84
  4114  00A257  49                 	db	73
  4115  00A258  4F                 	db	79
  4116  00A259  4E                 	db	78
  4117  00A25A  00                 	db	0
  4118  00A25B                     __end_of_inverse_direction_string:
  4119                           	opt stack 0
  4120  00A25B                     _device_dsc:
  4121                           	opt stack 0
  4122  00A25B  12                 	db	18
  4123  00A25C  01                 	db	1
  4124  00A25D  0200               	dw	512
  4125  00A25F  00                 	db	0
  4126  00A260  00                 	db	0
  4127  00A261  00                 	db	0
  4128  00A262  08                 	db	8
  4129  00A263  04D8               	dw	1240
  4130  00A265  EDCF               	dw	60879
  4131  00A267  0100               	dw	256
  4132  00A269  01                 	db	1
  4133  00A26A  02                 	db	2
  4134  00A26B  00                 	db	0
  4135  00A26C  01                 	db	1
  4136  00A26D                     __end_of_device_dsc:
  4137                           	opt stack 0
  4138  00A26D                     _use_ccw_limit_string:
  4139                           	opt stack 0
  4140  00A26D  55                 	db	85
  4141  00A26E  53                 	db	83
  4142  00A26F  45                 	db	69
  4143  00A270  5F                 	db	95
  4144  00A271  43                 	db	67
  4145  00A272  43                 	db	67
  4146  00A273  57                 	db	87
  4147  00A274  5F                 	db	95
  4148  00A275  4C                 	db	76
  4149  00A276  49                 	db	73
  4150  00A277  4D                 	db	77
  4151  00A278  49                 	db	73
  4152  00A279  54                 	db	84
  4153  00A27A  00                 	db	0
  4154  00A27B                     __end_of_use_ccw_limit_string:
  4155                           	opt stack 0
  4156  00A27B                     _beep_duration_string:
  4157                           	opt stack 0
  4158  00A27B  42                 	db	66
  4159  00A27C  45                 	db	69
  4160  00A27D  45                 	db	69
  4161  00A27E  50                 	db	80
  4162  00A27F  5F                 	db	95
  4163  00A280  44                 	db	68
  4164  00A281  55                 	db	85
  4165  00A282  52                 	db	82
  4166  00A283  41                 	db	65
  4167  00A284  54                 	db	84
  4168  00A285  49                 	db	73
  4169  00A286  4F                 	db	79
  4170  00A287  4E                 	db	78
  4171  00A288  00                 	db	0
  4172  00A289                     __end_of_beep_duration_string:
  4173                           	opt stack 0
  4174  00A289                     _maximum_speed_string:
  4175                           	opt stack 0
  4176  00A289  4D                 	db	77
  4177  00A28A  41                 	db	65
  4178  00A28B  58                 	db	88
  4179  00A28C  49                 	db	73
  4180  00A28D  4D                 	db	77
  4181  00A28E  55                 	db	85
  4182  00A28F  4D                 	db	77
  4183  00A290  5F                 	db	95
  4184  00A291  53                 	db	83
  4185  00A292  50                 	db	80
  4186  00A293  45                 	db	69
  4187  00A294  45                 	db	69
  4188  00A295  44                 	db	68
  4189  00A296  00                 	db	0
  4190  00A297                     __end_of_maximum_speed_string:
  4191                           	opt stack 0
  4192  00A297                     _minimum_speed_string:
  4193                           	opt stack 0
  4194  00A297  4D                 	db	77
  4195  00A298  49                 	db	73
  4196  00A299  4E                 	db	78
  4197  00A29A  49                 	db	73
  4198  00A29B  4D                 	db	77
  4199  00A29C  55                 	db	85
  4200  00A29D  4D                 	db	77
  4201  00A29E  5F                 	db	95
  4202  00A29F  53                 	db	83
  4203  00A2A0  50                 	db	80
  4204  00A2A1  45                 	db	69
  4205  00A2A2  45                 	db	69
  4206  00A2A3  44                 	db	68
  4207  00A2A4  00                 	db	0
  4208  00A2A5                     __end_of_minimum_speed_string:
  4209                           	opt stack 0
  4210  00A2A5                     _use_cw_limit_string:
  4211                           	opt stack 0
  4212  00A2A5  55                 	db	85
  4213  00A2A6  53                 	db	83
  4214  00A2A7  45                 	db	69
  4215  00A2A8  5F                 	db	95
  4216  00A2A9  43                 	db	67
  4217  00A2AA  57                 	db	87
  4218  00A2AB  5F                 	db	95
  4219  00A2AC  4C                 	db	76
  4220  00A2AD  49                 	db	73
  4221  00A2AE  4D                 	db	77
  4222  00A2AF  49                 	db	73
  4223  00A2B0  54                 	db	84
  4224  00A2B1  00                 	db	0
  4225  00A2B2                     __end_of_use_cw_limit_string:
  4226                           	opt stack 0
  4227  00A2B2                     _ccw_limit_string:
  4228                           	opt stack 0
  4229  00A2B2  43                 	db	67
  4230  00A2B3  43                 	db	67
  4231  00A2B4  57                 	db	87
  4232  00A2B5  5F                 	db	95
  4233  00A2B6  4C                 	db	76
  4234  00A2B7  49                 	db	73
  4235  00A2B8  4D                 	db	77
  4236  00A2B9  49                 	db	73
  4237  00A2BA  54                 	db	84
  4238  00A2BB  00                 	db	0
  4239  00A2BC                     __end_of_ccw_limit_string:
  4240                           	opt stack 0
  4241  00A2BC                     _cw_limit_string:
  4242                           	opt stack 0
  4243  00A2BC  43                 	db	67
  4244  00A2BD  57                 	db	87
  4245  00A2BE  5F                 	db	95
  4246  00A2BF  4C                 	db	76
  4247  00A2C0  49                 	db	73
  4248  00A2C1  4D                 	db	77
  4249  00A2C2  49                 	db	73
  4250  00A2C3  54                 	db	84
  4251  00A2C4  00                 	db	0
  4252  00A2C5                     __end_of_cw_limit_string:
  4253                           	opt stack 0
  4254  00A2C5                     _bit_pattern_ae:
  4255                           	opt stack 0
  4256  00A2C5  0A                 	db	10
  4257  00A2C6  00                 	db	0
  4258  00A2C7  0E                 	db	14
  4259  00A2C8  01                 	db	1
  4260  00A2C9  0F                 	db	15
  4261  00A2CA  11                 	db	17
  4262  00A2CB  0F                 	db	15
  4263  00A2CC  00                 	db	0
  4264  00A2CD                     __end_of_bit_pattern_ae:
  4265                           	opt stack 0
  4266  00A2CD                     _bit_pattern_degree:
  4267                           	opt stack 0
  4268  00A2CD  18                 	db	24
  4269  00A2CE  18                 	db	24
  4270  00A2CF  00                 	db	0
  4271  00A2D0  00                 	db	0
  4272  00A2D1  00                 	db	0
  4273  00A2D2  00                 	db	0
  4274  00A2D3  00                 	db	0
  4275  00A2D4  00                 	db	0
  4276  00A2D5                     __end_of_bit_pattern_degree:
  4277                           	opt stack 0
  4278  00A2D5                     _bit_pattern_verticalbar:
  4279                           	opt stack 0
  4280  00A2D5  04                 	db	4
  4281  00A2D6  04                 	db	4
  4282  00A2D7  04                 	db	4
  4283  00A2D8  04                 	db	4
  4284  00A2D9  04                 	db	4
  4285  00A2DA  04                 	db	4
  4286  00A2DB  04                 	db	4
  4287  00A2DC  04                 	db	4
  4288  00A2DD                     __end_of_bit_pattern_verticalbar:
  4289                           	opt stack 0
  4290  00A2DD                     _flash_command_pagesize_528:
  4291                           	opt stack 0
  4292  00A2DD  3D                 	db	61
  4293  00A2DE  2A                 	db	42
  4294  00A2DF  80                 	db	128
  4295  00A2E0  A7                 	db	167
  4296  00A2E1                     __end_of_flash_command_pagesize_528:
  4297                           	opt stack 0
  4298  00A2E1                     _flash_command_pagesize_512:
  4299                           	opt stack 0
  4300  00A2E1  3D                 	db	61
  4301  00A2E2  2A                 	db	42
  4302  00A2E3  80                 	db	128
  4303  00A2E4  A6                 	db	166
  4304  00A2E5                     __end_of_flash_command_pagesize_512:
  4305                           	opt stack 0
  4306  00A2E5                     _sd000:
  4307                           	opt stack 0
  4308  00A2E5  04                 	db	4
  4309  00A2E6  03                 	db	3
  4310  00A2E7  0409               	dw	1033
  4311  00A2E9                     __end_of_sd000:
  4312                           	opt stack 0
  4313  0000                     _RPINR22	set	3837
  4314  0000                     _RPOR23	set	3799
  4315  0000                     _RPOR21	set	3797
  4316  0000                     _RPINR21	set	3836
  4317  0000                     _RPOR4	set	3780
  4318  0000                     _PPSCONbits	set	3775
  4319  0000                     _CCPTMRS0bits	set	3922
  4320  0000                     _ANCON0bits	set	3912
  4321  0000                     _ANCON1bits	set	3913
  4322  0000                     _UEP0bits	set	3878
  4323  0000                     _UIEbits	set	3894
  4324  0000                     _UADDR	set	3896
  4325  0000                     _UIE	set	3894
  4326  0000                     _UEIE	set	3895
  4327  0000                     _UCFG	set	3897
  4328  0000                     _UEP1	set	3879
  4329  0000                     _UEP0	set	3878
  4330  0000                     _ADRESL	set	4035
  4331  0000                     _ADRESH	set	4036
  4332  0000                     _ADCON1bits	set	4033
  4333  0000                     _ADCON0bits	set	4034
  4334  0000                     _PORTA	set	3968
  4335  0000                     _PORTE	set	3972
  4336  0000                     _TMR2	set	4044
  4337  0000                     _PIE1bits	set	3997
  4338  0000                     _CCPR1L	set	4027
  4339  0000                     _PR2	set	4043
  4340  0000                     _T2CONbits	set	4042
  4341  0000                     _CCP1CONbits	set	4026
  4342  0000                     _RXADDRL	set	3945
  4343  0000                     _RXADDRH	set	3944
  4344  0000                     _DMABCL	set	3943
  4345  0000                     _DMABCH	set	3942
  4346  0000                     _TXADDRL	set	3947
  4347  0000                     _TXADDRH	set	3946
  4348  0000                     _DMACON2bits	set	3974
  4349  0000                     _DMACON1bits	set	3976
  4350  0000                     _SSP2CON1bits	set	3954
  4351  0000                     _SSP2STATbits	set	3955
  4352  0000                     _PORTDbits	set	3971
  4353  0000                     _PORTEbits	set	3972
  4354  0000                     _SSP1BUF	set	4041
  4355  0000                     _SSP1CON2bits	set	4037
  4356  0000                     _SSP1CON1bits	set	4038
  4357  0000                     _SSP1ADD	set	4040
  4358  0000                     _SSP1STATbits	set	4039
  4359  0000                     _PORTAbits	set	3968
  4360  0000                     _T0CONbits	set	4053
  4361  0000                     _TRISEbits	set	3990
  4362  0000                     _EECON2	set	4007
  4363  0000                     _LATBbits	set	3978
  4364  0000                     _LATAbits	set	3977
  4365  0000                     _TRISAbits	set	3986
  4366  0000                     _LATCbits	set	3979
  4367  0000                     _TRISCbits	set	3988
  4368  0000                     _TRISBbits	set	3987
  4369  0000                     _LATDbits	set	3980
  4370  0000                     _TRISDbits	set	3989
  4371  0000                     _TMR0L	set	4054
  4372  0000                     _TMR0H	set	4055
  4373  0000                     _PIR1bits	set	3998
  4374  0000                     _OSCCON	set	4051
  4375  0000                     _OSCTUNEbits	set	3995
  4376  0000                     _INTCONbits	set	4082
  4377  0000                     _IPR2bits	set	4002
  4378  0000                     _RCONbits	set	4048
  4379  0000                     _UCON	set	3941
  4380  0000                     _USTAT	set	3940
  4381  0000                     _PIR2bits	set	4001
  4382  0000                     _UIRbits	set	3938
  4383  0000                     _UCONbits	set	3941
  4384  0000                     _UIR	set	3938
  4385  0000                     _UEIR	set	3939
  4386  0000                     _PIE2bits	set	4000
  4387  00A2E9                     STR_18:
  4388                           
  4389                           ; BSR set to: 1
  4390  00A2E9  68                 	db	104	;'h'
  4391  00A2EA  65                 	db	101	;'e'
  4392  00A2EB  6C                 	db	108	;'l'
  4393  00A2EC  6C                 	db	108	;'l'
  4394  00A2ED  6F                 	db	111	;'o'
  4395  00A2EE  20                 	db	32
  4396  00A2EF  77                 	db	119	;'w'
  4397  00A2F0  6F                 	db	111	;'o'
  4398  00A2F1  72                 	db	114	;'r'
  4399  00A2F2  6C                 	db	108	;'l'
  4400  00A2F3  64                 	db	100	;'d'
  4401  00A2F4  21                 	db	33
  4402  00A2F5  00                 	db	0
  4403  00A2F6                     STR_15:
  4404                           
  4405                           ; BSR set to: 1
  4406  00A2F6  53                 	db	83	;'S'
  4407  00A2F7  74                 	db	116	;'t'
  4408  00A2F8  65                 	db	101	;'e'
  4409  00A2F9  70                 	db	112	;'p'
  4410  00A2FA  70                 	db	112	;'p'
  4411  00A2FB  65                 	db	101	;'e'
  4412  00A2FC  72                 	db	114	;'r'
  4413  00A2FD  43                 	db	67	;'C'
  4414  00A2FE  74                 	db	116	;'t'
  4415  00A2FF  72                 	db	114	;'r'
  4416  00A300  6C                 	db	108	;'l'
  4417  00A301  00                 	db	0
  4418  00A302                     STR_16:
  4419                           
  4420                           ; BSR set to: 1
  4421  00A302  46                 	db	70	;'F'
  4422  00A303  49                 	db	73	;'I'
  4423  00A304  4C                 	db	76	;'L'
  4424  00A305  45                 	db	69	;'E'
  4425  00A306  20                 	db	32
  4426  00A307  20                 	db	32
  4427  00A308  20                 	db	32
  4428  00A309  20                 	db	32
  4429  00A30A  00                 	db	0
  4430  00A30B                     STR_7:
  4431                           
  4432                           ; BSR set to: 1
  4433  00A30B  4D                 	db	77	;'M'
  4434  00A30C  53                 	db	83	;'S'
  4435  00A30D  44                 	db	68	;'D'
  4436  00A30E  4F                 	db	79	;'O'
  4437  00A30F  53                 	db	83	;'S'
  4438  00A310  35                 	db	53	;'5'
  4439  00A311  2E                 	db	46
  4440  00A312  30                 	db	48	;'0'
  4441  00A313  00                 	db	0
  4442  00A314                     STR_1:
  4443                           
  4444                           ; BSR set to: 1
  4445  00A314  20                 	db	32
  4446  00A315  20                 	db	32
  4447  00A316  20                 	db	32
  4448  00A317  20                 	db	32
  4449  00A318  20                 	db	32
  4450  00A319  20                 	db	32
  4451  00A31A  20                 	db	32
  4452  00A31B  20                 	db	32
  4453  00A31C  00                 	db	0
  4454  00A31D                     STR_2:
  4455                           
  4456                           ; BSR set to: 1
  4457  00A31D  43                 	db	67	;'C'
  4458  00A31E  61                 	db	97	;'a'
  4459  00A31F  6E                 	db	110	;'n'
  4460  00A320  63                 	db	99	;'c'
  4461  00A321  65                 	db	101	;'e'
  4462  00A322  6C                 	db	108	;'l'
  4463  00A323  00                 	db	0
  4464  00A324                     STR_6:
  4465                           
  4466                           ; BSR set to: 1
  4467  00A324  53                 	db	83	;'S'
  4468  00A325  74                 	db	116	;'t'
  4469  00A326  6F                 	db	111	;'o'
  4470  00A327  70                 	db	112	;'p'
  4471  00A328  20                 	db	32
  4472  00A329  00                 	db	0
  4473  00A32A                     STR_17:
  4474                           
  4475                           ; BSR set to: 1
  4476  00A32A  54                 	db	84	;'T'
  4477  00A32B  58                 	db	88	;'X'
  4478  00A32C  54                 	db	84	;'T'
  4479  00A32D  00                 	db	0
  4480  0000                     
  4481                           ; #config settings
  4482  00A32E  00                 	db	0	; dummy byte at the end
  4483  0000                     
  4484                           	psect	cinit
  4485  013508                     __pcinit:
  4486                           	opt stack 0
  4487  013508                     start_initialization:
  4488                           	opt stack 0
  4489  013508                     __initialization:
  4490                           	opt stack 0
  4491                           
  4492                           ; Initialize objects allocated to BANK4 (80 bytes)
  4493                           ; load TBLPTR registers with __pidataBANK4
  4494  013508  0E48               	movlw	low __pidataBANK4
  4495  01350A  6EF6               	movwf	tblptrl,c
  4496  01350C  0E4A               	movlw	high __pidataBANK4
  4497  01350E  6EF7               	movwf	tblptrh,c
  4498  013510  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4499  013512  6EF8               	movwf	tblptru,c
  4500  013514  EE04  F000         	lfsr	0,__pdataBANK4
  4501  013518  EE10 F050          	lfsr	1,80
  4502  01351C                     copy_data0:
  4503  01351C  0009               	tblrd		*+
  4504  01351E  CFF5 FFEE          	movff	tablat,postinc0
  4505  013522  50E5               	movf	postdec1,w,c
  4506  013524  50E1               	movf	fsr1l,w,c
  4507  013526  E1FA               	bnz	copy_data0
  4508                           
  4509                           ; Initialize objects allocated to BANK2 (77 bytes)
  4510                           ; load TBLPTR registers with __pidataBANK2
  4511  013528  0E88               	movlw	low __pidataBANK2
  4512  01352A  6EF6               	movwf	tblptrl,c
  4513  01352C  0E4B               	movlw	high __pidataBANK2
  4514  01352E  6EF7               	movwf	tblptrh,c
  4515  013530  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4516  013532  6EF8               	movwf	tblptru,c
  4517  013534  EE02  F089         	lfsr	0,__pdataBANK2
  4518  013538  EE10 F04D          	lfsr	1,77
  4519  01353C                     copy_data1:
  4520  01353C  0009               	tblrd		*+
  4521  01353E  CFF5 FFEE          	movff	tablat,postinc0
  4522  013542  50E5               	movf	postdec1,w,c
  4523  013544  50E1               	movf	fsr1l,w,c
  4524  013546  E1FA               	bnz	copy_data1
  4525                           
  4526                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4527  013548  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4528  01354C  EE14 F000          	lfsr	1,1024
  4529  013550                     clear_0:
  4530  013550  6AEE               	clrf	postinc0,c
  4531  013552  50E5               	movf	postdec1,w,c
  4532  013554  50E1               	movf	fsr1l,w,c
  4533  013556  E1FC               	bnz	clear_0
  4534  013558  50E2               	movf	fsr1h,w,c
  4535  01355A  E1FA               	bnz	clear_0
  4536                           
  4537                           ; Clear objects allocated to BANK3 (184 bytes)
  4538  01355C  EE03  F000         	lfsr	0,__pbssBANK3
  4539  013560  0EB8               	movlw	184
  4540  013562                     clear_1:
  4541  013562  6AEE               	clrf	postinc0,c
  4542  013564  06E8               	decf	wreg,f,c
  4543  013566  E1FD               	bnz	clear_1
  4544                           
  4545                           ; Clear objects allocated to BANK2 (137 bytes)
  4546  013568  EE02  F000         	lfsr	0,__pbssBANK2
  4547  01356C  0E89               	movlw	137
  4548  01356E                     clear_2:
  4549  01356E  6AEE               	clrf	postinc0,c
  4550  013570  06E8               	decf	wreg,f,c
  4551  013572  E1FD               	bnz	clear_2
  4552                           
  4553                           ; Clear objects allocated to BANK1 (195 bytes)
  4554  013574  EE01  F000         	lfsr	0,__pbssBANK1
  4555  013578  0EC3               	movlw	195
  4556  01357A                     clear_3:
  4557  01357A  6AEE               	clrf	postinc0,c
  4558  01357C  06E8               	decf	wreg,f,c
  4559  01357E  E1FD               	bnz	clear_3
  4560                           
  4561                           ; Clear objects allocated to BANK0 (2 bytes)
  4562  013580  0100               	movlb	0
  4563  013582  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4564  013584  6BFE               	clrf	__pbssBANK0& (0+255),b
  4565                           
  4566                           ; Clear objects allocated to COMRAM (13 bytes)
  4567  013586  EE00  F052         	lfsr	0,__pbssCOMRAM
  4568  01358A  0E0D               	movlw	13
  4569  01358C                     clear_4:
  4570  01358C  6AEE               	clrf	postinc0,c
  4571  01358E  06E8               	decf	wreg,f,c
  4572  013590  E1FD               	bnz	clear_4
  4573  013592                     end_of_initialization:
  4574                           	opt stack 0
  4575  013592                     __end_of__initialization:
  4576                           	opt stack 0
  4577  013592  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4578  013594  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4579  013596  0100               	movlb	0
  4580  013598  EFF2  F09B         	goto	_main	;jump to C main() function
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           postdec1	equ	0xFE5
  4588                           fsr1h	equ	0xFE2
  4589                           fsr1l	equ	0xFE1
  4590                           
  4591                           	psect	bssCOMRAM
  4592  000052                     __pbssCOMRAM:
  4593                           	opt stack 0
  4594  000052                     _inPipes:
  4595                           	opt stack 0
  4596  000052                     	ds	6
  4597  000058                     _motor_current_stepcount:
  4598                           	opt stack 0
  4599  000058                     	ds	4
  4600  00005C                     _pBDTEntryEP0OutNext:
  4601                           	opt stack 0
  4602  00005C                     	ds	2
  4603  00005E                     _USBDeviceState:
  4604                           	opt stack 0
  4605  00005E                     	ds	1
  4606                           tblptru	equ	0xFF8
  4607                           tblptrh	equ	0xFF7
  4608                           tblptrl	equ	0xFF6
  4609                           tablat	equ	0xFF5
  4610                           postinc0	equ	0xFEE
  4611                           wreg	equ	0xFE8
  4612                           postdec1	equ	0xFE5
  4613                           fsr1h	equ	0xFE2
  4614                           fsr1l	equ	0xFE1
  4615                           
  4616                           	psect	bssBANK0
  4617  0000FE                     __pbssBANK0:
  4618                           	opt stack 0
  4619  0000FE                     _motor_current_speed:
  4620                           	opt stack 0
  4621  0000FE                     	ds	2
  4622                           tblptru	equ	0xFF8
  4623                           tblptrh	equ	0xFF7
  4624                           tblptrl	equ	0xFF6
  4625                           tablat	equ	0xFF5
  4626                           postinc0	equ	0xFEE
  4627                           wreg	equ	0xFE8
  4628                           postdec1	equ	0xFE5
  4629                           fsr1h	equ	0xFE2
  4630                           fsr1l	equ	0xFE1
  4631                           
  4632                           	psect	bssBANK1
  4633  000100                     __pbssBANK1:
  4634                           	opt stack 0
  4635  000100                     _gblSenseData:
  4636                           	opt stack 0
  4637  000100                     	ds	18
  4638  000112                     _outPipes:
  4639                           	opt stack 0
  4640  000112                     	ds	9
  4641  00011B                     _pBDTEntryIn:
  4642                           	opt stack 0
  4643  00011B                     	ds	6
  4644  000121                     _pBDTEntryOut:
  4645                           	opt stack 0
  4646  000121                     	ds	6
  4647  000127                     _motor_final_stepcount:
  4648                           	opt stack 0
  4649  000127                     	ds	4
  4650  00012B                     _LBA:
  4651                           	opt stack 0
  4652  00012B                     	ds	4
  4653  00012F                     _USB1msTickCount:
  4654                           	opt stack 0
  4655  00012F                     	ds	4
  4656  000133                     _config_external:
  4657                           	opt stack 0
  4658  000133                     	ds	3
  4659  000136                     _config_internal:
  4660                           	opt stack 0
  4661  000136                     	ds	3
  4662  000139                     _ep_data_out:
  4663                           	opt stack 0
  4664  000139                     	ds	3
  4665  00013C                     _ep_data_in:
  4666                           	opt stack 0
  4667  00013C                     	ds	3
  4668  00013F                     _motor_maximum_speed:
  4669                           	opt stack 0
  4670  00013F                     	ds	2
  4671  000141                     _USBInHandle:
  4672                           	opt stack 0
  4673  000141                     	ds	2
  4674  000143                     _USBOutHandle:
  4675                           	opt stack 0
  4676  000143                     	ds	2
  4677  000145                     _TransferLength:
  4678                           	opt stack 0
  4679  000145                     	ds	2
  4680  000147                     _gblMediaPresent:
  4681                           	opt stack 0
  4682  000147                     	ds	2
  4683  000149                     _USBMSDInHandle:
  4684                           	opt stack 0
  4685  000149                     	ds	2
  4686  00014B                     _USBMSDOutHandle:
  4687                           	opt stack 0
  4688  00014B                     	ds	2
  4689  00014D                     _ptrNextData:
  4690                           	opt stack 0
  4691  00014D                     	ds	2
  4692  00014F                     _pDst:
  4693                           	opt stack 0
  4694  00014F                     	ds	2
  4695  000151                     _pBDTEntryEP0OutCurrent:
  4696                           	opt stack 0
  4697  000151                     	ds	2
  4698  000153                     _enc2:
  4699                           	opt stack 0
  4700  000153                     	ds	1
  4701  000154                     _enc1:
  4702                           	opt stack 0
  4703  000154                     	ds	1
  4704  000155                     _motor_direction:
  4705                           	opt stack 0
  4706  000155                     	ds	1
  4707  000156                     _motor_mode:
  4708                           	opt stack 0
  4709  000156                     	ds	1
  4710  000157                     _motor_cue_write_index:
  4711                           	opt stack 0
  4712  000157                     	ds	1
  4713  000158                     _motor_cue_read_index:
  4714                           	opt stack 0
  4715  000158                     	ds	1
  4716  000159                     _active_configuration:
  4717                           	opt stack 0
  4718  000159                     	ds	1
  4719  00015A                     _power_state:
  4720                           	opt stack 0
  4721  00015A                     	ds	1
  4722  00015B                     _MSDCBWValid:
  4723                           	opt stack 0
  4724  00015B                     	ds	1
  4725  00015C                     _MSDHostNoData:
  4726                           	opt stack 0
  4727  00015C                     	ds	1
  4728  00015D                     _SoftDetach:
  4729                           	opt stack 0
  4730  00015D                     	ds	1
  4731  00015E                     _gblCBWLength:
  4732                           	opt stack 0
  4733  00015E                     	ds	1
  4734  00015F                     _MSDRetryAttempt:
  4735                           	opt stack 0
  4736  00015F                     	ds	1
  4737  000160                     _MSDWriteState:
  4738                           	opt stack 0
  4739  000160                     	ds	1
  4740  000161                     _MSDReadState:
  4741                           	opt stack 0
  4742  000161                     	ds	1
  4743  000162                     _MSDCommandState:
  4744                           	opt stack 0
  4745  000162                     	ds	1
  4746  000163                     _MSD_State:
  4747                           	opt stack 0
  4748  000163                     	ds	1
  4749  000164                     _USBTicksSinceSuspendEnd:
  4750                           	opt stack 0
  4751  000164                     	ds	1
  4752  000165                     _USBDeferOUTDataStagePackets:
  4753                           	opt stack 0
  4754  000165                     	ds	1
  4755  000166                     _USBDeferINDataStagePackets:
  4756                           	opt stack 0
  4757  000166                     	ds	1
  4758  000167                     _USBStatusStageEnabledFlag2:
  4759                           	opt stack 0
  4760  000167                     	ds	1
  4761  000168                     _USBStatusStageEnabledFlag1:
  4762                           	opt stack 0
  4763  000168                     	ds	1
  4764  000169                     _USBDeferStatusStagePacket:
  4765                           	opt stack 0
  4766  000169                     	ds	1
  4767  00016A                     _USBStatusStageTimeoutCounter:
  4768                           	opt stack 0
  4769  00016A                     	ds	1
  4770  00016B                     _BothEP0OutUOWNsSet:
  4771                           	opt stack 0
  4772  00016B                     	ds	1
  4773  00016C                     _endpoint_number:
  4774                           	opt stack 0
  4775  00016C                     	ds	1
  4776  00016D                     _USBBusIsSuspended:
  4777                           	opt stack 0
  4778  00016D                     	ds	1
  4779  00016E                     _RemoteWakeup:
  4780                           	opt stack 0
  4781  00016E                     	ds	1
  4782  00016F                     _controlTransferState:
  4783                           	opt stack 0
  4784  00016F                     	ds	1
  4785  000170                     _shortPacketStatus:
  4786                           	opt stack 0
  4787  000170                     	ds	1
  4788  000171                     _os:
  4789                           	opt stack 0
  4790  000171                     	ds	48
  4791  0001A1                     _config:
  4792                           	opt stack 0
  4793  0001A1                     	ds	28
  4794  0001BD                     _USBAlternateInterface:
  4795                           	opt stack 0
  4796  0001BD                     	ds	2
  4797  0001BF                     _active_protocol:
  4798                           	opt stack 0
  4799  0001BF                     	ds	1
  4800  0001C0                     _idle_rate:
  4801                           	opt stack 0
  4802  0001C0                     	ds	1
  4803  0001C1                     _USTATcopy:
  4804                           	opt stack 0
  4805  0001C1                     	ds	1
  4806  0001C2                     _USBActiveConfiguration:
  4807                           	opt stack 0
  4808  0001C2                     	ds	1
  4809                           tblptru	equ	0xFF8
  4810                           tblptrh	equ	0xFF7
  4811                           tblptrl	equ	0xFF6
  4812                           tablat	equ	0xFF5
  4813                           postinc0	equ	0xFEE
  4814                           wreg	equ	0xFE8
  4815                           postdec1	equ	0xFE5
  4816                           fsr1h	equ	0xFE2
  4817                           fsr1l	equ	0xFE1
  4818                           
  4819                           	psect	bssBANK2
  4820  000200                     __pbssBANK2:
  4821                           	opt stack 0
  4822  000200                     _gblCBW:
  4823                           	opt stack 0
  4824  000200                     	ds	31
  4825  00021F                     _params:
  4826                           	opt stack 0
  4827  00021F                     	ds	7
  4828  000226                     _motor_next_speed_check:
  4829                           	opt stack 0
  4830  000226                     	ds	4
  4831  00022A                     _gblBLKLen:
  4832                           	opt stack 0
  4833  00022A                     	ds	4
  4834  00022E                     _gblNumBLKS:
  4835                           	opt stack 0
  4836  00022E                     	ds	4
  4837  000232                     _MSBBufferIndex:
  4838                           	opt stack 0
  4839  000232                     	ds	2
  4840  000234                     _display_content:
  4841                           	opt stack 0
  4842  000234                     	ds	80
  4843  000284                     _mediaInformation:
  4844                           	opt stack 0
  4845  000284                     	ds	5
  4846                           tblptru	equ	0xFF8
  4847                           tblptrh	equ	0xFF7
  4848                           tblptrl	equ	0xFF6
  4849                           tablat	equ	0xFF5
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           postdec1	equ	0xFE5
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           
  4856                           	psect	dataBANK2
  4857  000289                     __pdataBANK2:
  4858                           	opt stack 0
  4859  000289                     _LUN:
  4860                           	opt stack 0
  4861  000289                     	ds	29
  4862  0002A6                     i2c_display_init@F6932:
  4863                           	opt stack 0
  4864  0002A6                     	ds	9
  4865  0002AF                     __i2c_display_send_init_sequence@F6929:
  4866                           	opt stack 0
  4867  0002AF                     	ds	9
  4868  0002B8                     	ds	8
  4869  0002C0                     _configFile_used_name:
  4870                           	opt stack 0
  4871  0002C0                     	ds	8
  4872  0002C8                     _configFile_name:
  4873                           	opt stack 0
  4874  0002C8                     	ds	8
  4875  0002D0                     _configFile_used_extention:
  4876                           	opt stack 0
  4877  0002D0                     	ds	3
  4878  0002D3                     _configFile_extention:
  4879                           	opt stack 0
  4880  0002D3                     	ds	3
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           postinc0	equ	0xFEE
  4886                           wreg	equ	0xFE8
  4887                           postdec1	equ	0xFE5
  4888                           fsr1h	equ	0xFE2
  4889                           fsr1l	equ	0xFE1
  4890                           
  4891                           	psect	bssBANK3
  4892  000300                     __pbssBANK3:
  4893                           	opt stack 0
  4894  000300                     _motor_command_cue:
  4895                           	opt stack 0
  4896  000300                     	ds	56
  4897  000338                     _ToSendDataBuffer:
  4898                           	opt stack 0
  4899  000338                     	ds	64
  4900  000378                     _ReceivedDataBuffer:
  4901                           	opt stack 0
  4902  000378                     	ds	64
  4903                           tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           postinc0	equ	0xFEE
  4908                           wreg	equ	0xFE8
  4909                           postdec1	equ	0xFE5
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           
  4913                           	psect	dataBANK4
  4914  000400                     __pdataBANK4:
  4915                           	opt stack 0
  4916  000400                     _dc_startup:
  4917                           	opt stack 0
  4918  000400                     	ds	80
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           postinc0	equ	0xFEE
  4924                           wreg	equ	0xFE8
  4925                           postdec1	equ	0xFE5
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           
  4929                           	psect	bssBIGRAMll
  4930  000800                     __pbssBIGRAMll:
  4931                           	opt stack 0
  4932  000800                     _ConfigFile_buffer:
  4933                           	opt stack 0
  4934  000800                     	ds	512
  4935  000A00                     _buffer:
  4936                           	opt stack 0
  4937  000A00                     	ds	512
  4938                           tblptru	equ	0xFF8
  4939                           tblptrh	equ	0xFF7
  4940                           tblptrl	equ	0xFF6
  4941                           tablat	equ	0xFF5
  4942                           postinc0	equ	0xFEE
  4943                           wreg	equ	0xFE8
  4944                           postdec1	equ	0xFE5
  4945                           fsr1h	equ	0xFE2
  4946                           fsr1l	equ	0xFE1
  4947                           
  4948                           	psect	cstackBANK1
  4949  0001C3                     __pcstackBANK1:
  4950                           	opt stack 0
  4951  0001C3                     ??_configFile_read:
  4952                           
  4953                           ; 1 bytes @ 0x0
  4954  0001C3                     	ds	8
  4955  0001CB                     configFile_read@item_string:
  4956                           	opt stack 0
  4957                           
  4958                           ; 31 bytes @ 0x8
  4959  0001CB                     	ds	31
  4960  0001EA                     configFile_read@value_string:
  4961                           	opt stack 0
  4962                           
  4963                           ; 12 bytes @ 0x27
  4964  0001EA                     	ds	12
  4965  0001F6                     configFile_read@file_size:
  4966                           	opt stack 0
  4967                           
  4968                           ; 4 bytes @ 0x33
  4969  0001F6                     	ds	4
  4970  0001FA                     configFile_read@file_number:
  4971                           	opt stack 0
  4972                           
  4973                           ; 1 bytes @ 0x37
  4974  0001FA                     	ds	1
  4975  0001FB                     configFile_read@position:
  4976                           	opt stack 0
  4977                           
  4978                           ; 4 bytes @ 0x38
  4979  0001FB                     	ds	4
  4980                           tblptru	equ	0xFF8
  4981                           tblptrh	equ	0xFF7
  4982                           tblptrl	equ	0xFF6
  4983                           tablat	equ	0xFF5
  4984                           postinc0	equ	0xFEE
  4985                           wreg	equ	0xFE8
  4986                           postdec1	equ	0xFE5
  4987                           fsr1h	equ	0xFE2
  4988                           fsr1l	equ	0xFE1
  4989                           
  4990                           	psect	cstackBANK0
  4991  000060                     __pcstackBANK0:
  4992                           	opt stack 0
  4993  000060                     ??_isdigit:
  4994  000060                     ??__i2c_wait_idle:
  4995  000060                     ??__display_clear:
  4996  000060                     ??_motor_stop:
  4997  000060                     ??__divide_jump_size_increment:
  4998  000060                     ??__divide_jump_size_decrement:
  4999  000060                     ?_USBTransferOnePacket:
  5000                           	opt stack 0
  5001  000060                     ?_ExternalFlash_MediaInitialize:
  5002                           	opt stack 0
  5003  000060                     ?_ExternalFlash_SectorSizeRead:
  5004                           	opt stack 0
  5005  000060                     ?_strlen:
  5006                           	opt stack 0
  5007  000060                     ?_strncmp:
  5008                           	opt stack 0
  5009  000060                     ?__sector_from_file_number:
  5010                           	opt stack 0
  5011  000060                     ?__offset_from_file_number:
  5012                           	opt stack 0
  5013  000060                     ?__data_sector_from_cluster:
  5014                           	opt stack 0
  5015  000060                     ?__fat_sector_from_cluster:
  5016                           	opt stack 0
  5017  000060                     ?__fat_offset_from_cluster:
  5018                           	opt stack 0
  5019  000060                     ?__cluster_from_sector_and_offset:
  5020                           	opt stack 0
  5021  000060                     ?__get_available_offset_from_buffer:
  5022                           	opt stack 0
  5023  000060                     ?__read_value_from_offset:
  5024                           	opt stack 0
  5025  000060                     ?__get_time:
  5026                           	opt stack 0
  5027  000060                     ?__get_date:
  5028                           	opt stack 0
  5029  000060                     ?__encoder_next_setup_stepsize:
  5030                           	opt stack 0
  5031  000060                     ?__encoder_next_arc_step_size:
  5032                           	opt stack 0
  5033  000060                     ?___wmul:
  5034                           	opt stack 0
  5035  000060                     ?___lwdiv:
  5036                           	opt stack 0
  5037  000060                     ?___lwmod:
  5038                           	opt stack 0
  5039  000060                     ?_ExternalFlash_CapacityRead:
  5040                           	opt stack 0
  5041  000060                     ?___lmul:
  5042                           	opt stack 0
  5043  000060                     ?___lldiv:
  5044                           	opt stack 0
  5045  000060                     ?___aldiv:
  5046                           	opt stack 0
  5047  000060                     ?___almod:
  5048                           	opt stack 0
  5049  000060                     ?___fltol:
  5050                           	opt stack 0
  5051  000060                     ?___llmod:
  5052                           	opt stack 0
  5053  000060                     ?___xxtofl:
  5054                           	opt stack 0
  5055  000060                     USBTransferOnePacket@dir:
  5056                           	opt stack 0
  5057  000060                     USBStallEndpoint@dir:
  5058                           	opt stack 0
  5059  000060                     __i2c_send@dat:
  5060                           	opt stack 0
  5061  000060                     display_get_character@position:
  5062                           	opt stack 0
  5063  000060                     __encoder_next_divide_step_size@old_stepsize:
  5064                           	opt stack 0
  5065  000060                     toupper@c:
  5066                           	opt stack 0
  5067  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5068                           	opt stack 0
  5069  000060                     SYSTEM_Initialize@pll_startup_counter:
  5070                           	opt stack 0
  5071  000060                     ExternalFlash_MediaInitialize@config:
  5072                           	opt stack 0
  5073  000060                     ExternalFlash_SectorSizeRead@config:
  5074                           	opt stack 0
  5075  000060                     ExternalFlash_CapacityRead@config:
  5076                           	opt stack 0
  5077  000060                     ExternalFlash_MediaDetect@config:
  5078                           	opt stack 0
  5079  000060                     ExternalFlash_WriteProtectStateGet@config:
  5080                           	opt stack 0
  5081  000060                     __data_sector_from_cluster@fat_cluster:
  5082                           	opt stack 0
  5083  000060                     __fat_sector_from_cluster@cluster:
  5084                           	opt stack 0
  5085  000060                     __fat_offset_from_cluster@cluster:
  5086                           	opt stack 0
  5087  000060                     __cluster_from_sector_and_offset@sector:
  5088                           	opt stack 0
  5089  000060                     __get_available_offset_from_buffer@minimum_offset:
  5090                           	opt stack 0
  5091  000060                     __read_value_from_offset@offset:
  5092                           	opt stack 0
  5093  000060                     __write_value_to_offset@offset:
  5094                           	opt stack 0
  5095  000060                     __get_mbr@idx:
  5096                           	opt stack 0
  5097  000060                     __get_fbr@idx:
  5098                           	opt stack 0
  5099  000060                     __get_fat@idx:
  5100                           	opt stack 0
  5101  000060                     __get_root@idx:
  5102                           	opt stack 0
  5103  000060                     __get_data@idx:
  5104                           	opt stack 0
  5105  000060                     spi_tx@data:
  5106                           	opt stack 0
  5107  000060                     spi_tx_tx@command:
  5108                           	opt stack 0
  5109  000060                     spi_tx_rx@command:
  5110                           	opt stack 0
  5111  000060                     __fill_buffer_get_mode_details@outBuffer:
  5112                           	opt stack 0
  5113  000060                     motor_change_speed@new_speed:
  5114                           	opt stack 0
  5115  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5116                           	opt stack 0
  5117  000060                     __encoder_next_arc_step_size@old_stepsize:
  5118                           	opt stack 0
  5119  000060                     __get_item@item_string:
  5120                           	opt stack 0
  5121  000060                     ___wmul@multiplier:
  5122                           	opt stack 0
  5123  000060                     ___lwdiv@dividend:
  5124                           	opt stack 0
  5125  000060                     ___lwmod@dividend:
  5126                           	opt stack 0
  5127  000060                     memcpy@d1:
  5128                           	opt stack 0
  5129  000060                     memset@p1:
  5130                           	opt stack 0
  5131  000060                     strlen@s:
  5132                           	opt stack 0
  5133  000060                     strncmp@s1:
  5134                           	opt stack 0
  5135  000060                     __spi_init@details:
  5136                           	opt stack 0
  5137  000060                     ___lmul@multiplier:
  5138                           	opt stack 0
  5139  000060                     ___lldiv@dividend:
  5140                           	opt stack 0
  5141  000060                     ___aldiv@dividend:
  5142                           	opt stack 0
  5143  000060                     ___almod@dividend:
  5144                           	opt stack 0
  5145  000060                     ___fltol@f1:
  5146                           	opt stack 0
  5147  000060                     ___llmod@dividend:
  5148                           	opt stack 0
  5149  000060                     ___xxtofl@val:
  5150                           	opt stack 0
  5151                           
  5152                           ; 4 bytes @ 0x0
  5153  000060                     	ds	1
  5154  000061                     ??_USBStallEndpoint:
  5155  000061                     ??_display_get_character:
  5156  000061                     ?_stricmp:
  5157                           	opt stack 0
  5158  000061                     _isdigit$8130:
  5159                           	opt stack 0
  5160  000061                     USBTransferOnePacket@data:
  5161                           	opt stack 0
  5162  000061                     stricmp@s1:
  5163                           	opt stack 0
  5164                           
  5165                           ; 2 bytes @ 0x1
  5166  000061                     	ds	1
  5167  000062                     ??_MSDComputeDeviceInAndResidue:
  5168  000062                     ??_strlen:
  5169  000062                     ??__fill_buffer_get_mode_details:
  5170  000062                     ??__get_mbr:
  5171  000062                     ??__get_fbr:
  5172  000062                     ??__get_fat:
  5173  000062                     ??__get_root:
  5174  000062                     ??__encoder_next_setup_stepsize:
  5175  000062                     ??__encoder_next_arc_step_size:
  5176  000062                     __display_clear@row:
  5177                           	opt stack 0
  5178  000062                     __sector_from_file_number@file_number:
  5179                           	opt stack 0
  5180  000062                     __offset_from_file_number@file_number:
  5181                           	opt stack 0
  5182  000062                     isdigit@c:
  5183                           	opt stack 0
  5184  000062                     SYSTEM_Initialize@pll_startup_counter_3132:
  5185                           	opt stack 0
  5186  000062                     __cluster_from_sector_and_offset@offset:
  5187                           	opt stack 0
  5188  000062                     __get_available_offset_from_buffer@buffer:
  5189                           	opt stack 0
  5190  000062                     __read_value_from_offset@buffer:
  5191                           	opt stack 0
  5192  000062                     __write_value_to_offset@buffer:
  5193                           	opt stack 0
  5194  000062                     spi_tx@length:
  5195                           	opt stack 0
  5196  000062                     spi_tx_tx@command_length:
  5197                           	opt stack 0
  5198  000062                     spi_tx_rx@command_length:
  5199                           	opt stack 0
  5200  000062                     __get_item@value_string:
  5201                           	opt stack 0
  5202  000062                     ___wmul@multiplicand:
  5203                           	opt stack 0
  5204  000062                     ___lwdiv@divisor:
  5205                           	opt stack 0
  5206  000062                     ___lwmod@divisor:
  5207                           	opt stack 0
  5208  000062                     memcpy@s1:
  5209                           	opt stack 0
  5210  000062                     memset@c:
  5211                           	opt stack 0
  5212  000062                     strncmp@s2:
  5213                           	opt stack 0
  5214                           
  5215                           ; 2 bytes @ 0x2
  5216  000062                     	ds	1
  5217  000063                     USBTransferOnePacket@len:
  5218                           	opt stack 0
  5219  000063                     __display_clear@col:
  5220                           	opt stack 0
  5221  000063                     display_get_character@line:
  5222                           	opt stack 0
  5223  000063                     spi_init@configuration:
  5224                           	opt stack 0
  5225  000063                     __sector_from_file_number@sector:
  5226                           	opt stack 0
  5227  000063                     __offset_from_file_number@offset:
  5228                           	opt stack 0
  5229  000063                     stricmp@s2:
  5230                           	opt stack 0
  5231                           
  5232                           ; 2 bytes @ 0x3
  5233  000063                     	ds	1
  5234  000064                     ??_USBTransferOnePacket:
  5235  000064                     ??_spi_tx:
  5236  000064                     ??__get_available_offset_from_buffer:
  5237  000064                     ??__read_value_from_offset:
  5238  000064                     ??___fltol:
  5239  000064                     ??___xxtofl:
  5240  000064                     SYSTEM_Initialize@state:
  5241                           	opt stack 0
  5242  000064                     ___lwmod@counter:
  5243                           	opt stack 0
  5244  000064                     __write_value_to_offset@value:
  5245                           	opt stack 0
  5246  000064                     spi_tx_tx@data:
  5247                           	opt stack 0
  5248  000064                     spi_tx_rx@data:
  5249                           	opt stack 0
  5250  000064                     __fill_buffer_get_display@outBuffer:
  5251                           	opt stack 0
  5252  000064                     __get_item@buffer:
  5253                           	opt stack 0
  5254  000064                     ___wmul@product:
  5255                           	opt stack 0
  5256  000064                     ___lwdiv@quotient:
  5257                           	opt stack 0
  5258  000064                     memcpy@n:
  5259                           	opt stack 0
  5260  000064                     memset@n:
  5261                           	opt stack 0
  5262  000064                     strlen@cp:
  5263                           	opt stack 0
  5264  000064                     strncmp@len:
  5265                           	opt stack 0
  5266  000064                     ___lmul@multiplicand:
  5267                           	opt stack 0
  5268  000064                     ___lldiv@divisor:
  5269                           	opt stack 0
  5270  000064                     ___aldiv@divisor:
  5271                           	opt stack 0
  5272  000064                     ___almod@divisor:
  5273                           	opt stack 0
  5274  000064                     ___llmod@divisor:
  5275                           	opt stack 0
  5276                           
  5277                           ; 4 bytes @ 0x4
  5278  000064                     	ds	1
  5279  000065                     ??_stricmp:
  5280  000065                     USBStallEndpoint@ep:
  5281                           	opt stack 0
  5282  000065                     __i2c_eeprom_busy@busy:
  5283                           	opt stack 0
  5284  000065                     __i2c_write@data:
  5285                           	opt stack 0
  5286  000065                     __i2c_read@data:
  5287                           	opt stack 0
  5288  000065                     i2c_display_write_fixed@data:
  5289                           	opt stack 0
  5290                           
  5291                           ; 2 bytes @ 0x5
  5292  000065                     	ds	1
  5293  000066                     ??_strncmp:
  5294  000066                     ??__write_value_to_offset:
  5295  000066                     ??__get_item:
  5296  000066                     ?_atoi:
  5297                           	opt stack 0
  5298  000066                     __fill_buffer_get_display@secondHalf:
  5299                           	opt stack 0
  5300  000066                     ___lwdiv@counter:
  5301                           	opt stack 0
  5302  000066                     stricmp@r:
  5303                           	opt stack 0
  5304  000066                     USBStallEndpoint@p:
  5305                           	opt stack 0
  5306  000066                     __get_available_offset_from_buffer@offset:
  5307                           	opt stack 0
  5308  000066                     spi_tx_tx@data_length:
  5309                           	opt stack 0
  5310  000066                     spi_tx_rx@data_length:
  5311                           	opt stack 0
  5312  000066                     atoi@s:
  5313                           	opt stack 0
  5314  000066                     memcpy@d:
  5315                           	opt stack 0
  5316  000066                     memset@p:
  5317                           	opt stack 0
  5318                           
  5319                           ; 2 bytes @ 0x6
  5320  000066                     	ds	1
  5321  000067                     ??__fill_buffer_get_display:
  5322  000067                     __i2c_write@length:
  5323                           	opt stack 0
  5324  000067                     __i2c_read@length:
  5325                           	opt stack 0
  5326  000067                     i2c_display_write_fixed@length:
  5327                           	opt stack 0
  5328  000067                     __read_value_from_offset@value:
  5329                           	opt stack 0
  5330  000067                     utoa@buf:
  5331                           	opt stack 0
  5332                           
  5333                           ; 2 bytes @ 0x7
  5334  000067                     	ds	1
  5335  000068                     ??_spi_tx_rx:
  5336  000068                     ??_spi_tx_tx:
  5337  000068                     ??_atoi:
  5338  000068                     ??__i2c_read:
  5339  000068                     USBDeviceInit@i:
  5340                           	opt stack 0
  5341  000068                     USBTransferOnePacket@ep:
  5342                           	opt stack 0
  5343  000068                     MSDErrorHandler@ErrorCase:
  5344                           	opt stack 0
  5345  000068                     __i2c_write@slave_address:
  5346                           	opt stack 0
  5347  000068                     i2c_display_write_fixed@pos:
  5348                           	opt stack 0
  5349  000068                     __flash_wakeup@command:
  5350                           	opt stack 0
  5351  000068                     ___aldiv@counter:
  5352                           	opt stack 0
  5353  000068                     ___almod@counter:
  5354                           	opt stack 0
  5355  000068                     ___fltol@sign1:
  5356                           	opt stack 0
  5357  000068                     ___llmod@counter:
  5358                           	opt stack 0
  5359  000068                     ___xxtofl@sign:
  5360                           	opt stack 0
  5361  000068                     memcpy@s:
  5362                           	opt stack 0
  5363  000068                     ___lmul@product:
  5364                           	opt stack 0
  5365  000068                     ___lldiv@quotient:
  5366                           	opt stack 0
  5367                           
  5368                           ; 4 bytes @ 0x8
  5369  000068                     	ds	1
  5370  000069                     MSDErrorHandler@OldMSD_State:
  5371                           	opt stack 0
  5372  000069                     __i2c_write@cntr:
  5373                           	opt stack 0
  5374  000069                     __get_item@value_ctr:
  5375                           	opt stack 0
  5376  000069                     ___aldiv@sign:
  5377                           	opt stack 0
  5378  000069                     ___almod@sign:
  5379                           	opt stack 0
  5380  000069                     ___fltol@exp1:
  5381                           	opt stack 0
  5382  000069                     ___xxtofl@exp:
  5383                           	opt stack 0
  5384  000069                     USBTransferOnePacket@handle:
  5385                           	opt stack 0
  5386  000069                     utoa@val:
  5387                           	opt stack 0
  5388                           
  5389                           ; 2 bytes @ 0x9
  5390  000069                     	ds	1
  5391  00006A                     ??_i2c_display_init:
  5392  00006A                     __ic2_display_set_ddram_address@address:
  5393                           	opt stack 0
  5394  00006A                     __get_item@item_ctr:
  5395                           	opt stack 0
  5396  00006A                     atoi@sign:
  5397                           	opt stack 0
  5398  00006A                     memcpy@tmp:
  5399                           	opt stack 0
  5400  00006A                     __ic2_display_set_cgram_address@data_array:
  5401                           	opt stack 0
  5402  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5403                           	opt stack 0
  5404  00006A                     ___aldiv@quotient:
  5405                           	opt stack 0
  5406  00006A                     ___xxtofl@arg:
  5407                           	opt stack 0
  5408                           
  5409                           ; 4 bytes @ 0xA
  5410  00006A                     	ds	1
  5411  00006B                     __ic2_display_set_ddram_address@data_array:
  5412                           	opt stack 0
  5413  00006B                     __fill_buffer_get_status@outBuffer:
  5414                           	opt stack 0
  5415  00006B                     atoi@a:
  5416                           	opt stack 0
  5417  00006B                     utoa@base:
  5418                           	opt stack 0
  5419  00006B                     i2c_display_init@init_sequence:
  5420                           	opt stack 0
  5421                           
  5422                           ; 9 bytes @ 0xB
  5423  00006B                     	ds	1
  5424  00006C                     ?__flash_get_status:
  5425                           	opt stack 0
  5426  00006C                     ?_atol:
  5427                           	opt stack 0
  5428  00006C                     __fill_buffer_get_display@cntr:
  5429                           	opt stack 0
  5430  00006C                     ___lldiv@counter:
  5431                           	opt stack 0
  5432  00006C                     atol@s:
  5433                           	opt stack 0
  5434                           
  5435                           ; 2 bytes @ 0xC
  5436  00006C                     	ds	1
  5437  00006D                     __ic2_display_set_cgram_address@address:
  5438                           	opt stack 0
  5439  00006D                     i2c_display_cursor@position:
  5440                           	opt stack 0
  5441  00006D                     __fill_buffer_get_display@line:
  5442                           	opt stack 0
  5443  00006D                     utoa@v:
  5444                           	opt stack 0
  5445  00006D                     ultoa@buf:
  5446                           	opt stack 0
  5447                           
  5448                           ; 2 bytes @ 0xD
  5449  00006D                     	ds	1
  5450  00006E                     ?___fldiv:
  5451                           	opt stack 0
  5452  00006E                     ?___flmul:
  5453                           	opt stack 0
  5454  00006E                     ?___flneg:
  5455                           	opt stack 0
  5456  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5457                           	opt stack 0
  5458  00006E                     i2c_display_cursor@line:
  5459                           	opt stack 0
  5460  00006E                     __flash_get_status@command:
  5461                           	opt stack 0
  5462  00006E                     __fill_buffer_get_display@start_line:
  5463                           	opt stack 0
  5464  00006E                     i2c_display_program_custom_character@bit_pattern:
  5465                           	opt stack 0
  5466  00006E                     ___flneg@f1:
  5467                           	opt stack 0
  5468  00006E                     ___fldiv@b:
  5469                           	opt stack 0
  5470  00006E                     ___flmul@b:
  5471                           	opt stack 0
  5472                           
  5473                           ; 4 bytes @ 0xE
  5474  00006E                     	ds	1
  5475  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5476                           	opt stack 0
  5477  00006F                     __i2c_read@slave_address:
  5478                           	opt stack 0
  5479  00006F                     i2c_display_cursor@address:
  5480                           	opt stack 0
  5481  00006F                     __fill_buffer_get_display@position:
  5482                           	opt stack 0
  5483  00006F                     utoa@c:
  5484                           	opt stack 0
  5485  00006F                     __flash_get_status@status:
  5486                           	opt stack 0
  5487  00006F                     ultoa@val:
  5488                           	opt stack 0
  5489                           
  5490                           ; 4 bytes @ 0xF
  5491  00006F                     	ds	1
  5492  000070                     ??_atol:
  5493  000070                     ??_i2c_display_program_custom_character:
  5494  000070                     MSDCheckForErrorCases@DeviceNoData:
  5495                           	opt stack 0
  5496  000070                     __i2c_read@cntr:
  5497                           	opt stack 0
  5498  000070                     display_update@line:
  5499                           	opt stack 0
  5500  000070                     api_prepare@inBuffer:
  5501                           	opt stack 0
  5502  000070                     itoa@buf:
  5503                           	opt stack 0
  5504                           
  5505                           ; 2 bytes @ 0x10
  5506  000070                     	ds	1
  5507  000071                     i2c_eeprom_read@address:
  5508                           	opt stack 0
  5509  000071                     __flash_is_busy@status:
  5510                           	opt stack 0
  5511                           
  5512                           ; 2 bytes @ 0x11
  5513  000071                     	ds	1
  5514  000072                     ?___fladd:
  5515                           	opt stack 0
  5516  000072                     api_prepare@outBuffer:
  5517                           	opt stack 0
  5518  000072                     itoa@val:
  5519                           	opt stack 0
  5520  000072                     ___fladd@b:
  5521                           	opt stack 0
  5522  000072                     ___fldiv@a:
  5523                           	opt stack 0
  5524  000072                     ___flmul@a:
  5525                           	opt stack 0
  5526                           
  5527                           ; 4 bytes @ 0x12
  5528  000072                     	ds	1
  5529  000073                     i2c_eeprom_read@data:
  5530                           	opt stack 0
  5531  000073                     __flash_copy_page_to_buffer@page:
  5532                           	opt stack 0
  5533  000073                     __flash_compare_page_to_buffer@page:
  5534                           	opt stack 0
  5535  000073                     __flash_write_to_buffer@start:
  5536                           	opt stack 0
  5537  000073                     __flash_write_page_from_buffer@page:
  5538                           	opt stack 0
  5539  000073                     __flash_partial_read@page:
  5540                           	opt stack 0
  5541  000073                     ultoa@base:
  5542                           	opt stack 0
  5543  000073                     __flash_set_page_size@command:
  5544                           	opt stack 0
  5545                           
  5546                           ; 4 bytes @ 0x13
  5547  000073                     	ds	1
  5548  000074                     api_prepare@command:
  5549                           	opt stack 0
  5550  000074                     atol@sign:
  5551                           	opt stack 0
  5552  000074                     itoa@base:
  5553                           	opt stack 0
  5554  000074                     i2c_display_program_custom_character@data_array:
  5555                           	opt stack 0
  5556                           
  5557                           ; 11 bytes @ 0x14
  5558  000074                     	ds	1
  5559  000075                     i2c_eeprom_read@length:
  5560                           	opt stack 0
  5561  000075                     __flash_copy_page_to_buffer@buffer:
  5562                           	opt stack 0
  5563  000075                     __flash_compare_page_to_buffer@buffer:
  5564                           	opt stack 0
  5565  000075                     __flash_write_page_from_buffer@buffer:
  5566                           	opt stack 0
  5567  000075                     __flash_write_to_buffer@data:
  5568                           	opt stack 0
  5569  000075                     __flash_partial_read@start:
  5570                           	opt stack 0
  5571  000075                     atol@a:
  5572                           	opt stack 0
  5573  000075                     ultoa@v:
  5574                           	opt stack 0
  5575                           
  5576                           ; 4 bytes @ 0x15
  5577  000075                     	ds	1
  5578  000076                     ??_i2c_eeprom_read:
  5579  000076                     ??___fldiv:
  5580  000076                     ??___flmul:
  5581  000076                     ??__flash_copy_page_to_buffer:
  5582  000076                     ??__flash_compare_page_to_buffer:
  5583  000076                     ??__flash_write_page_from_buffer:
  5584  000076                     itoa@cp:
  5585                           	opt stack 0
  5586  000076                     ___fladd@a:
  5587                           	opt stack 0
  5588                           
  5589                           ; 4 bytes @ 0x16
  5590  000076                     	ds	1
  5591  000077                     i2c_eeprom_read@addr:
  5592                           	opt stack 0
  5593  000077                     __flash_set_page_size@size:
  5594                           	opt stack 0
  5595  000077                     __flash_write_to_buffer@data_length:
  5596                           	opt stack 0
  5597  000077                     __flash_partial_read@length:
  5598                           	opt stack 0
  5599                           
  5600                           ; 2 bytes @ 0x17
  5601  000077                     	ds	1
  5602  000078                     i2c_eeprom_read@slave_address:
  5603                           	opt stack 0
  5604  000078                     __display_padded_itoa@value:
  5605                           	opt stack 0
  5606  000078                     __display_itoa_u16@value:
  5607                           	opt stack 0
  5608                           
  5609                           ; 2 bytes @ 0x18
  5610  000078                     	ds	1
  5611  000079                     ?_i2c_eeprom_readUint32:
  5612                           	opt stack 0
  5613  000079                     __flash_write_to_buffer@buffer:
  5614                           	opt stack 0
  5615  000079                     atol@c:
  5616                           	opt stack 0
  5617  000079                     ultoa@c:
  5618                           	opt stack 0
  5619  000079                     i2c_eeprom_readUint32@address:
  5620                           	opt stack 0
  5621  000079                     __flash_compare_page_to_buffer@status:
  5622                           	opt stack 0
  5623  000079                     __flash_partial_read@data:
  5624                           	opt stack 0
  5625  000079                     __flash_copy_page_to_buffer@command:
  5626                           	opt stack 0
  5627  000079                     __flash_write_page_from_buffer@command:
  5628                           	opt stack 0
  5629                           
  5630                           ; 4 bytes @ 0x19
  5631  000079                     	ds	1
  5632  00007A                     ??___fladd:
  5633  00007A                     __display_padded_itoa@length:
  5634                           	opt stack 0
  5635  00007A                     ___flmul@sign:
  5636                           	opt stack 0
  5637  00007A                     __display_itoa_u16@text:
  5638                           	opt stack 0
  5639  00007A                     __parse_item@item_string:
  5640                           	opt stack 0
  5641  00007A                     ltoa@buf:
  5642                           	opt stack 0
  5643  00007A                     __flash_write_to_buffer@command:
  5644                           	opt stack 0
  5645  00007A                     ___fldiv@rem:
  5646                           	opt stack 0
  5647                           
  5648                           ; 4 bytes @ 0x1A
  5649  00007A                     	ds	1
  5650  00007B                     ??__flash_partial_read:
  5651  00007B                     __display_padded_itoa@text:
  5652                           	opt stack 0
  5653  00007B                     __flash_compare_page_to_buffer@command:
  5654                           	opt stack 0
  5655  00007B                     ___flmul@grs:
  5656                           	opt stack 0
  5657                           
  5658                           ; 4 bytes @ 0x1B
  5659  00007B                     	ds	1
  5660  00007C                     __display_start@cntr:
  5661                           	opt stack 0
  5662  00007C                     __parse_item@value_string:
  5663                           	opt stack 0
  5664  00007C                     ltoa@val:
  5665                           	opt stack 0
  5666                           
  5667                           ; 4 bytes @ 0x1C
  5668  00007C                     	ds	1
  5669  00007D                     ??__display_padded_itoa:
  5670  00007D                     i2c_eeprom_readUint32@data:
  5671                           	opt stack 0
  5672                           
  5673                           ; 4 bytes @ 0x1D
  5674  00007D                     	ds	1
  5675  00007E                     ___fldiv@sign:
  5676                           	opt stack 0
  5677                           
  5678                           ; 1 bytes @ 0x1E
  5679  00007E                     	ds	1
  5680  00007F                     i2c_display_program_custom_character@address:
  5681                           	opt stack 0
  5682  00007F                     ___flmul@aexp:
  5683                           	opt stack 0
  5684  00007F                     flash_sector_write@page:
  5685                           	opt stack 0
  5686  00007F                     flash_partial_write@page:
  5687                           	opt stack 0
  5688  00007F                     ___fldiv@new_exp:
  5689                           	opt stack 0
  5690  00007F                     __flash_partial_read@command:
  5691                           	opt stack 0
  5692                           
  5693                           ; 4 bytes @ 0x1F
  5694  00007F                     	ds	1
  5695  000080                     i2c_display_program_custom_character@cntr:
  5696                           	opt stack 0
  5697  000080                     ___flmul@bexp:
  5698                           	opt stack 0
  5699  000080                     ltoa@base:
  5700                           	opt stack 0
  5701                           
  5702                           ; 2 bytes @ 0x20
  5703  000080                     	ds	1
  5704  000081                     flash_sector_write@data:
  5705                           	opt stack 0
  5706  000081                     flash_partial_write@start:
  5707                           	opt stack 0
  5708  000081                     ___fldiv@grs:
  5709                           	opt stack 0
  5710  000081                     ___flmul@prod:
  5711                           	opt stack 0
  5712                           
  5713                           ; 4 bytes @ 0x21
  5714  000081                     	ds	1
  5715  000082                     ___fladd@signs:
  5716                           	opt stack 0
  5717  000082                     ltoa@cp:
  5718                           	opt stack 0
  5719  000082                     __display_padded_itoa@tmp:
  5720                           	opt stack 0
  5721                           
  5722                           ; 10 bytes @ 0x22
  5723  000082                     	ds	1
  5724  000083                     flash_sector_write@match:
  5725                           	opt stack 0
  5726  000083                     ___fladd@aexp:
  5727                           	opt stack 0
  5728  000083                     flash_partial_write@length:
  5729                           	opt stack 0
  5730  000083                     __flash_partial_read@address:
  5731                           	opt stack 0
  5732                           
  5733                           ; 4 bytes @ 0x23
  5734  000083                     	ds	1
  5735  000084                     ___fladd@bexp:
  5736                           	opt stack 0
  5737  000084                     ExternalFlash_SectorWrite@config:
  5738                           	opt stack 0
  5739  000084                     fat_format@cntr:
  5740                           	opt stack 0
  5741  000084                     __add_item@item_string:
  5742                           	opt stack 0
  5743                           
  5744                           ; 2 bytes @ 0x24
  5745  000084                     	ds	1
  5746  000085                     ___fladd@grs:
  5747                           	opt stack 0
  5748  000085                     ___fldiv@bexp:
  5749                           	opt stack 0
  5750  000085                     flash_partial_write@data:
  5751                           	opt stack 0
  5752  000085                     ___flmul@temp:
  5753                           	opt stack 0
  5754                           
  5755                           ; 2 bytes @ 0x25
  5756  000085                     	ds	1
  5757  000086                     ___fldiv@aexp:
  5758                           	opt stack 0
  5759  000086                     ExternalFlash_SectorWrite@sector_addr:
  5760                           	opt stack 0
  5761  000086                     __add_item@value:
  5762                           	opt stack 0
  5763                           
  5764                           ; 4 bytes @ 0x26
  5765  000086                     	ds	1
  5766  000087                     ??_adc_read_temperature:
  5767  000087                     ?__motor_get_speed_in_degrees:
  5768                           	opt stack 0
  5769  000087                     ?_motor_steps_from_degrees:
  5770                           	opt stack 0
  5771  000087                     ?__step_position_from_divide_position:
  5772                           	opt stack 0
  5773  000087                     flash_partial_write@match:
  5774                           	opt stack 0
  5775  000087                     flash_sector_read@page:
  5776                           	opt stack 0
  5777  000087                     flash_partial_read@page:
  5778                           	opt stack 0
  5779  000087                     motor_steps_from_degrees@degrees:
  5780                           	opt stack 0
  5781  000087                     __motor_get_speed_in_degrees@speed_index:
  5782                           	opt stack 0
  5783  000087                     __step_position_from_divide_position@divide_position:
  5784                           	opt stack 0
  5785  000087                     motor_calculate_position_in_degrees@tmp:
  5786                           	opt stack 0
  5787                           
  5788                           ; 4 bytes @ 0x27
  5789  000087                     	ds	1
  5790  000088                     __write_root@data:
  5791                           	opt stack 0
  5792                           
  5793                           ; 2 bytes @ 0x28
  5794  000088                     	ds	1
  5795  000089                     ??__motor_get_speed_in_degrees:
  5796  000089                     flash_sector_read@data:
  5797                           	opt stack 0
  5798  000089                     flash_partial_read@start:
  5799                           	opt stack 0
  5800  000089                     adc_read_temperature@adc_result:
  5801                           	opt stack 0
  5802                           
  5803                           ; 2 bytes @ 0x29
  5804  000089                     	ds	1
  5805  00008A                     ExternalFlash_SectorWrite@buffer:
  5806                           	opt stack 0
  5807  00008A                     __write_root@sector:
  5808                           	opt stack 0
  5809  00008A                     __add_item@buffer:
  5810                           	opt stack 0
  5811                           
  5812                           ; 2 bytes @ 0x2A
  5813  00008A                     	ds	1
  5814  00008B                     ??_fat_get_format_status:
  5815  00008B                     ?__get_available_cluster:
  5816                           	opt stack 0
  5817  00008B                     flash_partial_read@length:
  5818                           	opt stack 0
  5819  00008B                     ExternalFlash_SectorRead@config:
  5820                           	opt stack 0
  5821  00008B                     __get_available_cluster@first_sector:
  5822                           	opt stack 0
  5823  00008B                     fat_find_file@name:
  5824                           	opt stack 0
  5825  00008B                     motor_steps_from_degrees@steps:
  5826                           	opt stack 0
  5827  00008B                     __motor_get_speed_in_degrees@speed:
  5828                           	opt stack 0
  5829  00008B                     __step_position_from_divide_position@target_position:
  5830                           	opt stack 0
  5831  00008B                     adc_read_temperature@temperature:
  5832                           	opt stack 0
  5833                           
  5834                           ; 4 bytes @ 0x2B
  5835  00008B                     	ds	1
  5836  00008C                     ??__add_item:
  5837  00008C                     __display_padded_itoa@len:
  5838                           	opt stack 0
  5839  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5840                           	opt stack 0
  5841  00008C                     __write_root@offset:
  5842                           	opt stack 0
  5843                           
  5844                           ; 2 bytes @ 0x2C
  5845  00008C                     	ds	1
  5846  00008D                     __display_padded_itoa@pos:
  5847                           	opt stack 0
  5848  00008D                     flash_partial_read@data:
  5849                           	opt stack 0
  5850  00008D                     ExternalFlash_SectorWrite@page:
  5851                           	opt stack 0
  5852  00008D                     __get_available_cluster@skip_sector:
  5853                           	opt stack 0
  5854  00008D                     fat_find_file@extension:
  5855                           	opt stack 0
  5856  00008D                     fat_get_format_status@cntr:
  5857                           	opt stack 0
  5858  00008D                     ExternalFlash_SectorRead@sector_addr:
  5859                           	opt stack 0
  5860                           
  5861                           ; 4 bytes @ 0x2D
  5862  00008D                     	ds	1
  5863  00008E                     __display_padded_itoa@padding:
  5864                           	opt stack 0
  5865  00008E                     __write_root@file_number:
  5866                           	opt stack 0
  5867  00008E                     __add_item@length:
  5868                           	opt stack 0
  5869                           
  5870                           ; 1 bytes @ 0x2E
  5871  00008E                     	ds	1
  5872  00008F                     ??_MSDWriteHandler:
  5873  00008F                     ??_fat_find_file:
  5874  00008F                     ?__read_fat:
  5875                           	opt stack 0
  5876  00008F                     ?_motor_nonzero_steps_from_degrees:
  5877                           	opt stack 0
  5878  00008F                     __display_signed_itoa@value:
  5879                           	opt stack 0
  5880  00008F                     __get_available_cluster@cluster:
  5881                           	opt stack 0
  5882  00008F                     __root_is_available@root_sector:
  5883                           	opt stack 0
  5884  00008F                     __read_fat@cluster:
  5885                           	opt stack 0
  5886  00008F                     fat_get_file_information@data:
  5887                           	opt stack 0
  5888  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5889                           	opt stack 0
  5890  00008F                     __motor_get_speed_in_degrees@lookup:
  5891                           	opt stack 0
  5892  00008F                     __motor_run@distance_in_steps:
  5893                           	opt stack 0
  5894                           
  5895                           ; 4 bytes @ 0x2F
  5896  00008F                     	ds	2
  5897  000091                     fat_find_file@file_number:
  5898                           	opt stack 0
  5899  000091                     __display_signed_itoa@text:
  5900                           	opt stack 0
  5901  000091                     ExternalFlash_SectorRead@buffer:
  5902                           	opt stack 0
  5903  000091                     __get_available_cluster@offset:
  5904                           	opt stack 0
  5905  000091                     __root_is_available@offset:
  5906                           	opt stack 0
  5907  000091                     __read_fat@sector:
  5908                           	opt stack 0
  5909                           
  5910                           ; 2 bytes @ 0x31
  5911  000091                     	ds	1
  5912  000092                     fat_find_file@sector:
  5913                           	opt stack 0
  5914  000092                     fat_get_file_information@root_sector:
  5915                           	opt stack 0
  5916                           
  5917                           ; 2 bytes @ 0x32
  5918  000092                     	ds	1
  5919  000093                     ?_motor_speed_from_index:
  5920                           	opt stack 0
  5921  000093                     __root_is_available@file_number:
  5922                           	opt stack 0
  5923  000093                     ExternalFlash_SectorRead@page:
  5924                           	opt stack 0
  5925  000093                     __get_available_cluster@sector:
  5926                           	opt stack 0
  5927  000093                     __read_fat@offset:
  5928                           	opt stack 0
  5929  000093                     motor_speed_from_index@speed_index:
  5930                           	opt stack 0
  5931  000093                     __motor_run@speed:
  5932                           	opt stack 0
  5933  000093                     motor_nonzero_steps_from_degrees@steps:
  5934                           	opt stack 0
  5935                           
  5936                           ; 4 bytes @ 0x33
  5937  000093                     	ds	1
  5938  000094                     __root_is_available@first_byte:
  5939                           	opt stack 0
  5940  000094                     fat_find_file@offset:
  5941                           	opt stack 0
  5942  000094                     fat_get_file_information@offset:
  5943                           	opt stack 0
  5944                           
  5945                           ; 2 bytes @ 0x34
  5946  000094                     	ds	1
  5947  000095                     ??_MSDReadHandler:
  5948  000095                     ??__motor_run:
  5949  000095                     ?__make_cluster_chain:
  5950                           	opt stack 0
  5951  000095                     ?_fat_get_file_size:
  5952                           	opt stack 0
  5953  000095                     __get_available_root_entry@file_number:
  5954                           	opt stack 0
  5955  000095                     __display_itoa@value:
  5956                           	opt stack 0
  5957  000095                     __make_cluster_chain@first_cluster:
  5958                           	opt stack 0
  5959  000095                     __read_fat@value:
  5960                           	opt stack 0
  5961                           
  5962                           ; 2 bytes @ 0x35
  5963  000095                     	ds	1
  5964  000096                     fat_get_file_information@file_number:
  5965                           	opt stack 0
  5966                           
  5967                           ; 1 bytes @ 0x36
  5968  000096                     	ds	1
  5969  000097                     ?__find_nth_cluster:
  5970                           	opt stack 0
  5971  000097                     __display_itoa@decimals:
  5972                           	opt stack 0
  5973  000097                     __find_nth_cluster@cluster:
  5974                           	opt stack 0
  5975  000097                     __make_cluster_chain@number_of_clusters:
  5976                           	opt stack 0
  5977                           
  5978                           ; 2 bytes @ 0x37
  5979  000097                     	ds	1
  5980  000098                     __display_itoa@text:
  5981                           	opt stack 0
  5982                           
  5983                           ; 2 bytes @ 0x38
  5984  000098                     	ds	1
  5985  000099                     ??_MSDProcessCommandMediaPresent:
  5986  000099                     ??__make_cluster_chain:
  5987  000099                     __motor_run@direction:
  5988                           	opt stack 0
  5989  000099                     __find_nth_cluster@n:
  5990                           	opt stack 0
  5991  000099                     fat_get_file_size@sector:
  5992                           	opt stack 0
  5993                           
  5994                           ; 2 bytes @ 0x39
  5995  000099                     	ds	1
  5996  00009A                     ??__display_itoa:
  5997  00009A                     __motor_run@maximum_distance_in_degrees:
  5998                           	opt stack 0
  5999                           
  6000                           ; 2 bytes @ 0x3A
  6001  00009A                     	ds	1
  6002  00009B                     _MSDProcessCommandMediaPresent$2606:
  6003                           	opt stack 0
  6004  00009B                     __find_nth_cluster@offset:
  6005                           	opt stack 0
  6006  00009B                     __make_cluster_chain@next_offset:
  6007                           	opt stack 0
  6008  00009B                     fat_get_file_size@offset:
  6009                           	opt stack 0
  6010                           
  6011                           ; 2 bytes @ 0x3B
  6012  00009B                     	ds	1
  6013  00009C                     __motor_run@maximum_distance_in_steps:
  6014                           	opt stack 0
  6015                           
  6016                           ; 4 bytes @ 0x3C
  6017  00009C                     	ds	1
  6018  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6019                           	opt stack 0
  6020  00009D                     __find_nth_cluster@sector_in_buffer:
  6021                           	opt stack 0
  6022  00009D                     __make_cluster_chain@minimum_sector:
  6023                           	opt stack 0
  6024  00009D                     fat_get_file_size@file_size:
  6025                           	opt stack 0
  6026                           
  6027                           ; 4 bytes @ 0x3D
  6028  00009D                     	ds	1
  6029  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6030                           	opt stack 0
  6031                           
  6032                           ; 4 bytes @ 0x3E
  6033  00009E                     	ds	1
  6034  00009F                     __find_nth_cluster@sector:
  6035                           	opt stack 0
  6036  00009F                     __make_cluster_chain@different_sector_cluster:
  6037                           	opt stack 0
  6038                           
  6039                           ; 2 bytes @ 0x3F
  6040  00009F                     	ds	1
  6041  0000A0                     motor_schedule_command@distance_in_steps:
  6042                           	opt stack 0
  6043  0000A0                     __display_itoa@tmp:
  6044                           	opt stack 0
  6045                           
  6046                           ; 10 bytes @ 0x40
  6047  0000A0                     	ds	1
  6048  0000A1                     __make_cluster_chain@data_changed:
  6049                           	opt stack 0
  6050  0000A1                     fat_get_file_size@file_number:
  6051                           	opt stack 0
  6052  0000A1                     fat_read_from_file_fast@start_byte:
  6053                           	opt stack 0
  6054  0000A1                     fat_modify_file@start_byte:
  6055                           	opt stack 0
  6056                           
  6057                           ; 4 bytes @ 0x41
  6058  0000A1                     	ds	1
  6059  0000A2                     __make_cluster_chain@remaining_clusters:
  6060                           	opt stack 0
  6061  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6062                           	opt stack 0
  6063                           
  6064                           ; 4 bytes @ 0x42
  6065  0000A2                     	ds	2
  6066  0000A4                     __make_cluster_chain@sector:
  6067                           	opt stack 0
  6068  0000A4                     motor_schedule_command@speed:
  6069                           	opt stack 0
  6070                           
  6071                           ; 2 bytes @ 0x44
  6072  0000A4                     	ds	1
  6073  0000A5                     fat_modify_file@length:
  6074                           	opt stack 0
  6075  0000A5                     fat_read_from_file_fast@length:
  6076                           	opt stack 0
  6077                           
  6078                           ; 4 bytes @ 0x45
  6079  0000A5                     	ds	1
  6080  0000A6                     MSDProcessCommandMediaPresent@i:
  6081                           	opt stack 0
  6082  0000A6                     motor_schedule_command@direction:
  6083                           	opt stack 0
  6084  0000A6                     __make_cluster_chain@sector_in_buffer:
  6085                           	opt stack 0
  6086                           
  6087                           ; 2 bytes @ 0x46
  6088  0000A6                     	ds	1
  6089  0000A7                     ??_MSDProcessCommand:
  6090  0000A7                     fat_modify_file@data:
  6091                           	opt stack 0
  6092  0000A7                     __parse_jump_steps@data:
  6093                           	opt stack 0
  6094  0000A7                     motor_go_to_steps_position@target_position:
  6095                           	opt stack 0
  6096  0000A7                     _motor_arc_move$8734:
  6097                           	opt stack 0
  6098                           
  6099                           ; 4 bytes @ 0x47
  6100  0000A7                     	ds	1
  6101  0000A8                     __make_cluster_chain@offset:
  6102                           	opt stack 0
  6103                           
  6104                           ; 2 bytes @ 0x48
  6105  0000A8                     	ds	1
  6106  0000A9                     ??_fat_modify_file:
  6107  0000A9                     fat_read_from_file_fast@data:
  6108                           	opt stack 0
  6109  0000A9                     __parse_jump_steps@out_buffer:
  6110                           	opt stack 0
  6111                           
  6112                           ; 2 bytes @ 0x49
  6113  0000A9                     	ds	1
  6114  0000AA                     __display_itoa@len:
  6115                           	opt stack 0
  6116  0000AA                     __make_cluster_chain@next_cluster:
  6117                           	opt stack 0
  6118                           
  6119                           ; 2 bytes @ 0x4A
  6120  0000AA                     	ds	1
  6121  0000AB                     ??_motor_go_to_steps_position:
  6122  0000AB                     __display_itoa@missing:
  6123                           	opt stack 0
  6124  0000AB                     motor_arc_move@direction:
  6125                           	opt stack 0
  6126  0000AB                     fat_read_from_file_fast@cluster:
  6127                           	opt stack 0
  6128  0000AB                     __parse_jump_steps@out_idx_ptr:
  6129                           	opt stack 0
  6130                           
  6131                           ; 2 bytes @ 0x4B
  6132  0000AB                     	ds	1
  6133  0000AC                     ??_MSDTasks:
  6134  0000AC                     __display_itoa@pos:
  6135                           	opt stack 0
  6136  0000AC                     fat_create_file@name:
  6137                           	opt stack 0
  6138  0000AC                     fat_resize_file@new_file_size:
  6139                           	opt stack 0
  6140  0000AC                     motor_arc_move@arc_in_steps:
  6141                           	opt stack 0
  6142                           
  6143                           ; 4 bytes @ 0x4C
  6144  0000AC                     	ds	1
  6145  0000AD                     ??__parse_jump_steps:
  6146  0000AD                     _MSDTasks$2588:
  6147                           	opt stack 0
  6148  0000AD                     fat_read_from_file_fast@cluster_number:
  6149                           	opt stack 0
  6150  0000AD                     __display_itoa_long@value:
  6151                           	opt stack 0
  6152                           
  6153                           ; 4 bytes @ 0x4D
  6154  0000AD                     	ds	1
  6155  0000AE                     __parse_jump_steps@return_value:
  6156                           	opt stack 0
  6157  0000AE                     fat_create_file@extension:
  6158                           	opt stack 0
  6159                           
  6160                           ; 2 bytes @ 0x4E
  6161  0000AE                     	ds	1
  6162  0000AF                     ??_fat_read_from_file_fast:
  6163  0000AF                     _MSDTasks$2589:
  6164                           	opt stack 0
  6165  0000AF                     __parse_jump_steps@number_of_steps:
  6166                           	opt stack 0
  6167                           
  6168                           ; 4 bytes @ 0x4F
  6169  0000AF                     	ds	1
  6170  0000B0                     ??_fat_resize_file:
  6171  0000B0                     fat_create_file@size:
  6172                           	opt stack 0
  6173                           
  6174                           ; 4 bytes @ 0x50
  6175  0000B0                     	ds	1
  6176  0000B1                     MSDTasks@i:
  6177                           	opt stack 0
  6178  0000B1                     __display_itoa_long@decimals:
  6179                           	opt stack 0
  6180                           
  6181                           ; 1 bytes @ 0x51
  6182  0000B1                     	ds	1
  6183  0000B2                     __display_itoa_long@text:
  6184                           	opt stack 0
  6185                           
  6186                           ; 2 bytes @ 0x52
  6187  0000B2                     	ds	1
  6188  0000B3                     __parse_command_long@data:
  6189                           	opt stack 0
  6190  0000B3                     motor_go_to_steps_position@overhead_cw:
  6191                           	opt stack 0
  6192                           
  6193                           ; 4 bytes @ 0x53
  6194  0000B3                     	ds	1
  6195  0000B4                     ??__display_itoa_long:
  6196  0000B4                     ??_fat_create_file:
  6197  0000B4                     fat_resize_file@old_number_of_clusters:
  6198                           	opt stack 0
  6199                           
  6200                           ; 2 bytes @ 0x54
  6201  0000B4                     	ds	1
  6202  0000B5                     fat_modify_file@sector:
  6203                           	opt stack 0
  6204  0000B5                     __parse_command_long@out_buffer:
  6205                           	opt stack 0
  6206                           
  6207                           ; 2 bytes @ 0x55
  6208  0000B5                     	ds	1
  6209  0000B6                     fat_resize_file@new_number_of_clusters:
  6210                           	opt stack 0
  6211                           
  6212                           ; 2 bytes @ 0x56
  6213  0000B6                     	ds	1
  6214  0000B7                     fat_modify_file@file_number:
  6215                           	opt stack 0
  6216  0000B7                     __parse_command_long@out_idx_ptr:
  6217                           	opt stack 0
  6218  0000B7                     motor_go_to_steps_position@overhead_ccw:
  6219                           	opt stack 0
  6220                           
  6221                           ; 4 bytes @ 0x57
  6222  0000B7                     	ds	1
  6223  0000B8                     __display_itoa_long@length:
  6224                           	opt stack 0
  6225  0000B8                     fat_modify_file@return_code:
  6226                           	opt stack 0
  6227  0000B8                     fat_create_file@number_of_clusters:
  6228                           	opt stack 0
  6229  0000B8                     fat_resize_file@first_cluster:
  6230                           	opt stack 0
  6231                           
  6232                           ; 2 bytes @ 0x58
  6233  0000B8                     	ds	1
  6234  0000B9                     __parse_command_long@length:
  6235                           	opt stack 0
  6236  0000B9                     __display_itoa_long@short_value:
  6237                           	opt stack 0
  6238  0000B9                     fat_modify_file@cluster:
  6239                           	opt stack 0
  6240                           
  6241                           ; 2 bytes @ 0x59
  6242  0000B9                     	ds	1
  6243  0000BA                     fat_resize_file@file_number:
  6244                           	opt stack 0
  6245  0000BA                     fat_create_file@first_cluster:
  6246                           	opt stack 0
  6247                           
  6248                           ; 2 bytes @ 0x5A
  6249  0000BA                     	ds	1
  6250  0000BB                     __display_itoa_long@last_digit:
  6251                           	opt stack 0
  6252  0000BB                     fat_read_from_file_fast@sector:
  6253                           	opt stack 0
  6254  0000BB                     fat_modify_file@offset:
  6255                           	opt stack 0
  6256  0000BB                     motor_go_to_steps_position@distance_cw:
  6257                           	opt stack 0
  6258  0000BB                     fat_resize_file@root:
  6259                           	opt stack 0
  6260                           
  6261                           ; 32 bytes @ 0x5B
  6262  0000BB                     	ds	1
  6263  0000BC                     ??_display_prepare:
  6264  0000BC                     fat_create_file@file_number:
  6265                           	opt stack 0
  6266                           
  6267                           ; 1 bytes @ 0x5C
  6268  0000BC                     	ds	1
  6269  0000BD                     fat_read_from_file_fast@working_cluster:
  6270                           	opt stack 0
  6271  0000BD                     fat_modify_file@number_of_bytes:
  6272                           	opt stack 0
  6273  0000BD                     fat_create_file@root_entry:
  6274                           	opt stack 0
  6275                           
  6276                           ; 32 bytes @ 0x5D
  6277  0000BD                     	ds	1
  6278  0000BE                     display_prepare@temp:
  6279                           	opt stack 0
  6280                           
  6281                           ; 10 bytes @ 0x5E
  6282  0000BE                     	ds	1
  6283  0000BF                     fat_read_from_file_fast@offset:
  6284                           	opt stack 0
  6285  0000BF                     fat_modify_file@position:
  6286                           	opt stack 0
  6287  0000BF                     motor_go_to_steps_position@distance_ccw:
  6288                           	opt stack 0
  6289                           
  6290                           ; 4 bytes @ 0x5F
  6291  0000BF                     	ds	2
  6292  0000C1                     fat_read_from_file_fast@needed_cluster:
  6293                           	opt stack 0
  6294                           
  6295                           ; 2 bytes @ 0x61
  6296  0000C1                     	ds	2
  6297  0000C3                     ??_motor_divide_jump:
  6298  0000C3                     __parse_command_short@cmd:
  6299                           	opt stack 0
  6300  0000C3                     fat_read_from_file_fast@read_length:
  6301                           	opt stack 0
  6302  0000C3                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6303                           	opt stack 0
  6304  0000C3                     fat_modify_file@root:
  6305                           	opt stack 0
  6306                           
  6307                           ; 32 bytes @ 0x63
  6308  0000C3                     	ds	1
  6309  0000C4                     api_parse@inBuffer:
  6310                           	opt stack 0
  6311  0000C4                     motor_divide_jump@target_position_in_steps:
  6312                           	opt stack 0
  6313                           
  6314                           ; 4 bytes @ 0x64
  6315  0000C4                     	ds	1
  6316  0000C5                     fat_read_from_file_fast@position:
  6317                           	opt stack 0
  6318                           
  6319                           ; 4 bytes @ 0x65
  6320  0000C5                     	ds	1
  6321  0000C6                     api_parse@receivedDataLength:
  6322                           	opt stack 0
  6323                           
  6324                           ; 1 bytes @ 0x66
  6325  0000C6                     	ds	1
  6326  0000C7                     api_parse@outBuffer:
  6327                           	opt stack 0
  6328  0000C7                     motor_divide_jump_to_nearest@nearest_divide_position:
  6329                           	opt stack 0
  6330                           
  6331                           ; 2 bytes @ 0x67
  6332  0000C7                     	ds	1
  6333  0000C8                     display_prepare@space:
  6334                           	opt stack 0
  6335  0000C8                     motor_divide_jump@target_divide_position:
  6336                           	opt stack 0
  6337                           
  6338                           ; 2 bytes @ 0x68
  6339  0000C8                     	ds	1
  6340  0000C9                     ??_api_parse:
  6341  0000C9                     display_prepare@cntr:
  6342                           	opt stack 0
  6343  0000C9                     fat_read_from_file@start_byte:
  6344                           	opt stack 0
  6345  0000C9                     motor_divide_jump_to_nearest@divide_position_float:
  6346                           	opt stack 0
  6347                           
  6348                           ; 4 bytes @ 0x69
  6349  0000C9                     	ds	2
  6350  0000CB                     api_parse@out_idx_ptr:
  6351                           	opt stack 0
  6352                           
  6353                           ; 2 bytes @ 0x6B
  6354  0000CB                     	ds	2
  6355  0000CD                     ??_encoder_statemachine:
  6356  0000CD                     api_parse@out_idx:
  6357                           	opt stack 0
  6358  0000CD                     fat_read_from_file@length:
  6359                           	opt stack 0
  6360                           
  6361                           ; 4 bytes @ 0x6D
  6362  0000CD                     	ds	1
  6363  0000CE                     api_parse@in_idx:
  6364                           	opt stack 0
  6365                           
  6366                           ; 1 bytes @ 0x6E
  6367  0000CE                     	ds	1
  6368  0000CF                     
  6369                           ; 1 bytes @ 0x6F
  6370  0000CF                     	ds	2
  6371  0000D1                     fat_read_from_file@data:
  6372                           	opt stack 0
  6373                           
  6374                           ; 2 bytes @ 0x71
  6375  0000D1                     	ds	2
  6376  0000D3                     ??_fat_read_from_file:
  6377                           
  6378                           ; 1 bytes @ 0x73
  6379  0000D3                     	ds	4
  6380  0000D7                     fat_read_from_file@file_number:
  6381                           	opt stack 0
  6382                           
  6383                           ; 1 bytes @ 0x77
  6384  0000D7                     	ds	1
  6385  0000D8                     fat_read_from_file@return_code:
  6386                           	opt stack 0
  6387                           
  6388                           ; 1 bytes @ 0x78
  6389  0000D8                     	ds	1
  6390  0000D9                     fat_read_from_file@cluster:
  6391                           	opt stack 0
  6392                           
  6393                           ; 2 bytes @ 0x79
  6394  0000D9                     	ds	2
  6395  0000DB                     fat_read_from_file@cluster_number:
  6396                           	opt stack 0
  6397                           
  6398                           ; 2 bytes @ 0x7B
  6399  0000DB                     	ds	2
  6400  0000DD                     fat_read_from_file@root:
  6401                           	opt stack 0
  6402                           
  6403                           ; 32 bytes @ 0x7D
  6404  0000DD                     	ds	6
  6405  0000E3                     ??_configFile_write:
  6406                           
  6407                           ; 1 bytes @ 0x83
  6408  0000E3                     	ds	1
  6409  0000E4                     configFile_write@file_number:
  6410                           	opt stack 0
  6411                           
  6412                           ; 1 bytes @ 0x84
  6413  0000E4                     	ds	1
  6414  0000E5                     configFile_write@file_size:
  6415                           	opt stack 0
  6416                           
  6417                           ; 4 bytes @ 0x85
  6418  0000E5                     	ds	24
  6419  0000FD                     main@startup_timer:
  6420                           	opt stack 0
  6421                           
  6422                           ; 1 bytes @ 0x9D
  6423  0000FD                     	ds	1
  6424                           tblptru	equ	0xFF8
  6425                           tblptrh	equ	0xFF7
  6426                           tblptrl	equ	0xFF6
  6427                           tablat	equ	0xFF5
  6428                           postinc0	equ	0xFEE
  6429                           wreg	equ	0xFE8
  6430                           postdec1	equ	0xFE5
  6431                           fsr1h	equ	0xFE2
  6432                           fsr1l	equ	0xFE1
  6433                           
  6434                           	psect	cstackCOMRAM
  6435  000001                     __pcstackCOMRAM:
  6436                           	opt stack 0
  6437  000001                     ??_USBStdGetDscHandler:
  6438  000001                     ??_USBStdGetStatusHandler:
  6439  000001                     ??i2__i2c_wait_idle:
  6440  000001                     ?i2_USBTransferOnePacket:
  6441                           	opt stack 0
  6442  000001                     ?i2_ExternalFlash_MediaInitialize:
  6443                           	opt stack 0
  6444  000001                     USBConfigureEndpoint@direction:
  6445                           	opt stack 0
  6446  000001                     USBCtrlTrfTxService@byteToSend:
  6447                           	opt stack 0
  6448  000001                     USBCtrlTrfRxService@i:
  6449                           	opt stack 0
  6450  000001                     i2USBTransferOnePacket@dir:
  6451                           	opt stack 0
  6452  000001                     i2USBStallEndpoint@dir:
  6453                           	opt stack 0
  6454  000001                     i2__i2c_send@dat:
  6455                           	opt stack 0
  6456  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6457                           	opt stack 0
  6458  000001                     i2ExternalFlash_MediaInitialize@config:
  6459                           	opt stack 0
  6460  000001                     i2ExternalFlash_MediaDetect@config:
  6461                           	opt stack 0
  6462  000001                     i2memcpy@d1:
  6463                           	opt stack 0
  6464  000001                     i2memset@p1:
  6465                           	opt stack 0
  6466                           
  6467                           ; 2 bytes @ 0x0
  6468  000001                     	ds	1
  6469  000002                     ??_USBConfigureEndpoint:
  6470  000002                     ??i2_USBStallEndpoint:
  6471  000002                     USBCtrlTrfRxService@byteToRead:
  6472                           	opt stack 0
  6473  000002                     USBCtrlTrfInHandler@lastDTS:
  6474                           	opt stack 0
  6475  000002                     USBStdGetStatusHandler@p:
  6476                           	opt stack 0
  6477  000002                     i2USBTransferOnePacket@data:
  6478                           	opt stack 0
  6479                           
  6480                           ; 2 bytes @ 0x1
  6481  000002                     	ds	1
  6482  000003                     i2SYSTEM_Initialize@pll_startup_counter_3132:
  6483                           	opt stack 0
  6484  000003                     i2memcpy@s1:
  6485                           	opt stack 0
  6486  000003                     i2memset@c:
  6487                           	opt stack 0
  6488                           
  6489                           ; 2 bytes @ 0x2
  6490  000003                     	ds	1
  6491  000004                     i2USBTransferOnePacket@len:
  6492                           	opt stack 0
  6493                           
  6494                           ; 1 bytes @ 0x3
  6495  000004                     	ds	1
  6496  000005                     ??i2_USBTransferOnePacket:
  6497  000005                     i2SYSTEM_Initialize@state:
  6498                           	opt stack 0
  6499  000005                     i2memcpy@n:
  6500                           	opt stack 0
  6501  000005                     i2memset@n:
  6502                           	opt stack 0
  6503                           
  6504                           ; 2 bytes @ 0x4
  6505  000005                     	ds	1
  6506  000006                     USBConfigureEndpoint@EPNum:
  6507                           	opt stack 0
  6508  000006                     i2USBStallEndpoint@ep:
  6509                           	opt stack 0
  6510  000006                     i2__i2c_eeprom_busy@busy:
  6511                           	opt stack 0
  6512  000006                     i2__i2c_write@data:
  6513                           	opt stack 0
  6514                           
  6515                           ; 2 bytes @ 0x5
  6516  000006                     	ds	1
  6517  000007                     USBConfigureEndpoint@handle:
  6518                           	opt stack 0
  6519  000007                     i2USBStallEndpoint@p:
  6520                           	opt stack 0
  6521  000007                     i2memcpy@d:
  6522                           	opt stack 0
  6523  000007                     i2memset@p:
  6524                           	opt stack 0
  6525                           
  6526                           ; 2 bytes @ 0x6
  6527  000007                     	ds	1
  6528  000008                     i2__i2c_write@length:
  6529                           	opt stack 0
  6530                           
  6531                           ; 1 bytes @ 0x7
  6532  000008                     	ds	1
  6533  000009                     USBEnableEndpoint@options:
  6534                           	opt stack 0
  6535  000009                     i2USBDeviceInit@i:
  6536                           	opt stack 0
  6537  000009                     i2USBTransferOnePacket@ep:
  6538                           	opt stack 0
  6539  000009                     i2__i2c_write@slave_address:
  6540                           	opt stack 0
  6541  000009                     i2memcpy@s:
  6542                           	opt stack 0
  6543                           
  6544                           ; 2 bytes @ 0x8
  6545  000009                     	ds	1
  6546  00000A                     i2__i2c_write@cntr:
  6547                           	opt stack 0
  6548  00000A                     USBEnableEndpoint@p:
  6549                           	opt stack 0
  6550  00000A                     i2USBTransferOnePacket@handle:
  6551                           	opt stack 0
  6552                           
  6553                           ; 2 bytes @ 0x9
  6554  00000A                     	ds	1
  6555  00000B                     i2memcpy@tmp:
  6556                           	opt stack 0
  6557  00000B                     i2c_eeprom_write@address:
  6558                           	opt stack 0
  6559                           
  6560                           ; 2 bytes @ 0xA
  6561  00000B                     	ds	1
  6562  00000C                     ??_USBMSDInit:
  6563  00000C                     USBEnableEndpoint@ep:
  6564                           	opt stack 0
  6565  00000C                     _USBCheckMSDRequest$2534:
  6566                           	opt stack 0
  6567  00000C                     MSDTransferTerminated@handle:
  6568                           	opt stack 0
  6569                           
  6570                           ; 2 bytes @ 0xB
  6571  00000C                     	ds	1
  6572  00000D                     i2c_eeprom_write@data:
  6573                           	opt stack 0
  6574                           
  6575                           ; 2 bytes @ 0xC
  6576  00000D                     	ds	1
  6577  00000E                     _USBCheckMSDRequest$2535:
  6578                           	opt stack 0
  6579  00000E                     _MSDTransferTerminated$2623:
  6580                           	opt stack 0
  6581                           
  6582                           ; 2 bytes @ 0xD
  6583  00000E                     	ds	1
  6584  00000F                     i2c_eeprom_write@length:
  6585                           	opt stack 0
  6586                           
  6587                           ; 1 bytes @ 0xE
  6588  00000F                     	ds	1
  6589  000010                     ??_i2c_eeprom_write:
  6590  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6591                           	opt stack 0
  6592                           
  6593                           ; 2 bytes @ 0xF
  6594  000010                     	ds	2
  6595  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6596                           	opt stack 0
  6597                           
  6598                           ; 2 bytes @ 0x11
  6599  000012                     	ds	1
  6600  000013                     i2c_eeprom_write@dat:
  6601                           	opt stack 0
  6602                           
  6603                           ; 17 bytes @ 0x12
  6604  000013                     	ds	1
  6605  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6606                           	opt stack 0
  6607                           
  6608                           ; 2 bytes @ 0x13
  6609  000014                     	ds	2
  6610  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6611                           
  6612                           ; 1 bytes @ 0x15
  6613  000016                     	ds	2
  6614  000018                     ??_USBStdFeatureReqHandler:
  6615  000018                     USBStdSetCfgHandler@i:
  6616                           	opt stack 0
  6617                           
  6618                           ; 1 bytes @ 0x17
  6619  000018                     	ds	1
  6620  000019                     USBStdFeatureReqHandler@pUEP:
  6621                           	opt stack 0
  6622                           
  6623                           ; 2 bytes @ 0x18
  6624  000019                     	ds	2
  6625  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6626                           	opt stack 0
  6627                           
  6628                           ; 1 bytes @ 0x1A
  6629  00001B                     	ds	1
  6630  00001C                     USBStdFeatureReqHandler@p:
  6631                           	opt stack 0
  6632                           
  6633                           ; 2 bytes @ 0x1B
  6634  00001C                     	ds	2
  6635  00001E                     ??_USBCtrlEPService:
  6636  00001E                     
  6637                           ; 1 bytes @ 0x1D
  6638  00001E                     	ds	1
  6639  00001F                     USBDeviceTasks@i:
  6640                           	opt stack 0
  6641                           
  6642                           ; 1 bytes @ 0x1E
  6643  00001F                     	ds	5
  6644  000024                     i2c_eeprom_write@slave_address:
  6645                           	opt stack 0
  6646                           
  6647                           ; 1 bytes @ 0x23
  6648  000024                     	ds	1
  6649  000025                     i2c_eeprom_write@cntr:
  6650                           	opt stack 0
  6651                           
  6652                           ; 1 bytes @ 0x24
  6653  000025                     	ds	1
  6654  000026                     i2c_eeprom_writeUint32@address:
  6655                           	opt stack 0
  6656                           
  6657                           ; 2 bytes @ 0x25
  6658  000026                     	ds	2
  6659  000028                     i2c_eeprom_writeUint32@data:
  6660                           	opt stack 0
  6661                           
  6662                           ; 4 bytes @ 0x27
  6663  000028                     	ds	4
  6664  00002C                     ??_motor_isr:
  6665  00002C                     
  6666                           ; 1 bytes @ 0x2B
  6667  00002C                     	ds	16
  6668  00003C                     motor_isr@steps_until_standstill:
  6669                           	opt stack 0
  6670                           
  6671                           ; 2 bytes @ 0x3B
  6672  00003C                     	ds	2
  6673  00003E                     motor_isr@steps_until_standstill_if_accelerate:
  6674                           	opt stack 0
  6675                           
  6676                           ; 2 bytes @ 0x3D
  6677  00003E                     	ds	2
  6678  000040                     motor_isr@steps_remaining:
  6679                           	opt stack 0
  6680                           
  6681                           ; 4 bytes @ 0x3F
  6682  000040                     	ds	4
  6683  000044                     ??_SYS_InterruptHigh:
  6684                           
  6685                           ; 1 bytes @ 0x43
  6686  000044                     	ds	14
  6687                           tblptru	equ	0xFF8
  6688                           tblptrh	equ	0xFF7
  6689                           tblptrl	equ	0xFF6
  6690                           tablat	equ	0xFF5
  6691                           postinc0	equ	0xFEE
  6692                           wreg	equ	0xFE8
  6693                           postdec1	equ	0xFE5
  6694                           fsr1h	equ	0xFE2
  6695                           fsr1l	equ	0xFE1
  6696                           
  6697 ;;
  6698 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6699 ;;
  6700 ;; *************** function _main *****************
  6701 ;; Defined at:
  6702 ;;		line 49 in file "main.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;		None
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  1    wreg      void 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;Total ram usage:        1 bytes
  6721 ;; Hardware stack levels required when called:   22
  6722 ;; This function calls:
  6723 ;;		_APP_DeviceCustomHIDTasks
  6724 ;;		_APP_DeviceMSDTasks
  6725 ;;		_SYSTEM_Initialize
  6726 ;;		_USBDeviceAttach
  6727 ;;		_USBDeviceInit
  6728 ;;		_adc_read_temperature
  6729 ;;		_display_prepare
  6730 ;;		_display_update
  6731 ;;		_encoder_statemachine
  6732 ;;		_motor_calculate_position_in_degrees
  6733 ;;		_motor_process_cue
  6734 ;;		_system_init
  6735 ;; This function is called by:
  6736 ;;		Startup code after reset
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text0
  6741  0137E4                     __ptext0:
  6742                           	opt stack 0
  6743  0137E4                     _main:
  6744                           	opt stack 9
  6745                           
  6746                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6747                           
  6748                           ;incstack = 0
  6749  0137E4  ECA2  F08C         	call	_system_init	;wreg free
  6750                           
  6751                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6752  0137E8  0E00               	movlw	0
  6753  0137EA  EC6E  F0A2         	call	_SYSTEM_Initialize
  6754                           
  6755                           ;main.c: 59: USBDeviceInit();
  6756  0137EE  EC71  F07F         	call	_USBDeviceInit	;wreg free
  6757                           
  6758                           ;main.c: 60: USBDeviceAttach();
  6759  0137F2  ECFC  F0A8         	call	_USBDeviceAttach	;wreg free
  6760                           
  6761                           ;main.c: 63: startup_timer = 150;
  6762  0137F6  0E96               	movlw	150
  6763  0137F8  0100               	movlb	0	; () banked
  6764  0137FA  6FFD               	movwf	main@startup_timer& (0+255),b
  6765                           
  6766                           ;main.c: 64: while(startup_timer)
  6767  0137FC  D009               	goto	l863
  6768  0137FE                     
  6769                           ; BSR set to: 0
  6770                           ;main.c: 65: {;main.c: 66: if(!os.done)
  6771                           
  6772                           ; BSR set to: 0
  6773  0137FE  0101               	movlb	1	; () banked
  6774  013800  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6775  013802  A4D8               	btfss	status,2,c
  6776  013804  D005               	goto	l863
  6777                           
  6778                           ; BSR set to: 1
  6779                           ;main.c: 67: {;main.c: 68: --startup_timer;
  6780  013806  0100               	movlb	0	; () banked
  6781  013808  07FD               	decf	main@startup_timer& (0+255),f,b
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;main.c: 69: os.done = 1;
  6785  01380A  0E01               	movlw	1
  6786  01380C  0101               	movlb	1	; () banked
  6787  01380E  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6788  013810                     l863:
  6789                           
  6790                           ; BSR set to: 1
  6791                           
  6792                           ; BSR set to: 1
  6793  013810  0100               	movlb	0	; () banked
  6794  013812  51FD               	movf	main@startup_timer& (0+255),w,b
  6795  013814  A4D8               	btfss	status,2,c
  6796  013816  D7F3               	goto	l862
  6797  013818                     u18500:
  6798                           
  6799                           ;main.c: 74: {;main.c: 76: APP_DeviceMSDTasks();
  6800                           
  6801                           ; BSR set to: 0
  6802                           
  6803                           ;main.c: 70: };main.c: 71: };main.c: 73: while(1)
  6804                           
  6805                           ; BSR set to: 0
  6806  013818  EC9A  F0AB         	call	_APP_DeviceMSDTasks	;wreg free
  6807                           
  6808                           ;main.c: 78: if(!os.done)
  6809  01381C  0101               	movlb	1	; () banked
  6810  01381E  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6811  013820  A4D8               	btfss	status,2,c
  6812  013822  D7FA               	goto	u18500
  6813                           
  6814                           ; BSR set to: 1
  6815  013824  0004               	clrwdt		;# 
  6816                           
  6817                           ;main.c: 84: APP_DeviceCustomHIDTasks();
  6818  013826  ECA7  F098         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6819                           
  6820                           ;main.c: 87: encoder_statemachine();
  6821  01382A  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6822                           
  6823                           ;main.c: 90: motor_process_cue();
  6824  01382E  EC72  F09E         	call	_motor_process_cue	;wreg free
  6825                           
  6826                           ;main.c: 93: adc_read_temperature();
  6827  013832  EC70  F078         	call	_adc_read_temperature	;wreg free
  6828                           
  6829                           ;main.c: 96: switch(os.timeSlot)
  6830  013836  D008               	goto	l867
  6831  013838                     
  6832                           ;main.c: 107: motor_calculate_position_in_degrees();
  6833  013838  EC39  F090         	call	_motor_calculate_position_in_degrees	;wreg free
  6834  01383C                     
  6835                           ;main.c: 110: display_prepare();
  6836  01383C  EC98  F051         	call	_display_prepare	;wreg free
  6837                           
  6838                           ;main.c: 111: break;
  6839  013840  D014               	goto	l869
  6840  013842                     
  6841                           ;main.c: 114: display_update();
  6842  013842  EC41  F0A8         	call	_display_update	;wreg free
  6843                           
  6844                           ;main.c: 116: }
  6845                           
  6846                           ;main.c: 115: break;
  6847  013846  D011               	goto	l869
  6848  013848                     l867:
  6849  013848  0101               	movlb	1	; () banked
  6850  01384A  5172               	movf	(_os+1)& (0+255),w,b	;volatile
  6851                           
  6852                           ; Switch size 1, requested type "space"
  6853                           ; Number of cases is 5, Range of values is 0 to 7
  6854                           ; switch strategies available:
  6855                           ; Name         Instructions Cycles
  6856                           ; simple_byte           16     9 (average)
  6857                           ;	Chosen strategy is simple_byte
  6858  01384C  0A00               	xorlw	0	; case 0
  6859  01384E  B4D8               	btfsc	status,2,c
  6860  013850  D00C               	goto	l869
  6861  013852  0A01               	xorlw	1	; case 1
  6862  013854  B4D8               	btfsc	status,2,c
  6863  013856  D009               	goto	l869
  6864  013858  0A04               	xorlw	4	; case 5
  6865  01385A  B4D8               	btfsc	status,2,c
  6866  01385C  D7ED               	goto	l871
  6867  01385E  0A03               	xorlw	3	; case 6
  6868  013860  B4D8               	btfsc	status,2,c
  6869  013862  D7EC               	goto	l872
  6870  013864  0A01               	xorlw	1	; case 7
  6871  013866  B4D8               	btfsc	status,2,c
  6872  013868  D7EC               	goto	l873
  6873  01386A                     l869:
  6874                           
  6875                           ;main.c: 118: os.done = 1;
  6876                           
  6877                           ; BSR set to: 1
  6878  01386A  0E01               	movlw	1
  6879  01386C  0101               	movlb	1	; () banked
  6880  01386E  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6881                           
  6882                           ; BSR set to: 1
  6883                           
  6884                           ; BSR set to: 1
  6885  013870  D7D3               	goto	u18500
  6886  013872                     __end_of_main:
  6887                           	opt stack 0
  6888                           tblptru	equ	0xFF8
  6889                           tblptrh	equ	0xFF7
  6890                           tblptrl	equ	0xFF6
  6891                           tablat	equ	0xFF5
  6892                           postinc0	equ	0xFEE
  6893                           wreg	equ	0xFE8
  6894                           postdec1	equ	0xFE5
  6895                           fsr1h	equ	0xFE2
  6896                           fsr1l	equ	0xFE1
  6897                           status	equ	0xFD8
  6898                           
  6899 ;; *************** function _system_init *****************
  6900 ;; Defined at:
  6901 ;;		line 177 in file "os.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;		None
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1    wreg      void 
  6908 ;; Registers used:
  6909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;Total ram usage:        0 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:   20
  6922 ;; This function calls:
  6923 ;;		__backlight_init
  6924 ;;		__system_pin_setup
  6925 ;;		__system_timer0_init
  6926 ;;		_adc_init
  6927 ;;		_configFile_read
  6928 ;;		_configFile_readDefault
  6929 ;;		_configFile_write
  6930 ;;		_display_init
  6931 ;;		_display_update
  6932 ;;		_encoder_init
  6933 ;;		_fat_init
  6934 ;;		_flash_init
  6935 ;;		_i2c_eeprom_readUint32
  6936 ;;		_i2c_init
  6937 ;;		_motor_calculate_position_in_degrees
  6938 ;;		_motor_init
  6939 ;; This function is called by:
  6940 ;;		_main
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text1
  6945  011944                     __ptext1:
  6946                           	opt stack 0
  6947  011944                     _system_init:
  6948                           	opt stack 10
  6949                           
  6950                           ;os.c: 180: _system_pin_setup();
  6951                           
  6952                           ; BSR set to: 1
  6953                           ;incstack = 0
  6954  011944  ECF7  F09F         	call	__system_pin_setup	;wreg free
  6955                           
  6956                           ;os.c: 183: adc_init();
  6957  011948  EC4D  F0A3         	call	_adc_init	;wreg free
  6958                           
  6959                           ;os.c: 186: flash_init();
  6960  01194C  ECBB  F0AB         	call	_flash_init	;wreg free
  6961                           
  6962                           ;os.c: 189: fat_init();
  6963  011950  ECA3  F0AB         	call	_fat_init	;wreg free
  6964                           
  6965                           ;os.c: 192: encoder_init();
  6966  011954  ECAF  F0AA         	call	_encoder_init	;wreg free
  6967                           
  6968                           ;os.c: 195: i2c_init();
  6969  011958  EC37  F0AB         	call	_i2c_init	;wreg free
  6970                           
  6971                           ;os.c: 198: display_init();
  6972  01195C  ECEB  F0A7         	call	_display_init	;wreg free
  6973                           
  6974                           ;os.c: 199: display_update();
  6975  011960  EC41  F0A8         	call	_display_update	;wreg free
  6976                           
  6977                           ;os.c: 200: _backlight_init();
  6978  011964  EC0C  F0AC         	call	__backlight_init	;wreg free
  6979                           
  6980                           ;os.c: 203: motor_init();
  6981  011968  EC28  F0AB         	call	_motor_init	;wreg free
  6982                           
  6983                           ;os.c: 206: configFile_readDefault();
  6984  01196C  EC92  F0A0         	call	_configFile_readDefault	;wreg free
  6985                           
  6986                           ;os.c: 209: configFile_read();
  6987  011970  EC1C  F07B         	call	_configFile_read	;wreg free
  6988                           
  6989                           ;os.c: 212: configFile_write();
  6990  011974  EC25  F061         	call	_configFile_write	;wreg free
  6991                           
  6992                           ;os.c: 215: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  6993  011978  0E01               	movlw	1
  6994  01197A  0101               	movlb	1	; () banked
  6995  01197C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  6996                           
  6997                           ; BSR set to: 1
  6998                           ;os.c: 216: os.busy = 0;
  6999  01197E  0E00               	movlw	0
  7000  011980  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
  7001                           
  7002                           ; BSR set to: 1
  7003                           ;os.c: 218: os.last_approach_direction = MOTOR_DIRECTION_CW;
  7004  011982  0E01               	movlw	1
  7005  011984  6F80               	movwf	(_os+15)& (0+255),b	;volatile
  7006                           
  7007                           ; BSR set to: 1
  7008                           ;os.c: 219: os.setup_step_size = 1000;
  7009  011986  0E03               	movlw	3
  7010  011988  6F82               	movwf	(_os+17)& (0+255),b	;volatile
  7011  01198A  0EE8               	movlw	232
  7012  01198C  6F81               	movwf	(_os+16)& (0+255),b	;volatile
  7013                           
  7014                           ; BSR set to: 1
  7015                           ;os.c: 220: os.approach_direction = MOTOR_DIRECTION_CW;
  7016  01198E  0E01               	movlw	1
  7017  011990  6F83               	movwf	(_os+18)& (0+255),b	;volatile
  7018                           
  7019                           ; BSR set to: 1
  7020                           ;os.c: 221: os.division = 36;
  7021  011992  0E00               	movlw	0
  7022  011994  6F85               	movwf	(_os+20)& (0+255),b	;volatile
  7023  011996  0E24               	movlw	36
  7024  011998  6F84               	movwf	(_os+19)& (0+255),b	;volatile
  7025                           
  7026                           ; BSR set to: 1
  7027                           ;os.c: 222: os.divide_step_size = 10;
  7028  01199A  0E0A               	movlw	10
  7029  01199C  6F86               	movwf	(_os+21)& (0+255),b	;volatile
  7030                           
  7031                           ; BSR set to: 1
  7032                           ;os.c: 223: os.divide_position = 0;
  7033  01199E  0E00               	movlw	0
  7034  0119A0  6F88               	movwf	(_os+23)& (0+255),b	;volatile
  7035  0119A2  0E00               	movlw	0
  7036  0119A4  6F87               	movwf	(_os+22)& (0+255),b	;volatile
  7037                           
  7038                           ; BSR set to: 1
  7039                           ;os.c: 224: os.divide_jump_size = 1;
  7040  0119A6  0E00               	movlw	0
  7041  0119A8  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
  7042  0119AA  0E01               	movlw	1
  7043  0119AC  6F89               	movwf	(_os+24)& (0+255),b	;volatile
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;os.c: 225: os.arc_step_size = 1000;
  7047  0119AE  0E03               	movlw	3
  7048  0119B0  6F8C               	movwf	(_os+27)& (0+255),b	;volatile
  7049  0119B2  0EE8               	movlw	232
  7050  0119B4  6F8B               	movwf	(_os+26)& (0+255),b	;volatile
  7051                           
  7052                           ; BSR set to: 1
  7053                           ;os.c: 226: os.arc_size = 1000;
  7054  0119B6  0EE8               	movlw	232
  7055  0119B8  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
  7056  0119BA  0E03               	movlw	3
  7057  0119BC  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
  7058  0119BE  0E00               	movlw	0
  7059  0119C0  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
  7060  0119C2  0E00               	movlw	0
  7061  0119C4  6F90               	movwf	(_os+31)& (0+255),b	;volatile
  7062                           
  7063                           ; BSR set to: 1
  7064                           ;os.c: 227: os.arc_speed = config.initial_speed_arc;
  7065  0119C6  C1AE  F191         	movff	_config+13,_os+32	;volatile
  7066  0119CA  C1AF  F192         	movff	_config+14,_os+33	;volatile
  7067                           
  7068                           ; BSR set to: 1
  7069                           ;os.c: 228: os.arc_direction = MOTOR_DIRECTION_CW;
  7070  0119CE  0E01               	movlw	1
  7071  0119D0  6F93               	movwf	(_os+34)& (0+255),b	;volatile
  7072                           
  7073                           ; BSR set to: 1
  7074                           ;os.c: 229: os.manual_speed = config.initial_speed_manual;
  7075  0119D2  C1B2  F194         	movff	_config+17,_os+35	;volatile
  7076  0119D6  C1B3  F195         	movff	_config+18,_os+36	;volatile
  7077                           
  7078                           ; BSR set to: 1
  7079                           ;os.c: 230: os.manual_direction = MOTOR_DIRECTION_CW;
  7080  0119DA  0E01               	movlw	1
  7081  0119DC  6F96               	movwf	(_os+37)& (0+255),b	;volatile
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;os.c: 231: os.beep_count = 0;
  7085  0119DE  0E00               	movlw	0
  7086  0119E0  6F97               	movwf	(_os+38)& (0+255),b	;volatile
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;os.c: 234: os.current_position_in_steps = i2c_eeprom_readUint32(0x200);
  7090  0119E2  0E02               	movlw	2
  7091  0119E4  0100               	movlb	0	; () banked
  7092  0119E6  6F7A               	movwf	(i2c_eeprom_readUint32@address+1)& (0+255),b
  7093  0119E8  0E00               	movlw	0
  7094  0119EA  6F79               	movwf	i2c_eeprom_readUint32@address& (0+255),b
  7095  0119EC  ECA3  F0A9         	call	_i2c_eeprom_readUint32	;wreg free
  7096  0119F0  C079  F178         	movff	?_i2c_eeprom_readUint32,_os+7	;volatile
  7097  0119F4  C07A  F179         	movff	?_i2c_eeprom_readUint32+1,_os+8	;volatile
  7098  0119F8  C07B  F17A         	movff	?_i2c_eeprom_readUint32+2,_os+9	;volatile
  7099  0119FC  C07C  F17B         	movff	?_i2c_eeprom_readUint32+3,_os+10	;volatile
  7100                           
  7101                           ;os.c: 235: if(os.current_position_in_steps>config.full_circle_in_steps)
  7102  011A00  0101               	movlb	1	; () banked
  7103  011A02  5178               	movf	(_os+7)& (0+255),w,b	;volatile
  7104  011A04  5DA1               	subwf	_config& (0+255),w,b
  7105  011A06  5179               	movf	(_os+8)& (0+255),w,b	;volatile
  7106  011A08  59A2               	subwfb	(_config+1)& (0+255),w,b
  7107  011A0A  517A               	movf	(_os+9)& (0+255),w,b	;volatile
  7108  011A0C  59A3               	subwfb	(_config+2)& (0+255),w,b
  7109  011A0E  517B               	movf	(_os+10)& (0+255),w,b	;volatile
  7110  011A10  59A4               	subwfb	(_config+3)& (0+255),w,b
  7111  011A12  B0D8               	btfsc	status,0,c
  7112  011A14  D008               	goto	l1082
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;os.c: 236: {;os.c: 237: os.current_position_in_steps = 0;
  7116  011A16  0E00               	movlw	0
  7117  011A18  6F78               	movwf	(_os+7)& (0+255),b	;volatile
  7118  011A1A  0E00               	movlw	0
  7119  011A1C  6F79               	movwf	(_os+8)& (0+255),b	;volatile
  7120  011A1E  0E00               	movlw	0
  7121  011A20  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
  7122  011A22  0E00               	movlw	0
  7123  011A24  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
  7124  011A26                     l1082:
  7125                           
  7126                           ; BSR set to: 1
  7127                           ;os.c: 238: };os.c: 239: motor_calculate_position_in_degrees();
  7128                           
  7129                           ; BSR set to: 1
  7130  011A26  EC39  F090         	call	_motor_calculate_position_in_degrees	;wreg free
  7131                           
  7132                           ;os.c: 242: _system_timer0_init();
  7133  011A2A  ECB9  F0A9         	call	__system_timer0_init	;wreg free
  7134  011A2E  0012               	return		;funcret
  7135  011A30                     __end_of_system_init:
  7136                           	opt stack 0
  7137                           tblptru	equ	0xFF8
  7138                           tblptrh	equ	0xFF7
  7139                           tblptrl	equ	0xFF6
  7140                           tablat	equ	0xFF5
  7141                           postinc0	equ	0xFEE
  7142                           wreg	equ	0xFE8
  7143                           postdec1	equ	0xFE5
  7144                           fsr1h	equ	0xFE2
  7145                           fsr1l	equ	0xFE1
  7146                           status	equ	0xFD8
  7147                           
  7148 ;; *************** function _motor_init *****************
  7149 ;; Defined at:
  7150 ;;		line 178 in file "motor.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;Total ram usage:        0 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:   10
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_system_init
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text2
  7179  015650                     __ptext2:
  7180                           	opt stack 0
  7181  015650                     _motor_init:
  7182                           	opt stack 19
  7183                           
  7184                           ;motor.c: 181: motor_cue_read_index = 0;
  7185                           
  7186                           ;incstack = 0
  7187  015650  0E00               	movlw	0
  7188  015652  0101               	movlb	1	; () banked
  7189  015654  6F58               	movwf	_motor_cue_read_index& (0+255),b
  7190                           
  7191                           ;motor.c: 182: motor_cue_write_index = 0;
  7192  015656  0E00               	movlw	0
  7193  015658  6F57               	movwf	_motor_cue_write_index& (0+255),b
  7194                           
  7195                           ; BSR set to: 1
  7196                           ;motor.c: 188: CCPTMRS0bits.C2TSEL = 0b000;
  7197  01565A  010F               	movlb	15	; () banked
  7198  01565C  9752               	bcf	82,3,b	;volatile
  7199  01565E  9952               	bcf	82,4,b	;volatile
  7200  015660  9B52               	bcf	82,5,b	;volatile
  7201                           
  7202                           ;motor.c: 193: CCP1CONbits.P1M = 0b00;
  7203  015662  0E3F               	movlw	-193
  7204  015664  16BA               	andwf	4026,f,c	;volatile
  7205                           
  7206                           ;motor.c: 196: CCP1CONbits.DC1B = 0b00;
  7207  015666  0ECF               	movlw	-49
  7208  015668  16BA               	andwf	4026,f,c	;volatile
  7209                           
  7210                           ; BSR set to: 15
  7211                           ;motor.c: 199: LATBbits.LB0 = 0;
  7212  01566A  908A               	bcf	3978,0,c	;volatile
  7213                           
  7214                           ; BSR set to: 15
  7215  01566C  0012               	return		;funcret
  7216  01566E                     __end_of_motor_init:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           postinc0	equ	0xFEE
  7223                           wreg	equ	0xFE8
  7224                           postdec1	equ	0xFE5
  7225                           fsr1h	equ	0xFE2
  7226                           fsr1l	equ	0xFE1
  7227                           status	equ	0xFD8
  7228                           
  7229 ;; *************** function _i2c_init *****************
  7230 ;; Defined at:
  7231 ;;		line 24 in file "i2c.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;		None
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;		None
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      void 
  7238 ;; Registers used:
  7239 ;;		wreg, status,2
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7249 ;;Total ram usage:        0 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:   10
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_system_init
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text3
  7260  01566E                     __ptext3:
  7261                           	opt stack 0
  7262  01566E                     _i2c_init:
  7263                           	opt stack 19
  7264                           
  7265                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  7266                           
  7267                           ; BSR set to: 15
  7268                           ;incstack = 0
  7269  01566E  8A93               	bsf	3987,5,c	;volatile
  7270                           
  7271                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  7272  015670  8893               	bsf	3987,4,c	;volatile
  7273                           
  7274                           ;i2c.c: 29: SSP1STATbits.SMP = 1;
  7275  015672  8EC7               	bsf	4039,7,c	;volatile
  7276                           
  7277                           ;i2c.c: 30: SSP1STATbits.CKE = 0;
  7278  015674  9CC7               	bcf	4039,6,c	;volatile
  7279                           
  7280                           ;i2c.c: 32: SSP1ADD = 119;
  7281  015676  0E77               	movlw	119
  7282  015678  6EC8               	movwf	4040,c	;volatile
  7283                           
  7284                           ;i2c.c: 34: SSP1CON1bits.WCOL = 0;
  7285  01567A  9EC6               	bcf	4038,7,c	;volatile
  7286                           
  7287                           ;i2c.c: 35: SSP1CON1bits.SSPOV = 0;
  7288  01567C  9CC6               	bcf	4038,6,c	;volatile
  7289                           
  7290                           ;i2c.c: 36: SSP1CON1bits.SSPM = 0b1000;
  7291  01567E  50C6               	movf	4038,w,c	;volatile
  7292  015680  0BF0               	andlw	-16
  7293  015682  0908               	iorlw	8
  7294  015684  6EC6               	movwf	4038,c	;volatile
  7295                           
  7296                           ;i2c.c: 37: SSP1CON1bits.SSPEN = 1;
  7297  015686  8AC6               	bsf	4038,5,c	;volatile
  7298  015688  0012               	return		;funcret
  7299  01568A                     __end_of_i2c_init:
  7300                           	opt stack 0
  7301                           tblptru	equ	0xFF8
  7302                           tblptrh	equ	0xFF7
  7303                           tblptrl	equ	0xFF6
  7304                           tablat	equ	0xFF5
  7305                           postinc0	equ	0xFEE
  7306                           wreg	equ	0xFE8
  7307                           postdec1	equ	0xFE5
  7308                           fsr1h	equ	0xFE2
  7309                           fsr1l	equ	0xFE1
  7310                           status	equ	0xFD8
  7311                           
  7312 ;; *************** function _i2c_eeprom_readUint32 *****************
  7313 ;; Defined at:
  7314 ;;		line 235 in file "i2c.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  address         2   25[BANK0 ] unsigned int 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  data            4   29[BANK0 ] unsigned long 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  4   25[BANK0 ] unsigned long 
  7321 ;; Registers used:
  7322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7329 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7331 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;Total ram usage:        8 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:   13
  7335 ;; This function calls:
  7336 ;;		_i2c_eeprom_read
  7337 ;; This function is called by:
  7338 ;;		_system_init
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text4
  7343  015346                     __ptext4:
  7344                           	opt stack 0
  7345  015346                     _i2c_eeprom_readUint32:
  7346                           	opt stack 16
  7347                           
  7348                           ;i2c.c: 237: uint32_t data;;i2c.c: 238: i2c_eeprom_read(address, &data, 4);
  7349                           
  7350                           ;incstack = 0
  7351  015346  C079  F071         	movff	i2c_eeprom_readUint32@address,i2c_eeprom_read@address
  7352  01534A  C07A  F072         	movff	i2c_eeprom_readUint32@address+1,i2c_eeprom_read@address+1
  7353  01534E  0E7D               	movlw	low i2c_eeprom_readUint32@data
  7354  015350  0100               	movlb	0	; () banked
  7355  015352  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7356  015354  0E00               	movlw	high i2c_eeprom_readUint32@data
  7357  015356  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7358  015358  0E04               	movlw	4
  7359  01535A  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7360  01535C  ECFD  F0A3         	call	_i2c_eeprom_read	;wreg free
  7361                           
  7362                           ;i2c.c: 239: return data;
  7363  015360  C07D  F079         	movff	i2c_eeprom_readUint32@data,?_i2c_eeprom_readUint32
  7364  015364  C07E  F07A         	movff	i2c_eeprom_readUint32@data+1,?_i2c_eeprom_readUint32+1
  7365  015368  C07F  F07B         	movff	i2c_eeprom_readUint32@data+2,?_i2c_eeprom_readUint32+2
  7366  01536C  C080  F07C         	movff	i2c_eeprom_readUint32@data+3,?_i2c_eeprom_readUint32+3
  7367  015370  0012               	return	
  7368  015372                     __end_of_i2c_eeprom_readUint32:
  7369                           	opt stack 0
  7370                           tblptru	equ	0xFF8
  7371                           tblptrh	equ	0xFF7
  7372                           tblptrl	equ	0xFF6
  7373                           tablat	equ	0xFF5
  7374                           postinc0	equ	0xFEE
  7375                           wreg	equ	0xFE8
  7376                           postdec1	equ	0xFE5
  7377                           fsr1h	equ	0xFE2
  7378                           fsr1l	equ	0xFE1
  7379                           status	equ	0xFD8
  7380                           
  7381 ;; *************** function _i2c_eeprom_read *****************
  7382 ;; Defined at:
  7383 ;;		line 263 in file "i2c.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  address         2   17[BANK0 ] unsigned int 
  7386 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7387 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), 
  7388 ;;  length          1   21[BANK0 ] unsigned char 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7391 ;;  addr            1   23[BANK0 ] unsigned char 
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      void 
  7394 ;; Registers used:
  7395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7401 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7402 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;Total ram usage:        8 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:   12
  7408 ;; This function calls:
  7409 ;;		__i2c_eeprom_busy
  7410 ;;		__i2c_read
  7411 ;;		__i2c_write
  7412 ;; This function is called by:
  7413 ;;		_i2c_eeprom_readUint32
  7414 ;;		_i2c_eeprom_readUint16
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text5
  7419  0147FA                     __ptext5:
  7420                           	opt stack 0
  7421  0147FA                     _i2c_eeprom_read:
  7422                           	opt stack 16
  7423                           
  7424                           ;i2c.c: 265: uint8_t slave_address;;i2c.c: 266: uint8_t addr;;i2c.c: 267: addr = address
      +                           & 0xFF;
  7425                           
  7426                           ;incstack = 0
  7427  0147FA  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7428                           
  7429                           ;i2c.c: 268: address &= 0b0000011100000000;
  7430  0147FE  0100               	movlb	0	; () banked
  7431  014800  0E00               	movlw	0
  7432  014802  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7433  014804  0E07               	movlw	7
  7434  014806  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7435                           
  7436                           ;i2c.c: 269: address >>= 7;
  7437  014808  0E07               	movlw	7
  7438  01480A  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7439  01480C                     u13935:
  7440  01480C  90D8               	bcf	status,0,c
  7441  01480E  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7442  014810  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7443  014812  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7444  014814  D7FB               	goto	u13935
  7445                           
  7446                           ;i2c.c: 270: slave_address = 0b10100000 | address;
  7447  014816  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7448  014818  09A0               	iorlw	160
  7449  01481A  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7450  01481C                     
  7451                           ; BSR set to: 0
  7452                           
  7453                           ; BSR set to: 0
  7454  01481C  EC39  F0AA         	call	__i2c_eeprom_busy	;wreg free
  7455  014820  0900               	iorlw	0
  7456  014822  A4D8               	btfss	status,2,c
  7457  014824  D7FB               	goto	l1213
  7458                           
  7459                           ;i2c.c: 275: _i2c_write(slave_address, &addr, 1);
  7460  014826  0E77               	movlw	low i2c_eeprom_read@addr
  7461  014828  0100               	movlb	0	; () banked
  7462  01482A  6F65               	movwf	__i2c_write@data& (0+255),b
  7463  01482C  0E00               	movlw	high i2c_eeprom_read@addr
  7464  01482E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7465  014830  0E01               	movlw	1
  7466  014832  6F67               	movwf	__i2c_write@length& (0+255),b
  7467  014834  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7468  014836  EC74  F0A5         	call	__i2c_write
  7469                           
  7470                           ;i2c.c: 276: _i2c_read(slave_address, &data[0], length);
  7471  01483A  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7472  01483E  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7473  014842  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7474  014846  0100               	movlb	0	; () banked
  7475  014848  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7476  01484A  ECCE  F09A         	call	__i2c_read
  7477  01484E  0012               	return		;funcret
  7478  014850                     __end_of_i2c_eeprom_read:
  7479                           	opt stack 0
  7480                           tblptru	equ	0xFF8
  7481                           tblptrh	equ	0xFF7
  7482                           tblptrl	equ	0xFF6
  7483                           tablat	equ	0xFF5
  7484                           postinc0	equ	0xFEE
  7485                           wreg	equ	0xFE8
  7486                           postdec1	equ	0xFE5
  7487                           fsr1h	equ	0xFE2
  7488                           fsr1l	equ	0xFE1
  7489                           status	equ	0xFD8
  7490                           
  7491 ;; *************** function __i2c_read *****************
  7492 ;; Defined at:
  7493 ;;		line 103 in file "i2c.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  slave_addres    1    wreg     unsigned char 
  7496 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7497 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), i2c_eeprom_readByte@addr(1), 
  7498 ;;  length          1    7[BANK0 ] unsigned char 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7501 ;;  cntr            1   16[BANK0 ] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7511 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7513 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7514 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7515 ;;Total ram usage:       12 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:   11
  7518 ;; This function calls:
  7519 ;;		__i2c_acknowledge
  7520 ;;		__i2c_get
  7521 ;;		__i2c_not_acknowledge
  7522 ;;		__i2c_send
  7523 ;;		__i2c_start
  7524 ;;		__i2c_stop
  7525 ;;		__i2c_wait_idle
  7526 ;; This function is called by:
  7527 ;;		_i2c_eeprom_read
  7528 ;;		_i2c_eeprom_readByte
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text6
  7533  01359C                     __ptext6:
  7534                           	opt stack 0
  7535  01359C                     __i2c_read:
  7536                           	opt stack 16
  7537                           
  7538                           ;incstack = 0
  7539                           ;__i2c_read@slave_address stored from wreg
  7540  01359C  0100               	movlb	0	; () banked
  7541  01359E  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7542                           
  7543                           ;i2c.c: 105: uint8_t cntr;;i2c.c: 107: _i2c_wait_idle();
  7544  0135A0  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
  7545                           
  7546                           ;i2c.c: 108: _i2c_start();
  7547  0135A4  ECFC  F0AB         	call	__i2c_start	;wreg free
  7548                           
  7549                           ;i2c.c: 109: _i2c_wait_idle();
  7550  0135A8  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
  7551                           
  7552                           ;i2c.c: 110: _i2c_send(slave_address | 0x01);
  7553  0135AC  0100               	movlb	0	; () banked
  7554  0135AE  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7555  0135B0  0901               	iorlw	1
  7556  0135B2  ECE9  F0AB         	call	__i2c_send
  7557                           
  7558                           ;i2c.c: 111: _i2c_wait_idle();
  7559  0135B6  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
  7560                           
  7561                           ;i2c.c: 121: for(cntr=0; cntr<length-1; ++cntr)
  7562  0135BA  0E00               	movlw	0
  7563  0135BC  0100               	movlb	0	; () banked
  7564  0135BE  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7565  0135C0  D00F               	goto	l1164
  7566  0135C2                     
  7567                           ; BSR set to: 0
  7568                           ;i2c.c: 122: {;i2c.c: 123: data[cntr] = _i2c_get();
  7569                           
  7570                           ; BSR set to: 0
  7571  0135C2  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7572  0135C4  0D01               	mullw	1
  7573  0135C6  50F3               	movf	prodl,w,c
  7574  0135C8  2565               	addwf	__i2c_read@data& (0+255),w,b
  7575  0135CA  6ED9               	movwf	fsr2l,c
  7576  0135CC  50F4               	movf	prodh,w,c
  7577  0135CE  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7578  0135D0  6EDA               	movwf	fsr2h,c
  7579  0135D2  ECDF  F0AB         	call	__i2c_get	;wreg free
  7580  0135D6  6EDF               	movwf	indf2,c
  7581                           
  7582                           ;i2c.c: 124: _i2c_acknowledge();
  7583  0135D8  ECE4  F0AB         	call	__i2c_acknowledge	;wreg free
  7584  0135DC  0100               	movlb	0	; () banked
  7585  0135DE  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7586  0135E0                     l1164:
  7587                           
  7588                           ; BSR set to: 0
  7589                           
  7590                           ; BSR set to: 0
  7591  0135E0  0EFF               	movlw	255
  7592  0135E2  6F68               	movwf	??__i2c_read& (0+255),b
  7593  0135E4  0EFF               	movlw	255
  7594  0135E6  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7595  0135E8  5167               	movf	__i2c_read@length& (0+255),w,b
  7596  0135EA  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7597  0135EC  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7598  0135EE  5168               	movf	??__i2c_read& (0+255),w,b
  7599  0135F0  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7600  0135F2  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7601  0135F4  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7602  0135F6  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7603  0135F8  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7604  0135FA  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7605  0135FC  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7606  0135FE  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7607  013600  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7608  013602  0A80               	xorlw	128
  7609  013604  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7610  013606  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7611  013608  0A80               	xorlw	128
  7612  01360A  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7613  01360C  A0D8               	btfss	status,0,c
  7614  01360E  D7D9               	goto	l1165
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;i2c.c: 125: };i2c.c: 126: data[cntr] = _i2c_get();
  7618                           
  7619                           ; BSR set to: 0
  7620  013610  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7621  013612  0D01               	mullw	1
  7622  013614  50F3               	movf	prodl,w,c
  7623  013616  2565               	addwf	__i2c_read@data& (0+255),w,b
  7624  013618  6ED9               	movwf	fsr2l,c
  7625  01361A  50F4               	movf	prodh,w,c
  7626  01361C  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7627  01361E  6EDA               	movwf	fsr2h,c
  7628  013620  ECDF  F0AB         	call	__i2c_get	;wreg free
  7629  013624  6EDF               	movwf	indf2,c
  7630                           
  7631                           ;i2c.c: 127: _i2c_not_acknowledge();
  7632  013626  ECDA  F0AB         	call	__i2c_not_acknowledge	;wreg free
  7633                           
  7634                           ;i2c.c: 129: _i2c_stop();
  7635  01362A  ECF8  F0AB         	call	__i2c_stop	;wreg free
  7636  01362E  0012               	return		;funcret
  7637  013630                     __end_of__i2c_read:
  7638                           	opt stack 0
  7639                           tblptru	equ	0xFF8
  7640                           tblptrh	equ	0xFF7
  7641                           tblptrl	equ	0xFF6
  7642                           tablat	equ	0xFF5
  7643                           prodh	equ	0xFF4
  7644                           prodl	equ	0xFF3
  7645                           postinc0	equ	0xFEE
  7646                           wreg	equ	0xFE8
  7647                           postdec1	equ	0xFE5
  7648                           fsr1h	equ	0xFE2
  7649                           fsr1l	equ	0xFE1
  7650                           indf2	equ	0xFDF
  7651                           fsr2h	equ	0xFDA
  7652                           fsr2l	equ	0xFD9
  7653                           status	equ	0xFD8
  7654                           
  7655 ;; *************** function __i2c_not_acknowledge *****************
  7656 ;; Defined at:
  7657 ;;		line 76 in file "i2c.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		None
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7675 ;;Total ram usage:        0 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:   10
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		__i2c_read
  7682 ;;		_i2c_adc_read
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text7
  7687  0157B4                     __ptext7:
  7688                           	opt stack 0
  7689  0157B4                     __i2c_not_acknowledge:
  7690                           	opt stack 16
  7691                           
  7692                           ;i2c.c: 78: SSP1CON2bits.ACKDT = 1;
  7693                           
  7694                           ;incstack = 0
  7695  0157B4  8AC5               	bsf	4037,5,c	;volatile
  7696                           
  7697                           ;i2c.c: 79: SSP1CON2bits.ACKEN = 1;
  7698  0157B6  88C5               	bsf	4037,4,c	;volatile
  7699  0157B8  A8C5               	btfss	4037,4,c	;volatile
  7700  0157BA  0012               	return	
  7701  0157BC  D7FD               	goto	l1153
  7702  0157BE                     __end_of__i2c_not_acknowledge:
  7703                           	opt stack 0
  7704                           tblptru	equ	0xFF8
  7705                           tblptrh	equ	0xFF7
  7706                           tblptrl	equ	0xFF6
  7707                           tablat	equ	0xFF5
  7708                           prodh	equ	0xFF4
  7709                           prodl	equ	0xFF3
  7710                           postinc0	equ	0xFEE
  7711                           wreg	equ	0xFE8
  7712                           postdec1	equ	0xFE5
  7713                           fsr1h	equ	0xFE2
  7714                           fsr1l	equ	0xFE1
  7715                           indf2	equ	0xFDF
  7716                           fsr2h	equ	0xFDA
  7717                           fsr2l	equ	0xFD9
  7718                           status	equ	0xFD8
  7719                           
  7720 ;; *************** function __i2c_get *****************
  7721 ;; Defined at:
  7722 ;;		line 56 in file "i2c.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      unsigned char 
  7729 ;; Registers used:
  7730 ;;		wreg, status,2
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7740 ;;Total ram usage:        0 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:   10
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		__i2c_read
  7747 ;;		_i2c_adc_read
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text8
  7752  0157BE                     __ptext8:
  7753                           	opt stack 0
  7754  0157BE                     __i2c_get:
  7755                           	opt stack 16
  7756                           
  7757                           ;i2c.c: 58: SSP1CON2bits.RCEN = 1 ;
  7758                           
  7759                           ;incstack = 0
  7760  0157BE  86C5               	bsf	4037,3,c	;volatile
  7761  0157C0  B6C5               	btfsc	4037,3,c	;volatile
  7762  0157C2  D7FE               	goto	l1135
  7763                           
  7764                           ;i2c.c: 60: return SSP1BUF;
  7765  0157C4  50C9               	movf	4041,w,c	;volatile
  7766  0157C6  0012               	return	
  7767  0157C8                     __end_of__i2c_get:
  7768                           	opt stack 0
  7769                           tblptru	equ	0xFF8
  7770                           tblptrh	equ	0xFF7
  7771                           tblptrl	equ	0xFF6
  7772                           tablat	equ	0xFF5
  7773                           prodh	equ	0xFF4
  7774                           prodl	equ	0xFF3
  7775                           postinc0	equ	0xFEE
  7776                           wreg	equ	0xFE8
  7777                           postdec1	equ	0xFE5
  7778                           fsr1h	equ	0xFE2
  7779                           fsr1l	equ	0xFE1
  7780                           indf2	equ	0xFDF
  7781                           fsr2h	equ	0xFDA
  7782                           fsr2l	equ	0xFD9
  7783                           status	equ	0xFD8
  7784                           
  7785 ;; *************** function __i2c_acknowledge *****************
  7786 ;; Defined at:
  7787 ;;		line 69 in file "i2c.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;		None
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;		None
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  1    wreg      void 
  7794 ;; Registers used:
  7795 ;;		None
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7805 ;;Total ram usage:        0 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:   10
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		__i2c_read
  7812 ;;		_i2c_adc_read
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           	psect	text9
  7817  0157C8                     __ptext9:
  7818                           	opt stack 0
  7819  0157C8                     __i2c_acknowledge:
  7820                           	opt stack 16
  7821                           
  7822                           ;i2c.c: 71: SSP1CON2bits.ACKDT = 0;
  7823                           
  7824                           ;incstack = 0
  7825  0157C8  9AC5               	bcf	4037,5,c	;volatile
  7826                           
  7827                           ;i2c.c: 72: SSP1CON2bits.ACKEN = 1;
  7828  0157CA  88C5               	bsf	4037,4,c	;volatile
  7829  0157CC  A8C5               	btfss	4037,4,c	;volatile
  7830  0157CE  0012               	return	
  7831  0157D0  D7FD               	goto	l1147
  7832  0157D2                     __end_of__i2c_acknowledge:
  7833                           	opt stack 0
  7834                           tblptru	equ	0xFF8
  7835                           tblptrh	equ	0xFF7
  7836                           tblptrl	equ	0xFF6
  7837                           tablat	equ	0xFF5
  7838                           prodh	equ	0xFF4
  7839                           prodl	equ	0xFF3
  7840                           postinc0	equ	0xFEE
  7841                           wreg	equ	0xFE8
  7842                           postdec1	equ	0xFE5
  7843                           fsr1h	equ	0xFE2
  7844                           fsr1l	equ	0xFE1
  7845                           indf2	equ	0xFDF
  7846                           fsr2h	equ	0xFDA
  7847                           fsr2l	equ	0xFD9
  7848                           status	equ	0xFD8
  7849                           
  7850 ;; *************** function __i2c_eeprom_busy *****************
  7851 ;; Defined at:
  7852 ;;		line 169 in file "i2c.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;  busy            1    5[BANK0 ] unsigned char 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      unsigned char 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7869 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7870 ;;Total ram usage:        1 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:   11
  7873 ;; This function calls:
  7874 ;;		__i2c_send
  7875 ;;		__i2c_start
  7876 ;;		__i2c_stop
  7877 ;;		__i2c_wait_idle
  7878 ;; This function is called by:
  7879 ;;		_i2c_eeprom_read
  7880 ;;		_i2c_eeprom_writeByte
  7881 ;;		_i2c_eeprom_readByte
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text10
  7886  015472                     __ptext10:
  7887                           	opt stack 0
  7888  015472                     __i2c_eeprom_busy:
  7889                           	opt stack 16
  7890                           
  7891                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
  7892                           
  7893                           ;incstack = 0
  7894  015472  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
  7895                           
  7896                           ;i2c.c: 173: _i2c_start();
  7897  015476  ECFC  F0AB         	call	__i2c_start	;wreg free
  7898                           
  7899                           ;i2c.c: 174: _i2c_wait_idle();
  7900  01547A  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
  7901                           
  7902                           ;i2c.c: 175: _i2c_send(0b10100000);
  7903  01547E  0EA0               	movlw	160
  7904  015480  ECE9  F0AB         	call	__i2c_send
  7905                           
  7906                           ;i2c.c: 176: _i2c_wait_idle();
  7907  015484  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
  7908                           
  7909                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
  7910  015488  0E00               	movlw	0
  7911  01548A  BCC5               	btfsc	4037,6,c	;volatile
  7912  01548C  0E01               	movlw	1
  7913  01548E  0100               	movlb	0	; () banked
  7914  015490  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;i2c.c: 181: _i2c_stop();
  7918  015492  ECF8  F0AB         	call	__i2c_stop	;wreg free
  7919                           
  7920                           ;i2c.c: 183: return 0;
  7921  015496  0E00               	movlw	0
  7922  015498  0012               	return	
  7923  01549A                     __end_of__i2c_eeprom_busy:
  7924                           	opt stack 0
  7925                           tblptru	equ	0xFF8
  7926                           tblptrh	equ	0xFF7
  7927                           tblptrl	equ	0xFF6
  7928                           tablat	equ	0xFF5
  7929                           prodh	equ	0xFF4
  7930                           prodl	equ	0xFF3
  7931                           postinc0	equ	0xFEE
  7932                           wreg	equ	0xFE8
  7933                           postdec1	equ	0xFE5
  7934                           fsr1h	equ	0xFE2
  7935                           fsr1l	equ	0xFE1
  7936                           indf2	equ	0xFDF
  7937                           fsr2h	equ	0xFDA
  7938                           fsr2l	equ	0xFD9
  7939                           status	equ	0xFD8
  7940                           
  7941 ;; *************** function _flash_init *****************
  7942 ;; Defined at:
  7943 ;;		line 361 in file "flash.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;		None
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;		None
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      void 
  7950 ;; Registers used:
  7951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7961 ;;Total ram usage:        0 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:   14
  7964 ;; This function calls:
  7965 ;;		__flash_set_page_size
  7966 ;;		_spi_init
  7967 ;; This function is called by:
  7968 ;;		_system_init
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text11
  7973  015776                     __ptext11:
  7974                           	opt stack 0
  7975  015776                     _flash_init:
  7976                           	opt stack 15
  7977                           
  7978                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  7979                           
  7980                           ;incstack = 0
  7981  015776  0E00               	movlw	0
  7982  015778  EC4F  F0A7         	call	_spi_init
  7983                           
  7984                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  7985  01577C  0E00               	movlw	0
  7986  01577E  EC1D  F09F         	call	__flash_set_page_size
  7987  015782  0012               	return		;funcret
  7988  015784                     __end_of_flash_init:
  7989                           	opt stack 0
  7990                           tblptru	equ	0xFF8
  7991                           tblptrh	equ	0xFF7
  7992                           tblptrl	equ	0xFF6
  7993                           tablat	equ	0xFF5
  7994                           prodh	equ	0xFF4
  7995                           prodl	equ	0xFF3
  7996                           postinc0	equ	0xFEE
  7997                           wreg	equ	0xFE8
  7998                           postdec1	equ	0xFE5
  7999                           fsr1h	equ	0xFE2
  8000                           fsr1l	equ	0xFE1
  8001                           indf2	equ	0xFDF
  8002                           fsr2h	equ	0xFDA
  8003                           fsr2l	equ	0xFD9
  8004                           status	equ	0xFD8
  8005                           
  8006 ;; *************** function _spi_init *****************
  8007 ;; Defined at:
  8008 ;;		line 89 in file "spi.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  configuratio    1    wreg     enum E6803
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  configuratio    1    3[BANK0 ] enum E6803
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      void 
  8015 ;; Registers used:
  8016 ;;		wreg, status,2, status,0, cstack
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8026 ;;Total ram usage:        1 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:   11
  8029 ;; This function calls:
  8030 ;;		__spi_init
  8031 ;; This function is called by:
  8032 ;;		_flash_init
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           	psect	text12
  8037  014E9E                     __ptext12:
  8038                           	opt stack 0
  8039  014E9E                     _spi_init:
  8040                           	opt stack 17
  8041                           
  8042                           ;incstack = 0
  8043                           ;spi_init@configuration stored from wreg
  8044  014E9E  0100               	movlb	0	; () banked
  8045  014EA0  6F63               	movwf	spi_init@configuration& (0+255),b
  8046                           
  8047                           ;spi.c: 91: switch(configuration)
  8048  014EA2  D012               	goto	l2164
  8049  014EA4                     
  8050                           ;spi.c: 94: _spi_init(config_internal);
  8051  014EA4  C136  F060         	movff	_config_internal,__spi_init@details
  8052  014EA8  C137  F061         	movff	_config_internal+1,__spi_init@details+1
  8053  014EAC  C138  F062         	movff	_config_internal+2,__spi_init@details+2
  8054  014EB0  EC25  F0A8         	call	__spi_init	;wreg free
  8055                           
  8056                           ;spi.c: 95: break;
  8057  014EB4  D011               	goto	l2166
  8058  014EB6                     
  8059                           ;spi.c: 98: _spi_init(config_external);
  8060  014EB6  C133  F060         	movff	_config_external,__spi_init@details
  8061  014EBA  C134  F061         	movff	_config_external+1,__spi_init@details+1
  8062  014EBE  C135  F062         	movff	_config_external+2,__spi_init@details+2
  8063  014EC2  EC25  F0A8         	call	__spi_init	;wreg free
  8064                           
  8065                           ;spi.c: 100: }
  8066                           
  8067                           ;spi.c: 99: break;
  8068  014EC6  D008               	goto	l2166
  8069  014EC8                     l2164:
  8070  014EC8  0100               	movlb	0	; () banked
  8071  014ECA  5163               	movf	spi_init@configuration& (0+255),w,b
  8072                           
  8073                           ; Switch size 1, requested type "space"
  8074                           ; Number of cases is 2, Range of values is 0 to 1
  8075                           ; switch strategies available:
  8076                           ; Name         Instructions Cycles
  8077                           ; simple_byte            7     4 (average)
  8078                           ;	Chosen strategy is simple_byte
  8079  014ECC  0A00               	xorlw	0	; case 0
  8080  014ECE  B4D8               	btfsc	status,2,c
  8081  014ED0  D7E9               	goto	l2165
  8082  014ED2  0A01               	xorlw	1	; case 1
  8083  014ED4  B4D8               	btfsc	status,2,c
  8084  014ED6  D7EF               	goto	l2167
  8085  014ED8                     l2166:
  8086                           
  8087                           ;spi.c: 102: active_configuration = configuration;
  8088  014ED8  C063  F159         	movff	spi_init@configuration,_active_configuration
  8089  014EDC  0012               	return		;funcret
  8090  014EDE                     __end_of_spi_init:
  8091                           	opt stack 0
  8092                           tblptru	equ	0xFF8
  8093                           tblptrh	equ	0xFF7
  8094                           tblptrl	equ	0xFF6
  8095                           tablat	equ	0xFF5
  8096                           prodh	equ	0xFF4
  8097                           prodl	equ	0xFF3
  8098                           postinc0	equ	0xFEE
  8099                           wreg	equ	0xFE8
  8100                           postdec1	equ	0xFE5
  8101                           fsr1h	equ	0xFE2
  8102                           fsr1l	equ	0xFE1
  8103                           indf2	equ	0xFDF
  8104                           fsr2h	equ	0xFDA
  8105                           fsr2l	equ	0xFD9
  8106                           status	equ	0xFD8
  8107                           
  8108 ;; *************** function __spi_init *****************
  8109 ;; Defined at:
  8110 ;;		line 24 in file "spi.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  details         3    0[BANK0 ] struct .
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8124 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8128 ;;Total ram usage:        3 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:   10
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_spi_init
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text13
  8139  01504A                     __ptext13:
  8140                           	opt stack 0
  8141  01504A                     __spi_init:
  8142                           	opt stack 17
  8143                           
  8144                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8145                           
  8146                           ;incstack = 0
  8147  01504A  0E55               	movlw	85
  8148  01504C  6EA7               	movwf	4007,c	;volsfr
  8149  01504E  0EAA               	movlw	170
  8150  015050  6EA7               	movwf	4007,c	;volsfr
  8151  015052  010E               	movlb	14	; () banked
  8152  015054  91BF               	bcf	191,0,b	;volatile
  8153                           
  8154                           ;spi.c: 31: RPINR21 = 22;
  8155  015056  0E16               	movlw	22
  8156  015058  6FFC               	movwf	252,b	;volatile
  8157                           
  8158                           ;spi.c: 32: RPOR21 = 10;
  8159  01505A  0E0A               	movlw	10
  8160  01505C  6FD5               	movwf	213,b	;volatile
  8161                           
  8162                           ;spi.c: 34: RPOR23 = 11;
  8163  01505E  0E0B               	movlw	11
  8164  015060  6FD7               	movwf	215,b	;volatile
  8165                           
  8166                           ;spi.c: 35: RPINR22 = 23;
  8167  015062  0E17               	movlw	23
  8168  015064  6FFD               	movwf	253,b	;volatile
  8169                           
  8170                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8171  015066  0E55               	movlw	85
  8172  015068  6EA7               	movwf	4007,c	;volsfr
  8173  01506A  0EAA               	movlw	170
  8174  01506C  6EA7               	movwf	4007,c	;volsfr
  8175                           
  8176                           ; BSR set to: 14
  8177  01506E  81BF               	bsf	191,0,b	;volatile
  8178                           
  8179                           ; BSR set to: 14
  8180                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8181  015070  8E73               	bsf	3955,7,c	;volatile
  8182                           
  8183                           ; BSR set to: 14
  8184                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8185  015072  8C73               	bsf	3955,6,c	;volatile
  8186                           
  8187                           ; BSR set to: 14
  8188                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8189  015074  9872               	bcf	3954,4,c	;volatile
  8190                           
  8191                           ; BSR set to: 14
  8192                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8193  015076  9072               	bcf	3954,0,c	;volatile
  8194  015078  9272               	bcf	3954,1,c	;volatile
  8195  01507A  9472               	bcf	3954,2,c	;volatile
  8196  01507C  9672               	bcf	3954,3,c	;volatile
  8197                           
  8198                           ; BSR set to: 14
  8199                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8200  01507E  8A72               	bsf	3954,5,c	;volatile
  8201                           
  8202                           ; BSR set to: 14
  8203  015080  0012               	return		;funcret
  8204  015082                     __end_of__spi_init:
  8205                           	opt stack 0
  8206                           tblptru	equ	0xFF8
  8207                           tblptrh	equ	0xFF7
  8208                           tblptrl	equ	0xFF6
  8209                           tablat	equ	0xFF5
  8210                           prodh	equ	0xFF4
  8211                           prodl	equ	0xFF3
  8212                           postinc0	equ	0xFEE
  8213                           wreg	equ	0xFE8
  8214                           postdec1	equ	0xFE5
  8215                           fsr1h	equ	0xFE2
  8216                           fsr1l	equ	0xFE1
  8217                           indf2	equ	0xFDF
  8218                           fsr2h	equ	0xFDA
  8219                           fsr2l	equ	0xFD9
  8220                           status	equ	0xFD8
  8221                           
  8222 ;; *************** function __flash_set_page_size *****************
  8223 ;; Defined at:
  8224 ;;		line 99 in file "flash.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  size            1    wreg     enum E6976
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  size            1   23[BANK0 ] enum E6976
  8229 ;;  command         4   19[BANK0 ] unsigned char [4]
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8240 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8242 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8243 ;;Total ram usage:        5 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:   13
  8246 ;; This function calls:
  8247 ;;		__flash_is_busy
  8248 ;;		_memcpy
  8249 ;;		_spi_tx
  8250 ;; This function is called by:
  8251 ;;		_flash_init
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text14
  8256  013E3A                     __ptext14:
  8257                           	opt stack 0
  8258  013E3A                     __flash_set_page_size:
  8259                           	opt stack 15
  8260                           
  8261                           ; BSR set to: 14
  8262                           ;incstack = 0
  8263                           ;__flash_set_page_size@size stored from wreg
  8264  013E3A  0100               	movlb	0	; () banked
  8265  013E3C  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8266  013E3E                     
  8267                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8268  013E3E  ECD3  F0AA         	call	__flash_is_busy	;wreg free
  8269  013E42  0900               	iorlw	0
  8270  013E44  A4D8               	btfss	status,2,c
  8271  013E46  D7FB               	goto	l15339
  8272                           
  8273                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8274  013E48  0100               	movlb	0	; () banked
  8275  013E4A  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8276  013E4C  A4D8               	btfss	status,2,c
  8277  013E4E  D00E               	goto	l1522
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8281  013E50  0E73               	movlw	low __flash_set_page_size@command
  8282  013E52  6F60               	movwf	memcpy@d1& (0+255),b
  8283  013E54  0E00               	movlw	high __flash_set_page_size@command
  8284  013E56  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8285  013E58  0EE1               	movlw	low _flash_command_pagesize_512
  8286  013E5A  6F62               	movwf	memcpy@s1& (0+255),b
  8287  013E5C  0EA2               	movlw	high _flash_command_pagesize_512
  8288  013E5E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8289  013E60  0E00               	movlw	0
  8290  013E62  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8291  013E64  0E04               	movlw	4
  8292  013E66  6F64               	movwf	memcpy@n& (0+255),b
  8293  013E68  EC57  F0A1         	call	_memcpy	;wreg free
  8294  013E6C                     l1522:
  8295                           
  8296                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8297  013E6C  0100               	movlb	0	; () banked
  8298  013E6E  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8299  013E70  A4D8               	btfss	status,2,c
  8300  013E72  D00E               	goto	l1523
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8304  013E74  0E73               	movlw	low __flash_set_page_size@command
  8305  013E76  6F60               	movwf	memcpy@d1& (0+255),b
  8306  013E78  0E00               	movlw	high __flash_set_page_size@command
  8307  013E7A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8308  013E7C  0EDD               	movlw	low _flash_command_pagesize_528
  8309  013E7E  6F62               	movwf	memcpy@s1& (0+255),b
  8310  013E80  0EA2               	movlw	high _flash_command_pagesize_528
  8311  013E82  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8312  013E84  0E00               	movlw	0
  8313  013E86  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8314  013E88  0E04               	movlw	4
  8315  013E8A  6F64               	movwf	memcpy@n& (0+255),b
  8316  013E8C  EC57  F0A1         	call	_memcpy	;wreg free
  8317  013E90                     l1523:
  8318                           
  8319                           ;flash.c: 113: spi_tx(command, 4);
  8320  013E90  0E73               	movlw	low __flash_set_page_size@command
  8321  013E92  0100               	movlb	0	; () banked
  8322  013E94  6F60               	movwf	spi_tx@data& (0+255),b
  8323  013E96  0E00               	movlw	high __flash_set_page_size@command
  8324  013E98  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8325  013E9A  0E00               	movlw	0
  8326  013E9C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8327  013E9E  0E04               	movlw	4
  8328  013EA0  6F62               	movwf	spi_tx@length& (0+255),b
  8329  013EA2  ECC8  F0A2         	call	_spi_tx	;wreg free
  8330  013EA6  0012               	return		;funcret
  8331  013EA8                     __end_of__flash_set_page_size:
  8332                           	opt stack 0
  8333                           tblptru	equ	0xFF8
  8334                           tblptrh	equ	0xFF7
  8335                           tblptrl	equ	0xFF6
  8336                           tablat	equ	0xFF5
  8337                           prodh	equ	0xFF4
  8338                           prodl	equ	0xFF3
  8339                           postinc0	equ	0xFEE
  8340                           wreg	equ	0xFE8
  8341                           postdec1	equ	0xFE5
  8342                           fsr1h	equ	0xFE2
  8343                           fsr1l	equ	0xFE1
  8344                           indf2	equ	0xFDF
  8345                           fsr2h	equ	0xFDA
  8346                           fsr2l	equ	0xFD9
  8347                           status	equ	0xFD8
  8348                           
  8349 ;; *************** function _fat_init *****************
  8350 ;; Defined at:
  8351 ;;		line 1382 in file "fat16.c"
  8352 ;; Parameters:    Size  Location     Type
  8353 ;;		None
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;		None
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      void 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;Total ram usage:        0 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:   16
  8372 ;; This function calls:
  8373 ;;		_fat_format
  8374 ;;		_fat_get_format_status
  8375 ;; This function is called by:
  8376 ;;		_system_init
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text15
  8381  015746                     __ptext15:
  8382                           	opt stack 0
  8383  015746                     _fat_init:
  8384                           	opt stack 13
  8385                           
  8386                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8387                           
  8388                           ;incstack = 0
  8389  015746  ECF9  F096         	call	_fat_get_format_status	;wreg free
  8390  01574A  0900               	iorlw	0
  8391  01574C  A4D8               	btfss	status,2,c
  8392  01574E  0012               	return	
  8393                           
  8394                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  8395  015750  EC70  F076         	call	_fat_format	;wreg free
  8396  015754  0012               	return	
  8397  015756                     __end_of_fat_init:
  8398                           	opt stack 0
  8399                           tblptru	equ	0xFF8
  8400                           tblptrh	equ	0xFF7
  8401                           tblptrl	equ	0xFF6
  8402                           tablat	equ	0xFF5
  8403                           prodh	equ	0xFF4
  8404                           prodl	equ	0xFF3
  8405                           postinc0	equ	0xFEE
  8406                           wreg	equ	0xFE8
  8407                           postdec1	equ	0xFE5
  8408                           fsr1h	equ	0xFE2
  8409                           fsr1l	equ	0xFE1
  8410                           indf2	equ	0xFDF
  8411                           fsr2h	equ	0xFDA
  8412                           fsr2l	equ	0xFD9
  8413                           status	equ	0xFD8
  8414                           
  8415 ;; *************** function _fat_get_format_status *****************
  8416 ;; Defined at:
  8417 ;;		line 1292 in file "fat16.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;  cntr            2   45[BANK0 ] unsigned int 
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      enum E6950
  8424 ;; Registers used:
  8425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;Total ram usage:        4 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:   15
  8438 ;; This function calls:
  8439 ;;		__get_fbr
  8440 ;;		__get_mbr
  8441 ;;		_flash_sector_read
  8442 ;; This function is called by:
  8443 ;;		_fat_init
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text16
  8448  012DF2                     __ptext16:
  8449                           	opt stack 0
  8450  012DF2                     _fat_get_format_status:
  8451                           	opt stack 13
  8452                           
  8453                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  8454                           
  8455                           ;incstack = 0
  8456  012DF2  0E00               	movlw	0
  8457  012DF4  0100               	movlb	0	; () banked
  8458  012DF6  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8459  012DF8  0E00               	movlw	0
  8460  012DFA  6F87               	movwf	flash_sector_read@page& (0+255),b
  8461  012DFC  0E00               	movlw	low _buffer
  8462  012DFE  6F89               	movwf	flash_sector_read@data& (0+255),b
  8463  012E00  0E0A               	movlw	high _buffer
  8464  012E02  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8465  012E04  EC75  F0AA         	call	_flash_sector_read	;wreg free
  8466                           
  8467                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  8468  012E08  0E00               	movlw	0
  8469  012E0A  0100               	movlb	0	; () banked
  8470  012E0C  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8471  012E0E  0E00               	movlw	0
  8472  012E10  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8473  012E12                     l15531:
  8474                           
  8475                           ; BSR set to: 0
  8476  012E12  0E02               	movlw	2
  8477  012E14  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8478  012E16  B0D8               	btfsc	status,0,c
  8479  012E18  D017               	goto	u14390
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  8483                           
  8484                           ; BSR set to: 0
  8485                           
  8486                           ; BSR set to: 0
  8487  012E1A  0E00               	movlw	low _buffer
  8488  012E1C  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8489  012E1E  6ED9               	movwf	fsr2l,c
  8490  012E20  0E0A               	movlw	high _buffer
  8491  012E22  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8492  012E24  6EDA               	movwf	fsr2h,c
  8493  012E26  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  8494  012E2A  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  8495  012E2E  EC32  F093         	call	__get_mbr	;wreg free
  8496  012E32  0100               	movlb	0	; () banked
  8497  012E34  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8498  012E36  50DE               	movf	postinc2,w,c
  8499  012E38  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8500  012E3A  B4D8               	btfsc	status,2,c
  8501  012E3C  D002               	goto	l2046
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  8505  012E3E  0E00               	movlw	0
  8506                           
  8507                           ; BSR set to: 0
  8508  012E40  0012               	return	
  8509  012E42                     l2046:
  8510                           
  8511                           ; BSR set to: 0
  8512                           
  8513                           ; BSR set to: 0
  8514  012E42  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8515  012E44  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8516  012E46  D7E5               	goto	l15531
  8517  012E48                     u14390:
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  8521                           
  8522                           ; BSR set to: 0
  8523  012E48  0E00               	movlw	0
  8524  012E4A  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8525  012E4C  0E01               	movlw	1
  8526  012E4E  6F87               	movwf	flash_sector_read@page& (0+255),b
  8527  012E50  0E00               	movlw	low _buffer
  8528  012E52  6F89               	movwf	flash_sector_read@data& (0+255),b
  8529  012E54  0E0A               	movlw	high _buffer
  8530  012E56  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8531  012E58  EC75  F0AA         	call	_flash_sector_read	;wreg free
  8532                           
  8533                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  8534  012E5C  0E00               	movlw	0
  8535  012E5E  0100               	movlb	0	; () banked
  8536  012E60  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8537  012E62  0E00               	movlw	0
  8538  012E64  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8539  012E66                     l15549:
  8540                           
  8541                           ; BSR set to: 0
  8542  012E66  0E02               	movlw	2
  8543  012E68  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8544  012E6A  B0D8               	btfsc	status,0,c
  8545  012E6C  D017               	goto	u14420
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  8549                           
  8550                           ; BSR set to: 0
  8551                           
  8552                           ; BSR set to: 0
  8553  012E6E  0E00               	movlw	low _buffer
  8554  012E70  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8555  012E72  6ED9               	movwf	fsr2l,c
  8556  012E74  0E0A               	movlw	high _buffer
  8557  012E76  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8558  012E78  6EDA               	movwf	fsr2h,c
  8559  012E7A  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  8560  012E7E  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  8561  012E82  ECC2  F070         	call	__get_fbr	;wreg free
  8562  012E86  0100               	movlb	0	; () banked
  8563  012E88  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8564  012E8A  50DE               	movf	postinc2,w,c
  8565  012E8C  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8566  012E8E  B4D8               	btfsc	status,2,c
  8567  012E90  D002               	goto	l2050
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  8571  012E92  0E00               	movlw	0
  8572                           
  8573                           ; BSR set to: 0
  8574  012E94  0012               	return	
  8575  012E96                     l2050:
  8576                           
  8577                           ; BSR set to: 0
  8578                           
  8579                           ; BSR set to: 0
  8580  012E96  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8581  012E98  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8582  012E9A  D7E5               	goto	l15549
  8583  012E9C                     u14420:
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  8587                           
  8588                           ; BSR set to: 0
  8589  012E9C  0E01               	movlw	1
  8590  012E9E  0012               	return	
  8591  012EA0                     __end_of_fat_get_format_status:
  8592                           	opt stack 0
  8593                           tblptru	equ	0xFF8
  8594                           tblptrh	equ	0xFF7
  8595                           tblptrl	equ	0xFF6
  8596                           tablat	equ	0xFF5
  8597                           prodh	equ	0xFF4
  8598                           prodl	equ	0xFF3
  8599                           postinc0	equ	0xFEE
  8600                           wreg	equ	0xFE8
  8601                           postdec1	equ	0xFE5
  8602                           fsr1h	equ	0xFE2
  8603                           fsr1l	equ	0xFE1
  8604                           indf2	equ	0xFDF
  8605                           postinc2	equ	0xFDE
  8606                           fsr2h	equ	0xFDA
  8607                           fsr2l	equ	0xFD9
  8608                           status	equ	0xFD8
  8609                           
  8610 ;; *************** function _fat_format *****************
  8611 ;; Defined at:
  8612 ;;		line 1320 in file "fat16.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;		None
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  cntr            2   36[BANK0 ] unsigned int 
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      unsigned char 
  8619 ;; Registers used:
  8620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;Total ram usage:        2 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; Hardware stack levels required when called:   15
  8633 ;; This function calls:
  8634 ;;		__get_data
  8635 ;;		__get_fat
  8636 ;;		__get_fbr
  8637 ;;		__get_mbr
  8638 ;;		__get_root
  8639 ;;		_flash_sector_write
  8640 ;; This function is called by:
  8641 ;;		_fat_init
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text17
  8646  00ECE0                     __ptext17:
  8647                           	opt stack 0
  8648  00ECE0                     _fat_format:
  8649                           	opt stack 13
  8650                           
  8651                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;incstack = 0
  8655  00ECE0  0E00               	movlw	0
  8656  00ECE2  0100               	movlb	0	; () banked
  8657  00ECE4  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8658  00ECE6  0E00               	movlw	0
  8659  00ECE8  6F84               	movwf	fat_format@cntr& (0+255),b
  8660  00ECEA                     l15569:
  8661                           
  8662                           ; BSR set to: 0
  8663  00ECEA  0E02               	movlw	2
  8664  00ECEC  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8665  00ECEE  B0D8               	btfsc	status,0,c
  8666  00ECF0  D011               	goto	u14440
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
  8670                           
  8671                           ; BSR set to: 0
  8672                           
  8673                           ; BSR set to: 0
  8674  00ECF2  0E00               	movlw	low _buffer
  8675  00ECF4  2584               	addwf	fat_format@cntr& (0+255),w,b
  8676  00ECF6  6ED9               	movwf	fsr2l,c
  8677  00ECF8  0E0A               	movlw	high _buffer
  8678  00ECFA  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8679  00ECFC  6EDA               	movwf	fsr2h,c
  8680  00ECFE  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
  8681  00ED02  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
  8682  00ED06  EC32  F093         	call	__get_mbr	;wreg free
  8683  00ED0A  6EDF               	movwf	indf2,c
  8684  00ED0C  0100               	movlb	0	; () banked
  8685  00ED0E  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8686  00ED10  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8687  00ED12  D7EB               	goto	l15569
  8688  00ED14                     u14440:
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
  8692                           
  8693                           ; BSR set to: 0
  8694  00ED14  0E00               	movlw	0
  8695  00ED16  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8696  00ED18  0E00               	movlw	0
  8697  00ED1A  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8698  00ED1C  0E00               	movlw	low _buffer
  8699  00ED1E  6F81               	movwf	flash_sector_write@data& (0+255),b
  8700  00ED20  0E0A               	movlw	high _buffer
  8701  00ED22  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8702  00ED24  EC9C  F0A5         	call	_flash_sector_write	;wreg free
  8703                           
  8704                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
  8705  00ED28  0E00               	movlw	0
  8706  00ED2A  0100               	movlb	0	; () banked
  8707  00ED2C  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8708  00ED2E  0E00               	movlw	0
  8709  00ED30  6F84               	movwf	fat_format@cntr& (0+255),b
  8710  00ED32                     l15583:
  8711                           
  8712                           ; BSR set to: 0
  8713  00ED32  0E02               	movlw	2
  8714  00ED34  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8715  00ED36  B0D8               	btfsc	status,0,c
  8716  00ED38  D011               	goto	u14460
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
  8720                           
  8721                           ; BSR set to: 0
  8722                           
  8723                           ; BSR set to: 0
  8724  00ED3A  0E00               	movlw	low _buffer
  8725  00ED3C  2584               	addwf	fat_format@cntr& (0+255),w,b
  8726  00ED3E  6ED9               	movwf	fsr2l,c
  8727  00ED40  0E0A               	movlw	high _buffer
  8728  00ED42  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8729  00ED44  6EDA               	movwf	fsr2h,c
  8730  00ED46  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
  8731  00ED4A  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
  8732  00ED4E  ECC2  F070         	call	__get_fbr	;wreg free
  8733  00ED52  6EDF               	movwf	indf2,c
  8734  00ED54  0100               	movlb	0	; () banked
  8735  00ED56  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8736  00ED58  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8737  00ED5A  D7EB               	goto	l15583
  8738  00ED5C                     u14460:
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
  8742                           
  8743                           ; BSR set to: 0
  8744  00ED5C  0E00               	movlw	0
  8745  00ED5E  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8746  00ED60  0E01               	movlw	1
  8747  00ED62  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8748  00ED64  0E00               	movlw	low _buffer
  8749  00ED66  6F81               	movwf	flash_sector_write@data& (0+255),b
  8750  00ED68  0E0A               	movlw	high _buffer
  8751  00ED6A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8752  00ED6C  EC9C  F0A5         	call	_flash_sector_write	;wreg free
  8753                           
  8754                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
  8755  00ED70  0E00               	movlw	0
  8756  00ED72  0100               	movlb	0	; () banked
  8757  00ED74  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8758  00ED76  0E00               	movlw	0
  8759  00ED78  6F84               	movwf	fat_format@cntr& (0+255),b
  8760  00ED7A                     l15597:
  8761                           
  8762                           ; BSR set to: 0
  8763  00ED7A  0E02               	movlw	2
  8764  00ED7C  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8765  00ED7E  B0D8               	btfsc	status,0,c
  8766  00ED80  D011               	goto	u14480
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
  8770                           
  8771                           ; BSR set to: 0
  8772                           
  8773                           ; BSR set to: 0
  8774  00ED82  0E00               	movlw	low _buffer
  8775  00ED84  2584               	addwf	fat_format@cntr& (0+255),w,b
  8776  00ED86  6ED9               	movwf	fsr2l,c
  8777  00ED88  0E0A               	movlw	high _buffer
  8778  00ED8A  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8779  00ED8C  6EDA               	movwf	fsr2h,c
  8780  00ED8E  C084  F060         	movff	fat_format@cntr,__get_fat@idx
  8781  00ED92  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
  8782  00ED96  ECF5  F0A2         	call	__get_fat	;wreg free
  8783  00ED9A  6EDF               	movwf	indf2,c
  8784  00ED9C  0100               	movlb	0	; () banked
  8785  00ED9E  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8786  00EDA0  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8787  00EDA2  D7EB               	goto	l15597
  8788  00EDA4                     u14480:
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
  8792                           
  8793                           ; BSR set to: 0
  8794  00EDA4  0E00               	movlw	0
  8795  00EDA6  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8796  00EDA8  0E02               	movlw	2
  8797  00EDAA  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8798  00EDAC  0E00               	movlw	low _buffer
  8799  00EDAE  6F81               	movwf	flash_sector_write@data& (0+255),b
  8800  00EDB0  0E0A               	movlw	high _buffer
  8801  00EDB2  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8802  00EDB4  EC9C  F0A5         	call	_flash_sector_write	;wreg free
  8803                           
  8804                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
  8805  00EDB8  0E00               	movlw	0
  8806  00EDBA  0100               	movlb	0	; () banked
  8807  00EDBC  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8808  00EDBE  0E00               	movlw	0
  8809  00EDC0  6F84               	movwf	fat_format@cntr& (0+255),b
  8810  00EDC2                     l15611:
  8811                           
  8812                           ; BSR set to: 0
  8813  00EDC2  0E02               	movlw	2
  8814  00EDC4  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8815  00EDC6  B0D8               	btfsc	status,0,c
  8816  00EDC8  D00B               	goto	u14500
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
  8820                           
  8821                           ; BSR set to: 0
  8822                           
  8823                           ; BSR set to: 0
  8824  00EDCA  0E00               	movlw	low _buffer
  8825  00EDCC  2584               	addwf	fat_format@cntr& (0+255),w,b
  8826  00EDCE  6ED9               	movwf	fsr2l,c
  8827  00EDD0  0E0A               	movlw	high _buffer
  8828  00EDD2  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8829  00EDD4  6EDA               	movwf	fsr2h,c
  8830  00EDD6  0E00               	movlw	0
  8831  00EDD8  6EDF               	movwf	indf2,c
  8832                           
  8833                           ; BSR set to: 0
  8834  00EDDA  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8835  00EDDC  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8836  00EDDE  D7F1               	goto	l15611
  8837  00EDE0                     u14500:
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
  8841                           
  8842                           ; BSR set to: 0
  8843  00EDE0  0E00               	movlw	0
  8844  00EDE2  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8845  00EDE4  0E03               	movlw	3
  8846  00EDE6  6F84               	movwf	fat_format@cntr& (0+255),b
  8847  00EDE8                     l15623:
  8848                           
  8849                           ; BSR set to: 0
  8850  00EDE8  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8851  00EDEA  E112               	bnz	l15633
  8852  00EDEC  0E22               	movlw	34
  8853  00EDEE  5D84               	subwf	fat_format@cntr& (0+255),w,b
  8854  00EDF0  B0D8               	btfsc	status,0,c
  8855  00EDF2  D00E               	goto	u14520
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
  8859                           
  8860                           ; BSR set to: 0
  8861                           
  8862                           ; BSR set to: 0
  8863  00EDF4  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  8864  00EDF8  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  8865  00EDFC  0E00               	movlw	low _buffer
  8866  00EDFE  6F81               	movwf	flash_sector_write@data& (0+255),b
  8867  00EE00  0E0A               	movlw	high _buffer
  8868  00EE02  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8869  00EE04  EC9C  F0A5         	call	_flash_sector_write	;wreg free
  8870  00EE08  0100               	movlb	0	; () banked
  8871  00EE0A  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8872  00EE0C  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8873  00EE0E  D7EC               	goto	l15623
  8874  00EE10                     u14520:
  8875  00EE10                     l15633:
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
  8879  00EE10  0E00               	movlw	0
  8880  00EE12  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8881  00EE14  0E00               	movlw	0
  8882  00EE16  6F84               	movwf	fat_format@cntr& (0+255),b
  8883  00EE18                     l15635:
  8884                           
  8885                           ; BSR set to: 0
  8886  00EE18  0E02               	movlw	2
  8887  00EE1A  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8888  00EE1C  B0D8               	btfsc	status,0,c
  8889  00EE1E  D011               	goto	u14540
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
  8893                           
  8894                           ; BSR set to: 0
  8895                           
  8896                           ; BSR set to: 0
  8897  00EE20  0E00               	movlw	low _buffer
  8898  00EE22  2584               	addwf	fat_format@cntr& (0+255),w,b
  8899  00EE24  6ED9               	movwf	fsr2l,c
  8900  00EE26  0E0A               	movlw	high _buffer
  8901  00EE28  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8902  00EE2A  6EDA               	movwf	fsr2h,c
  8903  00EE2C  C084  F060         	movff	fat_format@cntr,__get_root@idx
  8904  00EE30  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
  8905  00EE34  ECEE  F07B         	call	__get_root	;wreg free
  8906  00EE38  6EDF               	movwf	indf2,c
  8907  00EE3A  0100               	movlb	0	; () banked
  8908  00EE3C  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8909  00EE3E  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8910  00EE40  D7EB               	goto	l15635
  8911  00EE42                     u14540:
  8912                           
  8913                           ; BSR set to: 0
  8914                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
  8915                           
  8916                           ; BSR set to: 0
  8917  00EE42  0E00               	movlw	0
  8918  00EE44  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8919  00EE46  0E22               	movlw	34
  8920  00EE48  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8921  00EE4A  0E00               	movlw	low _buffer
  8922  00EE4C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8923  00EE4E  0E0A               	movlw	high _buffer
  8924  00EE50  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8925  00EE52  EC9C  F0A5         	call	_flash_sector_write	;wreg free
  8926                           
  8927                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
  8928  00EE56  0E00               	movlw	0
  8929  00EE58  0100               	movlb	0	; () banked
  8930  00EE5A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8931  00EE5C  0E00               	movlw	0
  8932  00EE5E  6F84               	movwf	fat_format@cntr& (0+255),b
  8933  00EE60                     l15649:
  8934                           
  8935                           ; BSR set to: 0
  8936  00EE60  0E02               	movlw	2
  8937  00EE62  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8938  00EE64  B0D8               	btfsc	status,0,c
  8939  00EE66  D00B               	goto	u14560
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
  8943                           
  8944                           ; BSR set to: 0
  8945                           
  8946                           ; BSR set to: 0
  8947  00EE68  0E00               	movlw	low _buffer
  8948  00EE6A  2584               	addwf	fat_format@cntr& (0+255),w,b
  8949  00EE6C  6ED9               	movwf	fsr2l,c
  8950  00EE6E  0E0A               	movlw	high _buffer
  8951  00EE70  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8952  00EE72  6EDA               	movwf	fsr2h,c
  8953  00EE74  0E00               	movlw	0
  8954  00EE76  6EDF               	movwf	indf2,c
  8955                           
  8956                           ; BSR set to: 0
  8957  00EE78  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8958  00EE7A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8959  00EE7C  D7F1               	goto	l15649
  8960  00EE7E                     u14560:
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
  8964                           
  8965                           ; BSR set to: 0
  8966  00EE7E  0E00               	movlw	0
  8967  00EE80  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8968  00EE82  0E23               	movlw	35
  8969  00EE84  6F84               	movwf	fat_format@cntr& (0+255),b
  8970  00EE86                     l15661:
  8971                           
  8972                           ; BSR set to: 0
  8973  00EE86  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8974  00EE88  E112               	bnz	l15671
  8975  00EE8A  0E26               	movlw	38
  8976  00EE8C  5D84               	subwf	fat_format@cntr& (0+255),w,b
  8977  00EE8E  B0D8               	btfsc	status,0,c
  8978  00EE90  D00E               	goto	u14580
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
  8982                           
  8983                           ; BSR set to: 0
  8984                           
  8985                           ; BSR set to: 0
  8986  00EE92  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  8987  00EE96  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  8988  00EE9A  0E00               	movlw	low _buffer
  8989  00EE9C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8990  00EE9E  0E0A               	movlw	high _buffer
  8991  00EEA0  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8992  00EEA2  EC9C  F0A5         	call	_flash_sector_write	;wreg free
  8993  00EEA6  0100               	movlb	0	; () banked
  8994  00EEA8  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8995  00EEAA  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8996  00EEAC  D7EC               	goto	l15661
  8997  00EEAE                     u14580:
  8998  00EEAE                     l15671:
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
  9002  00EEAE  0E00               	movlw	0
  9003  00EEB0  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  9004  00EEB2  0E00               	movlw	0
  9005  00EEB4  6F84               	movwf	fat_format@cntr& (0+255),b
  9006  00EEB6                     l15673:
  9007                           
  9008                           ; BSR set to: 0
  9009  00EEB6  0E02               	movlw	2
  9010  00EEB8  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  9011  00EEBA  B0D8               	btfsc	status,0,c
  9012  00EEBC  D011               	goto	u14600
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
  9016                           
  9017                           ; BSR set to: 0
  9018                           
  9019                           ; BSR set to: 0
  9020  00EEBE  0E00               	movlw	low _buffer
  9021  00EEC0  2584               	addwf	fat_format@cntr& (0+255),w,b
  9022  00EEC2  6ED9               	movwf	fsr2l,c
  9023  00EEC4  0E0A               	movlw	high _buffer
  9024  00EEC6  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  9025  00EEC8  6EDA               	movwf	fsr2h,c
  9026  00EECA  C084  F060         	movff	fat_format@cntr,__get_data@idx
  9027  00EECE  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
  9028  00EED2  ECE5  F0A9         	call	__get_data	;wreg free
  9029  00EED6  6EDF               	movwf	indf2,c
  9030  00EED8  0100               	movlb	0	; () banked
  9031  00EEDA  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9032  00EEDC  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9033  00EEDE  D7EB               	goto	l15673
  9034  00EEE0                     u14600:
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
  9038                           
  9039                           ; BSR set to: 0
  9040  00EEE0  0E00               	movlw	0
  9041  00EEE2  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  9042  00EEE4  0E26               	movlw	38
  9043  00EEE6  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9044  00EEE8  0E00               	movlw	low _buffer
  9045  00EEEA  6F81               	movwf	flash_sector_write@data& (0+255),b
  9046  00EEEC  0E0A               	movlw	high _buffer
  9047  00EEEE  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9048  00EEF0  EC9C  F0A5         	call	_flash_sector_write	;wreg free
  9049  00EEF4  0012               	return	
  9050  00EEF6                     __end_of_fat_format:
  9051                           	opt stack 0
  9052                           tblptru	equ	0xFF8
  9053                           tblptrh	equ	0xFF7
  9054                           tblptrl	equ	0xFF6
  9055                           tablat	equ	0xFF5
  9056                           prodh	equ	0xFF4
  9057                           prodl	equ	0xFF3
  9058                           postinc0	equ	0xFEE
  9059                           wreg	equ	0xFE8
  9060                           postdec1	equ	0xFE5
  9061                           fsr1h	equ	0xFE2
  9062                           fsr1l	equ	0xFE1
  9063                           indf2	equ	0xFDF
  9064                           postinc2	equ	0xFDE
  9065                           fsr2h	equ	0xFDA
  9066                           fsr2l	equ	0xFD9
  9067                           status	equ	0xFD8
  9068                           
  9069 ;; *************** function __get_root *****************
  9070 ;; Defined at:
  9071 ;;		line 1210 in file "fat16.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  idx             2    0[BANK0 ] unsigned int 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      unsigned char 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9085 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;Total ram usage:        6 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:   10
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_fat_format
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           	psect	text18
  9100  00F7DC                     __ptext18:
  9101                           	opt stack 0
  9102  00F7DC                     __get_root:
  9103                           	opt stack 17
  9104                           
  9105                           ;fat16.c: 1212: if(idx < 0x20)
  9106                           
  9107                           ;incstack = 0
  9108  00F7DC  0100               	movlb	0	; () banked
  9109  00F7DE  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9110  00F7E0  E11D               	bnz	l14701
  9111  00F7E2  0E20               	movlw	32
  9112  00F7E4  5D60               	subwf	__get_root@idx& (0+255),w,b
  9113  00F7E6  B0D8               	btfsc	status,0,c
  9114  00F7E8  D019               	goto	l2011
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
  9118  00F7EA  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9119  00F7EC  E110               	bnz	l14695
  9120  00F7EE  0E0B               	movlw	11
  9121  00F7F0  5D60               	subwf	__get_root@idx& (0+255),w,b
  9122  00F7F2  B0D8               	btfsc	status,0,c
  9123  00F7F4  D00C               	goto	l2009
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
  9127  00F7F6  0EF6               	movlw	low STR_15
  9128  00F7F8  2560               	addwf	__get_root@idx& (0+255),w,b
  9129  00F7FA  6EF6               	movwf	tblptrl,c
  9130  00F7FC  0EA2               	movlw	high STR_15
  9131  00F7FE  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9132  00F800  6EF7               	movwf	tblptrh,c
  9133  00F802                     	if	1	;There are 3 active tblptr bytes
  9134  00F802  6AF8               	clrf	tblptru,c
  9135  00F804  0E00               	movlw	low (__mediumconst shr (0+16))
  9136  00F806  22F8               	addwfc	tblptru,f,c
  9137  00F808                     	endif
  9138  00F808  0008               	tblrd		*
  9139  00F80A  50F5               	movf	tablat,w,c
  9140                           
  9141                           ; BSR set to: 0
  9142  00F80C  0012               	return	
  9143  00F80E                     l2009:
  9144  00F80E                     l14695:
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
  9148  00F80E  0E0B               	movlw	11
  9149  00F810  1960               	xorwf	__get_root@idx& (0+255),w,b
  9150  00F812  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
  9151  00F814  A4D8               	btfss	status,2,c
  9152  00F816  D002               	goto	l2011
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
  9156  00F818  0E08               	movlw	8
  9157                           
  9158                           ; BSR set to: 0
  9159  00F81A  0012               	return	
  9160  00F81C                     l2011:
  9161  00F81C                     l14701:
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
  9165  00F81C  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9166  00F81E  E103               	bnz	u13411
  9167  00F820  0E40               	movlw	64
  9168  00F822  5D60               	subwf	__get_root@idx& (0+255),w,b
  9169  00F824  B0D8               	btfsc	status,0,c
  9170  00F826                     u13411:
  9171  00F826  D0A4               	goto	l2037
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
  9175  00F828  0E20               	movlw	32
  9176  00F82A  5F60               	subwf	__get_root@idx& (0+255),f,b
  9177  00F82C  0E00               	movlw	0
  9178  00F82E  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
  9179                           
  9180                           ;fat16.c: 1226: if(idx < 0+8)
  9181  00F830  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9182  00F832  E110               	bnz	l14709
  9183  00F834  0E08               	movlw	8
  9184  00F836  5D60               	subwf	__get_root@idx& (0+255),w,b
  9185  00F838  B0D8               	btfsc	status,0,c
  9186  00F83A  D00C               	goto	l2013
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
  9190  00F83C  0E02               	movlw	low STR_16
  9191  00F83E  2560               	addwf	__get_root@idx& (0+255),w,b
  9192  00F840  6EF6               	movwf	tblptrl,c
  9193  00F842  0EA3               	movlw	high STR_16
  9194  00F844  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9195  00F846  6EF7               	movwf	tblptrh,c
  9196  00F848                     	if	1	;There are 3 active tblptr bytes
  9197  00F848  6AF8               	clrf	tblptru,c
  9198  00F84A  0E00               	movlw	low (__mediumconst shr (0+16))
  9199  00F84C  22F8               	addwfc	tblptru,f,c
  9200  00F84E                     	endif
  9201  00F84E  0008               	tblrd		*
  9202  00F850  50F5               	movf	tablat,w,c
  9203                           
  9204                           ; BSR set to: 0
  9205  00F852  0012               	return	
  9206  00F854                     l2013:
  9207  00F854                     l14709:
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
  9211  00F854  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9212  00F856  E146               	bnz	l14801
  9213  00F858  0E0B               	movlw	11
  9214  00F85A  5D60               	subwf	__get_root@idx& (0+255),w,b
  9215  00F85C  B0D8               	btfsc	status,0,c
  9216  00F85E  D042               	goto	l2015
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
  9220  00F860  0EF8               	movlw	248
  9221  00F862  6F62               	movwf	??__get_root& (0+255),b
  9222  00F864  0EFF               	movlw	255
  9223  00F866  6F63               	movwf	(??__get_root+1)& (0+255),b
  9224  00F868  C060  F064         	movff	__get_root@idx,??__get_root+2
  9225  00F86C  C061  F065         	movff	__get_root@idx+1,??__get_root+3
  9226  00F870  5162               	movf	??__get_root& (0+255),w,b
  9227  00F872  2764               	addwf	(??__get_root+2)& (0+255),f,b
  9228  00F874  5163               	movf	(??__get_root+1)& (0+255),w,b
  9229  00F876  2365               	addwfc	(??__get_root+3)& (0+255),f,b
  9230  00F878  0E2A               	movlw	low STR_17
  9231  00F87A  2564               	addwf	(??__get_root+2)& (0+255),w,b
  9232  00F87C  6EF6               	movwf	tblptrl,c
  9233  00F87E  0EA3               	movlw	high STR_17
  9234  00F880  2165               	addwfc	(??__get_root+3)& (0+255),w,b
  9235  00F882  6EF7               	movwf	tblptrh,c
  9236  00F884                     	if	1	;There are 3 active tblptr bytes
  9237  00F884  6AF8               	clrf	tblptru,c
  9238  00F886  0E00               	movlw	low (__mediumconst shr (0+16))
  9239  00F888  22F8               	addwfc	tblptru,f,c
  9240  00F88A                     	endif
  9241  00F88A  0008               	tblrd		*
  9242  00F88C  50F5               	movf	tablat,w,c
  9243                           
  9244                           ; BSR set to: 0
  9245  00F88E  0012               	return	
  9246  00F890                     
  9247                           ; BSR set to: 0
  9248                           ;fat16.c: 1237: return 0x20;
  9249                           
  9250                           ; BSR set to: 0
  9251  00F890  0E20               	movlw	32
  9252                           
  9253                           ; BSR set to: 0
  9254  00F892  0012               	return	
  9255  00F894                     
  9256                           ; BSR set to: 0
  9257                           ;fat16.c: 1239: return 0x06;
  9258                           
  9259                           ; BSR set to: 0
  9260  00F894  0E06               	movlw	6
  9261                           
  9262                           ; BSR set to: 0
  9263  00F896  0012               	return	
  9264  00F898                     
  9265                           ; BSR set to: 0
  9266                           ;fat16.c: 1241: return 0x28;
  9267                           
  9268                           ; BSR set to: 0
  9269  00F898  0E28               	movlw	40
  9270                           
  9271                           ; BSR set to: 0
  9272  00F89A  0012               	return	
  9273  00F89C                     
  9274                           ; BSR set to: 0
  9275                           ;fat16.c: 1243: return 0x78;
  9276                           
  9277                           ; BSR set to: 0
  9278  00F89C  0E78               	movlw	120
  9279                           
  9280                           ; BSR set to: 0
  9281  00F89E  0012               	return	
  9282  00F8A0                     
  9283                           ; BSR set to: 0
  9284                           ;fat16.c: 1245: return 0xDE;
  9285                           
  9286                           ; BSR set to: 0
  9287  00F8A0  0EDE               	movlw	222
  9288                           
  9289                           ; BSR set to: 0
  9290  00F8A2  0012               	return	
  9291  00F8A4                     
  9292                           ; BSR set to: 0
  9293                           ;fat16.c: 1247: return 0x38;
  9294                           
  9295                           ; BSR set to: 0
  9296  00F8A4  0E38               	movlw	56
  9297                           
  9298                           ; BSR set to: 0
  9299  00F8A6  0012               	return	
  9300  00F8A8                     
  9301                           ; BSR set to: 0
  9302                           ;fat16.c: 1249: return 0x5F;
  9303                           
  9304                           ; BSR set to: 0
  9305  00F8A8  0E5F               	movlw	95
  9306                           
  9307                           ; BSR set to: 0
  9308  00F8AA  0012               	return	
  9309  00F8AC                     
  9310                           ; BSR set to: 0
  9311                           ;fat16.c: 1251: return 0x4B;
  9312                           
  9313                           ; BSR set to: 0
  9314  00F8AC  0E4B               	movlw	75
  9315                           
  9316                           ; BSR set to: 0
  9317  00F8AE  0012               	return	
  9318  00F8B0                     
  9319                           ; BSR set to: 0
  9320                           ;fat16.c: 1253: return 0x00;
  9321                           
  9322                           ; BSR set to: 0
  9323  00F8B0  0E00               	movlw	0
  9324                           
  9325                           ; BSR set to: 0
  9326  00F8B2  0012               	return	
  9327  00F8B4                     
  9328                           ; BSR set to: 0
  9329                           ;fat16.c: 1255: return 0x00;
  9330                           
  9331                           ; BSR set to: 0
  9332  00F8B4  0E00               	movlw	0
  9333                           
  9334                           ; BSR set to: 0
  9335  00F8B6  0012               	return	
  9336  00F8B8                     
  9337                           ; BSR set to: 0
  9338                           ;fat16.c: 1257: return 0x04;
  9339                           
  9340                           ; BSR set to: 0
  9341  00F8B8  0E04               	movlw	4
  9342                           
  9343                           ; BSR set to: 0
  9344  00F8BA  0012               	return	
  9345  00F8BC                     
  9346                           ; BSR set to: 0
  9347                           ;fat16.c: 1259: return 0x77;
  9348                           
  9349                           ; BSR set to: 0
  9350  00F8BC  0E77               	movlw	119
  9351                           
  9352                           ; BSR set to: 0
  9353  00F8BE  0012               	return	
  9354  00F8C0                     
  9355                           ; BSR set to: 0
  9356                           ;fat16.c: 1261: return 0xDE;
  9357                           
  9358                           ; BSR set to: 0
  9359  00F8C0  0EDE               	movlw	222
  9360                           
  9361                           ; BSR set to: 0
  9362  00F8C2  0012               	return	
  9363  00F8C4                     
  9364                           ; BSR set to: 0
  9365                           ;fat16.c: 1263: return 0x38;
  9366                           
  9367                           ; BSR set to: 0
  9368  00F8C4  0E38               	movlw	56
  9369                           
  9370                           ; BSR set to: 0
  9371  00F8C6  0012               	return	
  9372  00F8C8                     
  9373                           ; BSR set to: 0
  9374                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
  9375                           
  9376                           ; BSR set to: 0
  9377  00F8C8  0E02               	movlw	2
  9378                           
  9379                           ; BSR set to: 0
  9380  00F8CA  0012               	return	
  9381  00F8CC                     
  9382                           ; BSR set to: 0
  9383                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  9384                           
  9385                           ; BSR set to: 0
  9386  00F8CC  0E00               	movlw	0
  9387                           
  9388                           ; BSR set to: 0
  9389  00F8CE  0012               	return	
  9390  00F8D0                     
  9391                           ; BSR set to: 0
  9392                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
  9393                           
  9394                           ; BSR set to: 0
  9395  00F8D0  0E0C               	movlw	12
  9396                           
  9397                           ; BSR set to: 0
  9398  00F8D2  0012               	return	
  9399  00F8D4                     
  9400                           ; BSR set to: 0
  9401                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
  9402                           
  9403                           ; BSR set to: 0
  9404  00F8D4  0E00               	movlw	0
  9405                           
  9406                           ; BSR set to: 0
  9407  00F8D6  0012               	return	
  9408  00F8D8                     
  9409                           ; BSR set to: 0
  9410                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
  9411                           
  9412                           ; BSR set to: 0
  9413  00F8D8  0E00               	movlw	0
  9414                           
  9415                           ; BSR set to: 0
  9416  00F8DA  0012               	return	
  9417  00F8DC                     
  9418                           ; BSR set to: 0
  9419                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9420                           
  9421                           ; BSR set to: 0
  9422  00F8DC  0E00               	movlw	0
  9423                           
  9424                           ; BSR set to: 0
  9425  00F8DE  0012               	return	
  9426  00F8E0                     
  9427                           ; BSR set to: 0
  9428                           ;fat16.c: 1277: return 0x00;
  9429                           
  9430                           ; BSR set to: 0
  9431  00F8E0  0E00               	movlw	0
  9432                           
  9433                           ; BSR set to: 0
  9434  00F8E2  0012               	return	
  9435  00F8E4                     l2015:
  9436  00F8E4                     l14801:
  9437                           
  9438                           ; BSR set to: 0
  9439  00F8E4  C060  F062         	movff	__get_root@idx,??__get_root
  9440  00F8E8  C061  F063         	movff	__get_root@idx+1,??__get_root+1
  9441                           
  9442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9443                           ; Switch size 1, requested type "space"
  9444                           ; Number of cases is 1, Range of values is 0 to 0
  9445                           ; switch strategies available:
  9446                           ; Name         Instructions Cycles
  9447                           ; simple_byte            4     3 (average)
  9448                           ;	Chosen strategy is simple_byte
  9449  00F8EC  5163               	movf	(??__get_root+1)& (0+255),w,b
  9450  00F8EE  0A00               	xorlw	0	; case 0
  9451  00F8F0  A4D8               	btfss	status,2,c
  9452  00F8F2  D7F6               	goto	l2036
  9453                           
  9454                           ; BSR set to: 0
  9455                           ; Switch size 1, requested type "space"
  9456                           ; Number of cases is 20, Range of values is 11 to 31
  9457                           ; switch strategies available:
  9458                           ; Name         Instructions Cycles
  9459                           ; simple_byte           61    31 (average)
  9460                           ;	Chosen strategy is simple_byte
  9461  00F8F4  5162               	movf	??__get_root& (0+255),w,b
  9462  00F8F6  0A0B               	xorlw	11	; case 11
  9463  00F8F8  B4D8               	btfsc	status,2,c
  9464  00F8FA  D7CA               	goto	l2016
  9465  00F8FC  0A06               	xorlw	6	; case 13
  9466  00F8FE  B4D8               	btfsc	status,2,c
  9467  00F900  D7C9               	goto	l2017
  9468  00F902  0A03               	xorlw	3	; case 14
  9469  00F904  B4D8               	btfsc	status,2,c
  9470  00F906  D7C8               	goto	l2018
  9471  00F908  0A01               	xorlw	1	; case 15
  9472  00F90A  B4D8               	btfsc	status,2,c
  9473  00F90C  D7C7               	goto	l2019
  9474  00F90E  0A1F               	xorlw	31	; case 16
  9475  00F910  B4D8               	btfsc	status,2,c
  9476  00F912  D7C6               	goto	l2020
  9477  00F914  0A01               	xorlw	1	; case 17
  9478  00F916  B4D8               	btfsc	status,2,c
  9479  00F918  D7C5               	goto	l2021
  9480  00F91A  0A03               	xorlw	3	; case 18
  9481  00F91C  B4D8               	btfsc	status,2,c
  9482  00F91E  D7C4               	goto	l2022
  9483  00F920  0A01               	xorlw	1	; case 19
  9484  00F922  B4D8               	btfsc	status,2,c
  9485  00F924  D7C3               	goto	l2023
  9486  00F926  0A07               	xorlw	7	; case 20
  9487  00F928  B4D8               	btfsc	status,2,c
  9488  00F92A  D7C2               	goto	l2024
  9489  00F92C  0A01               	xorlw	1	; case 21
  9490  00F92E  B4D8               	btfsc	status,2,c
  9491  00F930  D7C1               	goto	l2025
  9492  00F932  0A03               	xorlw	3	; case 22
  9493  00F934  B4D8               	btfsc	status,2,c
  9494  00F936  D7C0               	goto	l2026
  9495  00F938  0A01               	xorlw	1	; case 23
  9496  00F93A  B4D8               	btfsc	status,2,c
  9497  00F93C  D7BF               	goto	l2027
  9498  00F93E  0A0F               	xorlw	15	; case 24
  9499  00F940  B4D8               	btfsc	status,2,c
  9500  00F942  D7BE               	goto	l2028
  9501  00F944  0A01               	xorlw	1	; case 25
  9502  00F946  B4D8               	btfsc	status,2,c
  9503  00F948  D7BD               	goto	l2029
  9504  00F94A  0A03               	xorlw	3	; case 26
  9505  00F94C  B4D8               	btfsc	status,2,c
  9506  00F94E  D7BC               	goto	l2030
  9507  00F950  0A01               	xorlw	1	; case 27
  9508  00F952  B4D8               	btfsc	status,2,c
  9509  00F954  D7BB               	goto	l2031
  9510  00F956  0A07               	xorlw	7	; case 28
  9511  00F958  B4D8               	btfsc	status,2,c
  9512  00F95A  D7BA               	goto	l2032
  9513  00F95C  0A01               	xorlw	1	; case 29
  9514  00F95E  B4D8               	btfsc	status,2,c
  9515  00F960  D7B9               	goto	l2033
  9516  00F962  0A03               	xorlw	3	; case 30
  9517  00F964  B4D8               	btfsc	status,2,c
  9518  00F966  D7B8               	goto	l2034
  9519  00F968  0A01               	xorlw	1	; case 31
  9520  00F96A  B4D8               	btfsc	status,2,c
  9521  00F96C  D7B7               	goto	l2035
  9522  00F96E  D7B8               	goto	l2036
  9523  00F970                     l2037:
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
  9527                           
  9528                           ; BSR set to: 0
  9529                           
  9530                           ; BSR set to: 0
  9531  00F970  0E00               	movlw	0
  9532  00F972  0012               	return	
  9533  00F974                     __end_of__get_root:
  9534                           	opt stack 0
  9535                           tblptru	equ	0xFF8
  9536                           tblptrh	equ	0xFF7
  9537                           tblptrl	equ	0xFF6
  9538                           tablat	equ	0xFF5
  9539                           prodh	equ	0xFF4
  9540                           prodl	equ	0xFF3
  9541                           postinc0	equ	0xFEE
  9542                           wreg	equ	0xFE8
  9543                           postdec1	equ	0xFE5
  9544                           fsr1h	equ	0xFE2
  9545                           fsr1l	equ	0xFE1
  9546                           indf2	equ	0xFDF
  9547                           postinc2	equ	0xFDE
  9548                           fsr2h	equ	0xFDA
  9549                           fsr2l	equ	0xFD9
  9550                           status	equ	0xFD8
  9551                           
  9552 ;; *************** function __get_mbr *****************
  9553 ;; Defined at:
  9554 ;;		line 1037 in file "fat16.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  idx             2    0[BANK0 ] unsigned int 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      unsigned char 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9568 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9571 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9572 ;;Total ram usage:        4 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:   10
  9575 ;; This function calls:
  9576 ;;		Nothing
  9577 ;; This function is called by:
  9578 ;;		_fat_get_format_status
  9579 ;;		_fat_format
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text19
  9584  012664                     __ptext19:
  9585                           	opt stack 0
  9586  012664                     __get_mbr:
  9587                           	opt stack 17
  9588                           
  9589                           ;fat16.c: 1039: switch (idx)
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;incstack = 0
  9593  012664  D026               	goto	l1918
  9594  012666                     
  9595                           ;fat16.c: 1042: return 0x80;
  9596  012666  0E80               	movlw	128
  9597  012668  0012               	return	
  9598  01266A                     
  9599                           ;fat16.c: 1044: return 0;
  9600  01266A  0E00               	movlw	0
  9601  01266C  0012               	return	
  9602  01266E                     
  9603                           ;fat16.c: 1046: return 2;
  9604  01266E  0E02               	movlw	2
  9605  012670  0012               	return	
  9606  012672                     
  9607                           ;fat16.c: 1048: return 0;
  9608  012672  0E00               	movlw	0
  9609  012674  0012               	return	
  9610  012676                     
  9611                           ;fat16.c: 1050: return 0x04;
  9612  012676  0E04               	movlw	4
  9613  012678  0012               	return	
  9614  01267A                     
  9615                           ;fat16.c: 1052: return 2;
  9616  01267A  0E02               	movlw	2
  9617  01267C  0012               	return	
  9618  01267E                     
  9619                           ;fat16.c: 1054: return 3;
  9620  01267E  0E03               	movlw	3
  9621  012680  0012               	return	
  9622  012682                     
  9623                           ;fat16.c: 1056: return 8;
  9624  012682  0E08               	movlw	8
  9625  012684  0012               	return	
  9626  012686                     
  9627                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9628  012686  0E01               	movlw	1
  9629  012688  0012               	return	
  9630  01268A                     
  9631                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9632  01268A  0E00               	movlw	0
  9633  01268C  0012               	return	
  9634  01268E                     
  9635                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9636  01268E  0E00               	movlw	0
  9637  012690  0012               	return	
  9638  012692                     
  9639                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9640  012692  0E00               	movlw	0
  9641  012694  0012               	return	
  9642  012696                     
  9643                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9644  012696  0EFF               	movlw	255
  9645  012698  0012               	return	
  9646  01269A                     
  9647                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9648  01269A  0E1F               	movlw	31
  9649  01269C  0012               	return	
  9650  01269E                     
  9651                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9652  01269E  0E00               	movlw	0
  9653  0126A0  0012               	return	
  9654  0126A2                     
  9655                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9656  0126A2  0E00               	movlw	0
  9657  0126A4  0012               	return	
  9658  0126A6                     
  9659                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9660  0126A6  0E55               	movlw	85
  9661  0126A8  0012               	return	
  9662  0126AA                     
  9663                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9664  0126AA  0EAA               	movlw	170
  9665  0126AC  0012               	return	
  9666  0126AE                     
  9667                           ;fat16.c: 1078: return 0X00;
  9668  0126AE  0E00               	movlw	0
  9669                           
  9670                           ;fat16.c: 1079: }
  9671  0126B0  0012               	return	
  9672  0126B2                     l1918:
  9673  0126B2  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9674  0126B6  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9675                           
  9676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9677                           ; Switch size 1, requested type "space"
  9678                           ; Number of cases is 1, Range of values is 1 to 1
  9679                           ; switch strategies available:
  9680                           ; Name         Instructions Cycles
  9681                           ; simple_byte            4     3 (average)
  9682                           ;	Chosen strategy is simple_byte
  9683  0126BA  0100               	movlb	0	; () banked
  9684  0126BC  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9685  0126BE  0A01               	xorlw	1	; case 1
  9686  0126C0  A4D8               	btfss	status,2,c
  9687  0126C2  D7F5               	goto	l1938
  9688                           
  9689                           ; BSR set to: 0
  9690                           ; Switch size 1, requested type "space"
  9691                           ; Number of cases is 18, Range of values is 190 to 255
  9692                           ; switch strategies available:
  9693                           ; Name         Instructions Cycles
  9694                           ; simple_byte           55    28 (average)
  9695                           ;	Chosen strategy is simple_byte
  9696  0126C4  5162               	movf	??__get_mbr& (0+255),w,b
  9697  0126C6  0ABE               	xorlw	190	; case 190
  9698  0126C8  B4D8               	btfsc	status,2,c
  9699  0126CA  D7CD               	goto	l1919
  9700  0126CC  0A01               	xorlw	1	; case 191
  9701  0126CE  B4D8               	btfsc	status,2,c
  9702  0126D0  D7CC               	goto	l1921
  9703  0126D2  0A7F               	xorlw	127	; case 192
  9704  0126D4  B4D8               	btfsc	status,2,c
  9705  0126D6  D7CB               	goto	l1922
  9706  0126D8  0A01               	xorlw	1	; case 193
  9707  0126DA  B4D8               	btfsc	status,2,c
  9708  0126DC  D7CA               	goto	l1923
  9709  0126DE  0A03               	xorlw	3	; case 194
  9710  0126E0  B4D8               	btfsc	status,2,c
  9711  0126E2  D7C9               	goto	l1924
  9712  0126E4  0A01               	xorlw	1	; case 195
  9713  0126E6  B4D8               	btfsc	status,2,c
  9714  0126E8  D7C8               	goto	l1925
  9715  0126EA  0A07               	xorlw	7	; case 196
  9716  0126EC  B4D8               	btfsc	status,2,c
  9717  0126EE  D7C7               	goto	l1926
  9718  0126F0  0A01               	xorlw	1	; case 197
  9719  0126F2  B4D8               	btfsc	status,2,c
  9720  0126F4  D7C6               	goto	l1927
  9721  0126F6  0A03               	xorlw	3	; case 198
  9722  0126F8  B4D8               	btfsc	status,2,c
  9723  0126FA  D7C5               	goto	l1928
  9724  0126FC  0A01               	xorlw	1	; case 199
  9725  0126FE  B4D8               	btfsc	status,2,c
  9726  012700  D7C4               	goto	l1929
  9727  012702  0A0F               	xorlw	15	; case 200
  9728  012704  B4D8               	btfsc	status,2,c
  9729  012706  D7C3               	goto	l1930
  9730  012708  0A01               	xorlw	1	; case 201
  9731  01270A  B4D8               	btfsc	status,2,c
  9732  01270C  D7C2               	goto	l1931
  9733  01270E  0A03               	xorlw	3	; case 202
  9734  012710  B4D8               	btfsc	status,2,c
  9735  012712  D7C1               	goto	l1932
  9736  012714  0A01               	xorlw	1	; case 203
  9737  012716  B4D8               	btfsc	status,2,c
  9738  012718  D7C0               	goto	l1933
  9739  01271A  0A07               	xorlw	7	; case 204
  9740  01271C  B4D8               	btfsc	status,2,c
  9741  01271E  D7BF               	goto	l1934
  9742  012720  0A01               	xorlw	1	; case 205
  9743  012722  B4D8               	btfsc	status,2,c
  9744  012724  D7BE               	goto	l1935
  9745  012726  0A33               	xorlw	51	; case 254
  9746  012728  B4D8               	btfsc	status,2,c
  9747  01272A  D7BD               	goto	l1936
  9748  01272C  0A01               	xorlw	1	; case 255
  9749  01272E  B4D8               	btfsc	status,2,c
  9750  012730  D7BC               	goto	l1937
  9751  012732  D7BD               	goto	l1938
  9752  012734                     __end_of__get_mbr:
  9753                           	opt stack 0
  9754                           tblptru	equ	0xFF8
  9755                           tblptrh	equ	0xFF7
  9756                           tblptrl	equ	0xFF6
  9757                           tablat	equ	0xFF5
  9758                           prodh	equ	0xFF4
  9759                           prodl	equ	0xFF3
  9760                           postinc0	equ	0xFEE
  9761                           wreg	equ	0xFE8
  9762                           postdec1	equ	0xFE5
  9763                           fsr1h	equ	0xFE2
  9764                           fsr1l	equ	0xFE1
  9765                           indf2	equ	0xFDF
  9766                           postinc2	equ	0xFDE
  9767                           fsr2h	equ	0xFDA
  9768                           fsr2l	equ	0xFD9
  9769                           status	equ	0xFD8
  9770                           
  9771 ;; *************** function __get_fbr *****************
  9772 ;; Defined at:
  9773 ;;		line 1082 in file "fat16.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  idx             2    0[BANK0 ] unsigned int 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      unsigned char 
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9787 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;Total ram usage:        4 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:   10
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_fat_get_format_status
  9798 ;;		_fat_format
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text20
  9803  00E184                     __ptext20:
  9804                           	opt stack 0
  9805  00E184                     __get_fbr:
  9806                           	opt stack 17
  9807                           
  9808                           ;fat16.c: 1084: switch (idx)
  9809                           
  9810                           ;incstack = 0
  9811  00E184  D098               	goto	l1942
  9812  00E186                     
  9813                           ;fat16.c: 1087: return 0xEB;
  9814  00E186  0EEB               	movlw	235
  9815  00E188  0012               	return	
  9816  00E18A                     
  9817                           ;fat16.c: 1089: return 0x3C;
  9818  00E18A  0E3C               	movlw	60
  9819  00E18C  0012               	return	
  9820  00E18E                     
  9821                           ;fat16.c: 1091: return 0x90;
  9822  00E18E  0E90               	movlw	144
  9823  00E190  0012               	return	
  9824  00E192                     
  9825                           ;fat16.c: 1093: return "MSDOS5.0"[0];
  9826  00E192  0E0B               	movlw	low STR_7
  9827  00E194  6EF6               	movwf	tblptrl,c
  9828  00E196                     	if	1	;There is more than 1 active tblptr byte
  9829  00E196  0EA3               	movlw	high STR_7
  9830  00E198  6EF7               	movwf	tblptrh,c
  9831  00E19A                     	endif
  9832  00E19A                     	if	1	;There are 3 active tblptr bytes
  9833  00E19A  0E00               	movlw	low (STR_7 shr (0+16))
  9834  00E19C  6EF8               	movwf	tblptru,c
  9835  00E19E                     	endif
  9836  00E19E  0008               	tblrd		*
  9837  00E1A0  50F5               	movf	tablat,w,c
  9838  00E1A2  0012               	return	
  9839  00E1A4                     
  9840                           ;fat16.c: 1095: return "MSDOS5.0"[1];
  9841  00E1A4  0E0C               	movlw	low (STR_7+1)
  9842  00E1A6  6EF6               	movwf	tblptrl,c
  9843  00E1A8  0EA3               	movlw	high (STR_7+1)
  9844  00E1AA  6EF7               	movwf	tblptrh,c
  9845  00E1AC                     	if	0	;tblptru may be non-zero
  9846  00E1AC                     	endif
  9847  00E1AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9848  00E1AC  0E00               	movlw	low (__mediumconst shr (0+16))
  9849  00E1AE  6EF8               	movwf	tblptru,c
  9850  00E1B0                     	endif
  9851  00E1B0  0008               	tblrd		*
  9852  00E1B2  50F5               	movf	tablat,w,c
  9853  00E1B4  0012               	return	
  9854  00E1B6                     
  9855                           ;fat16.c: 1097: return "MSDOS5.0"[2];
  9856  00E1B6  0E0D               	movlw	low (STR_7+2)
  9857  00E1B8  6EF6               	movwf	tblptrl,c
  9858  00E1BA  0EA3               	movlw	high (STR_7+2)
  9859  00E1BC  6EF7               	movwf	tblptrh,c
  9860  00E1BE                     	if	0	;tblptru may be non-zero
  9861  00E1BE                     	endif
  9862  00E1BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9863  00E1BE  0E00               	movlw	low (__mediumconst shr (0+16))
  9864  00E1C0  6EF8               	movwf	tblptru,c
  9865  00E1C2                     	endif
  9866  00E1C2  0008               	tblrd		*
  9867  00E1C4  50F5               	movf	tablat,w,c
  9868  00E1C6  0012               	return	
  9869  00E1C8                     
  9870                           ;fat16.c: 1099: return "MSDOS5.0"[3];
  9871  00E1C8  0E0E               	movlw	low (STR_7+3)
  9872  00E1CA  6EF6               	movwf	tblptrl,c
  9873  00E1CC  0EA3               	movlw	high (STR_7+3)
  9874  00E1CE  6EF7               	movwf	tblptrh,c
  9875  00E1D0                     	if	0	;tblptru may be non-zero
  9876  00E1D0                     	endif
  9877  00E1D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9878  00E1D0  0E00               	movlw	low (__mediumconst shr (0+16))
  9879  00E1D2  6EF8               	movwf	tblptru,c
  9880  00E1D4                     	endif
  9881  00E1D4  0008               	tblrd		*
  9882  00E1D6  50F5               	movf	tablat,w,c
  9883  00E1D8  0012               	return	
  9884  00E1DA                     
  9885                           ;fat16.c: 1101: return "MSDOS5.0"[4];
  9886  00E1DA  0E0F               	movlw	low (STR_7+4)
  9887  00E1DC  6EF6               	movwf	tblptrl,c
  9888  00E1DE  0EA3               	movlw	high (STR_7+4)
  9889  00E1E0  6EF7               	movwf	tblptrh,c
  9890  00E1E2                     	if	0	;tblptru may be non-zero
  9891  00E1E2                     	endif
  9892  00E1E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9893  00E1E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9894  00E1E4  6EF8               	movwf	tblptru,c
  9895  00E1E6                     	endif
  9896  00E1E6  0008               	tblrd		*
  9897  00E1E8  50F5               	movf	tablat,w,c
  9898  00E1EA  0012               	return	
  9899  00E1EC                     
  9900                           ;fat16.c: 1103: return "MSDOS5.0"[5];
  9901  00E1EC  0E10               	movlw	low (STR_7+5)
  9902  00E1EE  6EF6               	movwf	tblptrl,c
  9903  00E1F0  0EA3               	movlw	high (STR_7+5)
  9904  00E1F2  6EF7               	movwf	tblptrh,c
  9905  00E1F4                     	if	0	;tblptru may be non-zero
  9906  00E1F4                     	endif
  9907  00E1F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9908  00E1F4  0E00               	movlw	low (__mediumconst shr (0+16))
  9909  00E1F6  6EF8               	movwf	tblptru,c
  9910  00E1F8                     	endif
  9911  00E1F8  0008               	tblrd		*
  9912  00E1FA  50F5               	movf	tablat,w,c
  9913  00E1FC  0012               	return	
  9914  00E1FE                     
  9915                           ;fat16.c: 1105: return "MSDOS5.0"[6];
  9916  00E1FE  0E11               	movlw	low (STR_7+6)
  9917  00E200  6EF6               	movwf	tblptrl,c
  9918  00E202  0EA3               	movlw	high (STR_7+6)
  9919  00E204  6EF7               	movwf	tblptrh,c
  9920  00E206                     	if	0	;tblptru may be non-zero
  9921  00E206                     	endif
  9922  00E206                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9923  00E206  0E00               	movlw	low (__mediumconst shr (0+16))
  9924  00E208  6EF8               	movwf	tblptru,c
  9925  00E20A                     	endif
  9926  00E20A  0008               	tblrd		*
  9927  00E20C  50F5               	movf	tablat,w,c
  9928  00E20E  0012               	return	
  9929  00E210                     
  9930                           ;fat16.c: 1107: return "MSDOS5.0"[7];
  9931  00E210  0E12               	movlw	low (STR_7+7)
  9932  00E212  6EF6               	movwf	tblptrl,c
  9933  00E214  0EA3               	movlw	high (STR_7+7)
  9934  00E216  6EF7               	movwf	tblptrh,c
  9935  00E218                     	if	0	;tblptru may be non-zero
  9936  00E218                     	endif
  9937  00E218                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9938  00E218  0E00               	movlw	low (__mediumconst shr (0+16))
  9939  00E21A  6EF8               	movwf	tblptru,c
  9940  00E21C                     	endif
  9941  00E21C  0008               	tblrd		*
  9942  00E21E  50F5               	movf	tablat,w,c
  9943  00E220  0012               	return	
  9944  00E222                     
  9945                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
  9946  00E222  0E00               	movlw	0
  9947  00E224  0012               	return	
  9948  00E226                     
  9949                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9950  00E226  0E02               	movlw	2
  9951  00E228  0012               	return	
  9952  00E22A                     
  9953                           ;fat16.c: 1113: return 1;
  9954  00E22A  0E01               	movlw	1
  9955  00E22C  0012               	return	
  9956  00E22E                     
  9957                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
  9958  00E22E  0E01               	movlw	1
  9959  00E230  0012               	return	
  9960  00E232                     
  9961                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9962  00E232  0E00               	movlw	0
  9963  00E234  0012               	return	
  9964  00E236                     
  9965                           ;fat16.c: 1119: return 1;
  9966  00E236  0E01               	movlw	1
  9967  00E238  0012               	return	
  9968  00E23A                     
  9969                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
  9970  00E23A  0E40               	movlw	64
  9971  00E23C  0012               	return	
  9972  00E23E                     
  9973                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9974  00E23E  0E00               	movlw	0
  9975  00E240  0012               	return	
  9976  00E242                     
  9977                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9978  00E242  0EFF               	movlw	255
  9979  00E244  0012               	return	
  9980  00E246                     
  9981                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9982  00E246  0E1F               	movlw	31
  9983  00E248  0012               	return	
  9984  00E24A                     
  9985                           ;fat16.c: 1129: return 0XF8;
  9986  00E24A  0EF8               	movlw	248
  9987  00E24C  0012               	return	
  9988  00E24E                     
  9989                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
  9990  00E24E  0E20               	movlw	32
  9991  00E250  0012               	return	
  9992  00E252                     
  9993                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9994  00E252  0E00               	movlw	0
  9995  00E254  0012               	return	
  9996  00E256                     
  9997                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
  9998  00E256  0E3F               	movlw	63
  9999  00E258  0012               	return	
 10000  00E25A                     
 10001                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 10002  00E25A  0E00               	movlw	0
 10003  00E25C  0012               	return	
 10004  00E25E                     
 10005                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 10006  00E25E  0E10               	movlw	16
 10007  00E260  0012               	return	
 10008  00E262                     
 10009                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 10010  00E262  0E00               	movlw	0
 10011  00E264  0012               	return	
 10012  00E266                     
 10013                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 10014  00E266  0E00               	movlw	0
 10015  00E268  0012               	return	
 10016  00E26A                     
 10017                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 10018  00E26A  0E00               	movlw	0
 10019  00E26C  0012               	return	
 10020  00E26E                     
 10021                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 10022  00E26E  0E00               	movlw	0
 10023  00E270  0012               	return	
 10024  00E272                     
 10025                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 10026  00E272  0E00               	movlw	0
 10027  00E274  0012               	return	
 10028  00E276                     
 10029                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 10030  00E276  0E01               	movlw	1
 10031  00E278  0012               	return	
 10032  00E27A                     
 10033                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 10034  00E27A  0E00               	movlw	0
 10035  00E27C  0012               	return	
 10036  00E27E                     
 10037                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 10038  00E27E  0E22               	movlw	34
 10039  00E280  0012               	return	
 10040  00E282                     
 10041                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 10042  00E282  0E00               	movlw	0
 10043  00E284  0012               	return	
 10044  00E286                     
 10045                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 10046                           
 10047                           ;fat16.c: 1160: case 0x2F:
 10048  00E286  0E00               	movlw	0
 10049  00E288  0012               	return	
 10050  00E28A                     
 10051                           ;fat16.c: 1163: return 'F';
 10052  00E28A  0E46               	movlw	70
 10053  00E28C  0012               	return	
 10054  00E28E                     
 10055                           ;fat16.c: 1165: return 'A';
 10056  00E28E  0E41               	movlw	65
 10057  00E290  0012               	return	
 10058  00E292                     
 10059                           ;fat16.c: 1167: return 'T';
 10060  00E292  0E54               	movlw	84
 10061  00E294  0012               	return	
 10062  00E296                     
 10063                           ;fat16.c: 1169: return '1';
 10064  00E296  0E31               	movlw	49
 10065  00E298  0012               	return	
 10066  00E29A                     
 10067                           ;fat16.c: 1171: return '6';
 10068  00E29A  0E36               	movlw	54
 10069  00E29C  0012               	return	
 10070  00E29E                     
 10071                           ;fat16.c: 1173: return ' ';
 10072  00E29E  0E20               	movlw	32
 10073  00E2A0  0012               	return	
 10074  00E2A2                     
 10075                           ;fat16.c: 1175: return ' ';
 10076  00E2A2  0E20               	movlw	32
 10077  00E2A4  0012               	return	
 10078  00E2A6                     
 10079                           ;fat16.c: 1177: return ' ';
 10080  00E2A6  0E20               	movlw	32
 10081  00E2A8  0012               	return	
 10082  00E2AA                     
 10083                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 10084  00E2AA  0E55               	movlw	85
 10085  00E2AC  0012               	return	
 10086  00E2AE                     
 10087                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 10088  00E2AE  0EAA               	movlw	170
 10089  00E2B0  0012               	return	
 10090  00E2B2                     
 10091                           ;fat16.c: 1183: return 0X00;
 10092  00E2B2  0E00               	movlw	0
 10093                           
 10094                           ;fat16.c: 1184: }
 10095  00E2B4  0012               	return	
 10096  00E2B6                     l1942:
 10097  00E2B6  C060  F062         	movff	__get_fbr@idx,??__get_fbr
 10098  00E2BA  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
 10099                           
 10100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10101                           ; Switch size 1, requested type "space"
 10102                           ; Number of cases is 2, Range of values is 0 to 1
 10103                           ; switch strategies available:
 10104                           ; Name         Instructions Cycles
 10105                           ; simple_byte            7     4 (average)
 10106                           ;	Chosen strategy is simple_byte
 10107  00E2BE  0100               	movlb	0	; () banked
 10108  00E2C0  5163               	movf	(??__get_fbr+1)& (0+255),w,b
 10109  00E2C2  0A00               	xorlw	0	; case 0
 10110  00E2C4  B4D8               	btfsc	status,2,c
 10111  00E2C6  D004               	goto	l19161
 10112  00E2C8  0A01               	xorlw	1	; case 1
 10113  00E2CA  B4D8               	btfsc	status,2,c
 10114  00E2CC  D08D               	goto	l19163
 10115  00E2CE  D7F1               	goto	l1992
 10116  00E2D0                     l19161:
 10117                           
 10118                           ; BSR set to: 0
 10119                           ; Switch size 1, requested type "space"
 10120                           ; Number of cases is 46, Range of values is 0 to 61
 10121                           ; switch strategies available:
 10122                           ; Name         Instructions Cycles
 10123                           ; simple_byte          139    70 (average)
 10124                           ;	Chosen strategy is simple_byte
 10125  00E2D0  5162               	movf	??__get_fbr& (0+255),w,b
 10126  00E2D2  0A00               	xorlw	0	; case 0
 10127  00E2D4  B4D8               	btfsc	status,2,c
 10128  00E2D6  D757               	goto	l1943
 10129  00E2D8  0A01               	xorlw	1	; case 1
 10130  00E2DA  B4D8               	btfsc	status,2,c
 10131  00E2DC  D756               	goto	l1945
 10132  00E2DE  0A03               	xorlw	3	; case 2
 10133  00E2E0  B4D8               	btfsc	status,2,c
 10134  00E2E2  D755               	goto	l1946
 10135  00E2E4  0A01               	xorlw	1	; case 3
 10136  00E2E6  B4D8               	btfsc	status,2,c
 10137  00E2E8  D754               	goto	l1947
 10138  00E2EA  0A07               	xorlw	7	; case 4
 10139  00E2EC  B4D8               	btfsc	status,2,c
 10140  00E2EE  D75A               	goto	l1948
 10141  00E2F0  0A01               	xorlw	1	; case 5
 10142  00E2F2  B4D8               	btfsc	status,2,c
 10143  00E2F4  D760               	goto	l1949
 10144  00E2F6  0A03               	xorlw	3	; case 6
 10145  00E2F8  B4D8               	btfsc	status,2,c
 10146  00E2FA  D766               	goto	l1950
 10147  00E2FC  0A01               	xorlw	1	; case 7
 10148  00E2FE  B4D8               	btfsc	status,2,c
 10149  00E300  D76C               	goto	l1951
 10150  00E302  0A0F               	xorlw	15	; case 8
 10151  00E304  B4D8               	btfsc	status,2,c
 10152  00E306  D772               	goto	l1952
 10153  00E308  0A01               	xorlw	1	; case 9
 10154  00E30A  B4D8               	btfsc	status,2,c
 10155  00E30C  D778               	goto	l1953
 10156  00E30E  0A03               	xorlw	3	; case 10
 10157  00E310  B4D8               	btfsc	status,2,c
 10158  00E312  D77E               	goto	l1954
 10159  00E314  0A01               	xorlw	1	; case 11
 10160  00E316  B4D8               	btfsc	status,2,c
 10161  00E318  D784               	goto	l1955
 10162  00E31A  0A07               	xorlw	7	; case 12
 10163  00E31C  B4D8               	btfsc	status,2,c
 10164  00E31E  D783               	goto	l1956
 10165  00E320  0A01               	xorlw	1	; case 13
 10166  00E322  B4D8               	btfsc	status,2,c
 10167  00E324  D782               	goto	l1957
 10168  00E326  0A03               	xorlw	3	; case 14
 10169  00E328  B4D8               	btfsc	status,2,c
 10170  00E32A  D781               	goto	l1958
 10171  00E32C  0A01               	xorlw	1	; case 15
 10172  00E32E  B4D8               	btfsc	status,2,c
 10173  00E330  D780               	goto	l1959
 10174  00E332  0A1F               	xorlw	31	; case 16
 10175  00E334  B4D8               	btfsc	status,2,c
 10176  00E336  D77F               	goto	l1960
 10177  00E338  0A01               	xorlw	1	; case 17
 10178  00E33A  B4D8               	btfsc	status,2,c
 10179  00E33C  D77E               	goto	l1961
 10180  00E33E  0A03               	xorlw	3	; case 18
 10181  00E340  B4D8               	btfsc	status,2,c
 10182  00E342  D77D               	goto	l1962
 10183  00E344  0A01               	xorlw	1	; case 19
 10184  00E346  B4D8               	btfsc	status,2,c
 10185  00E348  D77C               	goto	l1963
 10186  00E34A  0A07               	xorlw	7	; case 20
 10187  00E34C  B4D8               	btfsc	status,2,c
 10188  00E34E  D77B               	goto	l1964
 10189  00E350  0A01               	xorlw	1	; case 21
 10190  00E352  B4D8               	btfsc	status,2,c
 10191  00E354  D77A               	goto	l1965
 10192  00E356  0A03               	xorlw	3	; case 22
 10193  00E358  B4D8               	btfsc	status,2,c
 10194  00E35A  D779               	goto	l1966
 10195  00E35C  0A01               	xorlw	1	; case 23
 10196  00E35E  B4D8               	btfsc	status,2,c
 10197  00E360  D778               	goto	l1967
 10198  00E362  0A0F               	xorlw	15	; case 24
 10199  00E364  B4D8               	btfsc	status,2,c
 10200  00E366  D777               	goto	l1968
 10201  00E368  0A01               	xorlw	1	; case 25
 10202  00E36A  B4D8               	btfsc	status,2,c
 10203  00E36C  D776               	goto	l1969
 10204  00E36E  0A03               	xorlw	3	; case 26
 10205  00E370  B4D8               	btfsc	status,2,c
 10206  00E372  D775               	goto	l1970
 10207  00E374  0A01               	xorlw	1	; case 27
 10208  00E376  B4D8               	btfsc	status,2,c
 10209  00E378  D774               	goto	l1971
 10210  00E37A  0A07               	xorlw	7	; case 28
 10211  00E37C  B4D8               	btfsc	status,2,c
 10212  00E37E  D773               	goto	l1972
 10213  00E380  0A01               	xorlw	1	; case 29
 10214  00E382  B4D8               	btfsc	status,2,c
 10215  00E384  D772               	goto	l1973
 10216  00E386  0A03               	xorlw	3	; case 30
 10217  00E388  B4D8               	btfsc	status,2,c
 10218  00E38A  D771               	goto	l1974
 10219  00E38C  0A01               	xorlw	1	; case 31
 10220  00E38E  B4D8               	btfsc	status,2,c
 10221  00E390  D770               	goto	l1975
 10222  00E392  0A37               	xorlw	55	; case 40
 10223  00E394  B4D8               	btfsc	status,2,c
 10224  00E396  D76F               	goto	l1976
 10225  00E398  0A01               	xorlw	1	; case 41
 10226  00E39A  B4D8               	btfsc	status,2,c
 10227  00E39C  D76E               	goto	l1977
 10228  00E39E  0A05               	xorlw	5	; case 44
 10229  00E3A0  B4D8               	btfsc	status,2,c
 10230  00E3A2  D76D               	goto	l1978
 10231  00E3A4  0A01               	xorlw	1	; case 45
 10232  00E3A6  B4D8               	btfsc	status,2,c
 10233  00E3A8  D76C               	goto	l1979
 10234  00E3AA  0A03               	xorlw	3	; case 46
 10235  00E3AC  B4D8               	btfsc	status,2,c
 10236  00E3AE  D76B               	goto	l1980
 10237  00E3B0  0A01               	xorlw	1	; case 47
 10238  00E3B2  B4D8               	btfsc	status,2,c
 10239  00E3B4  D768               	goto	l1980
 10240  00E3B6  0A19               	xorlw	25	; case 54
 10241  00E3B8  B4D8               	btfsc	status,2,c
 10242  00E3BA  D767               	goto	l1982
 10243  00E3BC  0A01               	xorlw	1	; case 55
 10244  00E3BE  B4D8               	btfsc	status,2,c
 10245  00E3C0  D766               	goto	l1983
 10246  00E3C2  0A0F               	xorlw	15	; case 56
 10247  00E3C4  B4D8               	btfsc	status,2,c
 10248  00E3C6  D765               	goto	l1984
 10249  00E3C8  0A01               	xorlw	1	; case 57
 10250  00E3CA  B4D8               	btfsc	status,2,c
 10251  00E3CC  D764               	goto	l1985
 10252  00E3CE  0A03               	xorlw	3	; case 58
 10253  00E3D0  B4D8               	btfsc	status,2,c
 10254  00E3D2  D763               	goto	l1986
 10255  00E3D4  0A01               	xorlw	1	; case 59
 10256  00E3D6  B4D8               	btfsc	status,2,c
 10257  00E3D8  D762               	goto	l1987
 10258  00E3DA  0A07               	xorlw	7	; case 60
 10259  00E3DC  B4D8               	btfsc	status,2,c
 10260  00E3DE  D761               	goto	l1988
 10261  00E3E0  0A01               	xorlw	1	; case 61
 10262  00E3E2  B4D8               	btfsc	status,2,c
 10263  00E3E4  D760               	goto	l1989
 10264  00E3E6  D765               	goto	l1992
 10265  00E3E8                     l19163:
 10266                           
 10267                           ; BSR set to: 0
 10268                           ; Switch size 1, requested type "space"
 10269                           ; Number of cases is 2, Range of values is 254 to 255
 10270                           ; switch strategies available:
 10271                           ; Name         Instructions Cycles
 10272                           ; simple_byte            7     4 (average)
 10273                           ;	Chosen strategy is simple_byte
 10274  00E3E8  5162               	movf	??__get_fbr& (0+255),w,b
 10275  00E3EA  0AFE               	xorlw	254	; case 254
 10276  00E3EC  B4D8               	btfsc	status,2,c
 10277  00E3EE  D75D               	goto	l1990
 10278  00E3F0  0A01               	xorlw	1	; case 255
 10279  00E3F2  B4D8               	btfsc	status,2,c
 10280  00E3F4  D75C               	goto	l1991
 10281  00E3F6  D75D               	goto	l1992
 10282  00E3F8                     __end_of__get_fbr:
 10283                           	opt stack 0
 10284                           tblptru	equ	0xFF8
 10285                           tblptrh	equ	0xFF7
 10286                           tblptrl	equ	0xFF6
 10287                           tablat	equ	0xFF5
 10288                           prodh	equ	0xFF4
 10289                           prodl	equ	0xFF3
 10290                           postinc0	equ	0xFEE
 10291                           wreg	equ	0xFE8
 10292                           postdec1	equ	0xFE5
 10293                           fsr1h	equ	0xFE2
 10294                           fsr1l	equ	0xFE1
 10295                           indf2	equ	0xFDF
 10296                           postinc2	equ	0xFDE
 10297                           fsr2h	equ	0xFDA
 10298                           fsr2l	equ	0xFD9
 10299                           status	equ	0xFD8
 10300                           
 10301 ;; *************** function __get_fat *****************
 10302 ;; Defined at:
 10303 ;;		line 1187 in file "fat16.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  idx             2    0[BANK0 ] unsigned int 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;		None
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  1    wreg      unsigned char 
 10310 ;; Registers used:
 10311 ;;		wreg, status,2, status,0
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10317 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10319 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10321 ;;Total ram usage:        4 bytes
 10322 ;; Hardware stack levels used:    1
 10323 ;; Hardware stack levels required when called:   10
 10324 ;; This function calls:
 10325 ;;		Nothing
 10326 ;; This function is called by:
 10327 ;;		_fat_format
 10328 ;; This function uses a non-reentrant model
 10329 ;;
 10330                           
 10331                           	psect	text21
 10332  0145EA                     __ptext21:
 10333                           	opt stack 0
 10334  0145EA                     __get_fat:
 10335                           	opt stack 17
 10336                           
 10337                           ;fat16.c: 1189: switch (idx)
 10338                           
 10339                           ;incstack = 0
 10340  0145EA  D00E               	goto	l1996
 10341  0145EC                     
 10342                           ;fat16.c: 1193: return 0xF8;
 10343  0145EC  0EF8               	movlw	248
 10344  0145EE  0012               	return	
 10345  0145F0                     
 10346                           ;fat16.c: 1195: return 0xFF;
 10347  0145F0  0EFF               	movlw	255
 10348  0145F2  0012               	return	
 10349  0145F4                     
 10350                           ;fat16.c: 1197: return 0xFF;
 10351  0145F4  0EFF               	movlw	255
 10352  0145F6  0012               	return	
 10353  0145F8                     
 10354                           ;fat16.c: 1199: return 0xFF;
 10355  0145F8  0EFF               	movlw	255
 10356  0145FA  0012               	return	
 10357  0145FC                     
 10358                           ;fat16.c: 1202: return 0xFF;
 10359  0145FC  0EFF               	movlw	255
 10360  0145FE  0012               	return	
 10361  014600                     
 10362                           ;fat16.c: 1204: return 0xFF;
 10363  014600  0EFF               	movlw	255
 10364  014602  0012               	return	
 10365  014604                     
 10366                           ;fat16.c: 1206: return 0X00;
 10367  014604  0E00               	movlw	0
 10368                           
 10369                           ;fat16.c: 1207: }
 10370  014606  0012               	return	
 10371  014608                     l1996:
 10372  014608  C060  F062         	movff	__get_fat@idx,??__get_fat
 10373  01460C  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
 10374                           
 10375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10376                           ; Switch size 1, requested type "space"
 10377                           ; Number of cases is 1, Range of values is 0 to 0
 10378                           ; switch strategies available:
 10379                           ; Name         Instructions Cycles
 10380                           ; simple_byte            4     3 (average)
 10381                           ;	Chosen strategy is simple_byte
 10382  014610  0100               	movlb	0	; () banked
 10383  014612  5163               	movf	(??__get_fat+1)& (0+255),w,b
 10384  014614  0A00               	xorlw	0	; case 0
 10385  014616  A4D8               	btfss	status,2,c
 10386  014618  D7F5               	goto	l2004
 10387                           
 10388                           ; BSR set to: 0
 10389                           ; Switch size 1, requested type "space"
 10390                           ; Number of cases is 6, Range of values is 0 to 5
 10391                           ; switch strategies available:
 10392                           ; Name         Instructions Cycles
 10393                           ; simple_byte           19    10 (average)
 10394                           ;	Chosen strategy is simple_byte
 10395  01461A  5162               	movf	??__get_fat& (0+255),w,b
 10396  01461C  0A00               	xorlw	0	; case 0
 10397  01461E  B4D8               	btfsc	status,2,c
 10398  014620  D7E5               	goto	l1997
 10399  014622  0A01               	xorlw	1	; case 1
 10400  014624  B4D8               	btfsc	status,2,c
 10401  014626  D7E4               	goto	l1999
 10402  014628  0A03               	xorlw	3	; case 2
 10403  01462A  B4D8               	btfsc	status,2,c
 10404  01462C  D7E3               	goto	l2000
 10405  01462E  0A01               	xorlw	1	; case 3
 10406  014630  B4D8               	btfsc	status,2,c
 10407  014632  D7E2               	goto	l2001
 10408  014634  0A07               	xorlw	7	; case 4
 10409  014636  B4D8               	btfsc	status,2,c
 10410  014638  D7E1               	goto	l2002
 10411  01463A  0A01               	xorlw	1	; case 5
 10412  01463C  B4D8               	btfsc	status,2,c
 10413  01463E  D7E0               	goto	l2003
 10414  014640  D7E1               	goto	l2004
 10415  014642                     __end_of__get_fat:
 10416                           	opt stack 0
 10417                           tblptru	equ	0xFF8
 10418                           tblptrh	equ	0xFF7
 10419                           tblptrl	equ	0xFF6
 10420                           tablat	equ	0xFF5
 10421                           prodh	equ	0xFF4
 10422                           prodl	equ	0xFF3
 10423                           postinc0	equ	0xFEE
 10424                           wreg	equ	0xFE8
 10425                           postdec1	equ	0xFE5
 10426                           fsr1h	equ	0xFE2
 10427                           fsr1l	equ	0xFE1
 10428                           indf2	equ	0xFDF
 10429                           postinc2	equ	0xFDE
 10430                           fsr2h	equ	0xFDA
 10431                           fsr2l	equ	0xFD9
 10432                           status	equ	0xFD8
 10433                           
 10434 ;; *************** function __get_data *****************
 10435 ;; Defined at:
 10436 ;;		line 1283 in file "fat16.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  idx             2    0[BANK0 ] unsigned int 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;		None
 10441 ;; Return value:  Size  Location     Type
 10442 ;;                  1    wreg      unsigned char 
 10443 ;; Registers used:
 10444 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10445 ;; Tracked objects:
 10446 ;;		On entry : 0/0
 10447 ;;		On exit  : 0/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10454 ;;Total ram usage:        2 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:   10
 10457 ;; This function calls:
 10458 ;;		Nothing
 10459 ;; This function is called by:
 10460 ;;		_fat_format
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           	psect	text22
 10465  0153CA                     __ptext22:
 10466                           	opt stack 0
 10467  0153CA                     __get_data:
 10468                           	opt stack 17
 10469                           
 10470                           ;fat16.c: 1285: if(idx < 12)
 10471                           
 10472                           ;incstack = 0
 10473  0153CA  0100               	movlb	0	; () banked
 10474  0153CC  5161               	movf	(__get_data@idx+1)& (0+255),w,b
 10475  0153CE  E110               	bnz	l14819
 10476  0153D0  0E0C               	movlw	12
 10477  0153D2  5D60               	subwf	__get_data@idx& (0+255),w,b
 10478  0153D4  B0D8               	btfsc	status,0,c
 10479  0153D6  D00C               	goto	l2040
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 10483  0153D8  0EE9               	movlw	low STR_18
 10484  0153DA  2560               	addwf	__get_data@idx& (0+255),w,b
 10485  0153DC  6EF6               	movwf	tblptrl,c
 10486  0153DE  0EA2               	movlw	high STR_18
 10487  0153E0  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
 10488  0153E2  6EF7               	movwf	tblptrh,c
 10489  0153E4                     	if	1	;There are 3 active tblptr bytes
 10490  0153E4  6AF8               	clrf	tblptru,c
 10491  0153E6  0E00               	movlw	low (__mediumconst shr (0+16))
 10492  0153E8  22F8               	addwfc	tblptru,f,c
 10493  0153EA                     	endif
 10494  0153EA  0008               	tblrd		*
 10495  0153EC  50F5               	movf	tablat,w,c
 10496                           
 10497                           ; BSR set to: 0
 10498  0153EE  0012               	return	
 10499  0153F0                     l2040:
 10500  0153F0                     l14819:
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 10504  0153F0  0E00               	movlw	0
 10505  0153F2  0012               	return	
 10506  0153F4                     __end_of__get_data:
 10507                           	opt stack 0
 10508                           tblptru	equ	0xFF8
 10509                           tblptrh	equ	0xFF7
 10510                           tblptrl	equ	0xFF6
 10511                           tablat	equ	0xFF5
 10512                           prodh	equ	0xFF4
 10513                           prodl	equ	0xFF3
 10514                           postinc0	equ	0xFEE
 10515                           wreg	equ	0xFE8
 10516                           postdec1	equ	0xFE5
 10517                           fsr1h	equ	0xFE2
 10518                           fsr1l	equ	0xFE1
 10519                           indf2	equ	0xFDF
 10520                           postinc2	equ	0xFDE
 10521                           fsr2h	equ	0xFDA
 10522                           fsr2l	equ	0xFD9
 10523                           status	equ	0xFD8
 10524                           
 10525 ;; *************** function _encoder_init *****************
 10526 ;; Defined at:
 10527 ;;		line 92 in file "encoder.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;		None
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  1    wreg      void 
 10534 ;; Registers used:
 10535 ;;		wreg, status,2, status,0
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10545 ;;Total ram usage:        0 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; Hardware stack levels required when called:   10
 10548 ;; This function calls:
 10549 ;;		Nothing
 10550 ;; This function is called by:
 10551 ;;		_system_init
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text23
 10556  01555E                     __ptext23:
 10557                           	opt stack 0
 10558  01555E                     _encoder_init:
 10559                           	opt stack 19
 10560                           
 10561                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;incstack = 0
 10565  01555E  5084               	movf	3972,w,c	;volatile
 10566  015560  0B07               	andlw	7
 10567  015562  0101               	movlb	1	; () banked
 10568  015564  6F54               	movwf	_enc1& (0+255),b
 10569                           
 10570                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
 10571  015566  5080               	movf	3968,w,c	;volatile
 10572  015568  0B07               	andlw	7
 10573  01556A  6F53               	movwf	_enc2& (0+255),b
 10574                           
 10575                           ; BSR set to: 1
 10576                           ;encoder.c: 96: os.encoder1Count = 0;
 10577  01556C  0E00               	movlw	0
 10578  01556E  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 10579                           
 10580                           ; BSR set to: 1
 10581                           ;encoder.c: 97: os.encoder2Count = 0;
 10582  015570  0E00               	movlw	0
 10583  015572  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;encoder.c: 98: os.button1 = 0;
 10587  015574  0E00               	movlw	0
 10588  015576  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 10589                           
 10590                           ; BSR set to: 1
 10591                           ;encoder.c: 99: os.button2 = 0;
 10592  015578  0E00               	movlw	0
 10593  01557A  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 10594                           
 10595                           ; BSR set to: 1
 10596                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 10597  01557C  0E01               	movlw	1
 10598  01557E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 10599                           
 10600                           ; BSR set to: 1
 10601  015580  0012               	return		;funcret
 10602  015582                     __end_of_encoder_init:
 10603                           	opt stack 0
 10604                           tblptru	equ	0xFF8
 10605                           tblptrh	equ	0xFF7
 10606                           tblptrl	equ	0xFF6
 10607                           tablat	equ	0xFF5
 10608                           prodh	equ	0xFF4
 10609                           prodl	equ	0xFF3
 10610                           postinc0	equ	0xFEE
 10611                           wreg	equ	0xFE8
 10612                           postdec1	equ	0xFE5
 10613                           fsr1h	equ	0xFE2
 10614                           fsr1l	equ	0xFE1
 10615                           indf2	equ	0xFDF
 10616                           postinc2	equ	0xFDE
 10617                           fsr2h	equ	0xFDA
 10618                           fsr2l	equ	0xFD9
 10619                           status	equ	0xFD8
 10620                           
 10621 ;; *************** function _display_update *****************
 10622 ;; Defined at:
 10623 ;;		line 618 in file "display.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;		None
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;  line            1   16[BANK0 ] unsigned char 
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  1    wreg      void 
 10630 ;; Registers used:
 10631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10640 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10641 ;;Total ram usage:        1 bytes
 10642 ;; Hardware stack levels used:    1
 10643 ;; Hardware stack levels required when called:   14
 10644 ;; This function calls:
 10645 ;;		_i2c_display_cursor
 10646 ;;		_i2c_display_write_fixed
 10647 ;; This function is called by:
 10648 ;;		_main
 10649 ;;		_system_init
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text24
 10654  015082                     __ptext24:
 10655                           	opt stack 0
 10656  015082                     _display_update:
 10657                           	opt stack 15
 10658                           
 10659                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
 10660                           
 10661                           ; BSR set to: 1
 10662                           ;incstack = 0
 10663  015082  0E00               	movlw	0
 10664  015084  0100               	movlb	0	; () banked
 10665  015086  6F70               	movwf	display_update@line& (0+255),b
 10666  015088                     l16537:
 10667                           
 10668                           ; BSR set to: 0
 10669  015088  0E03               	movlw	3
 10670  01508A  6570               	cpfsgt	display_update@line& (0+255),b
 10671  01508C  D001               	goto	l1485
 10672  01508E  0012               	return	
 10673  015090                     l1485:
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
 10677                           
 10678                           ; BSR set to: 0
 10679  015090  0E00               	movlw	0
 10680  015092  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10681  015094  5170               	movf	display_update@line& (0+255),w,b
 10682  015096  ECE5  F0AA         	call	_i2c_display_cursor
 10683                           
 10684                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
 10685  01509A  0100               	movlb	0	; () banked
 10686  01509C  5170               	movf	display_update@line& (0+255),w,b
 10687  01509E  0D14               	mullw	20
 10688  0150A0  0E34               	movlw	low _display_content
 10689  0150A2  24F3               	addwf	prodl,w,c
 10690  0150A4  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10691  0150A6  0E02               	movlw	high _display_content
 10692  0150A8  20F4               	addwfc	prodh,w,c
 10693  0150AA  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10694  0150AC  0E14               	movlw	20
 10695  0150AE  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10696  0150B0  EC53  F0A4         	call	_i2c_display_write_fixed	;wreg free
 10697  0150B4  0100               	movlb	0	; () banked
 10698  0150B6  2B70               	incf	display_update@line& (0+255),f,b
 10699  0150B8  D7E7               	goto	l16537
 10700  0150BA                     __end_of_display_update:
 10701                           	opt stack 0
 10702                           tblptru	equ	0xFF8
 10703                           tblptrh	equ	0xFF7
 10704                           tblptrl	equ	0xFF6
 10705                           tablat	equ	0xFF5
 10706                           prodh	equ	0xFF4
 10707                           prodl	equ	0xFF3
 10708                           postinc0	equ	0xFEE
 10709                           wreg	equ	0xFE8
 10710                           postdec1	equ	0xFE5
 10711                           fsr1h	equ	0xFE2
 10712                           fsr1l	equ	0xFE1
 10713                           indf2	equ	0xFDF
 10714                           postinc2	equ	0xFDE
 10715                           fsr2h	equ	0xFDA
 10716                           fsr2l	equ	0xFD9
 10717                           status	equ	0xFD8
 10718                           
 10719 ;; *************** function _i2c_display_write_fixed *****************
 10720 ;; Defined at:
 10721 ;;		line 419 in file "i2c.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10724 ;;		 -> display_content(80), 
 10725 ;;  length          1    7[BANK0 ] unsigned char 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  pos             1    8[BANK0 ] unsigned char 
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10737 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;Total ram usage:        4 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:   11
 10744 ;; This function calls:
 10745 ;;		__i2c_send
 10746 ;;		__i2c_start
 10747 ;;		__i2c_stop
 10748 ;;		__i2c_wait_idle
 10749 ;; This function is called by:
 10750 ;;		_display_update
 10751 ;; This function uses a non-reentrant model
 10752 ;;
 10753                           
 10754                           	psect	text25
 10755  0148A6                     __ptext25:
 10756                           	opt stack 0
 10757  0148A6                     _i2c_display_write_fixed:
 10758                           	opt stack 17
 10759                           
 10760                           ;i2c.c: 421: uint8_t pos;;i2c.c: 426: _i2c_wait_idle();
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;incstack = 0
 10764  0148A6  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 10765                           
 10766                           ;i2c.c: 427: _i2c_start();
 10767  0148AA  ECFC  F0AB         	call	__i2c_start	;wreg free
 10768                           
 10769                           ;i2c.c: 428: _i2c_wait_idle();
 10770  0148AE  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 10771                           
 10772                           ;i2c.c: 429: _i2c_send(0b01111000);
 10773  0148B2  0E78               	movlw	120
 10774  0148B4  ECE9  F0AB         	call	__i2c_send
 10775                           
 10776                           ;i2c.c: 430: _i2c_wait_idle();
 10777  0148B8  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 10778                           
 10779                           ;i2c.c: 431: _i2c_send(0b01000000);
 10780  0148BC  0E40               	movlw	64
 10781  0148BE  ECE9  F0AB         	call	__i2c_send
 10782                           
 10783                           ;i2c.c: 432: _i2c_wait_idle();
 10784  0148C2  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 10785                           
 10786                           ;i2c.c: 435: for(pos=0; pos<length; ++pos)
 10787  0148C6  0E00               	movlw	0
 10788  0148C8  0100               	movlb	0	; () banked
 10789  0148CA  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10790  0148CC  D00F               	goto	l1243
 10791  0148CE                     
 10792                           ; BSR set to: 0
 10793                           ;i2c.c: 436: {;i2c.c: 437: _i2c_send(data[pos]);
 10794                           
 10795                           ; BSR set to: 0
 10796  0148CE  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10797  0148D0  0D01               	mullw	1
 10798  0148D2  50F3               	movf	prodl,w,c
 10799  0148D4  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10800  0148D6  6ED9               	movwf	fsr2l,c
 10801  0148D8  50F4               	movf	prodh,w,c
 10802  0148DA  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10803  0148DC  6EDA               	movwf	fsr2h,c
 10804  0148DE  50DF               	movf	indf2,w,c
 10805  0148E0  ECE9  F0AB         	call	__i2c_send
 10806                           
 10807                           ;i2c.c: 438: _i2c_wait_idle();
 10808  0148E4  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 10809  0148E8  0100               	movlb	0	; () banked
 10810  0148EA  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10811  0148EC                     l1243:
 10812                           
 10813                           ; BSR set to: 0
 10814                           
 10815                           ; BSR set to: 0
 10816  0148EC  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10817  0148EE  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10818  0148F0  A0D8               	btfss	status,0,c
 10819  0148F2  D7ED               	goto	l1244
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;i2c.c: 439: };i2c.c: 441: _i2c_stop();
 10823                           
 10824                           ; BSR set to: 0
 10825  0148F4  ECF8  F0AB         	call	__i2c_stop	;wreg free
 10826  0148F8  0012               	return		;funcret
 10827  0148FA                     __end_of_i2c_display_write_fixed:
 10828                           	opt stack 0
 10829                           tblptru	equ	0xFF8
 10830                           tblptrh	equ	0xFF7
 10831                           tblptrl	equ	0xFF6
 10832                           tablat	equ	0xFF5
 10833                           prodh	equ	0xFF4
 10834                           prodl	equ	0xFF3
 10835                           postinc0	equ	0xFEE
 10836                           wreg	equ	0xFE8
 10837                           postdec1	equ	0xFE5
 10838                           fsr1h	equ	0xFE2
 10839                           fsr1l	equ	0xFE1
 10840                           indf2	equ	0xFDF
 10841                           postinc2	equ	0xFDE
 10842                           fsr2h	equ	0xFDA
 10843                           fsr2l	equ	0xFD9
 10844                           status	equ	0xFD8
 10845                           
 10846 ;; *************** function _i2c_display_cursor *****************
 10847 ;; Defined at:
 10848 ;;		line 379 in file "i2c.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;  line            1    wreg     unsigned char 
 10851 ;;  position        1   13[BANK0 ] unsigned char 
 10852 ;; Auto vars:     Size  Location     Type
 10853 ;;  line            1   14[BANK0 ] unsigned char 
 10854 ;;  address         1   15[BANK0 ] unsigned char 
 10855 ;; Return value:  Size  Location     Type
 10856 ;;                  1    wreg      void 
 10857 ;; Registers used:
 10858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10859 ;; Tracked objects:
 10860 ;;		On entry : 0/0
 10861 ;;		On exit  : 0/0
 10862 ;;		Unchanged: 0/0
 10863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10864 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10865 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10867 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10868 ;;Total ram usage:        3 bytes
 10869 ;; Hardware stack levels used:    1
 10870 ;; Hardware stack levels required when called:   13
 10871 ;; This function calls:
 10872 ;;		__ic2_display_set_ddram_address
 10873 ;; This function is called by:
 10874 ;;		_display_update
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           	psect	text26
 10879  0155CA                     __ptext26:
 10880                           	opt stack 0
 10881  0155CA                     _i2c_display_cursor:
 10882                           	opt stack 15
 10883                           
 10884                           ;incstack = 0
 10885                           ;i2c_display_cursor@line stored from wreg
 10886  0155CA  0100               	movlb	0	; () banked
 10887  0155CC  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10888                           
 10889                           ;i2c.c: 381: uint8_t address;;i2c.c: 384: line &= 0b11;
 10890  0155CE  0E03               	movlw	3
 10891  0155D0  0100               	movlb	0	; () banked
 10892  0155D2  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10893                           
 10894                           ;i2c.c: 385: address = line<<5;
 10895  0155D4  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10896  0155D6  46E8               	rlncf	wreg,f,c
 10897  0155D8  0BE0               	andlw	224
 10898  0155DA  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10899                           
 10900                           ;i2c.c: 386: position &= 0b11111;
 10901  0155DC  0E1F               	movlw	31
 10902  0155DE  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10903                           
 10904                           ;i2c.c: 387: address |= position;
 10905  0155E0  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10906  0155E2  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;i2c.c: 393: _ic2_display_set_ddram_address(address);
 10910  0155E4  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10911  0155E6  ECC1  F0AA         	call	__ic2_display_set_ddram_address
 10912  0155EA  0012               	return		;funcret
 10913  0155EC                     __end_of_i2c_display_cursor:
 10914                           	opt stack 0
 10915                           tblptru	equ	0xFF8
 10916                           tblptrh	equ	0xFF7
 10917                           tblptrl	equ	0xFF6
 10918                           tablat	equ	0xFF5
 10919                           prodh	equ	0xFF4
 10920                           prodl	equ	0xFF3
 10921                           postinc0	equ	0xFEE
 10922                           wreg	equ	0xFE8
 10923                           postdec1	equ	0xFE5
 10924                           fsr1h	equ	0xFE2
 10925                           fsr1l	equ	0xFE1
 10926                           indf2	equ	0xFDF
 10927                           postinc2	equ	0xFDE
 10928                           fsr2h	equ	0xFDA
 10929                           fsr2l	equ	0xFD9
 10930                           status	equ	0xFD8
 10931                           
 10932 ;; *************** function __ic2_display_set_ddram_address *****************
 10933 ;; Defined at:
 10934 ;;		line 350 in file "i2c.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  address         1    wreg     unsigned char 
 10937 ;; Auto vars:     Size  Location     Type
 10938 ;;  address         1   10[BANK0 ] unsigned char 
 10939 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10950 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10952 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10953 ;;Total ram usage:        3 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:   12
 10956 ;; This function calls:
 10957 ;;		__i2c_write
 10958 ;; This function is called by:
 10959 ;;		_i2c_display_cursor
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text27
 10964  015582                     __ptext27:
 10965                           	opt stack 0
 10966  015582                     __ic2_display_set_ddram_address:
 10967                           	opt stack 15
 10968                           
 10969                           ;incstack = 0
 10970                           ;__ic2_display_set_ddram_address@address stored from wreg
 10971  015582  0100               	movlb	0	; () banked
 10972  015584  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10973                           
 10974                           ;i2c.c: 352: uint8_t data_array[2];;i2c.c: 353: data_array[0] = 0b00000000;
 10975  015586  0E00               	movlw	0
 10976  015588  0100               	movlb	0	; () banked
 10977  01558A  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;i2c.c: 354: data_array[1] = 0b10000000 | address;
 10981  01558C  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10982  01558E  0980               	iorlw	128
 10983  015590  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10984                           
 10985                           ; BSR set to: 0
 10986                           ;i2c.c: 360: _i2c_write(0b01111000, &data_array[0], 2);
 10987  015592  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10988  015594  6F65               	movwf	__i2c_write@data& (0+255),b
 10989  015596  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10990  015598  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10991  01559A  0E02               	movlw	2
 10992  01559C  6F67               	movwf	__i2c_write@length& (0+255),b
 10993  01559E  0E78               	movlw	120
 10994  0155A0  EC74  F0A5         	call	__i2c_write
 10995  0155A4  0012               	return		;funcret
 10996  0155A6                     __end_of__ic2_display_set_ddram_address:
 10997                           	opt stack 0
 10998                           tblptru	equ	0xFF8
 10999                           tblptrh	equ	0xFF7
 11000                           tblptrl	equ	0xFF6
 11001                           tablat	equ	0xFF5
 11002                           prodh	equ	0xFF4
 11003                           prodl	equ	0xFF3
 11004                           postinc0	equ	0xFEE
 11005                           wreg	equ	0xFE8
 11006                           postdec1	equ	0xFE5
 11007                           fsr1h	equ	0xFE2
 11008                           fsr1l	equ	0xFE1
 11009                           indf2	equ	0xFDF
 11010                           postinc2	equ	0xFDE
 11011                           fsr2h	equ	0xFDA
 11012                           fsr2l	equ	0xFD9
 11013                           status	equ	0xFD8
 11014                           
 11015 ;; *************** function _display_init *****************
 11016 ;; Defined at:
 11017 ;;		line 256 in file "display.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;		None
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;		None
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      void 
 11024 ;; Registers used:
 11025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11035 ;;Total ram usage:        0 bytes
 11036 ;; Hardware stack levels used:    1
 11037 ;; Hardware stack levels required when called:   15
 11038 ;; This function calls:
 11039 ;;		__display_start
 11040 ;;		_i2c_display_init
 11041 ;;		_i2c_display_program_custom_character
 11042 ;; This function is called by:
 11043 ;;		_system_init
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text28
 11048  014FD6                     __ptext28:
 11049                           	opt stack 0
 11050  014FD6                     _display_init:
 11051                           	opt stack 14
 11052                           
 11053                           ;display.c: 258: i2c_display_init();
 11054                           
 11055                           ;incstack = 0
 11056  014FD6  EC4C  F0A5         	call	_i2c_display_init	;wreg free
 11057                           
 11058                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 11059  014FDA  0ED5               	movlw	low _bit_pattern_verticalbar
 11060  014FDC  0100               	movlb	0	; () banked
 11061  014FDE  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11062  014FE0  0EA2               	movlw	high _bit_pattern_verticalbar
 11063  014FE2  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11064  014FE4  0E00               	movlw	0
 11065  014FE6  EC3F  F09D         	call	_i2c_display_program_custom_character
 11066                           
 11067                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 11068  014FEA  0ECD               	movlw	low _bit_pattern_degree
 11069  014FEC  0100               	movlb	0	; () banked
 11070  014FEE  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11071  014FF0  0EA2               	movlw	high _bit_pattern_degree
 11072  014FF2  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11073  014FF4  0E01               	movlw	1
 11074  014FF6  EC3F  F09D         	call	_i2c_display_program_custom_character
 11075                           
 11076                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 11077  014FFA  0EC5               	movlw	low _bit_pattern_ae
 11078  014FFC  0100               	movlb	0	; () banked
 11079  014FFE  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11080  015000  0EA2               	movlw	high _bit_pattern_ae
 11081  015002  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11082  015004  0E02               	movlw	2
 11083  015006  EC3F  F09D         	call	_i2c_display_program_custom_character
 11084                           
 11085                           ;display.c: 263: _display_start();
 11086  01500A  ECA0  F096         	call	__display_start	;wreg free
 11087  01500E  0012               	return		;funcret
 11088  015010                     __end_of_display_init:
 11089                           	opt stack 0
 11090                           tblptru	equ	0xFF8
 11091                           tblptrh	equ	0xFF7
 11092                           tblptrl	equ	0xFF6
 11093                           tablat	equ	0xFF5
 11094                           prodh	equ	0xFF4
 11095                           prodl	equ	0xFF3
 11096                           postinc0	equ	0xFEE
 11097                           wreg	equ	0xFE8
 11098                           postdec1	equ	0xFE5
 11099                           fsr1h	equ	0xFE2
 11100                           fsr1l	equ	0xFE1
 11101                           indf2	equ	0xFDF
 11102                           postinc2	equ	0xFDE
 11103                           fsr2h	equ	0xFDA
 11104                           fsr2l	equ	0xFD9
 11105                           status	equ	0xFD8
 11106                           
 11107 ;; *************** function _i2c_display_program_custom_character *****************
 11108 ;; Defined at:
 11109 ;;		line 444 in file "i2c.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  address         1    wreg     unsigned char 
 11112 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 11113 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 11114 ;; Auto vars:     Size  Location     Type
 11115 ;;  address         1   31[BANK0 ] unsigned char 
 11116 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 11117 ;;  cntr            1   32[BANK0 ] unsigned char 
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      void 
 11120 ;; Registers used:
 11121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11128 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11129 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11130 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11131 ;;Total ram usage:       19 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:   13
 11134 ;; This function calls:
 11135 ;;		__i2c_write
 11136 ;;		__ic2_display_set_cgram_address
 11137 ;; This function is called by:
 11138 ;;		_display_init
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142                           	psect	text29
 11143  013A7E                     __ptext29:
 11144                           	opt stack 0
 11145  013A7E                     _i2c_display_program_custom_character:
 11146                           	opt stack 15
 11147                           
 11148                           ;incstack = 0
 11149                           ;i2c_display_program_custom_character@address stored from wreg
 11150  013A7E  0100               	movlb	0	; () banked
 11151  013A80  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 11152                           
 11153                           ;i2c.c: 446: uint8_t cntr;;i2c.c: 447: uint8_t data_array[11];;i2c.c: 450: _ic2_display_
      +                          set_cgram_address(address<<3);
 11154  013A82  0100               	movlb	0	; () banked
 11155  013A84  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 11156  013A86  42E8               	rrncf	wreg,f,c
 11157  013A88  0BF8               	andlw	248
 11158  013A8A  ECFA  F0A9         	call	__ic2_display_set_cgram_address
 11159                           
 11160                           ;i2c.c: 453: data_array[0] = 0b01000000;
 11161  013A8E  0E40               	movlw	64
 11162  013A90  0100               	movlb	0	; () banked
 11163  013A92  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;i2c.c: 454: for(cntr=0; cntr<8; ++cntr)
 11167  013A94  0E00               	movlw	0
 11168  013A96  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 11169  013A98                     l15223:
 11170                           
 11171                           ; BSR set to: 0
 11172  013A98  0E07               	movlw	7
 11173  013A9A  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 11174  013A9C  D001               	goto	l1249
 11175  013A9E  D023               	goto	u13980
 11176  013AA0                     l1249:
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;i2c.c: 455: {;i2c.c: 456: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 11180                           
 11181                           ; BSR set to: 0
 11182  013AA0  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11183  013AA2  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 11184  013AA4  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 11185  013AA6  0E01               	movlw	1
 11186  013AA8  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 11187  013AAA  0E00               	movlw	0
 11188  013AAC  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 11189  013AAE  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11190  013AB0  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 11191  013AB2  6ED9               	movwf	fsr2l,c
 11192  013AB4  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11193  013AB6  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 11194  013AB8  6EDA               	movwf	fsr2h,c
 11195  013ABA  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11196  013ABC  0D01               	mullw	1
 11197  013ABE  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 11198  013AC2  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 11199  013AC6  50F3               	movf	prodl,w,c
 11200  013AC8  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 11201  013ACA  50F4               	movf	prodh,w,c
 11202  013ACC  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 11203  013ACE  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 11204  013AD2  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 11205  013AD6                     	if	0	;tblptru may be non-zero
 11206  013AD6                     	endif
 11207  013AD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11208  013AD6  0E00               	movlw	low (__mediumconst shr (0+16))
 11209  013AD8  6EF8               	movwf	tblptru,c
 11210  013ADA                     	endif
 11211  013ADA  0008               	tblrd		*
 11212  013ADC  50F5               	movf	tablat,w,c
 11213  013ADE  0B1F               	andlw	31
 11214  013AE0  6EDF               	movwf	indf2,c
 11215                           
 11216                           ; BSR set to: 0
 11217  013AE2  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 11218  013AE4  D7D9               	goto	l15223
 11219  013AE6                     u13980:
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;i2c.c: 457: };i2c.c: 458: _i2c_write(0b01111000, data_array, 9);
 11223                           
 11224                           ; BSR set to: 0
 11225  013AE6  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11226  013AE8  6F65               	movwf	__i2c_write@data& (0+255),b
 11227  013AEA  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11228  013AEC  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11229  013AEE  0E09               	movlw	9
 11230  013AF0  6F67               	movwf	__i2c_write@length& (0+255),b
 11231  013AF2  0E78               	movlw	120
 11232  013AF4  EC74  F0A5         	call	__i2c_write
 11233  013AF8  0012               	return		;funcret
 11234  013AFA                     __end_of_i2c_display_program_custom_character:
 11235                           	opt stack 0
 11236                           tblptru	equ	0xFF8
 11237                           tblptrh	equ	0xFF7
 11238                           tblptrl	equ	0xFF6
 11239                           tablat	equ	0xFF5
 11240                           prodh	equ	0xFF4
 11241                           prodl	equ	0xFF3
 11242                           postinc0	equ	0xFEE
 11243                           wreg	equ	0xFE8
 11244                           postdec1	equ	0xFE5
 11245                           fsr1h	equ	0xFE2
 11246                           fsr1l	equ	0xFE1
 11247                           indf2	equ	0xFDF
 11248                           postinc2	equ	0xFDE
 11249                           fsr2h	equ	0xFDA
 11250                           fsr2l	equ	0xFD9
 11251                           status	equ	0xFD8
 11252                           
 11253 ;; *************** function __ic2_display_set_cgram_address *****************
 11254 ;; Defined at:
 11255 ;;		line 363 in file "i2c.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  address         1    wreg     unsigned char 
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;  address         1   13[BANK0 ] unsigned char 
 11260 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      void 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11273 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11274 ;;Total ram usage:        4 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:   12
 11277 ;; This function calls:
 11278 ;;		__i2c_write
 11279 ;; This function is called by:
 11280 ;;		_i2c_display_program_custom_character
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text30
 11285  0153F4                     __ptext30:
 11286                           	opt stack 0
 11287  0153F4                     __ic2_display_set_cgram_address:
 11288                           	opt stack 15
 11289                           
 11290                           ;incstack = 0
 11291                           ;__ic2_display_set_cgram_address@address stored from wreg
 11292  0153F4  0100               	movlb	0	; () banked
 11293  0153F6  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 11294                           
 11295                           ;i2c.c: 365: uint8_t data_array[3];;i2c.c: 370: address &= 0b001111111;
 11296  0153F8  0100               	movlb	0	; () banked
 11297  0153FA  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 11298                           
 11299                           ; BSR set to: 0
 11300                           ;i2c.c: 371: data_array[0] = 0b00000000;
 11301  0153FC  0E00               	movlw	0
 11302  0153FE  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;i2c.c: 372: data_array[1] = 0b00111000;
 11306  015400  0E38               	movlw	56
 11307  015402  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 11308                           
 11309                           ;i2c.c: 373: data_array[2] = 0b01000000 | address;
 11310  015404  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 11311  015406  0940               	iorlw	64
 11312  015408  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;i2c.c: 376: _i2c_write(0b01111000, data_array, 3);
 11316  01540A  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 11317  01540C  6F65               	movwf	__i2c_write@data& (0+255),b
 11318  01540E  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 11319  015410  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11320  015412  0E03               	movlw	3
 11321  015414  6F67               	movwf	__i2c_write@length& (0+255),b
 11322  015416  0E78               	movlw	120
 11323  015418  EC74  F0A5         	call	__i2c_write
 11324  01541C  0012               	return		;funcret
 11325  01541E                     __end_of__ic2_display_set_cgram_address:
 11326                           	opt stack 0
 11327                           tblptru	equ	0xFF8
 11328                           tblptrh	equ	0xFF7
 11329                           tblptrl	equ	0xFF6
 11330                           tablat	equ	0xFF5
 11331                           prodh	equ	0xFF4
 11332                           prodl	equ	0xFF3
 11333                           postinc0	equ	0xFEE
 11334                           wreg	equ	0xFE8
 11335                           postdec1	equ	0xFE5
 11336                           fsr1h	equ	0xFE2
 11337                           fsr1l	equ	0xFE1
 11338                           indf2	equ	0xFDF
 11339                           postinc2	equ	0xFDE
 11340                           fsr2h	equ	0xFDA
 11341                           fsr2l	equ	0xFD9
 11342                           status	equ	0xFD8
 11343                           
 11344 ;; *************** function _i2c_display_init *****************
 11345 ;; Defined at:
 11346 ;;		line 321 in file "i2c.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1    wreg      void 
 11353 ;; Registers used:
 11354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11361 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11363 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11364 ;;Total ram usage:       10 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:   12
 11367 ;; This function calls:
 11368 ;;		__i2c_write
 11369 ;; This function is called by:
 11370 ;;		_display_init
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text31
 11375  014A98                     __ptext31:
 11376                           	opt stack 0
 11377  014A98                     _i2c_display_init:
 11378                           	opt stack 16
 11379                           
 11380                           ;i2c.c: 323: uint8_t init_sequence[9] = {;i2c.c: 324: 0x3A,;i2c.c: 326: 0b00011110,;i2c.
      +                          c: 327: 0x39,;i2c.c: 329: 0b00001100,;i2c.c: 330: 0x74,;i2c.c: 331: 0b1011100,;i2c.c: 33
      +                          2: 0x6d,;i2c.c: 333: 0x0c,;i2c.c: 334: 0x01;i2c.c: 335: };
 11381                           
 11382                           ;incstack = 0
 11383  014A98  EE22  F0A6         	lfsr	2,i2c_display_init@F6932
 11384  014A9C  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 11385  014AA0  0E08               	movlw	8
 11386  014AA2                     u13951:
 11387  014AA2  CFDB FFE3          	movff	plusw2,plusw1
 11388  014AA6  06E8               	decf	wreg,f,c
 11389  014AA8  E2FC               	bc	u13951
 11390                           
 11391                           ;i2c.c: 338: LATAbits.LA3 = 0;
 11392  014AAA  9689               	bcf	3977,3,c	;volatile
 11393                           
 11394                           ;i2c.c: 339: _delay((unsigned long)((10)*(8000000/4000.0)));
 11395  014AAC  0E1A               	movlw	26
 11396  014AAE  0100               	movlb	0	; () banked
 11397  014AB0  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11398  014AB2  0EF8               	movlw	248
 11399  014AB4                     u18897:
 11400  014AB4  2EE8               	decfsz	wreg,f,c
 11401  014AB6  D7FE               	bra	u18897
 11402  014AB8  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11403  014ABA  D7FC               	bra	u18897
 11404  014ABC  F000               	nop	
 11405                           
 11406                           ;i2c.c: 340: LATAbits.LA3 = 1;
 11407  014ABE  8689               	bsf	3977,3,c	;volatile
 11408                           
 11409                           ;i2c.c: 341: _delay((unsigned long)((50)*(8000000/4000.0)));
 11410  014AC0  0E82               	movlw	130
 11411  014AC2  0100               	movlb	0	; () banked
 11412  014AC4  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11413  014AC6  0EDD               	movlw	221
 11414  014AC8                     u18907:
 11415  014AC8  2EE8               	decfsz	wreg,f,c
 11416  014ACA  D7FE               	bra	u18907
 11417  014ACC  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11418  014ACE  D7FC               	bra	u18907
 11419  014AD0  D000               	nop2	
 11420                           
 11421                           ;i2c.c: 347: _i2c_write(0b01111000, &init_sequence[0], 9);
 11422  014AD2  0E6B               	movlw	low i2c_display_init@init_sequence
 11423  014AD4  0100               	movlb	0	; () banked
 11424  014AD6  6F65               	movwf	__i2c_write@data& (0+255),b
 11425  014AD8  0E00               	movlw	high i2c_display_init@init_sequence
 11426  014ADA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11427  014ADC  0E09               	movlw	9
 11428  014ADE  6F67               	movwf	__i2c_write@length& (0+255),b
 11429  014AE0  0E78               	movlw	120
 11430  014AE2  EC74  F0A5         	call	__i2c_write
 11431  014AE6  0012               	return		;funcret
 11432  014AE8                     __end_of_i2c_display_init:
 11433                           	opt stack 0
 11434                           tblptru	equ	0xFF8
 11435                           tblptrh	equ	0xFF7
 11436                           tblptrl	equ	0xFF6
 11437                           tablat	equ	0xFF5
 11438                           prodh	equ	0xFF4
 11439                           prodl	equ	0xFF3
 11440                           postinc0	equ	0xFEE
 11441                           wreg	equ	0xFE8
 11442                           postdec1	equ	0xFE5
 11443                           plusw1	equ	0xFE3
 11444                           fsr1h	equ	0xFE2
 11445                           fsr1l	equ	0xFE1
 11446                           indf2	equ	0xFDF
 11447                           postinc2	equ	0xFDE
 11448                           plusw2	equ	0xFDB
 11449                           fsr2h	equ	0xFDA
 11450                           fsr2l	equ	0xFD9
 11451                           status	equ	0xFD8
 11452                           
 11453 ;; *************** function __i2c_write *****************
 11454 ;; Defined at:
 11455 ;;		line 84 in file "i2c.c"
 11456 ;; Parameters:    Size  Location     Type
 11457 ;;  slave_addres    1    wreg     unsigned char 
 11458 ;;  data            2    5[BANK0 ] PTR unsigned char 
 11459 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 11460 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 11461 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 11462 ;;  length          1    7[BANK0 ] unsigned char 
 11463 ;; Auto vars:     Size  Location     Type
 11464 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 11465 ;;  cntr            1    9[BANK0 ] unsigned char 
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      void 
 11468 ;; Registers used:
 11469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11475 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11478 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11479 ;;Total ram usage:        5 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; Hardware stack levels required when called:   11
 11482 ;; This function calls:
 11483 ;;		__i2c_send
 11484 ;;		__i2c_start
 11485 ;;		__i2c_stop
 11486 ;;		__i2c_wait_idle
 11487 ;; This function is called by:
 11488 ;;		_i2c_eeprom_read
 11489 ;;		_i2c_display_init
 11490 ;;		__ic2_display_set_ddram_address
 11491 ;;		__ic2_display_set_cgram_address
 11492 ;;		_i2c_display_program_custom_character
 11493 ;;		_i2c_adc_start
 11494 ;;		_i2c_eeprom_writeByte
 11495 ;;		_i2c_eeprom_readByte
 11496 ;;		__i2c_display_send_init_sequence
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           	psect	text32
 11501  014AE8                     __ptext32:
 11502                           	opt stack 0
 11503  014AE8                     __i2c_write:
 11504                           	opt stack 16
 11505                           
 11506                           ;incstack = 0
 11507                           ;__i2c_write@slave_address stored from wreg
 11508  014AE8  0100               	movlb	0	; () banked
 11509  014AEA  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 11510                           
 11511                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 11512  014AEC  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 11513                           
 11514                           ;i2c.c: 89: _i2c_start();
 11515  014AF0  ECFC  F0AB         	call	__i2c_start	;wreg free
 11516                           
 11517                           ;i2c.c: 90: _i2c_wait_idle();
 11518  014AF4  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 11519                           
 11520                           ;i2c.c: 91: _i2c_send(slave_address);
 11521  014AF8  0100               	movlb	0	; () banked
 11522  014AFA  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 11523  014AFC  ECE9  F0AB         	call	__i2c_send
 11524                           
 11525                           ;i2c.c: 92: _i2c_wait_idle();
 11526  014B00  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 11527                           
 11528                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 11529  014B04  0E00               	movlw	0
 11530  014B06  0100               	movlb	0	; () banked
 11531  014B08  6F69               	movwf	__i2c_write@cntr& (0+255),b
 11532  014B0A  D00F               	goto	l1158
 11533  014B0C                     
 11534                           ; BSR set to: 0
 11535                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 11536                           
 11537                           ; BSR set to: 0
 11538  014B0C  5169               	movf	__i2c_write@cntr& (0+255),w,b
 11539  014B0E  0D01               	mullw	1
 11540  014B10  50F3               	movf	prodl,w,c
 11541  014B12  2565               	addwf	__i2c_write@data& (0+255),w,b
 11542  014B14  6ED9               	movwf	fsr2l,c
 11543  014B16  50F4               	movf	prodh,w,c
 11544  014B18  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 11545  014B1A  6EDA               	movwf	fsr2h,c
 11546  014B1C  50DF               	movf	indf2,w,c
 11547  014B1E  ECE9  F0AB         	call	__i2c_send
 11548                           
 11549                           ;i2c.c: 97: _i2c_wait_idle();
 11550  014B22  EC60  F0A0         	call	__i2c_wait_idle	;wreg free
 11551  014B26  0100               	movlb	0	; () banked
 11552  014B28  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 11553  014B2A                     l1158:
 11554                           
 11555                           ; BSR set to: 0
 11556                           
 11557                           ; BSR set to: 0
 11558  014B2A  5167               	movf	__i2c_write@length& (0+255),w,b
 11559  014B2C  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 11560  014B2E  A0D8               	btfss	status,0,c
 11561  014B30  D7ED               	goto	l1159
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 11565                           
 11566                           ; BSR set to: 0
 11567  014B32  ECF8  F0AB         	call	__i2c_stop	;wreg free
 11568  014B36  0012               	return		;funcret
 11569  014B38                     __end_of__i2c_write:
 11570                           	opt stack 0
 11571                           tblptru	equ	0xFF8
 11572                           tblptrh	equ	0xFF7
 11573                           tblptrl	equ	0xFF6
 11574                           tablat	equ	0xFF5
 11575                           prodh	equ	0xFF4
 11576                           prodl	equ	0xFF3
 11577                           postinc0	equ	0xFEE
 11578                           wreg	equ	0xFE8
 11579                           postdec1	equ	0xFE5
 11580                           plusw1	equ	0xFE3
 11581                           fsr1h	equ	0xFE2
 11582                           fsr1l	equ	0xFE1
 11583                           indf2	equ	0xFDF
 11584                           postinc2	equ	0xFDE
 11585                           plusw2	equ	0xFDB
 11586                           fsr2h	equ	0xFDA
 11587                           fsr2l	equ	0xFD9
 11588                           status	equ	0xFD8
 11589                           
 11590 ;; *************** function __i2c_wait_idle *****************
 11591 ;; Defined at:
 11592 ;;		line 40 in file "i2c.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;		None
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;		None
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  1    wreg      void 
 11599 ;; Registers used:
 11600 ;;		wreg, status,2, status,0
 11601 ;; Tracked objects:
 11602 ;;		On entry : 0/0
 11603 ;;		On exit  : 0/0
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11608 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11609 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11610 ;;Total ram usage:        5 bytes
 11611 ;; Hardware stack levels used:    1
 11612 ;; Hardware stack levels required when called:   10
 11613 ;; This function calls:
 11614 ;;		Nothing
 11615 ;; This function is called by:
 11616 ;;		__i2c_write
 11617 ;;		__i2c_read
 11618 ;;		__i2c_eeprom_busy
 11619 ;;		_i2c_display_write_fixed
 11620 ;;		_i2c_adc_read
 11621 ;;		_i2c_display_write
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text33
 11626  0140C0                     __ptext33:
 11627                           	opt stack 0
 11628  0140C0                     __i2c_wait_idle:
 11629                           	opt stack 16
 11630                           
 11631                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 11632                           
 11633                           ;incstack = 0
 11634  0140C0  A4C7               	btfss	4039,2,c	;volatile
 11635  0140C2  D004               	goto	u11360
 11636  0140C4  0100               	movlb	0	; () banked
 11637  0140C6  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11638  0140C8  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 11639  0140CA  D002               	goto	u11368
 11640  0140CC                     u11360:
 11641  0140CC  0100               	movlb	0	; () banked
 11642  0140CE  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11643  0140D0                     u11368:
 11644  0140D0  A0C5               	btfss	4037,0,c	;volatile
 11645  0140D2  D003               	goto	u11370
 11646  0140D4  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11647  0140D6  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 11648  0140D8  D002               	goto	u11378
 11649  0140DA                     u11370:
 11650  0140DA  0100               	movlb	0	; () banked
 11651  0140DC  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11652  0140DE                     u11378:
 11653  0140DE  A2C5               	btfss	4037,1,c	;volatile
 11654  0140E0  D003               	goto	u11380
 11655  0140E2  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11656  0140E4  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11657  0140E6  D002               	goto	u11388
 11658  0140E8                     u11380:
 11659  0140E8  0100               	movlb	0	; () banked
 11660  0140EA  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11661  0140EC                     u11388:
 11662  0140EC  A4C5               	btfss	4037,2,c	;volatile
 11663  0140EE  D003               	goto	u11390
 11664  0140F0  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11665  0140F2  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11666  0140F4  D002               	goto	u11398
 11667  0140F6                     u11390:
 11668  0140F6  0100               	movlb	0	; () banked
 11669  0140F8  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11670  0140FA                     u11398:
 11671  0140FA  A6C5               	btfss	4037,3,c	;volatile
 11672  0140FC  D003               	goto	u11400
 11673  0140FE  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11674  014100  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11675  014102  D002               	goto	u11408
 11676  014104                     u11400:
 11677  014104  0100               	movlb	0	; () banked
 11678  014106  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11679  014108                     u11408:
 11680  014108  A8C5               	btfss	4037,4,c	;volatile
 11681  01410A  D002               	goto	u11410
 11682  01410C  0E01               	movlw	1
 11683  01410E  D001               	goto	u11416
 11684  014110                     u11410:
 11685  014110  0E00               	movlw	0
 11686  014112                     u11416:
 11687  014112  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11688  014114  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11689  014116  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11690  014118  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11691  01411A  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11692  01411C  0900               	iorlw	0
 11693  01411E  B4D8               	btfsc	status,2,c
 11694  014120  0012               	return	
 11695  014122  D7CE               	goto	__i2c_wait_idle
 11696  014124                     __end_of__i2c_wait_idle:
 11697                           	opt stack 0
 11698                           tblptru	equ	0xFF8
 11699                           tblptrh	equ	0xFF7
 11700                           tblptrl	equ	0xFF6
 11701                           tablat	equ	0xFF5
 11702                           prodh	equ	0xFF4
 11703                           prodl	equ	0xFF3
 11704                           postinc0	equ	0xFEE
 11705                           wreg	equ	0xFE8
 11706                           postdec1	equ	0xFE5
 11707                           plusw1	equ	0xFE3
 11708                           fsr1h	equ	0xFE2
 11709                           fsr1l	equ	0xFE1
 11710                           indf2	equ	0xFDF
 11711                           postinc2	equ	0xFDE
 11712                           plusw2	equ	0xFDB
 11713                           fsr2h	equ	0xFDA
 11714                           fsr2l	equ	0xFD9
 11715                           status	equ	0xFD8
 11716                           
 11717 ;; *************** function __i2c_stop *****************
 11718 ;; Defined at:
 11719 ;;		line 63 in file "i2c.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;		None
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  1    wreg      void 
 11726 ;; Registers used:
 11727 ;;		None
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11737 ;;Total ram usage:        0 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:   10
 11740 ;; This function calls:
 11741 ;;		Nothing
 11742 ;; This function is called by:
 11743 ;;		__i2c_write
 11744 ;;		__i2c_read
 11745 ;;		__i2c_eeprom_busy
 11746 ;;		_i2c_display_write_fixed
 11747 ;;		_i2c_adc_read
 11748 ;;		_i2c_display_write
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           	psect	text34
 11753  0157F0                     __ptext34:
 11754                           	opt stack 0
 11755  0157F0                     __i2c_stop:
 11756                           	opt stack 16
 11757                           
 11758                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 11759                           
 11760                           ; BSR set to: 0
 11761                           ;incstack = 0
 11762  0157F0  84C5               	bsf	4037,2,c	;volatile
 11763  0157F2  A4C5               	btfss	4037,2,c	;volatile
 11764  0157F4  0012               	return	
 11765  0157F6  D7FD               	goto	l1141
 11766  0157F8                     __end_of__i2c_stop:
 11767                           	opt stack 0
 11768                           tblptru	equ	0xFF8
 11769                           tblptrh	equ	0xFF7
 11770                           tblptrl	equ	0xFF6
 11771                           tablat	equ	0xFF5
 11772                           prodh	equ	0xFF4
 11773                           prodl	equ	0xFF3
 11774                           postinc0	equ	0xFEE
 11775                           wreg	equ	0xFE8
 11776                           postdec1	equ	0xFE5
 11777                           plusw1	equ	0xFE3
 11778                           fsr1h	equ	0xFE2
 11779                           fsr1l	equ	0xFE1
 11780                           indf2	equ	0xFDF
 11781                           postinc2	equ	0xFDE
 11782                           plusw2	equ	0xFDB
 11783                           fsr2h	equ	0xFDA
 11784                           fsr2l	equ	0xFD9
 11785                           status	equ	0xFD8
 11786                           
 11787 ;; *************** function __i2c_start *****************
 11788 ;; Defined at:
 11789 ;;		line 45 in file "i2c.c"
 11790 ;; Parameters:    Size  Location     Type
 11791 ;;		None
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;		None
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		None
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11807 ;;Total ram usage:        0 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; Hardware stack levels required when called:   10
 11810 ;; This function calls:
 11811 ;;		Nothing
 11812 ;; This function is called by:
 11813 ;;		__i2c_write
 11814 ;;		__i2c_read
 11815 ;;		__i2c_eeprom_busy
 11816 ;;		_i2c_display_write_fixed
 11817 ;;		_i2c_adc_read
 11818 ;;		_i2c_display_write
 11819 ;; This function uses a non-reentrant model
 11820 ;;
 11821                           
 11822                           	psect	text35
 11823  0157F8                     __ptext35:
 11824                           	opt stack 0
 11825  0157F8                     __i2c_start:
 11826                           	opt stack 16
 11827                           
 11828                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 11829                           
 11830                           ;incstack = 0
 11831  0157F8  80C5               	bsf	4037,0,c	;volatile
 11832  0157FA  A0C5               	btfss	4037,0,c	;volatile
 11833  0157FC  0012               	return	
 11834  0157FE  D7FD               	goto	l1126
 11835  015800                     __end_of__i2c_start:
 11836                           	opt stack 0
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           postinc0	equ	0xFEE
 11844                           wreg	equ	0xFE8
 11845                           postdec1	equ	0xFE5
 11846                           plusw1	equ	0xFE3
 11847                           fsr1h	equ	0xFE2
 11848                           fsr1l	equ	0xFE1
 11849                           indf2	equ	0xFDF
 11850                           postinc2	equ	0xFDE
 11851                           plusw2	equ	0xFDB
 11852                           fsr2h	equ	0xFDA
 11853                           fsr2l	equ	0xFD9
 11854                           status	equ	0xFD8
 11855                           
 11856 ;; *************** function __i2c_send *****************
 11857 ;; Defined at:
 11858 ;;		line 51 in file "i2c.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  dat             1    wreg     unsigned char 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;  dat             1    0[BANK0 ] unsigned char 
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  1    wreg      void 
 11865 ;; Registers used:
 11866 ;;		wreg
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11876 ;;Total ram usage:        1 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; Hardware stack levels required when called:   10
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		__i2c_write
 11883 ;;		__i2c_read
 11884 ;;		__i2c_eeprom_busy
 11885 ;;		_i2c_display_write_fixed
 11886 ;;		_i2c_adc_read
 11887 ;;		_i2c_display_write
 11888 ;; This function uses a non-reentrant model
 11889 ;;
 11890                           
 11891                           	psect	text36
 11892  0157D2                     __ptext36:
 11893                           	opt stack 0
 11894  0157D2                     __i2c_send:
 11895                           	opt stack 16
 11896                           
 11897                           ;incstack = 0
 11898                           ;__i2c_send@dat stored from wreg
 11899  0157D2  0100               	movlb	0	; () banked
 11900  0157D4  6F60               	movwf	__i2c_send@dat& (0+255),b
 11901                           
 11902                           ;i2c.c: 53: SSP1BUF = dat;
 11903  0157D6  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11904  0157DA  0012               	return		;funcret
 11905  0157DC                     __end_of__i2c_send:
 11906                           	opt stack 0
 11907                           tblptru	equ	0xFF8
 11908                           tblptrh	equ	0xFF7
 11909                           tblptrl	equ	0xFF6
 11910                           tablat	equ	0xFF5
 11911                           prodh	equ	0xFF4
 11912                           prodl	equ	0xFF3
 11913                           postinc0	equ	0xFEE
 11914                           wreg	equ	0xFE8
 11915                           postdec1	equ	0xFE5
 11916                           plusw1	equ	0xFE3
 11917                           fsr1h	equ	0xFE2
 11918                           fsr1l	equ	0xFE1
 11919                           indf2	equ	0xFDF
 11920                           postinc2	equ	0xFDE
 11921                           plusw2	equ	0xFDB
 11922                           fsr2h	equ	0xFDA
 11923                           fsr2l	equ	0xFD9
 11924                           status	equ	0xFD8
 11925                           
 11926 ;; *************** function __display_start *****************
 11927 ;; Defined at:
 11928 ;;		line 266 in file "display.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;		None
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;  cntr            1   28[BANK0 ] unsigned char 
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  1    wreg      void 
 11935 ;; Registers used:
 11936 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11946 ;;Total ram usage:        1 bytes
 11947 ;; Hardware stack levels used:    1
 11948 ;; Hardware stack levels required when called:   14
 11949 ;; This function calls:
 11950 ;;		__display_itoa_u16
 11951 ;;		_memcpy
 11952 ;; This function is called by:
 11953 ;;		_display_init
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           	psect	text37
 11958  012D40                     __ptext37:
 11959                           	opt stack 0
 11960  012D40                     __display_start:
 11961                           	opt stack 14
 11962                           
 11963                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11964                           
 11965                           ;incstack = 0
 11966  012D40  0E34               	movlw	low _display_content
 11967  012D42  0100               	movlb	0	; () banked
 11968  012D44  6F60               	movwf	memcpy@d1& (0+255),b
 11969  012D46  0E02               	movlw	high _display_content
 11970  012D48  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11971  012D4A  0E00               	movlw	low _dc_startup
 11972  012D4C  6F62               	movwf	memcpy@s1& (0+255),b
 11973  012D4E  0E04               	movlw	high _dc_startup
 11974  012D50  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11975  012D52  0E00               	movlw	0
 11976  012D54  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11977  012D56  0E50               	movlw	80
 11978  012D58  6F64               	movwf	memcpy@n& (0+255),b
 11979  012D5A  EC57  F0A1         	call	_memcpy	;wreg free
 11980                           
 11981                           ;display.c: 270: cntr = 6;
 11982  012D5E  0E06               	movlw	6
 11983  012D60  0100               	movlb	0	; () banked
 11984  012D62  6F7C               	movwf	__display_start@cntr& (0+255),b
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11988  012D64  0E00               	movlw	0
 11989  012D66  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11990  012D68  0E00               	movlw	0
 11991  012D6A  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11992  012D6C  517C               	movf	__display_start@cntr& (0+255),w,b
 11993  012D6E  0D01               	mullw	1
 11994  012D70  0E5C               	movlw	low (_display_content+40)
 11995  012D72  24F3               	addwf	prodl,w,c
 11996  012D74  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11997  012D76  0E02               	movlw	high (_display_content+40)
 11998  012D78  20F4               	addwfc	prodh,w,c
 11999  012D7A  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12000  012D7C  EC46  F096         	call	__display_itoa_u16	;wreg free
 12001  012D80  0100               	movlb	0	; () banked
 12002  012D82  277C               	addwf	__display_start@cntr& (0+255),f,b
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;display.c: 272: display_content[2][cntr++] = '.';
 12006  012D84  517C               	movf	__display_start@cntr& (0+255),w,b
 12007  012D86  0D01               	mullw	1
 12008  012D88  0E5C               	movlw	low (_display_content+40)
 12009  012D8A  24F3               	addwf	prodl,w,c
 12010  012D8C  6ED9               	movwf	fsr2l,c
 12011  012D8E  0E02               	movlw	high (_display_content+40)
 12012  012D90  20F4               	addwfc	prodh,w,c
 12013  012D92  6EDA               	movwf	fsr2h,c
 12014  012D94  0E2E               	movlw	46
 12015  012D96  6EDF               	movwf	indf2,c
 12016                           
 12017                           ; BSR set to: 0
 12018  012D98  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;display.c: 273: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 12022  012D9A  0E00               	movlw	0
 12023  012D9C  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12024  012D9E  0E05               	movlw	5
 12025  012DA0  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12026  012DA2  517C               	movf	__display_start@cntr& (0+255),w,b
 12027  012DA4  0D01               	mullw	1
 12028  012DA6  0E5C               	movlw	low (_display_content+40)
 12029  012DA8  24F3               	addwf	prodl,w,c
 12030  012DAA  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12031  012DAC  0E02               	movlw	high (_display_content+40)
 12032  012DAE  20F4               	addwfc	prodh,w,c
 12033  012DB0  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12034  012DB2  EC46  F096         	call	__display_itoa_u16	;wreg free
 12035  012DB6  0100               	movlb	0	; () banked
 12036  012DB8  277C               	addwf	__display_start@cntr& (0+255),f,b
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;display.c: 274: display_content[2][cntr++] = '.';
 12040  012DBA  517C               	movf	__display_start@cntr& (0+255),w,b
 12041  012DBC  0D01               	mullw	1
 12042  012DBE  0E5C               	movlw	low (_display_content+40)
 12043  012DC0  24F3               	addwf	prodl,w,c
 12044  012DC2  6ED9               	movwf	fsr2l,c
 12045  012DC4  0E02               	movlw	high (_display_content+40)
 12046  012DC6  20F4               	addwfc	prodh,w,c
 12047  012DC8  6EDA               	movwf	fsr2h,c
 12048  012DCA  0E2E               	movlw	46
 12049  012DCC  6EDF               	movwf	indf2,c
 12050                           
 12051                           ; BSR set to: 0
 12052  012DCE  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;display.c: 275: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 12056  012DD0  0E00               	movlw	0
 12057  012DD2  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12058  012DD4  0E00               	movlw	0
 12059  012DD6  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12060  012DD8  517C               	movf	__display_start@cntr& (0+255),w,b
 12061  012DDA  0D01               	mullw	1
 12062  012DDC  0E5C               	movlw	low (_display_content+40)
 12063  012DDE  24F3               	addwf	prodl,w,c
 12064  012DE0  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12065  012DE2  0E02               	movlw	high (_display_content+40)
 12066  012DE4  20F4               	addwfc	prodh,w,c
 12067  012DE6  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12068  012DE8  EC46  F096         	call	__display_itoa_u16	;wreg free
 12069  012DEC  0100               	movlb	0	; () banked
 12070  012DEE  277C               	addwf	__display_start@cntr& (0+255),f,b
 12071                           
 12072                           ; BSR set to: 0
 12073  012DF0  0012               	return		;funcret
 12074  012DF2                     __end_of__display_start:
 12075                           	opt stack 0
 12076                           tblptru	equ	0xFF8
 12077                           tblptrh	equ	0xFF7
 12078                           tblptrl	equ	0xFF6
 12079                           tablat	equ	0xFF5
 12080                           prodh	equ	0xFF4
 12081                           prodl	equ	0xFF3
 12082                           postinc0	equ	0xFEE
 12083                           wreg	equ	0xFE8
 12084                           postdec1	equ	0xFE5
 12085                           plusw1	equ	0xFE3
 12086                           fsr1h	equ	0xFE2
 12087                           fsr1l	equ	0xFE1
 12088                           indf2	equ	0xFDF
 12089                           postinc2	equ	0xFDE
 12090                           plusw2	equ	0xFDB
 12091                           fsr2h	equ	0xFDA
 12092                           fsr2l	equ	0xFD9
 12093                           status	equ	0xFD8
 12094                           
 12095 ;; *************** function __display_itoa_u16 *****************
 12096 ;; Defined at:
 12097 ;;		line 226 in file "display.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;  value           2   24[BANK0 ] unsigned int 
 12100 ;;  text            2   26[BANK0 ] PTR unsigned char 
 12101 ;;		 -> display_content(80), 
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;		None
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  1    wreg      unsigned char 
 12106 ;; Registers used:
 12107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12117 ;;Total ram usage:        4 bytes
 12118 ;; Hardware stack levels used:    1
 12119 ;; Hardware stack levels required when called:   13
 12120 ;; This function calls:
 12121 ;;		_itoa
 12122 ;; This function is called by:
 12123 ;;		__display_start
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	text38
 12128  012C8C                     __ptext38:
 12129                           	opt stack 0
 12130  012C8C                     __display_itoa_u16:
 12131                           	opt stack 14
 12132                           
 12133                           ;display.c: 228: itoa(text, value, 10);
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;incstack = 0
 12137  012C8C  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 12138  012C90  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 12139  012C94  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 12140  012C98  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 12141  012C9C  0E00               	movlw	0
 12142  012C9E  0100               	movlb	0	; () banked
 12143  012CA0  6F75               	movwf	(itoa@base+1)& (0+255),b
 12144  012CA2  0E0A               	movlw	10
 12145  012CA4  6F74               	movwf	itoa@base& (0+255),b
 12146  012CA6  ECE9  F0A6         	call	_itoa	;wreg free
 12147                           
 12148                           ;display.c: 229: if(value>9999)
 12149  012CAA  0E10               	movlw	16
 12150  012CAC  0100               	movlb	0	; () banked
 12151  012CAE  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12152  012CB0  0E27               	movlw	39
 12153  012CB2  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12154  012CB4  A0D8               	btfss	status,0,c
 12155  012CB6  D00A               	goto	l1359
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 12159  012CB8  EE20 F005          	lfsr	2,5
 12160  012CBC  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12161  012CBE  26D9               	addwf	fsr2l,f,c
 12162  012CC0  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12163  012CC2  22DA               	addwfc	fsr2h,f,c
 12164  012CC4  0E20               	movlw	32
 12165  012CC6  6EDF               	movwf	indf2,c
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;display.c: 232: return 5;
 12169  012CC8  0E05               	movlw	5
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;display.c: 233: }
 12173                           
 12174                           ; BSR set to: 0
 12175  012CCA  0012               	return	
 12176  012CCC                     l1359:
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;display.c: 234: else if (value>999)
 12180                           
 12181                           ; BSR set to: 0
 12182  012CCC  0EE8               	movlw	232
 12183  012CCE  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12184  012CD0  0E03               	movlw	3
 12185  012CD2  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12186  012CD4  A0D8               	btfss	status,0,c
 12187  012CD6  D00A               	goto	l1362
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 12191  012CD8  EE20 F004          	lfsr	2,4
 12192  012CDC  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12193  012CDE  26D9               	addwf	fsr2l,f,c
 12194  012CE0  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12195  012CE2  22DA               	addwfc	fsr2h,f,c
 12196  012CE4  0E20               	movlw	32
 12197  012CE6  6EDF               	movwf	indf2,c
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;display.c: 237: return 4;
 12201  012CE8  0E04               	movlw	4
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;display.c: 238: }
 12205                           
 12206                           ; BSR set to: 0
 12207  012CEA  0012               	return	
 12208  012CEC                     l1362:
 12209                           
 12210                           ; BSR set to: 0
 12211                           ;display.c: 239: else if (value>99)
 12212                           
 12213                           ; BSR set to: 0
 12214  012CEC  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12215  012CEE  E104               	bnz	u12990
 12216  012CF0  0E64               	movlw	100
 12217  012CF2  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12218  012CF4  A0D8               	btfss	status,0,c
 12219  012CF6  D00A               	goto	l1364
 12220  012CF8                     u12990:
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 12224  012CF8  EE20 F003          	lfsr	2,3
 12225  012CFC  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12226  012CFE  26D9               	addwf	fsr2l,f,c
 12227  012D00  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12228  012D02  22DA               	addwfc	fsr2h,f,c
 12229  012D04  0E20               	movlw	32
 12230  012D06  6EDF               	movwf	indf2,c
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;display.c: 242: return 3;
 12234  012D08  0E03               	movlw	3
 12235                           
 12236                           ; BSR set to: 0
 12237                           ;display.c: 243: }
 12238                           
 12239                           ; BSR set to: 0
 12240  012D0A  0012               	return	
 12241  012D0C                     l1364:
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;display.c: 244: else if (value>9)
 12245                           
 12246                           ; BSR set to: 0
 12247  012D0C  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12248  012D0E  E104               	bnz	u13000
 12249  012D10  0E0A               	movlw	10
 12250  012D12  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12251  012D14  A0D8               	btfss	status,0,c
 12252  012D16  D00A               	goto	l1366
 12253  012D18                     u13000:
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 12257  012D18  EE20 F002          	lfsr	2,2
 12258  012D1C  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12259  012D1E  26D9               	addwf	fsr2l,f,c
 12260  012D20  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12261  012D22  22DA               	addwfc	fsr2h,f,c
 12262  012D24  0E20               	movlw	32
 12263  012D26  6EDF               	movwf	indf2,c
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;display.c: 247: return 2;
 12267  012D28  0E02               	movlw	2
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;display.c: 248: }
 12271                           
 12272                           ; BSR set to: 0
 12273  012D2A  0012               	return	
 12274  012D2C                     l1366:
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 12278                           
 12279                           ; BSR set to: 0
 12280  012D2C  EE20 F001          	lfsr	2,1
 12281  012D30  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12282  012D32  26D9               	addwf	fsr2l,f,c
 12283  012D34  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12284  012D36  22DA               	addwfc	fsr2h,f,c
 12285  012D38  0E20               	movlw	32
 12286  012D3A  6EDF               	movwf	indf2,c
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;display.c: 252: return 1;
 12290  012D3C  0E01               	movlw	1
 12291                           
 12292                           ; BSR set to: 0
 12293                           
 12294                           ; BSR set to: 0
 12295                           
 12296                           ; BSR set to: 0
 12297                           
 12298                           ; BSR set to: 0
 12299  012D3E  0012               	return	
 12300  012D40                     __end_of__display_itoa_u16:
 12301                           	opt stack 0
 12302                           tblptru	equ	0xFF8
 12303                           tblptrh	equ	0xFF7
 12304                           tblptrl	equ	0xFF6
 12305                           tablat	equ	0xFF5
 12306                           prodh	equ	0xFF4
 12307                           prodl	equ	0xFF3
 12308                           postinc0	equ	0xFEE
 12309                           wreg	equ	0xFE8
 12310                           postdec1	equ	0xFE5
 12311                           plusw1	equ	0xFE3
 12312                           fsr1h	equ	0xFE2
 12313                           fsr1l	equ	0xFE1
 12314                           indf2	equ	0xFDF
 12315                           postinc2	equ	0xFDE
 12316                           plusw2	equ	0xFDB
 12317                           fsr2h	equ	0xFDA
 12318                           fsr2l	equ	0xFD9
 12319                           status	equ	0xFD8
 12320                           
 12321 ;; *************** function _configFile_write *****************
 12322 ;; Defined at:
 12323 ;;		line 270 in file "config_file.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;		None
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;  file_size       4  133[BANK0 ] unsigned long 
 12328 ;;  file_number     1  132[BANK0 ] unsigned char 
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12339 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12341 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12342 ;;Total ram usage:        6 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:   18
 12345 ;; This function calls:
 12346 ;;		__add_item
 12347 ;;		_fat_create_file
 12348 ;;		_fat_find_file
 12349 ;;		_fat_modify_file
 12350 ;;		_fat_resize_file
 12351 ;; This function is called by:
 12352 ;;		_system_init
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text39
 12357  00C24A                     __ptext39:
 12358                           	opt stack 0
 12359  00C24A                     _configFile_write:
 12360                           	opt stack 11
 12361                           
 12362                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 275: file_size = 0;
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;incstack = 0
 12366  00C24A  0E00               	movlw	0
 12367  00C24C  0100               	movlb	0	; () banked
 12368  00C24E  6FE5               	movwf	configFile_write@file_size& (0+255),b
 12369  00C250  0E00               	movlw	0
 12370  00C252  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 12371  00C254  0E00               	movlw	0
 12372  00C256  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 12373  00C258  0E00               	movlw	0
 12374  00C25A  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;config_file.c: 276: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 12378  00C25C  0EFD               	movlw	low _full_circle_in_steps_string
 12379  00C25E  6F84               	movwf	__add_item@item_string& (0+255),b
 12380  00C260  0EA1               	movlw	high _full_circle_in_steps_string
 12381  00C262  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12382  00C264  C1A1  F086         	movff	_config,__add_item@value
 12383  00C268  C1A2  F087         	movff	_config+1,__add_item@value+1
 12384  00C26C  C1A3  F088         	movff	_config+2,__add_item@value+2
 12385  00C270  C1A4  F089         	movff	_config+3,__add_item@value+3
 12386  00C274  0E00               	movlw	low _ConfigFile_buffer
 12387  00C276  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12388  00C278  6F8A               	movwf	__add_item@buffer& (0+255),b
 12389  00C27A  0E08               	movlw	high _ConfigFile_buffer
 12390  00C27C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12391  00C27E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12392  00C280  EC75  F08E         	call	__add_item	;wreg free
 12393  00C284  0100               	movlb	0	; () banked
 12394  00C286  6FE3               	movwf	??_configFile_write& (0+255),b
 12395  00C288  51E3               	movf	??_configFile_write& (0+255),w,b
 12396  00C28A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12397  00C28C  0E00               	movlw	0
 12398  00C28E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12399  00C290  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12400  00C292  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;config_file.c: 277: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 12404  00C294  0E49               	movlw	low _inverse_direction_string
 12405  00C296  6F84               	movwf	__add_item@item_string& (0+255),b
 12406  00C298  0EA2               	movlw	high _inverse_direction_string
 12407  00C29A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12408  00C29C  0101               	movlb	1	; () banked
 12409  00C29E  51A5               	movf	(_config+4)& (0+255),w,b
 12410  00C2A0  0100               	movlb	0	; () banked
 12411  00C2A2  6F86               	movwf	__add_item@value& (0+255),b
 12412  00C2A4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12413  00C2A6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12414  00C2A8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12415  00C2AA  0E00               	movlw	low _ConfigFile_buffer
 12416  00C2AC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12417  00C2AE  6F8A               	movwf	__add_item@buffer& (0+255),b
 12418  00C2B0  0E08               	movlw	high _ConfigFile_buffer
 12419  00C2B2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12420  00C2B4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12421  00C2B6  EC75  F08E         	call	__add_item	;wreg free
 12422  00C2BA  0100               	movlb	0	; () banked
 12423  00C2BC  6FE3               	movwf	??_configFile_write& (0+255),b
 12424  00C2BE  51E3               	movf	??_configFile_write& (0+255),w,b
 12425  00C2C0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12426  00C2C2  0E00               	movlw	0
 12427  00C2C4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12428  00C2C6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12429  00C2C8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;config_file.c: 278: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 12433  00C2CA  0E12               	movlw	low _overshoot_in_steps_string
 12434  00C2CC  6F84               	movwf	__add_item@item_string& (0+255),b
 12435  00C2CE  0EA2               	movlw	high _overshoot_in_steps_string
 12436  00C2D0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12437  00C2D2  C1A6  F086         	movff	_config+5,__add_item@value
 12438  00C2D6  C1A7  F087         	movff	_config+6,__add_item@value+1
 12439  00C2DA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12440  00C2DC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12441  00C2DE  0E00               	movlw	low _ConfigFile_buffer
 12442  00C2E0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12443  00C2E2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12444  00C2E4  0E08               	movlw	high _ConfigFile_buffer
 12445  00C2E6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12446  00C2E8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12447  00C2EA  EC75  F08E         	call	__add_item	;wreg free
 12448  00C2EE  0100               	movlb	0	; () banked
 12449  00C2F0  6FE3               	movwf	??_configFile_write& (0+255),b
 12450  00C2F2  51E3               	movf	??_configFile_write& (0+255),w,b
 12451  00C2F4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12452  00C2F6  0E00               	movlw	0
 12453  00C2F8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12454  00C2FA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12455  00C2FC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;config_file.c: 279: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 12459  00C2FE  0EBB               	movlw	low _overshoot_cost_in_steps_string
 12460  00C300  6F84               	movwf	__add_item@item_string& (0+255),b
 12461  00C302  0EA1               	movlw	high _overshoot_cost_in_steps_string
 12462  00C304  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12463  00C306  C1A8  F086         	movff	_config+7,__add_item@value
 12464  00C30A  C1A9  F087         	movff	_config+8,__add_item@value+1
 12465  00C30E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12466  00C310  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12467  00C312  0E00               	movlw	low _ConfigFile_buffer
 12468  00C314  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12469  00C316  6F8A               	movwf	__add_item@buffer& (0+255),b
 12470  00C318  0E08               	movlw	high _ConfigFile_buffer
 12471  00C31A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12472  00C31C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12473  00C31E  EC75  F08E         	call	__add_item	;wreg free
 12474  00C322  0100               	movlb	0	; () banked
 12475  00C324  6FE3               	movwf	??_configFile_write& (0+255),b
 12476  00C326  51E3               	movf	??_configFile_write& (0+255),w,b
 12477  00C328  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12478  00C32A  0E00               	movlw	0
 12479  00C32C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12480  00C32E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12481  00C330  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12482                           
 12483                           ; BSR set to: 0
 12484                           ;config_file.c: 280: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12485  00C332  0E97               	movlw	low _minimum_speed_string
 12486  00C334  6F84               	movwf	__add_item@item_string& (0+255),b
 12487  00C336  0EA2               	movlw	high _minimum_speed_string
 12488  00C338  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12489  00C33A  C1AA  F086         	movff	_config+9,__add_item@value
 12490  00C33E  C1AB  F087         	movff	_config+10,__add_item@value+1
 12491  00C342  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12492  00C344  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12493  00C346  0E00               	movlw	low _ConfigFile_buffer
 12494  00C348  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12495  00C34A  6F8A               	movwf	__add_item@buffer& (0+255),b
 12496  00C34C  0E08               	movlw	high _ConfigFile_buffer
 12497  00C34E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12498  00C350  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12499  00C352  EC75  F08E         	call	__add_item	;wreg free
 12500  00C356  0100               	movlb	0	; () banked
 12501  00C358  6FE3               	movwf	??_configFile_write& (0+255),b
 12502  00C35A  51E3               	movf	??_configFile_write& (0+255),w,b
 12503  00C35C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12504  00C35E  0E00               	movlw	0
 12505  00C360  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12506  00C362  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12507  00C364  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;config_file.c: 281: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12511  00C366  0E89               	movlw	low _maximum_speed_string
 12512  00C368  6F84               	movwf	__add_item@item_string& (0+255),b
 12513  00C36A  0EA2               	movlw	high _maximum_speed_string
 12514  00C36C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12515  00C36E  C1AC  F086         	movff	_config+11,__add_item@value
 12516  00C372  C1AD  F087         	movff	_config+12,__add_item@value+1
 12517  00C376  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12518  00C378  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12519  00C37A  0E00               	movlw	low _ConfigFile_buffer
 12520  00C37C  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12521  00C37E  6F8A               	movwf	__add_item@buffer& (0+255),b
 12522  00C380  0E08               	movlw	high _ConfigFile_buffer
 12523  00C382  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12524  00C384  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12525  00C386  EC75  F08E         	call	__add_item	;wreg free
 12526  00C38A  0100               	movlb	0	; () banked
 12527  00C38C  6FE3               	movwf	??_configFile_write& (0+255),b
 12528  00C38E  51E3               	movf	??_configFile_write& (0+255),w,b
 12529  00C390  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12530  00C392  0E00               	movlw	0
 12531  00C394  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12532  00C396  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12533  00C398  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;config_file.c: 282: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 12537  00C39A  0E37               	movlw	low _initial_speed_arc_string
 12538  00C39C  6F84               	movwf	__add_item@item_string& (0+255),b
 12539  00C39E  0EA2               	movlw	high _initial_speed_arc_string
 12540  00C3A0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12541  00C3A2  C1AE  F086         	movff	_config+13,__add_item@value
 12542  00C3A6  C1AF  F087         	movff	_config+14,__add_item@value+1
 12543  00C3AA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12544  00C3AC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12545  00C3AE  0E00               	movlw	low _ConfigFile_buffer
 12546  00C3B0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12547  00C3B2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12548  00C3B4  0E08               	movlw	high _ConfigFile_buffer
 12549  00C3B6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12550  00C3B8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12551  00C3BA  EC75  F08E         	call	__add_item	;wreg free
 12552  00C3BE  0100               	movlb	0	; () banked
 12553  00C3C0  6FE3               	movwf	??_configFile_write& (0+255),b
 12554  00C3C2  51E3               	movf	??_configFile_write& (0+255),w,b
 12555  00C3C4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12556  00C3C6  0E00               	movlw	0
 12557  00C3C8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12558  00C3CA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12559  00C3CC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;config_file.c: 283: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 12563  00C3CE  0E25               	movlw	low _maximum_speed_arc_string
 12564  00C3D0  6F84               	movwf	__add_item@item_string& (0+255),b
 12565  00C3D2  0EA2               	movlw	high _maximum_speed_arc_string
 12566  00C3D4  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12567  00C3D6  C1B0  F086         	movff	_config+15,__add_item@value
 12568  00C3DA  C1B1  F087         	movff	_config+16,__add_item@value+1
 12569  00C3DE  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12570  00C3E0  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12571  00C3E2  0E00               	movlw	low _ConfigFile_buffer
 12572  00C3E4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12573  00C3E6  6F8A               	movwf	__add_item@buffer& (0+255),b
 12574  00C3E8  0E08               	movlw	high _ConfigFile_buffer
 12575  00C3EA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12576  00C3EC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12577  00C3EE  EC75  F08E         	call	__add_item	;wreg free
 12578  00C3F2  0100               	movlb	0	; () banked
 12579  00C3F4  6FE3               	movwf	??_configFile_write& (0+255),b
 12580  00C3F6  51E3               	movf	??_configFile_write& (0+255),w,b
 12581  00C3F8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12582  00C3FA  0E00               	movlw	0
 12583  00C3FC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12584  00C3FE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12585  00C400  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;config_file.c: 284: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 12589  00C402  0EE8               	movlw	low _initial_speed_manual_string
 12590  00C404  6F84               	movwf	__add_item@item_string& (0+255),b
 12591  00C406  0EA1               	movlw	high _initial_speed_manual_string
 12592  00C408  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12593  00C40A  C1B2  F086         	movff	_config+17,__add_item@value
 12594  00C40E  C1B3  F087         	movff	_config+18,__add_item@value+1
 12595  00C412  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12596  00C414  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12597  00C416  0E00               	movlw	low _ConfigFile_buffer
 12598  00C418  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12599  00C41A  6F8A               	movwf	__add_item@buffer& (0+255),b
 12600  00C41C  0E08               	movlw	high _ConfigFile_buffer
 12601  00C41E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12602  00C420  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12603  00C422  EC75  F08E         	call	__add_item	;wreg free
 12604  00C426  0100               	movlb	0	; () banked
 12605  00C428  6FE3               	movwf	??_configFile_write& (0+255),b
 12606  00C42A  51E3               	movf	??_configFile_write& (0+255),w,b
 12607  00C42C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12608  00C42E  0E00               	movlw	0
 12609  00C430  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12610  00C432  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12611  00C434  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;config_file.c: 285: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 12615  00C436  0ED3               	movlw	low _maximum_speed_manual_string
 12616  00C438  6F84               	movwf	__add_item@item_string& (0+255),b
 12617  00C43A  0EA1               	movlw	high _maximum_speed_manual_string
 12618  00C43C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12619  00C43E  C1B4  F086         	movff	_config+19,__add_item@value
 12620  00C442  C1B5  F087         	movff	_config+20,__add_item@value+1
 12621  00C446  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12622  00C448  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12623  00C44A  0E00               	movlw	low _ConfigFile_buffer
 12624  00C44C  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12625  00C44E  6F8A               	movwf	__add_item@buffer& (0+255),b
 12626  00C450  0E08               	movlw	high _ConfigFile_buffer
 12627  00C452  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12628  00C454  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12629  00C456  EC75  F08E         	call	__add_item	;wreg free
 12630  00C45A  0100               	movlb	0	; () banked
 12631  00C45C  6FE3               	movwf	??_configFile_write& (0+255),b
 12632  00C45E  51E3               	movf	??_configFile_write& (0+255),w,b
 12633  00C460  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12634  00C462  0E00               	movlw	0
 12635  00C464  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12636  00C466  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12637  00C468  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;config_file.c: 286: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 12641  00C46A  0E6D               	movlw	low _use_ccw_limit_string
 12642  00C46C  6F84               	movwf	__add_item@item_string& (0+255),b
 12643  00C46E  0EA2               	movlw	high _use_ccw_limit_string
 12644  00C470  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12645  00C472  0101               	movlb	1	; () banked
 12646  00C474  51BA               	movf	(_config+25)& (0+255),w,b
 12647  00C476  0100               	movlb	0	; () banked
 12648  00C478  6F86               	movwf	__add_item@value& (0+255),b
 12649  00C47A  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12650  00C47C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12651  00C47E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12652  00C480  0E00               	movlw	low _ConfigFile_buffer
 12653  00C482  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12654  00C484  6F8A               	movwf	__add_item@buffer& (0+255),b
 12655  00C486  0E08               	movlw	high _ConfigFile_buffer
 12656  00C488  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12657  00C48A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12658  00C48C  EC75  F08E         	call	__add_item	;wreg free
 12659  00C490  0100               	movlb	0	; () banked
 12660  00C492  6FE3               	movwf	??_configFile_write& (0+255),b
 12661  00C494  51E3               	movf	??_configFile_write& (0+255),w,b
 12662  00C496  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12663  00C498  0E00               	movlw	0
 12664  00C49A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12665  00C49C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12666  00C49E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;config_file.c: 287: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12670  00C4A0  0EB2               	movlw	low _ccw_limit_string
 12671  00C4A2  6F84               	movwf	__add_item@item_string& (0+255),b
 12672  00C4A4  0EA2               	movlw	high _ccw_limit_string
 12673  00C4A6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12674  00C4A8  C1BB  F086         	movff	_config+26,__add_item@value
 12675  00C4AC  C1BC  F087         	movff	_config+27,__add_item@value+1
 12676  00C4B0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12677  00C4B2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12678  00C4B4  0E00               	movlw	low _ConfigFile_buffer
 12679  00C4B6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12680  00C4B8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12681  00C4BA  0E08               	movlw	high _ConfigFile_buffer
 12682  00C4BC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12683  00C4BE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12684  00C4C0  EC75  F08E         	call	__add_item	;wreg free
 12685  00C4C4  0100               	movlb	0	; () banked
 12686  00C4C6  6FE3               	movwf	??_configFile_write& (0+255),b
 12687  00C4C8  51E3               	movf	??_configFile_write& (0+255),w,b
 12688  00C4CA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12689  00C4CC  0E00               	movlw	0
 12690  00C4CE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12691  00C4D0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12692  00C4D2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12693                           
 12694                           ; BSR set to: 0
 12695                           ;config_file.c: 288: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12696  00C4D4  0EA5               	movlw	low _use_cw_limit_string
 12697  00C4D6  6F84               	movwf	__add_item@item_string& (0+255),b
 12698  00C4D8  0EA2               	movlw	high _use_cw_limit_string
 12699  00C4DA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12700  00C4DC  0101               	movlb	1	; () banked
 12701  00C4DE  51B7               	movf	(_config+22)& (0+255),w,b
 12702  00C4E0  0100               	movlb	0	; () banked
 12703  00C4E2  6F86               	movwf	__add_item@value& (0+255),b
 12704  00C4E4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12705  00C4E6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12706  00C4E8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12707  00C4EA  0E00               	movlw	low _ConfigFile_buffer
 12708  00C4EC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12709  00C4EE  6F8A               	movwf	__add_item@buffer& (0+255),b
 12710  00C4F0  0E08               	movlw	high _ConfigFile_buffer
 12711  00C4F2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12712  00C4F4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12713  00C4F6  EC75  F08E         	call	__add_item	;wreg free
 12714  00C4FA  0100               	movlb	0	; () banked
 12715  00C4FC  6FE3               	movwf	??_configFile_write& (0+255),b
 12716  00C4FE  51E3               	movf	??_configFile_write& (0+255),w,b
 12717  00C500  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12718  00C502  0E00               	movlw	0
 12719  00C504  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12720  00C506  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12721  00C508  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;config_file.c: 289: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12725  00C50A  0EBC               	movlw	low _cw_limit_string
 12726  00C50C  6F84               	movwf	__add_item@item_string& (0+255),b
 12727  00C50E  0EA2               	movlw	high _cw_limit_string
 12728  00C510  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12729  00C512  C1B8  F086         	movff	_config+23,__add_item@value
 12730  00C516  C1B9  F087         	movff	_config+24,__add_item@value+1
 12731  00C51A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12732  00C51C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12733  00C51E  0E00               	movlw	low _ConfigFile_buffer
 12734  00C520  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12735  00C522  6F8A               	movwf	__add_item@buffer& (0+255),b
 12736  00C524  0E08               	movlw	high _ConfigFile_buffer
 12737  00C526  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12738  00C528  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12739  00C52A  EC75  F08E         	call	__add_item	;wreg free
 12740  00C52E  0100               	movlb	0	; () banked
 12741  00C530  6FE3               	movwf	??_configFile_write& (0+255),b
 12742  00C532  51E3               	movf	??_configFile_write& (0+255),w,b
 12743  00C534  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12744  00C536  0E00               	movlw	0
 12745  00C538  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12746  00C53A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12747  00C53C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;config_file.c: 290: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12751  00C53E  0E7B               	movlw	low _beep_duration_string
 12752  00C540  6F84               	movwf	__add_item@item_string& (0+255),b
 12753  00C542  0EA2               	movlw	high _beep_duration_string
 12754  00C544  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12755  00C546  0101               	movlb	1	; () banked
 12756  00C548  51B6               	movf	(_config+21)& (0+255),w,b
 12757  00C54A  0100               	movlb	0	; () banked
 12758  00C54C  6F86               	movwf	__add_item@value& (0+255),b
 12759  00C54E  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12760  00C550  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12761  00C552  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12762  00C554  0E00               	movlw	low _ConfigFile_buffer
 12763  00C556  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12764  00C558  6F8A               	movwf	__add_item@buffer& (0+255),b
 12765  00C55A  0E08               	movlw	high _ConfigFile_buffer
 12766  00C55C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12767  00C55E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12768  00C560  EC75  F08E         	call	__add_item	;wreg free
 12769  00C564  0100               	movlb	0	; () banked
 12770  00C566  6FE3               	movwf	??_configFile_write& (0+255),b
 12771  00C568  51E3               	movf	??_configFile_write& (0+255),w,b
 12772  00C56A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12773  00C56C  0E00               	movlw	0
 12774  00C56E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12775  00C570  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12776  00C572  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;config_file.c: 293: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12780  00C574  0EC0               	movlw	low _configFile_used_name
 12781  00C576  6F8B               	movwf	fat_find_file@name& (0+255),b
 12782  00C578  0E02               	movlw	high _configFile_used_name
 12783  00C57A  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12784  00C57C  0ED0               	movlw	low _configFile_used_extention
 12785  00C57E  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12786  00C580  0E02               	movlw	high _configFile_used_extention
 12787  00C582  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12788  00C584  EC8E  F08D         	call	_fat_find_file	;wreg free
 12789  00C588  0100               	movlb	0	; () banked
 12790  00C58A  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12791                           
 12792                           ; BSR set to: 0
 12793                           ;config_file.c: 294: if(file_number==0xFF)
 12794  00C58C  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12795  00C58E  A4D8               	btfss	status,2,c
 12796  00C590  D015               	goto	l2912
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;config_file.c: 295: {;config_file.c: 296: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12800  00C592  0EC0               	movlw	low _configFile_used_name
 12801  00C594  6FAC               	movwf	fat_create_file@name& (0+255),b
 12802  00C596  0E02               	movlw	high _configFile_used_name
 12803  00C598  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12804  00C59A  0ED0               	movlw	low _configFile_used_extention
 12805  00C59C  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12806  00C59E  0E02               	movlw	high _configFile_used_extention
 12807  00C5A0  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12808  00C5A2  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12809  00C5A6  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12810  00C5AA  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12811  00C5AE  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12812  00C5B2  ECFF  F081         	call	_fat_create_file	;wreg free
 12813  00C5B6  0100               	movlb	0	; () banked
 12814  00C5B8  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12815                           
 12816                           ;config_file.c: 297: }
 12817  00C5BA  D00B               	goto	l2913
 12818  00C5BC                     l2912:
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 300: fat_resize_file(file
      +                          _number, file_size);
 12822                           
 12823                           ; BSR set to: 0
 12824  00C5BC  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12825  00C5C0  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12826  00C5C4  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12827  00C5C8  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12828  00C5CC  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12829  00C5CE  ECB7  F089         	call	_fat_resize_file
 12830  00C5D2                     l2913:
 12831                           
 12832                           ;config_file.c: 301: };config_file.c: 304: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12833  00C5D2  0E00               	movlw	0
 12834  00C5D4  0100               	movlb	0	; () banked
 12835  00C5D6  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12836  00C5D8  0E00               	movlw	0
 12837  00C5DA  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12838  00C5DC  0E00               	movlw	0
 12839  00C5DE  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12840  00C5E0  0E00               	movlw	0
 12841  00C5E2  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12842  00C5E4  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12843  00C5E8  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12844  00C5EC  0E00               	movlw	low _ConfigFile_buffer
 12845  00C5EE  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12846  00C5F0  0E08               	movlw	high _ConfigFile_buffer
 12847  00C5F2  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12848  00C5F4  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12849  00C5F6  EC31  F073         	call	_fat_modify_file
 12850  00C5FA  0012               	return		;funcret
 12851  00C5FC                     __end_of_configFile_write:
 12852                           	opt stack 0
 12853                           tblptru	equ	0xFF8
 12854                           tblptrh	equ	0xFF7
 12855                           tblptrl	equ	0xFF6
 12856                           tablat	equ	0xFF5
 12857                           prodh	equ	0xFF4
 12858                           prodl	equ	0xFF3
 12859                           postinc0	equ	0xFEE
 12860                           wreg	equ	0xFE8
 12861                           postdec1	equ	0xFE5
 12862                           plusw1	equ	0xFE3
 12863                           fsr1h	equ	0xFE2
 12864                           fsr1l	equ	0xFE1
 12865                           indf2	equ	0xFDF
 12866                           postinc2	equ	0xFDE
 12867                           plusw2	equ	0xFDB
 12868                           fsr2h	equ	0xFDA
 12869                           fsr2l	equ	0xFD9
 12870                           status	equ	0xFD8
 12871                           
 12872 ;; *************** function _fat_resize_file *****************
 12873 ;; Defined at:
 12874 ;;		line 910 in file "fat16.c"
 12875 ;; Parameters:    Size  Location     Type
 12876 ;;  file_number     1    wreg     unsigned char 
 12877 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;  file_number     1   90[BANK0 ] unsigned char 
 12880 ;;  root           32   91[BANK0 ] struct .
 12881 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12882 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12883 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12884 ;; Return value:  Size  Location     Type
 12885 ;;                  1    wreg      unsigned char 
 12886 ;; Registers used:
 12887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12888 ;; Tracked objects:
 12889 ;;		On entry : 0/0
 12890 ;;		On exit  : 0/0
 12891 ;;		Unchanged: 0/0
 12892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12894 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12896 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12897 ;;Total ram usage:       47 bytes
 12898 ;; Hardware stack levels used:    1
 12899 ;; Hardware stack levels required when called:   17
 12900 ;; This function calls:
 12901 ;;		__make_cluster_chain
 12902 ;;		__root_is_available
 12903 ;;		__write_root
 12904 ;;		_fat_get_file_information
 12905 ;; This function is called by:
 12906 ;;		_configFile_write
 12907 ;;		_fat_append_to_file
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           	psect	text40
 12912  01136E                     __ptext40:
 12913                           	opt stack 0
 12914  01136E                     _fat_resize_file:
 12915                           	opt stack 11
 12916                           
 12917                           ;incstack = 0
 12918                           ;fat_resize_file@file_number stored from wreg
 12919  01136E  0100               	movlb	0	; () banked
 12920  011370  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12921                           
 12922                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 12923  011372  0E3F               	movlw	63
 12924  011374  0100               	movlb	0	; () banked
 12925  011376  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12926  011378  D002               	goto	l1900
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 12930  01137A  0EFF               	movlw	255
 12931                           
 12932                           ; BSR set to: 0
 12933  01137C  0012               	return	
 12934  01137E                     l1900:
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 12938                           
 12939                           ; BSR set to: 0
 12940  01137E  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12941  011380  ECC1  F09F         	call	__root_is_available
 12942  011384  0900               	iorlw	0
 12943  011386  B4D8               	btfsc	status,2,c
 12944  011388  D002               	goto	l1902
 12945                           
 12946                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 12947  01138A  0EFE               	movlw	254
 12948  01138C  0012               	return	
 12949  01138E                     l1902:
 12950                           
 12951                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 12952  01138E  0EBB               	movlw	low fat_resize_file@root
 12953  011390  0100               	movlb	0	; () banked
 12954  011392  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12955  011394  0E00               	movlw	high fat_resize_file@root
 12956  011396  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12957  011398  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12958  01139A  ECBB  F09D         	call	_fat_get_file_information
 12959                           
 12960                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12961  01139E  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12962  0113A2  0EFF               	movlw	255
 12963  0113A4  24DE               	addwf	postinc2,w,c
 12964  0113A6  0100               	movlb	0	; () banked
 12965  0113A8  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12966  0113AA  0E01               	movlw	1
 12967  0113AC  20DE               	addwfc	postinc2,w,c
 12968  0113AE  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12969  0113B0  0E00               	movlw	0
 12970  0113B2  20DE               	addwfc	postinc2,w,c
 12971  0113B4  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12972  0113B6  0E00               	movlw	0
 12973  0113B8  20DE               	addwfc	postinc2,w,c
 12974  0113BA  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12975  0113BC  0E0A               	movlw	10
 12976  0113BE  D005               	goto	u14230
 12977  0113C0                     u14235:
 12978  0113C0  90D8               	bcf	status,0,c
 12979  0113C2  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12980  0113C4  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12981  0113C6  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12982  0113C8  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12983  0113CA                     u14230:
 12984  0113CA  2EE8               	decfsz	wreg,f,c
 12985  0113CC  D7F9               	goto	u14235
 12986  0113CE  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12987  0113D2  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 12991  0113D6  0EFF               	movlw	255
 12992  0113D8  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12993  0113DA  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12994  0113DC  0E01               	movlw	1
 12995  0113DE  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12996  0113E0  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12997  0113E2  0E00               	movlw	0
 12998  0113E4  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12999  0113E6  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 13000  0113E8  0E00               	movlw	0
 13001  0113EA  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 13002  0113EC  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 13003  0113EE  0E0A               	movlw	10
 13004  0113F0  D005               	goto	u14240
 13005  0113F2                     u14245:
 13006  0113F2  90D8               	bcf	status,0,c
 13007  0113F4  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 13008  0113F6  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13009  0113F8  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13010  0113FA  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13011  0113FC                     u14240:
 13012  0113FC  2EE8               	decfsz	wreg,f,c
 13013  0113FE  D7F9               	goto	u14245
 13014  011400  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 13015  011404  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 13019  011408  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 13020  01140A  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 13021  01140C  E104               	bnz	u14250
 13022  01140E  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 13023  011410  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 13024  011412  B4D8               	btfsc	status,2,c
 13025  011414  D01A               	goto	l1903
 13026  011416                     u14250:
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 13030  011416  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 13031  01141A  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 13032  01141E  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 13033  011422  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 13034  011426  ECBC  F06C         	call	__make_cluster_chain	;wreg free
 13035  01142A  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 13036  01142E  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 13037                           
 13038                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 13039  011432  0100               	movlb	0	; () banked
 13040  011434  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 13041  011436  E105               	bnz	l1904
 13042  011438  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 13043  01143A  A4D8               	btfss	status,2,c
 13044  01143C  D002               	goto	l1904
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 13048  01143E  0EFD               	movlw	253
 13049                           
 13050                           ; BSR set to: 0
 13051  011440  0012               	return	
 13052  011442                     l1904:
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 13056  011442  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 13057  011446  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 13058  01144A                     l1903:
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 13062  01144A  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 13063  01144E  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 13064  011452  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 13065  011456  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;fat16.c: 956: _write_root(file_number, &root);
 13069  01145A  0EBB               	movlw	low fat_resize_file@root
 13070  01145C  6F88               	movwf	__write_root@data& (0+255),b
 13071  01145E  0E00               	movlw	high fat_resize_file@root
 13072  011460  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13073  011462  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 13074  011464  ECEB  F0A5         	call	__write_root
 13075                           
 13076                           ;fat16.c: 959: return 0x00;
 13077  011468  0E00               	movlw	0
 13078  01146A  0012               	return	
 13079  01146C                     __end_of_fat_resize_file:
 13080                           	opt stack 0
 13081                           tblptru	equ	0xFF8
 13082                           tblptrh	equ	0xFF7
 13083                           tblptrl	equ	0xFF6
 13084                           tablat	equ	0xFF5
 13085                           prodh	equ	0xFF4
 13086                           prodl	equ	0xFF3
 13087                           postinc0	equ	0xFEE
 13088                           wreg	equ	0xFE8
 13089                           postdec1	equ	0xFE5
 13090                           plusw1	equ	0xFE3
 13091                           fsr1h	equ	0xFE2
 13092                           fsr1l	equ	0xFE1
 13093                           indf2	equ	0xFDF
 13094                           postinc2	equ	0xFDE
 13095                           plusw2	equ	0xFDB
 13096                           fsr2h	equ	0xFDA
 13097                           fsr2l	equ	0xFD9
 13098                           status	equ	0xFD8
 13099                           
 13100 ;; *************** function _fat_modify_file *****************
 13101 ;; Defined at:
 13102 ;;		line 962 in file "fat16.c"
 13103 ;; Parameters:    Size  Location     Type
 13104 ;;  file_number     1    wreg     unsigned char 
 13105 ;;  start_byte      4   65[BANK0 ] unsigned long 
 13106 ;;  length          2   69[BANK0 ] unsigned int 
 13107 ;;  data            2   71[BANK0 ] PTR unsigned char 
 13108 ;;		 -> ConfigFile_buffer(512), 
 13109 ;; Auto vars:     Size  Location     Type
 13110 ;;  file_number     1   87[BANK0 ] unsigned char 
 13111 ;;  root           32   99[BANK0 ] struct .
 13112 ;;  position        4   95[BANK0 ] unsigned long 
 13113 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 13114 ;;  offset          2   91[BANK0 ] unsigned int 
 13115 ;;  cluster         2   89[BANK0 ] unsigned int 
 13116 ;;  sector          2   85[BANK0 ] unsigned int 
 13117 ;;  return_code     1   88[BANK0 ] unsigned char 
 13118 ;; Return value:  Size  Location     Type
 13119 ;;                  1    wreg      unsigned char 
 13120 ;; Registers used:
 13121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13122 ;; Tracked objects:
 13123 ;;		On entry : 0/0
 13124 ;;		On exit  : 0/0
 13125 ;;		Unchanged: 0/0
 13126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13127 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13128 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13129 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13130 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13131 ;;Total ram usage:       66 bytes
 13132 ;; Hardware stack levels used:    1
 13133 ;; Hardware stack levels required when called:   17
 13134 ;; This function calls:
 13135 ;;		__data_sector_from_cluster
 13136 ;;		__find_nth_cluster
 13137 ;;		__read_fat
 13138 ;;		_fat_get_file_information
 13139 ;;		_flash_partial_write
 13140 ;; This function is called by:
 13141 ;;		_configFile_write
 13142 ;;		_fat_append_to_file
 13143 ;; This function uses a non-reentrant model
 13144 ;;
 13145                           
 13146                           	psect	text41
 13147  00E662                     __ptext41:
 13148                           	opt stack 0
 13149  00E662                     _fat_modify_file:
 13150                           	opt stack 11
 13151                           
 13152                           ;incstack = 0
 13153                           ;fat_modify_file@file_number stored from wreg
 13154  00E662  0100               	movlb	0	; () banked
 13155  00E664  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 13156                           
 13157                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 13158  00E666  0EC3               	movlw	low fat_modify_file@root
 13159  00E668  0100               	movlb	0	; () banked
 13160  00E66A  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 13161  00E66C  0E00               	movlw	high fat_modify_file@root
 13162  00E66E  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 13163  00E670  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 13164  00E672  ECBB  F09D         	call	_fat_get_file_information
 13165  00E676  0100               	movlb	0	; () banked
 13166  00E678  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;fat16.c: 974: if(return_code!=0x00)
 13170  00E67A  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 13171  00E67C  A4D8               	btfss	status,2,c
 13172  00E67E  0012               	return	
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 13176                           
 13177                           ; BSR set to: 0
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;fat16.c: 975: {;fat16.c: 977: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 13181  00E680  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13182  00E682  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13183  00E684  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13184  00E686  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13185  00E688  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13186  00E68A  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13187  00E68C  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13188  00E68E  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13189  00E690  A0D8               	btfss	status,0,c
 13190  00E692  0012               	return	
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 13194                           
 13195                           ; BSR set to: 0
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 13199  00E694  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13200  00E696  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 13201  00E698  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13202  00E69A  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13203  00E69C  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 13204  00E69E  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13205  00E6A0  0E00               	movlw	0
 13206  00E6A2  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 13207  00E6A4  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 13208  00E6A6  0E00               	movlw	0
 13209  00E6A8  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 13210  00E6AA  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 13211  00E6AC  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13212  00E6AE  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13213  00E6B0  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13214  00E6B2  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13215  00E6B4  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13216  00E6B6  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13217  00E6B8  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13218  00E6BA  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13219  00E6BC  B0D8               	btfsc	status,0,c
 13220  00E6BE  D00E               	goto	l1910
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 13224  00E6C0  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13225  00E6C4  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13226  00E6C8  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13227  00E6CA  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13228  00E6CC  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13229  00E6CE  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13230  00E6D0  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 13231  00E6D2  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13232  00E6D4  6FA5               	movwf	fat_modify_file@length& (0+255),b
 13233  00E6D6  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 13234  00E6D8  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13235  00E6DA  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 13236  00E6DC                     l1910:
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 13240                           
 13241                           ; BSR set to: 0
 13242  00E6DC  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 13243  00E6E0  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 13244  00E6E4  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13245  00E6E8  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13246  00E6EC  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 13247  00E6F0  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 13248  00E6F4  0E0A               	movlw	10
 13249  00E6F6  D005               	goto	u14300
 13250  00E6F8                     u14305:
 13251  00E6F8  90D8               	bcf	status,0,c
 13252  00E6FA  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 13253  00E6FC  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 13254  00E6FE  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 13255  00E700  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 13256  00E702                     u14300:
 13257  00E702  2EE8               	decfsz	wreg,f,c
 13258  00E704  D7F9               	goto	u14305
 13259  00E706  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 13260  00E70A  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 13261  00E70E  ECFB  F098         	call	__find_nth_cluster	;wreg free
 13262  00E712  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 13263  00E716  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 13264                           
 13265                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 13266  00E71A  0E00               	movlw	0
 13267  00E71C  0100               	movlb	0	; () banked
 13268  00E71E  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 13269  00E720  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13270  00E722  0EFE               	movlw	254
 13271  00E724  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13272  00E726  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13273  00E728  0EFF               	movlw	255
 13274  00E72A  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13275  00E72C  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13276  00E72E  0EFF               	movlw	255
 13277  00E730  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13278  00E732  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13279                           
 13280                           ; BSR set to: 0
 13281                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 13282  00E734  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13283  00E738  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13284  00E73C  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13285  00E73E  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13286  00E740  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13287  00E742  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13288  00E744  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13289  00E746  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13290  00E748  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13291  00E74A  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13292  00E74C  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13293  00E74E  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;fat16.c: 1003: position = 0;
 13297  00E750  0E00               	movlw	0
 13298  00E752  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13299  00E754  0E00               	movlw	0
 13300  00E756  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13301  00E758  0E00               	movlw	0
 13302  00E75A  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13303  00E75C  0E00               	movlw	0
 13304  00E75E  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13305                           
 13306                           ;fat16.c: 1004: while(position < length)
 13307  00E760  D089               	goto	l1911
 13308  00E762                     
 13309                           ; BSR set to: 0
 13310                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 13311                           
 13312                           ; BSR set to: 0
 13313  00E762  0E02               	movlw	2
 13314  00E764  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 13315  00E766  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 13316  00E768  A4D8               	btfss	status,2,c
 13317  00E76A  D00F               	goto	l1913
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 13321  00E76C  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 13322  00E770  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 13323  00E774  EC21  F0A3         	call	__read_fat	;wreg free
 13324  00E778  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 13325  00E77C  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 13326                           
 13327                           ;fat16.c: 1012: offset = 0;
 13328  00E780  0E00               	movlw	0
 13329  00E782  0100               	movlb	0	; () banked
 13330  00E784  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13331  00E786  0E00               	movlw	0
 13332  00E788  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13333  00E78A                     l1913:
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 13337                           
 13338                           ; BSR set to: 0
 13339  00E78A  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 13340  00E78E  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 13341  00E792  ECAB  F0AB         	call	__data_sector_from_cluster	;wreg free
 13342  00E796  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 13343  00E79A  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 13344                           
 13345                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 13346  00E79E  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 13347  00E7A2  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 13348  00E7A6  0100               	movlb	0	; () banked
 13349  00E7A8  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13350  00E7AA  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13351  00E7AC  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13352  00E7AE  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13353  00E7B0  0E00               	movlw	0
 13354  00E7B2  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13355  00E7B4  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13356  00E7B6  0E02               	movlw	2
 13357  00E7B8  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13358  00E7BA  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 13362  00E7BC  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13363  00E7BE  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13364  00E7C0  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13365  00E7C2  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13366  00E7C4  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13367  00E7C6  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13368  00E7C8  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 13369  00E7CC  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 13370  00E7D0  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 13371  00E7D4  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 13372  00E7D8  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 13373  00E7DA  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 13374  00E7DC  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 13375  00E7DE  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 13376  00E7E0  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 13377  00E7E2  0E00               	movlw	0
 13378  00E7E4  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 13379  00E7E6  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 13380  00E7E8  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 13381  00E7EA  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13382  00E7EC  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 13383  00E7EE  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 13384  00E7F0  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13385  00E7F2  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 13386  00E7F4  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 13387  00E7F6  0E00               	movlw	0
 13388  00E7F8  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 13389  00E7FA  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 13390  00E7FC  0E00               	movlw	0
 13391  00E7FE  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 13392  00E800  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 13393  00E802  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13394  00E804  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 13395  00E806  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13396  00E808  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 13397  00E80A  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13398  00E80C  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 13399  00E80E  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13400  00E810  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 13401  00E812  B0D8               	btfsc	status,0,c
 13402  00E814  D00E               	goto	l1914
 13403                           
 13404                           ; BSR set to: 0
 13405                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 13406  00E816  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13407  00E81A  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13408  00E81E  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13409  00E820  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13410  00E822  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13411  00E824  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13412  00E826  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13413  00E828  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13414  00E82A  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13415  00E82C  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13416  00E82E  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13417  00E830  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13418  00E832                     l1914:
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 13422                           
 13423                           ; BSR set to: 0
 13424  00E832  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 13425  00E836  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 13426  00E83A  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 13427  00E83E  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 13428  00E842  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 13429  00E846  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 13430  00E84A  51BF               	movf	fat_modify_file@position& (0+255),w,b
 13431  00E84C  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 13432  00E84E  6F85               	movwf	flash_partial_write@data& (0+255),b
 13433  00E850  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 13434  00E852  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 13435  00E854  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 13436  00E856  EC8B  F09F         	call	_flash_partial_write	;wreg free
 13437                           
 13438                           ;fat16.c: 1029: position += number_of_bytes;
 13439  00E85A  0100               	movlb	0	; () banked
 13440  00E85C  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13441  00E85E  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 13442  00E860  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13443  00E862  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 13444  00E864  0E00               	movlw	0
 13445  00E866  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 13446  00E868  0E00               	movlw	0
 13447  00E86A  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;fat16.c: 1030: offset += number_of_bytes;
 13451  00E86C  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13452  00E86E  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 13453  00E870  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13454  00E872  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 13455  00E874                     l1911:
 13456                           
 13457                           ; BSR set to: 0
 13458                           
 13459                           ; BSR set to: 0
 13460  00E874  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13461  00E876  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13462  00E878  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13463  00E87A  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13464  00E87C  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13465  00E87E  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13466  00E880  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13467  00E882  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 13468  00E884  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13469  00E886  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 13470  00E888  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13471  00E88A  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 13472  00E88C  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13473  00E88E  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 13474  00E890  B0D8               	btfsc	status,0,c
 13475  00E892  0012               	return	
 13476  00E894  D766               	goto	l1912
 13477  00E896                     __end_of_fat_modify_file:
 13478                           	opt stack 0
 13479                           tblptru	equ	0xFF8
 13480                           tblptrh	equ	0xFF7
 13481                           tblptrl	equ	0xFF6
 13482                           tablat	equ	0xFF5
 13483                           prodh	equ	0xFF4
 13484                           prodl	equ	0xFF3
 13485                           postinc0	equ	0xFEE
 13486                           wreg	equ	0xFE8
 13487                           postdec1	equ	0xFE5
 13488                           plusw1	equ	0xFE3
 13489                           fsr1h	equ	0xFE2
 13490                           fsr1l	equ	0xFE1
 13491                           indf2	equ	0xFDF
 13492                           postinc2	equ	0xFDE
 13493                           plusw2	equ	0xFDB
 13494                           fsr2h	equ	0xFDA
 13495                           fsr2l	equ	0xFD9
 13496                           status	equ	0xFD8
 13497                           
 13498 ;; *************** function _fat_create_file *****************
 13499 ;; Defined at:
 13500 ;;		line 586 in file "fat16.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;  name            2   76[BANK0 ] PTR unsigned char 
 13503 ;;		 -> configFile_used_name(8), 
 13504 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 13505 ;;		 -> configFile_used_extention(3), 
 13506 ;;  size            4   80[BANK0 ] unsigned long 
 13507 ;; Auto vars:     Size  Location     Type
 13508 ;;  root_entry     32   93[BANK0 ] struct .
 13509 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 13510 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 13511 ;;  file_number     1   92[BANK0 ] unsigned char 
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  1    wreg      unsigned char 
 13514 ;; Registers used:
 13515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13516 ;; Tracked objects:
 13517 ;;		On entry : 0/0
 13518 ;;		On exit  : 0/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13521 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13522 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13523 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13524 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13525 ;;Total ram usage:       49 bytes
 13526 ;; Hardware stack levels used:    1
 13527 ;; Hardware stack levels required when called:   17
 13528 ;; This function calls:
 13529 ;;		__get_available_root_entry
 13530 ;;		__get_date
 13531 ;;		__get_time
 13532 ;;		__make_cluster_chain
 13533 ;;		__write_root
 13534 ;;		_fat_find_file
 13535 ;;		_memcpy
 13536 ;; This function is called by:
 13537 ;;		_configFile_write
 13538 ;;		_fat_copy_file
 13539 ;; This function uses a non-reentrant model
 13540 ;;
 13541                           
 13542                           	psect	text42
 13543  0103FE                     __ptext42:
 13544                           	opt stack 0
 13545  0103FE                     _fat_create_file:
 13546                           	opt stack 11
 13547                           
 13548                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;incstack = 0
 13552  0103FE  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 13553  010402  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 13554  010406  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 13555  01040A  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13556  01040E  EC8E  F08D         	call	_fat_find_file	;wreg free
 13557  010412  0AFF               	xorlw	255
 13558  010414  B4D8               	btfsc	status,2,c
 13559  010416  D002               	goto	l1849
 13560                           
 13561                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 13562  010418  0EFF               	movlw	255
 13563  01041A  0012               	return	
 13564  01041C                     l1849:
 13565                           
 13566                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 13567  01041C  EC0F  F0AA         	call	__get_available_root_entry	;wreg free
 13568  010420  0100               	movlb	0	; () banked
 13569  010422  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 13570                           
 13571                           ; BSR set to: 0
 13572                           ;fat16.c: 605: if(file_number == 0xFF)
 13573  010424  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 13574  010426  A4D8               	btfss	status,2,c
 13575  010428  D002               	goto	l1851
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 13579  01042A  0EFE               	movlw	254
 13580                           
 13581                           ; BSR set to: 0
 13582  01042C  0012               	return	
 13583  01042E                     l1851:
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 13587                           
 13588                           ; BSR set to: 0
 13589  01042E  0EFF               	movlw	255
 13590  010430  25B0               	addwf	fat_create_file@size& (0+255),w,b
 13591  010432  6FB4               	movwf	??_fat_create_file& (0+255),b
 13592  010434  0E01               	movlw	1
 13593  010436  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 13594  010438  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 13595  01043A  0E00               	movlw	0
 13596  01043C  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 13597  01043E  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 13598  010440  0E00               	movlw	0
 13599  010442  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 13600  010444  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 13601  010446  0E0A               	movlw	10
 13602  010448  D005               	goto	u14190
 13603  01044A                     u14195:
 13604  01044A  90D8               	bcf	status,0,c
 13605  01044C  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13606  01044E  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13607  010450  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13608  010452  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 13609  010454                     u14190:
 13610  010454  2EE8               	decfsz	wreg,f,c
 13611  010456  D7F9               	goto	u14195
 13612  010458  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 13613  01045C  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 13617  010460  0E00               	movlw	0
 13618  010462  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 13619  010464  0E00               	movlw	0
 13620  010466  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 13621  010468  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 13622  01046C  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 13623  010470  ECBC  F06C         	call	__make_cluster_chain	;wreg free
 13624  010474  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 13625  010478  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 13626                           
 13627                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 13628  01047C  0100               	movlb	0	; () banked
 13629  01047E  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 13630  010480  E105               	bnz	l15397
 13631  010482  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 13632  010484  A4D8               	btfss	status,2,c
 13633  010486  D002               	goto	l1852
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 13637  010488  0EFD               	movlw	253
 13638                           
 13639                           ; BSR set to: 0
 13640  01048A  0012               	return	
 13641  01048C                     l1852:
 13642  01048C                     l15397:
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 13646  01048C  0EBD               	movlw	low fat_create_file@root_entry
 13647  01048E  6F60               	movwf	memcpy@d1& (0+255),b
 13648  010490  0E00               	movlw	high fat_create_file@root_entry
 13649  010492  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13650  010494  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 13651  010498  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13652  01049C  0E00               	movlw	0
 13653  01049E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13654  0104A0  0E08               	movlw	8
 13655  0104A2  6F64               	movwf	memcpy@n& (0+255),b
 13656  0104A4  EC57  F0A1         	call	_memcpy	;wreg free
 13657                           
 13658                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 13659  0104A8  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13660  0104AA  0100               	movlb	0	; () banked
 13661  0104AC  6F60               	movwf	memcpy@d1& (0+255),b
 13662  0104AE  0E00               	movlw	high (fat_create_file@root_entry+8)
 13663  0104B0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13664  0104B2  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13665  0104B6  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13666  0104BA  0E00               	movlw	0
 13667  0104BC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13668  0104BE  0E03               	movlw	3
 13669  0104C0  6F64               	movwf	memcpy@n& (0+255),b
 13670  0104C2  EC57  F0A1         	call	_memcpy	;wreg free
 13671                           
 13672                           ;fat16.c: 629: root_entry.attributes = 0x00;
 13673  0104C6  0E00               	movlw	0
 13674  0104C8  0100               	movlb	0	; () banked
 13675  0104CA  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 13679  0104CC  0E00               	movlw	0
 13680  0104CE  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 13684  0104D0  0E00               	movlw	0
 13685  0104D2  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 13689  0104D4  ECC2  F0AB         	call	__get_time	;wreg free
 13690  0104D8  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13691  0104DC  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13692                           
 13693                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 13694  0104E0  ECC8  F0AB         	call	__get_date	;wreg free
 13695  0104E4  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13696  0104E8  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13697                           
 13698                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 13699  0104EC  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13700  0104F0  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13701                           
 13702                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 13703  0104F4  0E00               	movlw	0
 13704  0104F6  0100               	movlb	0	; () banked
 13705  0104F8  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13706  0104FA  0E00               	movlw	0
 13707  0104FC  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 13711  0104FE  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13712  010502  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 13716  010506  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13717  01050A  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 13721  01050E  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13722  010512  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;fat16.c: 639: root_entry.fileSize = size;
 13726  010516  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13727  01051A  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13728  01051E  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13729  010522  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13730                           
 13731                           ; BSR set to: 0
 13732                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 13733  010526  0EBD               	movlw	low fat_create_file@root_entry
 13734  010528  6F88               	movwf	__write_root@data& (0+255),b
 13735  01052A  0E00               	movlw	high fat_create_file@root_entry
 13736  01052C  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13737  01052E  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13738  010530  ECEB  F0A5         	call	__write_root
 13739                           
 13740                           ;fat16.c: 644: return file_number;
 13741  010534  0100               	movlb	0	; () banked
 13742  010536  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13743  010538  0012               	return	
 13744  01053A                     __end_of_fat_create_file:
 13745                           	opt stack 0
 13746                           tblptru	equ	0xFF8
 13747                           tblptrh	equ	0xFF7
 13748                           tblptrl	equ	0xFF6
 13749                           tablat	equ	0xFF5
 13750                           prodh	equ	0xFF4
 13751                           prodl	equ	0xFF3
 13752                           postinc0	equ	0xFEE
 13753                           wreg	equ	0xFE8
 13754                           postdec1	equ	0xFE5
 13755                           plusw1	equ	0xFE3
 13756                           fsr1h	equ	0xFE2
 13757                           fsr1l	equ	0xFE1
 13758                           indf2	equ	0xFDF
 13759                           postinc2	equ	0xFDE
 13760                           plusw2	equ	0xFDB
 13761                           fsr2h	equ	0xFDA
 13762                           fsr2l	equ	0xFD9
 13763                           status	equ	0xFD8
 13764                           
 13765 ;; *************** function __write_root *****************
 13766 ;; Defined at:
 13767 ;;		line 473 in file "fat16.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;  file_number     1    wreg     unsigned char 
 13770 ;;  data            2   40[BANK0 ] PTR struct .
 13771 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;  file_number     1   46[BANK0 ] unsigned char 
 13774 ;;  offset          2   44[BANK0 ] unsigned int 
 13775 ;;  sector          2   42[BANK0 ] unsigned int 
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  1    wreg      void 
 13778 ;; Registers used:
 13779 ;;		wreg, status,2, status,0, cstack
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 0/0
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13786 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13788 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13789 ;;Total ram usage:        7 bytes
 13790 ;; Hardware stack levels used:    1
 13791 ;; Hardware stack levels required when called:   15
 13792 ;; This function calls:
 13793 ;;		__offset_from_file_number
 13794 ;;		__sector_from_file_number
 13795 ;;		_flash_partial_write
 13796 ;; This function is called by:
 13797 ;;		_fat_create_file
 13798 ;;		_fat_resize_file
 13799 ;;		_fat_rename_file
 13800 ;; This function uses a non-reentrant model
 13801 ;;
 13802                           
 13803                           	psect	text43
 13804  014BD6                     __ptext43:
 13805                           	opt stack 0
 13806  014BD6                     __write_root:
 13807                           	opt stack 12
 13808                           
 13809                           ;incstack = 0
 13810                           ;__write_root@file_number stored from wreg
 13811  014BD6  0100               	movlb	0	; () banked
 13812  014BD8  6F8E               	movwf	__write_root@file_number& (0+255),b
 13813                           
 13814                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 13815  014BDA  0100               	movlb	0	; () banked
 13816  014BDC  518E               	movf	__write_root@file_number& (0+255),w,b
 13817  014BDE  EC15  F0A9         	call	__sector_from_file_number
 13818  014BE2  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13819  014BE6  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13820                           
 13821                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 13822  014BEA  0100               	movlb	0	; () banked
 13823  014BEC  518E               	movf	__write_root@file_number& (0+255),w,b
 13824  014BEE  EC24  F0AA         	call	__offset_from_file_number
 13825  014BF2  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13826  014BF6  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13827                           
 13828                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 13829  014BFA  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13830  014BFE  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13831  014C02  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13832  014C06  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13833  014C0A  0E00               	movlw	0
 13834  014C0C  0100               	movlb	0	; () banked
 13835  014C0E  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13836  014C10  0E20               	movlw	32
 13837  014C12  6F83               	movwf	flash_partial_write@length& (0+255),b
 13838  014C14  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13839  014C18  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13840  014C1C  EC8B  F09F         	call	_flash_partial_write	;wreg free
 13841  014C20  0012               	return		;funcret
 13842  014C22                     __end_of__write_root:
 13843                           	opt stack 0
 13844                           tblptru	equ	0xFF8
 13845                           tblptrh	equ	0xFF7
 13846                           tblptrl	equ	0xFF6
 13847                           tablat	equ	0xFF5
 13848                           prodh	equ	0xFF4
 13849                           prodl	equ	0xFF3
 13850                           postinc0	equ	0xFEE
 13851                           wreg	equ	0xFE8
 13852                           postdec1	equ	0xFE5
 13853                           plusw1	equ	0xFE3
 13854                           fsr1h	equ	0xFE2
 13855                           fsr1l	equ	0xFE1
 13856                           indf2	equ	0xFDF
 13857                           postinc2	equ	0xFDE
 13858                           plusw2	equ	0xFDB
 13859                           fsr2h	equ	0xFDA
 13860                           fsr2l	equ	0xFD9
 13861                           status	equ	0xFD8
 13862                           
 13863 ;; *************** function _flash_partial_write *****************
 13864 ;; Defined at:
 13865 ;;		line 460 in file "flash.c"
 13866 ;; Parameters:    Size  Location     Type
 13867 ;;  page            2   31[BANK0 ] unsigned int 
 13868 ;;  start           2   33[BANK0 ] unsigned int 
 13869 ;;  length          2   35[BANK0 ] unsigned int 
 13870 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13871 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13872 ;;		 -> _delete_root@deleted_value(1), 
 13873 ;; Auto vars:     Size  Location     Type
 13874 ;;  match           1   39[BANK0 ] enum E6984
 13875 ;; Return value:  Size  Location     Type
 13876 ;;                  1    wreg      void 
 13877 ;; Registers used:
 13878 ;;		wreg, status,2, status,0, cstack
 13879 ;; Tracked objects:
 13880 ;;		On entry : 0/0
 13881 ;;		On exit  : 0/0
 13882 ;;		Unchanged: 0/0
 13883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13884 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13887 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13888 ;;Total ram usage:        9 bytes
 13889 ;; Hardware stack levels used:    1
 13890 ;; Hardware stack levels required when called:   14
 13891 ;; This function calls:
 13892 ;;		__flash_compare_page_to_buffer
 13893 ;;		__flash_copy_page_to_buffer
 13894 ;;		__flash_is_busy
 13895 ;;		__flash_write_page_from_buffer
 13896 ;;		__flash_write_to_buffer
 13897 ;; This function is called by:
 13898 ;;		__write_root
 13899 ;;		_fat_modify_file
 13900 ;;		__delete_root
 13901 ;; This function uses a non-reentrant model
 13902 ;;
 13903                           
 13904                           	psect	text44
 13905  013F16                     __ptext44:
 13906                           	opt stack 0
 13907  013F16                     _flash_partial_write:
 13908                           	opt stack 12
 13909                           
 13910                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13911                           
 13912                           ;incstack = 0
 13913  013F16  ECD3  F0AA         	call	__flash_is_busy	;wreg free
 13914  013F1A  0900               	iorlw	0
 13915  013F1C  A4D8               	btfss	status,2,c
 13916  013F1E  D7FB               	goto	_flash_partial_write
 13917                           
 13918                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13919  013F20  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13920  013F24  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13921  013F28  0E00               	movlw	0
 13922  013F2A  0100               	movlb	0	; () banked
 13923  013F2C  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13924  013F2E  EC14  F0A2         	call	__flash_copy_page_to_buffer	;wreg free
 13925                           
 13926                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13927  013F32  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13928  013F36  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13929  013F3A  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13930  013F3E  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13931  013F42  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13932  013F46  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13933  013F4A  0E00               	movlw	0
 13934  013F4C  0100               	movlb	0	; () banked
 13935  013F4E  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13936  013F50  ECFB  F0A4         	call	__flash_write_to_buffer	;wreg free
 13937                           
 13938                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13939  013F54  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13940  013F58  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13941  013F5C  0E00               	movlw	0
 13942  013F5E  0100               	movlb	0	; () banked
 13943  013F60  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13944  013F62  EC7D  F09D         	call	__flash_compare_page_to_buffer	;wreg free
 13945  013F66  0100               	movlb	0	; () banked
 13946  013F68  6F87               	movwf	flash_partial_write@match& (0+255),b
 13947                           
 13948                           ; BSR set to: 0
 13949                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13950  013F6A  0587               	decf	flash_partial_write@match& (0+255),w,b
 13951  013F6C  A4D8               	btfss	status,2,c
 13952  013F6E  0012               	return	
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13956  013F70  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13957  013F74  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13958  013F78  0E00               	movlw	0
 13959  013F7A  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13960  013F7C  EC9B  F0A2         	call	__flash_write_page_from_buffer	;wreg free
 13961  013F80  0012               	return	
 13962  013F82                     __end_of_flash_partial_write:
 13963                           	opt stack 0
 13964                           tblptru	equ	0xFF8
 13965                           tblptrh	equ	0xFF7
 13966                           tblptrl	equ	0xFF6
 13967                           tablat	equ	0xFF5
 13968                           prodh	equ	0xFF4
 13969                           prodl	equ	0xFF3
 13970                           postinc0	equ	0xFEE
 13971                           wreg	equ	0xFE8
 13972                           postdec1	equ	0xFE5
 13973                           plusw1	equ	0xFE3
 13974                           fsr1h	equ	0xFE2
 13975                           fsr1l	equ	0xFE1
 13976                           indf2	equ	0xFDF
 13977                           postinc2	equ	0xFDE
 13978                           plusw2	equ	0xFDB
 13979                           fsr2h	equ	0xFDA
 13980                           fsr2l	equ	0xFD9
 13981                           status	equ	0xFD8
 13982                           
 13983 ;; *************** function __flash_copy_page_to_buffer *****************
 13984 ;; Defined at:
 13985 ;;		line 154 in file "flash.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;  page            2   19[BANK0 ] unsigned int 
 13988 ;;  buffer          1   21[BANK0 ] enum E6980
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;  command         4   25[BANK0 ] unsigned char [4]
 13991 ;; Return value:  Size  Location     Type
 13992 ;;                  1    wreg      void 
 13993 ;; Registers used:
 13994 ;;		wreg, status,2, status,0, cstack
 13995 ;; Tracked objects:
 13996 ;;		On entry : 0/0
 13997 ;;		On exit  : 0/0
 13998 ;;		Unchanged: 0/0
 13999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14000 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14001 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14002 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14003 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14004 ;;Total ram usage:       10 bytes
 14005 ;; Hardware stack levels used:    1
 14006 ;; Hardware stack levels required when called:   13
 14007 ;; This function calls:
 14008 ;;		__flash_is_busy
 14009 ;;		_spi_tx
 14010 ;; This function is called by:
 14011 ;;		_flash_partial_write
 14012 ;;		_flash_copy_page_to_buffer
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           	psect	text45
 14017  014428                     __ptext45:
 14018                           	opt stack 0
 14019  014428                     __flash_copy_page_to_buffer:
 14020                           	opt stack 12
 14021                           
 14022                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 14023                           
 14024                           ;incstack = 0
 14025  014428  ECD3  F0AA         	call	__flash_is_busy	;wreg free
 14026  01442C  0900               	iorlw	0
 14027  01442E  A4D8               	btfss	status,2,c
 14028  014430  D7FB               	goto	__flash_copy_page_to_buffer
 14029                           
 14030                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 14031  014432  0100               	movlb	0	; () banked
 14032  014434  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14033  014436  A4D8               	btfss	status,2,c
 14034  014438  D002               	goto	l1540
 14035                           
 14036                           ; BSR set to: 0
 14037                           ;flash.c: 163: command[0] = 0x53;
 14038  01443A  0E53               	movlw	83
 14039  01443C  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14040  01443E                     l1540:
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 14044                           
 14045                           ; BSR set to: 0
 14046  01443E  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14047  014440  A4D8               	btfss	status,2,c
 14048  014442  D002               	goto	l1541
 14049                           
 14050                           ; BSR set to: 0
 14051                           ;flash.c: 165: command[0] = 0x55;
 14052  014444  0E55               	movlw	85
 14053  014446  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14054  014448                     l1541:
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 14058                           
 14059                           ; BSR set to: 0
 14060  014448  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 14061  01444C  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 14062  014450  0E07               	movlw	7
 14063  014452  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 14064  014454                     u11485:
 14065  014454  90D8               	bcf	status,0,c
 14066  014456  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 14067  014458  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 14068  01445A  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 14069  01445C  D7FB               	goto	u11485
 14070  01445E  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 14071  014460  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 14072                           
 14073                           ; BSR set to: 0
 14074                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 14075  014462  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14076  014464  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14077  014466  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 14078                           
 14079                           ;flash.c: 169: command[3] = 0x00;
 14080  014468  0E00               	movlw	0
 14081  01446A  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;flash.c: 172: spi_tx(command, 4);
 14085  01446C  0E79               	movlw	low __flash_copy_page_to_buffer@command
 14086  01446E  6F60               	movwf	spi_tx@data& (0+255),b
 14087  014470  0E00               	movlw	high __flash_copy_page_to_buffer@command
 14088  014472  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 14089  014474  0E00               	movlw	0
 14090  014476  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 14091  014478  0E04               	movlw	4
 14092  01447A  6F62               	movwf	spi_tx@length& (0+255),b
 14093  01447C  ECC8  F0A2         	call	_spi_tx	;wreg free
 14094  014480  0012               	return		;funcret
 14095  014482                     __end_of__flash_copy_page_to_buffer:
 14096                           	opt stack 0
 14097                           tblptru	equ	0xFF8
 14098                           tblptrh	equ	0xFF7
 14099                           tblptrl	equ	0xFF6
 14100                           tablat	equ	0xFF5
 14101                           prodh	equ	0xFF4
 14102                           prodl	equ	0xFF3
 14103                           postinc0	equ	0xFEE
 14104                           wreg	equ	0xFE8
 14105                           postdec1	equ	0xFE5
 14106                           plusw1	equ	0xFE3
 14107                           fsr1h	equ	0xFE2
 14108                           fsr1l	equ	0xFE1
 14109                           indf2	equ	0xFDF
 14110                           postinc2	equ	0xFDE
 14111                           plusw2	equ	0xFDB
 14112                           fsr2h	equ	0xFDA
 14113                           fsr2l	equ	0xFD9
 14114                           status	equ	0xFD8
 14115                           
 14116 ;; *************** function __make_cluster_chain *****************
 14117 ;; Defined at:
 14118 ;;		line 213 in file "fat16.c"
 14119 ;; Parameters:    Size  Location     Type
 14120 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 14121 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 14124 ;;  offset          2   72[BANK0 ] unsigned int 
 14125 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 14126 ;;  sector          2   68[BANK0 ] unsigned int 
 14127 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 14128 ;;  different_se    2   63[BANK0 ] unsigned int 
 14129 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 14130 ;;  next_offset     2   59[BANK0 ] unsigned int 
 14131 ;;  data_changed    1   65[BANK0 ] unsigned char 
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  2   53[BANK0 ] unsigned int 
 14134 ;; Registers used:
 14135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14142 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14143 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14144 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14145 ;;Total ram usage:       23 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; Hardware stack levels required when called:   16
 14148 ;; This function calls:
 14149 ;;		__fat_offset_from_cluster
 14150 ;;		__fat_sector_from_cluster
 14151 ;;		__get_available_cluster
 14152 ;;		__get_available_offset_from_buffer
 14153 ;;		__read_value_from_offset
 14154 ;;		__write_value_to_offset
 14155 ;;		_flash_sector_read
 14156 ;;		_flash_sector_write
 14157 ;; This function is called by:
 14158 ;;		_fat_create_file
 14159 ;;		_fat_resize_file
 14160 ;;		_fat_delete_file
 14161 ;; This function uses a non-reentrant model
 14162 ;;
 14163                           
 14164                           	psect	text46
 14165  00D978                     __ptext46:
 14166                           	opt stack 0
 14167  00D978                     __make_cluster_chain:
 14168                           	opt stack 11
 14169                           
 14170                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 14171                           
 14172                           ;incstack = 0
 14173  00D978  0E00               	movlw	0
 14174  00D97A  0100               	movlb	0	; () banked
 14175  00D97C  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 14176  00D97E  0E00               	movlw	0
 14177  00D980  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 14178                           
 14179                           ; BSR set to: 0
 14180                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 14181  00D982  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 14182  00D986  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 14183                           
 14184                           ;fat16.c: 228: minimum_sector = 2;
 14185  00D98A  0E00               	movlw	0
 14186  00D98C  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 14187  00D98E  0E02               	movlw	2
 14188  00D990  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 14189                           
 14190                           ;fat16.c: 229: data_changed = 0;
 14191  00D992  0E00               	movlw	0
 14192  00D994  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 14196  00D996  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14197  00D998  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14198  00D99A  A4D8               	btfss	status,2,c
 14199  00D99C  D024               	goto	l1774
 14200                           
 14201                           ; BSR set to: 0
 14202  00D99E  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14203  00D9A0  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14204  00D9A2  B4D8               	btfsc	status,2,c
 14205  00D9A4  D020               	goto	l1774
 14206                           
 14207                           ; BSR set to: 0
 14208                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 14209  00D9A6  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14210  00D9AA  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14211  00D9AE  0E00               	movlw	0
 14212  00D9B0  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 14213  00D9B2  0E00               	movlw	0
 14214  00D9B4  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 14215  00D9B6  EC9A  F093         	call	__get_available_cluster	;wreg free
 14216  00D9BA  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 14217  00D9BE  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 14218                           
 14219                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 14220  00D9C2  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 14221  00D9C6  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 14222  00D9CA  EC45  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14223  00D9CE  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14224  00D9D2  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14225                           
 14226                           ;fat16.c: 237: if(first_cluster == 0)
 14227  00D9D6  0100               	movlb	0	; () banked
 14228  00D9D8  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14229  00D9DA  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14230  00D9DC  A4D8               	btfss	status,2,c
 14231  00D9DE  D003               	goto	l1774
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 14235  00D9E0  6995               	setf	?__make_cluster_chain& (0+255),b
 14236  00D9E2  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14237  00D9E4  0012               	return	
 14238  00D9E6                     l1774:
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 14242                           
 14243                           ; BSR set to: 0
 14244  00D9E6  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 14245  00D9EA  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 14246                           
 14247                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 14248  00D9EE  D103               	goto	l1791
 14249  00D9F0                     
 14250                           ; BSR set to: 0
 14251                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 14252                           
 14253                           ; BSR set to: 0
 14254  00D9F0  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 14255  00D9F4  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 14256  00D9F8  EC45  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14257  00D9FC  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 14258  00DA00  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 14259                           
 14260                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 14261  00DA04  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 14262  00DA08  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 14263  00DA0C  EC52  F0AB         	call	__fat_offset_from_cluster	;wreg free
 14264  00DA10  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 14265  00DA14  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 14266                           
 14267                           ;fat16.c: 263: if(sector != sector_in_buffer)
 14268  00DA18  0100               	movlb	0	; () banked
 14269  00DA1A  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14270  00DA1C  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 14271  00DA1E  E104               	bnz	u13040
 14272  00DA20  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14273  00DA22  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 14274  00DA24  B4D8               	btfsc	status,2,c
 14275  00DA26  D037               	goto	l1778
 14276  00DA28                     u13040:
 14277                           
 14278                           ; BSR set to: 0
 14279                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 14280  00DA28  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14281  00DA2A  B4D8               	btfsc	status,2,c
 14282  00DA2C  D00A               	goto	l1779
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 14286  00DA2E  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14287  00DA32  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14288  00DA36  0E00               	movlw	low _buffer
 14289  00DA38  6F81               	movwf	flash_sector_write@data& (0+255),b
 14290  00DA3A  0E0A               	movlw	high _buffer
 14291  00DA3C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14292  00DA3E  EC9C  F0A5         	call	_flash_sector_write	;wreg free
 14293  00DA42                     l1779:
 14294                           
 14295                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 14296  00DA42  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14297  00DA46  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14298  00DA4A  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 14299  00DA4E  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 14300  00DA52  EC9A  F093         	call	__get_available_cluster	;wreg free
 14301  00DA56  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 14302  00DA5A  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 14303                           
 14304                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 14305  00DA5E  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 14306  00DA62  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 14307  00DA66  EC45  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14308  00DA6A  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14309  00DA6E  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14310                           
 14311                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 14312  00DA72  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 14313  00DA76  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 14314  00DA7A  0E00               	movlw	low _buffer
 14315  00DA7C  0100               	movlb	0	; () banked
 14316  00DA7E  6F89               	movwf	flash_sector_read@data& (0+255),b
 14317  00DA80  0E0A               	movlw	high _buffer
 14318  00DA82  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14319  00DA84  EC75  F0AA         	call	_flash_sector_read	;wreg free
 14320                           
 14321                           ;fat16.c: 279: sector_in_buffer = sector;
 14322  00DA88  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 14323  00DA8C  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 14324                           
 14325                           ;fat16.c: 280: data_changed = 0;
 14326  00DA90  0E00               	movlw	0
 14327  00DA92  0100               	movlb	0	; () banked
 14328  00DA94  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14329  00DA96                     l1778:
 14330                           
 14331                           ; BSR set to: 0
 14332                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 14333                           
 14334                           ; BSR set to: 0
 14335  00DA96  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14336  00DA98  E104               	bnz	u13060
 14337  00DA9A  0E02               	movlw	2
 14338  00DA9C  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14339  00DA9E  A0D8               	btfss	status,0,c
 14340  00DAA0  D05E               	goto	l1780
 14341  00DAA2                     u13060:
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 14345  00DAA2  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14346  00DAA6  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14347  00DAAA  0E00               	movlw	low _buffer
 14348  00DAAC  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14349  00DAAE  0E0A               	movlw	high _buffer
 14350  00DAB0  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14351  00DAB2  EC5C  F0A6         	call	__read_value_from_offset	;wreg free
 14352  00DAB6  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14353  00DABA  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14354                           
 14355                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 14356  00DABE  0100               	movlb	0	; () banked
 14357  00DAC0  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14358  00DAC2  E104               	bnz	u13070
 14359  00DAC4  0E02               	movlw	2
 14360  00DAC6  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14361  00DAC8  A0D8               	btfss	status,0,c
 14362  00DACA  D006               	goto	u13080
 14363  00DACC                     u13070:
 14364                           
 14365                           ; BSR set to: 0
 14366  00DACC  0EDA               	movlw	218
 14367  00DACE  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14368  00DAD0  0E1F               	movlw	31
 14369  00DAD2  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14370  00DAD4  A0D8               	btfss	status,0,c
 14371  00DAD6  D06B               	goto	l1790
 14372  00DAD8                     u13080:
 14373                           
 14374                           ; BSR set to: 0
 14375                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 14376                           
 14377                           ; BSR set to: 0
 14378  00DAD8  0E02               	movlw	2
 14379  00DADA  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 14380  00DADC  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14381  00DADE  0E00               	movlw	0
 14382  00DAE0  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 14383  00DAE2  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14384  00DAE4  0E00               	movlw	low _buffer
 14385  00DAE6  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14386  00DAE8  0E0A               	movlw	high _buffer
 14387  00DAEA  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14388  00DAEC  ECB7  F0A1         	call	__get_available_offset_from_buffer	;wreg free
 14389  00DAF0  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 14390  00DAF4  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 14391                           
 14392                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 14393  00DAF8  0100               	movlb	0	; () banked
 14394  00DAFA  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 14395  00DAFC  E103               	bnz	u13090
 14396  00DAFE  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14397  00DB00  B4D8               	btfsc	status,2,c
 14398  00DB02  D013               	goto	l1784
 14399  00DB04                     u13090:
 14400                           
 14401                           ; BSR set to: 0
 14402                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 14403  00DB04  0EFE               	movlw	254
 14404  00DB06  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14405  00DB08  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 14406  00DB0A  0EFF               	movlw	255
 14407  00DB0C  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14408  00DB0E  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14409                           
 14410                           ; BSR set to: 0
 14411                           ;fat16.c: 299: next_cluster <<= 8;
 14412  00DB10  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 14413  00DB12  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14414  00DB14  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 14418  00DB16  90D8               	bcf	status,0,c
 14419  00DB18  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14420  00DB1A  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 14421  00DB1C  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 14422  00DB1E  6F99               	movwf	??__make_cluster_chain& (0+255),b
 14423  00DB20  5199               	movf	??__make_cluster_chain& (0+255),w,b
 14424  00DB22  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 14425  00DB24  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 14426  00DB26  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 14427                           
 14428                           ;fat16.c: 301: }
 14429  00DB28  D00B               	goto	l1787
 14430  00DB2A                     l1784:
 14431                           
 14432                           ; BSR set to: 0
 14433                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 14434                           
 14435                           ; BSR set to: 0
 14436  00DB2A  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 14437  00DB2C  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 14438  00DB2E  A4D8               	btfss	status,2,c
 14439  00DB30  D003               	goto	l1786
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 14443  00DB32  6995               	setf	?__make_cluster_chain& (0+255),b
 14444  00DB34  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14445  00DB36  0012               	return	
 14446  00DB38                     l1786:
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 14450  00DB38  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 14451  00DB3C  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 14452  00DB40                     l1787:
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 14456                           
 14457                           ; BSR set to: 0
 14458                           
 14459                           ; BSR set to: 0
 14460  00DB40  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14461  00DB44  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14462  00DB48  0E00               	movlw	low _buffer
 14463  00DB4A  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14464  00DB4C  0E0A               	movlw	high _buffer
 14465  00DB4E  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14466  00DB50  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 14467  00DB54  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 14468  00DB58  EC79  F0A8         	call	__write_value_to_offset	;wreg free
 14469  00DB5C  D025               	goto	L89
 14470  00DB5E                     l1780:
 14471                           
 14472                           ; BSR set to: 0
 14473                           ;fat16.c: 326: else if(remaining_clusters == 1)
 14474                           
 14475                           ; BSR set to: 0
 14476  00DB5E  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14477  00DB60  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14478  00DB62  A4D8               	btfss	status,2,c
 14479  00DB64  D028               	goto	l1789
 14480                           
 14481                           ; BSR set to: 0
 14482                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 14483  00DB66  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14484  00DB6A  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14485  00DB6E  0E00               	movlw	low _buffer
 14486  00DB70  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14487  00DB72  0E0A               	movlw	high _buffer
 14488  00DB74  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14489  00DB76  EC5C  F0A6         	call	__read_value_from_offset	;wreg free
 14490  00DB7A  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14491  00DB7E  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14492                           
 14493                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 14494  00DB82  0100               	movlb	0	; () banked
 14495  00DB84  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 14496  00DB86  E103               	bnz	u13120
 14497  00DB88  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14498  00DB8A  B4D8               	btfsc	status,2,c
 14499  00DB8C  D010               	goto	l1790
 14500  00DB8E                     u13120:
 14501                           
 14502                           ; BSR set to: 0
 14503                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 14504  00DB8E  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14505  00DB92  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14506  00DB96  0E00               	movlw	low _buffer
 14507  00DB98  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14508  00DB9A  0E0A               	movlw	high _buffer
 14509  00DB9C  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14510  00DB9E  0EFF               	movlw	255
 14511  00DBA0  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14512  00DBA2  6964               	setf	__write_value_to_offset@value& (0+255),b
 14513  00DBA4  EC79  F0A8         	call	__write_value_to_offset	;wreg free
 14514  00DBA8                     L89:
 14515                           
 14516                           ;fat16.c: 336: data_changed = 1;
 14517  00DBA8  0E01               	movlw	1
 14518  00DBAA  0100               	movlb	0	; () banked
 14519  00DBAC  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14520  00DBAE                     l1790:
 14521                           
 14522                           ; BSR set to: 0
 14523                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 14524                           
 14525                           ; BSR set to: 0
 14526  00DBAE  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 14527  00DBB0  A0D8               	btfss	status,0,c
 14528  00DBB2  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 14529                           
 14530                           ;fat16.c: 341: }
 14531  00DBB4  D020               	goto	l1791
 14532  00DBB6                     l1789:
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 14536                           
 14537                           ; BSR set to: 0
 14538  00DBB6  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14539  00DBBA  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14540  00DBBE  0E00               	movlw	low _buffer
 14541  00DBC0  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14542  00DBC2  0E0A               	movlw	high _buffer
 14543  00DBC4  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14544  00DBC6  EC5C  F0A6         	call	__read_value_from_offset	;wreg free
 14545  00DBCA  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14546  00DBCE  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14547                           
 14548                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 14549  00DBD2  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14550  00DBD6  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14551  00DBDA  0E00               	movlw	low _buffer
 14552  00DBDC  0100               	movlb	0	; () banked
 14553  00DBDE  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14554  00DBE0  0E0A               	movlw	high _buffer
 14555  00DBE2  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14556  00DBE4  0E00               	movlw	0
 14557  00DBE6  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14558  00DBE8  0E00               	movlw	0
 14559  00DBEA  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14560  00DBEC  EC79  F0A8         	call	__write_value_to_offset	;wreg free
 14561                           
 14562                           ;fat16.c: 352: data_changed = 1;
 14563  00DBF0  0E01               	movlw	1
 14564  00DBF2  0100               	movlb	0	; () banked
 14565  00DBF4  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14566  00DBF6                     l1791:
 14567                           
 14568                           ; BSR set to: 0
 14569                           
 14570                           ; BSR set to: 0
 14571                           
 14572                           ; BSR set to: 0
 14573                           
 14574                           ; BSR set to: 0
 14575  00DBF6  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14576  00DBF8  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14577  00DBFA  A4D8               	btfss	status,2,c
 14578  00DBFC  D6F9               	goto	l1777
 14579                           
 14580                           ; BSR set to: 0
 14581  00DBFE  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14582  00DC00  E104               	bnz	u13140
 14583  00DC02  0E02               	movlw	2
 14584  00DC04  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14585  00DC06  A0D8               	btfss	status,0,c
 14586  00DC08  D006               	goto	u13150
 14587  00DC0A                     u13140:
 14588                           
 14589                           ; BSR set to: 0
 14590  00DC0A  0EDA               	movlw	218
 14591  00DC0C  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14592  00DC0E  0E1F               	movlw	31
 14593  00DC10  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14594  00DC12  A0D8               	btfss	status,0,c
 14595  00DC14  D6ED               	goto	l1777
 14596  00DC16                     u13150:
 14597                           
 14598                           ; BSR set to: 0
 14599                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 14600                           
 14601                           ; BSR set to: 0
 14602                           
 14603                           ; BSR set to: 0
 14604  00DC16  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14605  00DC18  B4D8               	btfsc	status,2,c
 14606  00DC1A  D00A               	goto	l1795
 14607                           
 14608                           ; BSR set to: 0
 14609                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 14610  00DC1C  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14611  00DC20  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14612  00DC24  0E00               	movlw	low _buffer
 14613  00DC26  6F81               	movwf	flash_sector_write@data& (0+255),b
 14614  00DC28  0E0A               	movlw	high _buffer
 14615  00DC2A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14616  00DC2C  EC9C  F0A5         	call	_flash_sector_write	;wreg free
 14617  00DC30                     l1795:
 14618                           
 14619                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 14620  00DC30  0100               	movlb	0	; () banked
 14621  00DC32  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14622  00DC34  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14623  00DC36  B4D8               	btfsc	status,2,c
 14624  00DC38  D005               	goto	l1796
 14625                           
 14626                           ; BSR set to: 0
 14627                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 14628  00DC3A  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 14629  00DC3E  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;fat16.c: 367: }
 14633  00DC42  0012               	return	
 14634  00DC44                     l1796:
 14635                           
 14636                           ; BSR set to: 0
 14637                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 14638                           
 14639                           ; BSR set to: 0
 14640  00DC44  0E00               	movlw	0
 14641  00DC46  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 14642  00DC48  0E00               	movlw	0
 14643  00DC4A  6F95               	movwf	?__make_cluster_chain& (0+255),b
 14644                           
 14645                           ; BSR set to: 0
 14646  00DC4C  0012               	return	
 14647  00DC4E                     __end_of__make_cluster_chain:
 14648                           	opt stack 0
 14649                           tblptru	equ	0xFF8
 14650                           tblptrh	equ	0xFF7
 14651                           tblptrl	equ	0xFF6
 14652                           tablat	equ	0xFF5
 14653                           prodh	equ	0xFF4
 14654                           prodl	equ	0xFF3
 14655                           postinc0	equ	0xFEE
 14656                           wreg	equ	0xFE8
 14657                           postdec1	equ	0xFE5
 14658                           plusw1	equ	0xFE3
 14659                           fsr1h	equ	0xFE2
 14660                           fsr1l	equ	0xFE1
 14661                           indf2	equ	0xFDF
 14662                           postinc2	equ	0xFDE
 14663                           plusw2	equ	0xFDB
 14664                           fsr2h	equ	0xFDA
 14665                           fsr2l	equ	0xFD9
 14666                           status	equ	0xFD8
 14667                           
 14668 ;; *************** function __write_value_to_offset *****************
 14669 ;; Defined at:
 14670 ;;		line 123 in file "fat16.c"
 14671 ;; Parameters:    Size  Location     Type
 14672 ;;  offset          2    0[BANK0 ] unsigned int 
 14673 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14674 ;;		 -> buffer(512), 
 14675 ;;  value           2    4[BANK0 ] unsigned int 
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;		None
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  1    wreg      void 
 14680 ;; Registers used:
 14681 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14682 ;; Tracked objects:
 14683 ;;		On entry : 0/0
 14684 ;;		On exit  : 0/0
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14687 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14690 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14691 ;;Total ram usage:        8 bytes
 14692 ;; Hardware stack levels used:    1
 14693 ;; Hardware stack levels required when called:   10
 14694 ;; This function calls:
 14695 ;;		Nothing
 14696 ;; This function is called by:
 14697 ;;		__make_cluster_chain
 14698 ;; This function uses a non-reentrant model
 14699 ;;
 14700                           
 14701                           	psect	text47
 14702  0150F2                     __ptext47:
 14703                           	opt stack 0
 14704  0150F2                     __write_value_to_offset:
 14705                           	opt stack 16
 14706                           
 14707                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 14708                           
 14709                           ; BSR set to: 0
 14710                           ;incstack = 0
 14711  0150F2  0100               	movlb	0	; () banked
 14712  0150F4  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14713  0150F6  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14714  0150F8  6ED9               	movwf	fsr2l,c
 14715  0150FA  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14716  0150FC  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14717  0150FE  6EDA               	movwf	fsr2h,c
 14718  015100  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;fat16.c: 126: value >>= 8;
 14722  015104  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14723  015106  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14724  015108  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14725                           
 14726                           ; BSR set to: 0
 14727                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14728  01510A  0E01               	movlw	1
 14729  01510C  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14730  01510E  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14731  015110  0E00               	movlw	0
 14732  015112  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14733  015114  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14734  015116  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14735  015118  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14736  01511A  6ED9               	movwf	fsr2l,c
 14737  01511C  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14738  01511E  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14739  015120  6EDA               	movwf	fsr2h,c
 14740  015122  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14741                           
 14742                           ; BSR set to: 0
 14743  015126  0012               	return		;funcret
 14744  015128                     __end_of__write_value_to_offset:
 14745                           	opt stack 0
 14746                           tblptru	equ	0xFF8
 14747                           tblptrh	equ	0xFF7
 14748                           tblptrl	equ	0xFF6
 14749                           tablat	equ	0xFF5
 14750                           prodh	equ	0xFF4
 14751                           prodl	equ	0xFF3
 14752                           postinc0	equ	0xFEE
 14753                           wreg	equ	0xFE8
 14754                           postdec1	equ	0xFE5
 14755                           plusw1	equ	0xFE3
 14756                           fsr1h	equ	0xFE2
 14757                           fsr1l	equ	0xFE1
 14758                           indf2	equ	0xFDF
 14759                           postinc2	equ	0xFDE
 14760                           plusw2	equ	0xFDB
 14761                           fsr2h	equ	0xFDA
 14762                           fsr2l	equ	0xFD9
 14763                           status	equ	0xFD8
 14764                           
 14765 ;; *************** function __get_available_cluster *****************
 14766 ;; Defined at:
 14767 ;;		line 130 in file "fat16.c"
 14768 ;; Parameters:    Size  Location     Type
 14769 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14770 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14771 ;; Auto vars:     Size  Location     Type
 14772 ;;  sector          2   51[BANK0 ] unsigned int 
 14773 ;;  offset          2   49[BANK0 ] unsigned int 
 14774 ;;  cluster         2   47[BANK0 ] unsigned int 
 14775 ;; Return value:  Size  Location     Type
 14776 ;;                  2   43[BANK0 ] unsigned int 
 14777 ;; Registers used:
 14778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14779 ;; Tracked objects:
 14780 ;;		On entry : 0/0
 14781 ;;		On exit  : 0/0
 14782 ;;		Unchanged: 0/0
 14783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14785 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14787 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14788 ;;Total ram usage:       10 bytes
 14789 ;; Hardware stack levels used:    1
 14790 ;; Hardware stack levels required when called:   15
 14791 ;; This function calls:
 14792 ;;		__cluster_from_sector_and_offset
 14793 ;;		__get_available_offset_from_buffer
 14794 ;;		_flash_sector_read
 14795 ;; This function is called by:
 14796 ;;		__make_cluster_chain
 14797 ;; This function uses a non-reentrant model
 14798 ;;
 14799                           
 14800                           	psect	text48
 14801  012734                     __ptext48:
 14802                           	opt stack 0
 14803  012734                     __get_available_cluster:
 14804                           	opt stack 11
 14805                           
 14806                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 14807                           
 14808                           ; BSR set to: 0
 14809                           ;incstack = 0
 14810  012734  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14811  012738  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14812  01273C  0100               	movlb	0	; () banked
 14813  01273E  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14814  012740  E15B               	bnz	l13661
 14815  012742  0E22               	movlw	34
 14816  012744  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14817  012746  B0D8               	btfsc	status,0,c
 14818  012748  D057               	goto	u12510
 14819                           
 14820                           ; BSR set to: 0
 14821                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 14822                           
 14823                           ; BSR set to: 0
 14824                           
 14825                           ; BSR set to: 0
 14826  01274A  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14827  01274C  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14828  01274E  E104               	bnz	l13637
 14829  012750  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14830  012752  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14831  012754  B4D8               	btfsc	status,2,c
 14832  012756  D04D               	goto	l1762
 14833  012758                     l13637:
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 14837  012758  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14838  01275C  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14839  012760  0E00               	movlw	low _buffer
 14840  012762  6F89               	movwf	flash_sector_read@data& (0+255),b
 14841  012764  0E0A               	movlw	high _buffer
 14842  012766  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14843  012768  EC75  F0AA         	call	_flash_sector_read	;wreg free
 14844                           
 14845                           ;fat16.c: 149: if(sector == 2)
 14846  01276C  0E02               	movlw	2
 14847  01276E  0100               	movlb	0	; () banked
 14848  012770  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14849  012772  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14850  012774  A4D8               	btfss	status,2,c
 14851  012776  D00B               	goto	l1757
 14852                           
 14853                           ; BSR set to: 0
 14854                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 14855  012778  0E00               	movlw	0
 14856  01277A  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14857  01277C  0E04               	movlw	4
 14858  01277E  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14859  012780  0E00               	movlw	low _buffer
 14860  012782  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14861  012784  0E0A               	movlw	high _buffer
 14862  012786  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14863  012788  ECB7  F0A1         	call	__get_available_offset_from_buffer	;wreg free
 14864  01278C  D00B               	goto	L1
 14865  01278E                     l1757:
 14866                           
 14867                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14868  01278E  0E00               	movlw	0
 14869  012790  0100               	movlb	0	; () banked
 14870  012792  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14871  012794  0E00               	movlw	0
 14872  012796  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14873  012798  0E00               	movlw	low _buffer
 14874  01279A  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14875  01279C  0E0A               	movlw	high _buffer
 14876  01279E  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14877  0127A0  ECB7  F0A1         	call	__get_available_offset_from_buffer	;wreg free
 14878  0127A4                     L1:
 14879  0127A4  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14880  0127A8  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14881                           
 14882                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 14883  0127AC  0100               	movlb	0	; () banked
 14884  0127AE  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14885  0127B0  E103               	bnz	u12490
 14886  0127B2  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14887  0127B4  B4D8               	btfsc	status,2,c
 14888  0127B6  D01D               	goto	l1762
 14889  0127B8                     u12490:
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14893  0127B8  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14894  0127BC  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14895  0127C0  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14896  0127C4  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14897  0127C8  EC4D  F0AA         	call	__cluster_from_sector_and_offset	;wreg free
 14898  0127CC  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14899  0127D0  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14900                           
 14901                           ;fat16.c: 165: if(cluster > 8191)
 14902  0127D4  0E20               	movlw	32
 14903  0127D6  0100               	movlb	0	; () banked
 14904  0127D8  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14905  0127DA  A0D8               	btfss	status,0,c
 14906  0127DC  D005               	goto	l1760
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 14910  0127DE  0E00               	movlw	0
 14911  0127E0  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14912  0127E2  0E00               	movlw	0
 14913  0127E4  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14914                           
 14915                           ; BSR set to: 0
 14916  0127E6  0012               	return	
 14917  0127E8                     l1760:
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 14921  0127E8  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14922  0127EC  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14923  0127F0  0012               	return	
 14924  0127F2                     l1762:
 14925                           
 14926                           ; BSR set to: 0
 14927                           
 14928                           ; BSR set to: 0
 14929                           
 14930                           ; BSR set to: 0
 14931                           
 14932                           ; BSR set to: 0
 14933  0127F2  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14934  0127F4  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14935  0127F6  D7A3               	goto	L2
 14936  0127F8                     u12510:
 14937  0127F8                     l13661:
 14938                           
 14939                           ; BSR set to: 0
 14940                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 14941  0127F8  0E00               	movlw	0
 14942  0127FA  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14943  0127FC  0E00               	movlw	0
 14944  0127FE  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14945  012800  0012               	return	
 14946  012802                     __end_of__get_available_cluster:
 14947                           	opt stack 0
 14948                           tblptru	equ	0xFF8
 14949                           tblptrh	equ	0xFF7
 14950                           tblptrl	equ	0xFF6
 14951                           tablat	equ	0xFF5
 14952                           prodh	equ	0xFF4
 14953                           prodl	equ	0xFF3
 14954                           postinc0	equ	0xFEE
 14955                           wreg	equ	0xFE8
 14956                           postdec1	equ	0xFE5
 14957                           plusw1	equ	0xFE3
 14958                           fsr1h	equ	0xFE2
 14959                           fsr1l	equ	0xFE1
 14960                           indf2	equ	0xFDF
 14961                           postinc2	equ	0xFDE
 14962                           plusw2	equ	0xFDB
 14963                           fsr2h	equ	0xFDA
 14964                           fsr2l	equ	0xFD9
 14965                           status	equ	0xFD8
 14966                           
 14967 ;; *************** function __get_available_offset_from_buffer *****************
 14968 ;; Defined at:
 14969 ;;		line 98 in file "fat16.c"
 14970 ;; Parameters:    Size  Location     Type
 14971 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14972 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14973 ;;		 -> buffer(512), 
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;  offset          2    6[BANK0 ] unsigned int 
 14976 ;; Return value:  Size  Location     Type
 14977 ;;                  2    0[BANK0 ] unsigned int 
 14978 ;; Registers used:
 14979 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14980 ;; Tracked objects:
 14981 ;;		On entry : 0/0
 14982 ;;		On exit  : 0/0
 14983 ;;		Unchanged: 0/0
 14984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14987 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14988 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14989 ;;Total ram usage:        8 bytes
 14990 ;; Hardware stack levels used:    1
 14991 ;; Hardware stack levels required when called:   10
 14992 ;; This function calls:
 14993 ;;		Nothing
 14994 ;; This function is called by:
 14995 ;;		__get_available_cluster
 14996 ;;		__make_cluster_chain
 14997 ;; This function uses a non-reentrant model
 14998 ;;
 14999                           
 15000                           	psect	text49
 15001  01436E                     __ptext49:
 15002                           	opt stack 0
 15003  01436E                     __get_available_offset_from_buffer:
 15004                           	opt stack 16
 15005                           
 15006                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 15007                           
 15008                           ; BSR set to: 0
 15009                           ;incstack = 0
 15010  01436E  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 15011  014372  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 15012  014376  0E02               	movlw	2
 15013  014378  0100               	movlb	0	; () banked
 15014  01437A  D022               	goto	L3
 15015  01437C                     
 15016                           ; BSR set to: 0
 15017                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 15018                           
 15019                           ; BSR set to: 0
 15020  01437C  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15021  01437E  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15022  014380  6ED9               	movwf	fsr2l,c
 15023  014382  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15024  014384  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15025  014386  6EDA               	movwf	fsr2h,c
 15026  014388  50DF               	movf	indf2,w,c
 15027  01438A  A4D8               	btfss	status,2,c
 15028  01438C  D014               	goto	l1743
 15029                           
 15030                           ; BSR set to: 0
 15031  01438E  0E01               	movlw	1
 15032  014390  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15033  014392  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 15034  014394  0E00               	movlw	0
 15035  014396  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15036  014398  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 15037  01439A  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 15038  01439C  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15039  01439E  6ED9               	movwf	fsr2l,c
 15040  0143A0  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 15041  0143A2  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15042  0143A4  6EDA               	movwf	fsr2h,c
 15043  0143A6  50DF               	movf	indf2,w,c
 15044  0143A8  A4D8               	btfss	status,2,c
 15045  0143AA  D005               	goto	l1743
 15046                           
 15047                           ; BSR set to: 0
 15048                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 15049  0143AC  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 15050  0143B0  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 15051  0143B4  0012               	return	
 15052  0143B6                     l1743:
 15053                           
 15054                           ; BSR set to: 0
 15055                           
 15056                           ; BSR set to: 0
 15057  0143B6  0E02               	movlw	2
 15058  0143B8  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 15059  0143BA  0E00               	movlw	0
 15060  0143BC  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 15061  0143BE  0E02               	movlw	2
 15062  0143C0                     L3:
 15063  0143C0  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15064  0143C2  A0D8               	btfss	status,0,c
 15065  0143C4  D7DB               	goto	l1741
 15066                           
 15067                           ; BSR set to: 0
 15068                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 15069  0143C6  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 15070  0143C8  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 15071                           
 15072                           ; BSR set to: 0
 15073  0143CA  0012               	return		;funcret
 15074  0143CC                     __end_of__get_available_offset_from_buffer:
 15075                           	opt stack 0
 15076                           tblptru	equ	0xFF8
 15077                           tblptrh	equ	0xFF7
 15078                           tblptrl	equ	0xFF6
 15079                           tablat	equ	0xFF5
 15080                           prodh	equ	0xFF4
 15081                           prodl	equ	0xFF3
 15082                           postinc0	equ	0xFEE
 15083                           wreg	equ	0xFE8
 15084                           postdec1	equ	0xFE5
 15085                           plusw1	equ	0xFE3
 15086                           fsr1h	equ	0xFE2
 15087                           fsr1l	equ	0xFE1
 15088                           indf2	equ	0xFDF
 15089                           postinc2	equ	0xFDE
 15090                           plusw2	equ	0xFDB
 15091                           fsr2h	equ	0xFDA
 15092                           fsr2l	equ	0xFD9
 15093                           status	equ	0xFD8
 15094                           
 15095 ;; *************** function __cluster_from_sector_and_offset *****************
 15096 ;; Defined at:
 15097 ;;		line 89 in file "fat16.c"
 15098 ;; Parameters:    Size  Location     Type
 15099 ;;  sector          2    0[BANK0 ] unsigned int 
 15100 ;;  offset          2    2[BANK0 ] unsigned int 
 15101 ;; Auto vars:     Size  Location     Type
 15102 ;;		None
 15103 ;; Return value:  Size  Location     Type
 15104 ;;                  2    0[BANK0 ] unsigned int 
 15105 ;; Registers used:
 15106 ;;		wreg, status,2, status,0
 15107 ;; Tracked objects:
 15108 ;;		On entry : 0/0
 15109 ;;		On exit  : 0/0
 15110 ;;		Unchanged: 0/0
 15111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15112 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15115 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15116 ;;Total ram usage:        4 bytes
 15117 ;; Hardware stack levels used:    1
 15118 ;; Hardware stack levels required when called:   10
 15119 ;; This function calls:
 15120 ;;		Nothing
 15121 ;; This function is called by:
 15122 ;;		__get_available_cluster
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           	psect	text50
 15127  01549A                     __ptext50:
 15128                           	opt stack 0
 15129  01549A                     __cluster_from_sector_and_offset:
 15130                           	opt stack 15
 15131                           
 15132                           ;fat16.c: 91: offset >>= 1;
 15133                           
 15134                           ; BSR set to: 0
 15135                           ;incstack = 0
 15136  01549A  0100               	movlb	0	; () banked
 15137  01549C  90D8               	bcf	status,0,c
 15138  01549E  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 15139  0154A0  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 15140                           
 15141                           ; BSR set to: 0
 15142                           ;fat16.c: 92: sector -= 2;
 15143  0154A2  0E02               	movlw	2
 15144  0154A4  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15145  0154A6  0E00               	movlw	0
 15146  0154A8  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15147                           
 15148                           ; BSR set to: 0
 15149                           ;fat16.c: 93: sector <<= 8;
 15150  0154AA  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 15151  0154AC  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 15152  0154AE  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 15153                           
 15154                           ; BSR set to: 0
 15155                           ;fat16.c: 94: sector |= offset;
 15156  0154B0  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 15157  0154B2  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15158  0154B4  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 15159  0154B6  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15160                           
 15161                           ; BSR set to: 0
 15162                           ;fat16.c: 95: return sector;
 15163  0154B8  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 15164  0154BC  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 15165  0154C0  0012               	return	
 15166  0154C2                     __end_of__cluster_from_sector_and_offset:
 15167                           	opt stack 0
 15168                           tblptru	equ	0xFF8
 15169                           tblptrh	equ	0xFF7
 15170                           tblptrl	equ	0xFF6
 15171                           tablat	equ	0xFF5
 15172                           prodh	equ	0xFF4
 15173                           prodl	equ	0xFF3
 15174                           postinc0	equ	0xFEE
 15175                           wreg	equ	0xFE8
 15176                           postdec1	equ	0xFE5
 15177                           plusw1	equ	0xFE3
 15178                           fsr1h	equ	0xFE2
 15179                           fsr1l	equ	0xFE1
 15180                           indf2	equ	0xFDF
 15181                           postinc2	equ	0xFDE
 15182                           plusw2	equ	0xFDB
 15183                           fsr2h	equ	0xFDA
 15184                           fsr2l	equ	0xFD9
 15185                           status	equ	0xFD8
 15186                           
 15187 ;; *************** function __get_time *****************
 15188 ;; Defined at:
 15189 ;;		line 376 in file "fat16.c"
 15190 ;; Parameters:    Size  Location     Type
 15191 ;;		None
 15192 ;; Auto vars:     Size  Location     Type
 15193 ;;		None
 15194 ;; Return value:  Size  Location     Type
 15195 ;;                  2    0[BANK0 ] unsigned int 
 15196 ;; Registers used:
 15197 ;;		wreg, status,2
 15198 ;; Tracked objects:
 15199 ;;		On entry : 0/0
 15200 ;;		On exit  : 0/0
 15201 ;;		Unchanged: 0/0
 15202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15206 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15207 ;;Total ram usage:        2 bytes
 15208 ;; Hardware stack levels used:    1
 15209 ;; Hardware stack levels required when called:   10
 15210 ;; This function calls:
 15211 ;;		Nothing
 15212 ;; This function is called by:
 15213 ;;		_fat_create_file
 15214 ;; This function uses a non-reentrant model
 15215 ;;
 15216                           
 15217                           	psect	text51
 15218  015784                     __ptext51:
 15219                           	opt stack 0
 15220  015784                     __get_time:
 15221                           	opt stack 17
 15222                           
 15223                           ;fat16.c: 388: return 0x0000;
 15224                           
 15225                           ; BSR set to: 0
 15226                           ;incstack = 0
 15227  015784  0E00               	movlw	0
 15228  015786  0100               	movlb	0	; () banked
 15229  015788  6F61               	movwf	(?__get_time+1)& (0+255),b
 15230  01578A  0E00               	movlw	0
 15231  01578C  6F60               	movwf	?__get_time& (0+255),b
 15232  01578E  0012               	return	
 15233  015790                     __end_of__get_time:
 15234                           	opt stack 0
 15235                           tblptru	equ	0xFF8
 15236                           tblptrh	equ	0xFF7
 15237                           tblptrl	equ	0xFF6
 15238                           tablat	equ	0xFF5
 15239                           prodh	equ	0xFF4
 15240                           prodl	equ	0xFF3
 15241                           postinc0	equ	0xFEE
 15242                           wreg	equ	0xFE8
 15243                           postdec1	equ	0xFE5
 15244                           plusw1	equ	0xFE3
 15245                           fsr1h	equ	0xFE2
 15246                           fsr1l	equ	0xFE1
 15247                           indf2	equ	0xFDF
 15248                           postinc2	equ	0xFDE
 15249                           plusw2	equ	0xFDB
 15250                           fsr2h	equ	0xFDA
 15251                           fsr2l	equ	0xFD9
 15252                           status	equ	0xFD8
 15253                           
 15254 ;; *************** function __get_date *****************
 15255 ;; Defined at:
 15256 ;;		line 392 in file "fat16.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;		None
 15259 ;; Auto vars:     Size  Location     Type
 15260 ;;		None
 15261 ;; Return value:  Size  Location     Type
 15262 ;;                  2    0[BANK0 ] unsigned int 
 15263 ;; Registers used:
 15264 ;;		wreg, status,2
 15265 ;; Tracked objects:
 15266 ;;		On entry : 0/0
 15267 ;;		On exit  : 0/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15270 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15273 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15274 ;;Total ram usage:        2 bytes
 15275 ;; Hardware stack levels used:    1
 15276 ;; Hardware stack levels required when called:   10
 15277 ;; This function calls:
 15278 ;;		Nothing
 15279 ;; This function is called by:
 15280 ;;		_fat_create_file
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284                           	psect	text52
 15285  015790                     __ptext52:
 15286                           	opt stack 0
 15287  015790                     __get_date:
 15288                           	opt stack 17
 15289                           
 15290                           ;fat16.c: 404: return 0x0000;
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;incstack = 0
 15294  015790  0E00               	movlw	0
 15295  015792  0100               	movlb	0	; () banked
 15296  015794  6F61               	movwf	(?__get_date+1)& (0+255),b
 15297  015796  0E00               	movlw	0
 15298  015798  6F60               	movwf	?__get_date& (0+255),b
 15299  01579A  0012               	return	
 15300  01579C                     __end_of__get_date:
 15301                           	opt stack 0
 15302                           tblptru	equ	0xFF8
 15303                           tblptrh	equ	0xFF7
 15304                           tblptrl	equ	0xFF6
 15305                           tablat	equ	0xFF5
 15306                           prodh	equ	0xFF4
 15307                           prodl	equ	0xFF3
 15308                           postinc0	equ	0xFEE
 15309                           wreg	equ	0xFE8
 15310                           postdec1	equ	0xFE5
 15311                           plusw1	equ	0xFE3
 15312                           fsr1h	equ	0xFE2
 15313                           fsr1l	equ	0xFE1
 15314                           indf2	equ	0xFDF
 15315                           postinc2	equ	0xFDE
 15316                           plusw2	equ	0xFDB
 15317                           fsr2h	equ	0xFDA
 15318                           fsr2l	equ	0xFD9
 15319                           status	equ	0xFD8
 15320                           
 15321 ;; *************** function __get_available_root_entry *****************
 15322 ;; Defined at:
 15323 ;;		line 442 in file "fat16.c"
 15324 ;; Parameters:    Size  Location     Type
 15325 ;;		None
 15326 ;; Auto vars:     Size  Location     Type
 15327 ;;  file_number     1   53[BANK0 ] unsigned char 
 15328 ;; Return value:  Size  Location     Type
 15329 ;;                  1    wreg      unsigned char 
 15330 ;; Registers used:
 15331 ;;		wreg, status,2, status,0, cstack
 15332 ;; Tracked objects:
 15333 ;;		On entry : 0/0
 15334 ;;		On exit  : 0/0
 15335 ;;		Unchanged: 0/0
 15336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15341 ;;Total ram usage:        1 bytes
 15342 ;; Hardware stack levels used:    1
 15343 ;; Hardware stack levels required when called:   16
 15344 ;; This function calls:
 15345 ;;		__root_is_available
 15346 ;; This function is called by:
 15347 ;;		_fat_create_file
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text53
 15352  01541E                     __ptext53:
 15353                           	opt stack 0
 15354  01541E                     __get_available_root_entry:
 15355                           	opt stack 11
 15356                           
 15357                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;incstack = 0
 15361  01541E  0E00               	movlw	0
 15362  015420  0100               	movlb	0	; () banked
 15363  015422  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 15364  015424                     l14223:
 15365                           
 15366                           ; BSR set to: 0
 15367  015424  0E3F               	movlw	63
 15368  015426  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 15369  015428  D001               	goto	l1814
 15370  01542A  D00C               	goto	u13200
 15371  01542C                     l1814:
 15372                           
 15373                           ; BSR set to: 0
 15374                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 15375                           
 15376                           ; BSR set to: 0
 15377  01542C  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15378  01542E  ECC1  F09F         	call	__root_is_available
 15379  015432  0900               	iorlw	0
 15380  015434  B4D8               	btfsc	status,2,c
 15381  015436  D003               	goto	l1816
 15382                           
 15383                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 15384  015438  0100               	movlb	0	; () banked
 15385  01543A  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15386                           
 15387                           ; BSR set to: 0
 15388  01543C  0012               	return	
 15389  01543E                     l1816:
 15390                           
 15391                           ; BSR set to: 0
 15392  01543E  0100               	movlb	0	; () banked
 15393  015440  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 15394  015442  D7F0               	goto	l14223
 15395  015444                     u13200:
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 15399                           
 15400                           ; BSR set to: 0
 15401  015444  0EFF               	movlw	255
 15402  015446  0012               	return	
 15403  015448                     __end_of__get_available_root_entry:
 15404                           	opt stack 0
 15405                           tblptru	equ	0xFF8
 15406                           tblptrh	equ	0xFF7
 15407                           tblptrl	equ	0xFF6
 15408                           tablat	equ	0xFF5
 15409                           prodh	equ	0xFF4
 15410                           prodl	equ	0xFF3
 15411                           postinc0	equ	0xFEE
 15412                           wreg	equ	0xFE8
 15413                           postdec1	equ	0xFE5
 15414                           plusw1	equ	0xFE3
 15415                           fsr1h	equ	0xFE2
 15416                           fsr1l	equ	0xFE1
 15417                           indf2	equ	0xFDF
 15418                           postinc2	equ	0xFDE
 15419                           plusw2	equ	0xFDB
 15420                           fsr2h	equ	0xFDA
 15421                           fsr2l	equ	0xFD9
 15422                           status	equ	0xFD8
 15423                           
 15424 ;; *************** function __add_item *****************
 15425 ;; Defined at:
 15426 ;;		line 39 in file "config_file.c"
 15427 ;; Parameters:    Size  Location     Type
 15428 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 15429 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 15430 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 15431 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 15432 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 15433 ;;  value           4   38[BANK0 ] long 
 15434 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 15435 ;;		 -> ConfigFile_buffer(512), 
 15436 ;; Auto vars:     Size  Location     Type
 15437 ;;  length          1   46[BANK0 ] unsigned char 
 15438 ;; Return value:  Size  Location     Type
 15439 ;;                  1    wreg      unsigned char 
 15440 ;; Registers used:
 15441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15442 ;; Tracked objects:
 15443 ;;		On entry : 0/0
 15444 ;;		On exit  : 0/0
 15445 ;;		Unchanged: 0/0
 15446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15447 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15450 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15451 ;;Total ram usage:       11 bytes
 15452 ;; Hardware stack levels used:    1
 15453 ;; Hardware stack levels required when called:   13
 15454 ;; This function calls:
 15455 ;;		_ltoa
 15456 ;; This function is called by:
 15457 ;;		_configFile_write
 15458 ;; This function uses a non-reentrant model
 15459 ;;
 15460                           
 15461                           	psect	text54
 15462  011CEA                     __ptext54:
 15463                           	opt stack 0
 15464  011CEA                     __add_item:
 15465                           	opt stack 15
 15466                           
 15467                           ;config_file.c: 41: uint8_t length = 0;
 15468                           
 15469                           ; BSR set to: 0
 15470                           ;incstack = 0
 15471  011CEA  0E00               	movlw	0
 15472  011CEC  0100               	movlb	0	; () banked
 15473  011CEE  6F8E               	movwf	__add_item@length& (0+255),b
 15474                           
 15475                           ;config_file.c: 44: while(item_string[length])
 15476  011CF0  D01C               	goto	l2857
 15477  011CF2                     
 15478                           ; BSR set to: 0
 15479                           ;config_file.c: 45: {;config_file.c: 46: buffer[length] = item_string[length];
 15480                           
 15481                           ; BSR set to: 0
 15482  011CF2  518E               	movf	__add_item@length& (0+255),w,b
 15483  011CF4  0D01               	mullw	1
 15484  011CF6  C084  F08C         	movff	__add_item@item_string,??__add_item
 15485  011CFA  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15486  011CFE  50F3               	movf	prodl,w,c
 15487  011D00  278C               	addwf	??__add_item& (0+255),f,b
 15488  011D02  50F4               	movf	prodh,w,c
 15489  011D04  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15490  011D06  C08C  FFF6         	movff	??__add_item,tblptrl
 15491  011D0A  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15492  011D0E                     	if	0	;tblptru may be non-zero
 15493  011D0E                     	endif
 15494  011D0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15495  011D0E  0E00               	movlw	low (__mediumconst shr (0+16))
 15496  011D10  6EF8               	movwf	tblptru,c
 15497  011D12                     	endif
 15498  011D12  518E               	movf	__add_item@length& (0+255),w,b
 15499  011D14  0D01               	mullw	1
 15500  011D16  50F3               	movf	prodl,w,c
 15501  011D18  258A               	addwf	__add_item@buffer& (0+255),w,b
 15502  011D1A  6ED9               	movwf	fsr2l,c
 15503  011D1C  50F4               	movf	prodh,w,c
 15504  011D1E  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15505  011D20  6EDA               	movwf	fsr2h,c
 15506  011D22  0008               	tblrd		*
 15507  011D24  CFF5 FFDF          	movff	tablat,indf2
 15508                           
 15509                           ; BSR set to: 0
 15510                           ;config_file.c: 47: ++length;
 15511  011D28  2B8E               	incf	__add_item@length& (0+255),f,b
 15512  011D2A                     l2857:
 15513                           
 15514                           ; BSR set to: 0
 15515                           
 15516                           ; BSR set to: 0
 15517  011D2A  518E               	movf	__add_item@length& (0+255),w,b
 15518  011D2C  0D01               	mullw	1
 15519  011D2E  C084  F08C         	movff	__add_item@item_string,??__add_item
 15520  011D32  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15521  011D36  50F3               	movf	prodl,w,c
 15522  011D38  278C               	addwf	??__add_item& (0+255),f,b
 15523  011D3A  50F4               	movf	prodh,w,c
 15524  011D3C  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15525  011D3E  C08C  FFF6         	movff	??__add_item,tblptrl
 15526  011D42  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15527  011D46                     	if	0	;tblptru may be non-zero
 15528  011D46                     	endif
 15529  011D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15530  011D46  0E00               	movlw	low (__mediumconst shr (0+16))
 15531  011D48  6EF8               	movwf	tblptru,c
 15532  011D4A                     	endif
 15533  011D4A  0008               	tblrd		*
 15534  011D4C  50F5               	movf	tablat,w,c
 15535  011D4E  0900               	iorlw	0
 15536  011D50  A4D8               	btfss	status,2,c
 15537  011D52  D7CF               	goto	l2858
 15538                           
 15539                           ; BSR set to: 0
 15540                           ;config_file.c: 48: };config_file.c: 51: buffer[length++] = '=';
 15541                           
 15542                           ; BSR set to: 0
 15543  011D54  518E               	movf	__add_item@length& (0+255),w,b
 15544  011D56  0D01               	mullw	1
 15545  011D58  50F3               	movf	prodl,w,c
 15546  011D5A  258A               	addwf	__add_item@buffer& (0+255),w,b
 15547  011D5C  6ED9               	movwf	fsr2l,c
 15548  011D5E  50F4               	movf	prodh,w,c
 15549  011D60  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15550  011D62  6EDA               	movwf	fsr2h,c
 15551  011D64  0E3D               	movlw	61
 15552  011D66  6EDF               	movwf	indf2,c
 15553                           
 15554                           ; BSR set to: 0
 15555  011D68  2B8E               	incf	__add_item@length& (0+255),f,b
 15556                           
 15557                           ; BSR set to: 0
 15558                           ;config_file.c: 54: ltoa(&buffer[length], value, 10);
 15559  011D6A  518E               	movf	__add_item@length& (0+255),w,b
 15560  011D6C  0D01               	mullw	1
 15561  011D6E  50F3               	movf	prodl,w,c
 15562  011D70  258A               	addwf	__add_item@buffer& (0+255),w,b
 15563  011D72  6F7A               	movwf	ltoa@buf& (0+255),b
 15564  011D74  50F4               	movf	prodh,w,c
 15565  011D76  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15566  011D78  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 15567  011D7A  C086  F07C         	movff	__add_item@value,ltoa@val
 15568  011D7E  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 15569  011D82  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 15570  011D86  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 15571  011D8A  0E00               	movlw	0
 15572  011D8C  6F81               	movwf	(ltoa@base+1)& (0+255),b
 15573  011D8E  0E0A               	movlw	10
 15574  011D90  6F80               	movwf	ltoa@base& (0+255),b
 15575  011D92  EC7D  F0A4         	call	_ltoa	;wreg free
 15576                           
 15577                           ;config_file.c: 55: while(buffer[length])
 15578  011D96  D002               	goto	l2860
 15579  011D98                     
 15580                           ;config_file.c: 56: {;config_file.c: 57: ++length;
 15581  011D98  0100               	movlb	0	; () banked
 15582  011D9A  2B8E               	incf	__add_item@length& (0+255),f,b
 15583  011D9C                     l2860:
 15584                           
 15585                           ; BSR set to: 0
 15586  011D9C  0100               	movlb	0	; () banked
 15587  011D9E  518E               	movf	__add_item@length& (0+255),w,b
 15588  011DA0  0D01               	mullw	1
 15589  011DA2  50F3               	movf	prodl,w,c
 15590  011DA4  258A               	addwf	__add_item@buffer& (0+255),w,b
 15591  011DA6  6ED9               	movwf	fsr2l,c
 15592  011DA8  50F4               	movf	prodh,w,c
 15593  011DAA  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15594  011DAC  6EDA               	movwf	fsr2h,c
 15595  011DAE  50DF               	movf	indf2,w,c
 15596  011DB0  A4D8               	btfss	status,2,c
 15597  011DB2  D7F2               	goto	l2861
 15598                           
 15599                           ; BSR set to: 0
 15600                           ;config_file.c: 58: };config_file.c: 61: buffer[length++] = '\n';
 15601                           
 15602                           ; BSR set to: 0
 15603  011DB4  518E               	movf	__add_item@length& (0+255),w,b
 15604  011DB6  0D01               	mullw	1
 15605  011DB8  50F3               	movf	prodl,w,c
 15606  011DBA  258A               	addwf	__add_item@buffer& (0+255),w,b
 15607  011DBC  6ED9               	movwf	fsr2l,c
 15608  011DBE  50F4               	movf	prodh,w,c
 15609  011DC0  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15610  011DC2  6EDA               	movwf	fsr2h,c
 15611  011DC4  0E0A               	movlw	10
 15612  011DC6  6EDF               	movwf	indf2,c
 15613                           
 15614                           ; BSR set to: 0
 15615  011DC8  2B8E               	incf	__add_item@length& (0+255),f,b
 15616                           
 15617                           ; BSR set to: 0
 15618                           ;config_file.c: 64: return length;
 15619  011DCA  518E               	movf	__add_item@length& (0+255),w,b
 15620  011DCC  0012               	return	
 15621  011DCE                     __end_of__add_item:
 15622                           	opt stack 0
 15623                           tblptru	equ	0xFF8
 15624                           tblptrh	equ	0xFF7
 15625                           tblptrl	equ	0xFF6
 15626                           tablat	equ	0xFF5
 15627                           prodh	equ	0xFF4
 15628                           prodl	equ	0xFF3
 15629                           postinc0	equ	0xFEE
 15630                           wreg	equ	0xFE8
 15631                           postdec1	equ	0xFE5
 15632                           plusw1	equ	0xFE3
 15633                           fsr1h	equ	0xFE2
 15634                           fsr1l	equ	0xFE1
 15635                           indf2	equ	0xFDF
 15636                           postinc2	equ	0xFDE
 15637                           plusw2	equ	0xFDB
 15638                           fsr2h	equ	0xFDA
 15639                           fsr2l	equ	0xFD9
 15640                           status	equ	0xFD8
 15641                           
 15642 ;; *************** function _ltoa *****************
 15643 ;; Defined at:
 15644 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15647 ;;		 -> ConfigFile_buffer(512), 
 15648 ;;  val             4   28[BANK0 ] long 
 15649 ;;  base            2   32[BANK0 ] int 
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15652 ;;		 -> ConfigFile_buffer(512), 
 15653 ;; Return value:  Size  Location     Type
 15654 ;;                  2   26[BANK0 ] PTR unsigned char 
 15655 ;; Registers used:
 15656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15657 ;; Tracked objects:
 15658 ;;		On entry : 0/0
 15659 ;;		On exit  : 0/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15662 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15663 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15665 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15666 ;;Total ram usage:       10 bytes
 15667 ;; Hardware stack levels used:    1
 15668 ;; Hardware stack levels required when called:   12
 15669 ;; This function calls:
 15670 ;;		_ultoa
 15671 ;; This function is called by:
 15672 ;;		__add_item
 15673 ;; This function uses a non-reentrant model
 15674 ;;
 15675                           
 15676                           	psect	text55
 15677  0148FA                     __ptext55:
 15678                           	opt stack 0
 15679  0148FA                     _ltoa:
 15680                           	opt stack 15
 15681                           
 15682                           ; BSR set to: 0
 15683                           ;incstack = 0
 15684  0148FA  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15685  0148FE  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15686  014902  0100               	movlb	0	; () banked
 15687  014904  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15688  014906  D010               	goto	l3629
 15689                           
 15690                           ; BSR set to: 0
 15691  014908  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15692  01490C  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15693  014910  0E2D               	movlw	45
 15694  014912  6EDF               	movwf	indf2,c
 15695                           
 15696                           ; BSR set to: 0
 15697  014914  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15698  014916  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15699                           
 15700                           ; BSR set to: 0
 15701  014918  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15702  01491A  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15703  01491C  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15704  01491E  6D7C               	negf	ltoa@val& (0+255),b
 15705  014920  0E00               	movlw	0
 15706  014922  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15707  014924  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15708  014926  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15709  014928                     l3629:
 15710                           
 15711                           ; BSR set to: 0
 15712                           
 15713                           ; BSR set to: 0
 15714  014928  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15715  01492C  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15716  014930  C07C  F06F         	movff	ltoa@val,ultoa@val
 15717  014934  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15718  014938  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15719  01493C  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15720  014940  C080  F073         	movff	ltoa@base,ultoa@base
 15721  014944  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15722  014948  EC36  F08A         	call	_ultoa	;wreg free
 15723  01494C  0012               	return	
 15724  01494E                     __end_of_ltoa:
 15725                           	opt stack 0
 15726                           tblptru	equ	0xFF8
 15727                           tblptrh	equ	0xFF7
 15728                           tblptrl	equ	0xFF6
 15729                           tablat	equ	0xFF5
 15730                           prodh	equ	0xFF4
 15731                           prodl	equ	0xFF3
 15732                           postinc0	equ	0xFEE
 15733                           wreg	equ	0xFE8
 15734                           postdec1	equ	0xFE5
 15735                           plusw1	equ	0xFE3
 15736                           fsr1h	equ	0xFE2
 15737                           fsr1l	equ	0xFE1
 15738                           indf2	equ	0xFDF
 15739                           postinc2	equ	0xFDE
 15740                           plusw2	equ	0xFDB
 15741                           fsr2h	equ	0xFDA
 15742                           fsr2l	equ	0xFD9
 15743                           status	equ	0xFD8
 15744                           
 15745 ;; *************** function _ultoa *****************
 15746 ;; Defined at:
 15747 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15748 ;; Parameters:    Size  Location     Type
 15749 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15750 ;;		 -> ConfigFile_buffer(512), 
 15751 ;;  val             4   15[BANK0 ] unsigned long 
 15752 ;;  base            2   19[BANK0 ] int 
 15753 ;; Auto vars:     Size  Location     Type
 15754 ;;  v               4   21[BANK0 ] unsigned long 
 15755 ;;  c               1   25[BANK0 ] unsigned char 
 15756 ;; Return value:  Size  Location     Type
 15757 ;;                  2   13[BANK0 ] PTR unsigned char 
 15758 ;; Registers used:
 15759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15760 ;; Tracked objects:
 15761 ;;		On entry : 0/0
 15762 ;;		On exit  : 0/0
 15763 ;;		Unchanged: 0/0
 15764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15765 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15766 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15768 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15769 ;;Total ram usage:       13 bytes
 15770 ;; Hardware stack levels used:    1
 15771 ;; Hardware stack levels required when called:   11
 15772 ;; This function calls:
 15773 ;;		___lldiv
 15774 ;;		___llmod
 15775 ;; This function is called by:
 15776 ;;		_ltoa
 15777 ;; This function uses a non-reentrant model
 15778 ;;
 15779                           
 15780                           	psect	text56
 15781  01146C                     __ptext56:
 15782                           	opt stack 0
 15783  01146C                     _ultoa:
 15784                           	opt stack 15
 15785                           
 15786                           ;incstack = 0
 15787  01146C  C06F  F075         	movff	ultoa@val,ultoa@v
 15788  011470  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15789  011474  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15790  011478  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15791  01147C  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15792  011480  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15793  011484  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15794  011488  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15795  01148C  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15796  011490  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15797  011494  0100               	movlb	0	; () banked
 15798  011496  0E00               	movlw	0
 15799  011498  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15800  01149A  0EFF               	movlw	-1
 15801  01149C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15802  01149E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15803  0114A0  EC7C  F09C         	call	___lldiv	;wreg free
 15804  0114A4  C060  F075         	movff	?___lldiv,ultoa@v
 15805  0114A8  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15806  0114AC  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15807  0114B0  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15808  0114B4  0100               	movlb	0	; () banked
 15809  0114B6  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15810  0114B8  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15811                           
 15812                           ; BSR set to: 0
 15813  0114BA  5175               	movf	ultoa@v& (0+255),w,b
 15814  0114BC  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15815  0114BE  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15816  0114C0  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15817  0114C2  A4D8               	btfss	status,2,c
 15818  0114C4  D7DB               	goto	l3633
 15819                           
 15820                           ; BSR set to: 0
 15821                           
 15822                           ; BSR set to: 0
 15823  0114C6  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15824  0114CA  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15825  0114CE  0E00               	movlw	0
 15826  0114D0  6EDF               	movwf	indf2,c
 15827                           
 15828                           ; BSR set to: 0
 15829  0114D2  076D               	decf	ultoa@buf& (0+255),f,b
 15830  0114D4  A0D8               	btfss	status,0,c
 15831  0114D6  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15832  0114D8                     
 15833                           ; BSR set to: 0
 15834                           
 15835                           ; BSR set to: 0
 15836  0114D8  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15837  0114DC  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15838  0114E0  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15839  0114E4  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15840  0114E8  C073  F064         	movff	ultoa@base,___llmod@divisor
 15841  0114EC  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15842  0114F0  0E00               	movlw	0
 15843  0114F2  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15844  0114F4  0EFF               	movlw	-1
 15845  0114F6  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15846  0114F8  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15847  0114FA  EC2C  F0A0         	call	___llmod	;wreg free
 15848  0114FE  0100               	movlb	0	; () banked
 15849  011500  5160               	movf	?___llmod& (0+255),w,b
 15850  011502  6F79               	movwf	ultoa@c& (0+255),b
 15851                           
 15852                           ; BSR set to: 0
 15853  011504  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15854  011508  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15855  01150C  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15856  011510  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15857  011514  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15858  011518  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15859  01151C  0E00               	movlw	0
 15860  01151E  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15861  011520  0EFF               	movlw	-1
 15862  011522  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15863  011524  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15864  011526  EC7C  F09C         	call	___lldiv	;wreg free
 15865  01152A  C060  F06F         	movff	?___lldiv,ultoa@val
 15866  01152E  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15867  011532  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15868  011536  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15869  01153A  0E09               	movlw	9
 15870  01153C  0100               	movlb	0	; () banked
 15871  01153E  6579               	cpfsgt	ultoa@c& (0+255),b
 15872  011540  D002               	goto	l3636
 15873                           
 15874                           ; BSR set to: 0
 15875  011542  0E07               	movlw	7
 15876  011544  2779               	addwf	ultoa@c& (0+255),f,b
 15877  011546                     l3636:
 15878                           
 15879                           ; BSR set to: 0
 15880  011546  0E30               	movlw	48
 15881  011548  2779               	addwf	ultoa@c& (0+255),f,b
 15882                           
 15883                           ; BSR set to: 0
 15884  01154A  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15885  01154E  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15886  011552  C079  FFDF         	movff	ultoa@c,indf2
 15887                           
 15888                           ; BSR set to: 0
 15889  011556  076D               	decf	ultoa@buf& (0+255),f,b
 15890  011558  A0D8               	btfss	status,0,c
 15891  01155A  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15892                           
 15893                           ; BSR set to: 0
 15894  01155C  516F               	movf	ultoa@val& (0+255),w,b
 15895  01155E  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15896  011560  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15897  011562  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15898  011564  B4D8               	btfsc	status,2,c
 15899  011566  0012               	return	
 15900  011568  D7B7               	goto	l3635
 15901  01156A                     __end_of_ultoa:
 15902                           	opt stack 0
 15903                           tblptru	equ	0xFF8
 15904                           tblptrh	equ	0xFF7
 15905                           tblptrl	equ	0xFF6
 15906                           tablat	equ	0xFF5
 15907                           prodh	equ	0xFF4
 15908                           prodl	equ	0xFF3
 15909                           postinc0	equ	0xFEE
 15910                           wreg	equ	0xFE8
 15911                           postdec1	equ	0xFE5
 15912                           plusw1	equ	0xFE3
 15913                           fsr1h	equ	0xFE2
 15914                           fsr1l	equ	0xFE1
 15915                           indf2	equ	0xFDF
 15916                           postinc2	equ	0xFDE
 15917                           plusw2	equ	0xFDB
 15918                           fsr2h	equ	0xFDA
 15919                           fsr2l	equ	0xFD9
 15920                           status	equ	0xFD8
 15921                           
 15922 ;; *************** function ___llmod *****************
 15923 ;; Defined at:
 15924 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15925 ;; Parameters:    Size  Location     Type
 15926 ;;  dividend        4    0[BANK0 ] unsigned long 
 15927 ;;  divisor         4    4[BANK0 ] unsigned long 
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;  counter         1    8[BANK0 ] unsigned char 
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  4    0[BANK0 ] unsigned long 
 15932 ;; Registers used:
 15933 ;;		wreg, status,2, status,0
 15934 ;; Tracked objects:
 15935 ;;		On entry : 0/0
 15936 ;;		On exit  : 0/0
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15939 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15942 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15943 ;;Total ram usage:        9 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; Hardware stack levels required when called:   10
 15946 ;; This function calls:
 15947 ;;		Nothing
 15948 ;; This function is called by:
 15949 ;;		_ultoa
 15950 ;; This function uses a non-reentrant model
 15951 ;;
 15952                           
 15953                           	psect	text57
 15954  014058                     __ptext57:
 15955                           	opt stack 0
 15956  014058                     ___llmod:
 15957                           	opt stack 15
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;incstack = 0
 15961  014058  0100               	movlb	0	; () banked
 15962  01405A  5164               	movf	___llmod@divisor& (0+255),w,b
 15963  01405C  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15964  01405E  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15965  014060  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15966  014062  B4D8               	btfsc	status,2,c
 15967  014064  D024               	goto	l3331
 15968                           
 15969                           ; BSR set to: 0
 15970  014066  0E01               	movlw	1
 15971  014068  6F68               	movwf	___llmod@counter& (0+255),b
 15972  01406A  D006               	goto	l3326
 15973  01406C                     
 15974                           ; BSR set to: 0
 15975                           
 15976                           ; BSR set to: 0
 15977  01406C  90D8               	bcf	status,0,c
 15978  01406E  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15979  014070  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15980  014072  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15981  014074  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15982  014076  2B68               	incf	___llmod@counter& (0+255),f,b
 15983  014078                     l3326:
 15984                           
 15985                           ; BSR set to: 0
 15986                           
 15987                           ; BSR set to: 0
 15988  014078  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15989  01407A  D7F8               	goto	l3327
 15990  01407C                     u11740:
 15991                           
 15992                           ; BSR set to: 0
 15993                           
 15994                           ; BSR set to: 0
 15995                           
 15996                           ; BSR set to: 0
 15997  01407C  5164               	movf	___llmod@divisor& (0+255),w,b
 15998  01407E  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15999  014080  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16000  014082  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 16001  014084  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16002  014086  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 16003  014088  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16004  01408A  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 16005  01408C  A0D8               	btfss	status,0,c
 16006  01408E  D008               	goto	l3330
 16007                           
 16008                           ; BSR set to: 0
 16009  014090  5164               	movf	___llmod@divisor& (0+255),w,b
 16010  014092  5F60               	subwf	___llmod@dividend& (0+255),f,b
 16011  014094  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16012  014096  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 16013  014098  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16014  01409A  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 16015  01409C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16016  01409E  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 16017  0140A0                     l3330:
 16018                           
 16019                           ; BSR set to: 0
 16020                           
 16021                           ; BSR set to: 0
 16022  0140A0  90D8               	bcf	status,0,c
 16023  0140A2  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 16024  0140A4  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 16025  0140A6  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 16026  0140A8  3364               	rrcf	___llmod@divisor& (0+255),f,b
 16027                           
 16028                           ; BSR set to: 0
 16029  0140AA  2F68               	decfsz	___llmod@counter& (0+255),f,b
 16030  0140AC  D7E7               	goto	u11740
 16031  0140AE                     l3331:
 16032                           
 16033                           ; BSR set to: 0
 16034                           
 16035                           ; BSR set to: 0
 16036  0140AE  C060  F060         	movff	___llmod@dividend,?___llmod
 16037  0140B2  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 16038  0140B6  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 16039  0140BA  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 16040                           
 16041                           ; BSR set to: 0
 16042  0140BE  0012               	return		;funcret
 16043  0140C0                     __end_of___llmod:
 16044                           	opt stack 0
 16045                           tblptru	equ	0xFF8
 16046                           tblptrh	equ	0xFF7
 16047                           tblptrl	equ	0xFF6
 16048                           tablat	equ	0xFF5
 16049                           prodh	equ	0xFF4
 16050                           prodl	equ	0xFF3
 16051                           postinc0	equ	0xFEE
 16052                           wreg	equ	0xFE8
 16053                           postdec1	equ	0xFE5
 16054                           plusw1	equ	0xFE3
 16055                           fsr1h	equ	0xFE2
 16056                           fsr1l	equ	0xFE1
 16057                           indf2	equ	0xFDF
 16058                           postinc2	equ	0xFDE
 16059                           plusw2	equ	0xFDB
 16060                           fsr2h	equ	0xFDA
 16061                           fsr2l	equ	0xFD9
 16062                           status	equ	0xFD8
 16063                           
 16064 ;; *************** function ___lldiv *****************
 16065 ;; Defined at:
 16066 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 16067 ;; Parameters:    Size  Location     Type
 16068 ;;  dividend        4    0[BANK0 ] unsigned long 
 16069 ;;  divisor         4    4[BANK0 ] unsigned long 
 16070 ;; Auto vars:     Size  Location     Type
 16071 ;;  quotient        4    8[BANK0 ] unsigned long 
 16072 ;;  counter         1   12[BANK0 ] unsigned char 
 16073 ;; Return value:  Size  Location     Type
 16074 ;;                  4    0[BANK0 ] unsigned long 
 16075 ;; Registers used:
 16076 ;;		wreg, status,2, status,0
 16077 ;; Tracked objects:
 16078 ;;		On entry : 0/0
 16079 ;;		On exit  : 0/0
 16080 ;;		Unchanged: 0/0
 16081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16082 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16083 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16085 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16086 ;;Total ram usage:       13 bytes
 16087 ;; Hardware stack levels used:    1
 16088 ;; Hardware stack levels required when called:   10
 16089 ;; This function calls:
 16090 ;;		Nothing
 16091 ;; This function is called by:
 16092 ;;		_ultoa
 16093 ;; This function uses a non-reentrant model
 16094 ;;
 16095                           
 16096                           	psect	text58
 16097  0138F8                     __ptext58:
 16098                           	opt stack 0
 16099  0138F8                     ___lldiv:
 16100                           	opt stack 15
 16101                           
 16102                           ; BSR set to: 0
 16103                           ;incstack = 0
 16104  0138F8  0E00               	movlw	0
 16105  0138FA  0100               	movlb	0	; () banked
 16106  0138FC  6F68               	movwf	___lldiv@quotient& (0+255),b
 16107  0138FE  0E00               	movlw	0
 16108  013900  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 16109  013902  0E00               	movlw	0
 16110  013904  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 16111  013906  0E00               	movlw	0
 16112  013908  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 16113                           
 16114                           ; BSR set to: 0
 16115  01390A  5164               	movf	___lldiv@divisor& (0+255),w,b
 16116  01390C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 16117  01390E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 16118  013910  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 16119  013912  B4D8               	btfsc	status,2,c
 16120  013914  D02A               	goto	l2950
 16121                           
 16122                           ; BSR set to: 0
 16123  013916  0E01               	movlw	1
 16124  013918  6F6C               	movwf	___lldiv@counter& (0+255),b
 16125  01391A  D006               	goto	l2945
 16126  01391C                     
 16127                           ; BSR set to: 0
 16128                           
 16129                           ; BSR set to: 0
 16130  01391C  90D8               	bcf	status,0,c
 16131  01391E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 16132  013920  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 16133  013922  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 16134  013924  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 16135  013926  2B6C               	incf	___lldiv@counter& (0+255),f,b
 16136  013928                     l2945:
 16137                           
 16138                           ; BSR set to: 0
 16139                           
 16140                           ; BSR set to: 0
 16141  013928  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 16142  01392A  D7F8               	goto	l2946
 16143  01392C                     u11710:
 16144                           
 16145                           ; BSR set to: 0
 16146                           
 16147                           ; BSR set to: 0
 16148                           
 16149                           ; BSR set to: 0
 16150  01392C  90D8               	bcf	status,0,c
 16151  01392E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 16152  013930  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 16153  013932  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 16154  013934  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 16155                           
 16156                           ; BSR set to: 0
 16157  013936  5164               	movf	___lldiv@divisor& (0+255),w,b
 16158  013938  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 16159  01393A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16160  01393C  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 16161  01393E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16162  013940  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 16163  013942  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16164  013944  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 16165  013946  A0D8               	btfss	status,0,c
 16166  013948  D009               	goto	l2949
 16167                           
 16168                           ; BSR set to: 0
 16169  01394A  5164               	movf	___lldiv@divisor& (0+255),w,b
 16170  01394C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 16171  01394E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16172  013950  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 16173  013952  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16174  013954  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 16175  013956  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16176  013958  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 16177                           
 16178                           ; BSR set to: 0
 16179  01395A  8168               	bsf	___lldiv@quotient& (0+255),0,b
 16180  01395C                     l2949:
 16181                           
 16182                           ; BSR set to: 0
 16183                           
 16184                           ; BSR set to: 0
 16185  01395C  90D8               	bcf	status,0,c
 16186  01395E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16187  013960  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16188  013962  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16189  013964  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 16190                           
 16191                           ; BSR set to: 0
 16192  013966  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 16193  013968  D7E1               	goto	u11710
 16194  01396A                     l2950:
 16195                           
 16196                           ; BSR set to: 0
 16197                           
 16198                           ; BSR set to: 0
 16199  01396A  C068  F060         	movff	___lldiv@quotient,?___lldiv
 16200  01396E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 16201  013972  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 16202  013976  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 16203                           
 16204                           ; BSR set to: 0
 16205  01397A  0012               	return		;funcret
 16206  01397C                     __end_of___lldiv:
 16207                           	opt stack 0
 16208                           tblptru	equ	0xFF8
 16209                           tblptrh	equ	0xFF7
 16210                           tblptrl	equ	0xFF6
 16211                           tablat	equ	0xFF5
 16212                           prodh	equ	0xFF4
 16213                           prodl	equ	0xFF3
 16214                           postinc0	equ	0xFEE
 16215                           wreg	equ	0xFE8
 16216                           postdec1	equ	0xFE5
 16217                           plusw1	equ	0xFE3
 16218                           fsr1h	equ	0xFE2
 16219                           fsr1l	equ	0xFE1
 16220                           indf2	equ	0xFDF
 16221                           postinc2	equ	0xFDE
 16222                           plusw2	equ	0xFDB
 16223                           fsr2h	equ	0xFDA
 16224                           fsr2l	equ	0xFD9
 16225                           status	equ	0xFD8
 16226                           
 16227 ;; *************** function _configFile_readDefault *****************
 16228 ;; Defined at:
 16229 ;;		line 209 in file "config_file.c"
 16230 ;; Parameters:    Size  Location     Type
 16231 ;;		None
 16232 ;; Auto vars:     Size  Location     Type
 16233 ;;		None
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  1    wreg      void 
 16236 ;; Registers used:
 16237 ;;		wreg, status,2
 16238 ;; Tracked objects:
 16239 ;;		On entry : 0/0
 16240 ;;		On exit  : 0/0
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16247 ;;Total ram usage:        0 bytes
 16248 ;; Hardware stack levels used:    1
 16249 ;; Hardware stack levels required when called:   10
 16250 ;; This function calls:
 16251 ;;		Nothing
 16252 ;; This function is called by:
 16253 ;;		_system_init
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text59
 16258  014124                     __ptext59:
 16259                           	opt stack 0
 16260  014124                     _configFile_readDefault:
 16261                           	opt stack 19
 16262                           
 16263                           ;config_file.c: 211: config.full_circle_in_steps = 576000;
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;incstack = 0
 16267  014124  0E00               	movlw	0
 16268  014126  0101               	movlb	1	; () banked
 16269  014128  6FA1               	movwf	_config& (0+255),b
 16270  01412A  0ECA               	movlw	202
 16271  01412C  6FA2               	movwf	(_config+1)& (0+255),b
 16272  01412E  0E08               	movlw	8
 16273  014130  6FA3               	movwf	(_config+2)& (0+255),b
 16274  014132  0E00               	movlw	0
 16275  014134  6FA4               	movwf	(_config+3)& (0+255),b
 16276                           
 16277                           ;config_file.c: 212: config.inverse_direction = 1;
 16278  014136  0E01               	movlw	1
 16279  014138  6FA5               	movwf	(_config+4)& (0+255),b
 16280                           
 16281                           ;config_file.c: 213: config.overshoot_in_steps = 6400;
 16282  01413A  0E19               	movlw	25
 16283  01413C  6FA7               	movwf	(_config+6)& (0+255),b
 16284  01413E  0E00               	movlw	0
 16285  014140  6FA6               	movwf	(_config+5)& (0+255),b
 16286                           
 16287                           ;config_file.c: 214: config.overshoot_cost_in_steps = 3000;
 16288  014142  0E0B               	movlw	11
 16289  014144  6FA9               	movwf	(_config+8)& (0+255),b
 16290  014146  0EB8               	movlw	184
 16291  014148  6FA8               	movwf	(_config+7)& (0+255),b
 16292                           
 16293                           ;config_file.c: 215: config.minimum_speed = 1;
 16294  01414A  0E00               	movlw	0
 16295  01414C  6FAB               	movwf	(_config+10)& (0+255),b
 16296  01414E  0E01               	movlw	1
 16297  014150  6FAA               	movwf	(_config+9)& (0+255),b
 16298                           
 16299                           ;config_file.c: 216: config.maximum_speed = 380;
 16300  014152  0E01               	movlw	1
 16301  014154  6FAD               	movwf	(_config+12)& (0+255),b
 16302  014156  0E7C               	movlw	124
 16303  014158  6FAC               	movwf	(_config+11)& (0+255),b
 16304                           
 16305                           ;config_file.c: 217: config.maximum_speed_arc = 305;
 16306  01415A  0E01               	movlw	1
 16307  01415C  6FB1               	movwf	(_config+16)& (0+255),b
 16308  01415E  0E31               	movlw	49
 16309  014160  6FB0               	movwf	(_config+15)& (0+255),b
 16310                           
 16311                           ;config_file.c: 218: config.maximum_speed_manual = 305;
 16312  014162  0E01               	movlw	1
 16313  014164  6FB5               	movwf	(_config+20)& (0+255),b
 16314  014166  0E31               	movlw	49
 16315  014168  6FB4               	movwf	(_config+19)& (0+255),b
 16316                           
 16317                           ;config_file.c: 219: config.use_ccw_limit = 0;
 16318  01416A  0E00               	movlw	0
 16319  01416C  6FBA               	movwf	(_config+25)& (0+255),b
 16320                           
 16321                           ;config_file.c: 220: config.ccw_limit = 35500;
 16322  01416E  0E8A               	movlw	138
 16323  014170  6FBC               	movwf	(_config+27)& (0+255),b
 16324  014172  0EAC               	movlw	172
 16325  014174  6FBB               	movwf	(_config+26)& (0+255),b
 16326                           
 16327                           ;config_file.c: 221: config.use_cw_limit = 0;
 16328  014176  0E00               	movlw	0
 16329  014178  6FB7               	movwf	(_config+22)& (0+255),b
 16330                           
 16331                           ;config_file.c: 222: config.cw_limit = 500;
 16332  01417A  0E01               	movlw	1
 16333  01417C  6FB9               	movwf	(_config+24)& (0+255),b
 16334  01417E  0EF4               	movlw	244
 16335  014180  6FB8               	movwf	(_config+23)& (0+255),b
 16336                           
 16337                           ;config_file.c: 223: config.beep_duration = 10;
 16338  014182  0E0A               	movlw	10
 16339  014184  6FB6               	movwf	(_config+21)& (0+255),b
 16340                           
 16341                           ; BSR set to: 1
 16342  014186  0012               	return		;funcret
 16343  014188                     __end_of_configFile_readDefault:
 16344                           	opt stack 0
 16345                           tblptru	equ	0xFF8
 16346                           tblptrh	equ	0xFF7
 16347                           tblptrl	equ	0xFF6
 16348                           tablat	equ	0xFF5
 16349                           prodh	equ	0xFF4
 16350                           prodl	equ	0xFF3
 16351                           postinc0	equ	0xFEE
 16352                           wreg	equ	0xFE8
 16353                           postdec1	equ	0xFE5
 16354                           plusw1	equ	0xFE3
 16355                           fsr1h	equ	0xFE2
 16356                           fsr1l	equ	0xFE1
 16357                           indf2	equ	0xFDF
 16358                           postinc2	equ	0xFDE
 16359                           plusw2	equ	0xFDB
 16360                           fsr2h	equ	0xFDA
 16361                           fsr2l	equ	0xFD9
 16362                           status	equ	0xFD8
 16363                           
 16364 ;; *************** function _configFile_read *****************
 16365 ;; Defined at:
 16366 ;;		line 227 in file "config_file.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;		None
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 16371 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 16372 ;;  position        4   56[BANK1 ] unsigned long 
 16373 ;;  file_size       4   51[BANK1 ] unsigned long 
 16374 ;;  file_number     1   55[BANK1 ] unsigned char 
 16375 ;; Return value:  Size  Location     Type
 16376 ;;                  1    wreg      void 
 16377 ;; Registers used:
 16378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16379 ;; Tracked objects:
 16380 ;;		On entry : 0/0
 16381 ;;		On exit  : 0/0
 16382 ;;		Unchanged: 0/0
 16383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16385 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16386 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16387 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16388 ;;Total ram usage:       60 bytes
 16389 ;; Hardware stack levels used:    1
 16390 ;; Hardware stack levels required when called:   19
 16391 ;; This function calls:
 16392 ;;		__get_item
 16393 ;;		__parse_item
 16394 ;;		_fat_find_file
 16395 ;;		_fat_get_file_size
 16396 ;;		_fat_read_from_file
 16397 ;; This function is called by:
 16398 ;;		_system_init
 16399 ;; This function uses a non-reentrant model
 16400 ;;
 16401                           
 16402                           	psect	text60
 16403  00F638                     __ptext60:
 16404                           	opt stack 0
 16405  00F638                     _configFile_read:
 16406                           	opt stack 10
 16407                           
 16408                           ;config_file.c: 229: uint8_t file_number;;config_file.c: 230: uint32_t file_size;;config
      +                          _file.c: 231: uint32_t position;;config_file.c: 232: char item_string[31];;config_file.c
      +                          : 233: char value_string[12];;config_file.c: 236: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 16409                           
 16410                           ; BSR set to: 1
 16411                           ;incstack = 0
 16412  00F638  0EC8               	movlw	low _configFile_name
 16413  00F63A  0100               	movlb	0	; () banked
 16414  00F63C  6F8B               	movwf	fat_find_file@name& (0+255),b
 16415  00F63E  0E02               	movlw	high _configFile_name
 16416  00F640  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 16417  00F642  0ED3               	movlw	low _configFile_extention
 16418  00F644  6F8D               	movwf	fat_find_file@extension& (0+255),b
 16419  00F646  0E02               	movlw	high _configFile_extention
 16420  00F648  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 16421  00F64A  EC8E  F08D         	call	_fat_find_file	;wreg free
 16422  00F64E  0101               	movlb	1	; () banked
 16423  00F650  6FFA               	movwf	configFile_read@file_number& (0+255),b
 16424                           
 16425                           ; BSR set to: 1
 16426                           ;config_file.c: 237: if(file_number==0xFF)
 16427  00F652  29FA               	incf	configFile_read@file_number& (0+255),w,b
 16428  00F654  B4D8               	btfsc	status,2,c
 16429  00F656  0012               	return	
 16430                           
 16431                           ; BSR set to: 1
 16432                           ;config_file.c: 241: };config_file.c: 244: file_size = fat_get_file_size(file_number);
 16433                           
 16434                           ; BSR set to: 1
 16435                           
 16436                           ; BSR set to: 1
 16437                           ;config_file.c: 238: {;config_file.c: 240: return;
 16438  00F658  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16439  00F65A  ECF8  F09D         	call	_fat_get_file_size
 16440  00F65E  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 16441  00F662  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 16442  00F666  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 16443  00F66A  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 16444                           
 16445                           ;config_file.c: 247: position = 0;
 16446  00F66E  0E00               	movlw	0
 16447  00F670  0101               	movlb	1	; () banked
 16448  00F672  6FFB               	movwf	configFile_read@position& (0+255),b
 16449  00F674  0E00               	movlw	0
 16450  00F676  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 16451  00F678  0E00               	movlw	0
 16452  00F67A  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 16453  00F67C  0E00               	movlw	0
 16454  00F67E  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 16455                           
 16456                           ;config_file.c: 248: while((file_size-position)>3)
 16457  00F680  D086               	goto	l2905
 16458  00F682                     
 16459                           ; BSR set to: 1
 16460                           ;config_file.c: 249: {;config_file.c: 250: if((position+45) > file_size)
 16461                           
 16462                           ; BSR set to: 1
 16463  00F682  0E2D               	movlw	45
 16464  00F684  25FB               	addwf	configFile_read@position& (0+255),w,b
 16465  00F686  6FC3               	movwf	??_configFile_read& (0+255),b
 16466  00F688  0E00               	movlw	0
 16467  00F68A  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 16468  00F68C  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 16469  00F68E  0E00               	movlw	0
 16470  00F690  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 16471  00F692  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 16472  00F694  0E00               	movlw	0
 16473  00F696  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 16474  00F698  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 16475  00F69A  51C3               	movf	??_configFile_read& (0+255),w,b
 16476  00F69C  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 16477  00F69E  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 16478  00F6A0  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 16479  00F6A2  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 16480  00F6A4  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 16481  00F6A6  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 16482  00F6A8  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 16483  00F6AA  B0D8               	btfsc	status,0,c
 16484  00F6AC  D035               	goto	l2907
 16485                           
 16486                           ; BSR set to: 1
 16487                           ;config_file.c: 251: {;config_file.c: 253: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 16488  00F6AE  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16489  00F6B2  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16490  00F6B6  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16491  00F6BA  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16492  00F6BE  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16493  00F6C2  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16494  00F6C6  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16495  00F6CA  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16496  00F6CE  1FC3               	comf	??_configFile_read& (0+255),f,b
 16497  00F6D0  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16498  00F6D2  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16499  00F6D4  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16500  00F6D6  2BC3               	incf	??_configFile_read& (0+255),f,b
 16501  00F6D8  0E00               	movlw	0
 16502  00F6DA  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16503  00F6DC  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16504  00F6DE  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16505  00F6E0  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16506  00F6E2  25C3               	addwf	??_configFile_read& (0+255),w,b
 16507  00F6E4  0100               	movlb	0	; () banked
 16508  00F6E6  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16509  00F6E8  0101               	movlb	1	; () banked
 16510  00F6EA  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16511  00F6EC  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16512  00F6EE  0100               	movlb	0	; () banked
 16513  00F6F0  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16514  00F6F2  0101               	movlb	1	; () banked
 16515  00F6F4  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16516  00F6F6  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16517  00F6F8  0100               	movlb	0	; () banked
 16518  00F6FA  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16519  00F6FC  0101               	movlb	1	; () banked
 16520  00F6FE  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16521  00F700  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16522  00F702  0100               	movlb	0	; () banked
 16523  00F704  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16524  00F706  0E00               	movlw	low _ConfigFile_buffer
 16525  00F708  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16526  00F70A  0E08               	movlw	high _ConfigFile_buffer
 16527  00F70C  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16528  00F70E  0101               	movlb	1	; () banked
 16529  00F710  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16530  00F712  EC02  F08E         	call	_fat_read_from_file
 16531                           
 16532                           ;config_file.c: 254: }
 16533  00F716  D019               	goto	l2908
 16534  00F718                     l2907:
 16535                           
 16536                           ;config_file.c: 255: else;config_file.c: 256: {;config_file.c: 258: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 16537  00F718  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16538  00F71C  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16539  00F720  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16540  00F724  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16541  00F728  0E2D               	movlw	45
 16542  00F72A  0100               	movlb	0	; () banked
 16543  00F72C  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16544  00F72E  0E00               	movlw	0
 16545  00F730  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16546  00F732  0E00               	movlw	0
 16547  00F734  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16548  00F736  0E00               	movlw	0
 16549  00F738  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16550  00F73A  0E00               	movlw	low _ConfigFile_buffer
 16551  00F73C  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16552  00F73E  0E08               	movlw	high _ConfigFile_buffer
 16553  00F740  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16554  00F742  0101               	movlb	1	; () banked
 16555  00F744  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16556  00F746  EC02  F08E         	call	_fat_read_from_file
 16557  00F74A                     l2908:
 16558                           
 16559                           ;config_file.c: 259: };config_file.c: 262: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 16560  00F74A  0ECB               	movlw	low configFile_read@item_string
 16561  00F74C  0100               	movlb	0	; () banked
 16562  00F74E  6F60               	movwf	__get_item@item_string& (0+255),b
 16563  00F750  0E01               	movlw	high configFile_read@item_string
 16564  00F752  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 16565  00F754  0EEA               	movlw	low configFile_read@value_string
 16566  00F756  6F62               	movwf	__get_item@value_string& (0+255),b
 16567  00F758  0E01               	movlw	high configFile_read@value_string
 16568  00F75A  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 16569  00F75C  0E00               	movlw	low _ConfigFile_buffer
 16570  00F75E  6F64               	movwf	__get_item@buffer& (0+255),b
 16571  00F760  0E08               	movlw	high _ConfigFile_buffer
 16572  00F762  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 16573  00F764  EC7B  F07D         	call	__get_item	;wreg free
 16574  00F768  0101               	movlb	1	; () banked
 16575  00F76A  6FC3               	movwf	??_configFile_read& (0+255),b
 16576  00F76C  51C3               	movf	??_configFile_read& (0+255),w,b
 16577  00F76E  27FB               	addwf	configFile_read@position& (0+255),f,b
 16578  00F770  0E00               	movlw	0
 16579  00F772  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 16580  00F774  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 16581  00F776  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 16582                           
 16583                           ; BSR set to: 1
 16584                           ;config_file.c: 265: _parse_item(&item_string[0], &value_string[0]);
 16585  00F778  0ECB               	movlw	low configFile_read@item_string
 16586  00F77A  0100               	movlb	0	; () banked
 16587  00F77C  6F7A               	movwf	__parse_item@item_string& (0+255),b
 16588  00F77E  0E01               	movlw	high configFile_read@item_string
 16589  00F780  6F7B               	movwf	(__parse_item@item_string+1)& (0+255),b
 16590  00F782  0EEA               	movlw	low configFile_read@value_string
 16591  00F784  6F7C               	movwf	__parse_item@value_string& (0+255),b
 16592  00F786  0E01               	movlw	high configFile_read@value_string
 16593  00F788  6F7D               	movwf	(__parse_item@value_string+1)& (0+255),b
 16594  00F78A  ECC5  F064         	call	__parse_item	;wreg free
 16595  00F78E                     l2905:
 16596  00F78E  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16597  00F792  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16598  00F796  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16599  00F79A  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16600  00F79E  0101               	movlb	1	; () banked
 16601  00F7A0  1FC3               	comf	??_configFile_read& (0+255),f,b
 16602  00F7A2  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16603  00F7A4  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16604  00F7A6  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16605  00F7A8  2BC3               	incf	??_configFile_read& (0+255),f,b
 16606  00F7AA  0E00               	movlw	0
 16607  00F7AC  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16608  00F7AE  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16609  00F7B0  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16610  00F7B2  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16611  00F7B4  25C3               	addwf	??_configFile_read& (0+255),w,b
 16612  00F7B6  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 16613  00F7B8  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16614  00F7BA  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16615  00F7BC  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 16616  00F7BE  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16617  00F7C0  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16618  00F7C2  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 16619  00F7C4  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16620  00F7C6  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16621  00F7C8  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 16622  00F7CA  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 16623  00F7CC  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 16624  00F7CE  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 16625  00F7D0  E104               	bnz	u16241
 16626  00F7D2  0E04               	movlw	4
 16627  00F7D4  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 16628  00F7D6  A0D8               	btfss	status,0,c
 16629  00F7D8  0012               	return	
 16630  00F7DA                     u16241:
 16631  00F7DA  D753               	goto	l2906
 16632  00F7DC                     __end_of_configFile_read:
 16633                           	opt stack 0
 16634                           tblptru	equ	0xFF8
 16635                           tblptrh	equ	0xFF7
 16636                           tblptrl	equ	0xFF6
 16637                           tablat	equ	0xFF5
 16638                           prodh	equ	0xFF4
 16639                           prodl	equ	0xFF3
 16640                           postinc0	equ	0xFEE
 16641                           wreg	equ	0xFE8
 16642                           postdec1	equ	0xFE5
 16643                           plusw1	equ	0xFE3
 16644                           fsr1h	equ	0xFE2
 16645                           fsr1l	equ	0xFE1
 16646                           indf2	equ	0xFDF
 16647                           postinc2	equ	0xFDE
 16648                           plusw2	equ	0xFDB
 16649                           fsr2h	equ	0xFDA
 16650                           fsr2l	equ	0xFD9
 16651                           status	equ	0xFD8
 16652                           
 16653 ;; *************** function _fat_read_from_file *****************
 16654 ;; Defined at:
 16655 ;;		line 751 in file "fat16.c"
 16656 ;; Parameters:    Size  Location     Type
 16657 ;;  file_number     1    wreg     unsigned char 
 16658 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16659 ;;  length          4  109[BANK0 ] unsigned long 
 16660 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16661 ;;		 -> ConfigFile_buffer(512), 
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;  file_number     1  119[BANK0 ] unsigned char 
 16664 ;;  root           32  125[BANK0 ] struct .
 16665 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16666 ;;  cluster         2  121[BANK0 ] unsigned int 
 16667 ;;  return_code     1  120[BANK0 ] unsigned char 
 16668 ;; Return value:  Size  Location     Type
 16669 ;;                  1    wreg      unsigned char 
 16670 ;; Registers used:
 16671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16672 ;; Tracked objects:
 16673 ;;		On entry : 0/0
 16674 ;;		On exit  : 0/0
 16675 ;;		Unchanged: 0/0
 16676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16677 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16678 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16679 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16680 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16681 ;;Total ram usage:       52 bytes
 16682 ;; Hardware stack levels used:    1
 16683 ;; Hardware stack levels required when called:   18
 16684 ;; This function calls:
 16685 ;;		_fat_get_file_information
 16686 ;;		_fat_read_from_file_fast
 16687 ;; This function is called by:
 16688 ;;		_configFile_read
 16689 ;; This function uses a non-reentrant model
 16690 ;;
 16691                           
 16692                           	psect	text61
 16693  011C04                     __ptext61:
 16694                           	opt stack 0
 16695  011C04                     _fat_read_from_file:
 16696                           	opt stack 10
 16697                           
 16698                           ; BSR set to: 1
 16699                           ;incstack = 0
 16700                           ;fat_read_from_file@file_number stored from wreg
 16701  011C04  0100               	movlb	0	; () banked
 16702  011C06  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16703                           
 16704                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16705  011C08  0EDD               	movlw	low fat_read_from_file@root
 16706  011C0A  0100               	movlb	0	; () banked
 16707  011C0C  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16708  011C0E  0E00               	movlw	high fat_read_from_file@root
 16709  011C10  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16710  011C12  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16711  011C14  ECBB  F09D         	call	_fat_get_file_information
 16712  011C18  0100               	movlb	0	; () banked
 16713  011C1A  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;fat16.c: 760: if(return_code!=0x00)
 16717  011C1C  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16718  011C1E  A4D8               	btfss	status,2,c
 16719  011C20  0012               	return	
 16720                           
 16721                           ; BSR set to: 0
 16722                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 16723                           
 16724                           ; BSR set to: 0
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;fat16.c: 761: {;fat16.c: 763: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16728  011C22  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16729  011C24  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16730  011C26  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16731  011C28  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16732  011C2A  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16733  011C2C  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16734  011C2E  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16735  011C30  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16736  011C32  A0D8               	btfss	status,0,c
 16737  011C34  0012               	return	
 16738                           
 16739                           ; BSR set to: 0
 16740                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 16741                           
 16742                           ; BSR set to: 0
 16743                           
 16744                           ; BSR set to: 0
 16745                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16746  011C36  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16747  011C38  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16748  011C3A  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16749  011C3C  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16750  011C3E  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16751  011C40  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16752  011C42  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16753  011C44  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16754  011C46  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16755  011C48  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16756  011C4A  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16757  011C4C  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16758  011C4E  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16759  011C50  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16760  011C52  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16761  011C54  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16762  011C56  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16763  011C58  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16764  011C5A  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16765  011C5C  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16766  011C5E  B0D8               	btfsc	status,0,c
 16767  011C60  D01D               	goto	l1877
 16768                           
 16769                           ; BSR set to: 0
 16770                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 16771  011C62  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16772  011C66  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16773  011C6A  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16774  011C6E  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16775  011C72  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16776  011C74  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16777  011C76  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16778  011C78  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16779  011C7A  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16780  011C7C  0E00               	movlw	0
 16781  011C7E  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16782  011C80  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16783  011C82  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16784  011C84  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16785  011C86  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16786  011C88  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16787  011C8A  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16788  011C8C  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16789  011C8E  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16790  011C90  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16791  011C92  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16792  011C94  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16793  011C96  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16794  011C98  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16795  011C9A  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16796  011C9C                     l1877:
 16797                           
 16798                           ; BSR set to: 0
 16799                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 16800                           
 16801                           ; BSR set to: 0
 16802  011C9C  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16803  011CA0  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;fat16.c: 781: cluster_number = 0;
 16807  011CA4  0E00               	movlw	0
 16808  011CA6  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16809  011CA8  0E00               	movlw	0
 16810  011CAA  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16814  011CAC  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16815  011CB0  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16816  011CB4  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16817  011CB8  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16818  011CBC  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16819  011CC0  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16820  011CC4  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16821  011CC8  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16822  011CCC  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16823  011CD0  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16824  011CD4  0ED9               	movlw	low fat_read_from_file@cluster
 16825  011CD6  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16826  011CD8  0E00               	movlw	high fat_read_from_file@cluster
 16827  011CDA  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16828  011CDC  0EDB               	movlw	low fat_read_from_file@cluster_number
 16829  011CDE  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16830  011CE0  0E00               	movlw	high fat_read_from_file@cluster_number
 16831  011CE2  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16832  011CE4  EC4B  F074         	call	_fat_read_from_file_fast	;wreg free
 16833  011CE8  0012               	return	
 16834  011CEA                     __end_of_fat_read_from_file:
 16835                           	opt stack 0
 16836                           tblptru	equ	0xFF8
 16837                           tblptrh	equ	0xFF7
 16838                           tblptrl	equ	0xFF6
 16839                           tablat	equ	0xFF5
 16840                           prodh	equ	0xFF4
 16841                           prodl	equ	0xFF3
 16842                           postinc0	equ	0xFEE
 16843                           wreg	equ	0xFE8
 16844                           postdec1	equ	0xFE5
 16845                           plusw1	equ	0xFE3
 16846                           fsr1h	equ	0xFE2
 16847                           fsr1l	equ	0xFE1
 16848                           indf2	equ	0xFDF
 16849                           postinc2	equ	0xFDE
 16850                           plusw2	equ	0xFDB
 16851                           fsr2h	equ	0xFDA
 16852                           fsr2l	equ	0xFD9
 16853                           status	equ	0xFD8
 16854                           
 16855 ;; *************** function _fat_read_from_file_fast *****************
 16856 ;; Defined at:
 16857 ;;		line 787 in file "fat16.c"
 16858 ;; Parameters:    Size  Location     Type
 16859 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16860 ;;  length          4   69[BANK0 ] unsigned long 
 16861 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16862 ;;		 -> ConfigFile_buffer(512), 
 16863 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16864 ;;		 -> fat_read_from_file@cluster(2), 
 16865 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16866 ;;		 -> fat_read_from_file@cluster_number(2), 
 16867 ;; Auto vars:     Size  Location     Type
 16868 ;;  position        4  101[BANK0 ] unsigned long 
 16869 ;;  read_length     2   99[BANK0 ] unsigned int 
 16870 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16871 ;;  offset          2   95[BANK0 ] unsigned int 
 16872 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16873 ;;  sector          2   91[BANK0 ] unsigned int 
 16874 ;; Return value:  Size  Location     Type
 16875 ;;                  1    wreg      unsigned char 
 16876 ;; Registers used:
 16877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16878 ;; Tracked objects:
 16879 ;;		On entry : 0/0
 16880 ;;		On exit  : 0/0
 16881 ;;		Unchanged: 0/0
 16882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16883 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16884 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16885 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16886 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16887 ;;Total ram usage:       40 bytes
 16888 ;; Hardware stack levels used:    1
 16889 ;; Hardware stack levels required when called:   17
 16890 ;; This function calls:
 16891 ;;		__data_sector_from_cluster
 16892 ;;		__find_nth_cluster
 16893 ;;		__read_fat
 16894 ;;		_flash_partial_read
 16895 ;; This function is called by:
 16896 ;;		_fat_read_from_file
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900                           	psect	text62
 16901  00E896                     __ptext62:
 16902                           	opt stack 0
 16903  00E896                     _fat_read_from_file_fast:
 16904                           	opt stack 10
 16905                           
 16906                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16907                           
 16908                           ;incstack = 0
 16909  00E896  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16910  00E89A  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16911  00E89E  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16912  00E8A2  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16913  00E8A6  0E0A               	movlw	10
 16914  00E8A8  D006               	goto	u13320
 16915  00E8AA                     u13325:
 16916  00E8AA  0100               	movlb	0	; () banked
 16917  00E8AC  90D8               	bcf	status,0,c
 16918  00E8AE  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16919  00E8B0  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16920  00E8B2  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16921  00E8B4  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16922  00E8B6                     u13320:
 16923  00E8B6  2EE8               	decfsz	wreg,f,c
 16924  00E8B8  D7F8               	goto	u13325
 16925  00E8BA  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16926  00E8BE  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16927                           
 16928                           ; BSR set to: 0
 16929                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 16930  00E8C2  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16931  00E8C6  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16932  00E8CA  50DE               	movf	postinc2,w,c
 16933  00E8CC  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16934  00E8CE  50DE               	movf	postinc2,w,c
 16935  00E8D0  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16936  00E8D2  B0D8               	btfsc	status,0,c
 16937  00E8D4  D002               	goto	l1880
 16938                           
 16939                           ; BSR set to: 0
 16940                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 16941  00E8D6  0EFF               	movlw	255
 16942                           
 16943                           ; BSR set to: 0
 16944  00E8D8  0012               	return	
 16945  00E8DA                     l1880:
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16949                           
 16950                           ; BSR set to: 0
 16951  00E8DA  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16952  00E8DE  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16953  00E8E2  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16954  00E8E6  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16955  00E8EA  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16956  00E8EE  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16957  00E8F2  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16958  00E8F6  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16959  00E8FA  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16960  00E8FC  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16961  00E8FE  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16962  00E900  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16963  00E902  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16964  00E904  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16965  00E906  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16966  00E908  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16967  00E90A  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16968  00E90C  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16969  00E90E  ECFB  F098         	call	__find_nth_cluster	;wreg free
 16970  00E912  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16971  00E916  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16972  00E91A  0100               	movlb	0	; () banked
 16973  00E91C  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16974  00E920  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 16978  00E924  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16979  00E928  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16980  00E92C  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16981  00E930  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;fat16.c: 813: working_cluster = (*cluster);
 16985  00E934  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16986  00E938  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16987  00E93C  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16988  00E940  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16989                           
 16990                           ; BSR set to: 0
 16991                           ;fat16.c: 816: position = (needed_cluster << 9);
 16992  00E944  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16993  00E948  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16994  00E94C  0E09               	movlw	9
 16995  00E94E                     u13345:
 16996  00E94E  90D8               	bcf	status,0,c
 16997  00E950  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16998  00E952  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16999  00E954  2EE8               	decfsz	wreg,f,c
 17000  00E956  D7FB               	goto	u13345
 17001  00E958  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 17002  00E95C  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 17003  00E960  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 17004  00E962  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;fat16.c: 817: offset = start_byte - position;
 17008  00E964  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17009  00E968  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17010  00E96C  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17011  00E96E  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17012  00E970  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17013  00E972  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17014  00E974  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 17015  00E976  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17016  00E978  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17017  00E97A  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 17018  00E97C  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17019  00E97E  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;fat16.c: 820: position = 0;
 17023  00E980  0E00               	movlw	0
 17024  00E982  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 17025  00E984  0E00               	movlw	0
 17026  00E986  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 17027  00E988  0E00               	movlw	0
 17028  00E98A  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 17029  00E98C  0E00               	movlw	0
 17030  00E98E  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 17031                           
 17032                           ;fat16.c: 821: while(position < length)
 17033  00E990  D089               	goto	l1882
 17034  00E992                     
 17035                           ; BSR set to: 0
 17036                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 17037                           
 17038                           ; BSR set to: 0
 17039  00E992  0E02               	movlw	2
 17040  00E994  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 17041  00E996  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 17042  00E998  A4D8               	btfss	status,2,c
 17043  00E99A  D00F               	goto	l1884
 17044                           
 17045                           ; BSR set to: 0
 17046                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 17047  00E99C  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 17048  00E9A0  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 17049  00E9A4  EC21  F0A3         	call	__read_fat	;wreg free
 17050  00E9A8  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 17051  00E9AC  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 17052                           
 17053                           ;fat16.c: 828: offset = 0;
 17054  00E9B0  0E00               	movlw	0
 17055  00E9B2  0100               	movlb	0	; () banked
 17056  00E9B4  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17057  00E9B6  0E00               	movlw	0
 17058  00E9B8  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17059  00E9BA                     l1884:
 17060                           
 17061                           ; BSR set to: 0
 17062                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 17063                           
 17064                           ; BSR set to: 0
 17065  00E9BA  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 17066  00E9BE  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 17067  00E9C2  ECAB  F0AB         	call	__data_sector_from_cluster	;wreg free
 17068  00E9C6  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 17069  00E9CA  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 17070                           
 17071                           ;fat16.c: 835: read_length = 512 - offset;
 17072  00E9CE  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 17073  00E9D2  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 17074  00E9D6  0100               	movlb	0	; () banked
 17075  00E9D8  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17076  00E9DA  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17077  00E9DC  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17078  00E9DE  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17079  00E9E0  0E00               	movlw	0
 17080  00E9E2  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17081  00E9E4  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17082  00E9E6  0E02               	movlw	2
 17083  00E9E8  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17084  00E9EA  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17085                           
 17086                           ; BSR set to: 0
 17087                           ;fat16.c: 836: if(read_length > (length-position))
 17088  00E9EC  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17089  00E9EE  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 17090  00E9F0  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17091  00E9F2  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 17092  00E9F4  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 17093  00E9F6  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 17094  00E9F8  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 17095  00E9FC  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 17096  00EA00  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 17097  00EA04  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 17098  00EA08  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17099  00EA0A  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17100  00EA0C  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17101  00EA0E  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17102  00EA10  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17103  00EA12  0E00               	movlw	0
 17104  00EA14  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17105  00EA16  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17106  00EA18  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17107  00EA1A  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17108  00EA1C  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 17109  00EA1E  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 17110  00EA20  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17111  00EA22  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 17112  00EA24  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 17113  00EA26  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17114  00EA28  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 17115  00EA2A  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 17116  00EA2C  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17117  00EA2E  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 17118  00EA30  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 17119  00EA32  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 17120  00EA34  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 17121  00EA36  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17122  00EA38  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 17123  00EA3A  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 17124  00EA3C  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 17125  00EA3E  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 17126  00EA40  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 17127  00EA42  B0D8               	btfsc	status,0,c
 17128  00EA44  D00E               	goto	l1885
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 17132  00EA46  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17133  00EA4A  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17134  00EA4E  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17135  00EA50  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17136  00EA52  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17137  00EA54  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17138  00EA56  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17139  00EA58  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17140  00EA5A  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17141  00EA5C  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17142  00EA5E  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17143  00EA60  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17144  00EA62                     l1885:
 17145                           
 17146                           ; BSR set to: 0
 17147                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 17148                           
 17149                           ; BSR set to: 0
 17150  00EA62  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 17151  00EA66  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 17152  00EA6A  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 17153  00EA6E  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 17154  00EA72  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 17155  00EA76  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 17156  00EA7A  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 17157  00EA7C  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 17158  00EA7E  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17159  00EA80  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17160  00EA82  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 17161  00EA84  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17162  00EA86  EC89  F0AA         	call	_flash_partial_read	;wreg free
 17163                           
 17164                           ;fat16.c: 846: position += read_length;
 17165  00EA8A  0100               	movlb	0	; () banked
 17166  00EA8C  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17167  00EA8E  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 17168  00EA90  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17169  00EA92  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 17170  00EA94  0E00               	movlw	0
 17171  00EA96  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 17172  00EA98  0E00               	movlw	0
 17173  00EA9A  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 17174                           
 17175                           ; BSR set to: 0
 17176                           ;fat16.c: 847: offset += read_length;
 17177  00EA9C  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17178  00EA9E  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 17179  00EAA0  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17180  00EAA2  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 17181  00EAA4                     l1882:
 17182                           
 17183                           ; BSR set to: 0
 17184                           
 17185                           ; BSR set to: 0
 17186  00EAA4  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17187  00EAA6  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 17188  00EAA8  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17189  00EAAA  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17190  00EAAC  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17191  00EAAE  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 17192  00EAB0  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17193  00EAB2  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 17194  00EAB4  A0D8               	btfss	status,0,c
 17195  00EAB6  D76D               	goto	l1883
 17196                           
 17197                           ; BSR set to: 0
 17198                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 17199                           
 17200                           ; BSR set to: 0
 17201  00EAB8  0E00               	movlw	0
 17202  00EABA  0012               	return	
 17203  00EABC                     __end_of_fat_read_from_file_fast:
 17204                           	opt stack 0
 17205                           tblptru	equ	0xFF8
 17206                           tblptrh	equ	0xFF7
 17207                           tblptrl	equ	0xFF6
 17208                           tablat	equ	0xFF5
 17209                           prodh	equ	0xFF4
 17210                           prodl	equ	0xFF3
 17211                           postinc0	equ	0xFEE
 17212                           wreg	equ	0xFE8
 17213                           postdec1	equ	0xFE5
 17214                           plusw1	equ	0xFE3
 17215                           fsr1h	equ	0xFE2
 17216                           fsr1l	equ	0xFE1
 17217                           indf2	equ	0xFDF
 17218                           postinc2	equ	0xFDE
 17219                           postdec2	equ	0xFDD
 17220                           plusw2	equ	0xFDB
 17221                           fsr2h	equ	0xFDA
 17222                           fsr2l	equ	0xFD9
 17223                           status	equ	0xFD8
 17224                           
 17225 ;; *************** function __find_nth_cluster *****************
 17226 ;; Defined at:
 17227 ;;		line 182 in file "fat16.c"
 17228 ;; Parameters:    Size  Location     Type
 17229 ;;  cluster         2   55[BANK0 ] unsigned int 
 17230 ;;  n               2   57[BANK0 ] unsigned int 
 17231 ;; Auto vars:     Size  Location     Type
 17232 ;;  sector          2   63[BANK0 ] unsigned int 
 17233 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 17234 ;;  offset          2   59[BANK0 ] unsigned int 
 17235 ;; Return value:  Size  Location     Type
 17236 ;;                  2   55[BANK0 ] unsigned int 
 17237 ;; Registers used:
 17238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17239 ;; Tracked objects:
 17240 ;;		On entry : 0/0
 17241 ;;		On exit  : 0/0
 17242 ;;		Unchanged: 0/0
 17243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17244 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17245 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17247 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17248 ;;Total ram usage:       10 bytes
 17249 ;; Hardware stack levels used:    1
 17250 ;; Hardware stack levels required when called:   16
 17251 ;; This function calls:
 17252 ;;		__fat_offset_from_cluster
 17253 ;;		__fat_sector_from_cluster
 17254 ;;		__read_fat
 17255 ;;		__read_value_from_offset
 17256 ;;		_flash_sector_read
 17257 ;; This function is called by:
 17258 ;;		_fat_read_from_file_fast
 17259 ;;		_fat_modify_file
 17260 ;;		_fat_copy_sector_to_buffer
 17261 ;; This function uses a non-reentrant model
 17262 ;;
 17263                           
 17264                           	psect	text63
 17265  0131F6                     __ptext63:
 17266                           	opt stack 0
 17267  0131F6                     __find_nth_cluster:
 17268                           	opt stack 11
 17269                           
 17270                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 17271                           
 17272                           ; BSR set to: 0
 17273                           ;incstack = 0
 17274  0131F6  0E00               	movlw	0
 17275  0131F8  0100               	movlb	0	; () banked
 17276  0131FA  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 17277  0131FC  0E00               	movlw	0
 17278  0131FE  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 17279                           
 17280                           ; BSR set to: 0
 17281                           ;fat16.c: 189: if(n==1)
 17282  013200  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 17283  013202  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17284  013204  A4D8               	btfss	status,2,c
 17285  013206  D040               	goto	l1767
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 17289  013208  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 17290  01320C  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 17291  013210  EC21  F0A3         	call	__read_fat	;wreg free
 17292  013214  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 17293  013218  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 17294  01321C  0012               	return	
 17295  01321E                     
 17296                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 17297  01321E  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 17298  013222  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 17299  013226  EC45  F0AB         	call	__fat_sector_from_cluster	;wreg free
 17300  01322A  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 17301  01322E  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 17302                           
 17303                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 17304  013232  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 17305  013236  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 17306  01323A  EC52  F0AB         	call	__fat_offset_from_cluster	;wreg free
 17307  01323E  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 17308  013242  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 17309                           
 17310                           ;fat16.c: 201: if(sector != sector_in_buffer)
 17311  013246  0100               	movlb	0	; () banked
 17312  013248  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 17313  01324A  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 17314  01324C  E104               	bnz	u12530
 17315  01324E  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 17316  013250  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 17317  013252  B4D8               	btfsc	status,2,c
 17318  013254  D00A               	goto	l1769
 17319  013256                     u12530:
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 17323  013256  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 17324  01325A  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 17325  01325E  0E00               	movlw	low _buffer
 17326  013260  6F89               	movwf	flash_sector_read@data& (0+255),b
 17327  013262  0E0A               	movlw	high _buffer
 17328  013264  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17329  013266  EC75  F0AA         	call	_flash_sector_read	;wreg free
 17330  01326A                     l1769:
 17331                           
 17332                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 17333  01326A  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 17334  01326E  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 17335  013272  0E00               	movlw	low _buffer
 17336  013274  0100               	movlb	0	; () banked
 17337  013276  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 17338  013278  0E0A               	movlw	high _buffer
 17339  01327A  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 17340  01327C  EC5C  F0A6         	call	__read_value_from_offset	;wreg free
 17341  013280  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 17342  013284  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 17343  013288                     l1767:
 17344  013288  0100               	movlb	0	; () banked
 17345  01328A  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 17346  01328C  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17347  01328E  A4D8               	btfss	status,2,c
 17348  013290  D7C6               	goto	l1768
 17349                           
 17350                           ; BSR set to: 0
 17351                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 17352  013292  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 17353  013296  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 17354  01329A  0012               	return		;funcret
 17355  01329C                     __end_of__find_nth_cluster:
 17356                           	opt stack 0
 17357                           tblptru	equ	0xFF8
 17358                           tblptrh	equ	0xFF7
 17359                           tblptrl	equ	0xFF6
 17360                           tablat	equ	0xFF5
 17361                           prodh	equ	0xFF4
 17362                           prodl	equ	0xFF3
 17363                           postinc0	equ	0xFEE
 17364                           wreg	equ	0xFE8
 17365                           postdec1	equ	0xFE5
 17366                           plusw1	equ	0xFE3
 17367                           fsr1h	equ	0xFE2
 17368                           fsr1l	equ	0xFE1
 17369                           indf2	equ	0xFDF
 17370                           postinc2	equ	0xFDE
 17371                           postdec2	equ	0xFDD
 17372                           plusw2	equ	0xFDB
 17373                           fsr2h	equ	0xFDA
 17374                           fsr2l	equ	0xFD9
 17375                           status	equ	0xFD8
 17376                           
 17377 ;; *************** function __read_value_from_offset *****************
 17378 ;; Defined at:
 17379 ;;		line 114 in file "fat16.c"
 17380 ;; Parameters:    Size  Location     Type
 17381 ;;  offset          2    0[BANK0 ] unsigned int 
 17382 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 17383 ;;		 -> buffer(512), 
 17384 ;; Auto vars:     Size  Location     Type
 17385 ;;  value           2    7[BANK0 ] unsigned int 
 17386 ;; Return value:  Size  Location     Type
 17387 ;;                  2    0[BANK0 ] unsigned int 
 17388 ;; Registers used:
 17389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17390 ;; Tracked objects:
 17391 ;;		On entry : 0/0
 17392 ;;		On exit  : 0/0
 17393 ;;		Unchanged: 0/0
 17394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17397 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17398 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17399 ;;Total ram usage:        9 bytes
 17400 ;; Hardware stack levels used:    1
 17401 ;; Hardware stack levels required when called:   10
 17402 ;; This function calls:
 17403 ;;		Nothing
 17404 ;; This function is called by:
 17405 ;;		__find_nth_cluster
 17406 ;;		__make_cluster_chain
 17407 ;; This function uses a non-reentrant model
 17408 ;;
 17409                           
 17410                           	psect	text64
 17411  014CB8                     __ptext64:
 17412                           	opt stack 0
 17413  014CB8                     __read_value_from_offset:
 17414                           	opt stack 16
 17415                           
 17416                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 17417                           
 17418                           ;incstack = 0
 17419  014CB8  0E01               	movlw	1
 17420  014CBA  0100               	movlb	0	; () banked
 17421  014CBC  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 17422  014CBE  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17423  014CC0  0E00               	movlw	0
 17424  014CC2  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 17425  014CC4  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 17426  014CC6  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17427  014CC8  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17428  014CCA  6ED9               	movwf	fsr2l,c
 17429  014CCC  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 17430  014CCE  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17431  014CD0  6EDA               	movwf	fsr2h,c
 17432  014CD2  50DF               	movf	indf2,w,c
 17433  014CD4  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 17434  014CD6  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 17435  014CD8  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 17436  014CDA  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 17437                           
 17438                           ; BSR set to: 0
 17439                           ;fat16.c: 118: value <<= 8;
 17440  014CDC  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 17441  014CDE  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 17442  014CE0  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 17443                           
 17444                           ; BSR set to: 0
 17445                           ;fat16.c: 119: value |= buffer[offset];
 17446  014CE2  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 17447  014CE4  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17448  014CE6  6ED9               	movwf	fsr2l,c
 17449  014CE8  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 17450  014CEA  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17451  014CEC  6EDA               	movwf	fsr2h,c
 17452  014CEE  50DF               	movf	indf2,w,c
 17453  014CF0  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17454  014CF2  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17455  014CF4  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;fat16.c: 120: return value;
 17459  014CF6  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 17460  014CFA  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 17461  014CFE  0012               	return	
 17462  014D00                     __end_of__read_value_from_offset:
 17463                           	opt stack 0
 17464                           tblptru	equ	0xFF8
 17465                           tblptrh	equ	0xFF7
 17466                           tblptrl	equ	0xFF6
 17467                           tablat	equ	0xFF5
 17468                           prodh	equ	0xFF4
 17469                           prodl	equ	0xFF3
 17470                           postinc0	equ	0xFEE
 17471                           wreg	equ	0xFE8
 17472                           postdec1	equ	0xFE5
 17473                           plusw1	equ	0xFE3
 17474                           fsr1h	equ	0xFE2
 17475                           fsr1l	equ	0xFE1
 17476                           indf2	equ	0xFDF
 17477                           postinc2	equ	0xFDE
 17478                           postdec2	equ	0xFDD
 17479                           plusw2	equ	0xFDB
 17480                           fsr2h	equ	0xFDA
 17481                           fsr2l	equ	0xFD9
 17482                           status	equ	0xFD8
 17483                           
 17484 ;; *************** function __read_fat *****************
 17485 ;; Defined at:
 17486 ;;		line 456 in file "fat16.c"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;  cluster         2   47[BANK0 ] unsigned int 
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;  value           2   53[BANK0 ] unsigned int 
 17491 ;;  offset          2   51[BANK0 ] unsigned int 
 17492 ;;  sector          2   49[BANK0 ] unsigned int 
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  2   47[BANK0 ] unsigned int 
 17495 ;; Registers used:
 17496 ;;		wreg, status,2, status,0, cstack
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17503 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17505 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17506 ;;Total ram usage:        8 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:   15
 17509 ;; This function calls:
 17510 ;;		__fat_offset_from_cluster
 17511 ;;		__fat_sector_from_cluster
 17512 ;;		_flash_partial_read
 17513 ;; This function is called by:
 17514 ;;		__find_nth_cluster
 17515 ;;		_fat_read_from_file_fast
 17516 ;;		_fat_modify_file
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text65
 17521  014642                     __ptext65:
 17522                           	opt stack 0
 17523  014642                     __read_fat:
 17524                           	opt stack 12
 17525                           
 17526                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;incstack = 0
 17530  014642  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 17531  014646  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 17532  01464A  EC45  F0AB         	call	__fat_sector_from_cluster	;wreg free
 17533  01464E  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 17534  014652  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 17535                           
 17536                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 17537  014656  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 17538  01465A  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 17539  01465E  EC52  F0AB         	call	__fat_offset_from_cluster	;wreg free
 17540  014662  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 17541  014666  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 17542                           
 17543                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 17544  01466A  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 17545  01466E  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 17546  014672  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 17547  014676  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17548  01467A  0E00               	movlw	0
 17549  01467C  0100               	movlb	0	; () banked
 17550  01467E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17551  014680  0E02               	movlw	2
 17552  014682  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17553  014684  0E95               	movlw	low __read_fat@value
 17554  014686  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17555  014688  0E00               	movlw	high __read_fat@value
 17556  01468A  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17557  01468C  EC89  F0AA         	call	_flash_partial_read	;wreg free
 17558                           
 17559                           ;fat16.c: 470: return value;
 17560  014690  C095  F08F         	movff	__read_fat@value,?__read_fat
 17561  014694  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 17562  014698  0012               	return	
 17563  01469A                     __end_of__read_fat:
 17564                           	opt stack 0
 17565                           tblptru	equ	0xFF8
 17566                           tblptrh	equ	0xFF7
 17567                           tblptrl	equ	0xFF6
 17568                           tablat	equ	0xFF5
 17569                           prodh	equ	0xFF4
 17570                           prodl	equ	0xFF3
 17571                           postinc0	equ	0xFEE
 17572                           wreg	equ	0xFE8
 17573                           postdec1	equ	0xFE5
 17574                           plusw1	equ	0xFE3
 17575                           fsr1h	equ	0xFE2
 17576                           fsr1l	equ	0xFE1
 17577                           indf2	equ	0xFDF
 17578                           postinc2	equ	0xFDE
 17579                           postdec2	equ	0xFDD
 17580                           plusw2	equ	0xFDB
 17581                           fsr2h	equ	0xFDA
 17582                           fsr2l	equ	0xFD9
 17583                           status	equ	0xFD8
 17584                           
 17585 ;; *************** function __fat_sector_from_cluster *****************
 17586 ;; Defined at:
 17587 ;;		line 75 in file "fat16.c"
 17588 ;; Parameters:    Size  Location     Type
 17589 ;;  cluster         2    0[BANK0 ] unsigned int 
 17590 ;; Auto vars:     Size  Location     Type
 17591 ;;		None
 17592 ;; Return value:  Size  Location     Type
 17593 ;;                  2    0[BANK0 ] unsigned int 
 17594 ;; Registers used:
 17595 ;;		wreg, status,2, status,0
 17596 ;; Tracked objects:
 17597 ;;		On entry : 0/0
 17598 ;;		On exit  : 0/0
 17599 ;;		Unchanged: 0/0
 17600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17605 ;;Total ram usage:        2 bytes
 17606 ;; Hardware stack levels used:    1
 17607 ;; Hardware stack levels required when called:   10
 17608 ;; This function calls:
 17609 ;;		Nothing
 17610 ;; This function is called by:
 17611 ;;		__find_nth_cluster
 17612 ;;		__make_cluster_chain
 17613 ;;		__read_fat
 17614 ;; This function uses a non-reentrant model
 17615 ;;
 17616                           
 17617                           	psect	text66
 17618  01568A                     __ptext66:
 17619                           	opt stack 0
 17620  01568A                     __fat_sector_from_cluster:
 17621                           	opt stack 16
 17622                           
 17623                           ;fat16.c: 77: cluster >>= 8;
 17624                           
 17625                           ;incstack = 0
 17626  01568A  0100               	movlb	0	; () banked
 17627  01568C  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 17628  01568E  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 17629  015690  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;fat16.c: 78: cluster += 2;
 17633  015692  0E02               	movlw	2
 17634  015694  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17635  015696  0E00               	movlw	0
 17636  015698  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;fat16.c: 79: return cluster;
 17640  01569A  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17641  01569E  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17642  0156A2  0012               	return	
 17643  0156A4                     __end_of__fat_sector_from_cluster:
 17644                           	opt stack 0
 17645                           tblptru	equ	0xFF8
 17646                           tblptrh	equ	0xFF7
 17647                           tblptrl	equ	0xFF6
 17648                           tablat	equ	0xFF5
 17649                           prodh	equ	0xFF4
 17650                           prodl	equ	0xFF3
 17651                           postinc0	equ	0xFEE
 17652                           wreg	equ	0xFE8
 17653                           postdec1	equ	0xFE5
 17654                           plusw1	equ	0xFE3
 17655                           fsr1h	equ	0xFE2
 17656                           fsr1l	equ	0xFE1
 17657                           indf2	equ	0xFDF
 17658                           postinc2	equ	0xFDE
 17659                           postdec2	equ	0xFDD
 17660                           plusw2	equ	0xFDB
 17661                           fsr2h	equ	0xFDA
 17662                           fsr2l	equ	0xFD9
 17663                           status	equ	0xFD8
 17664                           
 17665 ;; *************** function __fat_offset_from_cluster *****************
 17666 ;; Defined at:
 17667 ;;		line 82 in file "fat16.c"
 17668 ;; Parameters:    Size  Location     Type
 17669 ;;  cluster         2    0[BANK0 ] unsigned int 
 17670 ;; Auto vars:     Size  Location     Type
 17671 ;;		None
 17672 ;; Return value:  Size  Location     Type
 17673 ;;                  2    0[BANK0 ] unsigned int 
 17674 ;; Registers used:
 17675 ;;		wreg, status,2, status,0
 17676 ;; Tracked objects:
 17677 ;;		On entry : 0/0
 17678 ;;		On exit  : 0/0
 17679 ;;		Unchanged: 0/0
 17680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17685 ;;Total ram usage:        2 bytes
 17686 ;; Hardware stack levels used:    1
 17687 ;; Hardware stack levels required when called:   10
 17688 ;; This function calls:
 17689 ;;		Nothing
 17690 ;; This function is called by:
 17691 ;;		__find_nth_cluster
 17692 ;;		__make_cluster_chain
 17693 ;;		__read_fat
 17694 ;; This function uses a non-reentrant model
 17695 ;;
 17696                           
 17697                           	psect	text67
 17698  0156A4                     __ptext67:
 17699                           	opt stack 0
 17700  0156A4                     __fat_offset_from_cluster:
 17701                           	opt stack 16
 17702                           
 17703                           ;fat16.c: 84: cluster &= 0xFF;
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;incstack = 0
 17707  0156A4  0EFF               	movlw	255
 17708  0156A6  0100               	movlb	0	; () banked
 17709  0156A8  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17710  0156AA  0E00               	movlw	0
 17711  0156AC  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17712                           
 17713                           ; BSR set to: 0
 17714                           ;fat16.c: 85: cluster <<= 1;
 17715  0156AE  90D8               	bcf	status,0,c
 17716  0156B0  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17717  0156B2  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17718                           
 17719                           ; BSR set to: 0
 17720                           ;fat16.c: 86: return cluster;
 17721  0156B4  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17722  0156B8  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17723  0156BC  0012               	return	
 17724  0156BE                     __end_of__fat_offset_from_cluster:
 17725                           	opt stack 0
 17726                           tblptru	equ	0xFF8
 17727                           tblptrh	equ	0xFF7
 17728                           tblptrl	equ	0xFF6
 17729                           tablat	equ	0xFF5
 17730                           prodh	equ	0xFF4
 17731                           prodl	equ	0xFF3
 17732                           postinc0	equ	0xFEE
 17733                           wreg	equ	0xFE8
 17734                           postdec1	equ	0xFE5
 17735                           plusw1	equ	0xFE3
 17736                           fsr1h	equ	0xFE2
 17737                           fsr1l	equ	0xFE1
 17738                           indf2	equ	0xFDF
 17739                           postinc2	equ	0xFDE
 17740                           postdec2	equ	0xFDD
 17741                           plusw2	equ	0xFDB
 17742                           fsr2h	equ	0xFDA
 17743                           fsr2l	equ	0xFD9
 17744                           status	equ	0xFD8
 17745                           
 17746 ;; *************** function __data_sector_from_cluster *****************
 17747 ;; Defined at:
 17748 ;;		line 70 in file "fat16.c"
 17749 ;; Parameters:    Size  Location     Type
 17750 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17751 ;; Auto vars:     Size  Location     Type
 17752 ;;		None
 17753 ;; Return value:  Size  Location     Type
 17754 ;;                  2    0[BANK0 ] unsigned int 
 17755 ;; Registers used:
 17756 ;;		wreg, status,2, status,0
 17757 ;; Tracked objects:
 17758 ;;		On entry : 0/0
 17759 ;;		On exit  : 0/0
 17760 ;;		Unchanged: 0/0
 17761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17766 ;;Total ram usage:        2 bytes
 17767 ;; Hardware stack levels used:    1
 17768 ;; Hardware stack levels required when called:   10
 17769 ;; This function calls:
 17770 ;;		Nothing
 17771 ;; This function is called by:
 17772 ;;		_fat_read_from_file_fast
 17773 ;;		_fat_modify_file
 17774 ;;		_fat_copy_sector_to_buffer
 17775 ;; This function uses a non-reentrant model
 17776 ;;
 17777                           
 17778                           	psect	text68
 17779  015756                     __ptext68:
 17780                           	opt stack 0
 17781  015756                     __data_sector_from_cluster:
 17782                           	opt stack 17
 17783                           
 17784                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;incstack = 0
 17788  015756  0E24               	movlw	36
 17789  015758  0100               	movlb	0	; () banked
 17790  01575A  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17791  01575C  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17792  01575E  0E00               	movlw	0
 17793  015760  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17794  015762  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17795  015764  0012               	return	
 17796  015766                     __end_of__data_sector_from_cluster:
 17797                           	opt stack 0
 17798                           tblptru	equ	0xFF8
 17799                           tblptrh	equ	0xFF7
 17800                           tblptrl	equ	0xFF6
 17801                           tablat	equ	0xFF5
 17802                           prodh	equ	0xFF4
 17803                           prodl	equ	0xFF3
 17804                           postinc0	equ	0xFEE
 17805                           wreg	equ	0xFE8
 17806                           postdec1	equ	0xFE5
 17807                           plusw1	equ	0xFE3
 17808                           fsr1h	equ	0xFE2
 17809                           fsr1l	equ	0xFE1
 17810                           indf2	equ	0xFDF
 17811                           postinc2	equ	0xFDE
 17812                           postdec2	equ	0xFDD
 17813                           plusw2	equ	0xFDB
 17814                           fsr2h	equ	0xFDA
 17815                           fsr2l	equ	0xFD9
 17816                           status	equ	0xFD8
 17817                           
 17818 ;; *************** function _fat_get_file_information *****************
 17819 ;; Defined at:
 17820 ;;		line 1391 in file "fat16.c"
 17821 ;; Parameters:    Size  Location     Type
 17822 ;;  file_number     1    wreg     unsigned char 
 17823 ;;  data            2   47[BANK0 ] PTR struct .
 17824 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17825 ;; Auto vars:     Size  Location     Type
 17826 ;;  file_number     1   54[BANK0 ] unsigned char 
 17827 ;;  offset          2   52[BANK0 ] unsigned int 
 17828 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17829 ;; Return value:  Size  Location     Type
 17830 ;;                  1    wreg      unsigned char 
 17831 ;; Registers used:
 17832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17833 ;; Tracked objects:
 17834 ;;		On entry : 0/0
 17835 ;;		On exit  : 0/0
 17836 ;;		Unchanged: 0/0
 17837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17839 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17841 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17842 ;;Total ram usage:        8 bytes
 17843 ;; Hardware stack levels used:    1
 17844 ;; Hardware stack levels required when called:   15
 17845 ;; This function calls:
 17846 ;;		__offset_from_file_number
 17847 ;;		__sector_from_file_number
 17848 ;;		_flash_partial_read
 17849 ;; This function is called by:
 17850 ;;		_fat_read_from_file
 17851 ;;		_fat_resize_file
 17852 ;;		_fat_modify_file
 17853 ;;		_fat_rename_file
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text69
 17858  013B76                     __ptext69:
 17859                           	opt stack 0
 17860  013B76                     _fat_get_file_information:
 17861                           	opt stack 12
 17862                           
 17863                           ; BSR set to: 0
 17864                           ;incstack = 0
 17865                           ;fat_get_file_information@file_number stored from wreg
 17866  013B76  0100               	movlb	0	; () banked
 17867  013B78  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17868                           
 17869                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 17870  013B7A  0E3F               	movlw	63
 17871  013B7C  0100               	movlb	0	; () banked
 17872  013B7E  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17873  013B80  D002               	goto	l2078
 17874                           
 17875                           ; BSR set to: 0
 17876                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 17877  013B82  0E01               	movlw	1
 17878                           
 17879                           ; BSR set to: 0
 17880  013B84  0012               	return	
 17881  013B86                     l2078:
 17882                           
 17883                           ; BSR set to: 0
 17884                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 17885                           
 17886                           ; BSR set to: 0
 17887  013B86  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17888  013B88  EC15  F0A9         	call	__sector_from_file_number
 17889  013B8C  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17890  013B90  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17891                           
 17892                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 17893  013B94  0100               	movlb	0	; () banked
 17894  013B96  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17895  013B98  EC24  F0AA         	call	__offset_from_file_number
 17896  013B9C  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17897  013BA0  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17898                           
 17899                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17900  013BA4  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17901  013BA8  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17902  013BAC  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17903  013BB0  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17904  013BB4  0E00               	movlw	0
 17905  013BB6  0100               	movlb	0	; () banked
 17906  013BB8  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17907  013BBA  0E20               	movlw	32
 17908  013BBC  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17909  013BBE  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17910  013BC2  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17911  013BC6  EC89  F0AA         	call	_flash_partial_read	;wreg free
 17912                           
 17913                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17914  013BCA  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17915  013BCE  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17916  013BD2  50DF               	movf	indf2,w,c
 17917  013BD4  B4D8               	btfsc	status,2,c
 17918  013BD6  D008               	goto	u13310
 17919  013BD8  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17920  013BDC  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17921  013BE0  0EE5               	movlw	229
 17922  013BE2  18DE               	xorwf	postinc2,w,c
 17923  013BE4  A4D8               	btfss	status,2,c
 17924  013BE6  D002               	goto	l2080
 17925  013BE8                     u13310:
 17926                           
 17927                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 17928  013BE8  0E02               	movlw	2
 17929  013BEA  0012               	return	
 17930  013BEC                     l2080:
 17931                           
 17932                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 17933  013BEC  0E00               	movlw	0
 17934  013BEE  0012               	return	
 17935  013BF0                     __end_of_fat_get_file_information:
 17936                           	opt stack 0
 17937                           tblptru	equ	0xFF8
 17938                           tblptrh	equ	0xFF7
 17939                           tblptrl	equ	0xFF6
 17940                           tablat	equ	0xFF5
 17941                           prodh	equ	0xFF4
 17942                           prodl	equ	0xFF3
 17943                           postinc0	equ	0xFEE
 17944                           wreg	equ	0xFE8
 17945                           postdec1	equ	0xFE5
 17946                           plusw1	equ	0xFE3
 17947                           fsr1h	equ	0xFE2
 17948                           fsr1l	equ	0xFE1
 17949                           indf2	equ	0xFDF
 17950                           postinc2	equ	0xFDE
 17951                           postdec2	equ	0xFDD
 17952                           plusw2	equ	0xFDB
 17953                           fsr2h	equ	0xFDA
 17954                           fsr2l	equ	0xFD9
 17955                           status	equ	0xFD8
 17956                           
 17957 ;; *************** function _fat_get_file_size *****************
 17958 ;; Defined at:
 17959 ;;		line 562 in file "fat16.c"
 17960 ;; Parameters:    Size  Location     Type
 17961 ;;  file_number     1    wreg     unsigned char 
 17962 ;; Auto vars:     Size  Location     Type
 17963 ;;  file_number     1   65[BANK0 ] unsigned char 
 17964 ;;  file_size       4   61[BANK0 ] unsigned long 
 17965 ;;  offset          2   59[BANK0 ] unsigned int 
 17966 ;;  sector          2   57[BANK0 ] unsigned int 
 17967 ;; Return value:  Size  Location     Type
 17968 ;;                  4   53[BANK0 ] unsigned long 
 17969 ;; Registers used:
 17970 ;;		wreg, status,2, status,0, cstack
 17971 ;; Tracked objects:
 17972 ;;		On entry : 0/0
 17973 ;;		On exit  : 0/0
 17974 ;;		Unchanged: 0/0
 17975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17977 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17979 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17980 ;;Total ram usage:       13 bytes
 17981 ;; Hardware stack levels used:    1
 17982 ;; Hardware stack levels required when called:   16
 17983 ;; This function calls:
 17984 ;;		__offset_from_file_number
 17985 ;;		__root_is_available
 17986 ;;		__sector_from_file_number
 17987 ;;		_flash_partial_read
 17988 ;; This function is called by:
 17989 ;;		_configFile_read
 17990 ;;		_fat_append_to_file
 17991 ;;		_fat_copy_file
 17992 ;;		_fat_copy_sector_to_buffer
 17993 ;;		_fat_write_sector_from_buffer
 17994 ;; This function uses a non-reentrant model
 17995 ;;
 17996                           
 17997                           	psect	text70
 17998  013BF0                     __ptext70:
 17999                           	opt stack 0
 18000  013BF0                     _fat_get_file_size:
 18001                           	opt stack 12
 18002                           
 18003                           ;incstack = 0
 18004                           ;fat_get_file_size@file_number stored from wreg
 18005  013BF0  0100               	movlb	0	; () banked
 18006  013BF2  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 18007                           
 18008                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 18009  013BF4  0100               	movlb	0	; () banked
 18010  013BF6  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18011  013BF8  ECC1  F09F         	call	__root_is_available
 18012  013BFC  0900               	iorlw	0
 18013  013BFE  B4D8               	btfsc	status,2,c
 18014  013C00  D006               	goto	l1845
 18015                           
 18016                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 18017  013C02  0100               	movlb	0	; () banked
 18018  013C04  6995               	setf	?_fat_get_file_size& (0+255),b
 18019  013C06  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 18020  013C08  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 18021  013C0A  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 18022  013C0C  0012               	return	
 18023  013C0E                     l1845:
 18024                           
 18025                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 18026                           
 18027                           ; BSR set to: 0
 18028  013C0E  0100               	movlb	0	; () banked
 18029  013C10  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18030  013C12  EC15  F0A9         	call	__sector_from_file_number
 18031  013C16  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 18032  013C1A  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 18033                           
 18034                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 18035  013C1E  0100               	movlb	0	; () banked
 18036  013C20  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18037  013C22  EC24  F0AA         	call	__offset_from_file_number
 18038  013C26  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 18039  013C2A  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 18040                           
 18041                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 18042  013C2E  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 18043  013C32  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 18044  013C36  0E1C               	movlw	28
 18045  013C38  0100               	movlb	0	; () banked
 18046  013C3A  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 18047  013C3C  6F89               	movwf	flash_partial_read@start& (0+255),b
 18048  013C3E  0E00               	movlw	0
 18049  013C40  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 18050  013C42  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 18051  013C44  0E00               	movlw	0
 18052  013C46  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18053  013C48  0E04               	movlw	4
 18054  013C4A  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18055  013C4C  0E9D               	movlw	low fat_get_file_size@file_size
 18056  013C4E  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18057  013C50  0E00               	movlw	high fat_get_file_size@file_size
 18058  013C52  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18059  013C54  EC89  F0AA         	call	_flash_partial_read	;wreg free
 18060                           
 18061                           ;fat16.c: 583: return file_size;
 18062  013C58  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 18063  013C5C  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 18064  013C60  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 18065  013C64  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 18066  013C68  0012               	return	
 18067  013C6A                     __end_of_fat_get_file_size:
 18068                           	opt stack 0
 18069                           tblptru	equ	0xFF8
 18070                           tblptrh	equ	0xFF7
 18071                           tblptrl	equ	0xFF6
 18072                           tablat	equ	0xFF5
 18073                           prodh	equ	0xFF4
 18074                           prodl	equ	0xFF3
 18075                           postinc0	equ	0xFEE
 18076                           wreg	equ	0xFE8
 18077                           postdec1	equ	0xFE5
 18078                           plusw1	equ	0xFE3
 18079                           fsr1h	equ	0xFE2
 18080                           fsr1l	equ	0xFE1
 18081                           indf2	equ	0xFDF
 18082                           postinc2	equ	0xFDE
 18083                           postdec2	equ	0xFDD
 18084                           plusw2	equ	0xFDB
 18085                           fsr2h	equ	0xFDA
 18086                           fsr2l	equ	0xFD9
 18087                           status	equ	0xFD8
 18088                           
 18089 ;; *************** function __root_is_available *****************
 18090 ;; Defined at:
 18091 ;;		line 408 in file "fat16.c"
 18092 ;; Parameters:    Size  Location     Type
 18093 ;;  file_number     1    wreg     unsigned char 
 18094 ;; Auto vars:     Size  Location     Type
 18095 ;;  file_number     1   51[BANK0 ] unsigned char 
 18096 ;;  offset          2   49[BANK0 ] unsigned int 
 18097 ;;  root_sector     2   47[BANK0 ] unsigned int 
 18098 ;;  first_byte      1   52[BANK0 ] unsigned char 
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  1    wreg      unsigned char 
 18101 ;; Registers used:
 18102 ;;		wreg, status,2, status,0, cstack
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18109 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18111 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18112 ;;Total ram usage:        6 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; Hardware stack levels required when called:   15
 18115 ;; This function calls:
 18116 ;;		__offset_from_file_number
 18117 ;;		__sector_from_file_number
 18118 ;;		_flash_partial_read
 18119 ;; This function is called by:
 18120 ;;		__get_available_root_entry
 18121 ;;		_fat_get_file_size
 18122 ;;		_fat_resize_file
 18123 ;;		_fat_delete_file
 18124 ;;		_fat_append_to_file
 18125 ;;		_fat_copy_file
 18126 ;;		_fat_copy_sector_to_buffer
 18127 ;;		_fat_write_sector_from_buffer
 18128 ;; This function uses a non-reentrant model
 18129 ;;
 18130                           
 18131                           	psect	text71
 18132  013F82                     __ptext71:
 18133                           	opt stack 0
 18134  013F82                     __root_is_available:
 18135                           	opt stack 12
 18136                           
 18137                           ;incstack = 0
 18138                           ;__root_is_available@file_number stored from wreg
 18139  013F82  0100               	movlb	0	; () banked
 18140  013F84  6F93               	movwf	__root_is_available@file_number& (0+255),b
 18141                           
 18142                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 18143  013F86  0E3F               	movlw	63
 18144  013F88  0100               	movlb	0	; () banked
 18145  013F8A  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 18146  013F8C  D002               	goto	l1806
 18147                           
 18148                           ; BSR set to: 0
 18149                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 18150  013F8E  0E00               	movlw	0
 18151                           
 18152                           ; BSR set to: 0
 18153  013F90  0012               	return	
 18154  013F92                     l1806:
 18155                           
 18156                           ; BSR set to: 0
 18157                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 18158                           
 18159                           ; BSR set to: 0
 18160  013F92  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18161  013F94  EC15  F0A9         	call	__sector_from_file_number
 18162  013F98  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 18163  013F9C  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 18164                           
 18165                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 18166  013FA0  0100               	movlb	0	; () banked
 18167  013FA2  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18168  013FA4  EC24  F0AA         	call	__offset_from_file_number
 18169  013FA8  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 18170  013FAC  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 18171                           
 18172                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 18173  013FB0  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 18174  013FB4  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 18175  013FB8  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 18176  013FBC  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 18177  013FC0  0E00               	movlw	0
 18178  013FC2  0100               	movlb	0	; () banked
 18179  013FC4  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18180  013FC6  0E01               	movlw	1
 18181  013FC8  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18182  013FCA  0E94               	movlw	low __root_is_available@first_byte
 18183  013FCC  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18184  013FCE  0E00               	movlw	high __root_is_available@first_byte
 18185  013FD0  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18186  013FD2  EC89  F0AA         	call	_flash_partial_read	;wreg free
 18187                           
 18188                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 18189  013FD6  0100               	movlb	0	; () banked
 18190  013FD8  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 18191  013FDA  B4D8               	btfsc	status,2,c
 18192  013FDC  D004               	goto	u12570
 18193                           
 18194                           ; BSR set to: 0
 18195  013FDE  0EE5               	movlw	229
 18196  013FE0  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 18197  013FE2  A4D8               	btfss	status,2,c
 18198  013FE4  D002               	goto	l1808
 18199  013FE6                     u12570:
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 18203                           
 18204                           ; BSR set to: 0
 18205  013FE6  0E01               	movlw	1
 18206                           
 18207                           ; BSR set to: 0
 18208                           ;fat16.c: 434: }
 18209                           
 18210                           ; BSR set to: 0
 18211  013FE8  0012               	return	
 18212  013FEA                     l1808:
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 18216                           
 18217                           ; BSR set to: 0
 18218  013FEA  0E00               	movlw	0
 18219                           
 18220                           ; BSR set to: 0
 18221  013FEC  0012               	return	
 18222  013FEE                     __end_of__root_is_available:
 18223                           	opt stack 0
 18224                           tblptru	equ	0xFF8
 18225                           tblptrh	equ	0xFF7
 18226                           tblptrl	equ	0xFF6
 18227                           tablat	equ	0xFF5
 18228                           prodh	equ	0xFF4
 18229                           prodl	equ	0xFF3
 18230                           postinc0	equ	0xFEE
 18231                           wreg	equ	0xFE8
 18232                           postdec1	equ	0xFE5
 18233                           plusw1	equ	0xFE3
 18234                           fsr1h	equ	0xFE2
 18235                           fsr1l	equ	0xFE1
 18236                           indf2	equ	0xFDF
 18237                           postinc2	equ	0xFDE
 18238                           postdec2	equ	0xFDD
 18239                           plusw2	equ	0xFDB
 18240                           fsr2h	equ	0xFDA
 18241                           fsr2l	equ	0xFD9
 18242                           status	equ	0xFD8
 18243                           
 18244 ;; *************** function _flash_partial_read *****************
 18245 ;; Defined at:
 18246 ;;		line 452 in file "flash.c"
 18247 ;; Parameters:    Size  Location     Type
 18248 ;;  page            2   39[BANK0 ] unsigned int 
 18249 ;;  start           2   41[BANK0 ] unsigned int 
 18250 ;;  length          2   43[BANK0 ] unsigned int 
 18251 ;;  data            2   45[BANK0 ] PTR unsigned char 
 18252 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 18253 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 18254 ;;		 -> _root_is_available@first_byte(1), 
 18255 ;; Auto vars:     Size  Location     Type
 18256 ;;		None
 18257 ;; Return value:  Size  Location     Type
 18258 ;;                  1    wreg      void 
 18259 ;; Registers used:
 18260 ;;		wreg, status,2, status,0, cstack
 18261 ;; Tracked objects:
 18262 ;;		On entry : 0/0
 18263 ;;		On exit  : 0/0
 18264 ;;		Unchanged: 0/0
 18265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18266 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18269 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18270 ;;Total ram usage:        8 bytes
 18271 ;; Hardware stack levels used:    1
 18272 ;; Hardware stack levels required when called:   14
 18273 ;; This function calls:
 18274 ;;		__flash_partial_read
 18275 ;; This function is called by:
 18276 ;;		__root_is_available
 18277 ;;		__read_fat
 18278 ;;		_fat_get_file_size
 18279 ;;		_fat_read_from_file_fast
 18280 ;;		_fat_get_file_information
 18281 ;;		__get_first_cluster
 18282 ;; This function uses a non-reentrant model
 18283 ;;
 18284                           
 18285                           	psect	text72
 18286  015512                     __ptext72:
 18287                           	opt stack 0
 18288  015512                     _flash_partial_read:
 18289                           	opt stack 12
 18290                           
 18291                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 18292                           
 18293                           ; BSR set to: 0
 18294                           ;incstack = 0
 18295  015512  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 18296  015516  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 18297  01551A  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 18298  01551E  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 18299  015522  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 18300  015526  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 18301  01552A  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 18302  01552E  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 18303  015532  EC35  F09E         	call	__flash_partial_read	;wreg free
 18304  015536  0012               	return		;funcret
 18305  015538                     __end_of_flash_partial_read:
 18306                           	opt stack 0
 18307                           tblptru	equ	0xFF8
 18308                           tblptrh	equ	0xFF7
 18309                           tblptrl	equ	0xFF6
 18310                           tablat	equ	0xFF5
 18311                           prodh	equ	0xFF4
 18312                           prodl	equ	0xFF3
 18313                           postinc0	equ	0xFEE
 18314                           wreg	equ	0xFE8
 18315                           postdec1	equ	0xFE5
 18316                           plusw1	equ	0xFE3
 18317                           fsr1h	equ	0xFE2
 18318                           fsr1l	equ	0xFE1
 18319                           indf2	equ	0xFDF
 18320                           postinc2	equ	0xFDE
 18321                           postdec2	equ	0xFDD
 18322                           plusw2	equ	0xFDB
 18323                           fsr2h	equ	0xFDA
 18324                           fsr2l	equ	0xFD9
 18325                           status	equ	0xFD8
 18326                           
 18327 ;; *************** function __sector_from_file_number *****************
 18328 ;; Defined at:
 18329 ;;		line 52 in file "fat16.c"
 18330 ;; Parameters:    Size  Location     Type
 18331 ;;  file_number     1    wreg     unsigned char 
 18332 ;; Auto vars:     Size  Location     Type
 18333 ;;  file_number     1    2[BANK0 ] unsigned char 
 18334 ;;  sector          2    3[BANK0 ] unsigned int 
 18335 ;; Return value:  Size  Location     Type
 18336 ;;                  2    0[BANK0 ] unsigned int 
 18337 ;; Registers used:
 18338 ;;		wreg, status,2, status,0
 18339 ;; Tracked objects:
 18340 ;;		On entry : 0/0
 18341 ;;		On exit  : 0/0
 18342 ;;		Unchanged: 0/0
 18343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18345 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18347 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18348 ;;Total ram usage:        5 bytes
 18349 ;; Hardware stack levels used:    1
 18350 ;; Hardware stack levels required when called:   10
 18351 ;; This function calls:
 18352 ;;		Nothing
 18353 ;; This function is called by:
 18354 ;;		__root_is_available
 18355 ;;		__write_root
 18356 ;;		_fat_get_file_size
 18357 ;;		_fat_get_file_information
 18358 ;;		__delete_root
 18359 ;;		__get_first_cluster
 18360 ;; This function uses a non-reentrant model
 18361 ;;
 18362                           
 18363                           	psect	text73
 18364  01522A                     __ptext73:
 18365                           	opt stack 0
 18366  01522A                     __sector_from_file_number:
 18367                           	opt stack 16
 18368                           
 18369                           ;incstack = 0
 18370                           ;__sector_from_file_number@file_number stored from wreg
 18371  01522A  0100               	movlb	0	; () banked
 18372  01522C  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 18373                           
 18374                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 18375  01522E  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 18376  015232  0100               	movlb	0	; () banked
 18377  015234  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 18378                           
 18379                           ; BSR set to: 0
 18380                           ;fat16.c: 56: sector >>= 4;
 18381  015236  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 18382  015238  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18383  01523A  0E0F               	movlw	15
 18384  01523C  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 18385  01523E  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 18386  015240  0BF0               	andlw	240
 18387  015242  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 18388  015244  0E0F               	movlw	15
 18389  015246  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18390                           
 18391                           ; BSR set to: 0
 18392                           ;fat16.c: 57: sector += 34;
 18393  015248  0E22               	movlw	34
 18394  01524A  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 18395  01524C  0E00               	movlw	0
 18396  01524E  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;fat16.c: 58: return sector;
 18400  015250  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 18401  015254  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 18402  015258  0012               	return	
 18403  01525A                     __end_of__sector_from_file_number:
 18404                           	opt stack 0
 18405                           tblptru	equ	0xFF8
 18406                           tblptrh	equ	0xFF7
 18407                           tblptrl	equ	0xFF6
 18408                           tablat	equ	0xFF5
 18409                           prodh	equ	0xFF4
 18410                           prodl	equ	0xFF3
 18411                           postinc0	equ	0xFEE
 18412                           wreg	equ	0xFE8
 18413                           postdec1	equ	0xFE5
 18414                           plusw1	equ	0xFE3
 18415                           fsr1h	equ	0xFE2
 18416                           fsr1l	equ	0xFE1
 18417                           indf2	equ	0xFDF
 18418                           postinc2	equ	0xFDE
 18419                           postdec2	equ	0xFDD
 18420                           plusw2	equ	0xFDB
 18421                           fsr2h	equ	0xFDA
 18422                           fsr2l	equ	0xFD9
 18423                           status	equ	0xFD8
 18424                           
 18425 ;; *************** function __offset_from_file_number *****************
 18426 ;; Defined at:
 18427 ;;		line 61 in file "fat16.c"
 18428 ;; Parameters:    Size  Location     Type
 18429 ;;  file_number     1    wreg     unsigned char 
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;  file_number     1    2[BANK0 ] unsigned char 
 18432 ;;  offset          2    3[BANK0 ] unsigned int 
 18433 ;; Return value:  Size  Location     Type
 18434 ;;                  2    0[BANK0 ] unsigned int 
 18435 ;; Registers used:
 18436 ;;		wreg, status,2, status,0
 18437 ;; Tracked objects:
 18438 ;;		On entry : 0/0
 18439 ;;		On exit  : 0/0
 18440 ;;		Unchanged: 0/0
 18441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18443 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18445 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18446 ;;Total ram usage:        5 bytes
 18447 ;; Hardware stack levels used:    1
 18448 ;; Hardware stack levels required when called:   10
 18449 ;; This function calls:
 18450 ;;		Nothing
 18451 ;; This function is called by:
 18452 ;;		__root_is_available
 18453 ;;		__write_root
 18454 ;;		_fat_get_file_size
 18455 ;;		_fat_get_file_information
 18456 ;;		__delete_root
 18457 ;;		__get_first_cluster
 18458 ;; This function uses a non-reentrant model
 18459 ;;
 18460                           
 18461                           	psect	text74
 18462  015448                     __ptext74:
 18463                           	opt stack 0
 18464  015448                     __offset_from_file_number:
 18465                           	opt stack 16
 18466                           
 18467                           ; BSR set to: 0
 18468                           ;incstack = 0
 18469                           ;__offset_from_file_number@file_number stored from wreg
 18470  015448  0100               	movlb	0	; () banked
 18471  01544A  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 18472                           
 18473                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 18474  01544C  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 18475  015450  0100               	movlb	0	; () banked
 18476  015452  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 18477                           
 18478                           ; BSR set to: 0
 18479                           ;fat16.c: 65: offset &= 0b1111;
 18480  015454  0E0F               	movlw	15
 18481  015456  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 18482  015458  0E00               	movlw	0
 18483  01545A  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18484                           
 18485                           ; BSR set to: 0
 18486                           ;fat16.c: 66: offset <<= 5;
 18487  01545C  0E05               	movlw	5
 18488  01545E                     u11495:
 18489  01545E  90D8               	bcf	status,0,c
 18490  015460  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 18491  015462  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18492  015464  2EE8               	decfsz	wreg,f,c
 18493  015466  D7FB               	goto	u11495
 18494                           
 18495                           ; BSR set to: 0
 18496                           ;fat16.c: 67: return offset;
 18497  015468  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 18498  01546C  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 18499  015470  0012               	return	
 18500  015472                     __end_of__offset_from_file_number:
 18501                           	opt stack 0
 18502                           tblptru	equ	0xFF8
 18503                           tblptrh	equ	0xFF7
 18504                           tblptrl	equ	0xFF6
 18505                           tablat	equ	0xFF5
 18506                           prodh	equ	0xFF4
 18507                           prodl	equ	0xFF3
 18508                           postinc0	equ	0xFEE
 18509                           wreg	equ	0xFE8
 18510                           postdec1	equ	0xFE5
 18511                           plusw1	equ	0xFE3
 18512                           fsr1h	equ	0xFE2
 18513                           fsr1l	equ	0xFE1
 18514                           indf2	equ	0xFDF
 18515                           postinc2	equ	0xFDE
 18516                           postdec2	equ	0xFDD
 18517                           plusw2	equ	0xFDB
 18518                           fsr2h	equ	0xFDA
 18519                           fsr2l	equ	0xFD9
 18520                           status	equ	0xFD8
 18521                           
 18522 ;; *************** function _fat_find_file *****************
 18523 ;; Defined at:
 18524 ;;		line 517 in file "fat16.c"
 18525 ;; Parameters:    Size  Location     Type
 18526 ;;  name            2   43[BANK0 ] PTR unsigned char 
 18527 ;;		 -> configFile_used_name(8), configFile_name(8), 
 18528 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 18529 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 18530 ;; Auto vars:     Size  Location     Type
 18531 ;;  offset          2   52[BANK0 ] unsigned int 
 18532 ;;  sector          2   50[BANK0 ] unsigned int 
 18533 ;;  file_number     1   49[BANK0 ] unsigned char 
 18534 ;; Return value:  Size  Location     Type
 18535 ;;                  1    wreg      unsigned char 
 18536 ;; Registers used:
 18537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18538 ;; Tracked objects:
 18539 ;;		On entry : 0/0
 18540 ;;		On exit  : 0/0
 18541 ;;		Unchanged: 0/0
 18542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18543 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18544 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18545 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18546 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18547 ;;Total ram usage:       11 bytes
 18548 ;; Hardware stack levels used:    1
 18549 ;; Hardware stack levels required when called:   15
 18550 ;; This function calls:
 18551 ;;		_flash_sector_read
 18552 ;;		_strncmp
 18553 ;; This function is called by:
 18554 ;;		_fat_create_file
 18555 ;;		_configFile_read
 18556 ;;		_configFile_write
 18557 ;; This function uses a non-reentrant model
 18558 ;;
 18559                           
 18560                           	psect	text75
 18561  011B1C                     __ptext75:
 18562                           	opt stack 0
 18563  011B1C                     _fat_find_file:
 18564                           	opt stack 13
 18565                           
 18566                           ;fat16.c: 519: uint8_t file_number = 0;
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;incstack = 0
 18570  011B1C  0E00               	movlw	0
 18571  011B1E  0100               	movlb	0	; () banked
 18572  011B20  6F91               	movwf	fat_find_file@file_number& (0+255),b
 18573                           
 18574                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 18575  011B22  0E00               	movlw	0
 18576  011B24  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 18577  011B26  0E22               	movlw	34
 18578  011B28  6F92               	movwf	fat_find_file@sector& (0+255),b
 18579                           
 18580                           ; BSR set to: 0
 18581  011B2A  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18582  011B2C  E169               	bnz	l1833
 18583  011B2E  0E26               	movlw	38
 18584  011B30  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 18585  011B32  B0D8               	btfsc	status,0,c
 18586  011B34  D065               	goto	u13280
 18587                           
 18588                           ; BSR set to: 0
 18589                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 18590                           
 18591                           ; BSR set to: 0
 18592                           
 18593                           ; BSR set to: 0
 18594  011B36  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 18595  011B3A  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 18596  011B3E  0E00               	movlw	low _buffer
 18597  011B40  6F89               	movwf	flash_sector_read@data& (0+255),b
 18598  011B42  0E0A               	movlw	high _buffer
 18599  011B44  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 18600  011B46  EC75  F0AA         	call	_flash_sector_read	;wreg free
 18601                           
 18602                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 18603  011B4A  0E00               	movlw	0
 18604  011B4C  0100               	movlb	0	; () banked
 18605  011B4E  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 18606  011B50  0E00               	movlw	0
 18607  011B52  6F94               	movwf	fat_find_file@offset& (0+255),b
 18608  011B54                     l14253:
 18609                           
 18610                           ; BSR set to: 0
 18611  011B54  0E02               	movlw	2
 18612  011B56  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 18613  011B58  B0D8               	btfsc	status,0,c
 18614  011B5A  D04D               	goto	u13270
 18615                           
 18616                           ; BSR set to: 0
 18617                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 18618                           
 18619                           ; BSR set to: 0
 18620                           
 18621                           ; BSR set to: 0
 18622  011B5C  0E00               	movlw	low _buffer
 18623  011B5E  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18624  011B60  6ED9               	movwf	fsr2l,c
 18625  011B62  0E0A               	movlw	high _buffer
 18626  011B64  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18627  011B66  6EDA               	movwf	fsr2h,c
 18628  011B68  50DF               	movf	indf2,w,c
 18629  011B6A  A4D8               	btfss	status,2,c
 18630  011B6C  D002               	goto	l1836
 18631                           
 18632                           ; BSR set to: 0
 18633                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 18634  011B6E  0EFF               	movlw	255
 18635                           
 18636                           ; BSR set to: 0
 18637  011B70  0012               	return	
 18638  011B72                     l1836:
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 18642                           
 18643                           ; BSR set to: 0
 18644  011B72  0E00               	movlw	low _buffer
 18645  011B74  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18646  011B76  6ED9               	movwf	fsr2l,c
 18647  011B78  0E0A               	movlw	high _buffer
 18648  011B7A  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18649  011B7C  6EDA               	movwf	fsr2h,c
 18650  011B7E  0EE5               	movlw	229
 18651  011B80  18DE               	xorwf	postinc2,w,c
 18652  011B82  B4D8               	btfsc	status,2,c
 18653  011B84  D032               	goto	l1842
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18657                           
 18658                           ; BSR set to: 0
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;fat16.c: 537: {;fat16.c: 541: }
 18662  011B86  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18663  011B8A  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18664  011B8E  0E00               	movlw	low _buffer
 18665  011B90  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18666  011B92  6F62               	movwf	strncmp@s2& (0+255),b
 18667  011B94  0E0A               	movlw	high _buffer
 18668  011B96  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18669  011B98  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18670  011B9A  0E00               	movlw	0
 18671  011B9C  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18672  011B9E  0E08               	movlw	8
 18673  011BA0  6F64               	movwf	strncmp@len& (0+255),b
 18674  011BA2  ECFF  F09C         	call	_strncmp	;wreg free
 18675  011BA6  0100               	movlb	0	; () banked
 18676  011BA8  5160               	movf	?_strncmp& (0+255),w,b
 18677  011BAA  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18678  011BAC  A4D8               	btfss	status,2,c
 18679  011BAE  D01D               	goto	l1842
 18680                           
 18681                           ; BSR set to: 0
 18682                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18683  011BB0  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18684  011BB4  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18685  011BB8  0E08               	movlw	8
 18686  011BBA  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18687  011BBC  6F8F               	movwf	??_fat_find_file& (0+255),b
 18688  011BBE  0E00               	movlw	0
 18689  011BC0  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18690  011BC2  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18691  011BC4  0E00               	movlw	low _buffer
 18692  011BC6  258F               	addwf	??_fat_find_file& (0+255),w,b
 18693  011BC8  6F62               	movwf	strncmp@s2& (0+255),b
 18694  011BCA  0E0A               	movlw	high _buffer
 18695  011BCC  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18696  011BCE  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18697  011BD0  0E00               	movlw	0
 18698  011BD2  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18699  011BD4  0E03               	movlw	3
 18700  011BD6  6F64               	movwf	strncmp@len& (0+255),b
 18701  011BD8  ECFF  F09C         	call	_strncmp	;wreg free
 18702  011BDC  0100               	movlb	0	; () banked
 18703  011BDE  5160               	movf	?_strncmp& (0+255),w,b
 18704  011BE0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18705  011BE2  A4D8               	btfss	status,2,c
 18706  011BE4  D002               	goto	l1842
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 18710  011BE6  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18711                           
 18712                           ; BSR set to: 0
 18713  011BE8  0012               	return	
 18714  011BEA                     l1842:
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 18718                           
 18719                           ; BSR set to: 0
 18720                           
 18721                           ; BSR set to: 0
 18722                           
 18723                           ; BSR set to: 0
 18724                           
 18725                           ; BSR set to: 0
 18726  011BEA  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18727                           
 18728                           ; BSR set to: 0
 18729  011BEC  0E20               	movlw	32
 18730  011BEE  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18731  011BF0  0E00               	movlw	0
 18732  011BF2  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18733  011BF4  D7AF               	goto	l14253
 18734  011BF6                     u13270:
 18735                           
 18736                           ; BSR set to: 0
 18737                           
 18738                           ; BSR set to: 0
 18739  011BF6  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18740  011BF8  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18741                           
 18742                           ; BSR set to: 0
 18743  011BFA  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18744  011BFC  E101               	bnz	l14287
 18745  011BFE  D797               	goto	L4
 18746  011C00                     u13280:
 18747  011C00                     l1833:
 18748  011C00                     l14287:
 18749                           
 18750                           ; BSR set to: 0
 18751                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 18752  011C00  0EFF               	movlw	255
 18753  011C02  0012               	return	
 18754  011C04                     __end_of_fat_find_file:
 18755                           	opt stack 0
 18756                           tblptru	equ	0xFF8
 18757                           tblptrh	equ	0xFF7
 18758                           tblptrl	equ	0xFF6
 18759                           tablat	equ	0xFF5
 18760                           prodh	equ	0xFF4
 18761                           prodl	equ	0xFF3
 18762                           postinc0	equ	0xFEE
 18763                           wreg	equ	0xFE8
 18764                           postdec1	equ	0xFE5
 18765                           plusw1	equ	0xFE3
 18766                           fsr1h	equ	0xFE2
 18767                           fsr1l	equ	0xFE1
 18768                           indf2	equ	0xFDF
 18769                           postinc2	equ	0xFDE
 18770                           postdec2	equ	0xFDD
 18771                           plusw2	equ	0xFDB
 18772                           fsr2h	equ	0xFDA
 18773                           fsr2l	equ	0xFD9
 18774                           status	equ	0xFD8
 18775                           
 18776 ;; *************** function _strncmp *****************
 18777 ;; Defined at:
 18778 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18781 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18782 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18783 ;;		 -> buffer(512), 
 18784 ;;  len             2    4[BANK0 ] unsigned int 
 18785 ;; Auto vars:     Size  Location     Type
 18786 ;;		None
 18787 ;; Return value:  Size  Location     Type
 18788 ;;                  2    0[BANK0 ] int 
 18789 ;; Registers used:
 18790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18791 ;; Tracked objects:
 18792 ;;		On entry : 0/0
 18793 ;;		On exit  : 0/0
 18794 ;;		Unchanged: 0/0
 18795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18796 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18798 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18799 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18800 ;;Total ram usage:        9 bytes
 18801 ;; Hardware stack levels used:    1
 18802 ;; Hardware stack levels required when called:   10
 18803 ;; This function calls:
 18804 ;;		Nothing
 18805 ;; This function is called by:
 18806 ;;		_fat_find_file
 18807 ;; This function uses a non-reentrant model
 18808 ;;
 18809                           
 18810                           	psect	text76
 18811  0139FE                     __ptext76:
 18812                           	opt stack 0
 18813  0139FE                     _strncmp:
 18814                           	opt stack 17
 18815                           
 18816                           ; BSR set to: 0
 18817                           ;incstack = 0
 18818  0139FE  D031               	goto	l3669
 18819  013A00                     l13707:
 18820  013A00  C060  FFD9         	movff	strncmp@s1,fsr2l
 18821  013A04  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18822  013A08  50DF               	movf	indf2,w,c
 18823  013A0A  B4D8               	btfsc	status,2,c
 18824  013A0C  D00C               	goto	u12590
 18825  013A0E  C062  FFD9         	movff	strncmp@s2,fsr2l
 18826  013A12  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18827  013A16  C060  FFE1         	movff	strncmp@s1,fsr1l
 18828  013A1A  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18829  013A1E  50DE               	movf	postinc2,w,c
 18830  013A20  18E6               	xorwf	postinc1,w,c
 18831  013A22  B4D8               	btfsc	status,2,c
 18832  013A24  D019               	goto	l3671
 18833  013A26                     u12590:
 18834  013A26  C062  FFD9         	movff	strncmp@s2,fsr2l
 18835  013A2A  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18836  013A2E  50DF               	movf	indf2,w,c
 18837  013A30  0100               	movlb	0	; () banked
 18838  013A32  6F66               	movwf	??_strncmp& (0+255),b
 18839  013A34  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18840  013A36  1F66               	comf	??_strncmp& (0+255),f,b
 18841  013A38  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18842  013A3A  4B66               	infsnz	??_strncmp& (0+255),f,b
 18843  013A3C  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18844  013A3E  C060  FFD9         	movff	strncmp@s1,fsr2l
 18845  013A42  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18846  013A46  50DF               	movf	indf2,w,c
 18847  013A48  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18848  013A4A  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18849  013A4C  2566               	addwf	??_strncmp& (0+255),w,b
 18850  013A4E  6F60               	movwf	?_strncmp& (0+255),b
 18851  013A50  0E00               	movlw	0
 18852  013A52  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18853  013A54  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18854                           
 18855                           ; BSR set to: 0
 18856  013A56  0012               	return	
 18857  013A58                     l3671:
 18858                           
 18859                           ; BSR set to: 0
 18860  013A58  0100               	movlb	0	; () banked
 18861  013A5A  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18862  013A5C  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18863  013A5E  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18864  013A60  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18865  013A62                     l3669:
 18866                           
 18867                           ; BSR set to: 0
 18868  013A62  0100               	movlb	0	; () banked
 18869  013A64  0764               	decf	strncmp@len& (0+255),f,b
 18870  013A66  A0D8               	btfss	status,0,c
 18871  013A68  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18872  013A6A  2964               	incf	strncmp@len& (0+255),w,b
 18873  013A6C  E1C9               	bnz	l13707
 18874  013A6E  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18875  013A70  A4D8               	btfss	status,2,c
 18876  013A72  D7C6               	goto	l3670
 18877                           
 18878                           ; BSR set to: 0
 18879                           
 18880                           ; BSR set to: 0
 18881  013A74  0E00               	movlw	0
 18882  013A76  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18883  013A78  0E00               	movlw	0
 18884  013A7A  6F60               	movwf	?_strncmp& (0+255),b
 18885  013A7C  0012               	return	
 18886  013A7E                     __end_of_strncmp:
 18887                           	opt stack 0
 18888                           tblptru	equ	0xFF8
 18889                           tblptrh	equ	0xFF7
 18890                           tblptrl	equ	0xFF6
 18891                           tablat	equ	0xFF5
 18892                           prodh	equ	0xFF4
 18893                           prodl	equ	0xFF3
 18894                           postinc0	equ	0xFEE
 18895                           wreg	equ	0xFE8
 18896                           postinc1	equ	0xFE6
 18897                           postdec1	equ	0xFE5
 18898                           plusw1	equ	0xFE3
 18899                           fsr1h	equ	0xFE2
 18900                           fsr1l	equ	0xFE1
 18901                           indf2	equ	0xFDF
 18902                           postinc2	equ	0xFDE
 18903                           postdec2	equ	0xFDD
 18904                           plusw2	equ	0xFDB
 18905                           fsr2h	equ	0xFDA
 18906                           fsr2l	equ	0xFD9
 18907                           status	equ	0xFD8
 18908                           
 18909 ;; *************** function __parse_item *****************
 18910 ;; Defined at:
 18911 ;;		line 108 in file "config_file.c"
 18912 ;; Parameters:    Size  Location     Type
 18913 ;;  item_string     2   26[BANK0 ] PTR unsigned char 
 18914 ;;		 -> configFile_read@item_string(31), 
 18915 ;;  value_string    2   28[BANK0 ] PTR unsigned char 
 18916 ;;		 -> configFile_read@value_string(12), 
 18917 ;; Auto vars:     Size  Location     Type
 18918 ;;		None
 18919 ;; Return value:  Size  Location     Type
 18920 ;;                  1    wreg      unsigned char 
 18921 ;; Registers used:
 18922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18923 ;; Tracked objects:
 18924 ;;		On entry : 0/0
 18925 ;;		On exit  : 0/0
 18926 ;;		Unchanged: 0/0
 18927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18931 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18932 ;;Total ram usage:        4 bytes
 18933 ;; Hardware stack levels used:    1
 18934 ;; Hardware stack levels required when called:   12
 18935 ;; This function calls:
 18936 ;;		_atoi
 18937 ;;		_atol
 18938 ;;		_stricmp
 18939 ;; This function is called by:
 18940 ;;		_configFile_read
 18941 ;; This function uses a non-reentrant model
 18942 ;;
 18943                           
 18944                           	psect	text77
 18945  00C98A                     __ptext77:
 18946                           	opt stack 0
 18947  00C98A                     __parse_item:
 18948                           	opt stack 16
 18949                           
 18950                           ;config_file.c: 110: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18951                           
 18952                           ; BSR set to: 0
 18953                           ;incstack = 0
 18954  00C98A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18955  00C98E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18956  00C992  0EFD               	movlw	low _full_circle_in_steps_string
 18957  00C994  0100               	movlb	0	; () banked
 18958  00C996  6F63               	movwf	stricmp@s2& (0+255),b
 18959  00C998  0EA1               	movlw	high _full_circle_in_steps_string
 18960  00C99A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18961  00C99C  EC41  F0A2         	call	_stricmp	;wreg free
 18962  00C9A0  0100               	movlb	0	; () banked
 18963  00C9A2  5161               	movf	?_stricmp& (0+255),w,b
 18964  00C9A4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18965  00C9A6  A4D8               	btfss	status,2,c
 18966  00C9A8  D00F               	goto	l2881
 18967                           
 18968                           ; BSR set to: 0
 18969                           ;config_file.c: 111: {;config_file.c: 112: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18970  00C9AA  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18971  00C9AE  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18972  00C9B2  ECB5  F08A         	call	_atol	;wreg free
 18973  00C9B6  C06C  F1A1         	movff	?_atol,_config
 18974  00C9BA  C06D  F1A2         	movff	?_atol+1,_config+1
 18975  00C9BE  C06E  F1A3         	movff	?_atol+2,_config+2
 18976  00C9C2  C06F  F1A4         	movff	?_atol+3,_config+3
 18977                           
 18978                           ;config_file.c: 113: return 1;;	Return value of __parse_item is never used
 18979  00C9C6  0012               	return	
 18980  00C9C8                     l2881:
 18981                           
 18982                           ;config_file.c: 114: };config_file.c: 116: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18983  00C9C8  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18984  00C9CC  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18985  00C9D0  0E12               	movlw	low _overshoot_in_steps_string
 18986  00C9D2  0100               	movlb	0	; () banked
 18987  00C9D4  6F63               	movwf	stricmp@s2& (0+255),b
 18988  00C9D6  0EA2               	movlw	high _overshoot_in_steps_string
 18989  00C9D8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18990  00C9DA  EC41  F0A2         	call	_stricmp	;wreg free
 18991  00C9DE  0100               	movlb	0	; () banked
 18992  00C9E0  5161               	movf	?_stricmp& (0+255),w,b
 18993  00C9E2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18994  00C9E4  A4D8               	btfss	status,2,c
 18995  00C9E6  D00B               	goto	l2883
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;config_file.c: 117: {;config_file.c: 118: config.overshoot_in_steps = atoi(value_string
      +                          );
 18999  00C9E8  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19000  00C9EC  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19001  00C9F0  EC86  F091         	call	_atoi	;wreg free
 19002  00C9F4  C066  F1A6         	movff	?_atoi,_config+5
 19003  00C9F8  C067  F1A7         	movff	?_atoi+1,_config+6
 19004                           
 19005                           ;config_file.c: 119: return 2;;	Return value of __parse_item is never used
 19006  00C9FC  0012               	return	
 19007  00C9FE                     l2883:
 19008                           
 19009                           ;config_file.c: 120: };config_file.c: 122: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 19010  00C9FE  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19011  00CA02  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19012  00CA06  0E49               	movlw	low _inverse_direction_string
 19013  00CA08  0100               	movlb	0	; () banked
 19014  00CA0A  6F63               	movwf	stricmp@s2& (0+255),b
 19015  00CA0C  0EA2               	movlw	high _inverse_direction_string
 19016  00CA0E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19017  00CA10  EC41  F0A2         	call	_stricmp	;wreg free
 19018  00CA14  0100               	movlb	0	; () banked
 19019  00CA16  5161               	movf	?_stricmp& (0+255),w,b
 19020  00CA18  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19021  00CA1A  A4D8               	btfss	status,2,c
 19022  00CA1C  D00B               	goto	l2884
 19023                           
 19024                           ; BSR set to: 0
 19025                           ;config_file.c: 123: {;config_file.c: 124: config.inverse_direction = atol(value_string)
      +                          ;
 19026  00CA1E  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19027  00CA22  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19028  00CA26  ECB5  F08A         	call	_atol	;wreg free
 19029  00CA2A  0100               	movlb	0	; () banked
 19030  00CA2C  516C               	movf	?_atol& (0+255),w,b
 19031  00CA2E  0101               	movlb	1	; () banked
 19032  00CA30  6FA5               	movwf	(_config+4)& (0+255),b
 19033                           
 19034                           ; BSR set to: 1
 19035                           ;config_file.c: 125: return 3;;	Return value of __parse_item is never used
 19036  00CA32  0012               	return	
 19037  00CA34                     l2884:
 19038                           
 19039                           ;config_file.c: 126: };config_file.c: 128: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19040                           
 19041                           ; BSR set to: 1
 19042  00CA34  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19043  00CA38  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19044  00CA3C  0E12               	movlw	low _overshoot_in_steps_string
 19045  00CA3E  0100               	movlb	0	; () banked
 19046  00CA40  6F63               	movwf	stricmp@s2& (0+255),b
 19047  00CA42  0EA2               	movlw	high _overshoot_in_steps_string
 19048  00CA44  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19049  00CA46  EC41  F0A2         	call	_stricmp	;wreg free
 19050  00CA4A  0100               	movlb	0	; () banked
 19051  00CA4C  5161               	movf	?_stricmp& (0+255),w,b
 19052  00CA4E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19053  00CA50  A4D8               	btfss	status,2,c
 19054  00CA52  D00B               	goto	l2885
 19055                           
 19056                           ; BSR set to: 0
 19057                           ;config_file.c: 129: {;config_file.c: 130: config.overshoot_in_steps = atoi(value_string
      +                          );
 19058  00CA54  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19059  00CA58  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19060  00CA5C  EC86  F091         	call	_atoi	;wreg free
 19061  00CA60  C066  F1A6         	movff	?_atoi,_config+5
 19062  00CA64  C067  F1A7         	movff	?_atoi+1,_config+6
 19063                           
 19064                           ;config_file.c: 131: return 4;;	Return value of __parse_item is never used
 19065  00CA68  0012               	return	
 19066  00CA6A                     l2885:
 19067                           
 19068                           ;config_file.c: 132: };config_file.c: 134: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 19069  00CA6A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19070  00CA6E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19071  00CA72  0EBB               	movlw	low _overshoot_cost_in_steps_string
 19072  00CA74  0100               	movlb	0	; () banked
 19073  00CA76  6F63               	movwf	stricmp@s2& (0+255),b
 19074  00CA78  0EA1               	movlw	high _overshoot_cost_in_steps_string
 19075  00CA7A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19076  00CA7C  EC41  F0A2         	call	_stricmp	;wreg free
 19077  00CA80  0100               	movlb	0	; () banked
 19078  00CA82  5161               	movf	?_stricmp& (0+255),w,b
 19079  00CA84  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19080  00CA86  A4D8               	btfss	status,2,c
 19081  00CA88  D00B               	goto	l2886
 19082                           
 19083                           ; BSR set to: 0
 19084                           ;config_file.c: 135: {;config_file.c: 136: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 19085  00CA8A  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19086  00CA8E  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19087  00CA92  EC86  F091         	call	_atoi	;wreg free
 19088  00CA96  C066  F1A8         	movff	?_atoi,_config+7
 19089  00CA9A  C067  F1A9         	movff	?_atoi+1,_config+8
 19090                           
 19091                           ;config_file.c: 137: return 5;;	Return value of __parse_item is never used
 19092  00CA9E  0012               	return	
 19093  00CAA0                     l2886:
 19094                           
 19095                           ;config_file.c: 138: };config_file.c: 140: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 19096  00CAA0  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19097  00CAA4  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19098  00CAA8  0E97               	movlw	low _minimum_speed_string
 19099  00CAAA  0100               	movlb	0	; () banked
 19100  00CAAC  6F63               	movwf	stricmp@s2& (0+255),b
 19101  00CAAE  0EA2               	movlw	high _minimum_speed_string
 19102  00CAB0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19103  00CAB2  EC41  F0A2         	call	_stricmp	;wreg free
 19104  00CAB6  0100               	movlb	0	; () banked
 19105  00CAB8  5161               	movf	?_stricmp& (0+255),w,b
 19106  00CABA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19107  00CABC  A4D8               	btfss	status,2,c
 19108  00CABE  D00B               	goto	l2887
 19109                           
 19110                           ; BSR set to: 0
 19111                           ;config_file.c: 141: {;config_file.c: 142: config.minimum_speed = atoi(value_string);
 19112  00CAC0  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19113  00CAC4  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19114  00CAC8  EC86  F091         	call	_atoi	;wreg free
 19115  00CACC  C066  F1AA         	movff	?_atoi,_config+9
 19116  00CAD0  C067  F1AB         	movff	?_atoi+1,_config+10
 19117                           
 19118                           ;config_file.c: 143: return 6;;	Return value of __parse_item is never used
 19119  00CAD4  0012               	return	
 19120  00CAD6                     l2887:
 19121                           
 19122                           ;config_file.c: 144: };config_file.c: 146: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 19123  00CAD6  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19124  00CADA  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19125  00CADE  0E89               	movlw	low _maximum_speed_string
 19126  00CAE0  0100               	movlb	0	; () banked
 19127  00CAE2  6F63               	movwf	stricmp@s2& (0+255),b
 19128  00CAE4  0EA2               	movlw	high _maximum_speed_string
 19129  00CAE6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19130  00CAE8  EC41  F0A2         	call	_stricmp	;wreg free
 19131  00CAEC  0100               	movlb	0	; () banked
 19132  00CAEE  5161               	movf	?_stricmp& (0+255),w,b
 19133  00CAF0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19134  00CAF2  A4D8               	btfss	status,2,c
 19135  00CAF4  D00B               	goto	l2888
 19136                           
 19137                           ; BSR set to: 0
 19138                           ;config_file.c: 147: {;config_file.c: 148: config.maximum_speed = atoi(value_string);
 19139  00CAF6  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19140  00CAFA  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19141  00CAFE  EC86  F091         	call	_atoi	;wreg free
 19142  00CB02  C066  F1AC         	movff	?_atoi,_config+11
 19143  00CB06  C067  F1AD         	movff	?_atoi+1,_config+12
 19144                           
 19145                           ;config_file.c: 149: return 7;;	Return value of __parse_item is never used
 19146  00CB0A  0012               	return	
 19147  00CB0C                     l2888:
 19148                           
 19149                           ;config_file.c: 150: };config_file.c: 152: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 19150  00CB0C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19151  00CB10  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19152  00CB14  0E37               	movlw	low _initial_speed_arc_string
 19153  00CB16  0100               	movlb	0	; () banked
 19154  00CB18  6F63               	movwf	stricmp@s2& (0+255),b
 19155  00CB1A  0EA2               	movlw	high _initial_speed_arc_string
 19156  00CB1C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19157  00CB1E  EC41  F0A2         	call	_stricmp	;wreg free
 19158  00CB22  0100               	movlb	0	; () banked
 19159  00CB24  5161               	movf	?_stricmp& (0+255),w,b
 19160  00CB26  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19161  00CB28  A4D8               	btfss	status,2,c
 19162  00CB2A  D00B               	goto	l2889
 19163                           
 19164                           ; BSR set to: 0
 19165                           ;config_file.c: 153: {;config_file.c: 154: config.initial_speed_arc = atoi(value_string)
      +                          ;
 19166  00CB2C  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19167  00CB30  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19168  00CB34  EC86  F091         	call	_atoi	;wreg free
 19169  00CB38  C066  F1AE         	movff	?_atoi,_config+13
 19170  00CB3C  C067  F1AF         	movff	?_atoi+1,_config+14
 19171                           
 19172                           ;config_file.c: 155: return 8;;	Return value of __parse_item is never used
 19173  00CB40  0012               	return	
 19174  00CB42                     l2889:
 19175                           
 19176                           ;config_file.c: 156: };config_file.c: 158: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 19177  00CB42  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19178  00CB46  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19179  00CB4A  0E25               	movlw	low _maximum_speed_arc_string
 19180  00CB4C  0100               	movlb	0	; () banked
 19181  00CB4E  6F63               	movwf	stricmp@s2& (0+255),b
 19182  00CB50  0EA2               	movlw	high _maximum_speed_arc_string
 19183  00CB52  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19184  00CB54  EC41  F0A2         	call	_stricmp	;wreg free
 19185  00CB58  0100               	movlb	0	; () banked
 19186  00CB5A  5161               	movf	?_stricmp& (0+255),w,b
 19187  00CB5C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19188  00CB5E  A4D8               	btfss	status,2,c
 19189  00CB60  D00B               	goto	l2890
 19190                           
 19191                           ; BSR set to: 0
 19192                           ;config_file.c: 159: {;config_file.c: 160: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 19193  00CB62  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19194  00CB66  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19195  00CB6A  EC86  F091         	call	_atoi	;wreg free
 19196  00CB6E  C066  F1B0         	movff	?_atoi,_config+15
 19197  00CB72  C067  F1B1         	movff	?_atoi+1,_config+16
 19198                           
 19199                           ;config_file.c: 161: return 9;;	Return value of __parse_item is never used
 19200  00CB76  0012               	return	
 19201  00CB78                     l2890:
 19202                           
 19203                           ;config_file.c: 162: };config_file.c: 164: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 19204  00CB78  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19205  00CB7C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19206  00CB80  0EE8               	movlw	low _initial_speed_manual_string
 19207  00CB82  0100               	movlb	0	; () banked
 19208  00CB84  6F63               	movwf	stricmp@s2& (0+255),b
 19209  00CB86  0EA1               	movlw	high _initial_speed_manual_string
 19210  00CB88  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19211  00CB8A  EC41  F0A2         	call	_stricmp	;wreg free
 19212  00CB8E  0100               	movlb	0	; () banked
 19213  00CB90  5161               	movf	?_stricmp& (0+255),w,b
 19214  00CB92  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19215  00CB94  A4D8               	btfss	status,2,c
 19216  00CB96  D00B               	goto	l2891
 19217                           
 19218                           ; BSR set to: 0
 19219                           ;config_file.c: 165: {;config_file.c: 166: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 19220  00CB98  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19221  00CB9C  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19222  00CBA0  EC86  F091         	call	_atoi	;wreg free
 19223  00CBA4  C066  F1B2         	movff	?_atoi,_config+17
 19224  00CBA8  C067  F1B3         	movff	?_atoi+1,_config+18
 19225                           
 19226                           ;config_file.c: 167: return 10;;	Return value of __parse_item is never used
 19227  00CBAC  0012               	return	
 19228  00CBAE                     l2891:
 19229                           
 19230                           ;config_file.c: 168: };config_file.c: 170: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 19231  00CBAE  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19232  00CBB2  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19233  00CBB6  0ED3               	movlw	low _maximum_speed_manual_string
 19234  00CBB8  0100               	movlb	0	; () banked
 19235  00CBBA  6F63               	movwf	stricmp@s2& (0+255),b
 19236  00CBBC  0EA1               	movlw	high _maximum_speed_manual_string
 19237  00CBBE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19238  00CBC0  EC41  F0A2         	call	_stricmp	;wreg free
 19239  00CBC4  0100               	movlb	0	; () banked
 19240  00CBC6  5161               	movf	?_stricmp& (0+255),w,b
 19241  00CBC8  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19242  00CBCA  A4D8               	btfss	status,2,c
 19243  00CBCC  D00B               	goto	l2892
 19244                           
 19245                           ; BSR set to: 0
 19246                           ;config_file.c: 171: {;config_file.c: 172: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 19247  00CBCE  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19248  00CBD2  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19249  00CBD6  EC86  F091         	call	_atoi	;wreg free
 19250  00CBDA  C066  F1B4         	movff	?_atoi,_config+19
 19251  00CBDE  C067  F1B5         	movff	?_atoi+1,_config+20
 19252                           
 19253                           ;config_file.c: 173: return 11;;	Return value of __parse_item is never used
 19254  00CBE2  0012               	return	
 19255  00CBE4                     l2892:
 19256                           
 19257                           ;config_file.c: 174: };config_file.c: 176: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 19258  00CBE4  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19259  00CBE8  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19260  00CBEC  0E7B               	movlw	low _beep_duration_string
 19261  00CBEE  0100               	movlb	0	; () banked
 19262  00CBF0  6F63               	movwf	stricmp@s2& (0+255),b
 19263  00CBF2  0EA2               	movlw	high _beep_duration_string
 19264  00CBF4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19265  00CBF6  EC41  F0A2         	call	_stricmp	;wreg free
 19266  00CBFA  0100               	movlb	0	; () banked
 19267  00CBFC  5161               	movf	?_stricmp& (0+255),w,b
 19268  00CBFE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19269  00CC00  A4D8               	btfss	status,2,c
 19270  00CC02  D00B               	goto	l2893
 19271                           
 19272                           ; BSR set to: 0
 19273                           ;config_file.c: 177: {;config_file.c: 178: config.beep_duration = atoi(value_string);
 19274  00CC04  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19275  00CC08  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19276  00CC0C  EC86  F091         	call	_atoi	;wreg free
 19277  00CC10  0100               	movlb	0	; () banked
 19278  00CC12  5166               	movf	?_atoi& (0+255),w,b
 19279  00CC14  0101               	movlb	1	; () banked
 19280  00CC16  6FB6               	movwf	(_config+21)& (0+255),b
 19281                           
 19282                           ; BSR set to: 1
 19283                           ;config_file.c: 179: return 12;;	Return value of __parse_item is never used
 19284  00CC18  0012               	return	
 19285  00CC1A                     l2893:
 19286                           
 19287                           ;config_file.c: 180: };config_file.c: 182: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 19288                           
 19289                           ; BSR set to: 1
 19290  00CC1A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19291  00CC1E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19292  00CC22  0EA5               	movlw	low _use_cw_limit_string
 19293  00CC24  0100               	movlb	0	; () banked
 19294  00CC26  6F63               	movwf	stricmp@s2& (0+255),b
 19295  00CC28  0EA2               	movlw	high _use_cw_limit_string
 19296  00CC2A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19297  00CC2C  EC41  F0A2         	call	_stricmp	;wreg free
 19298  00CC30  0100               	movlb	0	; () banked
 19299  00CC32  5161               	movf	?_stricmp& (0+255),w,b
 19300  00CC34  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19301  00CC36  A4D8               	btfss	status,2,c
 19302  00CC38  D00B               	goto	l2894
 19303                           
 19304                           ; BSR set to: 0
 19305                           ;config_file.c: 183: {;config_file.c: 184: config.use_cw_limit = atol(value_string);
 19306  00CC3A  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19307  00CC3E  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19308  00CC42  ECB5  F08A         	call	_atol	;wreg free
 19309  00CC46  0100               	movlb	0	; () banked
 19310  00CC48  516C               	movf	?_atol& (0+255),w,b
 19311  00CC4A  0101               	movlb	1	; () banked
 19312  00CC4C  6FB7               	movwf	(_config+22)& (0+255),b
 19313                           
 19314                           ; BSR set to: 1
 19315                           ;config_file.c: 185: return 13;;	Return value of __parse_item is never used
 19316  00CC4E  0012               	return	
 19317  00CC50                     l2894:
 19318                           
 19319                           ;config_file.c: 186: };config_file.c: 188: if(stricmp(item_string, cw_limit_string)==0)
 19320                           
 19321                           ; BSR set to: 1
 19322  00CC50  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19323  00CC54  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19324  00CC58  0EBC               	movlw	low _cw_limit_string
 19325  00CC5A  0100               	movlb	0	; () banked
 19326  00CC5C  6F63               	movwf	stricmp@s2& (0+255),b
 19327  00CC5E  0EA2               	movlw	high _cw_limit_string
 19328  00CC60  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19329  00CC62  EC41  F0A2         	call	_stricmp	;wreg free
 19330  00CC66  0100               	movlb	0	; () banked
 19331  00CC68  5161               	movf	?_stricmp& (0+255),w,b
 19332  00CC6A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19333  00CC6C  A4D8               	btfss	status,2,c
 19334  00CC6E  D00B               	goto	l2895
 19335                           
 19336                           ; BSR set to: 0
 19337                           ;config_file.c: 189: {;config_file.c: 190: config.cw_limit = atol(value_string);
 19338  00CC70  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19339  00CC74  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19340  00CC78  ECB5  F08A         	call	_atol	;wreg free
 19341  00CC7C  C06C  F1B8         	movff	?_atol,_config+23
 19342  00CC80  C06D  F1B9         	movff	?_atol+1,_config+24
 19343                           
 19344                           ;config_file.c: 191: return 14;;	Return value of __parse_item is never used
 19345  00CC84  0012               	return	
 19346  00CC86                     l2895:
 19347                           
 19348                           ;config_file.c: 192: };config_file.c: 194: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 19349  00CC86  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19350  00CC8A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19351  00CC8E  0E6D               	movlw	low _use_ccw_limit_string
 19352  00CC90  0100               	movlb	0	; () banked
 19353  00CC92  6F63               	movwf	stricmp@s2& (0+255),b
 19354  00CC94  0EA2               	movlw	high _use_ccw_limit_string
 19355  00CC96  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19356  00CC98  EC41  F0A2         	call	_stricmp	;wreg free
 19357  00CC9C  0100               	movlb	0	; () banked
 19358  00CC9E  5161               	movf	?_stricmp& (0+255),w,b
 19359  00CCA0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19360  00CCA2  A4D8               	btfss	status,2,c
 19361  00CCA4  D00B               	goto	l2896
 19362                           
 19363                           ; BSR set to: 0
 19364                           ;config_file.c: 195: {;config_file.c: 196: config.use_ccw_limit = atol(value_string);
 19365  00CCA6  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19366  00CCAA  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19367  00CCAE  ECB5  F08A         	call	_atol	;wreg free
 19368  00CCB2  0100               	movlb	0	; () banked
 19369  00CCB4  516C               	movf	?_atol& (0+255),w,b
 19370  00CCB6  0101               	movlb	1	; () banked
 19371  00CCB8  6FBA               	movwf	(_config+25)& (0+255),b
 19372                           
 19373                           ; BSR set to: 1
 19374                           ;config_file.c: 197: return 15;;	Return value of __parse_item is never used
 19375  00CCBA  0012               	return	
 19376  00CCBC                     l2896:
 19377                           
 19378                           ;config_file.c: 198: };config_file.c: 200: if(stricmp(item_string, ccw_limit_string)==0)
 19379                           
 19380                           ; BSR set to: 1
 19381  00CCBC  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19382  00CCC0  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19383  00CCC4  0EB2               	movlw	low _ccw_limit_string
 19384  00CCC6  0100               	movlb	0	; () banked
 19385  00CCC8  6F63               	movwf	stricmp@s2& (0+255),b
 19386  00CCCA  0EA2               	movlw	high _ccw_limit_string
 19387  00CCCC  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19388  00CCCE  EC41  F0A2         	call	_stricmp	;wreg free
 19389  00CCD2  0100               	movlb	0	; () banked
 19390  00CCD4  5161               	movf	?_stricmp& (0+255),w,b
 19391  00CCD6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19392  00CCD8  A4D8               	btfss	status,2,c
 19393  00CCDA  0012               	return	
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;config_file.c: 201: {;config_file.c: 202: config.ccw_limit = atol(value_string);
 19397  00CCDC  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19398  00CCE0  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19399  00CCE4  ECB5  F08A         	call	_atol	;wreg free
 19400  00CCE8  C06C  F1BB         	movff	?_atol,_config+26
 19401  00CCEC  C06D  F1BC         	movff	?_atol+1,_config+27
 19402                           
 19403                           ;config_file.c: 203: return 16;;	Return value of __parse_item is never used
 19404  00CCF0  0012               	return	
 19405  00CCF2                     __end_of__parse_item:
 19406                           	opt stack 0
 19407                           tblptru	equ	0xFF8
 19408                           tblptrh	equ	0xFF7
 19409                           tblptrl	equ	0xFF6
 19410                           tablat	equ	0xFF5
 19411                           prodh	equ	0xFF4
 19412                           prodl	equ	0xFF3
 19413                           postinc0	equ	0xFEE
 19414                           wreg	equ	0xFE8
 19415                           postinc1	equ	0xFE6
 19416                           postdec1	equ	0xFE5
 19417                           plusw1	equ	0xFE3
 19418                           fsr1h	equ	0xFE2
 19419                           fsr1l	equ	0xFE1
 19420                           indf2	equ	0xFDF
 19421                           postinc2	equ	0xFDE
 19422                           postdec2	equ	0xFDD
 19423                           plusw2	equ	0xFDB
 19424                           fsr2h	equ	0xFDA
 19425                           fsr2l	equ	0xFD9
 19426                           status	equ	0xFD8
 19427                           
 19428 ;; *************** function _stricmp *****************
 19429 ;; Defined at:
 19430 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 19433 ;;		 -> configFile_read@item_string(31), 
 19434 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 19435 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 19436 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 19437 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 19438 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 19439 ;; Auto vars:     Size  Location     Type
 19440 ;;  r               1    6[BANK0 ] char 
 19441 ;; Return value:  Size  Location     Type
 19442 ;;                  2    1[BANK0 ] int 
 19443 ;; Registers used:
 19444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19445 ;; Tracked objects:
 19446 ;;		On entry : 0/0
 19447 ;;		On exit  : 0/0
 19448 ;;		Unchanged: 0/0
 19449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19453 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19454 ;;Total ram usage:        6 bytes
 19455 ;; Hardware stack levels used:    1
 19456 ;; Hardware stack levels required when called:   11
 19457 ;; This function calls:
 19458 ;;		_toupper
 19459 ;; This function is called by:
 19460 ;;		__parse_item
 19461 ;; This function uses a non-reentrant model
 19462 ;;
 19463                           
 19464                           	psect	text78
 19465  014482                     __ptext78:
 19466                           	opt stack 0
 19467  014482                     _stricmp:
 19468                           	opt stack 16
 19469                           
 19470                           ;incstack = 0
 19471  014482  D005               	goto	l3655
 19472  014484  0100               	movlb	0	; () banked
 19473  014486  4B61               	infsnz	stricmp@s1& (0+255),f,b
 19474  014488  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 19475  01448A  4B63               	infsnz	stricmp@s2& (0+255),f,b
 19476  01448C  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 19477  01448E                     l3655:
 19478                           
 19479                           ; BSR set to: 0
 19480  01448E  C063  FFF6         	movff	stricmp@s2,tblptrl
 19481  014492  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 19482  014496                     	if	0	;tblptru may be non-zero
 19483  014496                     	endif
 19484  014496                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19485  014496  0E00               	movlw	low (__mediumconst shr (0+16))
 19486  014498  6EF8               	movwf	tblptru,c
 19487  01449A                     	endif
 19488  01449A  0008               	tblrd		*
 19489  01449C  50F5               	movf	tablat,w,c
 19490  01449E  EC79  F0AB         	call	_toupper
 19491  0144A2  0800               	sublw	0
 19492  0144A4  0100               	movlb	0	; () banked
 19493  0144A6  6F65               	movwf	??_stricmp& (0+255),b
 19494  0144A8  C061  FFD9         	movff	stricmp@s1,fsr2l
 19495  0144AC  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19496  0144B0  50DF               	movf	indf2,w,c
 19497  0144B2  EC79  F0AB         	call	_toupper
 19498  0144B6  0100               	movlb	0	; () banked
 19499  0144B8  2565               	addwf	??_stricmp& (0+255),w,b
 19500  0144BA  6F66               	movwf	stricmp@r& (0+255),b
 19501  0144BC  5166               	movf	stricmp@r& (0+255),w,b
 19502  0144BE  A4D8               	btfss	status,2,c
 19503  0144C0  D007               	goto	u13590
 19504                           
 19505                           ; BSR set to: 0
 19506  0144C2  C061  FFD9         	movff	stricmp@s1,fsr2l
 19507  0144C6  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19508  0144CA  50DF               	movf	indf2,w,c
 19509  0144CC  A4D8               	btfss	status,2,c
 19510  0144CE  D7DA               	goto	l3656
 19511  0144D0                     u13590:
 19512                           
 19513                           ; BSR set to: 0
 19514                           
 19515                           ; BSR set to: 0
 19516                           
 19517                           ; BSR set to: 0
 19518  0144D0  5166               	movf	stricmp@r& (0+255),w,b
 19519  0144D2  6F61               	movwf	?_stricmp& (0+255),b
 19520  0144D4  6B62               	clrf	(?_stricmp+1)& (0+255),b
 19521  0144D6  BF61               	btfsc	?_stricmp& (0+255),7,b
 19522  0144D8  0762               	decf	(?_stricmp+1)& (0+255),f,b
 19523  0144DA  0012               	return	
 19524  0144DC                     __end_of_stricmp:
 19525                           	opt stack 0
 19526                           tblptru	equ	0xFF8
 19527                           tblptrh	equ	0xFF7
 19528                           tblptrl	equ	0xFF6
 19529                           tablat	equ	0xFF5
 19530                           prodh	equ	0xFF4
 19531                           prodl	equ	0xFF3
 19532                           postinc0	equ	0xFEE
 19533                           wreg	equ	0xFE8
 19534                           postinc1	equ	0xFE6
 19535                           postdec1	equ	0xFE5
 19536                           plusw1	equ	0xFE3
 19537                           fsr1h	equ	0xFE2
 19538                           fsr1l	equ	0xFE1
 19539                           indf2	equ	0xFDF
 19540                           postinc2	equ	0xFDE
 19541                           postdec2	equ	0xFDD
 19542                           plusw2	equ	0xFDB
 19543                           fsr2h	equ	0xFDA
 19544                           fsr2l	equ	0xFD9
 19545                           status	equ	0xFD8
 19546                           
 19547 ;; *************** function _toupper *****************
 19548 ;; Defined at:
 19549 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 19550 ;; Parameters:    Size  Location     Type
 19551 ;;  c               1    wreg     unsigned char 
 19552 ;; Auto vars:     Size  Location     Type
 19553 ;;  c               1    0[BANK0 ] unsigned char 
 19554 ;; Return value:  Size  Location     Type
 19555 ;;                  1    wreg      unsigned char 
 19556 ;; Registers used:
 19557 ;;		wreg, status,2, status,0
 19558 ;; Tracked objects:
 19559 ;;		On entry : 0/0
 19560 ;;		On exit  : 0/0
 19561 ;;		Unchanged: 0/0
 19562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19567 ;;Total ram usage:        1 bytes
 19568 ;; Hardware stack levels used:    1
 19569 ;; Hardware stack levels required when called:   10
 19570 ;; This function calls:
 19571 ;;		Nothing
 19572 ;; This function is called by:
 19573 ;;		_stricmp
 19574 ;; This function uses a non-reentrant model
 19575 ;;
 19576                           
 19577                           	psect	text79
 19578  0156F2                     __ptext79:
 19579                           	opt stack 0
 19580  0156F2                     _toupper:
 19581                           	opt stack 16
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;incstack = 0
 19585                           ;toupper@c stored from wreg
 19586  0156F2  0100               	movlb	0	; () banked
 19587  0156F4  6F60               	movwf	toupper@c& (0+255),b
 19588  0156F6  0E7B               	movlw	123
 19589  0156F8  0100               	movlb	0	; () banked
 19590  0156FA  6160               	cpfslt	toupper@c& (0+255),b
 19591  0156FC  D004               	goto	l3678
 19592                           
 19593                           ; BSR set to: 0
 19594  0156FE  0E60               	movlw	96
 19595  015700  6560               	cpfsgt	toupper@c& (0+255),b
 19596  015702  D001               	goto	l3678
 19597                           
 19598                           ; BSR set to: 0
 19599  015704  9B60               	bcf	toupper@c& (0+255),5,b
 19600  015706                     l3678:
 19601                           
 19602                           ; BSR set to: 0
 19603                           
 19604                           ; BSR set to: 0
 19605  015706  5160               	movf	toupper@c& (0+255),w,b
 19606  015708  0012               	return	
 19607  01570A                     __end_of_toupper:
 19608                           	opt stack 0
 19609                           tblptru	equ	0xFF8
 19610                           tblptrh	equ	0xFF7
 19611                           tblptrl	equ	0xFF6
 19612                           tablat	equ	0xFF5
 19613                           prodh	equ	0xFF4
 19614                           prodl	equ	0xFF3
 19615                           postinc0	equ	0xFEE
 19616                           wreg	equ	0xFE8
 19617                           postinc1	equ	0xFE6
 19618                           postdec1	equ	0xFE5
 19619                           plusw1	equ	0xFE3
 19620                           fsr1h	equ	0xFE2
 19621                           fsr1l	equ	0xFE1
 19622                           indf2	equ	0xFDF
 19623                           postinc2	equ	0xFDE
 19624                           postdec2	equ	0xFDD
 19625                           plusw2	equ	0xFDB
 19626                           fsr2h	equ	0xFDA
 19627                           fsr2l	equ	0xFD9
 19628                           status	equ	0xFD8
 19629                           
 19630 ;; *************** function _atol *****************
 19631 ;; Defined at:
 19632 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19633 ;; Parameters:    Size  Location     Type
 19634 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19635 ;;		 -> configFile_read@value_string(12), 
 19636 ;; Auto vars:     Size  Location     Type
 19637 ;;  a               4   21[BANK0 ] long 
 19638 ;;  c               1   25[BANK0 ] unsigned char 
 19639 ;;  sign            1   20[BANK0 ] unsigned char 
 19640 ;; Return value:  Size  Location     Type
 19641 ;;                  4   12[BANK0 ] long 
 19642 ;; Registers used:
 19643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19644 ;; Tracked objects:
 19645 ;;		On entry : 0/0
 19646 ;;		On exit  : 0/0
 19647 ;;		Unchanged: 0/0
 19648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19649 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19650 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19652 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19653 ;;Total ram usage:       14 bytes
 19654 ;; Hardware stack levels used:    1
 19655 ;; Hardware stack levels required when called:   11
 19656 ;; This function calls:
 19657 ;;		___lmul
 19658 ;;		_isdigit
 19659 ;; This function is called by:
 19660 ;;		__parse_item
 19661 ;; This function uses a non-reentrant model
 19662 ;;
 19663                           
 19664                           	psect	text80
 19665  01156A                     __ptext80:
 19666                           	opt stack 0
 19667  01156A                     _atol:
 19668                           	opt stack 16
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;incstack = 0
 19672  01156A  C06C  FFD9         	movff	atol@s,fsr2l
 19673  01156E  C06D  FFDA         	movff	atol@s+1,fsr2h
 19674  011572  50DF               	movf	indf2,w,c
 19675  011574  0100               	movlb	0	; () banked
 19676  011576  6F79               	movwf	atol@c& (0+255),b
 19677                           
 19678                           ; BSR set to: 0
 19679  011578  4B6C               	infsnz	atol@s& (0+255),f,b
 19680  01157A  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19681                           
 19682                           ; BSR set to: 0
 19683  01157C  0E20               	movlw	32
 19684  01157E  1979               	xorwf	atol@c& (0+255),w,b
 19685  011580  B4D8               	btfsc	status,2,c
 19686  011582  D7F3               	goto	_atol
 19687                           
 19688                           ; BSR set to: 0
 19689  011584  0E09               	movlw	9
 19690  011586  1979               	xorwf	atol@c& (0+255),w,b
 19691  011588  B4D8               	btfsc	status,2,c
 19692  01158A  D7EF               	goto	_atol
 19693                           
 19694                           ; BSR set to: 0
 19695                           
 19696                           ; BSR set to: 0
 19697  01158C  0E00               	movlw	0
 19698  01158E  6F75               	movwf	atol@a& (0+255),b
 19699  011590  0E00               	movlw	0
 19700  011592  6F76               	movwf	(atol@a+1)& (0+255),b
 19701  011594  0E00               	movlw	0
 19702  011596  6F77               	movwf	(atol@a+2)& (0+255),b
 19703  011598  0E00               	movlw	0
 19704  01159A  6F78               	movwf	(atol@a+3)& (0+255),b
 19705  01159C  0E00               	movlw	0
 19706  01159E  6F74               	movwf	atol@sign& (0+255),b
 19707                           
 19708                           ; BSR set to: 0
 19709  0115A0  0E2D               	movlw	45
 19710  0115A2  1979               	xorwf	atol@c& (0+255),w,b
 19711  0115A4  A4D8               	btfss	status,2,c
 19712  0115A6  D002               	goto	l3598
 19713                           
 19714                           ; BSR set to: 0
 19715  0115A8  2B74               	incf	atol@sign& (0+255),f,b
 19716  0115AA  D029               	goto	L90
 19717  0115AC                     l3598:
 19718                           
 19719                           ; BSR set to: 0
 19720                           
 19721                           ; BSR set to: 0
 19722  0115AC  0E2B               	movlw	43
 19723  0115AE  1979               	xorwf	atol@c& (0+255),w,b
 19724  0115B0  A4D8               	btfss	status,2,c
 19725  0115B2  D02D               	goto	l3601
 19726  0115B4  D024               	goto	L90
 19727  0115B6                     
 19728                           ; BSR set to: 0
 19729  0115B6  C075  F060         	movff	atol@a,___lmul@multiplier
 19730  0115BA  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19731  0115BE  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19732  0115C2  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19733  0115C6  0E0A               	movlw	10
 19734  0115C8  0100               	movlb	0	; () banked
 19735  0115CA  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19736  0115CC  0E00               	movlw	0
 19737  0115CE  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19738  0115D0  0E00               	movlw	0
 19739  0115D2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19740  0115D4  0E00               	movlw	0
 19741  0115D6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19742  0115D8  EC79  F0A3         	call	___lmul	;wreg free
 19743  0115DC  C079  F070         	movff	atol@c,??_atol
 19744  0115E0  0ED0               	movlw	208
 19745  0115E2  0100               	movlb	0	; () banked
 19746  0115E4  2770               	addwf	??_atol& (0+255),f,b
 19747  0115E6  5170               	movf	??_atol& (0+255),w,b
 19748  0115E8  2560               	addwf	?___lmul& (0+255),w,b
 19749  0115EA  6F75               	movwf	atol@a& (0+255),b
 19750  0115EC  0E00               	movlw	0
 19751  0115EE  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19752  0115F0  6F76               	movwf	(atol@a+1)& (0+255),b
 19753  0115F2  0E00               	movlw	0
 19754  0115F4  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19755  0115F6  6F77               	movwf	(atol@a+2)& (0+255),b
 19756  0115F8  0E00               	movlw	0
 19757  0115FA  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19758  0115FC  6F78               	movwf	(atol@a+3)& (0+255),b
 19759  0115FE                     L90:
 19760                           
 19761                           ; BSR set to: 0
 19762  0115FE  C06C  FFD9         	movff	atol@s,fsr2l
 19763  011602  C06D  FFDA         	movff	atol@s+1,fsr2h
 19764  011606  50DF               	movf	indf2,w,c
 19765  011608  6F79               	movwf	atol@c& (0+255),b
 19766                           
 19767                           ; BSR set to: 0
 19768  01160A  4B6C               	infsnz	atol@s& (0+255),f,b
 19769  01160C  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19770  01160E                     l3601:
 19771                           
 19772                           ; BSR set to: 0
 19773                           
 19774                           ; BSR set to: 0
 19775  01160E  5179               	movf	atol@c& (0+255),w,b
 19776  011610  ECF6  F0AA         	call	_isdigit
 19777  011614  B0D8               	btfsc	status,0,c
 19778  011616  D7CF               	goto	l3602
 19779  011618  0100               	movlb	0	; () banked
 19780  01161A  5174               	movf	atol@sign& (0+255),w,b
 19781  01161C  B4D8               	btfsc	status,2,c
 19782  01161E  D01A               	goto	l3604
 19783                           
 19784                           ; BSR set to: 0
 19785  011620  C075  F070         	movff	atol@a,??_atol
 19786  011624  C076  F071         	movff	atol@a+1,??_atol+1
 19787  011628  C077  F072         	movff	atol@a+2,??_atol+2
 19788  01162C  C078  F073         	movff	atol@a+3,??_atol+3
 19789  011630  1F70               	comf	??_atol& (0+255),f,b
 19790  011632  1F71               	comf	(??_atol+1)& (0+255),f,b
 19791  011634  1F72               	comf	(??_atol+2)& (0+255),f,b
 19792  011636  1F73               	comf	(??_atol+3)& (0+255),f,b
 19793  011638  2B70               	incf	??_atol& (0+255),f,b
 19794  01163A  0E00               	movlw	0
 19795  01163C  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19796  01163E  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19797  011640  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19798  011642  C070  F06C         	movff	??_atol,?_atol
 19799  011646  C071  F06D         	movff	??_atol+1,?_atol+1
 19800  01164A  C072  F06E         	movff	??_atol+2,?_atol+2
 19801  01164E  C073  F06F         	movff	??_atol+3,?_atol+3
 19802                           
 19803                           ; BSR set to: 0
 19804  011652  0012               	return	
 19805  011654                     l3604:
 19806                           
 19807                           ; BSR set to: 0
 19808  011654  C075  F06C         	movff	atol@a,?_atol
 19809  011658  C076  F06D         	movff	atol@a+1,?_atol+1
 19810  01165C  C077  F06E         	movff	atol@a+2,?_atol+2
 19811  011660  C078  F06F         	movff	atol@a+3,?_atol+3
 19812                           
 19813                           ; BSR set to: 0
 19814  011664  0012               	return		;funcret
 19815  011666                     __end_of_atol:
 19816                           	opt stack 0
 19817                           tblptru	equ	0xFF8
 19818                           tblptrh	equ	0xFF7
 19819                           tblptrl	equ	0xFF6
 19820                           tablat	equ	0xFF5
 19821                           prodh	equ	0xFF4
 19822                           prodl	equ	0xFF3
 19823                           postinc0	equ	0xFEE
 19824                           wreg	equ	0xFE8
 19825                           postinc1	equ	0xFE6
 19826                           postdec1	equ	0xFE5
 19827                           plusw1	equ	0xFE3
 19828                           fsr1h	equ	0xFE2
 19829                           fsr1l	equ	0xFE1
 19830                           indf2	equ	0xFDF
 19831                           postinc2	equ	0xFDE
 19832                           postdec2	equ	0xFDD
 19833                           plusw2	equ	0xFDB
 19834                           fsr2h	equ	0xFDA
 19835                           fsr2l	equ	0xFD9
 19836                           status	equ	0xFD8
 19837                           
 19838 ;; *************** function _atoi *****************
 19839 ;; Defined at:
 19840 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19841 ;; Parameters:    Size  Location     Type
 19842 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19843 ;;		 -> configFile_read@value_string(12), 
 19844 ;; Auto vars:     Size  Location     Type
 19845 ;;  a               2   11[BANK0 ] int 
 19846 ;;  sign            1   10[BANK0 ] unsigned char 
 19847 ;; Return value:  Size  Location     Type
 19848 ;;                  2    6[BANK0 ] int 
 19849 ;; Registers used:
 19850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19851 ;; Tracked objects:
 19852 ;;		On entry : 0/0
 19853 ;;		On exit  : 0/0
 19854 ;;		Unchanged: 0/0
 19855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19856 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19857 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19858 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19859 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19860 ;;Total ram usage:        7 bytes
 19861 ;; Hardware stack levels used:    1
 19862 ;; Hardware stack levels required when called:   11
 19863 ;; This function calls:
 19864 ;;		___wmul
 19865 ;;		_isdigit
 19866 ;; This function is called by:
 19867 ;;		__parse_item
 19868 ;; This function uses a non-reentrant model
 19869 ;;
 19870                           
 19871                           	psect	text81
 19872  01230C                     __ptext81:
 19873                           	opt stack 0
 19874  01230C                     _atoi:
 19875                           	opt stack 16
 19876                           
 19877                           ; BSR set to: 0
 19878                           ;incstack = 0
 19879  01230C  D003               	goto	l3581
 19880  01230E  0100               	movlb	0	; () banked
 19881  012310  4B66               	infsnz	atoi@s& (0+255),f,b
 19882  012312  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19883  012314                     l3581:
 19884                           
 19885                           ; BSR set to: 0
 19886  012314  C066  FFD9         	movff	atoi@s,fsr2l
 19887  012318  C067  FFDA         	movff	atoi@s+1,fsr2h
 19888  01231C  0E20               	movlw	32
 19889  01231E  18DE               	xorwf	postinc2,w,c
 19890  012320  B4D8               	btfsc	status,2,c
 19891  012322  D7F5               	goto	l3582
 19892  012324  C066  FFD9         	movff	atoi@s,fsr2l
 19893  012328  C067  FFDA         	movff	atoi@s+1,fsr2h
 19894  01232C  0E09               	movlw	9
 19895  01232E  18DE               	xorwf	postinc2,w,c
 19896  012330  B4D8               	btfsc	status,2,c
 19897  012332  D7ED               	goto	l3582
 19898  012334  0E00               	movlw	0
 19899  012336  0100               	movlb	0	; () banked
 19900  012338  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19901  01233A  0E00               	movlw	0
 19902  01233C  6F6B               	movwf	atoi@a& (0+255),b
 19903  01233E  0E00               	movlw	0
 19904  012340  6F6A               	movwf	atoi@sign& (0+255),b
 19905                           
 19906                           ; BSR set to: 0
 19907  012342  C066  FFD9         	movff	atoi@s,fsr2l
 19908  012346  C067  FFDA         	movff	atoi@s+1,fsr2h
 19909  01234A  0E2D               	movlw	45
 19910  01234C  18DE               	xorwf	postinc2,w,c
 19911  01234E  A4D8               	btfss	status,2,c
 19912  012350  D002               	goto	l3584
 19913                           
 19914                           ; BSR set to: 0
 19915  012352  2B6A               	incf	atoi@sign& (0+255),f,b
 19916  012354  D026               	goto	l14991
 19917  012356                     l3584:
 19918                           
 19919                           ; BSR set to: 0
 19920                           
 19921                           ; BSR set to: 0
 19922  012356  C066  FFD9         	movff	atoi@s,fsr2l
 19923  01235A  C067  FFDA         	movff	atoi@s+1,fsr2h
 19924  01235E  0E2B               	movlw	43
 19925  012360  18DE               	xorwf	postinc2,w,c
 19926  012362  A4D8               	btfss	status,2,c
 19927  012364  D020               	goto	l3587
 19928  012366  D01D               	goto	l14991
 19929  012368                     
 19930                           ; BSR set to: 0
 19931  012368  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19932  01236C  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19933  012370  0E00               	movlw	0
 19934  012372  0100               	movlb	0	; () banked
 19935  012374  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19936  012376  0E0A               	movlw	10
 19937  012378  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19938  01237A  EC61  F0AA         	call	___wmul	;wreg free
 19939  01237E  C066  FFD9         	movff	atoi@s,fsr2l
 19940  012382  C067  FFDA         	movff	atoi@s+1,fsr2h
 19941  012386  50DF               	movf	indf2,w,c
 19942  012388  0100               	movlb	0	; () banked
 19943  01238A  6F68               	movwf	??_atoi& (0+255),b
 19944  01238C  6B69               	clrf	(??_atoi+1)& (0+255),b
 19945  01238E  5160               	movf	?___wmul& (0+255),w,b
 19946  012390  2768               	addwf	??_atoi& (0+255),f,b
 19947  012392  5161               	movf	(?___wmul+1)& (0+255),w,b
 19948  012394  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19949  012396  0ED0               	movlw	208
 19950  012398  2568               	addwf	??_atoi& (0+255),w,b
 19951  01239A  6F6B               	movwf	atoi@a& (0+255),b
 19952  01239C  0EFF               	movlw	255
 19953  01239E  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19954  0123A0  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19955  0123A2                     l14991:
 19956                           
 19957                           ; BSR set to: 0
 19958  0123A2  4B66               	infsnz	atoi@s& (0+255),f,b
 19959  0123A4  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19960  0123A6                     l3587:
 19961                           
 19962                           ; BSR set to: 0
 19963                           
 19964                           ; BSR set to: 0
 19965  0123A6  C066  FFD9         	movff	atoi@s,fsr2l
 19966  0123AA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19967  0123AE  50DF               	movf	indf2,w,c
 19968  0123B0  ECF6  F0AA         	call	_isdigit
 19969  0123B4  B0D8               	btfsc	status,0,c
 19970  0123B6  D7D8               	goto	l3588
 19971  0123B8  0100               	movlb	0	; () banked
 19972  0123BA  516A               	movf	atoi@sign& (0+255),w,b
 19973  0123BC  B4D8               	btfsc	status,2,c
 19974  0123BE  D00D               	goto	l3590
 19975                           
 19976                           ; BSR set to: 0
 19977  0123C0  C06B  F068         	movff	atoi@a,??_atoi
 19978  0123C4  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19979  0123C8  1F68               	comf	??_atoi& (0+255),f,b
 19980  0123CA  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19981  0123CC  4B68               	infsnz	??_atoi& (0+255),f,b
 19982  0123CE  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19983  0123D0  C068  F066         	movff	??_atoi,?_atoi
 19984  0123D4  C069  F067         	movff	??_atoi+1,?_atoi+1
 19985  0123D8  0012               	return	
 19986  0123DA                     l3590:
 19987                           
 19988                           ; BSR set to: 0
 19989  0123DA  C06B  F066         	movff	atoi@a,?_atoi
 19990  0123DE  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19991                           
 19992                           ; BSR set to: 0
 19993  0123E2  0012               	return		;funcret
 19994  0123E4                     __end_of_atoi:
 19995                           	opt stack 0
 19996                           tblptru	equ	0xFF8
 19997                           tblptrh	equ	0xFF7
 19998                           tblptrl	equ	0xFF6
 19999                           tablat	equ	0xFF5
 20000                           prodh	equ	0xFF4
 20001                           prodl	equ	0xFF3
 20002                           postinc0	equ	0xFEE
 20003                           wreg	equ	0xFE8
 20004                           postinc1	equ	0xFE6
 20005                           postdec1	equ	0xFE5
 20006                           plusw1	equ	0xFE3
 20007                           fsr1h	equ	0xFE2
 20008                           fsr1l	equ	0xFE1
 20009                           indf2	equ	0xFDF
 20010                           postinc2	equ	0xFDE
 20011                           postdec2	equ	0xFDD
 20012                           plusw2	equ	0xFDB
 20013                           fsr2h	equ	0xFDA
 20014                           fsr2l	equ	0xFD9
 20015                           status	equ	0xFD8
 20016                           
 20017 ;; *************** function _isdigit *****************
 20018 ;; Defined at:
 20019 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 20020 ;; Parameters:    Size  Location     Type
 20021 ;;  c               1    wreg     unsigned char 
 20022 ;; Auto vars:     Size  Location     Type
 20023 ;;  c               1    2[BANK0 ] unsigned char 
 20024 ;; Return value:  Size  Location     Type
 20025 ;;		None               void
 20026 ;; Registers used:
 20027 ;;		wreg, status,2, status,0
 20028 ;; Tracked objects:
 20029 ;;		On entry : 0/0
 20030 ;;		On exit  : 0/0
 20031 ;;		Unchanged: 0/0
 20032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20035 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20036 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20037 ;;Total ram usage:        3 bytes
 20038 ;; Hardware stack levels used:    1
 20039 ;; Hardware stack levels required when called:   10
 20040 ;; This function calls:
 20041 ;;		Nothing
 20042 ;; This function is called by:
 20043 ;;		_atoi
 20044 ;;		_atol
 20045 ;; This function uses a non-reentrant model
 20046 ;;
 20047                           
 20048                           	psect	text82
 20049  0155EC                     __ptext82:
 20050                           	opt stack 0
 20051  0155EC                     _isdigit:
 20052                           	opt stack 16
 20053                           
 20054                           ; BSR set to: 0
 20055                           ;incstack = 0
 20056                           ;isdigit@c stored from wreg
 20057  0155EC  0100               	movlb	0	; () banked
 20058  0155EE  6F62               	movwf	isdigit@c& (0+255),b
 20059  0155F0  0E00               	movlw	0
 20060  0155F2  0100               	movlb	0	; () banked
 20061  0155F4  6F61               	movwf	_isdigit$8130& (0+255),b
 20062                           
 20063                           ; BSR set to: 0
 20064  0155F6  0E3A               	movlw	58
 20065  0155F8  6162               	cpfslt	isdigit@c& (0+255),b
 20066  0155FA  D005               	goto	l3609
 20067                           
 20068                           ; BSR set to: 0
 20069  0155FC  0E2F               	movlw	47
 20070  0155FE  6562               	cpfsgt	isdigit@c& (0+255),b
 20071  015600  D002               	goto	l3609
 20072                           
 20073                           ; BSR set to: 0
 20074  015602  0E01               	movlw	1
 20075  015604  6F61               	movwf	_isdigit$8130& (0+255),b
 20076  015606                     l3609:
 20077                           
 20078                           ; BSR set to: 0
 20079                           
 20080                           ; BSR set to: 0
 20081  015606  C061  F060         	movff	_isdigit$8130,??_isdigit
 20082  01560A  3160               	rrcf	??_isdigit& (0+255),w,b
 20083  01560C  0012               	return	
 20084  01560E                     __end_of_isdigit:
 20085                           	opt stack 0
 20086                           tblptru	equ	0xFF8
 20087                           tblptrh	equ	0xFF7
 20088                           tblptrl	equ	0xFF6
 20089                           tablat	equ	0xFF5
 20090                           prodh	equ	0xFF4
 20091                           prodl	equ	0xFF3
 20092                           postinc0	equ	0xFEE
 20093                           wreg	equ	0xFE8
 20094                           postinc1	equ	0xFE6
 20095                           postdec1	equ	0xFE5
 20096                           plusw1	equ	0xFE3
 20097                           fsr1h	equ	0xFE2
 20098                           fsr1l	equ	0xFE1
 20099                           indf2	equ	0xFDF
 20100                           postinc2	equ	0xFDE
 20101                           postdec2	equ	0xFDD
 20102                           plusw2	equ	0xFDB
 20103                           fsr2h	equ	0xFDA
 20104                           fsr2l	equ	0xFD9
 20105                           status	equ	0xFD8
 20106                           
 20107 ;; *************** function ___wmul *****************
 20108 ;; Defined at:
 20109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 20110 ;; Parameters:    Size  Location     Type
 20111 ;;  multiplier      2    0[BANK0 ] unsigned int 
 20112 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;  product         2    4[BANK0 ] unsigned int 
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  2    0[BANK0 ] unsigned int 
 20117 ;; Registers used:
 20118 ;;		wreg, status,2, status,0, prodl, prodh
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 0/0
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20124 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20127 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20128 ;;Total ram usage:        6 bytes
 20129 ;; Hardware stack levels used:    1
 20130 ;; Hardware stack levels required when called:   10
 20131 ;; This function calls:
 20132 ;;		Nothing
 20133 ;; This function is called by:
 20134 ;;		_atoi
 20135 ;; This function uses a non-reentrant model
 20136 ;;
 20137                           
 20138                           	psect	text83
 20139  0154C2                     __ptext83:
 20140                           	opt stack 0
 20141  0154C2                     ___wmul:
 20142                           	opt stack 16
 20143                           
 20144                           ; BSR set to: 0
 20145                           ;incstack = 0
 20146  0154C2  0100               	movlb	0	; () banked
 20147  0154C4  5160               	movf	___wmul@multiplier& (0+255),w,b
 20148  0154C6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20149  0154C8  CFF3 F064          	movff	prodl,___wmul@product
 20150  0154CC  CFF4 F065          	movff	prodh,___wmul@product+1
 20151  0154D0  5160               	movf	___wmul@multiplier& (0+255),w,b
 20152  0154D2  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20153  0154D4  50F3               	movf	prodl,w,c
 20154  0154D6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20155  0154D8  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20156  0154DA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20157  0154DC  50F3               	movf	prodl,w,c
 20158  0154DE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20159                           
 20160                           ; BSR set to: 0
 20161  0154E0  C064  F060         	movff	___wmul@product,?___wmul
 20162  0154E4  C065  F061         	movff	___wmul@product+1,?___wmul+1
 20163  0154E8  0012               	return	
 20164  0154EA                     __end_of___wmul:
 20165                           	opt stack 0
 20166                           tblptru	equ	0xFF8
 20167                           tblptrh	equ	0xFF7
 20168                           tblptrl	equ	0xFF6
 20169                           tablat	equ	0xFF5
 20170                           prodh	equ	0xFF4
 20171                           prodl	equ	0xFF3
 20172                           postinc0	equ	0xFEE
 20173                           wreg	equ	0xFE8
 20174                           postinc1	equ	0xFE6
 20175                           postdec1	equ	0xFE5
 20176                           plusw1	equ	0xFE3
 20177                           fsr1h	equ	0xFE2
 20178                           fsr1l	equ	0xFE1
 20179                           indf2	equ	0xFDF
 20180                           postinc2	equ	0xFDE
 20181                           postdec2	equ	0xFDD
 20182                           plusw2	equ	0xFDB
 20183                           fsr2h	equ	0xFDA
 20184                           fsr2l	equ	0xFD9
 20185                           status	equ	0xFD8
 20186                           
 20187 ;; *************** function __get_item *****************
 20188 ;; Defined at:
 20189 ;;		line 67 in file "config_file.c"
 20190 ;; Parameters:    Size  Location     Type
 20191 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20192 ;;		 -> configFile_read@item_string(31), 
 20193 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20194 ;;		 -> configFile_read@value_string(12), 
 20195 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20196 ;;		 -> ConfigFile_buffer(512), 
 20197 ;; Auto vars:     Size  Location     Type
 20198 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20199 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20200 ;; Return value:  Size  Location     Type
 20201 ;;                  1    wreg      unsigned char 
 20202 ;; Registers used:
 20203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20204 ;; Tracked objects:
 20205 ;;		On entry : 0/0
 20206 ;;		On exit  : 0/0
 20207 ;;		Unchanged: 0/0
 20208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20209 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20211 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20212 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20213 ;;Total ram usage:       11 bytes
 20214 ;; Hardware stack levels used:    1
 20215 ;; Hardware stack levels required when called:   10
 20216 ;; This function calls:
 20217 ;;		Nothing
 20218 ;; This function is called by:
 20219 ;;		_configFile_read
 20220 ;; This function uses a non-reentrant model
 20221 ;;
 20222                           
 20223                           	psect	text84
 20224  00FAF6                     __ptext84:
 20225                           	opt stack 0
 20226  00FAF6                     __get_item:
 20227                           	opt stack 18
 20228                           
 20229                           ;config_file.c: 69: uint8_t item_ctr;;config_file.c: 70: uint8_t value_ctr;;config_file.
      +                          c: 73: for(item_ctr=0;item_ctr<30;++item_ctr)
 20230                           
 20231                           ; BSR set to: 0
 20232                           ;incstack = 0
 20233  00FAF6  0E00               	movlw	0
 20234  00FAF8  0100               	movlb	0	; () banked
 20235  00FAFA  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20236  00FAFC                     l15911:
 20237                           
 20238                           ; BSR set to: 0
 20239  00FAFC  0E1D               	movlw	29
 20240  00FAFE  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20241  00FB00  D001               	goto	l2866
 20242  00FB02  D020               	goto	u14710
 20243  00FB04                     l2866:
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;config_file.c: 74: {;config_file.c: 76: if(buffer[item_ctr] == '=')
 20247                           
 20248                           ; BSR set to: 0
 20249  00FB04  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20250  00FB06  0D01               	mullw	1
 20251  00FB08  50F3               	movf	prodl,w,c
 20252  00FB0A  2564               	addwf	__get_item@buffer& (0+255),w,b
 20253  00FB0C  6ED9               	movwf	fsr2l,c
 20254  00FB0E  50F4               	movf	prodh,w,c
 20255  00FB10  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20256  00FB12  6EDA               	movwf	fsr2h,c
 20257  00FB14  0E3D               	movlw	61
 20258  00FB16  18DE               	xorwf	postinc2,w,c
 20259  00FB18  B4D8               	btfsc	status,2,c
 20260  00FB1A  D014               	goto	u14710
 20261                           
 20262                           ; BSR set to: 0
 20263                           ;config_file.c: 79: };config_file.c: 80: item_string[item_ctr] = buffer[item_ctr];
 20264                           
 20265                           ; BSR set to: 0
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;config_file.c: 77: {;config_file.c: 78: break;
 20269  00FB1C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20270  00FB1E  0D01               	mullw	1
 20271  00FB20  50F3               	movf	prodl,w,c
 20272  00FB22  2564               	addwf	__get_item@buffer& (0+255),w,b
 20273  00FB24  6ED9               	movwf	fsr2l,c
 20274  00FB26  50F4               	movf	prodh,w,c
 20275  00FB28  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20276  00FB2A  6EDA               	movwf	fsr2h,c
 20277  00FB2C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20278  00FB2E  0D01               	mullw	1
 20279  00FB30  50F3               	movf	prodl,w,c
 20280  00FB32  2560               	addwf	__get_item@item_string& (0+255),w,b
 20281  00FB34  6EE1               	movwf	fsr1l,c
 20282  00FB36  50F4               	movf	prodh,w,c
 20283  00FB38  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20284  00FB3A  6EE2               	movwf	fsr1h,c
 20285  00FB3C  CFDF FFE7          	movff	indf2,indf1
 20286                           
 20287                           ; BSR set to: 0
 20288  00FB40  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20289  00FB42  D7DC               	goto	l15911
 20290  00FB44                     u14710:
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;config_file.c: 81: };config_file.c: 82: item_string[item_ctr++] = 0;
 20294                           
 20295                           ; BSR set to: 0
 20296  00FB44  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20297  00FB46  0D01               	mullw	1
 20298  00FB48  50F3               	movf	prodl,w,c
 20299  00FB4A  2560               	addwf	__get_item@item_string& (0+255),w,b
 20300  00FB4C  6ED9               	movwf	fsr2l,c
 20301  00FB4E  50F4               	movf	prodh,w,c
 20302  00FB50  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20303  00FB52  6EDA               	movwf	fsr2h,c
 20304  00FB54  0E00               	movlw	0
 20305  00FB56  6EDF               	movwf	indf2,c
 20306                           
 20307                           ; BSR set to: 0
 20308  00FB58  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20309                           
 20310                           ; BSR set to: 0
 20311                           ;config_file.c: 85: for(value_ctr=0;value_ctr<11;++value_ctr)
 20312  00FB5A  0E00               	movlw	0
 20313  00FB5C  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20314  00FB5E                     l15931:
 20315                           
 20316                           ; BSR set to: 0
 20317  00FB5E  0E0A               	movlw	10
 20318  00FB60  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20319  00FB62  D001               	goto	l2869
 20320  00FB64  D03B               	goto	u14750
 20321  00FB66                     l2869:
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;config_file.c: 86: {;config_file.c: 88: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20325                           
 20326                           ; BSR set to: 0
 20327  00FB66  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20328  00FB68  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20329  00FB6C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20330  00FB6E  2766               	addwf	??__get_item& (0+255),f,b
 20331  00FB70  0E00               	movlw	0
 20332  00FB72  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20333  00FB74  5166               	movf	??__get_item& (0+255),w,b
 20334  00FB76  2564               	addwf	__get_item@buffer& (0+255),w,b
 20335  00FB78  6ED9               	movwf	fsr2l,c
 20336  00FB7A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20337  00FB7C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20338  00FB7E  6EDA               	movwf	fsr2h,c
 20339  00FB80  0E0D               	movlw	13
 20340  00FB82  18DE               	xorwf	postinc2,w,c
 20341  00FB84  B4D8               	btfsc	status,2,c
 20342  00FB86  D02A               	goto	u14750
 20343                           
 20344                           ; BSR set to: 0
 20345  00FB88  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20346  00FB8A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20347  00FB8E  6B67               	clrf	(??__get_item+1)& (0+255),b
 20348  00FB90  2766               	addwf	??__get_item& (0+255),f,b
 20349  00FB92  0E00               	movlw	0
 20350  00FB94  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20351  00FB96  5166               	movf	??__get_item& (0+255),w,b
 20352  00FB98  2564               	addwf	__get_item@buffer& (0+255),w,b
 20353  00FB9A  6ED9               	movwf	fsr2l,c
 20354  00FB9C  5167               	movf	(??__get_item+1)& (0+255),w,b
 20355  00FB9E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20356  00FBA0  6EDA               	movwf	fsr2h,c
 20357  00FBA2  0E0A               	movlw	10
 20358  00FBA4  18DE               	xorwf	postinc2,w,c
 20359  00FBA6  B4D8               	btfsc	status,2,c
 20360  00FBA8  D019               	goto	u14750
 20361                           
 20362                           ; BSR set to: 0
 20363                           ;config_file.c: 91: };config_file.c: 92: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20364                           
 20365                           ; BSR set to: 0
 20366                           
 20367                           ; BSR set to: 0
 20368                           ;config_file.c: 89: {;config_file.c: 90: break;
 20369  00FBAA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20370  00FBAC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20371  00FBB0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20372  00FBB2  2766               	addwf	??__get_item& (0+255),f,b
 20373  00FBB4  0E00               	movlw	0
 20374  00FBB6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20375  00FBB8  5166               	movf	??__get_item& (0+255),w,b
 20376  00FBBA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20377  00FBBC  6ED9               	movwf	fsr2l,c
 20378  00FBBE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20379  00FBC0  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20380  00FBC2  6EDA               	movwf	fsr2h,c
 20381  00FBC4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20382  00FBC6  0D01               	mullw	1
 20383  00FBC8  50F3               	movf	prodl,w,c
 20384  00FBCA  2562               	addwf	__get_item@value_string& (0+255),w,b
 20385  00FBCC  6EE1               	movwf	fsr1l,c
 20386  00FBCE  50F4               	movf	prodh,w,c
 20387  00FBD0  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20388  00FBD2  6EE2               	movwf	fsr1h,c
 20389  00FBD4  CFDF FFE7          	movff	indf2,indf1
 20390                           
 20391                           ; BSR set to: 0
 20392  00FBD8  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20393  00FBDA  D7C1               	goto	l15931
 20394  00FBDC                     u14750:
 20395                           
 20396                           ; BSR set to: 0
 20397                           ;config_file.c: 93: };config_file.c: 94: value_string[value_ctr++] = 0;
 20398                           
 20399                           ; BSR set to: 0
 20400  00FBDC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20401  00FBDE  0D01               	mullw	1
 20402  00FBE0  50F3               	movf	prodl,w,c
 20403  00FBE2  2562               	addwf	__get_item@value_string& (0+255),w,b
 20404  00FBE4  6ED9               	movwf	fsr2l,c
 20405  00FBE6  50F4               	movf	prodh,w,c
 20406  00FBE8  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20407  00FBEA  6EDA               	movwf	fsr2h,c
 20408  00FBEC  0E00               	movlw	0
 20409  00FBEE  6EDF               	movwf	indf2,c
 20410                           
 20411                           ; BSR set to: 0
 20412  00FBF0  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20413                           
 20414                           ; BSR set to: 0
 20415                           ;config_file.c: 97: if((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_ctr]
      +                          =='\n'))
 20416  00FBF2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20417  00FBF4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20418  00FBF8  6B67               	clrf	(??__get_item+1)& (0+255),b
 20419  00FBFA  2766               	addwf	??__get_item& (0+255),f,b
 20420  00FBFC  0E00               	movlw	0
 20421  00FBFE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20422  00FC00  5166               	movf	??__get_item& (0+255),w,b
 20423  00FC02  2564               	addwf	__get_item@buffer& (0+255),w,b
 20424  00FC04  6ED9               	movwf	fsr2l,c
 20425  00FC06  5167               	movf	(??__get_item+1)& (0+255),w,b
 20426  00FC08  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20427  00FC0A  6EDA               	movwf	fsr2h,c
 20428  00FC0C  0E0D               	movlw	13
 20429  00FC0E  18DE               	xorwf	postinc2,w,c
 20430  00FC10  B4D8               	btfsc	status,2,c
 20431  00FC12  D011               	goto	u14770
 20432                           
 20433                           ; BSR set to: 0
 20434  00FC14  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20435  00FC16  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20436  00FC1A  6B67               	clrf	(??__get_item+1)& (0+255),b
 20437  00FC1C  2766               	addwf	??__get_item& (0+255),f,b
 20438  00FC1E  0E00               	movlw	0
 20439  00FC20  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20440  00FC22  5166               	movf	??__get_item& (0+255),w,b
 20441  00FC24  2564               	addwf	__get_item@buffer& (0+255),w,b
 20442  00FC26  6ED9               	movwf	fsr2l,c
 20443  00FC28  5167               	movf	(??__get_item+1)& (0+255),w,b
 20444  00FC2A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20445  00FC2C  6EDA               	movwf	fsr2h,c
 20446  00FC2E  0E0A               	movlw	10
 20447  00FC30  18DE               	xorwf	postinc2,w,c
 20448  00FC32  A4D8               	btfss	status,2,c
 20449  00FC34  D005               	goto	l2874
 20450  00FC36                     u14770:
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;config_file.c: 98: {;config_file.c: 99: return (item_ctr+value_ctr+1);
 20454                           
 20455                           ; BSR set to: 0
 20456  00FC36  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20457  00FC38  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20458  00FC3A  6F66               	movwf	??__get_item& (0+255),b
 20459  00FC3C  2966               	incf	??__get_item& (0+255),w,b
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;config_file.c: 100: }
 20463                           
 20464                           ; BSR set to: 0
 20465  00FC3E  0012               	return	
 20466  00FC40                     l2874:
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;config_file.c: 101: else;config_file.c: 102: {;config_file.c: 103: return (item_ctr+val
      +                          ue_ctr);
 20470                           
 20471                           ; BSR set to: 0
 20472  00FC40  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20473  00FC42  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20474                           
 20475                           ; BSR set to: 0
 20476  00FC44  0012               	return	
 20477  00FC46                     __end_of__get_item:
 20478                           	opt stack 0
 20479                           tblptru	equ	0xFF8
 20480                           tblptrh	equ	0xFF7
 20481                           tblptrl	equ	0xFF6
 20482                           tablat	equ	0xFF5
 20483                           prodh	equ	0xFF4
 20484                           prodl	equ	0xFF3
 20485                           postinc0	equ	0xFEE
 20486                           wreg	equ	0xFE8
 20487                           indf1	equ	0xFE7
 20488                           postinc1	equ	0xFE6
 20489                           postdec1	equ	0xFE5
 20490                           plusw1	equ	0xFE3
 20491                           fsr1h	equ	0xFE2
 20492                           fsr1l	equ	0xFE1
 20493                           indf2	equ	0xFDF
 20494                           postinc2	equ	0xFDE
 20495                           postdec2	equ	0xFDD
 20496                           plusw2	equ	0xFDB
 20497                           fsr2h	equ	0xFDA
 20498                           fsr2l	equ	0xFD9
 20499                           status	equ	0xFD8
 20500                           
 20501 ;; *************** function _adc_init *****************
 20502 ;; Defined at:
 20503 ;;		line 19 in file "adc.c"
 20504 ;; Parameters:    Size  Location     Type
 20505 ;;		None
 20506 ;; Auto vars:     Size  Location     Type
 20507 ;;		None
 20508 ;; Return value:  Size  Location     Type
 20509 ;;                  1    wreg      void 
 20510 ;; Registers used:
 20511 ;;		wreg, status,2
 20512 ;; Tracked objects:
 20513 ;;		On entry : 0/0
 20514 ;;		On exit  : 0/0
 20515 ;;		Unchanged: 0/0
 20516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20521 ;;Total ram usage:        0 bytes
 20522 ;; Hardware stack levels used:    1
 20523 ;; Hardware stack levels required when called:   10
 20524 ;; This function calls:
 20525 ;;		Nothing
 20526 ;; This function is called by:
 20527 ;;		_system_init
 20528 ;; This function uses a non-reentrant model
 20529 ;;
 20530                           
 20531                           	psect	text85
 20532  01469A                     __ptext85:
 20533                           	opt stack 0
 20534  01469A                     _adc_init:
 20535                           	opt stack 19
 20536                           
 20537                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;incstack = 0
 20541  01469A  0E00               	movlw	0
 20542  01469C  0101               	movlb	1	; () banked
 20543  01469E  6F99               	movwf	(_os+40)& (0+255),b	;volatile
 20544  0146A0  0E00               	movlw	0
 20545  0146A2  6F98               	movwf	(_os+39)& (0+255),b	;volatile
 20546                           
 20547                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20548  0146A4  0E00               	movlw	0
 20549  0146A6  6F9B               	movwf	(_os+42)& (0+255),b	;volatile
 20550  0146A8  0E00               	movlw	0
 20551  0146AA  6F9A               	movwf	(_os+41)& (0+255),b	;volatile
 20552                           
 20553                           ;adc.c: 24: os.fan_on = 0;
 20554  0146AC  0E00               	movlw	0
 20555  0146AE  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 20556                           
 20557                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20558  0146B0  0E00               	movlw	0
 20559  0146B2  0102               	movlb	2	; () banked
 20560  0146B4  6F1F               	movwf	_params& (0+255),b
 20561                           
 20562                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20563  0146B6  0E00               	movlw	0
 20564  0146B8  6F21               	movwf	(_params+2)& (0+255),b
 20565  0146BA  0E00               	movlw	0
 20566  0146BC  6F20               	movwf	(_params+1)& (0+255),b
 20567                           
 20568                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20569  0146BE  0E00               	movlw	0
 20570  0146C0  6F24               	movwf	(_params+5)& (0+255),b
 20571                           
 20572                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20573  0146C2  0E00               	movlw	0
 20574  0146C4  6F23               	movwf	(_params+4)& (0+255),b
 20575  0146C6  0E00               	movlw	0
 20576  0146C8  6F22               	movwf	(_params+3)& (0+255),b
 20577                           
 20578                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20579  0146CA  0E00               	movlw	0
 20580  0146CC  6F25               	movwf	(_params+6)& (0+255),b
 20581                           
 20582                           ; BSR set to: 2
 20583                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20584  0146CE  9EC2               	bcf	4034,7,c	;volatile
 20585                           
 20586                           ; BSR set to: 2
 20587                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20588  0146D0  9CC2               	bcf	4034,6,c	;volatile
 20589                           
 20590                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20591  0146D2  50C2               	movf	4034,w,c	;volatile
 20592  0146D4  0BC3               	andlw	-61
 20593  0146D6  0924               	iorlw	36
 20594  0146D8  6EC2               	movwf	4034,c	;volatile
 20595                           
 20596                           ; BSR set to: 2
 20597                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20598  0146DA  8EC1               	bsf	4033,7,c	;volatile
 20599                           
 20600                           ; BSR set to: 2
 20601                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20602  0146DC  9CC1               	bcf	4033,6,c	;volatile
 20603                           
 20604                           ; BSR set to: 2
 20605                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20606  0146DE  86C1               	bsf	4033,3,c	;volatile
 20607  0146E0  88C1               	bsf	4033,4,c	;volatile
 20608  0146E2  8AC1               	bsf	4033,5,c	;volatile
 20609                           
 20610                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20611  0146E4  50C1               	movf	4033,w,c	;volatile
 20612  0146E6  0BF8               	andlw	-8
 20613  0146E8  0906               	iorlw	6
 20614  0146EA  6EC1               	movwf	4033,c	;volatile
 20615                           
 20616                           ; BSR set to: 2
 20617                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20618  0146EC  80C2               	bsf	4034,0,c	;volatile
 20619                           
 20620                           ; BSR set to: 2
 20621                           ;adc.c: 41: ADCON0bits.GO = 1;
 20622  0146EE  82C2               	bsf	4034,1,c	;volatile
 20623                           
 20624                           ; BSR set to: 2
 20625  0146F0  0012               	return		;funcret
 20626  0146F2                     __end_of_adc_init:
 20627                           	opt stack 0
 20628                           tblptru	equ	0xFF8
 20629                           tblptrh	equ	0xFF7
 20630                           tblptrl	equ	0xFF6
 20631                           tablat	equ	0xFF5
 20632                           prodh	equ	0xFF4
 20633                           prodl	equ	0xFF3
 20634                           postinc0	equ	0xFEE
 20635                           wreg	equ	0xFE8
 20636                           indf1	equ	0xFE7
 20637                           postinc1	equ	0xFE6
 20638                           postdec1	equ	0xFE5
 20639                           plusw1	equ	0xFE3
 20640                           fsr1h	equ	0xFE2
 20641                           fsr1l	equ	0xFE1
 20642                           indf2	equ	0xFDF
 20643                           postinc2	equ	0xFDE
 20644                           postdec2	equ	0xFDD
 20645                           plusw2	equ	0xFDB
 20646                           fsr2h	equ	0xFDA
 20647                           fsr2l	equ	0xFD9
 20648                           status	equ	0xFD8
 20649                           
 20650 ;; *************** function __system_timer0_init *****************
 20651 ;; Defined at:
 20652 ;;		line 125 in file "os.c"
 20653 ;; Parameters:    Size  Location     Type
 20654 ;;		None
 20655 ;; Auto vars:     Size  Location     Type
 20656 ;;		None
 20657 ;; Return value:  Size  Location     Type
 20658 ;;                  1    wreg      void 
 20659 ;; Registers used:
 20660 ;;		wreg, status,2
 20661 ;; Tracked objects:
 20662 ;;		On entry : 0/0
 20663 ;;		On exit  : 0/0
 20664 ;;		Unchanged: 0/0
 20665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20670 ;;Total ram usage:        0 bytes
 20671 ;; Hardware stack levels used:    1
 20672 ;; Hardware stack levels required when called:   10
 20673 ;; This function calls:
 20674 ;;		Nothing
 20675 ;; This function is called by:
 20676 ;;		_system_init
 20677 ;; This function uses a non-reentrant model
 20678 ;;
 20679                           
 20680                           	psect	text86
 20681  015372                     __ptext86:
 20682                           	opt stack 0
 20683  015372                     __system_timer0_init:
 20684                           	opt stack 19
 20685                           
 20686                           ;os.c: 130: T0CONbits.T0CS = 0;
 20687                           
 20688                           ; BSR set to: 2
 20689                           ;incstack = 0
 20690  015372  9AD5               	bcf	4053,5,c	;volatile
 20691                           
 20692                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20693  015374  9CD5               	bcf	4053,6,c	;volatile
 20694                           
 20695                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20696  015376  94D5               	bcf	4053,2,c	;volatile
 20697                           
 20698                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20699  015378  82D5               	bsf	4053,1,c	;volatile
 20700                           
 20701                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20702  01537A  90D5               	bcf	4053,0,c	;volatile
 20703                           
 20704                           ;os.c: 138: T0CONbits.PSA = 0;
 20705  01537C  96D5               	bcf	4053,3,c	;volatile
 20706                           
 20707                           ;os.c: 140: TMR0H = 0xFA;
 20708  01537E  0EFA               	movlw	250
 20709  015380  6ED7               	movwf	4055,c	;volatile
 20710                           
 20711                           ;os.c: 141: TMR0L = 0x24;
 20712  015382  0E24               	movlw	36
 20713  015384  6ED6               	movwf	4054,c	;volatile
 20714                           
 20715                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20716  015386  8ED5               	bsf	4053,7,c	;volatile
 20717                           
 20718                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20719  015388  94F2               	bcf	intcon,2,c	;volatile
 20720                           
 20721                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20722  01538A  8AF2               	bsf	intcon,5,c	;volatile
 20723                           
 20724                           ;os.c: 148: INTCONbits.GIE = 1;
 20725  01538C  8EF2               	bsf	intcon,7,c	;volatile
 20726                           
 20727                           ;os.c: 151: os.subTimeSlot = 0;
 20728  01538E  0E00               	movlw	0
 20729  015390  0101               	movlb	1	; () banked
 20730  015392  6F71               	movwf	_os& (0+255),b	;volatile
 20731                           
 20732                           ;os.c: 152: os.timeSlot = 0;
 20733  015394  0E00               	movlw	0
 20734  015396  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 20735                           
 20736                           ;os.c: 153: os.done = 0;
 20737  015398  0E00               	movlw	0
 20738  01539A  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 20739                           
 20740                           ; BSR set to: 1
 20741  01539C  0012               	return		;funcret
 20742  01539E                     __end_of__system_timer0_init:
 20743                           	opt stack 0
 20744                           tblptru	equ	0xFF8
 20745                           tblptrh	equ	0xFF7
 20746                           tblptrl	equ	0xFF6
 20747                           tablat	equ	0xFF5
 20748                           prodh	equ	0xFF4
 20749                           prodl	equ	0xFF3
 20750                           intcon	equ	0xFF2
 20751                           postinc0	equ	0xFEE
 20752                           wreg	equ	0xFE8
 20753                           indf1	equ	0xFE7
 20754                           postinc1	equ	0xFE6
 20755                           postdec1	equ	0xFE5
 20756                           plusw1	equ	0xFE3
 20757                           fsr1h	equ	0xFE2
 20758                           fsr1l	equ	0xFE1
 20759                           indf2	equ	0xFDF
 20760                           postinc2	equ	0xFDE
 20761                           postdec2	equ	0xFDD
 20762                           plusw2	equ	0xFDB
 20763                           fsr2h	equ	0xFDA
 20764                           fsr2l	equ	0xFD9
 20765                           status	equ	0xFD8
 20766                           
 20767 ;; *************** function __system_pin_setup *****************
 20768 ;; Defined at:
 20769 ;;		line 59 in file "os.c"
 20770 ;; Parameters:    Size  Location     Type
 20771 ;;		None
 20772 ;; Auto vars:     Size  Location     Type
 20773 ;;		None
 20774 ;; Return value:  Size  Location     Type
 20775 ;;                  1    wreg      void 
 20776 ;; Registers used:
 20777 ;;		wreg, status,2
 20778 ;; Tracked objects:
 20779 ;;		On entry : 0/0
 20780 ;;		On exit  : 0/0
 20781 ;;		Unchanged: 0/0
 20782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20787 ;;Total ram usage:        0 bytes
 20788 ;; Hardware stack levels used:    1
 20789 ;; Hardware stack levels required when called:   10
 20790 ;; This function calls:
 20791 ;;		Nothing
 20792 ;; This function is called by:
 20793 ;;		_system_init
 20794 ;; This function uses a non-reentrant model
 20795 ;;
 20796                           
 20797                           	psect	text87
 20798  013FEE                     __ptext87:
 20799                           	opt stack 0
 20800  013FEE                     __system_pin_setup:
 20801                           	opt stack 19
 20802                           
 20803                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20804                           
 20805                           ; BSR set to: 1
 20806                           ;incstack = 0
 20807  013FEE  8A95               	bsf	3989,5,c	;volatile
 20808                           
 20809                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20810  013FF0  9895               	bcf	3989,4,c	;volatile
 20811                           
 20812                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20813  013FF2  9C95               	bcf	3989,6,c	;volatile
 20814                           
 20815                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20816  013FF4  9E95               	bcf	3989,7,c	;volatile
 20817                           
 20818                           ;os.c: 66: LATDbits.LD7 = 1;
 20819  013FF6  8E8C               	bsf	3980,7,c	;volatile
 20820                           
 20821                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20822  013FF8  8693               	bsf	3987,3,c	;volatile
 20823                           
 20824                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20825  013FFA  010F               	movlb	15	; () banked
 20826  013FFC  9349               	bcf	73,1,b	;volatile
 20827                           
 20828                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20829  013FFE  9E94               	bcf	3988,7,c	;volatile
 20830                           
 20831                           ;os.c: 72: LATCbits.LC7 = 0;
 20832  014000  9E8B               	bcf	3979,7,c	;volatile
 20833                           
 20834                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20835  014002  9C94               	bcf	3988,6,c	;volatile
 20836                           
 20837                           ;os.c: 75: LATCbits.LC6 = 0;
 20838  014004  9C8B               	bcf	3979,6,c	;volatile
 20839                           
 20840                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20841  014006  9692               	bcf	3986,3,c	;volatile
 20842                           
 20843                           ;os.c: 78: LATAbits.LA3 = 0;
 20844  014008  9689               	bcf	3977,3,c	;volatile
 20845                           
 20846                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20847  01400A  9294               	bcf	3988,1,c	;volatile
 20848                           
 20849                           ;os.c: 81: LATCbits.LC1 = 0;
 20850  01400C  928B               	bcf	3979,1,c	;volatile
 20851                           
 20852                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20853  01400E  8A93               	bsf	3987,5,c	;volatile
 20854                           
 20855                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20856  014010  8893               	bsf	3987,4,c	;volatile
 20857                           
 20858                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20859  014012  9093               	bcf	3987,0,c	;volatile
 20860                           
 20861                           ;os.c: 90: LATBbits.LB0 = 1;
 20862  014014  808A               	bsf	3978,0,c	;volatile
 20863                           
 20864                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20865  014016  9493               	bcf	3987,2,c	;volatile
 20866                           
 20867                           ;os.c: 93: LATBbits.LB2 = 0;
 20868  014018  948A               	bcf	3978,2,c	;volatile
 20869                           
 20870                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20871  01401A  9293               	bcf	3987,1,c	;volatile
 20872                           
 20873                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20874  01401C  8549               	bsf	73,2,b	;volatile
 20875                           
 20876                           ;os.c: 97: LATBbits.LB1 = 0;
 20877  01401E  928A               	bcf	3978,1,c	;volatile
 20878                           
 20879                           ; BSR set to: 15
 20880                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20881  014020  0E55               	movlw	85
 20882  014022  6EA7               	movwf	4007,c	;volsfr
 20883  014024  0EAA               	movlw	170
 20884  014026  6EA7               	movwf	4007,c	;volsfr
 20885                           
 20886                           ; BSR set to: 15
 20887  014028  010E               	movlb	14	; () banked
 20888  01402A  91BF               	bcf	191,0,b	;volatile
 20889                           
 20890                           ;os.c: 99: RPOR4 = 14;
 20891  01402C  0E0E               	movlw	14
 20892  01402E  6FC4               	movwf	196,b	;volatile
 20893                           
 20894                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20895  014030  0E55               	movlw	85
 20896  014032  6EA7               	movwf	4007,c	;volsfr
 20897  014034  0EAA               	movlw	170
 20898  014036  6EA7               	movwf	4007,c	;volsfr
 20899                           
 20900                           ; BSR set to: 14
 20901  014038  81BF               	bsf	191,0,b	;volatile
 20902                           
 20903                           ; BSR set to: 14
 20904                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20905  01403A  8495               	bsf	3989,2,c	;volatile
 20906                           
 20907                           ; BSR set to: 14
 20908                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20909  01403C  8496               	bsf	3990,2,c	;volatile
 20910                           
 20911                           ; BSR set to: 14
 20912                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20913  01403E  010F               	movlb	15	; () banked
 20914  014040  8F48               	bsf	72,7,b	;volatile
 20915                           
 20916                           ; BSR set to: 15
 20917                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20918  014042  8096               	bsf	3990,0,c	;volatile
 20919                           
 20920                           ; BSR set to: 15
 20921                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20922  014044  8B48               	bsf	72,5,b	;volatile
 20923                           
 20924                           ; BSR set to: 15
 20925                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20926  014046  8296               	bsf	3990,1,c	;volatile
 20927                           
 20928                           ; BSR set to: 15
 20929                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20930  014048  8D48               	bsf	72,6,b	;volatile
 20931                           
 20932                           ; BSR set to: 15
 20933                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20934  01404A  8092               	bsf	3986,0,c	;volatile
 20935                           
 20936                           ; BSR set to: 15
 20937                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20938  01404C  8148               	bsf	72,0,b	;volatile
 20939                           
 20940                           ; BSR set to: 15
 20941                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20942  01404E  8492               	bsf	3986,2,c	;volatile
 20943                           
 20944                           ; BSR set to: 15
 20945                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20946  014050  8548               	bsf	72,2,b	;volatile
 20947                           
 20948                           ; BSR set to: 15
 20949                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20950  014052  8292               	bsf	3986,1,c	;volatile
 20951                           
 20952                           ; BSR set to: 15
 20953                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20954  014054  8348               	bsf	72,1,b	;volatile
 20955                           
 20956                           ; BSR set to: 15
 20957  014056  0012               	return		;funcret
 20958  014058                     __end_of__system_pin_setup:
 20959                           	opt stack 0
 20960                           tblptru	equ	0xFF8
 20961                           tblptrh	equ	0xFF7
 20962                           tblptrl	equ	0xFF6
 20963                           tablat	equ	0xFF5
 20964                           prodh	equ	0xFF4
 20965                           prodl	equ	0xFF3
 20966                           intcon	equ	0xFF2
 20967                           postinc0	equ	0xFEE
 20968                           wreg	equ	0xFE8
 20969                           indf1	equ	0xFE7
 20970                           postinc1	equ	0xFE6
 20971                           postdec1	equ	0xFE5
 20972                           plusw1	equ	0xFE3
 20973                           fsr1h	equ	0xFE2
 20974                           fsr1l	equ	0xFE1
 20975                           indf2	equ	0xFDF
 20976                           postinc2	equ	0xFDE
 20977                           postdec2	equ	0xFDD
 20978                           plusw2	equ	0xFDB
 20979                           fsr2h	equ	0xFDA
 20980                           fsr2l	equ	0xFD9
 20981                           status	equ	0xFD8
 20982                           
 20983 ;; *************** function __backlight_init *****************
 20984 ;; Defined at:
 20985 ;;		line 158 in file "os.c"
 20986 ;; Parameters:    Size  Location     Type
 20987 ;;		None
 20988 ;; Auto vars:     Size  Location     Type
 20989 ;;		None
 20990 ;; Return value:  Size  Location     Type
 20991 ;;                  1    wreg      void 
 20992 ;; Registers used:
 20993 ;;		None
 20994 ;; Tracked objects:
 20995 ;;		On entry : 0/0
 20996 ;;		On exit  : 0/0
 20997 ;;		Unchanged: 0/0
 20998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21003 ;;Total ram usage:        0 bytes
 21004 ;; Hardware stack levels used:    1
 21005 ;; Hardware stack levels required when called:   10
 21006 ;; This function calls:
 21007 ;;		Nothing
 21008 ;; This function is called by:
 21009 ;;		_system_init
 21010 ;; This function uses a non-reentrant model
 21011 ;;
 21012                           
 21013                           	psect	text88
 21014  015818                     __ptext88:
 21015                           	opt stack 0
 21016  015818                     __backlight_init:
 21017                           	opt stack 19
 21018                           
 21019                           ;os.c: 160: LATCbits.LC1 = 1;
 21020                           
 21021                           ; BSR set to: 15
 21022                           ;incstack = 0
 21023  015818  828B               	bsf	3979,1,c	;volatile
 21024  01581A  0012               	return		;funcret
 21025  01581C                     __end_of__backlight_init:
 21026                           	opt stack 0
 21027                           tblptru	equ	0xFF8
 21028                           tblptrh	equ	0xFF7
 21029                           tblptrl	equ	0xFF6
 21030                           tablat	equ	0xFF5
 21031                           prodh	equ	0xFF4
 21032                           prodl	equ	0xFF3
 21033                           intcon	equ	0xFF2
 21034                           postinc0	equ	0xFEE
 21035                           wreg	equ	0xFE8
 21036                           indf1	equ	0xFE7
 21037                           postinc1	equ	0xFE6
 21038                           postdec1	equ	0xFE5
 21039                           plusw1	equ	0xFE3
 21040                           fsr1h	equ	0xFE2
 21041                           fsr1l	equ	0xFE1
 21042                           indf2	equ	0xFDF
 21043                           postinc2	equ	0xFDE
 21044                           postdec2	equ	0xFDD
 21045                           plusw2	equ	0xFDB
 21046                           fsr2h	equ	0xFDA
 21047                           fsr2l	equ	0xFD9
 21048                           status	equ	0xFD8
 21049                           
 21050 ;; *************** function _motor_process_cue *****************
 21051 ;; Defined at:
 21052 ;;		line 153 in file "motor.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;		None
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;		None
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  1    wreg      void 
 21059 ;; Registers used:
 21060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21070 ;;Total ram usage:        0 bytes
 21071 ;; Hardware stack levels used:    1
 21072 ;; Hardware stack levels required when called:   13
 21073 ;; This function calls:
 21074 ;;		__motor_run
 21075 ;;		_motor_items_in_cue
 21076 ;; This function is called by:
 21077 ;;		_main
 21078 ;; This function uses a non-reentrant model
 21079 ;;
 21080                           
 21081                           	psect	text89
 21082  013CE4                     __ptext89:
 21083                           	opt stack 0
 21084  013CE4                     _motor_process_cue:
 21085                           	opt stack 17
 21086                           
 21087                           ;motor.c: 155: if(motor_items_in_cue()==0)
 21088                           
 21089                           ;incstack = 0
 21090  013CE4  ECD4  F0AB         	call	_motor_items_in_cue	;wreg free
 21091  013CE8  0900               	iorlw	0
 21092  013CEA  B4D8               	btfsc	status,2,c
 21093  013CEC  0012               	return	
 21094                           
 21095                           ;motor.c: 160: else if(os.busy)
 21096                           
 21097                           ;motor.c: 159: }
 21098                           
 21099                           ;motor.c: 156: {;motor.c: 158: return;
 21100  013CEE  0101               	movlb	1	; () banked
 21101  013CF0  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21102  013CF2  A4D8               	btfss	status,2,c
 21103  013CF4  0012               	return	
 21104                           
 21105                           ; BSR set to: 1
 21106                           ;motor.c: 165: else;motor.c: 166: {;motor.c: 168: _motor_run(;motor.c: 169: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 170: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 171: motor_command_cue[motor_cue_read_index].speed;motor.c: 172:
      +                           );
 21107                           
 21108                           ; BSR set to: 1
 21109                           
 21110                           ; BSR set to: 1
 21111                           ;motor.c: 164: }
 21112                           
 21113                           ; BSR set to: 1
 21114                           ;motor.c: 161: {;motor.c: 163: return;
 21115  013CF6  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21116  013CF8  0D07               	mullw	7
 21117  013CFA  0E01               	movlw	1
 21118  013CFC  26F3               	addwf	prodl,f,c
 21119  013CFE  0E00               	movlw	0
 21120  013D00  22F4               	addwfc	prodh,f,c
 21121  013D02  0E00               	movlw	low _motor_command_cue
 21122  013D04  24F3               	addwf	prodl,w,c
 21123  013D06  6ED9               	movwf	fsr2l,c
 21124  013D08  0E03               	movlw	high _motor_command_cue
 21125  013D0A  20F4               	addwfc	prodh,w,c
 21126  013D0C  6EDA               	movwf	fsr2h,c
 21127  013D0E  CFDE F08F          	movff	postinc2,__motor_run@distance_in_steps
 21128  013D12  CFDE F090          	movff	postinc2,__motor_run@distance_in_steps+1
 21129  013D16  CFDE F091          	movff	postinc2,__motor_run@distance_in_steps+2
 21130  013D1A  CFDE F092          	movff	postinc2,__motor_run@distance_in_steps+3
 21131  013D1E  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21132  013D20  0D07               	mullw	7
 21133  013D22  0E05               	movlw	5
 21134  013D24  26F3               	addwf	prodl,f,c
 21135  013D26  0E00               	movlw	0
 21136  013D28  22F4               	addwfc	prodh,f,c
 21137  013D2A  0E00               	movlw	low _motor_command_cue
 21138  013D2C  24F3               	addwf	prodl,w,c
 21139  013D2E  6ED9               	movwf	fsr2l,c
 21140  013D30  0E03               	movlw	high _motor_command_cue
 21141  013D32  20F4               	addwfc	prodh,w,c
 21142  013D34  6EDA               	movwf	fsr2h,c
 21143  013D36  CFDE F093          	movff	postinc2,__motor_run@speed
 21144  013D3A  CFDD F094          	movff	postdec2,__motor_run@speed+1
 21145  013D3E  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21146  013D40  0D07               	mullw	7
 21147  013D42  0E00               	movlw	low _motor_command_cue
 21148  013D44  24F3               	addwf	prodl,w,c
 21149  013D46  6ED9               	movwf	fsr2l,c
 21150  013D48  0E03               	movlw	high _motor_command_cue
 21151  013D4A  20F4               	addwfc	prodh,w,c
 21152  013D4C  6EDA               	movwf	fsr2h,c
 21153  013D4E  50DF               	movf	indf2,w,c
 21154  013D50  ECFE  F062         	call	__motor_run
 21155                           
 21156                           ;motor.c: 174: ++motor_cue_read_index;
 21157  013D54  0101               	movlb	1	; () banked
 21158  013D56  2B58               	incf	_motor_cue_read_index& (0+255),f,b
 21159                           
 21160                           ; BSR set to: 1
 21161  013D58  0012               	return	
 21162  013D5A                     __end_of_motor_process_cue:
 21163                           	opt stack 0
 21164                           tblptru	equ	0xFF8
 21165                           tblptrh	equ	0xFF7
 21166                           tblptrl	equ	0xFF6
 21167                           tablat	equ	0xFF5
 21168                           prodh	equ	0xFF4
 21169                           prodl	equ	0xFF3
 21170                           intcon	equ	0xFF2
 21171                           postinc0	equ	0xFEE
 21172                           wreg	equ	0xFE8
 21173                           indf1	equ	0xFE7
 21174                           postinc1	equ	0xFE6
 21175                           postdec1	equ	0xFE5
 21176                           plusw1	equ	0xFE3
 21177                           fsr1h	equ	0xFE2
 21178                           fsr1l	equ	0xFE1
 21179                           indf2	equ	0xFDF
 21180                           postinc2	equ	0xFDE
 21181                           postdec2	equ	0xFDD
 21182                           plusw2	equ	0xFDB
 21183                           fsr2h	equ	0xFDA
 21184                           fsr2l	equ	0xFD9
 21185                           status	equ	0xFD8
 21186                           
 21187 ;; *************** function _encoder_statemachine *****************
 21188 ;; Defined at:
 21189 ;;		line 210 in file "encoder.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;		None
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;		None
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1    wreg      void 
 21196 ;; Registers used:
 21197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21198 ;; Tracked objects:
 21199 ;;		On entry : 0/0
 21200 ;;		On exit  : 0/0
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21205 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21206 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21207 ;;Total ram usage:        4 bytes
 21208 ;; Hardware stack levels used:    1
 21209 ;; Hardware stack levels required when called:   16
 21210 ;; This function calls:
 21211 ;;		__divide_jump_size_decrement
 21212 ;;		__divide_jump_size_increment
 21213 ;;		__encoder_next_arc_step_size
 21214 ;;		__encoder_next_divide_step_size
 21215 ;;		__encoder_next_setup_stepsize
 21216 ;;		_motor_arc_move
 21217 ;;		_motor_change_speed
 21218 ;;		_motor_divide_jump
 21219 ;;		_motor_divide_jump_to_nearest
 21220 ;;		_motor_go_to_steps_position
 21221 ;;		_motor_nonzero_steps_from_degrees
 21222 ;;		_motor_schedule_command
 21223 ;;		_motor_stop
 21224 ;; This function is called by:
 21225 ;;		_main
 21226 ;; This function uses a non-reentrant model
 21227 ;;
 21228                           
 21229                           	psect	text90
 21230  00AF94                     __ptext90:
 21231                           	opt stack 0
 21232  00AF94                     _encoder_statemachine:
 21233                           	opt stack 14
 21234                           
 21235                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21236                           
 21237                           ;incstack = 0
 21238  00AF94  0101               	movlb	1	; () banked
 21239  00AF96  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21240  00AF98  A4D8               	btfss	status,2,c
 21241  00AF9A  EF2A  F05C         	goto	l2614
 21242                           
 21243                           ; BSR set to: 1
 21244  00AF9E  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21245  00AFA0  A4D8               	btfss	status,2,c
 21246  00AFA2  EF2A  F05C         	goto	l2614
 21247                           
 21248                           ; BSR set to: 1
 21249  00AFA6  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 21250  00AFA8  A4D8               	btfss	status,2,c
 21251  00AFAA  EF2A  F05C         	goto	l2614
 21252                           
 21253                           ; BSR set to: 1
 21254  00AFAE  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 21255  00AFB0  B4D8               	btfsc	status,2,c
 21256  00AFB2  0012               	return	
 21257  00AFB4  EF2A  F05C         	goto	l2614
 21258  00AFB8                     
 21259                           ; BSR set to: 1
 21260                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21261                           
 21262                           ; BSR set to: 1
 21263  00AFB8  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21264  00AFBA  B4D8               	btfsc	status,2,c
 21265  00AFBC  D003               	goto	u16970
 21266                           
 21267                           ; BSR set to: 1
 21268  00AFBE  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21269  00AFC0  A4D8               	btfss	status,2,c
 21270  00AFC2  D002               	goto	l2618
 21271  00AFC4                     u16970:
 21272                           
 21273                           ; BSR set to: 1
 21274                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21275                           
 21276                           ; BSR set to: 1
 21277  00AFC4  0E11               	movlw	17
 21278  00AFC6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21279  00AFC8                     l2618:
 21280                           
 21281                           ; BSR set to: 1
 21282                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21283                           
 21284                           ; BSR set to: 1
 21285  00AFC8  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21286  00AFCC  0100               	movlb	0	; () banked
 21287  00AFCE  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21288  00AFD0  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21289  00AFD2  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21290  00AFD4  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21291  00AFD8  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21292  00AFDA  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21293  00AFDC  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21294  00AFDE  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21295  00AFE0  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21296  00AFE2  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21297  00AFE4  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21298  00AFE6  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21299  00AFE8  D008               	goto	l2621
 21300  00AFEA  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21301  00AFEC  E103               	bnz	u16980
 21302  00AFEE  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21303  00AFF0  A0D8               	btfss	status,0,c
 21304  00AFF2  D003               	goto	l2621
 21305  00AFF4                     u16980:
 21306                           
 21307                           ; BSR set to: 0
 21308                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21309  00AFF4  0E02               	movlw	2
 21310  00AFF6  0101               	movlb	1	; () banked
 21311  00AFF8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21312  00AFFA                     l2621:
 21313                           
 21314                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21315                           
 21316                           ; BSR set to: 1
 21317  00AFFA  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21318  00AFFE  0100               	movlb	0	; () banked
 21319  00B000  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21320  00B002  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21321  00B004  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21322  00B006  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21323  00B00A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21324  00B00C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21325  00B00E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21326  00B010  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21327  00B012  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21328  00B014  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21329  00B016  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21330  00B018  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21331  00B01A  EF4F  F05C         	goto	l2649
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21335  00B01E  0E05               	movlw	5
 21336  00B020  EF18  F05C         	goto	L22
 21337  00B024                     
 21338                           ; BSR set to: 1
 21339                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21340                           
 21341                           ; BSR set to: 1
 21342  00B024  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21343  00B026  B4D8               	btfsc	status,2,c
 21344  00B028  D003               	goto	u17010
 21345                           
 21346                           ; BSR set to: 1
 21347  00B02A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21348  00B02C  A4D8               	btfss	status,2,c
 21349  00B02E  D002               	goto	l2625
 21350  00B030                     u17010:
 21351                           
 21352                           ; BSR set to: 1
 21353                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21354                           
 21355                           ; BSR set to: 1
 21356  00B030  0E31               	movlw	49
 21357  00B032  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21358  00B034                     l2625:
 21359                           
 21360                           ; BSR set to: 1
 21361                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21362                           
 21363                           ; BSR set to: 1
 21364  00B034  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21365  00B038  0100               	movlb	0	; () banked
 21366  00B03A  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21367  00B03C  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21368  00B03E  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21369  00B040  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21370  00B044  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21371  00B046  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21372  00B048  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21373  00B04A  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21374  00B04C  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21375  00B04E  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21376  00B050  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21377  00B052  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21378  00B054  D008               	goto	l2628
 21379  00B056  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21380  00B058  E103               	bnz	u17020
 21381  00B05A  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21382  00B05C  A0D8               	btfss	status,0,c
 21383  00B05E  D003               	goto	l2628
 21384  00B060                     u17020:
 21385                           
 21386                           ; BSR set to: 0
 21387                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21388  00B060  0E03               	movlw	3
 21389  00B062  0101               	movlb	1	; () banked
 21390  00B064  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21391  00B066                     l2628:
 21392                           
 21393                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21394                           
 21395                           ; BSR set to: 1
 21396  00B066  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21397  00B06A  0100               	movlb	0	; () banked
 21398  00B06C  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21399  00B06E  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21400  00B070  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21401  00B072  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21402  00B076  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21403  00B078  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21404  00B07A  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21405  00B07C  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21406  00B07E  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21407  00B080  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21408  00B082  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21409  00B084  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21410  00B086  EF4F  F05C         	goto	l2649
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21414  00B08A  0E01               	movlw	1
 21415  00B08C  D3D1               	goto	L22
 21416  00B08E                     
 21417                           ; BSR set to: 1
 21418                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21419                           
 21420                           ; BSR set to: 1
 21421  00B08E  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21422  00B090  B4D8               	btfsc	status,2,c
 21423  00B092  D003               	goto	u17050
 21424                           
 21425                           ; BSR set to: 1
 21426  00B094  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21427  00B096  A4D8               	btfss	status,2,c
 21428  00B098  D002               	goto	l2631
 21429  00B09A                     u17050:
 21430                           
 21431                           ; BSR set to: 1
 21432                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21433                           
 21434                           ; BSR set to: 1
 21435  00B09A  0E51               	movlw	81
 21436  00B09C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21437  00B09E                     l2631:
 21438                           
 21439                           ; BSR set to: 1
 21440                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21441                           
 21442                           ; BSR set to: 1
 21443  00B09E  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21444  00B0A2  0100               	movlb	0	; () banked
 21445  00B0A4  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21446  00B0A6  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21447  00B0A8  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21448  00B0AA  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21449  00B0AE  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21450  00B0B0  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21451  00B0B2  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21452  00B0B4  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21453  00B0B6  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21454  00B0B8  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21455  00B0BA  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21456  00B0BC  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21457  00B0BE  D008               	goto	l2634
 21458  00B0C0  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21459  00B0C2  E103               	bnz	u17060
 21460  00B0C4  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21461  00B0C6  A0D8               	btfss	status,0,c
 21462  00B0C8  D003               	goto	l2634
 21463  00B0CA                     u17060:
 21464                           
 21465                           ; BSR set to: 0
 21466                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21467  00B0CA  0E04               	movlw	4
 21468  00B0CC  0101               	movlb	1	; () banked
 21469  00B0CE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21470  00B0D0                     l2634:
 21471                           
 21472                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21473                           
 21474                           ; BSR set to: 1
 21475  00B0D0  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21476  00B0D4  0100               	movlb	0	; () banked
 21477  00B0D6  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21478  00B0D8  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21479  00B0DA  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21480  00B0DC  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21481  00B0E0  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21482  00B0E2  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21483  00B0E4  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21484  00B0E6  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21485  00B0E8  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21486  00B0EA  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21487  00B0EC  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21488  00B0EE  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21489  00B0F0  D3D6               	goto	l2649
 21490                           
 21491                           ; BSR set to: 0
 21492                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21493  00B0F2  0E02               	movlw	2
 21494  00B0F4  D39D               	goto	L22
 21495  00B0F6                     
 21496                           ; BSR set to: 1
 21497                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21498                           
 21499                           ; BSR set to: 1
 21500  00B0F6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21501  00B0F8  B4D8               	btfsc	status,2,c
 21502  00B0FA  D003               	goto	u17090
 21503                           
 21504                           ; BSR set to: 1
 21505  00B0FC  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21506  00B0FE  A4D8               	btfss	status,2,c
 21507  00B100  D002               	goto	l2637
 21508  00B102                     u17090:
 21509                           
 21510                           ; BSR set to: 1
 21511                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21512                           
 21513                           ; BSR set to: 1
 21514  00B102  0E82               	movlw	130
 21515  00B104  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21516  00B106                     l2637:
 21517                           
 21518                           ; BSR set to: 1
 21519                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21520                           
 21521                           ; BSR set to: 1
 21522  00B106  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21523  00B10A  0100               	movlb	0	; () banked
 21524  00B10C  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21525  00B10E  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21526  00B110  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21527  00B112  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21528  00B116  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21529  00B118  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21530  00B11A  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21531  00B11C  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21532  00B11E  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21533  00B120  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21534  00B122  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21535  00B124  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21536  00B126  D008               	goto	l2640
 21537  00B128  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21538  00B12A  E103               	bnz	u17100
 21539  00B12C  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21540  00B12E  A0D8               	btfss	status,0,c
 21541  00B130  D003               	goto	l2640
 21542  00B132                     u17100:
 21543                           
 21544                           ; BSR set to: 0
 21545                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21546  00B132  0E05               	movlw	5
 21547  00B134  0101               	movlb	1	; () banked
 21548  00B136  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21549  00B138                     l2640:
 21550                           
 21551                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21552                           
 21553                           ; BSR set to: 1
 21554  00B138  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21555  00B13C  0100               	movlb	0	; () banked
 21556  00B13E  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21557  00B140  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21558  00B142  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21559  00B144  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21560  00B148  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21561  00B14A  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21562  00B14C  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21563  00B14E  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21564  00B150  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21565  00B152  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21566  00B154  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21567  00B156  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21568  00B158  D3A2               	goto	l2649
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21572  00B15A  0E03               	movlw	3
 21573  00B15C  D369               	goto	L22
 21574  00B15E                     
 21575                           ; BSR set to: 1
 21576                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 21577                           
 21578                           ; BSR set to: 1
 21579  00B15E  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21580  00B160  B4D8               	btfsc	status,2,c
 21581  00B162  D003               	goto	u17130
 21582                           
 21583                           ; BSR set to: 1
 21584  00B164  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21585  00B166  A4D8               	btfss	status,2,c
 21586  00B168  D002               	goto	l2643
 21587  00B16A                     u17130:
 21588                           
 21589                           ; BSR set to: 1
 21590                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 21591                           
 21592                           ; BSR set to: 1
 21593  00B16A  0E71               	movlw	113
 21594  00B16C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21595  00B16E                     l2643:
 21596                           
 21597                           ; BSR set to: 1
 21598                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 21599                           
 21600                           ; BSR set to: 1
 21601  00B16E  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21602  00B172  0100               	movlb	0	; () banked
 21603  00B174  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21604  00B176  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21605  00B178  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21606  00B17A  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21607  00B17E  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21608  00B180  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21609  00B182  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21610  00B184  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21611  00B186  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21612  00B188  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21613  00B18A  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21614  00B18C  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21615  00B18E  D008               	goto	l2646
 21616  00B190  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21617  00B192  E103               	bnz	u17140
 21618  00B194  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21619  00B196  A0D8               	btfss	status,0,c
 21620  00B198  D003               	goto	l2646
 21621  00B19A                     u17140:
 21622                           
 21623                           ; BSR set to: 0
 21624                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21625  00B19A  0E01               	movlw	1
 21626  00B19C  0101               	movlb	1	; () banked
 21627  00B19E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21628  00B1A0                     l2646:
 21629                           
 21630                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 21631                           
 21632                           ; BSR set to: 1
 21633  00B1A0  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21634  00B1A4  0100               	movlb	0	; () banked
 21635  00B1A6  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21636  00B1A8  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21637  00B1AA  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21638  00B1AC  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21639  00B1B0  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21640  00B1B2  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21641  00B1B4  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21642  00B1B6  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21643  00B1B8  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21644  00B1BA  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21645  00B1BC  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21646  00B1BE  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21647  00B1C0  D36E               	goto	l2649
 21648                           
 21649                           ; BSR set to: 0
 21650                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21651  00B1C2  0E04               	movlw	4
 21652  00B1C4  D335               	goto	L22
 21653  00B1C6                     
 21654                           ; BSR set to: 1
 21655  00B1C6  0101               	movlb	1	; () banked
 21656  00B1C8  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21657                           
 21658                           ; Switch size 1, requested type "space"
 21659                           ; Number of cases is 6, Range of values is 1 to 240
 21660                           ; switch strategies available:
 21661                           ; Name         Instructions Cycles
 21662                           ; simple_byte           19    10 (average)
 21663                           ;	Chosen strategy is simple_byte
 21664  00B1CA  0A01               	xorlw	1	; case 1
 21665  00B1CC  B4D8               	btfsc	status,2,c
 21666  00B1CE  D6F4               	goto	l2617
 21667  00B1D0  0A03               	xorlw	3	; case 2
 21668  00B1D2  B4D8               	btfsc	status,2,c
 21669  00B1D4  D727               	goto	l2624
 21670  00B1D6  0A01               	xorlw	1	; case 3
 21671  00B1D8  B4D8               	btfsc	status,2,c
 21672  00B1DA  D759               	goto	l2630
 21673  00B1DC  0A07               	xorlw	7	; case 4
 21674  00B1DE  B4D8               	btfsc	status,2,c
 21675  00B1E0  D78A               	goto	l2636
 21676  00B1E2  0A01               	xorlw	1	; case 5
 21677  00B1E4  B4D8               	btfsc	status,2,c
 21678  00B1E6  D7BB               	goto	l2642
 21679  00B1E8  0AF5               	xorlw	245	; case 240
 21680                           
 21681                           ; BSR set to: 1
 21682                           ;encoder.c: 268: break;
 21683  00B1EA  D359               	goto	l2649
 21684  00B1EC                     
 21685                           ; BSR set to: 1
 21686                           ;encoder.c: 274: if(os.button1==1)
 21687                           
 21688                           ; BSR set to: 1
 21689  00B1EC  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21690  00B1EE  A4D8               	btfss	status,2,c
 21691  00B1F0  D00E               	goto	l2653
 21692                           
 21693                           ; BSR set to: 1
 21694                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 21695  00B1F2  0E00               	movlw	0
 21696  00B1F4  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 21697  00B1F6  0E00               	movlw	0
 21698  00B1F8  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 21699  00B1FA  0E00               	movlw	0
 21700  00B1FC  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 21701  00B1FE  0E00               	movlw	0
 21702  00B200  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 21703                           
 21704                           ;encoder.c: 277: os.divide_position = 0;
 21705  00B202  0E00               	movlw	0
 21706  00B204  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 21707  00B206  0E00               	movlw	0
 21708  00B208  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 21709                           
 21710                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21711  00B20A  0E21               	movlw	33
 21712  00B20C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21713  00B20E                     l2653:
 21714                           
 21715                           ; BSR set to: 1
 21716                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 21717                           
 21718                           ; BSR set to: 1
 21719  00B20E  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21720  00B210  0A80               	xorlw	128
 21721  00B212  0F7F               	addlw	-129
 21722  00B214  A0D8               	btfss	status,0,c
 21723  00B216  D002               	goto	l2654
 21724                           
 21725                           ; BSR set to: 1
 21726                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21727  00B218  0E12               	movlw	18
 21728  00B21A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21729  00B21C                     l2654:
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;encoder.c: 282: if(os.encoder1Count<0)
 21733                           
 21734                           ; BSR set to: 1
 21735  00B21C  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21736  00B21E  D01B               	goto	l2656
 21737                           
 21738                           ; BSR set to: 1
 21739                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21740  00B220  0E12               	movlw	18
 21741  00B222  D00F               	goto	L10
 21742  00B224                     
 21743                           ; BSR set to: 1
 21744                           ;encoder.c: 286: if(os.button1==1)
 21745                           
 21746                           ; BSR set to: 1
 21747  00B224  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21748  00B226  A4D8               	btfss	status,2,c
 21749  00B228  D002               	goto	l2658
 21750                           
 21751                           ; BSR set to: 1
 21752                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21753  00B22A  0E01               	movlw	1
 21754  00B22C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21755  00B22E                     l2658:
 21756                           
 21757                           ; BSR set to: 1
 21758                           ;encoder.c: 288: if(os.encoder1Count>0)
 21759                           
 21760                           ; BSR set to: 1
 21761  00B22E  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21762  00B230  0A80               	xorlw	128
 21763  00B232  0F7F               	addlw	-129
 21764  00B234  A0D8               	btfss	status,0,c
 21765  00B236  D002               	goto	l2659
 21766                           
 21767                           ; BSR set to: 1
 21768                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21769  00B238  0E11               	movlw	17
 21770  00B23A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21771  00B23C                     l2659:
 21772                           
 21773                           ; BSR set to: 1
 21774                           ;encoder.c: 290: if(os.encoder1Count<0)
 21775                           
 21776                           ; BSR set to: 1
 21777  00B23C  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21778  00B23E  D00B               	goto	l2656
 21779                           
 21780                           ; BSR set to: 1
 21781                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21782  00B240  0E11               	movlw	17
 21783  00B242                     L10:
 21784  00B242  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21785                           
 21786                           ; BSR set to: 1
 21787                           ;encoder.c: 293: }
 21788                           
 21789                           ; BSR set to: 1
 21790                           ;encoder.c: 292: break;
 21791  00B244  D008               	goto	l2656
 21792  00B246                     
 21793                           ; BSR set to: 1
 21794  00B246  0101               	movlb	1	; () banked
 21795  00B248  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21796                           
 21797                           ; Switch size 1, requested type "space"
 21798                           ; Number of cases is 2, Range of values is 17 to 18
 21799                           ; switch strategies available:
 21800                           ; Name         Instructions Cycles
 21801                           ; simple_byte            7     4 (average)
 21802                           ;	Chosen strategy is simple_byte
 21803  00B24A  0A11               	xorlw	17	; case 17
 21804  00B24C  B4D8               	btfsc	status,2,c
 21805  00B24E  D7CE               	goto	l2652
 21806  00B250  0A03               	xorlw	3	; case 18
 21807  00B252  B4D8               	btfsc	status,2,c
 21808  00B254  D7E7               	goto	l2657
 21809  00B256                     l2656:
 21810                           
 21811                           ; BSR set to: 1
 21812                           ;encoder.c: 294: if(os.button2==1)
 21813                           
 21814                           ; BSR set to: 1
 21815  00B256  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21816  00B258  A4D8               	btfss	status,2,c
 21817  00B25A  D00A               	goto	l2661
 21818                           
 21819                           ; BSR set to: 1
 21820                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 21821  00B25C  C181  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 21822  00B260  C182  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 21823  00B264  ECAD  F09E         	call	__encoder_next_setup_stepsize	;wreg free
 21824  00B268  C060  F181         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 21825  00B26C  C061  F182         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 21826  00B270                     l2661:
 21827                           
 21828                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 21829  00B270  0101               	movlb	1	; () banked
 21830  00B272  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21831  00B274  0A80               	xorlw	128
 21832  00B276  0F7F               	addlw	-129
 21833  00B278  A0D8               	btfss	status,0,c
 21834  00B27A  D019               	goto	l2663
 21835                           
 21836                           ; BSR set to: 1
 21837                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 21838  00B27C  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21839  00B27E  A4D8               	btfss	status,2,c
 21840  00B280  D016               	goto	l2663
 21841                           
 21842                           ; BSR set to: 1
 21843                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
 21844  00B282  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21845  00B286  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21846  00B28A  EC11  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21847  00B28E  C08F  F0A0         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21848  00B292  C090  F0A1         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21849  00B296  C091  F0A2         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21850  00B29A  C092  F0A3         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21851  00B29E  0E00               	movlw	0
 21852  00B2A0  0100               	movlb	0	; () banked
 21853  00B2A2  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21854  00B2A4  0E00               	movlw	0
 21855  00B2A6  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21856  00B2A8  0E01               	movlw	1
 21857  00B2AA  ECA7  F097         	call	_motor_schedule_command
 21858  00B2AE                     l2663:
 21859                           
 21860                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 21861  00B2AE  0101               	movlb	1	; () banked
 21862  00B2B0  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21863  00B2B2  D2F5               	goto	l2649
 21864                           
 21865                           ; BSR set to: 1
 21866                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 21867  00B2B4  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21868  00B2B6  A4D8               	btfss	status,2,c
 21869  00B2B8  D2F2               	goto	l2649
 21870                           
 21871                           ; BSR set to: 1
 21872                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
 21873  00B2BA  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21874  00B2BE  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21875  00B2C2  EC11  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21876  00B2C6  C08F  F0A0         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21877  00B2CA  C090  F0A1         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21878  00B2CE  C091  F0A2         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21879  00B2D2  C092  F0A3         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21880  00B2D6  0E00               	movlw	0
 21881  00B2D8  0100               	movlb	0	; () banked
 21882  00B2DA  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21883  00B2DC  0E00               	movlw	0
 21884  00B2DE  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21885  00B2E0  0EFF               	movlw	255
 21886  00B2E2  ECA7  F097         	call	_motor_schedule_command
 21887                           
 21888                           ;encoder.c: 309: };encoder.c: 310: break;
 21889  00B2E6  D2DB               	goto	l2649
 21890  00B2E8                     
 21891                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 21892  00B2E8  0101               	movlb	1	; () banked
 21893  00B2EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21894  00B2EC  B4D8               	btfsc	status,2,c
 21895  00B2EE  D003               	goto	u17280
 21896                           
 21897                           ; BSR set to: 1
 21898  00B2F0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21899  00B2F2  A4D8               	btfss	status,2,c
 21900  00B2F4  D020               	goto	l2669
 21901  00B2F6                     u17280:
 21902                           
 21903                           ; BSR set to: 1
 21904                           ;encoder.c: 317: {;encoder.c: 318: motor_schedule_command(MOTOR_DIRECTION_CW, config.ove
      +                          rshoot_in_steps, 0);
 21905                           
 21906                           ; BSR set to: 1
 21907  00B2F6  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 21908  00B2FA  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 21909  00B2FE  0100               	movlb	0	; () banked
 21910  00B300  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 21911  00B302  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 21912  00B304  0E00               	movlw	0
 21913  00B306  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21914  00B308  0E00               	movlw	0
 21915  00B30A  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21916  00B30C  0E01               	movlw	1
 21917  00B30E  ECA7  F097         	call	_motor_schedule_command
 21918                           
 21919                           ;encoder.c: 319: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
 21920  00B312  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 21921  00B316  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 21922  00B31A  0100               	movlb	0	; () banked
 21923  00B31C  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 21924  00B31E  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 21925  00B320  0E00               	movlw	0
 21926  00B322  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21927  00B324  0E00               	movlw	0
 21928  00B326  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21929  00B328  0EFF               	movlw	255
 21930  00B32A  ECA7  F097         	call	_motor_schedule_command
 21931                           
 21932                           ;encoder.c: 320: os.approach_direction = MOTOR_DIRECTION_CCW;
 21933  00B32E  0101               	movlb	1	; () banked
 21934  00B330  6983               	setf	(_os+18)& (0+255),b	;volatile
 21935                           
 21936                           ; BSR set to: 1
 21937                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21938  00B332  0E01               	movlw	1
 21939  00B334  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21940  00B336                     l2669:
 21941                           
 21942                           ; BSR set to: 1
 21943                           ;encoder.c: 322: };encoder.c: 323: if(os.encoder1Count+os.encoder2Count>0)
 21944                           
 21945                           ; BSR set to: 1
 21946  00B336  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21947  00B33A  0100               	movlb	0	; () banked
 21948  00B33C  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21949  00B33E  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21950  00B340  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21951  00B342  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21952  00B346  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21953  00B348  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21954  00B34A  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21955  00B34C  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21956  00B34E  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21957  00B350  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21958  00B352  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21959  00B354  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21960  00B356  D008               	goto	l2672
 21961  00B358  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21962  00B35A  E103               	bnz	u17290
 21963  00B35C  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21964  00B35E  A0D8               	btfss	status,0,c
 21965  00B360  D003               	goto	l2672
 21966  00B362                     u17290:
 21967                           
 21968                           ; BSR set to: 0
 21969                           ;encoder.c: 324: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21970  00B362  0E22               	movlw	34
 21971  00B364  0101               	movlb	1	; () banked
 21972  00B366  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21973  00B368                     l2672:
 21974                           
 21975                           ;encoder.c: 325: if(os.encoder1Count+os.encoder2Count<0)
 21976                           
 21977                           ; BSR set to: 1
 21978  00B368  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21979  00B36C  0100               	movlb	0	; () banked
 21980  00B36E  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21981  00B370  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21982  00B372  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21983  00B374  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21984  00B378  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21985  00B37A  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21986  00B37C  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21987  00B37E  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21988  00B380  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21989  00B382  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21990  00B384  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21991  00B386  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21992  00B388  D28A               	goto	l2649
 21993                           
 21994                           ; BSR set to: 0
 21995                           ;encoder.c: 326: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21996  00B38A  0E22               	movlw	34
 21997  00B38C  D251               	goto	L22
 21998  00B38E                     
 21999                           ; BSR set to: 1
 22000                           ;encoder.c: 329: if(os.button1==1 || os.button2==1)
 22001                           
 22002                           ; BSR set to: 1
 22003  00B38E  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22004  00B390  B4D8               	btfsc	status,2,c
 22005  00B392  D003               	goto	u17320
 22006                           
 22007                           ; BSR set to: 1
 22008  00B394  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22009  00B396  A4D8               	btfss	status,2,c
 22010  00B398  D021               	goto	l2676
 22011  00B39A                     u17320:
 22012                           
 22013                           ; BSR set to: 1
 22014                           ;encoder.c: 330: {;encoder.c: 331: motor_schedule_command(MOTOR_DIRECTION_CCW, config.ov
      +                          ershoot_in_steps, 0);
 22015                           
 22016                           ; BSR set to: 1
 22017  00B39A  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 22018  00B39E  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 22019  00B3A2  0100               	movlb	0	; () banked
 22020  00B3A4  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22021  00B3A6  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22022  00B3A8  0E00               	movlw	0
 22023  00B3AA  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 22024  00B3AC  0E00               	movlw	0
 22025  00B3AE  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 22026  00B3B0  0EFF               	movlw	255
 22027  00B3B2  ECA7  F097         	call	_motor_schedule_command
 22028                           
 22029                           ;encoder.c: 332: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
 22030  00B3B6  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 22031  00B3BA  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 22032  00B3BE  0100               	movlb	0	; () banked
 22033  00B3C0  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22034  00B3C2  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22035  00B3C4  0E00               	movlw	0
 22036  00B3C6  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 22037  00B3C8  0E00               	movlw	0
 22038  00B3CA  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 22039  00B3CC  0E01               	movlw	1
 22040  00B3CE  ECA7  F097         	call	_motor_schedule_command
 22041                           
 22042                           ;encoder.c: 333: os.approach_direction = MOTOR_DIRECTION_CW;
 22043  00B3D2  0E01               	movlw	1
 22044  00B3D4  0101               	movlb	1	; () banked
 22045  00B3D6  6F83               	movwf	(_os+18)& (0+255),b	;volatile
 22046                           
 22047                           ; BSR set to: 1
 22048                           ;encoder.c: 334: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22049  00B3D8  0E01               	movlw	1
 22050  00B3DA  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22051  00B3DC                     l2676:
 22052                           
 22053                           ; BSR set to: 1
 22054                           ;encoder.c: 335: };encoder.c: 336: if(os.encoder1Count+os.encoder2Count>0)
 22055                           
 22056                           ; BSR set to: 1
 22057  00B3DC  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22058  00B3E0  0100               	movlb	0	; () banked
 22059  00B3E2  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22060  00B3E4  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22061  00B3E6  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22062  00B3E8  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22063  00B3EC  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22064  00B3EE  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22065  00B3F0  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22066  00B3F2  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22067  00B3F4  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22068  00B3F6  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22069  00B3F8  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22070  00B3FA  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22071  00B3FC  D008               	goto	l2679
 22072  00B3FE  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22073  00B400  E103               	bnz	u17330
 22074  00B402  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22075  00B404  A0D8               	btfss	status,0,c
 22076  00B406  D003               	goto	l2679
 22077  00B408                     u17330:
 22078                           
 22079                           ; BSR set to: 0
 22080                           ;encoder.c: 337: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22081  00B408  0E21               	movlw	33
 22082  00B40A  0101               	movlb	1	; () banked
 22083  00B40C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22084  00B40E                     l2679:
 22085                           
 22086                           ;encoder.c: 338: if(os.encoder1Count+os.encoder2Count<0)
 22087                           
 22088                           ; BSR set to: 1
 22089  00B40E  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22090  00B412  0100               	movlb	0	; () banked
 22091  00B414  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22092  00B416  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22093  00B418  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22094  00B41A  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22095  00B41E  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22096  00B420  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22097  00B422  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22098  00B424  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22099  00B426  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22100  00B428  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22101  00B42A  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22102  00B42C  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22103  00B42E  D237               	goto	l2649
 22104                           
 22105                           ; BSR set to: 0
 22106                           ;encoder.c: 339: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22107  00B430  0E21               	movlw	33
 22108  00B432  D1FE               	goto	L22
 22109  00B434                     
 22110                           ; BSR set to: 1
 22111  00B434  0101               	movlb	1	; () banked
 22112  00B436  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22113                           
 22114                           ; Switch size 1, requested type "space"
 22115                           ; Number of cases is 2, Range of values is 33 to 34
 22116                           ; switch strategies available:
 22117                           ; Name         Instructions Cycles
 22118                           ; simple_byte            7     4 (average)
 22119                           ;	Chosen strategy is simple_byte
 22120  00B438  0A21               	xorlw	33	; case 33
 22121  00B43A  B4D8               	btfsc	status,2,c
 22122  00B43C  D755               	goto	l2668
 22123  00B43E  0A03               	xorlw	3	; case 34
 22124  00B440  B4D8               	btfsc	status,2,c
 22125  00B442  D7A5               	goto	l2675
 22126                           
 22127                           ; BSR set to: 1
 22128                           ;encoder.c: 342: break;
 22129  00B444  D22C               	goto	l2649
 22130  00B446                     
 22131                           ; BSR set to: 1
 22132                           ;encoder.c: 348: if(os.button1==1)
 22133                           
 22134                           ; BSR set to: 1
 22135  00B446  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22136  00B448  A4D8               	btfss	status,2,c
 22137  00B44A  D005               	goto	l2684
 22138                           
 22139                           ; BSR set to: 1
 22140                           ;encoder.c: 349: {;encoder.c: 351: motor_divide_jump_to_nearest();
 22141  00B44C  EC23  F07E         	call	_motor_divide_jump_to_nearest	;wreg free
 22142                           
 22143                           ;encoder.c: 352: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22144  00B450  0E41               	movlw	65
 22145  00B452  0101               	movlb	1	; () banked
 22146  00B454  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22147  00B456                     l2684:
 22148                           
 22149                           ; BSR set to: 1
 22150                           ;encoder.c: 353: };encoder.c: 354: if(os.encoder1Count>0)
 22151                           
 22152                           ; BSR set to: 1
 22153  00B456  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22154  00B458  0A80               	xorlw	128
 22155  00B45A  0F7F               	addlw	-129
 22156  00B45C  A0D8               	btfss	status,0,c
 22157  00B45E  D002               	goto	l2685
 22158                           
 22159                           ; BSR set to: 1
 22160                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22161  00B460  0E32               	movlw	50
 22162  00B462  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22163  00B464                     l2685:
 22164                           
 22165                           ; BSR set to: 1
 22166                           ;encoder.c: 356: if(os.encoder1Count<0)
 22167                           
 22168                           ; BSR set to: 1
 22169  00B464  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22170  00B466  D01B               	goto	l2687
 22171                           
 22172                           ; BSR set to: 1
 22173                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22174  00B468  0E32               	movlw	50
 22175  00B46A  D00F               	goto	L13
 22176  00B46C                     
 22177                           ; BSR set to: 1
 22178                           ;encoder.c: 360: if(os.button1==1)
 22179                           
 22180                           ; BSR set to: 1
 22181  00B46C  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22182  00B46E  A4D8               	btfss	status,2,c
 22183  00B470  D002               	goto	l2689
 22184                           
 22185                           ; BSR set to: 1
 22186                           ;encoder.c: 361: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22187  00B472  0E02               	movlw	2
 22188  00B474  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22189  00B476                     l2689:
 22190                           
 22191                           ; BSR set to: 1
 22192                           ;encoder.c: 362: if(os.encoder1Count>0)
 22193                           
 22194                           ; BSR set to: 1
 22195  00B476  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22196  00B478  0A80               	xorlw	128
 22197  00B47A  0F7F               	addlw	-129
 22198  00B47C  A0D8               	btfss	status,0,c
 22199  00B47E  D002               	goto	l2690
 22200                           
 22201                           ; BSR set to: 1
 22202                           ;encoder.c: 363: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22203  00B480  0E31               	movlw	49
 22204  00B482  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22205  00B484                     l2690:
 22206                           
 22207                           ; BSR set to: 1
 22208                           ;encoder.c: 364: if(os.encoder1Count<0)
 22209                           
 22210                           ; BSR set to: 1
 22211  00B484  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22212  00B486  D00B               	goto	l2687
 22213                           
 22214                           ; BSR set to: 1
 22215                           ;encoder.c: 365: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22216  00B488  0E31               	movlw	49
 22217  00B48A                     L13:
 22218  00B48A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;encoder.c: 367: }
 22222                           
 22223                           ; BSR set to: 1
 22224                           ;encoder.c: 366: break;
 22225  00B48C  D008               	goto	l2687
 22226  00B48E                     
 22227                           ; BSR set to: 1
 22228  00B48E  0101               	movlb	1	; () banked
 22229  00B490  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22230                           
 22231                           ; Switch size 1, requested type "space"
 22232                           ; Number of cases is 2, Range of values is 49 to 50
 22233                           ; switch strategies available:
 22234                           ; Name         Instructions Cycles
 22235                           ; simple_byte            7     4 (average)
 22236                           ;	Chosen strategy is simple_byte
 22237  00B492  0A31               	xorlw	49	; case 49
 22238  00B494  B4D8               	btfsc	status,2,c
 22239  00B496  D7D7               	goto	l2683
 22240  00B498  0A03               	xorlw	3	; case 50
 22241  00B49A  B4D8               	btfsc	status,2,c
 22242  00B49C  D7E7               	goto	l2688
 22243  00B49E                     l2687:
 22244                           
 22245                           ; BSR set to: 1
 22246                           ;encoder.c: 368: if(os.button2==1)
 22247                           
 22248                           ; BSR set to: 1
 22249  00B49E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22250  00B4A0  A4D8               	btfss	status,2,c
 22251  00B4A2  D005               	goto	l2692
 22252                           
 22253                           ; BSR set to: 1
 22254                           ;encoder.c: 369: {;encoder.c: 370: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22255  00B4A4  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22256  00B4A6  EC75  F0A9         	call	__encoder_next_divide_step_size
 22257  00B4AA  0101               	movlb	1	; () banked
 22258  00B4AC  6F86               	movwf	(_os+21)& (0+255),b	;volatile
 22259  00B4AE                     l2692:
 22260                           
 22261                           ; BSR set to: 1
 22262                           ;encoder.c: 371: };encoder.c: 372: if(os.encoder2Count>0)
 22263                           
 22264                           ; BSR set to: 1
 22265  00B4AE  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22266  00B4B0  0A80               	xorlw	128
 22267  00B4B2  0F7F               	addlw	-129
 22268  00B4B4  A0D8               	btfss	status,0,c
 22269  00B4B6  D004               	goto	l2693
 22270                           
 22271                           ; BSR set to: 1
 22272                           ;encoder.c: 373: {;encoder.c: 374: os.division += os.divide_step_size;
 22273  00B4B8  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22274  00B4BA  2784               	addwf	(_os+19)& (0+255),f,b	;volatile
 22275  00B4BC  0E00               	movlw	0
 22276  00B4BE  2385               	addwfc	(_os+20)& (0+255),f,b	;volatile
 22277  00B4C0                     l2693:
 22278                           
 22279                           ; BSR set to: 1
 22280                           ;encoder.c: 375: };encoder.c: 376: if(os.encoder2Count<0)
 22281  00B4C0  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22282  00B4C2  D1ED               	goto	l2649
 22283                           
 22284                           ; BSR set to: 1
 22285                           ;encoder.c: 377: {;encoder.c: 378: if(os.division>os.divide_step_size)
 22286  00B4C4  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22287  00B4C6  0100               	movlb	0	; () banked
 22288  00B4C8  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 22289  00B4CA  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22290  00B4CC  0101               	movlb	1	; () banked
 22291  00B4CE  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 22292  00B4D0  0100               	movlb	0	; () banked
 22293  00B4D2  5DCD               	subwf	??_encoder_statemachine& (0+255),w,b
 22294  00B4D4  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22295  00B4D6  0A80               	xorlw	128
 22296  00B4D8  6FCF               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22297  00B4DA  0101               	movlb	1	; () banked
 22298  00B4DC  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 22299  00B4DE  0A80               	xorlw	128
 22300  00B4E0  0100               	movlb	0	; () banked
 22301  00B4E2  59CF               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22302  00B4E4  B0D8               	btfsc	status,0,c
 22303  00B4E6  D006               	goto	l2695
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;encoder.c: 379: {;encoder.c: 380: os.division -= os.divide_step_size;
 22307  00B4E8  0101               	movlb	1	; () banked
 22308  00B4EA  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22309  00B4EC  5F84               	subwf	(_os+19)& (0+255),f,b	;volatile
 22310  00B4EE  0E00               	movlw	0
 22311  00B4F0  5B85               	subwfb	(_os+20)& (0+255),f,b	;volatile
 22312                           
 22313                           ;encoder.c: 381: }
 22314  00B4F2  D1D5               	goto	l2649
 22315  00B4F4                     l2695:
 22316                           
 22317                           ;encoder.c: 382: else;encoder.c: 383: {;encoder.c: 384: os.division = 1;
 22318                           
 22319                           ; BSR set to: 1
 22320  00B4F4  0E00               	movlw	0
 22321  00B4F6  0101               	movlb	1	; () banked
 22322  00B4F8  6F85               	movwf	(_os+20)& (0+255),b	;volatile
 22323  00B4FA  0E01               	movlw	1
 22324  00B4FC  6F84               	movwf	(_os+19)& (0+255),b	;volatile
 22325                           
 22326                           ; BSR set to: 1
 22327                           ;encoder.c: 385: };encoder.c: 386: };encoder.c: 387: break;
 22328                           
 22329                           ; BSR set to: 1
 22330  00B4FE  D1CF               	goto	l2649
 22331  00B500                     
 22332                           ;encoder.c: 390: if(os.button1==1)
 22333                           
 22334                           ; BSR set to: 1
 22335  00B500  0101               	movlb	1	; () banked
 22336  00B502  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22337  00B504  A4D8               	btfss	status,2,c
 22338  00B506  D002               	goto	l2698
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;encoder.c: 391: {;encoder.c: 392: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22342  00B508  0E02               	movlw	2
 22343  00B50A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22344  00B50C                     l2698:
 22345                           
 22346                           ; BSR set to: 1
 22347                           ;encoder.c: 393: };encoder.c: 394: if(os.button2==1)
 22348                           
 22349                           ; BSR set to: 1
 22350  00B50C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22351  00B50E  B4D8               	btfsc	status,2,c
 22352                           
 22353                           ; BSR set to: 1
 22354                           ;encoder.c: 395: {;encoder.c: 396: motor_divide_jump();
 22355  00B510  ECFD  F097         	call	_motor_divide_jump	;wreg free
 22356                           
 22357                           ;encoder.c: 397: };encoder.c: 398: if(os.encoder2Count>0)
 22358  00B514  0101               	movlb	1	; () banked
 22359  00B516  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22360  00B518  0A80               	xorlw	128
 22361  00B51A  0F7F               	addlw	-129
 22362  00B51C  B0D8               	btfsc	status,0,c
 22363                           
 22364                           ; BSR set to: 1
 22365                           ;encoder.c: 399: {;encoder.c: 400: _divide_jump_size_increment();
 22366  00B51E  EC6F  F0A7         	call	__divide_jump_size_increment	;wreg free
 22367                           
 22368                           ;encoder.c: 401: };encoder.c: 402: if(os.encoder2Count<0)
 22369  00B522  0101               	movlb	1	; () banked
 22370  00B524  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22371  00B526  D1BB               	goto	l2649
 22372                           
 22373                           ; BSR set to: 1
 22374                           ;encoder.c: 403: {;encoder.c: 404: _divide_jump_size_decrement();
 22375  00B528  EC54  F09F         	call	__divide_jump_size_decrement	;wreg free
 22376                           
 22377                           ;encoder.c: 405: };encoder.c: 406: break;
 22378  00B52C  D1B8               	goto	l2649
 22379  00B52E                     
 22380                           ;encoder.c: 412: if(os.button1==1)
 22381  00B52E  0101               	movlb	1	; () banked
 22382  00B530  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22383  00B532  A4D8               	btfss	status,2,c
 22384  00B534  D002               	goto	l2705
 22385                           
 22386                           ; BSR set to: 1
 22387                           ;encoder.c: 413: {;encoder.c: 414: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22388  00B536  0E62               	movlw	98
 22389  00B538  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22390  00B53A                     l2705:
 22391                           
 22392                           ; BSR set to: 1
 22393                           ;encoder.c: 415: };encoder.c: 416: if(os.encoder1Count>0)
 22394                           
 22395                           ; BSR set to: 1
 22396  00B53A  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22397  00B53C  0A80               	xorlw	128
 22398  00B53E  0F7F               	addlw	-129
 22399  00B540  A0D8               	btfss	status,0,c
 22400  00B542  D002               	goto	l2706
 22401                           
 22402                           ; BSR set to: 1
 22403                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22404  00B544  0E52               	movlw	82
 22405  00B546  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22406  00B548                     l2706:
 22407                           
 22408                           ; BSR set to: 1
 22409                           ;encoder.c: 418: if(os.encoder1Count<0)
 22410                           
 22411                           ; BSR set to: 1
 22412  00B548  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22413  00B54A  D01B               	goto	l2708
 22414                           
 22415                           ; BSR set to: 1
 22416                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22417  00B54C  0E52               	movlw	82
 22418  00B54E  D00F               	goto	L14
 22419  00B550                     
 22420                           ; BSR set to: 1
 22421                           ;encoder.c: 422: if(os.button1==1)
 22422                           
 22423                           ; BSR set to: 1
 22424  00B550  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22425  00B552  A4D8               	btfss	status,2,c
 22426  00B554  D002               	goto	l2710
 22427                           
 22428                           ; BSR set to: 1
 22429                           ;encoder.c: 423: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22430  00B556  0E03               	movlw	3
 22431  00B558  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22432  00B55A                     l2710:
 22433                           
 22434                           ; BSR set to: 1
 22435                           ;encoder.c: 424: if(os.encoder1Count>0)
 22436                           
 22437                           ; BSR set to: 1
 22438  00B55A  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22439  00B55C  0A80               	xorlw	128
 22440  00B55E  0F7F               	addlw	-129
 22441  00B560  A0D8               	btfss	status,0,c
 22442  00B562  D002               	goto	l2711
 22443                           
 22444                           ; BSR set to: 1
 22445                           ;encoder.c: 425: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22446  00B564  0E51               	movlw	81
 22447  00B566  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22448  00B568                     l2711:
 22449                           
 22450                           ; BSR set to: 1
 22451                           ;encoder.c: 426: if(os.encoder1Count<0)
 22452                           
 22453                           ; BSR set to: 1
 22454  00B568  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22455  00B56A  D00B               	goto	l2708
 22456                           
 22457                           ; BSR set to: 1
 22458                           ;encoder.c: 427: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22459  00B56C  0E51               	movlw	81
 22460  00B56E                     L14:
 22461  00B56E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22462                           
 22463                           ; BSR set to: 1
 22464                           ;encoder.c: 429: }
 22465                           
 22466                           ; BSR set to: 1
 22467                           ;encoder.c: 428: break;
 22468  00B570  D008               	goto	l2708
 22469  00B572                     
 22470                           ; BSR set to: 1
 22471  00B572  0101               	movlb	1	; () banked
 22472  00B574  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22473                           
 22474                           ; Switch size 1, requested type "space"
 22475                           ; Number of cases is 2, Range of values is 81 to 82
 22476                           ; switch strategies available:
 22477                           ; Name         Instructions Cycles
 22478                           ; simple_byte            7     4 (average)
 22479                           ;	Chosen strategy is simple_byte
 22480  00B576  0A51               	xorlw	81	; case 81
 22481  00B578  B4D8               	btfsc	status,2,c
 22482  00B57A  D7D9               	goto	l2704
 22483  00B57C  0A03               	xorlw	3	; case 82
 22484  00B57E  B4D8               	btfsc	status,2,c
 22485  00B580  D7E7               	goto	l2709
 22486  00B582                     l2708:
 22487                           
 22488                           ; BSR set to: 1
 22489                           ;encoder.c: 430: if(os.button2==1)
 22490                           
 22491                           ; BSR set to: 1
 22492  00B582  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22493  00B584  A4D8               	btfss	status,2,c
 22494  00B586  D00A               	goto	l2713
 22495                           
 22496                           ; BSR set to: 1
 22497                           ;encoder.c: 431: {;encoder.c: 432: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22498  00B588  C18B  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 22499  00B58C  C18C  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22500  00B590  ECE5  F09E         	call	__encoder_next_arc_step_size	;wreg free
 22501  00B594  C060  F18B         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 22502  00B598  C061  F18C         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 22503  00B59C                     l2713:
 22504                           
 22505                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count>0)
 22506  00B59C  0101               	movlb	1	; () banked
 22507  00B59E  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22508  00B5A0  0A80               	xorlw	128
 22509  00B5A2  0F7F               	addlw	-129
 22510  00B5A4  A0D8               	btfss	status,0,c
 22511  00B5A6  D01C               	goto	l2715
 22512                           
 22513                           ; BSR set to: 1
 22514                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size += os.arc_step_size;
 22515  00B5A8  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22516  00B5AA  278D               	addwf	(_os+28)& (0+255),f,b	;volatile
 22517  00B5AC  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22518  00B5AE  238E               	addwfc	(_os+29)& (0+255),f,b	;volatile
 22519  00B5B0  0E00               	movlw	0
 22520  00B5B2  238F               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22521  00B5B4  0E00               	movlw	0
 22522  00B5B6  2390               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22523                           
 22524                           ; BSR set to: 1
 22525                           ;encoder.c: 437: if(os.arc_size>100000)
 22526  00B5B8  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22527  00B5BA  D012               	goto	l2715
 22528  00B5BC  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22529  00B5BE  E108               	bnz	u17570
 22530  00B5C0  0EA1               	movlw	161
 22531  00B5C2  5D8D               	subwf	(_os+28)& (0+255),w,b	;volatile
 22532  00B5C4  0E86               	movlw	134
 22533  00B5C6  598E               	subwfb	(_os+29)& (0+255),w,b	;volatile
 22534  00B5C8  0E01               	movlw	1
 22535  00B5CA  598F               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22536  00B5CC  A0D8               	btfss	status,0,c
 22537  00B5CE  D008               	goto	l2715
 22538  00B5D0                     u17570:
 22539                           
 22540                           ; BSR set to: 1
 22541                           ;encoder.c: 438: os.arc_size = 100000;
 22542  00B5D0  0EA0               	movlw	160
 22543  00B5D2  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22544  00B5D4  0E86               	movlw	134
 22545  00B5D6  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22546  00B5D8  0E01               	movlw	1
 22547  00B5DA  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22548  00B5DC  0E00               	movlw	0
 22549  00B5DE  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22550  00B5E0                     l2715:
 22551                           
 22552                           ; BSR set to: 1
 22553                           ;encoder.c: 439: };encoder.c: 440: if(os.encoder2Count<0)
 22554                           
 22555                           ; BSR set to: 1
 22556                           
 22557                           ; BSR set to: 1
 22558  00B5E0  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22559  00B5E2  D15D               	goto	l2649
 22560                           
 22561                           ; BSR set to: 1
 22562                           ;encoder.c: 441: {;encoder.c: 442: os.arc_size -= os.arc_step_size;
 22563  00B5E4  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22564  00B5E6  0100               	movlb	0	; () banked
 22565  00B5E8  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 22566  00B5EA  0101               	movlb	1	; () banked
 22567  00B5EC  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22568  00B5EE  0100               	movlb	0	; () banked
 22569  00B5F0  6FCE               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22570  00B5F2  6BCF               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22571  00B5F4  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22572  00B5F6  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22573  00B5F8  0101               	movlb	1	; () banked
 22574  00B5FA  5F8D               	subwf	(_os+28)& (0+255),f,b	;volatile
 22575  00B5FC  0100               	movlb	0	; () banked
 22576  00B5FE  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22577  00B600  0101               	movlb	1	; () banked
 22578  00B602  5B8E               	subwfb	(_os+29)& (0+255),f,b	;volatile
 22579  00B604  0100               	movlb	0	; () banked
 22580  00B606  51CF               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22581  00B608  0101               	movlb	1	; () banked
 22582  00B60A  5B8F               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22583  00B60C  0100               	movlb	0	; () banked
 22584  00B60E  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22585  00B610  0101               	movlb	1	; () banked
 22586  00B612  5B90               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22587                           
 22588                           ;encoder.c: 443: if(os.arc_size<1)
 22589  00B614  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22590  00B616  D007               	goto	u17590
 22591  00B618  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22592  00B61A  118F               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22593  00B61C  118E               	iorwf	(_os+29)& (0+255),w,b	;volatile
 22594  00B61E  E102               	bnz	u17591
 22595  00B620  058D               	decf	(_os+28)& (0+255),w,b	;volatile
 22596  00B622  B0D8               	btfsc	status,0,c
 22597  00B624                     u17591:
 22598  00B624  D13C               	goto	l2649
 22599  00B626                     u17590:
 22600                           
 22601                           ; BSR set to: 1
 22602                           ;encoder.c: 444: os.arc_size = 1;
 22603  00B626  0E01               	movlw	1
 22604  00B628  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22605  00B62A  0E00               	movlw	0
 22606  00B62C  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22607  00B62E  0E00               	movlw	0
 22608  00B630  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22609  00B632  0E00               	movlw	0
 22610  00B634  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22611                           
 22612                           ; BSR set to: 1
 22613                           ;encoder.c: 445: };encoder.c: 446: break;
 22614                           
 22615                           ; BSR set to: 1
 22616  00B636  D133               	goto	l2649
 22617  00B638                     
 22618                           ;encoder.c: 449: if(os.encoder1Count>0)
 22619                           
 22620                           ; BSR set to: 1
 22621  00B638  0101               	movlb	1	; () banked
 22622  00B63A  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22623  00B63C  0A80               	xorlw	128
 22624  00B63E  0F7F               	addlw	-129
 22625  00B640  A0D8               	btfss	status,0,c
 22626  00B642  D011               	goto	l2721
 22627                           
 22628                           ; BSR set to: 1
 22629                           ;encoder.c: 450: {;encoder.c: 451: if(os.arc_speed<config.maximum_speed_arc)
 22630  00B644  51B0               	movf	(_config+15)& (0+255),w,b
 22631  00B646  5D91               	subwf	(_os+32)& (0+255),w,b	;volatile
 22632  00B648  51B1               	movf	(_config+16)& (0+255),w,b
 22633  00B64A  5992               	subwfb	(_os+33)& (0+255),w,b	;volatile
 22634  00B64C  B0D8               	btfsc	status,0,c
 22635  00B64E  D002               	goto	l2720
 22636                           
 22637                           ; BSR set to: 1
 22638                           ;encoder.c: 452: ++os.arc_speed;
 22639  00B650  4B91               	infsnz	(_os+32)& (0+255),f,b	;volatile
 22640  00B652  2B92               	incf	(_os+33)& (0+255),f,b	;volatile
 22641  00B654                     l2720:
 22642                           
 22643                           ; BSR set to: 1
 22644                           ;encoder.c: 453: if(os.busy)
 22645                           
 22646                           ; BSR set to: 1
 22647  00B654  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22648  00B656  B4D8               	btfsc	status,2,c
 22649  00B658  D006               	goto	l2721
 22650                           
 22651                           ; BSR set to: 1
 22652                           ;encoder.c: 454: motor_change_speed(os.arc_speed);
 22653  00B65A  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22654  00B65E  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22655  00B662  ECEE  F0AB         	call	_motor_change_speed	;wreg free
 22656  00B666                     l2721:
 22657                           
 22658                           ;encoder.c: 455: };encoder.c: 456: if(os.encoder1Count<0)
 22659  00B666  0101               	movlb	1	; () banked
 22660  00B668  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22661  00B66A  D046               	goto	l2725
 22662                           
 22663                           ; BSR set to: 1
 22664                           ;encoder.c: 457: {;encoder.c: 458: if(os.arc_speed>config.minimum_speed)
 22665  00B66C  5191               	movf	(_os+32)& (0+255),w,b	;volatile
 22666  00B66E  5DAA               	subwf	(_config+9)& (0+255),w,b
 22667  00B670  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 22668  00B672  59AB               	subwfb	(_config+10)& (0+255),w,b
 22669  00B674  B0D8               	btfsc	status,0,c
 22670  00B676  D003               	goto	l2723
 22671                           
 22672                           ; BSR set to: 1
 22673                           ;encoder.c: 459: --os.arc_speed;
 22674  00B678  0791               	decf	(_os+32)& (0+255),f,b	;volatile
 22675  00B67A  A0D8               	btfss	status,0,c
 22676  00B67C  0792               	decf	(_os+33)& (0+255),f,b	;volatile
 22677  00B67E                     l2723:
 22678                           
 22679                           ; BSR set to: 1
 22680                           ;encoder.c: 460: if(os.busy)
 22681                           
 22682                           ; BSR set to: 1
 22683  00B67E  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22684  00B680  B4D8               	btfsc	status,2,c
 22685  00B682  D03A               	goto	l2725
 22686                           
 22687                           ; BSR set to: 1
 22688                           ;encoder.c: 461: motor_change_speed(os.arc_speed);
 22689  00B684  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22690  00B688  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22691  00B68C  ECEE  F0AB         	call	_motor_change_speed	;wreg free
 22692                           
 22693                           ;encoder.c: 462: };encoder.c: 463: switch(os.displayState)
 22694  00B690  D033               	goto	l2725
 22695  00B692                     
 22696                           ;encoder.c: 466: if(os.button2==1)
 22697  00B692  0101               	movlb	1	; () banked
 22698  00B694  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22699  00B696  A4D8               	btfss	status,2,c
 22700  00B698  D006               	goto	l2727
 22701                           
 22702                           ; BSR set to: 1
 22703                           ;encoder.c: 467: {;encoder.c: 468: motor_arc_move(MOTOR_DIRECTION_CCW);
 22704  00B69A  0EFF               	movlw	255
 22705  00B69C  EC2A  F08C         	call	_motor_arc_move
 22706                           
 22707                           ;encoder.c: 469: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22708  00B6A0  0E62               	movlw	98
 22709  00B6A2  0101               	movlb	1	; () banked
 22710  00B6A4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22711  00B6A6                     l2727:
 22712                           
 22713                           ; BSR set to: 1
 22714                           ;encoder.c: 470: };encoder.c: 471: if(os.encoder2Count>0)
 22715                           
 22716                           ; BSR set to: 1
 22717  00B6A6  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22718  00B6A8  0A80               	xorlw	128
 22719  00B6AA  0F7F               	addlw	-129
 22720  00B6AC  A0D8               	btfss	status,0,c
 22721  00B6AE  D0F7               	goto	l2649
 22722                           
 22723                           ; BSR set to: 1
 22724                           ;encoder.c: 472: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22725  00B6B0  0E62               	movlw	98
 22726  00B6B2  D0BF               	goto	L21
 22727  00B6B4                     
 22728                           ; BSR set to: 1
 22729                           ;encoder.c: 475: if(os.button2==1)
 22730                           
 22731                           ; BSR set to: 1
 22732  00B6B4  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22733  00B6B6  A4D8               	btfss	status,2,c
 22734  00B6B8  D007               	goto	l2731
 22735                           
 22736                           ; BSR set to: 1
 22737                           ;encoder.c: 476: {;encoder.c: 477: if(os.busy)
 22738  00B6BA  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22739  00B6BC  A4D8               	btfss	status,2,c
 22740                           
 22741                           ; BSR set to: 1
 22742                           ;encoder.c: 478: motor_stop();
 22743  00B6BE  ECA4  F0A6         	call	_motor_stop	;wreg free
 22744                           
 22745                           ;encoder.c: 479: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22746  00B6C2  0E03               	movlw	3
 22747  00B6C4  0101               	movlb	1	; () banked
 22748  00B6C6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22749  00B6C8                     l2731:
 22750                           
 22751                           ; BSR set to: 1
 22752                           ;encoder.c: 480: };encoder.c: 481: if(os.encoder2Count>0)
 22753                           
 22754                           ; BSR set to: 1
 22755  00B6C8  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22756  00B6CA  0A80               	xorlw	128
 22757  00B6CC  0F7F               	addlw	-129
 22758  00B6CE  A0D8               	btfss	status,0,c
 22759  00B6D0  D002               	goto	l2733
 22760                           
 22761                           ; BSR set to: 1
 22762                           ;encoder.c: 482: os.displayState = DISPLAY_STATE_ARC2_CW;
 22763  00B6D2  0E63               	movlw	99
 22764  00B6D4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22765  00B6D6                     l2733:
 22766                           
 22767                           ; BSR set to: 1
 22768                           ;encoder.c: 483: if(os.encoder2Count<0)
 22769                           
 22770                           ; BSR set to: 1
 22771  00B6D6  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22772  00B6D8  D0E2               	goto	l2649
 22773                           
 22774                           ; BSR set to: 1
 22775                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CCW;
 22776  00B6DA  0E61               	movlw	97
 22777  00B6DC  D0AA               	goto	L21
 22778  00B6DE                     
 22779                           ; BSR set to: 1
 22780                           ;encoder.c: 487: if(os.button2==1)
 22781                           
 22782                           ; BSR set to: 1
 22783  00B6DE  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22784  00B6E0  A4D8               	btfss	status,2,c
 22785  00B6E2  D006               	goto	l2736
 22786                           
 22787                           ; BSR set to: 1
 22788                           ;encoder.c: 488: {;encoder.c: 489: motor_arc_move(MOTOR_DIRECTION_CW);
 22789  00B6E4  0E01               	movlw	1
 22790  00B6E6  EC2A  F08C         	call	_motor_arc_move
 22791                           
 22792                           ;encoder.c: 490: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22793  00B6EA  0E62               	movlw	98
 22794  00B6EC  0101               	movlb	1	; () banked
 22795  00B6EE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22796  00B6F0                     l2736:
 22797                           
 22798                           ; BSR set to: 1
 22799                           ;encoder.c: 491: };encoder.c: 492: if(os.encoder2Count<0)
 22800                           
 22801                           ; BSR set to: 1
 22802  00B6F0  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22803  00B6F2  D0D5               	goto	l2649
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;encoder.c: 493: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22807  00B6F4  0E62               	movlw	98
 22808  00B6F6  D09D               	goto	L21
 22809  00B6F8                     l2725:
 22810                           
 22811                           ; BSR set to: 1
 22812  00B6F8  0101               	movlb	1	; () banked
 22813  00B6FA  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22814                           
 22815                           ; Switch size 1, requested type "space"
 22816                           ; Number of cases is 3, Range of values is 97 to 99
 22817                           ; switch strategies available:
 22818                           ; Name         Instructions Cycles
 22819                           ; simple_byte           10     6 (average)
 22820                           ;	Chosen strategy is simple_byte
 22821  00B6FC  0A61               	xorlw	97	; case 97
 22822  00B6FE  B4D8               	btfsc	status,2,c
 22823  00B700  D7C8               	goto	l2726
 22824  00B702  0A03               	xorlw	3	; case 98
 22825  00B704  B4D8               	btfsc	status,2,c
 22826  00B706  D7D6               	goto	l2730
 22827  00B708  0A01               	xorlw	1	; case 99
 22828  00B70A  B4D8               	btfsc	status,2,c
 22829  00B70C  D7E8               	goto	l2735
 22830                           
 22831                           ; BSR set to: 1
 22832                           ;encoder.c: 496: break;
 22833  00B70E  D0C7               	goto	l2649
 22834  00B710                     
 22835                           ;encoder.c: 499: if(os.button2==1)
 22836                           
 22837                           ; BSR set to: 1
 22838  00B710  0101               	movlb	1	; () banked
 22839  00B712  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22840  00B714  A4D8               	btfss	status,2,c
 22841  00B716  D012               	goto	l2739
 22842                           
 22843                           ; BSR set to: 1
 22844                           ;encoder.c: 500: {;encoder.c: 502: motor_go_to_steps_position(0);
 22845  00B718  0E00               	movlw	0
 22846  00B71A  0100               	movlb	0	; () banked
 22847  00B71C  6FA7               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 22848  00B71E  0E00               	movlw	0
 22849  00B720  6FA8               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 22850  00B722  0E00               	movlw	0
 22851  00B724  6FA9               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 22852  00B726  0E00               	movlw	0
 22853  00B728  6FAA               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 22854  00B72A  ECC0  F069         	call	_motor_go_to_steps_position	;wreg free
 22855                           
 22856                           ;encoder.c: 504: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22857  00B72E  0E05               	movlw	5
 22858  00B730  0101               	movlb	1	; () banked
 22859  00B732  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22860                           
 22861                           ; BSR set to: 1
 22862                           ;encoder.c: 505: os.divide_position = 0;
 22863  00B734  0E00               	movlw	0
 22864  00B736  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 22865  00B738  0E00               	movlw	0
 22866  00B73A  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 22867  00B73C                     l2739:
 22868                           
 22869                           ; BSR set to: 1
 22870                           ;encoder.c: 506: };encoder.c: 507: if(os.button1==1)
 22871                           
 22872                           ; BSR set to: 1
 22873  00B73C  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22874  00B73E  A4D8               	btfss	status,2,c
 22875  00B740  D0AE               	goto	l2649
 22876                           
 22877                           ; BSR set to: 1
 22878                           ;encoder.c: 508: {;encoder.c: 509: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22879  00B742  0E05               	movlw	5
 22880  00B744  D076               	goto	L21
 22881  00B746                     
 22882                           ;encoder.c: 514: if(os.encoder1Count>0)
 22883                           
 22884                           ; BSR set to: 1
 22885  00B746  0101               	movlb	1	; () banked
 22886  00B748  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22887  00B74A  0A80               	xorlw	128
 22888  00B74C  0F7F               	addlw	-129
 22889  00B74E  A0D8               	btfss	status,0,c
 22890  00B750  D00E               	goto	l2743
 22891                           
 22892                           ; BSR set to: 1
 22893                           ;encoder.c: 515: {;encoder.c: 516: if(os.manual_speed<config.maximum_speed_manual)
 22894  00B752  51B4               	movf	(_config+19)& (0+255),w,b
 22895  00B754  5D94               	subwf	(_os+35)& (0+255),w,b	;volatile
 22896  00B756  51B5               	movf	(_config+20)& (0+255),w,b
 22897  00B758  5995               	subwfb	(_os+36)& (0+255),w,b	;volatile
 22898  00B75A  B0D8               	btfsc	status,0,c
 22899  00B75C  D008               	goto	l2743
 22900                           
 22901                           ; BSR set to: 1
 22902                           ;encoder.c: 517: {;encoder.c: 518: ++os.manual_speed;
 22903  00B75E  4B94               	infsnz	(_os+35)& (0+255),f,b	;volatile
 22904  00B760  2B95               	incf	(_os+36)& (0+255),f,b	;volatile
 22905                           
 22906                           ; BSR set to: 1
 22907                           ;encoder.c: 519: motor_change_speed(os.manual_speed);
 22908  00B762  C194  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 22909  00B766  C195  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 22910  00B76A  ECEE  F0AB         	call	_motor_change_speed	;wreg free
 22911  00B76E                     l2743:
 22912                           
 22913                           ;encoder.c: 520: };encoder.c: 522: };encoder.c: 523: if(os.encoder1Count<0)
 22914  00B76E  0101               	movlb	1	; () banked
 22915  00B770  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22916  00B772  D061               	goto	l2746
 22917                           
 22918                           ; BSR set to: 1
 22919                           ;encoder.c: 524: {;encoder.c: 525: if(os.manual_speed>config.minimum_speed)
 22920  00B774  5194               	movf	(_os+35)& (0+255),w,b	;volatile
 22921  00B776  5DAA               	subwf	(_config+9)& (0+255),w,b
 22922  00B778  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 22923  00B77A  59AB               	subwfb	(_config+10)& (0+255),w,b
 22924  00B77C  B0D8               	btfsc	status,0,c
 22925  00B77E  D05B               	goto	l2746
 22926                           
 22927                           ; BSR set to: 1
 22928                           ;encoder.c: 526: {;encoder.c: 527: --os.manual_speed;
 22929  00B780  0794               	decf	(_os+35)& (0+255),f,b	;volatile
 22930  00B782  A0D8               	btfss	status,0,c
 22931  00B784  0795               	decf	(_os+36)& (0+255),f,b	;volatile
 22932                           
 22933                           ; BSR set to: 1
 22934                           ;encoder.c: 528: motor_change_speed(os.manual_speed);
 22935  00B786  C194  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 22936  00B78A  C195  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 22937  00B78E  ECEE  F0AB         	call	_motor_change_speed	;wreg free
 22938                           
 22939                           ;encoder.c: 529: };encoder.c: 530: };encoder.c: 531: switch(os.displayState)
 22940  00B792  D051               	goto	l2746
 22941  00B794                     
 22942                           ;encoder.c: 534: if(os.button2==1)
 22943  00B794  0101               	movlb	1	; () banked
 22944  00B796  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22945  00B798  A4D8               	btfss	status,2,c
 22946  00B79A  D013               	goto	l2748
 22947                           
 22948                           ; BSR set to: 1
 22949                           ;encoder.c: 535: {;encoder.c: 536: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 22950  00B79C  0E00               	movlw	0
 22951  00B79E  0100               	movlb	0	; () banked
 22952  00B7A0  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22953  00B7A2  0E00               	movlw	0
 22954  00B7A4  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22955  00B7A6  0E00               	movlw	0
 22956  00B7A8  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22957  00B7AA  0E00               	movlw	0
 22958  00B7AC  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22959  00B7AE  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 22960  00B7B2  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22961  00B7B6  0EFF               	movlw	255
 22962  00B7B8  ECA7  F097         	call	_motor_schedule_command
 22963                           
 22964                           ;encoder.c: 537: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22965  00B7BC  0E84               	movlw	132
 22966  00B7BE  0101               	movlb	1	; () banked
 22967  00B7C0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22968  00B7C2                     l2748:
 22969                           
 22970                           ; BSR set to: 1
 22971                           ;encoder.c: 538: };encoder.c: 539: if(os.encoder2Count>0)
 22972                           
 22973                           ; BSR set to: 1
 22974  00B7C2  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22975  00B7C4  0A80               	xorlw	128
 22976  00B7C6  0F7F               	addlw	-129
 22977  00B7C8  A0D8               	btfss	status,0,c
 22978  00B7CA  D069               	goto	l2649
 22979                           
 22980                           ; BSR set to: 1
 22981                           ;encoder.c: 540: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22982  00B7CC  0E82               	movlw	130
 22983  00B7CE  D031               	goto	L21
 22984  00B7D0                     
 22985                           ; BSR set to: 1
 22986                           ;encoder.c: 543: if(os.button2==1)
 22987                           
 22988                           ; BSR set to: 1
 22989  00B7D0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22990  00B7D2  A4D8               	btfss	status,2,c
 22991  00B7D4  D002               	goto	l2752
 22992                           
 22993                           ; BSR set to: 1
 22994                           ;encoder.c: 544: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22995  00B7D6  0E04               	movlw	4
 22996  00B7D8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22997  00B7DA                     l2752:
 22998                           
 22999                           ; BSR set to: 1
 23000                           ;encoder.c: 545: if(os.encoder2Count>0)
 23001                           
 23002                           ; BSR set to: 1
 23003  00B7DA  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 23004  00B7DC  0A80               	xorlw	128
 23005  00B7DE  0F7F               	addlw	-129
 23006  00B7E0  A0D8               	btfss	status,0,c
 23007  00B7E2  D002               	goto	l2753
 23008                           
 23009                           ; BSR set to: 1
 23010                           ;encoder.c: 546: os.displayState = DISPLAY_STATE_MANUAL_CW;
 23011  00B7E4  0E83               	movlw	131
 23012  00B7E6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23013  00B7E8                     l2753:
 23014                           
 23015                           ; BSR set to: 1
 23016                           ;encoder.c: 547: if(os.encoder2Count<0)
 23017                           
 23018                           ; BSR set to: 1
 23019  00B7E8  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 23020  00B7EA  D059               	goto	l2649
 23021                           
 23022                           ; BSR set to: 1
 23023                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 23024  00B7EC  0E81               	movlw	129
 23025  00B7EE  D021               	goto	L21
 23026  00B7F0                     
 23027                           ; BSR set to: 1
 23028                           ;encoder.c: 551: if(os.button2==1)
 23029                           
 23030                           ; BSR set to: 1
 23031  00B7F0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 23032  00B7F2  A4D8               	btfss	status,2,c
 23033  00B7F4  D012               	goto	l2756
 23034                           
 23035                           ; BSR set to: 1
 23036                           ;encoder.c: 552: {;encoder.c: 553: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23037  00B7F6  0E84               	movlw	132
 23038  00B7F8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23039                           
 23040                           ; BSR set to: 1
 23041                           ;encoder.c: 554: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 23042  00B7FA  0E00               	movlw	0
 23043  00B7FC  0100               	movlb	0	; () banked
 23044  00B7FE  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 23045  00B800  0E00               	movlw	0
 23046  00B802  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 23047  00B804  0E00               	movlw	0
 23048  00B806  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 23049  00B808  0E00               	movlw	0
 23050  00B80A  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 23051  00B80C  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 23052  00B810  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 23053  00B814  0E01               	movlw	1
 23054  00B816  ECA7  F097         	call	_motor_schedule_command
 23055  00B81A                     l2756:
 23056                           
 23057                           ;encoder.c: 556: };encoder.c: 557: if(os.encoder2Count<0)
 23058  00B81A  0101               	movlb	1	; () banked
 23059  00B81C  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 23060  00B81E  D03F               	goto	l2649
 23061                           
 23062                           ; BSR set to: 1
 23063                           ;encoder.c: 558: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23064  00B820  0E82               	movlw	130
 23065  00B822  D007               	goto	L21
 23066  00B824                     
 23067                           ; BSR set to: 1
 23068                           ;encoder.c: 561: if(os.button2==1)
 23069                           
 23070                           ; BSR set to: 1
 23071  00B824  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 23072  00B826  A4D8               	btfss	status,2,c
 23073  00B828  D03A               	goto	l2649
 23074                           
 23075                           ; BSR set to: 1
 23076                           ;encoder.c: 562: {;encoder.c: 563: motor_stop();
 23077  00B82A  ECA4  F0A6         	call	_motor_stop	;wreg free
 23078                           
 23079                           ;encoder.c: 564: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23080  00B82E  0E82               	movlw	130
 23081  00B830                     L22:
 23082  00B830  0101               	movlb	1	; () banked
 23083  00B832                     L21:
 23084  00B832  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23085                           
 23086                           ; BSR set to: 1
 23087                           ;encoder.c: 567: }
 23088                           
 23089                           ; BSR set to: 1
 23090                           ;encoder.c: 565: };encoder.c: 566: break;
 23091  00B834  D034               	goto	l2649
 23092  00B836                     l2746:
 23093                           
 23094                           ; BSR set to: 1
 23095  00B836  0101               	movlb	1	; () banked
 23096  00B838  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23097                           
 23098                           ; Switch size 1, requested type "space"
 23099                           ; Number of cases is 4, Range of values is 129 to 132
 23100                           ; switch strategies available:
 23101                           ; Name         Instructions Cycles
 23102                           ; simple_byte           13     7 (average)
 23103                           ;	Chosen strategy is simple_byte
 23104  00B83A  0A81               	xorlw	129	; case 129
 23105  00B83C  B4D8               	btfsc	status,2,c
 23106  00B83E  D7AA               	goto	l2747
 23107  00B840  0A03               	xorlw	3	; case 130
 23108  00B842  B4D8               	btfsc	status,2,c
 23109  00B844  D7C5               	goto	l2751
 23110  00B846  0A01               	xorlw	1	; case 131
 23111  00B848  B4D8               	btfsc	status,2,c
 23112  00B84A  D7D2               	goto	l2755
 23113  00B84C  0A07               	xorlw	7	; case 132
 23114  00B84E  B4D8               	btfsc	status,2,c
 23115  00B850  D7E9               	goto	l2758
 23116                           
 23117                           ; BSR set to: 1
 23118                           ;encoder.c: 569: }
 23119                           
 23120                           ; BSR set to: 1
 23121                           ;encoder.c: 568: break;
 23122  00B852  D025               	goto	l2649
 23123  00B854                     l2614:
 23124                           
 23125                           ; BSR set to: 1
 23126                           
 23127                           ; BSR set to: 1
 23128  00B854  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23129  00B856  0BF0               	andlw	240
 23130  00B858  0100               	movlb	0	; () banked
 23131  00B85A  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 23132  00B85C  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23133                           
 23134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23135                           ; Switch size 1, requested type "space"
 23136                           ; Number of cases is 1, Range of values is 0 to 0
 23137                           ; switch strategies available:
 23138                           ; Name         Instructions Cycles
 23139                           ; simple_byte            4     3 (average)
 23140                           ;	Chosen strategy is simple_byte
 23141  00B85E  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23142  00B860  0A00               	xorlw	0	; case 0
 23143  00B862  A4D8               	btfss	status,2,c
 23144  00B864  D01C               	goto	l2649
 23145                           
 23146                           ; BSR set to: 0
 23147                           ; Switch size 1, requested type "space"
 23148                           ; Number of cases is 9, Range of values is 0 to 128
 23149                           ; switch strategies available:
 23150                           ; Name         Instructions Cycles
 23151                           ; simple_byte           28    15 (average)
 23152                           ;	Chosen strategy is simple_byte
 23153  00B866  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 23154  00B868  0A00               	xorlw	0	; case 0
 23155  00B86A  B4D8               	btfsc	status,2,c
 23156  00B86C  D4AC               	goto	l2616
 23157  00B86E  0A10               	xorlw	16	; case 16
 23158  00B870  B4D8               	btfsc	status,2,c
 23159  00B872  D4E9               	goto	l2651
 23160  00B874  0A30               	xorlw	48	; case 32
 23161  00B876  B4D8               	btfsc	status,2,c
 23162  00B878  D5DD               	goto	l2667
 23163  00B87A  0A10               	xorlw	16	; case 48
 23164  00B87C  B4D8               	btfsc	status,2,c
 23165  00B87E  D607               	goto	l2682
 23166  00B880  0A70               	xorlw	112	; case 64
 23167  00B882  B4D8               	btfsc	status,2,c
 23168  00B884  D63D               	goto	l2697
 23169  00B886  0A10               	xorlw	16	; case 80
 23170  00B888  B4D8               	btfsc	status,2,c
 23171  00B88A  D673               	goto	l2703
 23172  00B88C  0A30               	xorlw	48	; case 96
 23173  00B88E  B4D8               	btfsc	status,2,c
 23174  00B890  D6D3               	goto	l2718
 23175  00B892  0A10               	xorlw	16	; case 112
 23176  00B894  B4D8               	btfsc	status,2,c
 23177  00B896  D73C               	goto	l2738
 23178  00B898  0AF0               	xorlw	240	; case 128
 23179  00B89A  B4D8               	btfsc	status,2,c
 23180  00B89C  D754               	goto	l2741
 23181  00B89E                     l2649:
 23182                           
 23183                           ;encoder.c: 572: os.encoder1Count = 0;
 23184                           
 23185                           ; BSR set to: 0
 23186  00B89E  0E00               	movlw	0
 23187  00B8A0  0101               	movlb	1	; () banked
 23188  00B8A2  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 23189                           
 23190                           ;encoder.c: 573: os.encoder2Count = 0;
 23191  00B8A4  0E00               	movlw	0
 23192  00B8A6  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 23193                           
 23194                           ;encoder.c: 574: os.button1 = 0;
 23195  00B8A8  0E00               	movlw	0
 23196  00B8AA  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 23197                           
 23198                           ;encoder.c: 575: os.button2 = 0;
 23199  00B8AC  0E00               	movlw	0
 23200  00B8AE  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 23201                           
 23202                           ; BSR set to: 1
 23203  00B8B0  0012               	return		;funcret
 23204  00B8B2                     __end_of_encoder_statemachine:
 23205                           	opt stack 0
 23206                           tblptru	equ	0xFF8
 23207                           tblptrh	equ	0xFF7
 23208                           tblptrl	equ	0xFF6
 23209                           tablat	equ	0xFF5
 23210                           prodh	equ	0xFF4
 23211                           prodl	equ	0xFF3
 23212                           intcon	equ	0xFF2
 23213                           postinc0	equ	0xFEE
 23214                           wreg	equ	0xFE8
 23215                           indf1	equ	0xFE7
 23216                           postinc1	equ	0xFE6
 23217                           postdec1	equ	0xFE5
 23218                           plusw1	equ	0xFE3
 23219                           fsr1h	equ	0xFE2
 23220                           fsr1l	equ	0xFE1
 23221                           indf2	equ	0xFDF
 23222                           postinc2	equ	0xFDE
 23223                           postdec2	equ	0xFDD
 23224                           plusw2	equ	0xFDB
 23225                           fsr2h	equ	0xFDA
 23226                           fsr2l	equ	0xFD9
 23227                           status	equ	0xFD8
 23228                           
 23229 ;; *************** function _motor_stop *****************
 23230 ;; Defined at:
 23231 ;;		line 522 in file "motor.c"
 23232 ;; Parameters:    Size  Location     Type
 23233 ;;		None
 23234 ;; Auto vars:     Size  Location     Type
 23235 ;;		None
 23236 ;; Return value:  Size  Location     Type
 23237 ;;                  1    wreg      void 
 23238 ;; Registers used:
 23239 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 23240 ;; Tracked objects:
 23241 ;;		On entry : 0/0
 23242 ;;		On exit  : 0/0
 23243 ;;		Unchanged: 0/0
 23244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23247 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23248 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23249 ;;Total ram usage:        2 bytes
 23250 ;; Hardware stack levels used:    1
 23251 ;; Hardware stack levels required when called:   10
 23252 ;; This function calls:
 23253 ;;		Nothing
 23254 ;; This function is called by:
 23255 ;;		_encoder_statemachine
 23256 ;; This function uses a non-reentrant model
 23257 ;;
 23258                           
 23259                           	psect	text91
 23260  014D48                     __ptext91:
 23261                           	opt stack 0
 23262  014D48                     _motor_stop:
 23263                           	opt stack 19
 23264                           
 23265                           ;motor.c: 524: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 23266                           
 23267                           ; BSR set to: 1
 23268                           ;incstack = 0
 23269  014D48  90D8               	bcf	status,0,c
 23270  014D4A  0100               	movlb	0	; () banked
 23271  014D4C  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 23272  014D4E  6EF6               	movwf	tblptrl,c
 23273  014D50  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 23274  014D52  6EF7               	movwf	tblptrh,c
 23275  014D54  0E61               	movlw	low _motor_steps_lookup
 23276  014D56  26F6               	addwf	tblptrl,f,c
 23277  014D58  0E94               	movlw	high _motor_steps_lookup
 23278  014D5A  22F7               	addwfc	tblptrh,f,c
 23279  014D5C                     	if	1	;There are 3 active tblptr bytes
 23280  014D5C  6AF8               	clrf	tblptru,c
 23281  014D5E  0E00               	movlw	low (__mediumconst shr (0+16))
 23282  014D60  22F8               	addwfc	tblptru,f,c
 23283  014D62                     	endif
 23284  014D62  0009               	tblrd		*+
 23285  014D64  CFF5 F060          	movff	tablat,??_motor_stop
 23286  014D68  0009               	tblrd		*+
 23287  014D6A  CFF5 F061          	movff	tablat,??_motor_stop+1
 23288  014D6E  5160               	movf	??_motor_stop& (0+255),w,b
 23289  014D70  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 23290  014D72  0101               	movlb	1	; () banked
 23291  014D74  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 23292  014D76  0100               	movlb	0	; () banked
 23293  014D78  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 23294  014D7A  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 23295  014D7C  0101               	movlb	1	; () banked
 23296  014D7E  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 23297  014D80  0E00               	movlw	0
 23298  014D82  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 23299  014D84  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 23300  014D86  0E00               	movlw	0
 23301  014D88  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 23302  014D8A  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 23303                           
 23304                           ; BSR set to: 1
 23305  014D8C  0012               	return		;funcret
 23306  014D8E                     __end_of_motor_stop:
 23307                           	opt stack 0
 23308                           tblptru	equ	0xFF8
 23309                           tblptrh	equ	0xFF7
 23310                           tblptrl	equ	0xFF6
 23311                           tablat	equ	0xFF5
 23312                           prodh	equ	0xFF4
 23313                           prodl	equ	0xFF3
 23314                           intcon	equ	0xFF2
 23315                           postinc0	equ	0xFEE
 23316                           wreg	equ	0xFE8
 23317                           indf1	equ	0xFE7
 23318                           postinc1	equ	0xFE6
 23319                           postdec1	equ	0xFE5
 23320                           plusw1	equ	0xFE3
 23321                           fsr1h	equ	0xFE2
 23322                           fsr1l	equ	0xFE1
 23323                           indf2	equ	0xFDF
 23324                           postinc2	equ	0xFDE
 23325                           postdec2	equ	0xFDD
 23326                           plusw2	equ	0xFDB
 23327                           fsr2h	equ	0xFDA
 23328                           fsr2l	equ	0xFD9
 23329                           status	equ	0xFD8
 23330                           
 23331 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 23332 ;; Defined at:
 23333 ;;		line 50 in file "motor.c"
 23334 ;; Parameters:    Size  Location     Type
 23335 ;;  degrees         2   47[BANK0 ] unsigned int 
 23336 ;; Auto vars:     Size  Location     Type
 23337 ;;  steps           4   51[BANK0 ] unsigned long 
 23338 ;; Return value:  Size  Location     Type
 23339 ;;                  4   47[BANK0 ] unsigned long 
 23340 ;; Registers used:
 23341 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23342 ;; Tracked objects:
 23343 ;;		On entry : 0/0
 23344 ;;		On exit  : 0/0
 23345 ;;		Unchanged: 0/0
 23346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23348 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23350 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23351 ;;Total ram usage:        8 bytes
 23352 ;; Hardware stack levels used:    1
 23353 ;; Hardware stack levels required when called:   12
 23354 ;; This function calls:
 23355 ;;		_motor_steps_from_degrees
 23356 ;; This function is called by:
 23357 ;;		_encoder_statemachine
 23358 ;; This function uses a non-reentrant model
 23359 ;;
 23360                           
 23361                           	psect	text92
 23362  014C22                     __ptext92:
 23363                           	opt stack 0
 23364  014C22                     _motor_nonzero_steps_from_degrees:
 23365                           	opt stack 17
 23366                           
 23367                           ;motor.c: 52: uint32_t steps;;motor.c: 53: steps = motor_steps_from_degrees(degrees);
 23368                           
 23369                           ; BSR set to: 1
 23370                           ;incstack = 0
 23371  014C22  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 23372  014C26  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 23373  014C2A  ECE7  F08E         	call	_motor_steps_from_degrees	;wreg free
 23374  014C2E  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 23375  014C32  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 23376  014C36  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 23377  014C3A  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 23378                           
 23379                           ;motor.c: 54: if(steps==0)
 23380  014C3E  0100               	movlb	0	; () banked
 23381  014C40  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 23382  014C42  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 23383  014C44  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 23384  014C46  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 23385  014C48  A4D8               	btfss	status,2,c
 23386  014C4A  D008               	goto	l2382
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;motor.c: 55: steps = 1;
 23390  014C4C  0E01               	movlw	1
 23391  014C4E  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 23392  014C50  0E00               	movlw	0
 23393  014C52  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 23394  014C54  0E00               	movlw	0
 23395  014C56  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 23396  014C58  0E00               	movlw	0
 23397  014C5A  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 23398  014C5C                     l2382:
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;motor.c: 56: return steps;
 23402                           
 23403                           ; BSR set to: 0
 23404  014C5C  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 23405  014C60  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 23406  014C64  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 23407  014C68  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 23408  014C6C  0012               	return	
 23409  014C6E                     __end_of_motor_nonzero_steps_from_degrees:
 23410                           	opt stack 0
 23411                           tblptru	equ	0xFF8
 23412                           tblptrh	equ	0xFF7
 23413                           tblptrl	equ	0xFF6
 23414                           tablat	equ	0xFF5
 23415                           prodh	equ	0xFF4
 23416                           prodl	equ	0xFF3
 23417                           intcon	equ	0xFF2
 23418                           postinc0	equ	0xFEE
 23419                           wreg	equ	0xFE8
 23420                           indf1	equ	0xFE7
 23421                           postinc1	equ	0xFE6
 23422                           postdec1	equ	0xFE5
 23423                           plusw1	equ	0xFE3
 23424                           fsr1h	equ	0xFE2
 23425                           fsr1l	equ	0xFE1
 23426                           indf2	equ	0xFDF
 23427                           postinc2	equ	0xFDE
 23428                           postdec2	equ	0xFDD
 23429                           plusw2	equ	0xFDB
 23430                           fsr2h	equ	0xFDA
 23431                           fsr2l	equ	0xFD9
 23432                           status	equ	0xFD8
 23433                           
 23434 ;; *************** function _motor_divide_jump_to_nearest *****************
 23435 ;; Defined at:
 23436 ;;		line 648 in file "motor.c"
 23437 ;; Parameters:    Size  Location     Type
 23438 ;;		None
 23439 ;; Auto vars:     Size  Location     Type
 23440 ;;  divide_posit    4  105[BANK0 ] float 
 23441 ;;  nearest_posi    4   99[BANK0 ] unsigned long 
 23442 ;;  nearest_divi    2  103[BANK0 ] int 
 23443 ;; Return value:  Size  Location     Type
 23444 ;;                  1    wreg      void 
 23445 ;; Registers used:
 23446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23447 ;; Tracked objects:
 23448 ;;		On entry : 0/0
 23449 ;;		On exit  : 0/0
 23450 ;;		Unchanged: 0/0
 23451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23453 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23455 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23456 ;;Total ram usage:       10 bytes
 23457 ;; Hardware stack levels used:    1
 23458 ;; Hardware stack levels required when called:   15
 23459 ;; This function calls:
 23460 ;;		___fladd
 23461 ;;		___fldiv
 23462 ;;		___flmul
 23463 ;;		___fltol
 23464 ;;		___xxtofl
 23465 ;;		__step_position_from_divide_position
 23466 ;;		_motor_go_to_steps_position
 23467 ;; This function is called by:
 23468 ;;		_encoder_statemachine
 23469 ;; This function uses a non-reentrant model
 23470 ;;
 23471                           
 23472                           	psect	text93
 23473  00FC46                     __ptext93:
 23474                           	opt stack 0
 23475  00FC46                     _motor_divide_jump_to_nearest:
 23476                           	opt stack 14
 23477                           
 23478                           ;motor.c: 650: float divide_position_float;;motor.c: 651: int16_t nearest_divide_positio
      +                          n;;motor.c: 652: uint32_t nearest_position_in_steps;;motor.c: 654: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23479                           
 23480                           ; BSR set to: 0
 23481                           ;incstack = 0
 23482  00FC46  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 23483  00FC4A  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 23484  00FC4E  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 23485  00FC52  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 23486  00FC56  0E00               	movlw	0
 23487  00FC58  EC5D  F081         	call	___xxtofl
 23488  00FC5C  C060  F0C9         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23489  00FC60  C061  F0CA         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23490  00FC64  C062  F0CB         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23491  00FC68  C063  F0CC         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23492                           
 23493                           ;motor.c: 655: divide_position_float *= (float) os.division;
 23494  00FC6C  C0C9  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23495  00FC70  C0CA  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23496  00FC74  C0CB  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23497  00FC78  C0CC  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23498  00FC7C  EE21  F084         	lfsr	2,_os+19	;volatile
 23499  00FC80  CFDE F060          	movff	postinc2,___xxtofl@val
 23500  00FC84  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23501  00FC88  0100               	movlb	0	; () banked
 23502  00FC8A  0E00               	movlw	0
 23503  00FC8C  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23504  00FC8E  0EFF               	movlw	-1
 23505  00FC90  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23506  00FC92  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23507  00FC94  0E01               	movlw	1
 23508  00FC96  EC5D  F081         	call	___xxtofl
 23509  00FC9A  C060  F072         	movff	?___xxtofl,___flmul@a
 23510  00FC9E  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23511  00FCA2  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23512  00FCA6  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23513  00FCAA  EC79  F066         	call	___flmul	;wreg free
 23514  00FCAE  C06E  F0C9         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23515  00FCB2  C06F  F0CA         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23516  00FCB6  C070  F0CB         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23517  00FCBA  C071  F0CC         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23518                           
 23519                           ;motor.c: 656: divide_position_float /= (float) config.full_circle_in_steps;
 23520  00FCBE  C0C9  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23521  00FCC2  C0CA  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23522  00FCC6  C0CB  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23523  00FCCA  C0CC  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23524  00FCCE  C1A1  F060         	movff	_config,___xxtofl@val
 23525  00FCD2  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23526  00FCD6  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23527  00FCDA  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23528  00FCDE  0E00               	movlw	0
 23529  00FCE0  EC5D  F081         	call	___xxtofl
 23530  00FCE4  C060  F072         	movff	?___xxtofl,___fldiv@a
 23531  00FCE8  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23532  00FCEC  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23533  00FCF0  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23534  00FCF4  EC27  F06E         	call	___fldiv	;wreg free
 23535  00FCF8  C06E  F0C9         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23536  00FCFC  C06F  F0CA         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23537  00FD00  C070  F0CB         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23538  00FD04  C071  F0CC         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 23539                           
 23540                           ;motor.c: 657: divide_position_float += 0.5;
 23541  00FD08  C0C9  F072         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 23542  00FD0C  C0CA  F073         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 23543  00FD10  C0CB  F074         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 23544  00FD14  C0CC  F075         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 23545  00FD18  0E00               	movlw	0
 23546  00FD1A  0100               	movlb	0	; () banked
 23547  00FD1C  6F76               	movwf	___fladd@a& (0+255),b
 23548  00FD1E  0E00               	movlw	0
 23549  00FD20  6F77               	movwf	(___fladd@a+1)& (0+255),b
 23550  00FD22  0E00               	movlw	0
 23551  00FD24  6F78               	movwf	(___fladd@a+2)& (0+255),b
 23552  00FD26  0E3F               	movlw	63
 23553  00FD28  6F79               	movwf	(___fladd@a+3)& (0+255),b
 23554  00FD2A  EC22  F068         	call	___fladd	;wreg free
 23555  00FD2E  C072  F0C9         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 23556  00FD32  C073  F0CA         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 23557  00FD36  C074  F0CB         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 23558  00FD3A  C075  F0CC         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 23559                           
 23560                           ;motor.c: 658: nearest_divide_position = (int16_t) divide_position_float;
 23561  00FD3E  C0C9  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 23562  00FD42  C0CA  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 23563  00FD46  C0CB  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 23564  00FD4A  C0CC  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 23565  00FD4E  ECA8  F090         	call	___fltol	;wreg free
 23566  00FD52  C060  F0C7         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 23567  00FD56  C061  F0C8         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 23568                           
 23569                           ;motor.c: 661: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 23570  00FD5A  C0C7  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 23571  00FD5E  C0C8  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 23572  00FD62  EC18  F08D         	call	__step_position_from_divide_position	;wreg free
 23573  00FD66  C087  F0C3         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 23574  00FD6A  C088  F0C4         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 23575  00FD6E  C089  F0C5         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 23576  00FD72  C08A  F0C6         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 23577                           
 23578                           ;motor.c: 664: os.divide_position = nearest_divide_position;
 23579  00FD76  C0C7  F187         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 23580  00FD7A  C0C8  F188         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 23581                           
 23582                           ;motor.c: 665: motor_go_to_steps_position(nearest_position_in_steps);
 23583  00FD7E  C0C3  F0A7         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 23584  00FD82  C0C4  F0A8         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 23585  00FD86  C0C5  F0A9         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 23586  00FD8A  C0C6  F0AA         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 23587  00FD8E  ECC0  F069         	call	_motor_go_to_steps_position	;wreg free
 23588  00FD92  0012               	return		;funcret
 23589  00FD94                     __end_of_motor_divide_jump_to_nearest:
 23590                           	opt stack 0
 23591                           tblptru	equ	0xFF8
 23592                           tblptrh	equ	0xFF7
 23593                           tblptrl	equ	0xFF6
 23594                           tablat	equ	0xFF5
 23595                           prodh	equ	0xFF4
 23596                           prodl	equ	0xFF3
 23597                           intcon	equ	0xFF2
 23598                           postinc0	equ	0xFEE
 23599                           wreg	equ	0xFE8
 23600                           indf1	equ	0xFE7
 23601                           postinc1	equ	0xFE6
 23602                           postdec1	equ	0xFE5
 23603                           plusw1	equ	0xFE3
 23604                           fsr1h	equ	0xFE2
 23605                           fsr1l	equ	0xFE1
 23606                           indf2	equ	0xFDF
 23607                           postinc2	equ	0xFDE
 23608                           postdec2	equ	0xFDD
 23609                           plusw2	equ	0xFDB
 23610                           fsr2h	equ	0xFDA
 23611                           fsr2l	equ	0xFD9
 23612                           status	equ	0xFD8
 23613                           
 23614 ;; *************** function _motor_divide_jump *****************
 23615 ;; Defined at:
 23616 ;;		line 617 in file "motor.c"
 23617 ;; Parameters:    Size  Location     Type
 23618 ;;		None
 23619 ;; Auto vars:     Size  Location     Type
 23620 ;;  target_posit    4  100[BANK0 ] unsigned long 
 23621 ;;  target_divid    2  104[BANK0 ] int 
 23622 ;; Return value:  Size  Location     Type
 23623 ;;                  1    wreg      void 
 23624 ;; Registers used:
 23625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23626 ;; Tracked objects:
 23627 ;;		On entry : 0/0
 23628 ;;		On exit  : 0/0
 23629 ;;		Unchanged: 0/0
 23630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23632 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23633 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23634 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23635 ;;Total ram usage:        7 bytes
 23636 ;; Hardware stack levels used:    1
 23637 ;; Hardware stack levels required when called:   15
 23638 ;; This function calls:
 23639 ;;		__step_position_from_divide_position
 23640 ;;		_motor_go_to_steps_position
 23641 ;; This function is called by:
 23642 ;;		_encoder_statemachine
 23643 ;; This function uses a non-reentrant model
 23644 ;;
 23645                           
 23646                           	psect	text94
 23647  012FFA                     __ptext94:
 23648                           	opt stack 0
 23649  012FFA                     _motor_divide_jump:
 23650                           	opt stack 14
 23651                           
 23652                           ;motor.c: 619: int16_t target_divide_position;;motor.c: 620: uint32_t target_position_in
      +                          _steps;;motor.c: 623: if(os.divide_jump_size>0)
 23653                           
 23654                           ;incstack = 0
 23655  012FFA  0101               	movlb	1	; () banked
 23656  012FFC  BF8A               	btfsc	(_os+25)& (0+255),7,b	;volatile
 23657  012FFE  D023               	goto	l2498
 23658  013000  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23659  013002  E103               	bnz	u16370
 23660  013004  0589               	decf	(_os+24)& (0+255),w,b	;volatile
 23661  013006  A0D8               	btfss	status,0,c
 23662  013008  D01E               	goto	l2498
 23663  01300A                     u16370:
 23664                           
 23665                           ; BSR set to: 1
 23666                           ;motor.c: 624: {;motor.c: 625: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 23667  01300A  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23668  01300C  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23669  01300E  0100               	movlb	0	; () banked
 23670  013010  6FC8               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23671  013012  0101               	movlb	1	; () banked
 23672  013014  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23673  013016  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23674  013018  0100               	movlb	0	; () banked
 23675  01301A  6FC9               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23676                           
 23677                           ;motor.c: 626: if(target_divide_position>=os.division)
 23678  01301C  0101               	movlb	1	; () banked
 23679  01301E  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 23680  013020  0100               	movlb	0	; () banked
 23681  013022  5DC8               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 23682  013024  51C9               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 23683  013026  0A80               	xorlw	128
 23684  013028  6FC3               	movwf	??_motor_divide_jump& (0+255),b
 23685  01302A  0101               	movlb	1	; () banked
 23686  01302C  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 23687  01302E  0A80               	xorlw	128
 23688  013030  0100               	movlb	0	; () banked
 23689  013032  59C3               	subwfb	??_motor_divide_jump& (0+255),w,b
 23690  013034  A0D8               	btfss	status,0,c
 23691  013036  D019               	goto	l2501
 23692                           
 23693                           ; BSR set to: 0
 23694                           ;motor.c: 627: {;motor.c: 628: target_divide_position -= os.division;
 23695  013038  EE21  F084         	lfsr	2,_os+19	;volatile
 23696  01303C  50DE               	movf	postinc2,w,c
 23697  01303E  5FC8               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23698  013040  50DD               	movf	postdec2,w,c
 23699  013042  5BC9               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23700                           
 23701                           ; BSR set to: 0
 23702                           ;motor.c: 629: };motor.c: 630: }
 23703  013044  D012               	goto	l2501
 23704  013046                     l2498:
 23705                           
 23706                           ;motor.c: 631: else;motor.c: 632: {;motor.c: 633: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 23707                           
 23708                           ; BSR set to: 0
 23709  013046  0101               	movlb	1	; () banked
 23710  013048  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23711  01304A  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23712  01304C  0100               	movlb	0	; () banked
 23713  01304E  6FC8               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23714  013050  0101               	movlb	1	; () banked
 23715  013052  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23716  013054  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23717  013056  0100               	movlb	0	; () banked
 23718  013058  6FC9               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23719                           
 23720                           ;motor.c: 634: if(target_divide_position<0)
 23721  01305A  AFC9               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 23722  01305C  D006               	goto	l2501
 23723                           
 23724                           ; BSR set to: 0
 23725                           ;motor.c: 635: {;motor.c: 636: target_divide_position += os.division;
 23726  01305E  EE21  F084         	lfsr	2,_os+19	;volatile
 23727  013062  50DE               	movf	postinc2,w,c
 23728  013064  27C8               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23729  013066  50DD               	movf	postdec2,w,c
 23730  013068  23C9               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23731  01306A                     l2501:
 23732                           
 23733                           ; BSR set to: 0
 23734                           ;motor.c: 637: };motor.c: 638: };motor.c: 641: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 23735                           
 23736                           ; BSR set to: 0
 23737                           
 23738                           ; BSR set to: 0
 23739  01306A  C0C8  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 23740  01306E  C0C9  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 23741  013072  EC18  F08D         	call	__step_position_from_divide_position	;wreg free
 23742  013076  C087  F0C4         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 23743  01307A  C088  F0C5         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 23744  01307E  C089  F0C6         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 23745  013082  C08A  F0C7         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 23746                           
 23747                           ;motor.c: 644: os.divide_position = target_divide_position;
 23748  013086  C0C8  F187         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 23749  01308A  C0C9  F188         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 23750                           
 23751                           ;motor.c: 645: motor_go_to_steps_position(target_position_in_steps);
 23752  01308E  C0C4  F0A7         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 23753  013092  C0C5  F0A8         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 23754  013096  C0C6  F0A9         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 23755  01309A  C0C7  F0AA         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 23756  01309E  ECC0  F069         	call	_motor_go_to_steps_position	;wreg free
 23757  0130A2  0012               	return		;funcret
 23758  0130A4                     __end_of_motor_divide_jump:
 23759                           	opt stack 0
 23760                           tblptru	equ	0xFF8
 23761                           tblptrh	equ	0xFF7
 23762                           tblptrl	equ	0xFF6
 23763                           tablat	equ	0xFF5
 23764                           prodh	equ	0xFF4
 23765                           prodl	equ	0xFF3
 23766                           intcon	equ	0xFF2
 23767                           postinc0	equ	0xFEE
 23768                           wreg	equ	0xFE8
 23769                           indf1	equ	0xFE7
 23770                           postinc1	equ	0xFE6
 23771                           postdec1	equ	0xFE5
 23772                           plusw1	equ	0xFE3
 23773                           fsr1h	equ	0xFE2
 23774                           fsr1l	equ	0xFE1
 23775                           indf2	equ	0xFDF
 23776                           postinc2	equ	0xFDE
 23777                           postdec2	equ	0xFDD
 23778                           plusw2	equ	0xFDB
 23779                           fsr2h	equ	0xFDA
 23780                           fsr2l	equ	0xFD9
 23781                           status	equ	0xFD8
 23782                           
 23783 ;; *************** function __step_position_from_divide_position *****************
 23784 ;; Defined at:
 23785 ;;		line 92 in file "motor.c"
 23786 ;; Parameters:    Size  Location     Type
 23787 ;;  divide_posit    2   39[BANK0 ] int 
 23788 ;; Auto vars:     Size  Location     Type
 23789 ;;  target_posit    4   43[BANK0 ] float 
 23790 ;; Return value:  Size  Location     Type
 23791 ;;                  4   39[BANK0 ] unsigned long 
 23792 ;; Registers used:
 23793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23794 ;; Tracked objects:
 23795 ;;		On entry : 0/0
 23796 ;;		On exit  : 0/0
 23797 ;;		Unchanged: 0/0
 23798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23802 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23803 ;;Total ram usage:        8 bytes
 23804 ;; Hardware stack levels used:    1
 23805 ;; Hardware stack levels required when called:   11
 23806 ;; This function calls:
 23807 ;;		___fldiv
 23808 ;;		___flmul
 23809 ;;		___fltol
 23810 ;;		___xxtofl
 23811 ;; This function is called by:
 23812 ;;		_motor_divide_jump
 23813 ;;		_motor_divide_jump_to_nearest
 23814 ;; This function uses a non-reentrant model
 23815 ;;
 23816                           
 23817                           	psect	text95
 23818  011A30                     __ptext95:
 23819                           	opt stack 0
 23820  011A30                     __step_position_from_divide_position:
 23821                           	opt stack 17
 23822                           
 23823                           ;motor.c: 94: float target_position;;motor.c: 97: target_position = (float) config.full_
      +                          circle_in_steps;
 23824                           
 23825                           ;incstack = 0
 23826  011A30  C1A1  F060         	movff	_config,___xxtofl@val
 23827  011A34  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23828  011A38  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23829  011A3C  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23830  011A40  0E00               	movlw	0
 23831  011A42  EC5D  F081         	call	___xxtofl
 23832  011A46  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 23833  011A4A  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 23834  011A4E  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 23835  011A52  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 23836                           
 23837                           ;motor.c: 98: target_position *= (float) divide_position;
 23838  011A56  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 23839  011A5A  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 23840  011A5E  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 23841  011A62  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 23842  011A66  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 23843  011A6A  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 23844  011A6E  0100               	movlb	0	; () banked
 23845  011A70  0E00               	movlw	0
 23846  011A72  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23847  011A74  0EFF               	movlw	-1
 23848  011A76  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23849  011A78  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23850  011A7A  0E01               	movlw	1
 23851  011A7C  EC5D  F081         	call	___xxtofl
 23852  011A80  C060  F072         	movff	?___xxtofl,___flmul@a
 23853  011A84  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23854  011A88  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23855  011A8C  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23856  011A90  EC79  F066         	call	___flmul	;wreg free
 23857  011A94  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 23858  011A98  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 23859  011A9C  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 23860  011AA0  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 23861                           
 23862                           ;motor.c: 99: target_position /= (float) os.division;
 23863  011AA4  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 23864  011AA8  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 23865  011AAC  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 23866  011AB0  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 23867  011AB4  EE21  F084         	lfsr	2,_os+19	;volatile
 23868  011AB8  CFDE F060          	movff	postinc2,___xxtofl@val
 23869  011ABC  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23870  011AC0  0100               	movlb	0	; () banked
 23871  011AC2  0E00               	movlw	0
 23872  011AC4  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23873  011AC6  0EFF               	movlw	-1
 23874  011AC8  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23875  011ACA  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23876  011ACC  0E01               	movlw	1
 23877  011ACE  EC5D  F081         	call	___xxtofl
 23878  011AD2  C060  F072         	movff	?___xxtofl,___fldiv@a
 23879  011AD6  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23880  011ADA  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23881  011ADE  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23882  011AE2  EC27  F06E         	call	___fldiv	;wreg free
 23883  011AE6  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 23884  011AEA  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 23885  011AEE  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 23886  011AF2  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 23887                           
 23888                           ;motor.c: 101: return (uint32_t) target_position;
 23889  011AF6  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 23890  011AFA  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 23891  011AFE  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 23892  011B02  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 23893  011B06  ECA8  F090         	call	___fltol	;wreg free
 23894  011B0A  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 23895  011B0E  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 23896  011B12  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 23897  011B16  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 23898  011B1A  0012               	return	
 23899  011B1C                     __end_of__step_position_from_divide_position:
 23900                           	opt stack 0
 23901                           tblptru	equ	0xFF8
 23902                           tblptrh	equ	0xFF7
 23903                           tblptrl	equ	0xFF6
 23904                           tablat	equ	0xFF5
 23905                           prodh	equ	0xFF4
 23906                           prodl	equ	0xFF3
 23907                           intcon	equ	0xFF2
 23908                           postinc0	equ	0xFEE
 23909                           wreg	equ	0xFE8
 23910                           indf1	equ	0xFE7
 23911                           postinc1	equ	0xFE6
 23912                           postdec1	equ	0xFE5
 23913                           plusw1	equ	0xFE3
 23914                           fsr1h	equ	0xFE2
 23915                           fsr1l	equ	0xFE1
 23916                           indf2	equ	0xFDF
 23917                           postinc2	equ	0xFDE
 23918                           postdec2	equ	0xFDD
 23919                           plusw2	equ	0xFDB
 23920                           fsr2h	equ	0xFDA
 23921                           fsr2l	equ	0xFD9
 23922                           status	equ	0xFD8
 23923                           
 23924 ;; *************** function _motor_change_speed *****************
 23925 ;; Defined at:
 23926 ;;		line 527 in file "motor.c"
 23927 ;; Parameters:    Size  Location     Type
 23928 ;;  new_speed       2    0[BANK0 ] unsigned int 
 23929 ;; Auto vars:     Size  Location     Type
 23930 ;;		None
 23931 ;; Return value:  Size  Location     Type
 23932 ;;                  1    wreg      void 
 23933 ;; Registers used:
 23934 ;;		None
 23935 ;; Tracked objects:
 23936 ;;		On entry : 0/0
 23937 ;;		On exit  : 0/0
 23938 ;;		Unchanged: 0/0
 23939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23944 ;;Total ram usage:        2 bytes
 23945 ;; Hardware stack levels used:    1
 23946 ;; Hardware stack levels required when called:   10
 23947 ;; This function calls:
 23948 ;;		Nothing
 23949 ;; This function is called by:
 23950 ;;		_encoder_statemachine
 23951 ;; This function uses a non-reentrant model
 23952 ;;
 23953                           
 23954                           	psect	text96
 23955  0157DC                     __ptext96:
 23956                           	opt stack 0
 23957  0157DC                     _motor_change_speed:
 23958                           	opt stack 19
 23959                           
 23960                           ;motor.c: 529: motor_maximum_speed = new_speed;
 23961                           
 23962                           ;incstack = 0
 23963  0157DC  C060  F13F         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 23964  0157E0  C061  F140         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 23965  0157E4  0012               	return		;funcret
 23966  0157E6                     __end_of_motor_change_speed:
 23967                           	opt stack 0
 23968                           tblptru	equ	0xFF8
 23969                           tblptrh	equ	0xFF7
 23970                           tblptrl	equ	0xFF6
 23971                           tablat	equ	0xFF5
 23972                           prodh	equ	0xFF4
 23973                           prodl	equ	0xFF3
 23974                           intcon	equ	0xFF2
 23975                           postinc0	equ	0xFEE
 23976                           wreg	equ	0xFE8
 23977                           indf1	equ	0xFE7
 23978                           postinc1	equ	0xFE6
 23979                           postdec1	equ	0xFE5
 23980                           plusw1	equ	0xFE3
 23981                           fsr1h	equ	0xFE2
 23982                           fsr1l	equ	0xFE1
 23983                           indf2	equ	0xFDF
 23984                           postinc2	equ	0xFDE
 23985                           postdec2	equ	0xFDD
 23986                           plusw2	equ	0xFDB
 23987                           fsr2h	equ	0xFDA
 23988                           fsr2l	equ	0xFD9
 23989                           status	equ	0xFD8
 23990                           
 23991 ;; *************** function _motor_arc_move *****************
 23992 ;; Defined at:
 23993 ;;		line 668 in file "motor.c"
 23994 ;; Parameters:    Size  Location     Type
 23995 ;;  direction       1    wreg     enum E6622
 23996 ;; Auto vars:     Size  Location     Type
 23997 ;;  direction       1   75[BANK0 ] enum E6622
 23998 ;;  arc_in_steps    4   76[BANK0 ] float 
 23999 ;; Return value:  Size  Location     Type
 24000 ;;                  1    wreg      void 
 24001 ;; Registers used:
 24002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24003 ;; Tracked objects:
 24004 ;;		On entry : 0/0
 24005 ;;		On exit  : 0/0
 24006 ;;		Unchanged: 0/0
 24007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24009 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24011 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24012 ;;Total ram usage:        9 bytes
 24013 ;; Hardware stack levels used:    1
 24014 ;; Hardware stack levels required when called:   14
 24015 ;; This function calls:
 24016 ;;		___fldiv
 24017 ;;		___flmul
 24018 ;;		___fltol
 24019 ;;		___xxtofl
 24020 ;;		_motor_schedule_command
 24021 ;; This function is called by:
 24022 ;;		_encoder_statemachine
 24023 ;; This function uses a non-reentrant model
 24024 ;;
 24025                           
 24026                           	psect	text97
 24027  011854                     __ptext97:
 24028                           	opt stack 0
 24029  011854                     _motor_arc_move:
 24030                           	opt stack 15
 24031                           
 24032                           ;incstack = 0
 24033                           ;motor_arc_move@direction stored from wreg
 24034  011854  0100               	movlb	0	; () banked
 24035  011856  6FAB               	movwf	motor_arc_move@direction& (0+255),b
 24036                           
 24037                           ;motor.c: 670: float arc_in_steps;;motor.c: 672: arc_in_steps = (float) os.arc_size;
 24038  011858  C18D  F060         	movff	_os+28,___xxtofl@val	;volatile
 24039  01185C  C18E  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 24040  011860  C18F  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 24041  011864  C190  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 24042  011868  0E01               	movlw	1
 24043  01186A  EC5D  F081         	call	___xxtofl
 24044  01186E  C060  F0AC         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 24045  011872  C061  F0AD         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 24046  011876  C062  F0AE         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24047  01187A  C063  F0AF         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24048                           
 24049                           ;motor.c: 673: arc_in_steps *= (float) config.full_circle_in_steps;
 24050  01187E  C0AC  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24051  011882  C0AD  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24052  011886  C0AE  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24053  01188A  C0AF  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24054  01188E  C1A1  F060         	movff	_config,___xxtofl@val
 24055  011892  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 24056  011896  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 24057  01189A  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 24058  01189E  0E00               	movlw	0
 24059  0118A0  EC5D  F081         	call	___xxtofl
 24060  0118A4  C060  F072         	movff	?___xxtofl,___flmul@a
 24061  0118A8  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 24062  0118AC  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 24063  0118B0  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 24064  0118B4  EC79  F066         	call	___flmul	;wreg free
 24065  0118B8  C06E  F0AC         	movff	?___flmul,motor_arc_move@arc_in_steps
 24066  0118BC  C06F  F0AD         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24067  0118C0  C070  F0AE         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24068  0118C4  C071  F0AF         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24069                           
 24070                           ;motor.c: 674: arc_in_steps /= (float) 36000;
 24071  0118C8  C0AC  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24072  0118CC  C0AD  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24073  0118D0  C0AE  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24074  0118D4  C0AF  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24075  0118D8  0E00               	movlw	0
 24076  0118DA  0100               	movlb	0	; () banked
 24077  0118DC  6F72               	movwf	___fldiv@a& (0+255),b
 24078  0118DE  0EA0               	movlw	160
 24079  0118E0  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 24080  0118E2  0E0C               	movlw	12
 24081  0118E4  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 24082  0118E6  0E47               	movlw	71
 24083  0118E8  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 24084  0118EA  EC27  F06E         	call	___fldiv	;wreg free
 24085  0118EE  C06E  F0AC         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24086  0118F2  C06F  F0AD         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24087  0118F6  C070  F0AE         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24088  0118FA  C071  F0AF         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24089                           
 24090                           ;motor.c: 675: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 24091  0118FE  C0AC  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24092  011902  C0AD  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24093  011906  C0AE  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24094  01190A  C0AF  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24095  01190E  ECA8  F090         	call	___fltol	;wreg free
 24096  011912  C060  F0A7         	movff	?___fltol,_motor_arc_move$8734
 24097  011916  C061  F0A8         	movff	?___fltol+1,_motor_arc_move$8734+1
 24098  01191A  C062  F0A9         	movff	?___fltol+2,_motor_arc_move$8734+2
 24099  01191E  C063  F0AA         	movff	?___fltol+3,_motor_arc_move$8734+3
 24100                           
 24101                           ;motor.c: 675: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 24102  011922  C0A7  F0A0         	movff	_motor_arc_move$8734,motor_schedule_command@distance_in_steps
 24103  011926  C0A8  F0A1         	movff	_motor_arc_move$8734+1,motor_schedule_command@distance_in_steps+1
 24104  01192A  C0A9  F0A2         	movff	_motor_arc_move$8734+2,motor_schedule_command@distance_in_steps+2
 24105  01192E  C0AA  F0A3         	movff	_motor_arc_move$8734+3,motor_schedule_command@distance_in_steps+3
 24106  011932  C191  F0A4         	movff	_os+32,motor_schedule_command@speed	;volatile
 24107  011936  C192  F0A5         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 24108  01193A  0100               	movlb	0	; () banked
 24109  01193C  51AB               	movf	motor_arc_move@direction& (0+255),w,b
 24110  01193E  ECA7  F097         	call	_motor_schedule_command
 24111  011942  0012               	return		;funcret
 24112  011944                     __end_of_motor_arc_move:
 24113                           	opt stack 0
 24114                           tblptru	equ	0xFF8
 24115                           tblptrh	equ	0xFF7
 24116                           tblptrl	equ	0xFF6
 24117                           tablat	equ	0xFF5
 24118                           prodh	equ	0xFF4
 24119                           prodl	equ	0xFF3
 24120                           intcon	equ	0xFF2
 24121                           postinc0	equ	0xFEE
 24122                           wreg	equ	0xFE8
 24123                           indf1	equ	0xFE7
 24124                           postinc1	equ	0xFE6
 24125                           postdec1	equ	0xFE5
 24126                           plusw1	equ	0xFE3
 24127                           fsr1h	equ	0xFE2
 24128                           fsr1l	equ	0xFE1
 24129                           indf2	equ	0xFDF
 24130                           postinc2	equ	0xFDE
 24131                           postdec2	equ	0xFDD
 24132                           plusw2	equ	0xFDB
 24133                           fsr2h	equ	0xFDA
 24134                           fsr2l	equ	0xFD9
 24135                           status	equ	0xFD8
 24136                           
 24137 ;; *************** function __encoder_next_setup_stepsize *****************
 24138 ;; Defined at:
 24139 ;;		line 24 in file "encoder.c"
 24140 ;; Parameters:    Size  Location     Type
 24141 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24142 ;; Auto vars:     Size  Location     Type
 24143 ;;		None
 24144 ;; Return value:  Size  Location     Type
 24145 ;;                  2    0[BANK0 ] unsigned int 
 24146 ;; Registers used:
 24147 ;;		wreg, status,2, status,0
 24148 ;; Tracked objects:
 24149 ;;		On entry : 0/0
 24150 ;;		On exit  : 0/0
 24151 ;;		Unchanged: 0/0
 24152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24155 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24156 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24157 ;;Total ram usage:        4 bytes
 24158 ;; Hardware stack levels used:    1
 24159 ;; Hardware stack levels required when called:   10
 24160 ;; This function calls:
 24161 ;;		Nothing
 24162 ;; This function is called by:
 24163 ;;		_encoder_statemachine
 24164 ;; This function uses a non-reentrant model
 24165 ;;
 24166                           
 24167                           	psect	text98
 24168  013D5A                     __ptext98:
 24169                           	opt stack 0
 24170  013D5A                     __encoder_next_setup_stepsize:
 24171                           	opt stack 19
 24172                           
 24173                           ;encoder.c: 26: switch(old_stepsize)
 24174                           
 24175                           ;incstack = 0
 24176  013D5A  D01A               	goto	l2545
 24177  013D5C                     
 24178                           ;encoder.c: 29: return 100;
 24179  013D5C  0E00               	movlw	0
 24180  013D5E  0100               	movlb	0	; () banked
 24181  013D60  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24182  013D62  0E64               	movlw	100
 24183  013D64  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24184                           
 24185                           ; BSR set to: 0
 24186  013D66  0012               	return	
 24187  013D68                     
 24188                           ; BSR set to: 0
 24189                           ;encoder.c: 31: return 10;
 24190                           
 24191                           ; BSR set to: 0
 24192  013D68  0E00               	movlw	0
 24193  013D6A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24194  013D6C  0E0A               	movlw	10
 24195  013D6E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24196                           
 24197                           ; BSR set to: 0
 24198  013D70  0012               	return	
 24199  013D72                     
 24200                           ; BSR set to: 0
 24201                           ;encoder.c: 33: return 1;
 24202                           
 24203                           ; BSR set to: 0
 24204  013D72  0E00               	movlw	0
 24205  013D74  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24206  013D76  0E01               	movlw	1
 24207  013D78  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24208                           
 24209                           ; BSR set to: 0
 24210  013D7A  0012               	return	
 24211  013D7C                     
 24212                           ; BSR set to: 0
 24213                           ;encoder.c: 35: return 1000;
 24214                           
 24215                           ; BSR set to: 0
 24216  013D7C  0E03               	movlw	3
 24217  013D7E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24218  013D80  0EE8               	movlw	232
 24219  013D82  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24220                           
 24221                           ; BSR set to: 0
 24222  013D84  0012               	return	
 24223  013D86                     
 24224                           ; BSR set to: 0
 24225                           ;encoder.c: 37: return 100;
 24226                           
 24227                           ; BSR set to: 0
 24228  013D86  0E00               	movlw	0
 24229  013D88  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24230  013D8A  0E64               	movlw	100
 24231  013D8C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24232                           
 24233                           ; BSR set to: 0
 24234                           ;encoder.c: 38: }
 24235                           
 24236                           ; BSR set to: 0
 24237  013D8E  0012               	return	
 24238  013D90                     l2545:
 24239                           
 24240                           ; BSR set to: 0
 24241  013D90  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24242  013D94  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24243                           
 24244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24245                           ; Switch size 1, requested type "space"
 24246                           ; Number of cases is 2, Range of values is 0 to 3
 24247                           ; switch strategies available:
 24248                           ; Name         Instructions Cycles
 24249                           ; simple_byte            7     4 (average)
 24250                           ;	Chosen strategy is simple_byte
 24251  013D98  0100               	movlb	0	; () banked
 24252  013D9A  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24253  013D9C  0A00               	xorlw	0	; case 0
 24254  013D9E  B4D8               	btfsc	status,2,c
 24255  013DA0  D004               	goto	l19169
 24256  013DA2  0A03               	xorlw	3	; case 3
 24257  013DA4  B4D8               	btfsc	status,2,c
 24258  013DA6  D00C               	goto	l19171
 24259  013DA8  D7EE               	goto	l2551
 24260  013DAA                     l19169:
 24261                           
 24262                           ; BSR set to: 0
 24263                           ; Switch size 1, requested type "space"
 24264                           ; Number of cases is 3, Range of values is 1 to 100
 24265                           ; switch strategies available:
 24266                           ; Name         Instructions Cycles
 24267                           ; simple_byte           10     6 (average)
 24268                           ;	Chosen strategy is simple_byte
 24269  013DAA  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24270  013DAC  0A01               	xorlw	1	; case 1
 24271  013DAE  B4D8               	btfsc	status,2,c
 24272  013DB0  D7E5               	goto	l2550
 24273  013DB2  0A0B               	xorlw	11	; case 10
 24274  013DB4  B4D8               	btfsc	status,2,c
 24275  013DB6  D7DD               	goto	l2549
 24276  013DB8  0A6E               	xorlw	110	; case 100
 24277  013DBA  B4D8               	btfsc	status,2,c
 24278  013DBC  D7D5               	goto	l2548
 24279  013DBE  D7E3               	goto	l2551
 24280  013DC0                     l19171:
 24281                           
 24282                           ; BSR set to: 0
 24283                           ; Switch size 1, requested type "space"
 24284                           ; Number of cases is 1, Range of values is 232 to 232
 24285                           ; switch strategies available:
 24286                           ; Name         Instructions Cycles
 24287                           ; simple_byte            4     3 (average)
 24288                           ;	Chosen strategy is simple_byte
 24289  013DC0  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24290  013DC2  0AE8               	xorlw	232	; case 232
 24291  013DC4  B4D8               	btfsc	status,2,c
 24292  013DC6  D7CA               	goto	l2546
 24293  013DC8  D7DE               	goto	l2551
 24294  013DCA                     __end_of__encoder_next_setup_stepsize:
 24295                           	opt stack 0
 24296                           tblptru	equ	0xFF8
 24297                           tblptrh	equ	0xFF7
 24298                           tblptrl	equ	0xFF6
 24299                           tablat	equ	0xFF5
 24300                           prodh	equ	0xFF4
 24301                           prodl	equ	0xFF3
 24302                           intcon	equ	0xFF2
 24303                           postinc0	equ	0xFEE
 24304                           wreg	equ	0xFE8
 24305                           indf1	equ	0xFE7
 24306                           postinc1	equ	0xFE6
 24307                           postdec1	equ	0xFE5
 24308                           plusw1	equ	0xFE3
 24309                           fsr1h	equ	0xFE2
 24310                           fsr1l	equ	0xFE1
 24311                           indf2	equ	0xFDF
 24312                           postinc2	equ	0xFDE
 24313                           postdec2	equ	0xFDD
 24314                           plusw2	equ	0xFDB
 24315                           fsr2h	equ	0xFDA
 24316                           fsr2l	equ	0xFD9
 24317                           status	equ	0xFD8
 24318                           
 24319 ;; *************** function __encoder_next_divide_step_size *****************
 24320 ;; Defined at:
 24321 ;;		line 41 in file "encoder.c"
 24322 ;; Parameters:    Size  Location     Type
 24323 ;;  old_stepsize    1    wreg     unsigned char 
 24324 ;; Auto vars:     Size  Location     Type
 24325 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24326 ;; Return value:  Size  Location     Type
 24327 ;;                  1    wreg      unsigned char 
 24328 ;; Registers used:
 24329 ;;		wreg, status,2, status,0
 24330 ;; Tracked objects:
 24331 ;;		On entry : 0/0
 24332 ;;		On exit  : 0/0
 24333 ;;		Unchanged: 0/0
 24334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24338 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24339 ;;Total ram usage:        1 bytes
 24340 ;; Hardware stack levels used:    1
 24341 ;; Hardware stack levels required when called:   10
 24342 ;; This function calls:
 24343 ;;		Nothing
 24344 ;; This function is called by:
 24345 ;;		_encoder_statemachine
 24346 ;; This function uses a non-reentrant model
 24347 ;;
 24348                           
 24349                           	psect	text99
 24350  0152EA                     __ptext99:
 24351                           	opt stack 0
 24352  0152EA                     __encoder_next_divide_step_size:
 24353                           	opt stack 19
 24354                           
 24355                           ; BSR set to: 0
 24356                           ;incstack = 0
 24357                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24358  0152EA  0100               	movlb	0	; () banked
 24359  0152EC  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24360                           
 24361                           ;encoder.c: 43: switch(old_stepsize)
 24362  0152EE  D008               	goto	l2555
 24363  0152F0                     
 24364                           ;encoder.c: 46: return 10;
 24365  0152F0  0E0A               	movlw	10
 24366  0152F2  0012               	return	
 24367  0152F4                     
 24368                           ;encoder.c: 48: return 1;
 24369  0152F4  0E01               	movlw	1
 24370  0152F6  0012               	return	
 24371  0152F8                     
 24372                           ;encoder.c: 50: return 100;
 24373  0152F8  0E64               	movlw	100
 24374  0152FA  0012               	return	
 24375  0152FC                     
 24376                           ;encoder.c: 52: return 1;
 24377  0152FC  0E01               	movlw	1
 24378                           
 24379                           ;encoder.c: 53: }
 24380  0152FE  0012               	return	
 24381  015300                     l2555:
 24382  015300  0100               	movlb	0	; () banked
 24383  015302  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24384                           
 24385                           ; Switch size 1, requested type "space"
 24386                           ; Number of cases is 3, Range of values is 1 to 100
 24387                           ; switch strategies available:
 24388                           ; Name         Instructions Cycles
 24389                           ; simple_byte           10     6 (average)
 24390                           ;	Chosen strategy is simple_byte
 24391  015304  0A01               	xorlw	1	; case 1
 24392  015306  B4D8               	btfsc	status,2,c
 24393  015308  D7F7               	goto	l2559
 24394  01530A  0A0B               	xorlw	11	; case 10
 24395  01530C  B4D8               	btfsc	status,2,c
 24396  01530E  D7F2               	goto	l2558
 24397  015310  0A6E               	xorlw	110	; case 100
 24398  015312  B4D8               	btfsc	status,2,c
 24399  015314  D7ED               	goto	l2556
 24400  015316  D7F2               	goto	l2560
 24401  015318                     __end_of__encoder_next_divide_step_size:
 24402                           	opt stack 0
 24403                           tblptru	equ	0xFF8
 24404                           tblptrh	equ	0xFF7
 24405                           tblptrl	equ	0xFF6
 24406                           tablat	equ	0xFF5
 24407                           prodh	equ	0xFF4
 24408                           prodl	equ	0xFF3
 24409                           intcon	equ	0xFF2
 24410                           postinc0	equ	0xFEE
 24411                           wreg	equ	0xFE8
 24412                           indf1	equ	0xFE7
 24413                           postinc1	equ	0xFE6
 24414                           postdec1	equ	0xFE5
 24415                           plusw1	equ	0xFE3
 24416                           fsr1h	equ	0xFE2
 24417                           fsr1l	equ	0xFE1
 24418                           indf2	equ	0xFDF
 24419                           postinc2	equ	0xFDE
 24420                           postdec2	equ	0xFDD
 24421                           plusw2	equ	0xFDB
 24422                           fsr2h	equ	0xFDA
 24423                           fsr2l	equ	0xFD9
 24424                           status	equ	0xFD8
 24425                           
 24426 ;; *************** function __encoder_next_arc_step_size *****************
 24427 ;; Defined at:
 24428 ;;		line 56 in file "encoder.c"
 24429 ;; Parameters:    Size  Location     Type
 24430 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24431 ;; Auto vars:     Size  Location     Type
 24432 ;;		None
 24433 ;; Return value:  Size  Location     Type
 24434 ;;                  2    0[BANK0 ] unsigned int 
 24435 ;; Registers used:
 24436 ;;		wreg, status,2, status,0
 24437 ;; Tracked objects:
 24438 ;;		On entry : 0/0
 24439 ;;		On exit  : 0/0
 24440 ;;		Unchanged: 0/0
 24441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24445 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24446 ;;Total ram usage:        4 bytes
 24447 ;; Hardware stack levels used:    1
 24448 ;; Hardware stack levels required when called:   10
 24449 ;; This function calls:
 24450 ;;		Nothing
 24451 ;; This function is called by:
 24452 ;;		_encoder_statemachine
 24453 ;; This function uses a non-reentrant model
 24454 ;;
 24455                           
 24456                           	psect	text100
 24457  013DCA                     __ptext100:
 24458                           	opt stack 0
 24459  013DCA                     __encoder_next_arc_step_size:
 24460                           	opt stack 19
 24461                           
 24462                           ;encoder.c: 58: switch(old_stepsize)
 24463                           
 24464                           ;incstack = 0
 24465  013DCA  D01A               	goto	l2564
 24466  013DCC                     
 24467                           ;encoder.c: 61: return 100;
 24468  013DCC  0E00               	movlw	0
 24469  013DCE  0100               	movlb	0	; () banked
 24470  013DD0  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24471  013DD2  0E64               	movlw	100
 24472  013DD4  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24473                           
 24474                           ; BSR set to: 0
 24475  013DD6  0012               	return	
 24476  013DD8                     
 24477                           ; BSR set to: 0
 24478                           ;encoder.c: 63: return 10;
 24479                           
 24480                           ; BSR set to: 0
 24481  013DD8  0E00               	movlw	0
 24482  013DDA  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24483  013DDC  0E0A               	movlw	10
 24484  013DDE  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24485                           
 24486                           ; BSR set to: 0
 24487  013DE0  0012               	return	
 24488  013DE2                     
 24489                           ; BSR set to: 0
 24490                           ;encoder.c: 65: return 1;
 24491                           
 24492                           ; BSR set to: 0
 24493  013DE2  0E00               	movlw	0
 24494  013DE4  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24495  013DE6  0E01               	movlw	1
 24496  013DE8  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24497                           
 24498                           ; BSR set to: 0
 24499  013DEA  0012               	return	
 24500  013DEC                     
 24501                           ; BSR set to: 0
 24502                           ;encoder.c: 67: return 1000;
 24503                           
 24504                           ; BSR set to: 0
 24505  013DEC  0E03               	movlw	3
 24506  013DEE  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24507  013DF0  0EE8               	movlw	232
 24508  013DF2  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24509                           
 24510                           ; BSR set to: 0
 24511  013DF4  0012               	return	
 24512  013DF6                     
 24513                           ; BSR set to: 0
 24514                           ;encoder.c: 69: return 100;
 24515                           
 24516                           ; BSR set to: 0
 24517  013DF6  0E00               	movlw	0
 24518  013DF8  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24519  013DFA  0E64               	movlw	100
 24520  013DFC  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24521                           
 24522                           ; BSR set to: 0
 24523                           ;encoder.c: 70: }
 24524                           
 24525                           ; BSR set to: 0
 24526  013DFE  0012               	return	
 24527  013E00                     l2564:
 24528                           
 24529                           ; BSR set to: 0
 24530  013E00  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 24531  013E04  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 24532                           
 24533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24534                           ; Switch size 1, requested type "space"
 24535                           ; Number of cases is 2, Range of values is 0 to 3
 24536                           ; switch strategies available:
 24537                           ; Name         Instructions Cycles
 24538                           ; simple_byte            7     4 (average)
 24539                           ;	Chosen strategy is simple_byte
 24540  013E08  0100               	movlb	0	; () banked
 24541  013E0A  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 24542  013E0C  0A00               	xorlw	0	; case 0
 24543  013E0E  B4D8               	btfsc	status,2,c
 24544  013E10  D004               	goto	l19173
 24545  013E12  0A03               	xorlw	3	; case 3
 24546  013E14  B4D8               	btfsc	status,2,c
 24547  013E16  D00C               	goto	l19175
 24548  013E18  D7EE               	goto	l2570
 24549  013E1A                     l19173:
 24550                           
 24551                           ; BSR set to: 0
 24552                           ; Switch size 1, requested type "space"
 24553                           ; Number of cases is 3, Range of values is 1 to 100
 24554                           ; switch strategies available:
 24555                           ; Name         Instructions Cycles
 24556                           ; simple_byte           10     6 (average)
 24557                           ;	Chosen strategy is simple_byte
 24558  013E1A  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24559  013E1C  0A01               	xorlw	1	; case 1
 24560  013E1E  B4D8               	btfsc	status,2,c
 24561  013E20  D7E5               	goto	l2569
 24562  013E22  0A0B               	xorlw	11	; case 10
 24563  013E24  B4D8               	btfsc	status,2,c
 24564  013E26  D7DD               	goto	l2568
 24565  013E28  0A6E               	xorlw	110	; case 100
 24566  013E2A  B4D8               	btfsc	status,2,c
 24567  013E2C  D7D5               	goto	l2567
 24568  013E2E  D7E3               	goto	l2570
 24569  013E30                     l19175:
 24570                           
 24571                           ; BSR set to: 0
 24572                           ; Switch size 1, requested type "space"
 24573                           ; Number of cases is 1, Range of values is 232 to 232
 24574                           ; switch strategies available:
 24575                           ; Name         Instructions Cycles
 24576                           ; simple_byte            4     3 (average)
 24577                           ;	Chosen strategy is simple_byte
 24578  013E30  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24579  013E32  0AE8               	xorlw	232	; case 232
 24580  013E34  B4D8               	btfsc	status,2,c
 24581  013E36  D7CA               	goto	l2565
 24582  013E38  D7DE               	goto	l2570
 24583  013E3A                     __end_of__encoder_next_arc_step_size:
 24584                           	opt stack 0
 24585                           tblptru	equ	0xFF8
 24586                           tblptrh	equ	0xFF7
 24587                           tblptrl	equ	0xFF6
 24588                           tablat	equ	0xFF5
 24589                           prodh	equ	0xFF4
 24590                           prodl	equ	0xFF3
 24591                           intcon	equ	0xFF2
 24592                           postinc0	equ	0xFEE
 24593                           wreg	equ	0xFE8
 24594                           indf1	equ	0xFE7
 24595                           postinc1	equ	0xFE6
 24596                           postdec1	equ	0xFE5
 24597                           plusw1	equ	0xFE3
 24598                           fsr1h	equ	0xFE2
 24599                           fsr1l	equ	0xFE1
 24600                           indf2	equ	0xFDF
 24601                           postinc2	equ	0xFDE
 24602                           postdec2	equ	0xFDD
 24603                           plusw2	equ	0xFDB
 24604                           fsr2h	equ	0xFDA
 24605                           fsr2l	equ	0xFD9
 24606                           status	equ	0xFD8
 24607                           
 24608 ;; *************** function __divide_jump_size_increment *****************
 24609 ;; Defined at:
 24610 ;;		line 73 in file "encoder.c"
 24611 ;; Parameters:    Size  Location     Type
 24612 ;;		None
 24613 ;; Auto vars:     Size  Location     Type
 24614 ;;		None
 24615 ;; Return value:  Size  Location     Type
 24616 ;;                  1    wreg      void 
 24617 ;; Registers used:
 24618 ;;		wreg, status,2, status,0
 24619 ;; Tracked objects:
 24620 ;;		On entry : 0/0
 24621 ;;		On exit  : 0/0
 24622 ;;		Unchanged: 0/0
 24623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24626 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24627 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24628 ;;Total ram usage:        1 bytes
 24629 ;; Hardware stack levels used:    1
 24630 ;; Hardware stack levels required when called:   10
 24631 ;; This function calls:
 24632 ;;		Nothing
 24633 ;; This function is called by:
 24634 ;;		_encoder_statemachine
 24635 ;; This function uses a non-reentrant model
 24636 ;;
 24637                           
 24638                           	psect	text101
 24639  014EDE                     __ptext101:
 24640                           	opt stack 0
 24641  014EDE                     __divide_jump_size_increment:
 24642                           	opt stack 19
 24643                           
 24644                           ;encoder.c: 75: ++os.divide_jump_size;
 24645                           
 24646                           ; BSR set to: 0
 24647                           ;incstack = 0
 24648  014EDE  0101               	movlb	1	; () banked
 24649  014EE0  4B89               	infsnz	(_os+24)& (0+255),f,b	;volatile
 24650  014EE2  2B8A               	incf	(_os+25)& (0+255),f,b	;volatile
 24651                           
 24652                           ; BSR set to: 1
 24653                           ;encoder.c: 76: if(os.divide_jump_size==0)
 24654  014EE4  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24655  014EE6  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24656  014EE8  A4D8               	btfss	status,2,c
 24657  014EEA  D004               	goto	l2574
 24658                           
 24659                           ; BSR set to: 1
 24660                           ;encoder.c: 77: os.divide_jump_size = 1;
 24661  014EEC  0E00               	movlw	0
 24662  014EEE  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24663  014EF0  0E01               	movlw	1
 24664  014EF2  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24665  014EF4                     l2574:
 24666                           
 24667                           ; BSR set to: 1
 24668                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 24669                           
 24670                           ; BSR set to: 1
 24671  014EF4  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 24672  014EF6  5D89               	subwf	(_os+24)& (0+255),w,b	;volatile
 24673  014EF8  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24674  014EFA  0A80               	xorlw	128
 24675  014EFC  0100               	movlb	0	; () banked
 24676  014EFE  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 24677  014F00  0101               	movlb	1	; () banked
 24678  014F02  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 24679  014F04  0A80               	xorlw	128
 24680  014F06  0100               	movlb	0	; () banked
 24681  014F08  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 24682  014F0A  A0D8               	btfss	status,0,c
 24683  014F0C  0012               	return	
 24684                           
 24685                           ; BSR set to: 0
 24686                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 24687  014F0E  0EFF               	movlw	255
 24688  014F10  0101               	movlb	1	; () banked
 24689  014F12  2584               	addwf	(_os+19)& (0+255),w,b	;volatile
 24690  014F14  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24691  014F16  0EFF               	movlw	255
 24692  014F18  2185               	addwfc	(_os+20)& (0+255),w,b	;volatile
 24693  014F1A  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24694  014F1C  0012               	return	
 24695  014F1E                     __end_of__divide_jump_size_increment:
 24696                           	opt stack 0
 24697                           tblptru	equ	0xFF8
 24698                           tblptrh	equ	0xFF7
 24699                           tblptrl	equ	0xFF6
 24700                           tablat	equ	0xFF5
 24701                           prodh	equ	0xFF4
 24702                           prodl	equ	0xFF3
 24703                           intcon	equ	0xFF2
 24704                           postinc0	equ	0xFEE
 24705                           wreg	equ	0xFE8
 24706                           indf1	equ	0xFE7
 24707                           postinc1	equ	0xFE6
 24708                           postdec1	equ	0xFE5
 24709                           plusw1	equ	0xFE3
 24710                           fsr1h	equ	0xFE2
 24711                           fsr1l	equ	0xFE1
 24712                           indf2	equ	0xFDF
 24713                           postinc2	equ	0xFDE
 24714                           postdec2	equ	0xFDD
 24715                           plusw2	equ	0xFDB
 24716                           fsr2h	equ	0xFDA
 24717                           fsr2l	equ	0xFD9
 24718                           status	equ	0xFD8
 24719                           
 24720 ;; *************** function __divide_jump_size_decrement *****************
 24721 ;; Defined at:
 24722 ;;		line 82 in file "encoder.c"
 24723 ;; Parameters:    Size  Location     Type
 24724 ;;		None
 24725 ;; Auto vars:     Size  Location     Type
 24726 ;;		None
 24727 ;; Return value:  Size  Location     Type
 24728 ;;                  1    wreg      void 
 24729 ;; Registers used:
 24730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24731 ;; Tracked objects:
 24732 ;;		On entry : 0/0
 24733 ;;		On exit  : 0/0
 24734 ;;		Unchanged: 0/0
 24735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24738 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24739 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24740 ;;Total ram usage:        3 bytes
 24741 ;; Hardware stack levels used:    1
 24742 ;; Hardware stack levels required when called:   10
 24743 ;; This function calls:
 24744 ;;		Nothing
 24745 ;; This function is called by:
 24746 ;;		_encoder_statemachine
 24747 ;; This function uses a non-reentrant model
 24748 ;;
 24749                           
 24750                           	psect	text102
 24751  013EA8                     __ptext102:
 24752                           	opt stack 0
 24753  013EA8                     __divide_jump_size_decrement:
 24754                           	opt stack 19
 24755                           
 24756                           ;encoder.c: 84: --os.divide_jump_size;
 24757                           
 24758                           ;incstack = 0
 24759  013EA8  0101               	movlb	1	; () banked
 24760  013EAA  0789               	decf	(_os+24)& (0+255),f,b	;volatile
 24761  013EAC  A0D8               	btfss	status,0,c
 24762  013EAE  078A               	decf	(_os+25)& (0+255),f,b	;volatile
 24763                           
 24764                           ; BSR set to: 1
 24765                           ;encoder.c: 85: if(os.divide_jump_size==0)
 24766  013EB0  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24767  013EB2  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24768  013EB4  A4D8               	btfss	status,2,c
 24769  013EB6  D002               	goto	l2579
 24770                           
 24771                           ; BSR set to: 1
 24772                           ;encoder.c: 86: os.divide_jump_size = -1;
 24773  013EB8  6989               	setf	(_os+24)& (0+255),b	;volatile
 24774  013EBA  698A               	setf	(_os+25)& (0+255),b	;volatile
 24775  013EBC                     l2579:
 24776                           
 24777                           ; BSR set to: 1
 24778                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 24779                           
 24780                           ; BSR set to: 1
 24781  013EBC  EE21  F084         	lfsr	2,_os+19	;volatile
 24782  013EC0  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24783  013EC4  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24784  013EC8  0100               	movlb	0	; () banked
 24785  013ECA  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24786  013ECC  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24787  013ECE  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24788  013ED0  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24789  013ED2  0101               	movlb	1	; () banked
 24790  013ED4  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24791  013ED6  0100               	movlb	0	; () banked
 24792  013ED8  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 24793  013EDA  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24794  013EDC  0A80               	xorlw	128
 24795  013EDE  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 24796  013EE0  0101               	movlb	1	; () banked
 24797  013EE2  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24798  013EE4  0A80               	xorlw	128
 24799  013EE6  0100               	movlb	0	; () banked
 24800  013EE8  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 24801  013EEA  A0D8               	btfss	status,0,c
 24802  013EEC  0012               	return	
 24803                           
 24804                           ; BSR set to: 0
 24805                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 24806  013EEE  EE21  F084         	lfsr	2,_os+19	;volatile
 24807  013EF2  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24808  013EF6  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24809  013EFA  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24810  013EFC  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24811  013EFE  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24812  013F00  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24813  013F02  0E01               	movlw	1
 24814  013F04  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 24815  013F06  0101               	movlb	1	; () banked
 24816  013F08  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24817  013F0A  0E00               	movlw	0
 24818  013F0C  0100               	movlb	0	; () banked
 24819  013F0E  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24820  013F10  0101               	movlb	1	; () banked
 24821  013F12  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24822  013F14  0012               	return	
 24823  013F16                     __end_of__divide_jump_size_decrement:
 24824                           	opt stack 0
 24825                           tblptru	equ	0xFF8
 24826                           tblptrh	equ	0xFF7
 24827                           tblptrl	equ	0xFF6
 24828                           tablat	equ	0xFF5
 24829                           prodh	equ	0xFF4
 24830                           prodl	equ	0xFF3
 24831                           intcon	equ	0xFF2
 24832                           postinc0	equ	0xFEE
 24833                           wreg	equ	0xFE8
 24834                           indf1	equ	0xFE7
 24835                           postinc1	equ	0xFE6
 24836                           postdec1	equ	0xFE5
 24837                           plusw1	equ	0xFE3
 24838                           fsr1h	equ	0xFE2
 24839                           fsr1l	equ	0xFE1
 24840                           indf2	equ	0xFDF
 24841                           postinc2	equ	0xFDE
 24842                           postdec2	equ	0xFDD
 24843                           plusw2	equ	0xFDB
 24844                           fsr2h	equ	0xFDA
 24845                           fsr2l	equ	0xFD9
 24846                           status	equ	0xFD8
 24847                           
 24848 ;; *************** function _display_prepare *****************
 24849 ;; Defined at:
 24850 ;;		line 278 in file "display.c"
 24851 ;; Parameters:    Size  Location     Type
 24852 ;;		None
 24853 ;; Auto vars:     Size  Location     Type
 24854 ;;  temp           10   94[BANK0 ] unsigned char [10]
 24855 ;;  cntr            1  105[BANK0 ] unsigned char 
 24856 ;;  space           1  104[BANK0 ] unsigned char 
 24857 ;; Return value:  Size  Location     Type
 24858 ;;                  1    wreg      void 
 24859 ;; Registers used:
 24860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24861 ;; Tracked objects:
 24862 ;;		On entry : 0/0
 24863 ;;		On exit  : 0/0
 24864 ;;		Unchanged: 0/0
 24865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24867 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24868 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24869 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24870 ;;Total ram usage:       14 bytes
 24871 ;; Hardware stack levels used:    1
 24872 ;; Hardware stack levels required when called:   15
 24873 ;; This function calls:
 24874 ;;		__display_clear
 24875 ;;		__display_itoa
 24876 ;;		__display_itoa_long
 24877 ;;		__display_padded_itoa
 24878 ;;		__display_signed_itoa
 24879 ;;		_memcpy
 24880 ;;		_motor_speed_from_index
 24881 ;;		_strlen
 24882 ;; This function is called by:
 24883 ;;		_main
 24884 ;; This function uses a non-reentrant model
 24885 ;;
 24886                           
 24887                           	psect	text103
 24888  00A330                     __ptext103:
 24889                           	opt stack 0
 24890  00A330                     _display_prepare:
 24891                           	opt stack 15
 24892                           
 24893                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 24894                           
 24895                           ;incstack = 0
 24896  00A330  EF8E  F057         	goto	l1376
 24897  00A334                     
 24898                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 24899  00A334  0E34               	movlw	low _display_content
 24900  00A336  0100               	movlb	0	; () banked
 24901  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 24902  00A33A  0E02               	movlw	high _display_content
 24903  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24904  00A33E  0E6E               	movlw	low _dc_main
 24905  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 24906  00A342  0EA0               	movlw	high _dc_main
 24907  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24908  00A346  0E00               	movlw	0
 24909  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24910  00A34A  0E50               	movlw	80
 24911  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 24912  00A34E  EC57  F0A1         	call	_memcpy	;wreg free
 24913                           
 24914                           ;display.c: 289: switch(os.displayState)
 24915  00A352  D00F               	goto	l1378
 24916  00A354                     
 24917                           ;display.c: 292: display_content[1][0] = '>';
 24918  00A354  0E3E               	movlw	62
 24919  00A356  0102               	movlb	2	; () banked
 24920  00A358  6F48               	movwf	(_display_content+20)& (0+255),b
 24921                           
 24922                           ;display.c: 293: break;
 24923  00A35A  EFBC  F057         	goto	l1385
 24924  00A35E                     
 24925                           ;display.c: 295: display_content[1][9] = '>';
 24926                           
 24927                           ; BSR set to: 2
 24928  00A35E  0E3E               	movlw	62
 24929  00A360  0102               	movlb	2	; () banked
 24930  00A362  6F51               	movwf	(_display_content+29)& (0+255),b
 24931                           
 24932                           ;display.c: 296: break;
 24933  00A364  EFBC  F057         	goto	l1385
 24934  00A368                     
 24935                           ;display.c: 301: display_content[2][9] = '>';
 24936                           
 24937                           ; BSR set to: 2
 24938  00A368  0E3E               	movlw	62
 24939  00A36A  0102               	movlb	2	; () banked
 24940  00A36C  6F65               	movwf	(_display_content+49)& (0+255),b
 24941                           
 24942                           ;display.c: 302: break;
 24943  00A36E  EFBC  F057         	goto	l1385
 24944  00A372                     l1378:
 24945                           
 24946                           ; BSR set to: 2
 24947  00A372  0101               	movlb	1	; () banked
 24948  00A374  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24949                           
 24950                           ; Switch size 1, requested type "space"
 24951                           ; Number of cases is 5, Range of values is 1 to 5
 24952                           ; switch strategies available:
 24953                           ; Name         Instructions Cycles
 24954                           ; simple_byte           16     9 (average)
 24955                           ;	Chosen strategy is simple_byte
 24956  00A376  0A01               	xorlw	1	; case 1
 24957  00A378  B4D8               	btfsc	status,2,c
 24958  00A37A  D7EC               	goto	l1379
 24959  00A37C  0A03               	xorlw	3	; case 2
 24960  00A37E  B4D8               	btfsc	status,2,c
 24961  00A380  D7EE               	goto	l1381
 24962  00A382  0A01               	xorlw	1	; case 3
 24963  00A384  B4D8               	btfsc	status,2,c
 24964  00A386  D067               	goto	l1398
 24965  00A388  0A07               	xorlw	7	; case 4
 24966  00A38A  B4D8               	btfsc	status,2,c
 24967  00A38C  D7ED               	goto	l1383
 24968  00A38E  0A01               	xorlw	1	; case 5
 24969  00A390  D072               	goto	L91
 24970  00A392                     
 24971                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 24972                           
 24973                           ; BSR set to: 1
 24974  00A392  0E34               	movlw	low _display_content
 24975  00A394  0100               	movlb	0	; () banked
 24976  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 24977  00A398  0E02               	movlw	high _display_content
 24978  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24979  00A39C  0E1E               	movlw	low _dc_setup1
 24980  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 24981  00A3A0  0EA0               	movlw	high _dc_setup1
 24982  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24983  00A3A4  0E00               	movlw	0
 24984  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24985  00A3A8  0E50               	movlw	80
 24986  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 24987  00A3AC  EC57  F0A1         	call	_memcpy	;wreg free
 24988                           
 24989                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 24990  00A3B0  C181  F095         	movff	_os+16,__display_itoa@value	;volatile
 24991  00A3B4  C182  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 24992  00A3B8  0E02               	movlw	2
 24993  00A3BA  0100               	movlb	0	; () banked
 24994  00A3BC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 24995  00A3BE  0EBE               	movlw	low display_prepare@temp
 24996  00A3C0  6F98               	movwf	__display_itoa@text& (0+255),b
 24997  00A3C2  0E00               	movlw	high display_prepare@temp
 24998  00A3C4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 24999  00A3C6  EC5E  F075         	call	__display_itoa	;wreg free
 25000                           
 25001                           ;display.c: 312: if(os.setup_step_size>999)
 25002  00A3CA  0EE8               	movlw	232
 25003  00A3CC  0101               	movlb	1	; () banked
 25004  00A3CE  5D81               	subwf	(_os+16)& (0+255),w,b	;volatile
 25005  00A3D0  0E03               	movlw	3
 25006  00A3D2  5982               	subwfb	(_os+17)& (0+255),w,b	;volatile
 25007  00A3D4  A0D8               	btfss	status,0,c
 25008  00A3D6  D002               	goto	l1387
 25009                           
 25010                           ; BSR set to: 1
 25011                           ;display.c: 313: space = 0;
 25012  00A3D8  0E00               	movlw	0
 25013  00A3DA  D001               	goto	L23
 25014  00A3DC                     l1387:
 25015                           
 25016                           ;display.c: 314: else;display.c: 315: space = 1;
 25017                           
 25018                           ; BSR set to: 0
 25019  00A3DC  0E01               	movlw	1
 25020  00A3DE                     L23:
 25021  00A3DE  0100               	movlb	0	; () banked
 25022  00A3E0  6FC8               	movwf	display_prepare@space& (0+255),b
 25023                           
 25024                           ; BSR set to: 0
 25025                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 25026  00A3E2  0E00               	movlw	0
 25027  00A3E4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25028  00A3E6  D018               	goto	l1389
 25029  00A3E8                     
 25030                           ; BSR set to: 0
 25031                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 25032                           
 25033                           ; BSR set to: 0
 25034  00A3E8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25035  00A3EA  0D01               	mullw	1
 25036  00A3EC  0EBE               	movlw	low display_prepare@temp
 25037  00A3EE  24F3               	addwf	prodl,w,c
 25038  00A3F0  6ED9               	movwf	fsr2l,c
 25039  00A3F2  0E00               	movlw	high display_prepare@temp
 25040  00A3F4  20F4               	addwfc	prodh,w,c
 25041  00A3F6  6EDA               	movwf	fsr2h,c
 25042  00A3F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25043  00A3FA  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25044  00A3FE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25045  00A400  27BC               	addwf	??_display_prepare& (0+255),f,b
 25046  00A402  0E00               	movlw	0
 25047  00A404  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25048  00A406  0E70               	movlw	low (_display_content+60)
 25049  00A408  25BC               	addwf	??_display_prepare& (0+255),w,b
 25050  00A40A  6EE1               	movwf	fsr1l,c
 25051  00A40C  0E02               	movlw	high (_display_content+60)
 25052  00A40E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25053  00A410  6EE2               	movwf	fsr1h,c
 25054  00A412  CFDF FFE7          	movff	indf2,indf1
 25055                           
 25056                           ; BSR set to: 0
 25057  00A416  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25058  00A418                     l1389:
 25059                           
 25060                           ; BSR set to: 0
 25061                           
 25062                           ; BSR set to: 0
 25063  00A418  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25064  00A41A  0D01               	mullw	1
 25065  00A41C  0EBE               	movlw	low display_prepare@temp
 25066  00A41E  24F3               	addwf	prodl,w,c
 25067  00A420  6ED9               	movwf	fsr2l,c
 25068  00A422  0E00               	movlw	high display_prepare@temp
 25069  00A424  20F4               	addwfc	prodh,w,c
 25070  00A426  6EDA               	movwf	fsr2h,c
 25071  00A428  50DF               	movf	indf2,w,c
 25072  00A42A  A4D8               	btfss	status,2,c
 25073  00A42C  D7DD               	goto	l1390
 25074                           
 25075                           ; BSR set to: 2
 25076                           
 25077                           ; BSR set to: 2
 25078                           ;display.c: 328: }
 25079                           
 25080                           ;display.c: 327: break;
 25081                           
 25082                           ;display.c: 326: display_content[3][12] = '>';
 25083                           
 25084                           ; BSR set to: 2
 25085                           
 25086                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 25087                           
 25088                           ;display.c: 324: break;
 25089                           
 25090                           ;display.c: 323: display_content[2][12] = '>';
 25091                           
 25092                           ; BSR set to: 0
 25093                           
 25094                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 25095                           
 25096                           ; BSR set to: 0
 25097                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 25098  00A42E  0101               	movlb	1	; () banked
 25099  00A430  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25100                           
 25101                           ; Switch size 1, requested type "space"
 25102                           ; Number of cases is 2, Range of values is 17 to 18
 25103                           ; switch strategies available:
 25104                           ; Name         Instructions Cycles
 25105                           ; simple_byte            7     4 (average)
 25106                           ;	Chosen strategy is simple_byte
 25107  00A432  0A11               	xorlw	17	; case 17
 25108  00A434  D08E               	goto	L29
 25109  00A436                     
 25110                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 25111                           
 25112                           ; BSR set to: 1
 25113  00A436  0E34               	movlw	low _display_content
 25114  00A438  0100               	movlb	0	; () banked
 25115  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 25116  00A43C  0E02               	movlw	high _display_content
 25117  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25118  00A440  0ECE               	movlw	low _dc_setup2
 25119  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 25120  00A444  0E9F               	movlw	high _dc_setup2
 25121  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25122  00A448  0E00               	movlw	0
 25123  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25124  00A44C  0E50               	movlw	80
 25125  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 25126  00A450  EC57  F0A1         	call	_memcpy	;wreg free
 25127                           
 25128                           ;display.c: 333: switch(os.displayState)
 25129  00A454  D00A               	goto	l1397
 25130  00A456                     l1398:
 25131                           
 25132                           ;display.c: 336: display_content[2][0] = '>';
 25133  00A456  0E3E               	movlw	62
 25134  00A458  0102               	movlb	2	; () banked
 25135  00A45A  6F5C               	movwf	(_display_content+40)& (0+255),b
 25136                           
 25137                           ;display.c: 337: break;
 25138  00A45C  EFBC  F057         	goto	l1385
 25139  00A460                     l1400:
 25140                           
 25141                           ;display.c: 339: display_content[3][0] = '>';
 25142                           
 25143                           ; BSR set to: 2
 25144  00A460  0E3E               	movlw	62
 25145  00A462  0102               	movlb	2	; () banked
 25146  00A464  6F70               	movwf	(_display_content+60)& (0+255),b
 25147                           
 25148                           ; BSR set to: 2
 25149                           ;display.c: 341: }
 25150                           
 25151                           ;display.c: 340: break;
 25152  00A466  EFBC  F057         	goto	l1385
 25153  00A46A                     l1397:
 25154                           
 25155                           ; BSR set to: 2
 25156  00A46A  0101               	movlb	1	; () banked
 25157  00A46C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25158                           
 25159                           ; Switch size 1, requested type "space"
 25160                           ; Number of cases is 2, Range of values is 33 to 34
 25161                           ; switch strategies available:
 25162                           ; Name         Instructions Cycles
 25163                           ; simple_byte            7     4 (average)
 25164                           ;	Chosen strategy is simple_byte
 25165  00A46E  0A21               	xorlw	33	; case 33
 25166  00A470  B4D8               	btfsc	status,2,c
 25167  00A472  D7F1               	goto	l1398
 25168  00A474  0A03               	xorlw	3	; case 34
 25169  00A476                     L91:
 25170  00A476  B4D8               	btfsc	status,2,c
 25171  00A478  D7F3               	goto	l1400
 25172                           
 25173                           ; BSR set to: 1
 25174                           ;display.c: 342: break;
 25175  00A47A  EFBC  F057         	goto	l1385
 25176  00A47E                     
 25177                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 25178                           
 25179                           ; BSR set to: 1
 25180  00A47E  0E34               	movlw	low _display_content
 25181  00A480  0100               	movlb	0	; () banked
 25182  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 25183  00A484  0E02               	movlw	high _display_content
 25184  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25185  00A488  0E7E               	movlw	low _dc_divide1
 25186  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 25187  00A48C  0E9F               	movlw	high _dc_divide1
 25188  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25189  00A490  0E00               	movlw	0
 25190  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25191  00A494  0E50               	movlw	80
 25192  00A496  6F64               	movwf	memcpy@n& (0+255),b
 25193  00A498  EC57  F0A1         	call	_memcpy	;wreg free
 25194                           
 25195                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 25196  00A49C  C186  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 25197  00A4A0  0100               	movlb	0	; () banked
 25198  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25199  00A4A4  0E03               	movlw	3
 25200  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25201  00A4A8  0EBE               	movlw	low display_prepare@temp
 25202  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25203  00A4AC  0E00               	movlw	high display_prepare@temp
 25204  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25205  00A4B0  EC59  F08F         	call	__display_padded_itoa	;wreg free
 25206                           
 25207                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 25208  00A4B4  0E00               	movlw	0
 25209  00A4B6  0100               	movlb	0	; () banked
 25210  00A4B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25211  00A4BA                     l18039:
 25212                           
 25213                           ; BSR set to: 0
 25214  00A4BA  0E02               	movlw	2
 25215  00A4BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25216  00A4BE  D001               	goto	l1402
 25217  00A4C0  D014               	goto	u18000
 25218  00A4C2                     l1402:
 25219                           
 25220                           ; BSR set to: 0
 25221                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 25222                           
 25223                           ; BSR set to: 0
 25224  00A4C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25225  00A4C4  0D01               	mullw	1
 25226  00A4C6  0EBE               	movlw	low display_prepare@temp
 25227  00A4C8  24F3               	addwf	prodl,w,c
 25228  00A4CA  6ED9               	movwf	fsr2l,c
 25229  00A4CC  0E00               	movlw	high display_prepare@temp
 25230  00A4CE  20F4               	addwfc	prodh,w,c
 25231  00A4D0  6EDA               	movwf	fsr2h,c
 25232  00A4D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25233  00A4D4  0D01               	mullw	1
 25234  00A4D6  0E5C               	movlw	low (_display_content+40)
 25235  00A4D8  24F3               	addwf	prodl,w,c
 25236  00A4DA  6EE1               	movwf	fsr1l,c
 25237  00A4DC  0E02               	movlw	high (_display_content+40)
 25238  00A4DE  20F4               	addwfc	prodh,w,c
 25239  00A4E0  6EE2               	movwf	fsr1h,c
 25240  00A4E2  CFDF FFE7          	movff	indf2,indf1
 25241                           
 25242                           ; BSR set to: 0
 25243  00A4E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25244  00A4E8  D7E8               	goto	l18039
 25245  00A4EA                     u18000:
 25246                           
 25247                           ; BSR set to: 0
 25248                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 25249                           
 25250                           ; BSR set to: 0
 25251  00A4EA  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25252  00A4EE  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25253  00A4F2  0E04               	movlw	4
 25254  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25255  00A4F6  0EBE               	movlw	low display_prepare@temp
 25256  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25257  00A4FA  0E00               	movlw	high display_prepare@temp
 25258  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25259  00A4FE  EC59  F08F         	call	__display_padded_itoa	;wreg free
 25260                           
 25261                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 25262  00A502  0E00               	movlw	0
 25263  00A504  0100               	movlb	0	; () banked
 25264  00A506  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25265  00A508                     l18053:
 25266                           
 25267                           ; BSR set to: 0
 25268  00A508  0E03               	movlw	3
 25269  00A50A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25270  00A50C  D001               	goto	l1404
 25271  00A50E  D01E               	goto	l1406
 25272  00A510                     l1404:
 25273                           
 25274                           ; BSR set to: 0
 25275                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 25276                           
 25277                           ; BSR set to: 0
 25278  00A510  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25279  00A512  0D01               	mullw	1
 25280  00A514  0EBE               	movlw	low display_prepare@temp
 25281  00A516  24F3               	addwf	prodl,w,c
 25282  00A518  6ED9               	movwf	fsr2l,c
 25283  00A51A  0E00               	movlw	high display_prepare@temp
 25284  00A51C  20F4               	addwfc	prodh,w,c
 25285  00A51E  6EDA               	movwf	fsr2h,c
 25286  00A520  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25287  00A522  0D01               	mullw	1
 25288  00A524  0E70               	movlw	low (_display_content+60)
 25289  00A526  24F3               	addwf	prodl,w,c
 25290  00A528  6EE1               	movwf	fsr1l,c
 25291  00A52A  0E02               	movlw	high (_display_content+60)
 25292  00A52C  20F4               	addwfc	prodh,w,c
 25293  00A52E  6EE2               	movwf	fsr1h,c
 25294  00A530  CFDF FFE7          	movff	indf2,indf1
 25295                           
 25296                           ; BSR set to: 0
 25297  00A534  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25298  00A536  D7E8               	goto	l18053
 25299  00A538                     
 25300                           ;display.c: 361: display_content[2][12] = '>';
 25301                           
 25302                           ; BSR set to: 0
 25303  00A538  0E3E               	movlw	62
 25304  00A53A  0102               	movlb	2	; () banked
 25305  00A53C  6F68               	movwf	(_display_content+52)& (0+255),b
 25306                           
 25307                           ;display.c: 362: break;
 25308  00A53E  EFBC  F057         	goto	l1385
 25309  00A542                     
 25310                           ;display.c: 364: display_content[3][12] = '>';
 25311                           
 25312                           ; BSR set to: 2
 25313  00A542  0E3E               	movlw	62
 25314  00A544  0102               	movlb	2	; () banked
 25315  00A546  6F7C               	movwf	(_display_content+72)& (0+255),b
 25316                           
 25317                           ; BSR set to: 2
 25318                           ;display.c: 366: }
 25319                           
 25320                           ;display.c: 365: break;
 25321  00A548  EFBC  F057         	goto	l1385
 25322  00A54C                     l1406:
 25323                           
 25324                           ; BSR set to: 2
 25325  00A54C  0101               	movlb	1	; () banked
 25326  00A54E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25327                           
 25328                           ; Switch size 1, requested type "space"
 25329                           ; Number of cases is 2, Range of values is 49 to 50
 25330                           ; switch strategies available:
 25331                           ; Name         Instructions Cycles
 25332                           ; simple_byte            7     4 (average)
 25333                           ;	Chosen strategy is simple_byte
 25334  00A550  0A31               	xorlw	49	; case 49
 25335  00A552                     L29:
 25336  00A552  B4D8               	btfsc	status,2,c
 25337  00A554  D7F1               	goto	l1407
 25338  00A556  0A03               	xorlw	3	; case 50
 25339  00A558  B4D8               	btfsc	status,2,c
 25340  00A55A  D7F3               	goto	l1409
 25341                           
 25342                           ; BSR set to: 1
 25343                           ;display.c: 367: break;
 25344  00A55C  EFBC  F057         	goto	l1385
 25345  00A560                     
 25346                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 25347                           
 25348                           ; BSR set to: 1
 25349  00A560  0E34               	movlw	low _display_content
 25350  00A562  0100               	movlb	0	; () banked
 25351  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 25352  00A566  0E02               	movlw	high _display_content
 25353  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25354  00A56A  0E2E               	movlw	low _dc_divide2
 25355  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 25356  00A56E  0E9F               	movlw	high _dc_divide2
 25357  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25358  00A572  0E00               	movlw	0
 25359  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25360  00A576  0E50               	movlw	80
 25361  00A578  6F64               	movwf	memcpy@n& (0+255),b
 25362  00A57A  EC57  F0A1         	call	_memcpy	;wreg free
 25363                           
 25364                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 25365  00A57E  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25366  00A582  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25367  00A586  0E00               	movlw	0
 25368  00A588  0100               	movlb	0	; () banked
 25369  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25370  00A58C  0EBE               	movlw	low display_prepare@temp
 25371  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25372  00A590  0E00               	movlw	high display_prepare@temp
 25373  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25374  00A594  EC59  F08F         	call	__display_padded_itoa	;wreg free
 25375                           
 25376                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 25377  00A598  0E00               	movlw	0
 25378  00A59A  0100               	movlb	0	; () banked
 25379  00A59C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25380  00A59E  D018               	goto	l1411
 25381  00A5A0                     
 25382                           ; BSR set to: 0
 25383                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 25384                           
 25385                           ; BSR set to: 0
 25386  00A5A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25387  00A5A2  0D01               	mullw	1
 25388  00A5A4  0EBE               	movlw	low display_prepare@temp
 25389  00A5A6  24F3               	addwf	prodl,w,c
 25390  00A5A8  6ED9               	movwf	fsr2l,c
 25391  00A5AA  0E00               	movlw	high display_prepare@temp
 25392  00A5AC  20F4               	addwfc	prodh,w,c
 25393  00A5AE  6EDA               	movwf	fsr2h,c
 25394  00A5B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25395  00A5B2  6FBC               	movwf	??_display_prepare& (0+255),b
 25396  00A5B4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25397  00A5B6  0E08               	movlw	8
 25398  00A5B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 25399  00A5BA  0E00               	movlw	0
 25400  00A5BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25401  00A5BE  0E34               	movlw	low _display_content
 25402  00A5C0  25BC               	addwf	??_display_prepare& (0+255),w,b
 25403  00A5C2  6EE1               	movwf	fsr1l,c
 25404  00A5C4  0E02               	movlw	high _display_content
 25405  00A5C6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25406  00A5C8  6EE2               	movwf	fsr1h,c
 25407  00A5CA  CFDF FFE7          	movff	indf2,indf1
 25408                           
 25409                           ; BSR set to: 0
 25410  00A5CE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25411  00A5D0                     l1411:
 25412                           
 25413                           ; BSR set to: 0
 25414                           
 25415                           ; BSR set to: 0
 25416  00A5D0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25417  00A5D2  0D01               	mullw	1
 25418  00A5D4  0EBE               	movlw	low display_prepare@temp
 25419  00A5D6  24F3               	addwf	prodl,w,c
 25420  00A5D8  6ED9               	movwf	fsr2l,c
 25421  00A5DA  0E00               	movlw	high display_prepare@temp
 25422  00A5DC  20F4               	addwfc	prodh,w,c
 25423  00A5DE  6EDA               	movwf	fsr2h,c
 25424  00A5E0  50DF               	movf	indf2,w,c
 25425  00A5E2  A4D8               	btfss	status,2,c
 25426  00A5E4  D7DD               	goto	l1412
 25427                           
 25428                           ; BSR set to: 0
 25429                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 25430                           
 25431                           ; BSR set to: 0
 25432  00A5E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25433  00A5E8  6FBC               	movwf	??_display_prepare& (0+255),b
 25434  00A5EA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25435  00A5EC  0E08               	movlw	8
 25436  00A5EE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25437  00A5F0  0E00               	movlw	0
 25438  00A5F2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25439  00A5F4  0E34               	movlw	low _display_content
 25440  00A5F6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25441  00A5F8  6ED9               	movwf	fsr2l,c
 25442  00A5FA  0E02               	movlw	high _display_content
 25443  00A5FC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25444  00A5FE  6EDA               	movwf	fsr2h,c
 25445  00A600  0E2C               	movlw	44
 25446  00A602  6EDF               	movwf	indf2,c
 25447                           
 25448                           ; BSR set to: 0
 25449                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25450  00A604  0101               	movlb	1	; () banked
 25451  00A606  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 25452  00A608  A4D8               	btfss	status,2,c
 25453  00A60A  D024               	goto	l1414
 25454                           
 25455                           ; BSR set to: 1
 25456                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 25457  00A60C  0100               	movlb	0	; () banked
 25458  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25459  00A610  6FBC               	movwf	??_display_prepare& (0+255),b
 25460  00A612  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25461  00A614  0E0A               	movlw	10
 25462  00A616  27BC               	addwf	??_display_prepare& (0+255),f,b
 25463  00A618  0E00               	movlw	0
 25464  00A61A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25465  00A61C  0E34               	movlw	low _display_content
 25466  00A61E  25BC               	addwf	??_display_prepare& (0+255),w,b
 25467  00A620  6ED9               	movwf	fsr2l,c
 25468  00A622  0E02               	movlw	high _display_content
 25469  00A624  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25470  00A626  6EDA               	movwf	fsr2h,c
 25471  00A628  0E43               	movlw	67
 25472  00A62A  6EDF               	movwf	indf2,c
 25473                           
 25474                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 25475  00A62C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25476  00A62E  6FBC               	movwf	??_display_prepare& (0+255),b
 25477  00A630  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25478  00A632  0E0B               	movlw	11
 25479  00A634  27BC               	addwf	??_display_prepare& (0+255),f,b
 25480  00A636  0E00               	movlw	0
 25481  00A638  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25482  00A63A  0E34               	movlw	low _display_content
 25483  00A63C  25BC               	addwf	??_display_prepare& (0+255),w,b
 25484  00A63E  6ED9               	movwf	fsr2l,c
 25485  00A640  0E02               	movlw	high _display_content
 25486  00A642  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25487  00A644  6EDA               	movwf	fsr2h,c
 25488  00A646  0E43               	movlw	67
 25489  00A648  6EDF               	movwf	indf2,c
 25490                           
 25491                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 25492  00A64A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25493  00A64C  6FBC               	movwf	??_display_prepare& (0+255),b
 25494  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25495  00A650  0E0C               	movlw	12
 25496  00A652  D014               	goto	L30
 25497  00A654                     l1414:
 25498                           
 25499                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 25500                           
 25501                           ; BSR set to: 0
 25502  00A654  0100               	movlb	0	; () banked
 25503  00A656  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25504  00A658  6FBC               	movwf	??_display_prepare& (0+255),b
 25505  00A65A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25506  00A65C  0E0A               	movlw	10
 25507  00A65E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25508  00A660  0E00               	movlw	0
 25509  00A662  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25510  00A664  0E34               	movlw	low _display_content
 25511  00A666  25BC               	addwf	??_display_prepare& (0+255),w,b
 25512  00A668  6ED9               	movwf	fsr2l,c
 25513  00A66A  0E02               	movlw	high _display_content
 25514  00A66C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25515  00A66E  6EDA               	movwf	fsr2h,c
 25516  00A670  0E43               	movlw	67
 25517  00A672  6EDF               	movwf	indf2,c
 25518                           
 25519                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 25520  00A674  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25521  00A676  6FBC               	movwf	??_display_prepare& (0+255),b
 25522  00A678  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25523  00A67A  0E0B               	movlw	11
 25524  00A67C                     L30:
 25525  00A67C  27BC               	addwf	??_display_prepare& (0+255),f,b
 25526  00A67E  0E00               	movlw	0
 25527  00A680  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25528  00A682  0E34               	movlw	low _display_content
 25529  00A684  25BC               	addwf	??_display_prepare& (0+255),w,b
 25530  00A686  6ED9               	movwf	fsr2l,c
 25531  00A688  0E02               	movlw	high _display_content
 25532  00A68A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25533  00A68C  6EDA               	movwf	fsr2h,c
 25534  00A68E  0E57               	movlw	87
 25535  00A690  6EDF               	movwf	indf2,c
 25536                           
 25537                           ; BSR set to: 0
 25538                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 25539                           
 25540                           ; BSR set to: 0
 25541  00A692  C187  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25542  00A696  C188  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 25543  00A69A  0E00               	movlw	0
 25544  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25545  00A69E  0EBE               	movlw	low display_prepare@temp
 25546  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25547  00A6A2  0E00               	movlw	high display_prepare@temp
 25548  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25549  00A6A6  EC59  F08F         	call	__display_padded_itoa	;wreg free
 25550                           
 25551                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 25552  00A6AA  0E00               	movlw	0
 25553  00A6AC  0100               	movlb	0	; () banked
 25554  00A6AE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25555  00A6B0  D018               	goto	l1416
 25556  00A6B2                     
 25557                           ; BSR set to: 0
 25558                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 25559                           
 25560                           ; BSR set to: 0
 25561  00A6B2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25562  00A6B4  0D01               	mullw	1
 25563  00A6B6  0EBE               	movlw	low display_prepare@temp
 25564  00A6B8  24F3               	addwf	prodl,w,c
 25565  00A6BA  6ED9               	movwf	fsr2l,c
 25566  00A6BC  0E00               	movlw	high display_prepare@temp
 25567  00A6BE  20F4               	addwfc	prodh,w,c
 25568  00A6C0  6EDA               	movwf	fsr2h,c
 25569  00A6C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25570  00A6C4  6FBC               	movwf	??_display_prepare& (0+255),b
 25571  00A6C6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25572  00A6C8  0E05               	movlw	5
 25573  00A6CA  27BC               	addwf	??_display_prepare& (0+255),f,b
 25574  00A6CC  0E00               	movlw	0
 25575  00A6CE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25576  00A6D0  0E48               	movlw	low (_display_content+20)
 25577  00A6D2  25BC               	addwf	??_display_prepare& (0+255),w,b
 25578  00A6D4  6EE1               	movwf	fsr1l,c
 25579  00A6D6  0E02               	movlw	high (_display_content+20)
 25580  00A6D8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25581  00A6DA  6EE2               	movwf	fsr1h,c
 25582  00A6DC  CFDF FFE7          	movff	indf2,indf1
 25583                           
 25584                           ; BSR set to: 0
 25585  00A6E0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25586  00A6E2                     l1416:
 25587                           
 25588                           ; BSR set to: 0
 25589                           
 25590                           ; BSR set to: 0
 25591  00A6E2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25592  00A6E4  0D01               	mullw	1
 25593  00A6E6  0EBE               	movlw	low display_prepare@temp
 25594  00A6E8  24F3               	addwf	prodl,w,c
 25595  00A6EA  6ED9               	movwf	fsr2l,c
 25596  00A6EC  0E00               	movlw	high display_prepare@temp
 25597  00A6EE  20F4               	addwfc	prodh,w,c
 25598  00A6F0  6EDA               	movwf	fsr2h,c
 25599  00A6F2  50DF               	movf	indf2,w,c
 25600  00A6F4  A4D8               	btfss	status,2,c
 25601  00A6F6  D7DD               	goto	l1417
 25602                           
 25603                           ; BSR set to: 0
 25604                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 25605                           
 25606                           ; BSR set to: 0
 25607  00A6F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25608  00A6FA  6FBC               	movwf	??_display_prepare& (0+255),b
 25609  00A6FC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25610  00A6FE  0E06               	movlw	6
 25611  00A700  27BC               	addwf	??_display_prepare& (0+255),f,b
 25612  00A702  0E00               	movlw	0
 25613  00A704  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25614  00A706  0E48               	movlw	low (_display_content+20)
 25615  00A708  25BC               	addwf	??_display_prepare& (0+255),w,b
 25616  00A70A  6ED9               	movwf	fsr2l,c
 25617  00A70C  0E02               	movlw	high (_display_content+20)
 25618  00A70E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25619  00A710  6EDA               	movwf	fsr2h,c
 25620  00A712  0E28               	movlw	40
 25621  00A714  6EDF               	movwf	indf2,c
 25622                           
 25623                           ; BSR set to: 0
 25624                           ;display.c: 398: space = cntr + 7;
 25625  00A716  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25626  00A718  0F07               	addlw	7
 25627  00A71A  6FC8               	movwf	display_prepare@space& (0+255),b
 25628                           
 25629                           ; BSR set to: 0
 25630                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25631  00A71C  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25632  00A720  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25633  00A724  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25634  00A726  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25635  00A728  0E02               	movlw	2
 25636  00A72A  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25637  00A72C  0EBE               	movlw	low display_prepare@temp
 25638  00A72E  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25639  00A730  0E00               	movlw	high display_prepare@temp
 25640  00A732  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25641  00A734  EC16  F086         	call	__display_itoa_long	;wreg free
 25642                           
 25643                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 25644  00A738  0E00               	movlw	0
 25645  00A73A  0100               	movlb	0	; () banked
 25646  00A73C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25647  00A73E  D018               	goto	l1419
 25648  00A740                     
 25649                           ; BSR set to: 0
 25650                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 25651                           
 25652                           ; BSR set to: 0
 25653  00A740  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25654  00A742  0D01               	mullw	1
 25655  00A744  0EBE               	movlw	low display_prepare@temp
 25656  00A746  24F3               	addwf	prodl,w,c
 25657  00A748  6ED9               	movwf	fsr2l,c
 25658  00A74A  0E00               	movlw	high display_prepare@temp
 25659  00A74C  20F4               	addwfc	prodh,w,c
 25660  00A74E  6EDA               	movwf	fsr2h,c
 25661  00A750  51C8               	movf	display_prepare@space& (0+255),w,b
 25662  00A752  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25663  00A756  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25664  00A758  27BC               	addwf	??_display_prepare& (0+255),f,b
 25665  00A75A  0E00               	movlw	0
 25666  00A75C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25667  00A75E  0E48               	movlw	low (_display_content+20)
 25668  00A760  25BC               	addwf	??_display_prepare& (0+255),w,b
 25669  00A762  6EE1               	movwf	fsr1l,c
 25670  00A764  0E02               	movlw	high (_display_content+20)
 25671  00A766  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25672  00A768  6EE2               	movwf	fsr1h,c
 25673  00A76A  CFDF FFE7          	movff	indf2,indf1
 25674                           
 25675                           ; BSR set to: 0
 25676  00A76E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25677  00A770                     l1419:
 25678                           
 25679                           ; BSR set to: 0
 25680                           
 25681                           ; BSR set to: 0
 25682  00A770  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25683  00A772  0D01               	mullw	1
 25684  00A774  0EBE               	movlw	low display_prepare@temp
 25685  00A776  24F3               	addwf	prodl,w,c
 25686  00A778  6ED9               	movwf	fsr2l,c
 25687  00A77A  0E00               	movlw	high display_prepare@temp
 25688  00A77C  20F4               	addwfc	prodh,w,c
 25689  00A77E  6EDA               	movwf	fsr2h,c
 25690  00A780  50DF               	movf	indf2,w,c
 25691  00A782  A4D8               	btfss	status,2,c
 25692  00A784  D7DD               	goto	l1420
 25693                           
 25694                           ; BSR set to: 0
 25695                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 25696                           
 25697                           ; BSR set to: 0
 25698  00A786  51C8               	movf	display_prepare@space& (0+255),w,b
 25699  00A788  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25700  00A78C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25701  00A78E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25702  00A790  0E00               	movlw	0
 25703  00A792  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25704  00A794  0E48               	movlw	low (_display_content+20)
 25705  00A796  25BC               	addwf	??_display_prepare& (0+255),w,b
 25706  00A798  6ED9               	movwf	fsr2l,c
 25707  00A79A  0E02               	movlw	high (_display_content+20)
 25708  00A79C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25709  00A79E  6EDA               	movwf	fsr2h,c
 25710  00A7A0  0E01               	movlw	1
 25711  00A7A2  6EDF               	movwf	indf2,c
 25712                           
 25713                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 25714  00A7A4  51C8               	movf	display_prepare@space& (0+255),w,b
 25715  00A7A6  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25716  00A7AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25717  00A7AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 25718  00A7AE  0E00               	movlw	0
 25719  00A7B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25720  00A7B2  0E01               	movlw	1
 25721  00A7B4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25722  00A7B6  0E00               	movlw	0
 25723  00A7B8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25724  00A7BA  0E48               	movlw	low (_display_content+20)
 25725  00A7BC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25726  00A7BE  6ED9               	movwf	fsr2l,c
 25727  00A7C0  0E02               	movlw	high (_display_content+20)
 25728  00A7C2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25729  00A7C4  6EDA               	movwf	fsr2h,c
 25730  00A7C6  0E29               	movlw	41
 25731  00A7C8  6EDF               	movwf	indf2,c
 25732                           
 25733                           ; BSR set to: 0
 25734                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 25735  00A7CA  C189  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 25736  00A7CE  C18A  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 25737  00A7D2  0EBE               	movlw	low display_prepare@temp
 25738  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 25739  00A7D6  0E00               	movlw	high display_prepare@temp
 25740  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 25741  00A7DA  ECC7  F0A6         	call	__display_signed_itoa	;wreg free
 25742                           
 25743                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 25744  00A7DE  0E00               	movlw	0
 25745  00A7E0  0100               	movlb	0	; () banked
 25746  00A7E2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25747  00A7E4  D018               	goto	l1422
 25748  00A7E6                     
 25749                           ; BSR set to: 0
 25750                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 25751                           
 25752                           ; BSR set to: 0
 25753  00A7E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25754  00A7E8  0D01               	mullw	1
 25755  00A7EA  0EBE               	movlw	low display_prepare@temp
 25756  00A7EC  24F3               	addwf	prodl,w,c
 25757  00A7EE  6ED9               	movwf	fsr2l,c
 25758  00A7F0  0E00               	movlw	high display_prepare@temp
 25759  00A7F2  20F4               	addwfc	prodh,w,c
 25760  00A7F4  6EDA               	movwf	fsr2h,c
 25761  00A7F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25762  00A7F8  6FBC               	movwf	??_display_prepare& (0+255),b
 25763  00A7FA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25764  00A7FC  0E0B               	movlw	11
 25765  00A7FE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25766  00A800  0E00               	movlw	0
 25767  00A802  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25768  00A804  0E5C               	movlw	low (_display_content+40)
 25769  00A806  25BC               	addwf	??_display_prepare& (0+255),w,b
 25770  00A808  6EE1               	movwf	fsr1l,c
 25771  00A80A  0E02               	movlw	high (_display_content+40)
 25772  00A80C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25773  00A80E  6EE2               	movwf	fsr1h,c
 25774  00A810  CFDF FFE7          	movff	indf2,indf1
 25775                           
 25776                           ; BSR set to: 0
 25777  00A814  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25778  00A816                     l1422:
 25779                           
 25780                           ; BSR set to: 0
 25781                           
 25782                           ; BSR set to: 0
 25783  00A816  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25784  00A818  0D01               	mullw	1
 25785  00A81A  0EBE               	movlw	low display_prepare@temp
 25786  00A81C  24F3               	addwf	prodl,w,c
 25787  00A81E  6ED9               	movwf	fsr2l,c
 25788  00A820  0E00               	movlw	high display_prepare@temp
 25789  00A822  20F4               	addwfc	prodh,w,c
 25790  00A824  6EDA               	movwf	fsr2h,c
 25791  00A826  50DF               	movf	indf2,w,c
 25792  00A828  B4D8               	btfsc	status,2,c
 25793  00A82A  D3A6               	goto	l1385
 25794  00A82C  D7DC               	goto	l1423
 25795  00A82E                     
 25796                           ; BSR set to: 0
 25797                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 25798                           
 25799                           ; BSR set to: 0
 25800  00A82E  0E34               	movlw	low _display_content
 25801  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 25802  00A832  0E02               	movlw	high _display_content
 25803  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25804  00A836  0EDE               	movlw	low _dc_arc1
 25805  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 25806  00A83A  0E9E               	movlw	high _dc_arc1
 25807  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25808  00A83E  0E00               	movlw	0
 25809  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25810  00A842  0E50               	movlw	80
 25811  00A844  6F64               	movwf	memcpy@n& (0+255),b
 25812  00A846  EC57  F0A1         	call	_memcpy	;wreg free
 25813                           
 25814                           ;display.c: 416: switch(os.displayState)
 25815  00A84A  D008               	goto	l1426
 25816  00A84C                     
 25817                           ;display.c: 419: display_content[2][12] = '>';
 25818  00A84C  0E3E               	movlw	62
 25819  00A84E  0102               	movlb	2	; () banked
 25820  00A850  6F68               	movwf	(_display_content+52)& (0+255),b
 25821                           
 25822                           ;display.c: 420: break;
 25823  00A852  D00C               	goto	l1428
 25824  00A854                     
 25825                           ;display.c: 422: display_content[3][12] = '>';
 25826                           
 25827                           ; BSR set to: 2
 25828  00A854  0E3E               	movlw	62
 25829  00A856  0102               	movlb	2	; () banked
 25830  00A858  6F7C               	movwf	(_display_content+72)& (0+255),b
 25831                           
 25832                           ; BSR set to: 2
 25833                           ;display.c: 424: }
 25834                           
 25835                           ;display.c: 423: break;
 25836  00A85A  D008               	goto	l1428
 25837  00A85C                     l1426:
 25838                           
 25839                           ; BSR set to: 2
 25840  00A85C  0101               	movlb	1	; () banked
 25841  00A85E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25842                           
 25843                           ; Switch size 1, requested type "space"
 25844                           ; Number of cases is 2, Range of values is 81 to 82
 25845                           ; switch strategies available:
 25846                           ; Name         Instructions Cycles
 25847                           ; simple_byte            7     4 (average)
 25848                           ;	Chosen strategy is simple_byte
 25849  00A860  0A51               	xorlw	81	; case 81
 25850  00A862  B4D8               	btfsc	status,2,c
 25851  00A864  D7F3               	goto	l1427
 25852  00A866  0A03               	xorlw	3	; case 82
 25853  00A868  B4D8               	btfsc	status,2,c
 25854  00A86A  D7F4               	goto	l1429
 25855  00A86C                     l1428:
 25856                           
 25857                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 25858                           
 25859                           ; BSR set to: 1
 25860  00A86C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 25861  00A870  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 25862  00A874  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 25863  00A878  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 25864  00A87C  0E02               	movlw	2
 25865  00A87E  0100               	movlb	0	; () banked
 25866  00A880  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25867  00A882  0EBE               	movlw	low display_prepare@temp
 25868  00A884  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25869  00A886  0E00               	movlw	high display_prepare@temp
 25870  00A888  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25871  00A88A  EC16  F086         	call	__display_itoa_long	;wreg free
 25872                           
 25873                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 25874  00A88E  0E00               	movlw	0
 25875  00A890  0100               	movlb	0	; () banked
 25876  00A892  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25877  00A894  D018               	goto	l1430
 25878  00A896                     
 25879                           ; BSR set to: 0
 25880                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 25881                           
 25882                           ; BSR set to: 0
 25883  00A896  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25884  00A898  0D01               	mullw	1
 25885  00A89A  0EBE               	movlw	low display_prepare@temp
 25886  00A89C  24F3               	addwf	prodl,w,c
 25887  00A89E  6ED9               	movwf	fsr2l,c
 25888  00A8A0  0E00               	movlw	high display_prepare@temp
 25889  00A8A2  20F4               	addwfc	prodh,w,c
 25890  00A8A4  6EDA               	movwf	fsr2h,c
 25891  00A8A6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25892  00A8A8  6FBC               	movwf	??_display_prepare& (0+255),b
 25893  00A8AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25894  00A8AC  0E0A               	movlw	10
 25895  00A8AE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25896  00A8B0  0E00               	movlw	0
 25897  00A8B2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25898  00A8B4  0E48               	movlw	low (_display_content+20)
 25899  00A8B6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25900  00A8B8  6EE1               	movwf	fsr1l,c
 25901  00A8BA  0E02               	movlw	high (_display_content+20)
 25902  00A8BC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25903  00A8BE  6EE2               	movwf	fsr1h,c
 25904  00A8C0  CFDF FFE7          	movff	indf2,indf1
 25905                           
 25906                           ; BSR set to: 0
 25907  00A8C4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25908  00A8C6                     l1430:
 25909                           
 25910                           ; BSR set to: 0
 25911                           
 25912                           ; BSR set to: 0
 25913  00A8C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25914  00A8C8  0D01               	mullw	1
 25915  00A8CA  0EBE               	movlw	low display_prepare@temp
 25916  00A8CC  24F3               	addwf	prodl,w,c
 25917  00A8CE  6ED9               	movwf	fsr2l,c
 25918  00A8D0  0E00               	movlw	high display_prepare@temp
 25919  00A8D2  20F4               	addwfc	prodh,w,c
 25920  00A8D4  6EDA               	movwf	fsr2h,c
 25921  00A8D6  50DF               	movf	indf2,w,c
 25922  00A8D8  A4D8               	btfss	status,2,c
 25923  00A8DA  D7DD               	goto	l1431
 25924                           
 25925                           ; BSR set to: 0
 25926                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 25927                           
 25928                           ; BSR set to: 0
 25929  00A8DC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25930  00A8DE  6FBC               	movwf	??_display_prepare& (0+255),b
 25931  00A8E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25932  00A8E2  0E0A               	movlw	10
 25933  00A8E4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25934  00A8E6  0E00               	movlw	0
 25935  00A8E8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25936  00A8EA  0E48               	movlw	low (_display_content+20)
 25937  00A8EC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25938  00A8EE  6ED9               	movwf	fsr2l,c
 25939  00A8F0  0E02               	movlw	high (_display_content+20)
 25940  00A8F2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25941  00A8F4  6EDA               	movwf	fsr2h,c
 25942  00A8F6  0E01               	movlw	1
 25943  00A8F8  6EDF               	movwf	indf2,c
 25944                           
 25945                           ; BSR set to: 0
 25946                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 25947  00A8FA  C18B  F095         	movff	_os+26,__display_itoa@value	;volatile
 25948  00A8FE  C18C  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 25949  00A902  0E02               	movlw	2
 25950  00A904  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25951  00A906  0EBE               	movlw	low display_prepare@temp
 25952  00A908  6F98               	movwf	__display_itoa@text& (0+255),b
 25953  00A90A  0E00               	movlw	high display_prepare@temp
 25954  00A90C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25955  00A90E  EC5E  F075         	call	__display_itoa	;wreg free
 25956                           
 25957                           ;display.c: 436: if(os.arc_step_size>999)
 25958  00A912  0EE8               	movlw	232
 25959  00A914  0101               	movlb	1	; () banked
 25960  00A916  5D8B               	subwf	(_os+26)& (0+255),w,b	;volatile
 25961  00A918  0E03               	movlw	3
 25962  00A91A  598C               	subwfb	(_os+27)& (0+255),w,b	;volatile
 25963  00A91C  A0D8               	btfss	status,0,c
 25964  00A91E  D002               	goto	l1433
 25965                           
 25966                           ; BSR set to: 1
 25967                           ;display.c: 437: space = 0;
 25968  00A920  0E00               	movlw	0
 25969  00A922  D001               	goto	L24
 25970  00A924                     l1433:
 25971                           
 25972                           ;display.c: 438: else;display.c: 439: space = 1;
 25973                           
 25974                           ; BSR set to: 0
 25975  00A924  0E01               	movlw	1
 25976  00A926                     L24:
 25977  00A926  0100               	movlb	0	; () banked
 25978  00A928  6FC8               	movwf	display_prepare@space& (0+255),b
 25979                           
 25980                           ; BSR set to: 0
 25981                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 25982  00A92A  0E00               	movlw	0
 25983  00A92C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25984  00A92E  D018               	goto	l1435
 25985  00A930                     
 25986                           ; BSR set to: 0
 25987                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 25988                           
 25989                           ; BSR set to: 0
 25990  00A930  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25991  00A932  0D01               	mullw	1
 25992  00A934  0EBE               	movlw	low display_prepare@temp
 25993  00A936  24F3               	addwf	prodl,w,c
 25994  00A938  6ED9               	movwf	fsr2l,c
 25995  00A93A  0E00               	movlw	high display_prepare@temp
 25996  00A93C  20F4               	addwfc	prodh,w,c
 25997  00A93E  6EDA               	movwf	fsr2h,c
 25998  00A940  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25999  00A942  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26000  00A946  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26001  00A948  27BC               	addwf	??_display_prepare& (0+255),f,b
 26002  00A94A  0E00               	movlw	0
 26003  00A94C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26004  00A94E  0E70               	movlw	low (_display_content+60)
 26005  00A950  25BC               	addwf	??_display_prepare& (0+255),w,b
 26006  00A952  6EE1               	movwf	fsr1l,c
 26007  00A954  0E02               	movlw	high (_display_content+60)
 26008  00A956  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26009  00A958  6EE2               	movwf	fsr1h,c
 26010  00A95A  CFDF FFE7          	movff	indf2,indf1
 26011                           
 26012                           ; BSR set to: 0
 26013  00A95E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26014  00A960                     l1435:
 26015                           
 26016                           ; BSR set to: 0
 26017                           
 26018                           ; BSR set to: 0
 26019  00A960  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26020  00A962  0D01               	mullw	1
 26021  00A964  0EBE               	movlw	low display_prepare@temp
 26022  00A966  24F3               	addwf	prodl,w,c
 26023  00A968  6ED9               	movwf	fsr2l,c
 26024  00A96A  0E00               	movlw	high display_prepare@temp
 26025  00A96C  20F4               	addwfc	prodh,w,c
 26026  00A96E  6EDA               	movwf	fsr2h,c
 26027  00A970  50DF               	movf	indf2,w,c
 26028  00A972  A4D8               	btfss	status,2,c
 26029  00A974  D7DD               	goto	l1436
 26030                           
 26031                           ; BSR set to: 0
 26032                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 26033                           
 26034                           ; BSR set to: 0
 26035  00A976  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26036  00A978  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26037  00A97C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26038  00A97E  27BC               	addwf	??_display_prepare& (0+255),f,b
 26039  00A980  0E00               	movlw	0
 26040  00A982  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26041  00A984  0E70               	movlw	low (_display_content+60)
 26042  00A986  25BC               	addwf	??_display_prepare& (0+255),w,b
 26043  00A988  6ED9               	movwf	fsr2l,c
 26044  00A98A  0E02               	movlw	high (_display_content+60)
 26045  00A98C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26046  00A98E  6EDA               	movwf	fsr2h,c
 26047  00A990  0E01               	movlw	1
 26048  00A992  D25B               	goto	L27
 26049  00A994                     
 26050                           ; BSR set to: 0
 26051                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 26052                           
 26053                           ; BSR set to: 0
 26054  00A994  0E34               	movlw	low _display_content
 26055  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 26056  00A998  0E02               	movlw	high _display_content
 26057  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26058  00A99C  0E8E               	movlw	low _dc_arc2
 26059  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 26060  00A9A0  0E9E               	movlw	high _dc_arc2
 26061  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26062  00A9A4  0E00               	movlw	0
 26063  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26064  00A9A8  0E50               	movlw	80
 26065  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 26066  00A9AC  EC57  F0A1         	call	_memcpy	;wreg free
 26067                           
 26068                           ;display.c: 450: switch(os.displayState)
 26069  00A9B0  D025               	goto	l1439
 26070  00A9B2                     
 26071                           ;display.c: 453: display_content[2][6] = 'W';
 26072  00A9B2  0E57               	movlw	87
 26073  00A9B4  0102               	movlb	2	; () banked
 26074  00A9B6  6F62               	movwf	(_display_content+46)& (0+255),b
 26075                           
 26076                           ;display.c: 454: display_content[2][7] = ' ';
 26077  00A9B8  0E20               	movlw	32
 26078  00A9BA  6F63               	movwf	(_display_content+47)& (0+255),b
 26079                           
 26080                           ;display.c: 455: break;
 26081  00A9BC  D027               	goto	l1441
 26082  00A9BE                     
 26083                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 26084                           
 26085                           ; BSR set to: 2
 26086  00A9BE  0E5C               	movlw	low (_display_content+40)
 26087  00A9C0  0100               	movlb	0	; () banked
 26088  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 26089  00A9C4  0E02               	movlw	high (_display_content+40)
 26090  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26091  00A9C8  0E14               	movlw	low STR_1
 26092  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 26093  00A9CC  0EA3               	movlw	high STR_1
 26094  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26095  00A9D0  0E00               	movlw	0
 26096  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26097  00A9D4  0E08               	movlw	8
 26098  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 26099  00A9D8  EC57  F0A1         	call	_memcpy	;wreg free
 26100                           
 26101                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 26102  00A9DC  0E70               	movlw	low (_display_content+60)
 26103  00A9DE  0100               	movlb	0	; () banked
 26104  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26105  00A9E2  0E02               	movlw	high (_display_content+60)
 26106  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26107  00A9E6  0E1D               	movlw	low STR_2
 26108  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26109  00A9EA  0EA3               	movlw	high STR_2
 26110  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26111  00A9EE  0E00               	movlw	0
 26112  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26113  00A9F2  0E06               	movlw	6
 26114  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26115  00A9F6  EC57  F0A1         	call	_memcpy	;wreg free
 26116                           
 26117                           ;display.c: 460: }
 26118                           
 26119                           ;display.c: 459: break;
 26120  00A9FA  D008               	goto	l1441
 26121  00A9FC                     l1439:
 26122  00A9FC  0101               	movlb	1	; () banked
 26123  00A9FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26124                           
 26125                           ; Switch size 1, requested type "space"
 26126                           ; Number of cases is 2, Range of values is 98 to 99
 26127                           ; switch strategies available:
 26128                           ; Name         Instructions Cycles
 26129                           ; simple_byte            7     4 (average)
 26130                           ;	Chosen strategy is simple_byte
 26131  00AA00  0A62               	xorlw	98	; case 98
 26132  00AA02  B4D8               	btfsc	status,2,c
 26133  00AA04  D7DC               	goto	l1442
 26134  00AA06  0A01               	xorlw	1	; case 99
 26135  00AA08  B4D8               	btfsc	status,2,c
 26136  00AA0A  D7D3               	goto	l1440
 26137  00AA0C                     l1441:
 26138                           
 26139                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 26140                           
 26141                           ; BSR set to: 1
 26142  00AA0C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 26143  00AA10  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 26144  00AA14  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 26145  00AA18  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 26146  00AA1C  0E02               	movlw	2
 26147  00AA1E  0100               	movlb	0	; () banked
 26148  00AA20  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26149  00AA22  0EBE               	movlw	low display_prepare@temp
 26150  00AA24  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26151  00AA26  0E00               	movlw	high display_prepare@temp
 26152  00AA28  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26153  00AA2A  EC16  F086         	call	__display_itoa_long	;wreg free
 26154                           
 26155                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 26156  00AA2E  0E00               	movlw	0
 26157  00AA30  0100               	movlb	0	; () banked
 26158  00AA32  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26159  00AA34  D018               	goto	l1443
 26160  00AA36                     
 26161                           ; BSR set to: 0
 26162                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 26163                           
 26164                           ; BSR set to: 0
 26165  00AA36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26166  00AA38  0D01               	mullw	1
 26167  00AA3A  0EBE               	movlw	low display_prepare@temp
 26168  00AA3C  24F3               	addwf	prodl,w,c
 26169  00AA3E  6ED9               	movwf	fsr2l,c
 26170  00AA40  0E00               	movlw	high display_prepare@temp
 26171  00AA42  20F4               	addwfc	prodh,w,c
 26172  00AA44  6EDA               	movwf	fsr2h,c
 26173  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26174  00AA48  6FBC               	movwf	??_display_prepare& (0+255),b
 26175  00AA4A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26176  00AA4C  0E0A               	movlw	10
 26177  00AA4E  27BC               	addwf	??_display_prepare& (0+255),f,b
 26178  00AA50  0E00               	movlw	0
 26179  00AA52  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26180  00AA54  0E34               	movlw	low _display_content
 26181  00AA56  25BC               	addwf	??_display_prepare& (0+255),w,b
 26182  00AA58  6EE1               	movwf	fsr1l,c
 26183  00AA5A  0E02               	movlw	high _display_content
 26184  00AA5C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26185  00AA5E  6EE2               	movwf	fsr1h,c
 26186  00AA60  CFDF FFE7          	movff	indf2,indf1
 26187                           
 26188                           ; BSR set to: 0
 26189  00AA64  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26190  00AA66                     l1443:
 26191                           
 26192                           ; BSR set to: 0
 26193                           
 26194                           ; BSR set to: 0
 26195  00AA66  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26196  00AA68  0D01               	mullw	1
 26197  00AA6A  0EBE               	movlw	low display_prepare@temp
 26198  00AA6C  24F3               	addwf	prodl,w,c
 26199  00AA6E  6ED9               	movwf	fsr2l,c
 26200  00AA70  0E00               	movlw	high display_prepare@temp
 26201  00AA72  20F4               	addwfc	prodh,w,c
 26202  00AA74  6EDA               	movwf	fsr2h,c
 26203  00AA76  50DF               	movf	indf2,w,c
 26204  00AA78  A4D8               	btfss	status,2,c
 26205  00AA7A  D7DD               	goto	l1444
 26206                           
 26207                           ; BSR set to: 0
 26208                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 26209                           
 26210                           ; BSR set to: 0
 26211  00AA7C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26212  00AA7E  6FBC               	movwf	??_display_prepare& (0+255),b
 26213  00AA80  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26214  00AA82  0E0A               	movlw	10
 26215  00AA84  27BC               	addwf	??_display_prepare& (0+255),f,b
 26216  00AA86  0E00               	movlw	0
 26217  00AA88  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26218  00AA8A  0E34               	movlw	low _display_content
 26219  00AA8C  25BC               	addwf	??_display_prepare& (0+255),w,b
 26220  00AA8E  6ED9               	movwf	fsr2l,c
 26221  00AA90  0E02               	movlw	high _display_content
 26222  00AA92  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26223  00AA94  6EDA               	movwf	fsr2h,c
 26224  00AA96  0E01               	movlw	1
 26225  00AA98  6EDF               	movwf	indf2,c
 26226                           
 26227                           ; BSR set to: 0
 26228                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26229  00AA9A  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26230  00AA9E  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26231  00AAA2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26232  00AAA4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26233  00AAA6  0E02               	movlw	2
 26234  00AAA8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26235  00AAAA  0EBE               	movlw	low display_prepare@temp
 26236  00AAAC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26237  00AAAE  0E00               	movlw	high display_prepare@temp
 26238  00AAB0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26239  00AAB2  EC16  F086         	call	__display_itoa_long	;wreg free
 26240                           
 26241                           ;display.c: 472: space = 6-strlen(temp);
 26242  00AAB6  0EBE               	movlw	low display_prepare@temp
 26243  00AAB8  0100               	movlb	0	; () banked
 26244  00AABA  6F60               	movwf	strlen@s& (0+255),b
 26245  00AABC  0E00               	movlw	high display_prepare@temp
 26246  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 26247  00AAC0  EC8F  F0A7         	call	_strlen	;wreg free
 26248  00AAC4  0100               	movlb	0	; () banked
 26249  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 26250  00AAC8  0800               	sublw	0
 26251  00AACA  0F06               	addlw	6
 26252  00AACC  6FC8               	movwf	display_prepare@space& (0+255),b
 26253                           
 26254                           ; BSR set to: 0
 26255                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 26256  00AACE  0E00               	movlw	0
 26257  00AAD0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26258  00AAD2  D01C               	goto	l1446
 26259  00AAD4                     
 26260                           ; BSR set to: 0
 26261                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 26262                           
 26263                           ; BSR set to: 0
 26264  00AAD4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26265  00AAD6  0D01               	mullw	1
 26266  00AAD8  0EBE               	movlw	low display_prepare@temp
 26267  00AADA  24F3               	addwf	prodl,w,c
 26268  00AADC  6ED9               	movwf	fsr2l,c
 26269  00AADE  0E00               	movlw	high display_prepare@temp
 26270  00AAE0  20F4               	addwfc	prodh,w,c
 26271  00AAE2  6EDA               	movwf	fsr2h,c
 26272  00AAE4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26273  00AAE6  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26274  00AAEA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26275  00AAEC  27BC               	addwf	??_display_prepare& (0+255),f,b
 26276  00AAEE  0E00               	movlw	0
 26277  00AAF0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26278  00AAF2  0E0D               	movlw	13
 26279  00AAF4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26280  00AAF6  0E00               	movlw	0
 26281  00AAF8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26282  00AAFA  0E48               	movlw	low (_display_content+20)
 26283  00AAFC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26284  00AAFE  6EE1               	movwf	fsr1l,c
 26285  00AB00  0E02               	movlw	high (_display_content+20)
 26286  00AB02  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26287  00AB04  6EE2               	movwf	fsr1h,c
 26288  00AB06  CFDF FFE7          	movff	indf2,indf1
 26289                           
 26290                           ; BSR set to: 0
 26291  00AB0A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26292  00AB0C                     l1446:
 26293                           
 26294                           ; BSR set to: 0
 26295                           
 26296                           ; BSR set to: 0
 26297  00AB0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26298  00AB0E  0D01               	mullw	1
 26299  00AB10  0EBE               	movlw	low display_prepare@temp
 26300  00AB12  24F3               	addwf	prodl,w,c
 26301  00AB14  6ED9               	movwf	fsr2l,c
 26302  00AB16  0E00               	movlw	high display_prepare@temp
 26303  00AB18  20F4               	addwfc	prodh,w,c
 26304  00AB1A  6EDA               	movwf	fsr2h,c
 26305  00AB1C  50DF               	movf	indf2,w,c
 26306  00AB1E  A4D8               	btfss	status,2,c
 26307  00AB20  D7D9               	goto	l1447
 26308                           
 26309                           ; BSR set to: 0
 26310                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26311                           
 26312                           ; BSR set to: 0
 26313  00AB22  C191  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 26314  00AB26  C192  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 26315  00AB2A  EC85  F0AB         	call	_motor_speed_from_index	;wreg free
 26316  00AB2E  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26317  00AB32  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26318  00AB36  0E02               	movlw	2
 26319  00AB38  0100               	movlb	0	; () banked
 26320  00AB3A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26321  00AB3C  0EBE               	movlw	low display_prepare@temp
 26322  00AB3E  6F98               	movwf	__display_itoa@text& (0+255),b
 26323  00AB40  0E00               	movlw	high display_prepare@temp
 26324  00AB42  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26325  00AB44  EC5E  F075         	call	__display_itoa	;wreg free
 26326                           
 26327                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 26328  00AB48  0E00               	movlw	0
 26329  00AB4A  0100               	movlb	0	; () banked
 26330  00AB4C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26331  00AB4E  D018               	goto	l1449
 26332  00AB50                     
 26333                           ; BSR set to: 0
 26334                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 26335                           
 26336                           ; BSR set to: 0
 26337  00AB50  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26338  00AB52  0D01               	mullw	1
 26339  00AB54  0EBE               	movlw	low display_prepare@temp
 26340  00AB56  24F3               	addwf	prodl,w,c
 26341  00AB58  6ED9               	movwf	fsr2l,c
 26342  00AB5A  0E00               	movlw	high display_prepare@temp
 26343  00AB5C  20F4               	addwfc	prodh,w,c
 26344  00AB5E  6EDA               	movwf	fsr2h,c
 26345  00AB60  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26346  00AB62  6FBC               	movwf	??_display_prepare& (0+255),b
 26347  00AB64  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26348  00AB66  0E0B               	movlw	11
 26349  00AB68  27BC               	addwf	??_display_prepare& (0+255),f,b
 26350  00AB6A  0E00               	movlw	0
 26351  00AB6C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26352  00AB6E  0E70               	movlw	low (_display_content+60)
 26353  00AB70  25BC               	addwf	??_display_prepare& (0+255),w,b
 26354  00AB72  6EE1               	movwf	fsr1l,c
 26355  00AB74  0E02               	movlw	high (_display_content+60)
 26356  00AB76  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26357  00AB78  6EE2               	movwf	fsr1h,c
 26358  00AB7A  CFDF FFE7          	movff	indf2,indf1
 26359                           
 26360                           ; BSR set to: 0
 26361  00AB7E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26362  00AB80                     l1449:
 26363                           
 26364                           ; BSR set to: 0
 26365                           
 26366                           ; BSR set to: 0
 26367  00AB80  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26368  00AB82  0D01               	mullw	1
 26369  00AB84  0EBE               	movlw	low display_prepare@temp
 26370  00AB86  24F3               	addwf	prodl,w,c
 26371  00AB88  6ED9               	movwf	fsr2l,c
 26372  00AB8A  0E00               	movlw	high display_prepare@temp
 26373  00AB8C  20F4               	addwfc	prodh,w,c
 26374  00AB8E  6EDA               	movwf	fsr2h,c
 26375  00AB90  50DF               	movf	indf2,w,c
 26376  00AB92  A4D8               	btfss	status,2,c
 26377  00AB94  D7DD               	goto	l1450
 26378  00AB96  D12D               	goto	L92
 26379  00AB98                     
 26380                           ; BSR set to: 0
 26381                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 26382                           
 26383                           ; BSR set to: 0
 26384  00AB98  0E34               	movlw	low _display_content
 26385  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 26386  00AB9C  0E02               	movlw	high _display_content
 26387  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26388  00ABA0  0E3E               	movlw	low _dc_zero
 26389  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 26390  00ABA4  0E9E               	movlw	high _dc_zero
 26391  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26392  00ABA8  0E00               	movlw	0
 26393  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26394  00ABAC  0E50               	movlw	80
 26395  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 26396  00ABB0  EC57  F0A1         	call	_memcpy	;wreg free
 26397                           
 26398                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26399  00ABB4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26400  00ABB8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26401  00ABBC  0100               	movlb	0	; () banked
 26402  00ABBE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26403  00ABC0  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26404  00ABC2  0E02               	movlw	2
 26405  00ABC4  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26406  00ABC6  0EBE               	movlw	low display_prepare@temp
 26407  00ABC8  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26408  00ABCA  0E00               	movlw	high display_prepare@temp
 26409  00ABCC  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26410  00ABCE  EC16  F086         	call	__display_itoa_long	;wreg free
 26411                           
 26412                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 26413  00ABD2  0E00               	movlw	0
 26414  00ABD4  0100               	movlb	0	; () banked
 26415  00ABD6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26416  00ABD8  D018               	goto	l1453
 26417  00ABDA                     
 26418                           ; BSR set to: 0
 26419                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 26420                           
 26421                           ; BSR set to: 0
 26422  00ABDA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26423  00ABDC  0D01               	mullw	1
 26424  00ABDE  0EBE               	movlw	low display_prepare@temp
 26425  00ABE0  24F3               	addwf	prodl,w,c
 26426  00ABE2  6ED9               	movwf	fsr2l,c
 26427  00ABE4  0E00               	movlw	high display_prepare@temp
 26428  00ABE6  20F4               	addwfc	prodh,w,c
 26429  00ABE8  6EDA               	movwf	fsr2h,c
 26430  00ABEA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26431  00ABEC  6FBC               	movwf	??_display_prepare& (0+255),b
 26432  00ABEE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26433  00ABF0  0E0D               	movlw	13
 26434  00ABF2  27BC               	addwf	??_display_prepare& (0+255),f,b
 26435  00ABF4  0E00               	movlw	0
 26436  00ABF6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26437  00ABF8  0E48               	movlw	low (_display_content+20)
 26438  00ABFA  25BC               	addwf	??_display_prepare& (0+255),w,b
 26439  00ABFC  6EE1               	movwf	fsr1l,c
 26440  00ABFE  0E02               	movlw	high (_display_content+20)
 26441  00AC00  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26442  00AC02  6EE2               	movwf	fsr1h,c
 26443  00AC04  CFDF FFE7          	movff	indf2,indf1
 26444                           
 26445                           ; BSR set to: 0
 26446  00AC08  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26447  00AC0A                     l1453:
 26448                           
 26449                           ; BSR set to: 0
 26450                           
 26451                           ; BSR set to: 0
 26452  00AC0A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26453  00AC0C  0D01               	mullw	1
 26454  00AC0E  0EBE               	movlw	low display_prepare@temp
 26455  00AC10  24F3               	addwf	prodl,w,c
 26456  00AC12  6ED9               	movwf	fsr2l,c
 26457  00AC14  0E00               	movlw	high display_prepare@temp
 26458  00AC16  20F4               	addwfc	prodh,w,c
 26459  00AC18  6EDA               	movwf	fsr2h,c
 26460  00AC1A  50DF               	movf	indf2,w,c
 26461  00AC1C  A4D8               	btfss	status,2,c
 26462  00AC1E  D7DD               	goto	l1454
 26463                           
 26464                           ; BSR set to: 0
 26465                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 26466                           
 26467                           ; BSR set to: 0
 26468  00AC20  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26469  00AC22  6FBC               	movwf	??_display_prepare& (0+255),b
 26470  00AC24  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26471  00AC26  0E0D               	movlw	13
 26472  00AC28  27BC               	addwf	??_display_prepare& (0+255),f,b
 26473  00AC2A  0E00               	movlw	0
 26474  00AC2C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26475  00AC2E  0E48               	movlw	low (_display_content+20)
 26476  00AC30  25BC               	addwf	??_display_prepare& (0+255),w,b
 26477  00AC32  6ED9               	movwf	fsr2l,c
 26478  00AC34  0E02               	movlw	high (_display_content+20)
 26479  00AC36  D6AA               	goto	L36
 26480  00AC38                     
 26481                           ; BSR set to: 0
 26482                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 26483                           
 26484                           ; BSR set to: 0
 26485  00AC38  0E34               	movlw	low _display_content
 26486  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 26487  00AC3C  0E02               	movlw	high _display_content
 26488  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26489  00AC40  0EEE               	movlw	low _dc_manual
 26490  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 26491  00AC44  0E9D               	movlw	high _dc_manual
 26492  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26493  00AC48  0E00               	movlw	0
 26494  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26495  00AC4C  0E50               	movlw	80
 26496  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 26497  00AC50  EC57  F0A1         	call	_memcpy	;wreg free
 26498                           
 26499                           ;display.c: 509: switch(os.displayState)
 26500  00AC54  D044               	goto	l1457
 26501  00AC56                     
 26502                           ;display.c: 512: display_content[2][6] = 'W';
 26503  00AC56  0E57               	movlw	87
 26504  00AC58  0102               	movlb	2	; () banked
 26505  00AC5A  6F62               	movwf	(_display_content+46)& (0+255),b
 26506                           
 26507                           ;display.c: 513: display_content[2][7] = ' ';
 26508  00AC5C  0E20               	movlw	32
 26509  00AC5E  6F63               	movwf	(_display_content+47)& (0+255),b
 26510                           
 26511                           ;display.c: 514: break;
 26512  00AC60  D049               	goto	l1459
 26513  00AC62                     
 26514                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 26515                           
 26516                           ; BSR set to: 2
 26517  00AC62  0E5C               	movlw	low (_display_content+40)
 26518  00AC64  0100               	movlb	0	; () banked
 26519  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 26520  00AC68  0E02               	movlw	high (_display_content+40)
 26521  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26522  00AC6C  0E14               	movlw	low STR_1
 26523  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 26524  00AC70  0EA3               	movlw	high STR_1
 26525  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26526  00AC74  0E00               	movlw	0
 26527  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26528  00AC78  0E08               	movlw	8
 26529  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 26530  00AC7C  EC57  F0A1         	call	_memcpy	;wreg free
 26531                           
 26532                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 26533  00AC80  0E70               	movlw	low (_display_content+60)
 26534  00AC82  0100               	movlb	0	; () banked
 26535  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 26536  00AC86  0E02               	movlw	high (_display_content+60)
 26537  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26538  00AC8A  0E1D               	movlw	low STR_2
 26539  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 26540  00AC8E  0EA3               	movlw	high STR_2
 26541  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26542  00AC92  0E00               	movlw	0
 26543  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26544  00AC96  0E06               	movlw	6
 26545  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 26546  00AC9A  EC57  F0A1         	call	_memcpy	;wreg free
 26547                           
 26548                           ;display.c: 518: break;
 26549  00AC9E  D02A               	goto	l1459
 26550  00ACA0                     
 26551                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 26552  00ACA0  0E5C               	movlw	low (_display_content+40)
 26553  00ACA2  0100               	movlb	0	; () banked
 26554  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 26555  00ACA6  0E02               	movlw	high (_display_content+40)
 26556  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26557  00ACAA  0E14               	movlw	low STR_1
 26558  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 26559  00ACAE  0EA3               	movlw	high STR_1
 26560  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26561  00ACB2  0E00               	movlw	0
 26562  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26563  00ACB6  0E08               	movlw	8
 26564  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 26565  00ACBA  EC57  F0A1         	call	_memcpy	;wreg free
 26566                           
 26567                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 26568  00ACBE  0E70               	movlw	low (_display_content+60)
 26569  00ACC0  0100               	movlb	0	; () banked
 26570  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 26571  00ACC4  0E02               	movlw	high (_display_content+60)
 26572  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26573  00ACC8  0E24               	movlw	low STR_6
 26574  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 26575  00ACCC  0EA3               	movlw	high STR_6
 26576  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26577  00ACD0  0E00               	movlw	0
 26578  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26579  00ACD4  0E05               	movlw	5
 26580  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 26581  00ACD8  EC57  F0A1         	call	_memcpy	;wreg free
 26582                           
 26583                           ;display.c: 523: }
 26584                           
 26585                           ;display.c: 522: break;
 26586  00ACDC  D00B               	goto	l1459
 26587  00ACDE                     l1457:
 26588  00ACDE  0101               	movlb	1	; () banked
 26589  00ACE0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26590                           
 26591                           ; Switch size 1, requested type "space"
 26592                           ; Number of cases is 3, Range of values is 130 to 132
 26593                           ; switch strategies available:
 26594                           ; Name         Instructions Cycles
 26595                           ; simple_byte           10     6 (average)
 26596                           ;	Chosen strategy is simple_byte
 26597  00ACE2  0A82               	xorlw	130	; case 130
 26598  00ACE4  B4D8               	btfsc	status,2,c
 26599  00ACE6  D7BD               	goto	l1460
 26600  00ACE8  0A01               	xorlw	1	; case 131
 26601  00ACEA  B4D8               	btfsc	status,2,c
 26602  00ACEC  D7B4               	goto	l1458
 26603  00ACEE  0A07               	xorlw	7	; case 132
 26604  00ACF0  B4D8               	btfsc	status,2,c
 26605  00ACF2  D7D6               	goto	l1461
 26606  00ACF4                     l1459:
 26607                           
 26608                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26609                           
 26610                           ; BSR set to: 1
 26611  00ACF4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26612  00ACF8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26613  00ACFC  0100               	movlb	0	; () banked
 26614  00ACFE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26615  00AD00  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26616  00AD02  0E02               	movlw	2
 26617  00AD04  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26618  00AD06  0EBE               	movlw	low display_prepare@temp
 26619  00AD08  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26620  00AD0A  0E00               	movlw	high display_prepare@temp
 26621  00AD0C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26622  00AD0E  EC16  F086         	call	__display_itoa_long	;wreg free
 26623                           
 26624                           ;display.c: 527: space = 7-strlen(temp);
 26625  00AD12  0EBE               	movlw	low display_prepare@temp
 26626  00AD14  0100               	movlb	0	; () banked
 26627  00AD16  6F60               	movwf	strlen@s& (0+255),b
 26628  00AD18  0E00               	movlw	high display_prepare@temp
 26629  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 26630  00AD1C  EC8F  F0A7         	call	_strlen	;wreg free
 26631  00AD20  0100               	movlb	0	; () banked
 26632  00AD22  5160               	movf	?_strlen& (0+255),w,b
 26633  00AD24  0800               	sublw	0
 26634  00AD26  0F07               	addlw	7
 26635  00AD28  6FC8               	movwf	display_prepare@space& (0+255),b
 26636                           
 26637                           ; BSR set to: 0
 26638                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 26639  00AD2A  0E00               	movlw	0
 26640  00AD2C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26641  00AD2E  D01C               	goto	l1462
 26642  00AD30                     
 26643                           ; BSR set to: 0
 26644                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 26645                           
 26646                           ; BSR set to: 0
 26647  00AD30  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26648  00AD32  0D01               	mullw	1
 26649  00AD34  0EBE               	movlw	low display_prepare@temp
 26650  00AD36  24F3               	addwf	prodl,w,c
 26651  00AD38  6ED9               	movwf	fsr2l,c
 26652  00AD3A  0E00               	movlw	high display_prepare@temp
 26653  00AD3C  20F4               	addwfc	prodh,w,c
 26654  00AD3E  6EDA               	movwf	fsr2h,c
 26655  00AD40  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26656  00AD42  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26657  00AD46  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26658  00AD48  27BC               	addwf	??_display_prepare& (0+255),f,b
 26659  00AD4A  0E00               	movlw	0
 26660  00AD4C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26661  00AD4E  0E0C               	movlw	12
 26662  00AD50  27BC               	addwf	??_display_prepare& (0+255),f,b
 26663  00AD52  0E00               	movlw	0
 26664  00AD54  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26665  00AD56  0E48               	movlw	low (_display_content+20)
 26666  00AD58  25BC               	addwf	??_display_prepare& (0+255),w,b
 26667  00AD5A  6EE1               	movwf	fsr1l,c
 26668  00AD5C  0E02               	movlw	high (_display_content+20)
 26669  00AD5E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26670  00AD60  6EE2               	movwf	fsr1h,c
 26671  00AD62  CFDF FFE7          	movff	indf2,indf1
 26672                           
 26673                           ; BSR set to: 0
 26674  00AD66  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26675  00AD68                     l1462:
 26676                           
 26677                           ; BSR set to: 0
 26678                           
 26679                           ; BSR set to: 0
 26680  00AD68  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26681  00AD6A  0D01               	mullw	1
 26682  00AD6C  0EBE               	movlw	low display_prepare@temp
 26683  00AD6E  24F3               	addwf	prodl,w,c
 26684  00AD70  6ED9               	movwf	fsr2l,c
 26685  00AD72  0E00               	movlw	high display_prepare@temp
 26686  00AD74  20F4               	addwfc	prodh,w,c
 26687  00AD76  6EDA               	movwf	fsr2h,c
 26688  00AD78  50DF               	movf	indf2,w,c
 26689  00AD7A  A4D8               	btfss	status,2,c
 26690  00AD7C  D7D9               	goto	l1463
 26691                           
 26692                           ; BSR set to: 0
 26693                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 26694                           
 26695                           ; BSR set to: 0
 26696  00AD7E  C194  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 26697  00AD82  C195  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 26698  00AD86  EC85  F0AB         	call	_motor_speed_from_index	;wreg free
 26699  00AD8A  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26700  00AD8E  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26701  00AD92  0E02               	movlw	2
 26702  00AD94  0100               	movlb	0	; () banked
 26703  00AD96  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26704  00AD98  0EBE               	movlw	low display_prepare@temp
 26705  00AD9A  6F98               	movwf	__display_itoa@text& (0+255),b
 26706  00AD9C  0E00               	movlw	high display_prepare@temp
 26707  00AD9E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26708  00ADA0  EC5E  F075         	call	__display_itoa	;wreg free
 26709                           
 26710                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 26711  00ADA4  0E00               	movlw	0
 26712  00ADA6  0100               	movlb	0	; () banked
 26713  00ADA8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26714  00ADAA  D018               	goto	l1465
 26715  00ADAC                     
 26716                           ; BSR set to: 0
 26717                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 26718                           
 26719                           ; BSR set to: 0
 26720  00ADAC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26721  00ADAE  0D01               	mullw	1
 26722  00ADB0  0EBE               	movlw	low display_prepare@temp
 26723  00ADB2  24F3               	addwf	prodl,w,c
 26724  00ADB4  6ED9               	movwf	fsr2l,c
 26725  00ADB6  0E00               	movlw	high display_prepare@temp
 26726  00ADB8  20F4               	addwfc	prodh,w,c
 26727  00ADBA  6EDA               	movwf	fsr2h,c
 26728  00ADBC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26729  00ADBE  6FBC               	movwf	??_display_prepare& (0+255),b
 26730  00ADC0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26731  00ADC2  0E0B               	movlw	11
 26732  00ADC4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26733  00ADC6  0E00               	movlw	0
 26734  00ADC8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26735  00ADCA  0E70               	movlw	low (_display_content+60)
 26736  00ADCC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26737  00ADCE  6EE1               	movwf	fsr1l,c
 26738  00ADD0  0E02               	movlw	high (_display_content+60)
 26739  00ADD2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26740  00ADD4  6EE2               	movwf	fsr1h,c
 26741  00ADD6  CFDF FFE7          	movff	indf2,indf1
 26742                           
 26743                           ; BSR set to: 0
 26744  00ADDA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26745  00ADDC                     l1465:
 26746                           
 26747                           ; BSR set to: 0
 26748                           
 26749                           ; BSR set to: 0
 26750  00ADDC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26751  00ADDE  0D01               	mullw	1
 26752  00ADE0  0EBE               	movlw	low display_prepare@temp
 26753  00ADE2  24F3               	addwf	prodl,w,c
 26754  00ADE4  6ED9               	movwf	fsr2l,c
 26755  00ADE6  0E00               	movlw	high display_prepare@temp
 26756  00ADE8  20F4               	addwfc	prodh,w,c
 26757  00ADEA  6EDA               	movwf	fsr2h,c
 26758  00ADEC  50DF               	movf	indf2,w,c
 26759  00ADEE  A4D8               	btfss	status,2,c
 26760  00ADF0  D7DD               	goto	l1466
 26761  00ADF2                     L92:
 26762                           
 26763                           ; BSR set to: 0
 26764                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 26765                           
 26766                           ; BSR set to: 0
 26767  00ADF2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26768  00ADF4  6FBC               	movwf	??_display_prepare& (0+255),b
 26769  00ADF6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26770  00ADF8  0E0B               	movlw	11
 26771  00ADFA  27BC               	addwf	??_display_prepare& (0+255),f,b
 26772  00ADFC  0E00               	movlw	0
 26773  00ADFE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26774  00AE00  0E70               	movlw	low (_display_content+60)
 26775  00AE02  25BC               	addwf	??_display_prepare& (0+255),w,b
 26776  00AE04  6ED9               	movwf	fsr2l,c
 26777  00AE06  0E02               	movlw	high (_display_content+60)
 26778  00AE08  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26779  00AE0A  6EDA               	movwf	fsr2h,c
 26780  00AE0C  0E01               	movlw	1
 26781  00AE0E  6EDF               	movwf	indf2,c
 26782                           
 26783                           ;display.c: 540: display_content[3][12+cntr] = '/';
 26784  00AE10  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26785  00AE12  6FBC               	movwf	??_display_prepare& (0+255),b
 26786  00AE14  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26787  00AE16  0E0C               	movlw	12
 26788  00AE18  27BC               	addwf	??_display_prepare& (0+255),f,b
 26789  00AE1A  0E00               	movlw	0
 26790  00AE1C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26791  00AE1E  0E70               	movlw	low (_display_content+60)
 26792  00AE20  25BC               	addwf	??_display_prepare& (0+255),w,b
 26793  00AE22  6ED9               	movwf	fsr2l,c
 26794  00AE24  0E02               	movlw	high (_display_content+60)
 26795  00AE26  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26796  00AE28  6EDA               	movwf	fsr2h,c
 26797  00AE2A  0E2F               	movlw	47
 26798  00AE2C  6EDF               	movwf	indf2,c
 26799                           
 26800                           ;display.c: 541: display_content[3][13+cntr] = 's';
 26801  00AE2E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26802  00AE30  6FBC               	movwf	??_display_prepare& (0+255),b
 26803  00AE32  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26804  00AE34  0E0D               	movlw	13
 26805  00AE36  27BC               	addwf	??_display_prepare& (0+255),f,b
 26806  00AE38  0E00               	movlw	0
 26807  00AE3A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26808  00AE3C  0E70               	movlw	low (_display_content+60)
 26809  00AE3E  25BC               	addwf	??_display_prepare& (0+255),w,b
 26810  00AE40  6ED9               	movwf	fsr2l,c
 26811  00AE42  0E02               	movlw	high (_display_content+60)
 26812  00AE44  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26813  00AE46  6EDA               	movwf	fsr2h,c
 26814  00AE48  0E73               	movlw	115
 26815  00AE4A                     L27:
 26816  00AE4A  6EDF               	movwf	indf2,c
 26817                           
 26818                           ;display.c: 542: break;
 26819  00AE4C  D095               	goto	l1385
 26820  00AE4E                     
 26821                           ; BSR set to: 0
 26822                           ;display.c: 545: _display_clear();
 26823                           
 26824                           ; BSR set to: 0
 26825  00AE4E  EC37  F0A6         	call	__display_clear	;wreg free
 26826                           
 26827                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 26828  00AE52  0101               	movlb	1	; () banked
 26829  00AE54  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 26830  00AE56  0100               	movlb	0	; () banked
 26831  00AE58  6F95               	movwf	__display_itoa@value& (0+255),b
 26832  00AE5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26833  00AE5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26834  00AE5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26835  00AE60  0E00               	movlw	0
 26836  00AE62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26837  00AE64  0E34               	movlw	low _display_content
 26838  00AE66  6F98               	movwf	__display_itoa@text& (0+255),b
 26839  00AE68  0E02               	movlw	high _display_content
 26840  00AE6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26841  00AE6C  EC5E  F075         	call	__display_itoa	;wreg free
 26842                           
 26843                           ;display.c: 547: if(PORTEbits.RE2)
 26844  00AE70  A484               	btfss	3972,2,c	;volatile
 26845  00AE72  D002               	goto	l1469
 26846                           
 26847                           ;display.c: 548: display_content[0][8] = 'H';
 26848  00AE74  0E48               	movlw	72
 26849  00AE76  D001               	goto	L31
 26850  00AE78                     l1469:
 26851                           
 26852                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 26853                           
 26854                           ; BSR set to: 2
 26855  00AE78  0E4C               	movlw	76
 26856  00AE7A                     L31:
 26857  00AE7A  0102               	movlb	2	; () banked
 26858  00AE7C  6F3C               	movwf	(_display_content+8)& (0+255),b
 26859                           
 26860                           ; BSR set to: 2
 26861                           ;display.c: 551: if(PORTEbits.RE0)
 26862                           
 26863                           ; BSR set to: 2
 26864  00AE7E  A084               	btfss	3972,0,c	;volatile
 26865  00AE80  D002               	goto	l1471
 26866                           
 26867                           ; BSR set to: 2
 26868                           ;display.c: 552: display_content[0][9] = 'H';
 26869  00AE82  0E48               	movlw	72
 26870  00AE84  D001               	goto	L32
 26871  00AE86                     l1471:
 26872                           
 26873                           ; BSR set to: 2
 26874                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 26875                           
 26876                           ; BSR set to: 2
 26877  00AE86  0E4C               	movlw	76
 26878  00AE88                     L32:
 26879  00AE88  6F3D               	movwf	(_display_content+9)& (0+255),b
 26880                           
 26881                           ; BSR set to: 2
 26882                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 26883                           
 26884                           ; BSR set to: 2
 26885  00AE8A  0101               	movlb	1	; () banked
 26886  00AE8C  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 26887  00AE8E  0100               	movlb	0	; () banked
 26888  00AE90  6F95               	movwf	__display_itoa@value& (0+255),b
 26889  00AE92  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26890  00AE94  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26891  00AE96  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26892  00AE98  0E00               	movlw	0
 26893  00AE9A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26894  00AE9C  0E48               	movlw	low (_display_content+20)
 26895  00AE9E  6F98               	movwf	__display_itoa@text& (0+255),b
 26896  00AEA0  0E02               	movlw	high (_display_content+20)
 26897  00AEA2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26898  00AEA4  EC5E  F075         	call	__display_itoa	;wreg free
 26899                           
 26900                           ;display.c: 556: if(PORTEbits.RE1)
 26901  00AEA8  A284               	btfss	3972,1,c	;volatile
 26902  00AEAA  D002               	goto	l1473
 26903                           
 26904                           ;display.c: 557: display_content[1][8] = 'H';
 26905  00AEAC  0E48               	movlw	72
 26906  00AEAE  D001               	goto	L33
 26907  00AEB0                     l1473:
 26908                           
 26909                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 26910                           
 26911                           ; BSR set to: 2
 26912  00AEB0  0E4C               	movlw	76
 26913  00AEB2                     L33:
 26914  00AEB2  0102               	movlb	2	; () banked
 26915  00AEB4  6F50               	movwf	(_display_content+28)& (0+255),b
 26916                           
 26917                           ; BSR set to: 2
 26918                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 26919                           
 26920                           ; BSR set to: 2
 26921  00AEB6  0101               	movlb	1	; () banked
 26922  00AEB8  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 26923  00AEBA  0100               	movlb	0	; () banked
 26924  00AEBC  6F95               	movwf	__display_itoa@value& (0+255),b
 26925  00AEBE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26926  00AEC0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26927  00AEC2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26928  00AEC4  0E00               	movlw	0
 26929  00AEC6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26930  00AEC8  0E5C               	movlw	low (_display_content+40)
 26931  00AECA  6F98               	movwf	__display_itoa@text& (0+255),b
 26932  00AECC  0E02               	movlw	high (_display_content+40)
 26933  00AECE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26934  00AED0  EC5E  F075         	call	__display_itoa	;wreg free
 26935                           
 26936                           ;display.c: 561: if(PORTAbits.RA0)
 26937  00AED4  A080               	btfss	3968,0,c	;volatile
 26938  00AED6  D002               	goto	l1475
 26939                           
 26940                           ;display.c: 562: display_content[2][8] = 'H';
 26941  00AED8  0E48               	movlw	72
 26942  00AEDA  D001               	goto	L34
 26943  00AEDC                     l1475:
 26944                           
 26945                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 26946                           
 26947                           ; BSR set to: 2
 26948  00AEDC  0E4C               	movlw	76
 26949  00AEDE                     L34:
 26950  00AEDE  0102               	movlb	2	; () banked
 26951  00AEE0  6F64               	movwf	(_display_content+48)& (0+255),b
 26952                           
 26953                           ; BSR set to: 2
 26954                           ;display.c: 565: if(PORTAbits.RA2)
 26955                           
 26956                           ; BSR set to: 2
 26957  00AEE2  A480               	btfss	3968,2,c	;volatile
 26958  00AEE4  D002               	goto	l1477
 26959                           
 26960                           ; BSR set to: 2
 26961                           ;display.c: 566: display_content[2][9] = 'H';
 26962  00AEE6  0E48               	movlw	72
 26963  00AEE8  D001               	goto	L35
 26964  00AEEA                     l1477:
 26965                           
 26966                           ; BSR set to: 2
 26967                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 26968                           
 26969                           ; BSR set to: 2
 26970  00AEEA  0E4C               	movlw	76
 26971  00AEEC                     L35:
 26972  00AEEC  6F65               	movwf	(_display_content+49)& (0+255),b
 26973                           
 26974                           ; BSR set to: 2
 26975                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 26976                           
 26977                           ; BSR set to: 2
 26978  00AEEE  0101               	movlb	1	; () banked
 26979  00AEF0  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 26980  00AEF2  0100               	movlb	0	; () banked
 26981  00AEF4  6F95               	movwf	__display_itoa@value& (0+255),b
 26982  00AEF6  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26983  00AEF8  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26984  00AEFA  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26985  00AEFC  0E00               	movlw	0
 26986  00AEFE  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26987  00AF00  0E70               	movlw	low (_display_content+60)
 26988  00AF02  6F98               	movwf	__display_itoa@text& (0+255),b
 26989  00AF04  0E02               	movlw	high (_display_content+60)
 26990  00AF06  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26991  00AF08  EC5E  F075         	call	__display_itoa	;wreg free
 26992                           
 26993                           ;display.c: 570: if(PORTAbits.RA1)
 26994  00AF0C  A280               	btfss	3968,1,c	;volatile
 26995  00AF0E  D002               	goto	l1479
 26996                           
 26997                           ;display.c: 571: display_content[3][8] = 'H';
 26998  00AF10  0E48               	movlw	72
 26999  00AF12  D001               	goto	L28
 27000  00AF14                     l1479:
 27001                           
 27002                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 27003                           
 27004                           ; BSR set to: 2
 27005  00AF14  0E4C               	movlw	76
 27006  00AF16                     L28:
 27007  00AF16  0102               	movlb	2	; () banked
 27008  00AF18  6F78               	movwf	(_display_content+68)& (0+255),b
 27009                           
 27010                           ; BSR set to: 2
 27011                           ;display.c: 575: }
 27012                           
 27013                           ; BSR set to: 2
 27014                           ;display.c: 574: break;
 27015  00AF1A  D02E               	goto	l1385
 27016  00AF1C                     l1376:
 27017                           
 27018                           ; BSR set to: 2
 27019  00AF1C  0101               	movlb	1	; () banked
 27020  00AF1E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 27021  00AF20  0BF0               	andlw	240
 27022  00AF22  0100               	movlb	0	; () banked
 27023  00AF24  6FBC               	movwf	??_display_prepare& (0+255),b
 27024  00AF26  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 27025                           
 27026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27027                           ; Switch size 1, requested type "space"
 27028                           ; Number of cases is 1, Range of values is 0 to 0
 27029                           ; switch strategies available:
 27030                           ; Name         Instructions Cycles
 27031                           ; simple_byte            4     3 (average)
 27032                           ;	Chosen strategy is simple_byte
 27033  00AF28  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 27034  00AF2A  0A00               	xorlw	0	; case 0
 27035  00AF2C  A4D8               	btfss	status,2,c
 27036  00AF2E  D024               	goto	l1385
 27037                           
 27038                           ; BSR set to: 0
 27039                           ; Switch size 1, requested type "space"
 27040                           ; Number of cases is 10, Range of values is 0 to 240
 27041                           ; switch strategies available:
 27042                           ; Name         Instructions Cycles
 27043                           ; simple_byte           31    16 (average)
 27044                           ;	Chosen strategy is simple_byte
 27045  00AF30  51BC               	movf	??_display_prepare& (0+255),w,b
 27046  00AF32  0A00               	xorlw	0	; case 0
 27047  00AF34  B4D8               	btfsc	status,2,c
 27048  00AF36  EF9A  F051         	goto	l1377
 27049  00AF3A  0A10               	xorlw	16	; case 16
 27050  00AF3C  B4D8               	btfsc	status,2,c
 27051  00AF3E  EFC9  F051         	goto	l1386
 27052  00AF42  0A30               	xorlw	48	; case 32
 27053  00AF44  B4D8               	btfsc	status,2,c
 27054  00AF46  EF1B  F052         	goto	l1396
 27055  00AF4A  0A10               	xorlw	16	; case 48
 27056  00AF4C  B4D8               	btfsc	status,2,c
 27057  00AF4E  EF3F  F052         	goto	l1401
 27058  00AF52  0A70               	xorlw	112	; case 64
 27059  00AF54  B4D8               	btfsc	status,2,c
 27060  00AF56  EFB0  F052         	goto	l1410
 27061  00AF5A  0A10               	xorlw	16	; case 80
 27062  00AF5C  B4D8               	btfsc	status,2,c
 27063  00AF5E  D467               	goto	l1425
 27064  00AF60  0A30               	xorlw	48	; case 96
 27065  00AF62  B4D8               	btfsc	status,2,c
 27066  00AF64  D517               	goto	l1438
 27067  00AF66  0A10               	xorlw	16	; case 112
 27068  00AF68  B4D8               	btfsc	status,2,c
 27069  00AF6A  D616               	goto	l1452
 27070  00AF6C  0AF0               	xorlw	240	; case 128
 27071  00AF6E  B4D8               	btfsc	status,2,c
 27072  00AF70  D663               	goto	l1456
 27073  00AF72  0A70               	xorlw	112	; case 240
 27074  00AF74  B4D8               	btfsc	status,2,c
 27075  00AF76  D76B               	goto	l1468
 27076  00AF78                     l1385:
 27077                           
 27078                           ;display.c: 577: if(!PORTDbits.RD2)
 27079  00AF78  B483               	btfsc	3971,2,c	;volatile
 27080  00AF7A  0012               	return	
 27081                           
 27082                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 27083  00AF7C  0E45               	movlw	69
 27084  00AF7E  0102               	movlb	2	; () banked
 27085  00AF80  6F34               	movwf	_display_content& (0+255),b
 27086                           
 27087                           ;display.c: 580: display_content[0][1] = 'R';
 27088  00AF82  0E52               	movlw	82
 27089  00AF84  6F35               	movwf	(_display_content+1)& (0+255),b
 27090                           
 27091                           ;display.c: 581: display_content[0][2] = 'R';
 27092  00AF86  0E52               	movlw	82
 27093  00AF88  6F36               	movwf	(_display_content+2)& (0+255),b
 27094                           
 27095                           ;display.c: 582: display_content[0][3] = 'O';
 27096  00AF8A  0E4F               	movlw	79
 27097  00AF8C  6F37               	movwf	(_display_content+3)& (0+255),b
 27098                           
 27099                           ;display.c: 583: display_content[0][4] = 'R';
 27100  00AF8E  0E52               	movlw	82
 27101  00AF90  6F38               	movwf	(_display_content+4)& (0+255),b
 27102  00AF92  0012               	return	
 27103  00AF94                     __end_of_display_prepare:
 27104                           	opt stack 0
 27105                           tblptru	equ	0xFF8
 27106                           tblptrh	equ	0xFF7
 27107                           tblptrl	equ	0xFF6
 27108                           tablat	equ	0xFF5
 27109                           prodh	equ	0xFF4
 27110                           prodl	equ	0xFF3
 27111                           intcon	equ	0xFF2
 27112                           postinc0	equ	0xFEE
 27113                           wreg	equ	0xFE8
 27114                           indf1	equ	0xFE7
 27115                           postinc1	equ	0xFE6
 27116                           postdec1	equ	0xFE5
 27117                           plusw1	equ	0xFE3
 27118                           fsr1h	equ	0xFE2
 27119                           fsr1l	equ	0xFE1
 27120                           indf2	equ	0xFDF
 27121                           postinc2	equ	0xFDE
 27122                           postdec2	equ	0xFDD
 27123                           plusw2	equ	0xFDB
 27124                           fsr2h	equ	0xFDA
 27125                           fsr2l	equ	0xFD9
 27126                           status	equ	0xFD8
 27127                           
 27128 ;; *************** function _motor_speed_from_index *****************
 27129 ;; Defined at:
 27130 ;;		line 114 in file "motor.c"
 27131 ;; Parameters:    Size  Location     Type
 27132 ;;  speed_index     2   51[BANK0 ] unsigned int 
 27133 ;; Auto vars:     Size  Location     Type
 27134 ;;		None
 27135 ;; Return value:  Size  Location     Type
 27136 ;;                  2   51[BANK0 ] unsigned int 
 27137 ;; Registers used:
 27138 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27139 ;; Tracked objects:
 27140 ;;		On entry : 0/0
 27141 ;;		On exit  : 0/0
 27142 ;;		Unchanged: 0/0
 27143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27148 ;;Total ram usage:        2 bytes
 27149 ;; Hardware stack levels used:    1
 27150 ;; Hardware stack levels required when called:   12
 27151 ;; This function calls:
 27152 ;;		__motor_get_speed_in_degrees
 27153 ;; This function is called by:
 27154 ;;		_display_prepare
 27155 ;; This function uses a non-reentrant model
 27156 ;;
 27157                           
 27158                           	psect	text104
 27159  01570A                     __ptext104:
 27160                           	opt stack 0
 27161  01570A                     _motor_speed_from_index:
 27162                           	opt stack 17
 27163                           
 27164                           ;motor.c: 116: return _motor_get_speed_in_degrees(speed_index);
 27165                           
 27166                           ;incstack = 0
 27167  01570A  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27168  01570E  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27169  015712  EC9D  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27170  015716  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27171  01571A  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27172  01571E  0012               	return	
 27173  015720                     __end_of_motor_speed_from_index:
 27174                           	opt stack 0
 27175                           tblptru	equ	0xFF8
 27176                           tblptrh	equ	0xFF7
 27177                           tblptrl	equ	0xFF6
 27178                           tablat	equ	0xFF5
 27179                           prodh	equ	0xFF4
 27180                           prodl	equ	0xFF3
 27181                           intcon	equ	0xFF2
 27182                           postinc0	equ	0xFEE
 27183                           wreg	equ	0xFE8
 27184                           indf1	equ	0xFE7
 27185                           postinc1	equ	0xFE6
 27186                           postdec1	equ	0xFE5
 27187                           plusw1	equ	0xFE3
 27188                           fsr1h	equ	0xFE2
 27189                           fsr1l	equ	0xFE1
 27190                           indf2	equ	0xFDF
 27191                           postinc2	equ	0xFDE
 27192                           postdec2	equ	0xFDD
 27193                           plusw2	equ	0xFDB
 27194                           fsr2h	equ	0xFDA
 27195                           fsr2l	equ	0xFD9
 27196                           status	equ	0xFD8
 27197                           
 27198 ;; *************** function __motor_get_speed_in_degrees *****************
 27199 ;; Defined at:
 27200 ;;		line 75 in file "motor.c"
 27201 ;; Parameters:    Size  Location     Type
 27202 ;;  speed_index     2   39[BANK0 ] unsigned int 
 27203 ;; Auto vars:     Size  Location     Type
 27204 ;;  lookup          4   47[BANK0 ] unsigned long 
 27205 ;;  speed           4   43[BANK0 ] float 
 27206 ;; Return value:  Size  Location     Type
 27207 ;;                  2   39[BANK0 ] unsigned int 
 27208 ;; Registers used:
 27209 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27210 ;; Tracked objects:
 27211 ;;		On entry : 0/0
 27212 ;;		On exit  : 0/0
 27213 ;;		Unchanged: 0/0
 27214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27216 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27218 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27219 ;;Total ram usage:       12 bytes
 27220 ;; Hardware stack levels used:    1
 27221 ;; Hardware stack levels required when called:   11
 27222 ;; This function calls:
 27223 ;;		___fldiv
 27224 ;;		___fltol
 27225 ;;		___lmul
 27226 ;;		___xxtofl
 27227 ;; This function is called by:
 27228 ;;		_motor_speed_from_index
 27229 ;;		_motor_get_maximum_speed
 27230 ;;		_motor_get_current_speed
 27231 ;; This function uses a non-reentrant model
 27232 ;;
 27233                           
 27234                           	psect	text105
 27235  01053A                     __ptext105:
 27236                           	opt stack 0
 27237  01053A                     __motor_get_speed_in_degrees:
 27238                           	opt stack 17
 27239                           
 27240                           ;motor.c: 77: uint32_t lookup;;motor.c: 78: float speed;;motor.c: 80: lookup = motor_spe
      +                          ed_lookup[speed_index];
 27241                           
 27242                           ;incstack = 0
 27243  01053A  90D8               	bcf	status,0,c
 27244  01053C  0100               	movlb	0	; () banked
 27245  01053E  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27246  010540  6EF6               	movwf	tblptrl,c
 27247  010542  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27248  010544  6EF7               	movwf	tblptrh,c
 27249  010546  0E93               	movlw	low _motor_speed_lookup
 27250  010548  26F6               	addwf	tblptrl,f,c
 27251  01054A  0E90               	movlw	high _motor_speed_lookup
 27252  01054C  22F7               	addwfc	tblptrh,f,c
 27253  01054E                     	if	1	;There are 3 active tblptr bytes
 27254  01054E  6AF8               	clrf	tblptru,c
 27255  010550  0E00               	movlw	low (__mediumconst shr (0+16))
 27256  010552  22F8               	addwfc	tblptru,f,c
 27257  010554                     	endif
 27258  010554  0009               	tblrd		*+
 27259  010556  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 27260  01055A  0009               	tblrd		*+
 27261  01055C  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 27262  010560  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27263  010564  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27264  010568  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27265  01056A  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27266                           
 27267                           ; BSR set to: 0
 27268                           ;motor.c: 81: lookup *= 16;
 27269  01056C  0E04               	movlw	4
 27270  01056E                     u14665:
 27271  01056E  90D8               	bcf	status,0,c
 27272  010570  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27273  010572  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27274  010574  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27275  010576  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27276  010578  2EE8               	decfsz	wreg,f,c
 27277  01057A  D7F9               	goto	u14665
 27278                           
 27279                           ; BSR set to: 0
 27280                           ;motor.c: 82: lookup *= 360;
 27281  01057C  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27282  010580  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27283  010584  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27284  010588  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27285  01058C  0E68               	movlw	104
 27286  01058E  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27287  010590  0E01               	movlw	1
 27288  010592  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27289  010594  0E00               	movlw	0
 27290  010596  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27291  010598  0E00               	movlw	0
 27292  01059A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27293  01059C  EC79  F0A3         	call	___lmul	;wreg free
 27294  0105A0  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27295  0105A4  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27296  0105A8  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27297  0105AC  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27298                           
 27299                           ;motor.c: 83: lookup *= 100;
 27300  0105B0  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27301  0105B4  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27302  0105B8  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27303  0105BC  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27304  0105C0  0E64               	movlw	100
 27305  0105C2  0100               	movlb	0	; () banked
 27306  0105C4  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27307  0105C6  0E00               	movlw	0
 27308  0105C8  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27309  0105CA  0E00               	movlw	0
 27310  0105CC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27311  0105CE  0E00               	movlw	0
 27312  0105D0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27313  0105D2  EC79  F0A3         	call	___lmul	;wreg free
 27314  0105D6  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27315  0105DA  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27316  0105DE  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27317  0105E2  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27318                           
 27319                           ;motor.c: 85: speed = (float) lookup;
 27320  0105E6  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27321  0105EA  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27322  0105EE  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27323  0105F2  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27324  0105F6  0E00               	movlw	0
 27325  0105F8  EC5D  F081         	call	___xxtofl
 27326  0105FC  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27327  010600  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27328  010604  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27329  010608  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27330                           
 27331                           ;motor.c: 86: speed /= config.full_circle_in_steps;
 27332  01060C  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27333  010610  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27334  010614  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27335  010618  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27336  01061C  C1A1  F060         	movff	_config,___xxtofl@val
 27337  010620  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 27338  010624  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 27339  010628  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 27340  01062C  0E00               	movlw	0
 27341  01062E  EC5D  F081         	call	___xxtofl
 27342  010632  C060  F072         	movff	?___xxtofl,___fldiv@a
 27343  010636  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 27344  01063A  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 27345  01063E  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 27346  010642  EC27  F06E         	call	___fldiv	;wreg free
 27347  010646  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27348  01064A  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27349  01064E  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27350  010652  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27351                           
 27352                           ;motor.c: 89: return (uint16_t) speed;
 27353  010656  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27354  01065A  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27355  01065E  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27356  010662  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27357  010666  ECA8  F090         	call	___fltol	;wreg free
 27358  01066A  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 27359  01066E  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27360  010672  0012               	return	
 27361  010674                     __end_of__motor_get_speed_in_degrees:
 27362                           	opt stack 0
 27363                           tblptru	equ	0xFF8
 27364                           tblptrh	equ	0xFF7
 27365                           tblptrl	equ	0xFF6
 27366                           tablat	equ	0xFF5
 27367                           prodh	equ	0xFF4
 27368                           prodl	equ	0xFF3
 27369                           intcon	equ	0xFF2
 27370                           postinc0	equ	0xFEE
 27371                           wreg	equ	0xFE8
 27372                           indf1	equ	0xFE7
 27373                           postinc1	equ	0xFE6
 27374                           postdec1	equ	0xFE5
 27375                           plusw1	equ	0xFE3
 27376                           fsr1h	equ	0xFE2
 27377                           fsr1l	equ	0xFE1
 27378                           indf2	equ	0xFDF
 27379                           postinc2	equ	0xFDE
 27380                           postdec2	equ	0xFDD
 27381                           plusw2	equ	0xFDB
 27382                           fsr2h	equ	0xFDA
 27383                           fsr2l	equ	0xFD9
 27384                           status	equ	0xFD8
 27385                           
 27386 ;; *************** function ___lmul *****************
 27387 ;; Defined at:
 27388 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 27389 ;; Parameters:    Size  Location     Type
 27390 ;;  multiplier      4    0[BANK0 ] unsigned long 
 27391 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 27392 ;; Auto vars:     Size  Location     Type
 27393 ;;  product         4    8[BANK0 ] unsigned long 
 27394 ;; Return value:  Size  Location     Type
 27395 ;;                  4    0[BANK0 ] unsigned long 
 27396 ;; Registers used:
 27397 ;;		wreg, status,2, status,0
 27398 ;; Tracked objects:
 27399 ;;		On entry : 0/0
 27400 ;;		On exit  : 0/0
 27401 ;;		Unchanged: 0/0
 27402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27403 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27406 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27407 ;;Total ram usage:       12 bytes
 27408 ;; Hardware stack levels used:    1
 27409 ;; Hardware stack levels required when called:   10
 27410 ;; This function calls:
 27411 ;;		Nothing
 27412 ;; This function is called by:
 27413 ;;		__motor_get_speed_in_degrees
 27414 ;;		_atol
 27415 ;; This function uses a non-reentrant model
 27416 ;;
 27417                           
 27418                           	psect	text106
 27419  0146F2                     __ptext106:
 27420                           	opt stack 0
 27421  0146F2                     ___lmul:
 27422                           	opt stack 16
 27423                           
 27424                           ;incstack = 0
 27425  0146F2  0E00               	movlw	0
 27426  0146F4  0100               	movlb	0	; () banked
 27427  0146F6  6F68               	movwf	___lmul@product& (0+255),b
 27428  0146F8  0E00               	movlw	0
 27429  0146FA  6F69               	movwf	(___lmul@product+1)& (0+255),b
 27430  0146FC  0E00               	movlw	0
 27431  0146FE  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 27432  014700  0E00               	movlw	0
 27433  014702  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 27434  014704                     
 27435                           ; BSR set to: 0
 27436                           
 27437                           ; BSR set to: 0
 27438  014704  A160               	btfss	___lmul@multiplier& (0+255),0,b
 27439  014706  D008               	goto	l2927
 27440                           
 27441                           ; BSR set to: 0
 27442  014708  5164               	movf	___lmul@multiplicand& (0+255),w,b
 27443  01470A  2768               	addwf	___lmul@product& (0+255),f,b
 27444  01470C  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 27445  01470E  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 27446  014710  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 27447  014712  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 27448  014714  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 27449  014716  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 27450  014718                     l2927:
 27451                           
 27452                           ; BSR set to: 0
 27453                           
 27454                           ; BSR set to: 0
 27455  014718  90D8               	bcf	status,0,c
 27456  01471A  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 27457  01471C  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 27458  01471E  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 27459  014720  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 27460                           
 27461                           ; BSR set to: 0
 27462  014722  90D8               	bcf	status,0,c
 27463  014724  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 27464  014726  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 27465  014728  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 27466  01472A  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 27467  01472C  5160               	movf	___lmul@multiplier& (0+255),w,b
 27468  01472E  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 27469  014730  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 27470  014732  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 27471  014734  A4D8               	btfss	status,2,c
 27472  014736  D7E6               	goto	l2926
 27473                           
 27474                           ; BSR set to: 0
 27475  014738  C068  F060         	movff	___lmul@product,?___lmul
 27476  01473C  C069  F061         	movff	___lmul@product+1,?___lmul+1
 27477  014740  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 27478  014744  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 27479                           
 27480                           ; BSR set to: 0
 27481  014748  0012               	return		;funcret
 27482  01474A                     __end_of___lmul:
 27483                           	opt stack 0
 27484                           tblptru	equ	0xFF8
 27485                           tblptrh	equ	0xFF7
 27486                           tblptrl	equ	0xFF6
 27487                           tablat	equ	0xFF5
 27488                           prodh	equ	0xFF4
 27489                           prodl	equ	0xFF3
 27490                           intcon	equ	0xFF2
 27491                           postinc0	equ	0xFEE
 27492                           wreg	equ	0xFE8
 27493                           indf1	equ	0xFE7
 27494                           postinc1	equ	0xFE6
 27495                           postdec1	equ	0xFE5
 27496                           plusw1	equ	0xFE3
 27497                           fsr1h	equ	0xFE2
 27498                           fsr1l	equ	0xFE1
 27499                           indf2	equ	0xFDF
 27500                           postinc2	equ	0xFDE
 27501                           postdec2	equ	0xFDD
 27502                           plusw2	equ	0xFDB
 27503                           fsr2h	equ	0xFDA
 27504                           fsr2l	equ	0xFD9
 27505                           status	equ	0xFD8
 27506                           
 27507 ;; *************** function __display_signed_itoa *****************
 27508 ;; Defined at:
 27509 ;;		line 120 in file "display.c"
 27510 ;; Parameters:    Size  Location     Type
 27511 ;;  value           2   47[BANK0 ] int 
 27512 ;;  text            2   49[BANK0 ] PTR unsigned char 
 27513 ;;		 -> display_prepare@temp(10), 
 27514 ;; Auto vars:     Size  Location     Type
 27515 ;;		None
 27516 ;; Return value:  Size  Location     Type
 27517 ;;                  1    wreg      void 
 27518 ;; Registers used:
 27519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27520 ;; Tracked objects:
 27521 ;;		On entry : 0/0
 27522 ;;		On exit  : 0/0
 27523 ;;		Unchanged: 0/0
 27524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27528 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27529 ;;Total ram usage:        4 bytes
 27530 ;; Hardware stack levels used:    1
 27531 ;; Hardware stack levels required when called:   14
 27532 ;; This function calls:
 27533 ;;		__display_padded_itoa
 27534 ;; This function is called by:
 27535 ;;		_display_prepare
 27536 ;; This function uses a non-reentrant model
 27537 ;;
 27538                           
 27539                           	psect	text107
 27540  014D8E                     __ptext107:
 27541                           	opt stack 0
 27542  014D8E                     __display_signed_itoa:
 27543                           	opt stack 15
 27544                           
 27545                           ;display.c: 122: if(value<0)
 27546                           
 27547                           ; BSR set to: 0
 27548                           ;incstack = 0
 27549  014D8E  0100               	movlb	0	; () banked
 27550  014D90  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 27551  014D92  D00A               	goto	l1326
 27552                           
 27553                           ; BSR set to: 0
 27554                           ;display.c: 123: {;display.c: 124: value = -value;
 27555  014D94  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 27556  014D96  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 27557  014D98  B0D8               	btfsc	status,0,c
 27558  014D9A  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 27559                           
 27560                           ; BSR set to: 0
 27561                           ;display.c: 125: text[0] = '-';
 27562  014D9C  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27563  014DA0  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27564  014DA4  0E2D               	movlw	45
 27565  014DA6  D005               	goto	L37
 27566  014DA8                     l1326:
 27567                           
 27568                           ; BSR set to: 0
 27569                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 27570                           
 27571                           ; BSR set to: 0
 27572  014DA8  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27573  014DAC  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27574  014DB0  0E2B               	movlw	43
 27575  014DB2                     L37:
 27576  014DB2  6EDF               	movwf	indf2,c
 27577                           
 27578                           ; BSR set to: 0
 27579                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 27580                           
 27581                           ; BSR set to: 0
 27582  014DB4  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 27583  014DB8  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 27584  014DBC  0E00               	movlw	0
 27585  014DBE  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 27586  014DC0  0E01               	movlw	1
 27587  014DC2  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 27588  014DC4  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 27589  014DC6  0E00               	movlw	0
 27590  014DC8  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 27591  014DCA  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 27592  014DCC  EC59  F08F         	call	__display_padded_itoa	;wreg free
 27593  014DD0  0012               	return		;funcret
 27594  014DD2                     __end_of__display_signed_itoa:
 27595                           	opt stack 0
 27596                           tblptru	equ	0xFF8
 27597                           tblptrh	equ	0xFF7
 27598                           tblptrl	equ	0xFF6
 27599                           tablat	equ	0xFF5
 27600                           prodh	equ	0xFF4
 27601                           prodl	equ	0xFF3
 27602                           intcon	equ	0xFF2
 27603                           postinc0	equ	0xFEE
 27604                           wreg	equ	0xFE8
 27605                           indf1	equ	0xFE7
 27606                           postinc1	equ	0xFE6
 27607                           postdec1	equ	0xFE5
 27608                           plusw1	equ	0xFE3
 27609                           fsr1h	equ	0xFE2
 27610                           fsr1l	equ	0xFE1
 27611                           indf2	equ	0xFDF
 27612                           postinc2	equ	0xFDE
 27613                           postdec2	equ	0xFDD
 27614                           plusw2	equ	0xFDB
 27615                           fsr2h	equ	0xFDA
 27616                           fsr2l	equ	0xFD9
 27617                           status	equ	0xFD8
 27618                           
 27619 ;; *************** function __display_padded_itoa *****************
 27620 ;; Defined at:
 27621 ;;		line 98 in file "display.c"
 27622 ;; Parameters:    Size  Location     Type
 27623 ;;  value           2   24[BANK0 ] int 
 27624 ;;  length          1   26[BANK0 ] unsigned char 
 27625 ;;  text            2   27[BANK0 ] PTR unsigned char 
 27626 ;;		 -> display_prepare@temp(10), 
 27627 ;; Auto vars:     Size  Location     Type
 27628 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 27629 ;;  padding         1   46[BANK0 ] unsigned char 
 27630 ;;  pos             1   45[BANK0 ] unsigned char 
 27631 ;;  len             1   44[BANK0 ] unsigned char 
 27632 ;; Return value:  Size  Location     Type
 27633 ;;                  1    wreg      void 
 27634 ;; Registers used:
 27635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27636 ;; Tracked objects:
 27637 ;;		On entry : 0/0
 27638 ;;		On exit  : 0/0
 27639 ;;		Unchanged: 0/0
 27640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27641 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27642 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27643 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27644 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27645 ;;Total ram usage:       23 bytes
 27646 ;; Hardware stack levels used:    1
 27647 ;; Hardware stack levels required when called:   13
 27648 ;; This function calls:
 27649 ;;		_itoa
 27650 ;;		_strlen
 27651 ;; This function is called by:
 27652 ;;		__display_signed_itoa
 27653 ;;		_display_prepare
 27654 ;; This function uses a non-reentrant model
 27655 ;;
 27656                           
 27657                           	psect	text108
 27658  011EB2                     __ptext108:
 27659                           	opt stack 0
 27660  011EB2                     __display_padded_itoa:
 27661                           	opt stack 15
 27662                           
 27663                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 27664                           
 27665                           ;incstack = 0
 27666  011EB2  0E82               	movlw	low __display_padded_itoa@tmp
 27667  011EB4  0100               	movlb	0	; () banked
 27668  011EB6  6F70               	movwf	itoa@buf& (0+255),b
 27669  011EB8  0E00               	movlw	high __display_padded_itoa@tmp
 27670  011EBA  6F71               	movwf	(itoa@buf+1)& (0+255),b
 27671  011EBC  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 27672  011EC0  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 27673  011EC4  0E00               	movlw	0
 27674  011EC6  6F75               	movwf	(itoa@base+1)& (0+255),b
 27675  011EC8  0E0A               	movlw	10
 27676  011ECA  6F74               	movwf	itoa@base& (0+255),b
 27677  011ECC  ECE9  F0A6         	call	_itoa	;wreg free
 27678                           
 27679                           ;display.c: 106: len = strlen(tmp);
 27680  011ED0  0E82               	movlw	low __display_padded_itoa@tmp
 27681  011ED2  0100               	movlb	0	; () banked
 27682  011ED4  6F60               	movwf	strlen@s& (0+255),b
 27683  011ED6  0E00               	movlw	high __display_padded_itoa@tmp
 27684  011ED8  6F61               	movwf	(strlen@s+1)& (0+255),b
 27685  011EDA  EC8F  F0A7         	call	_strlen	;wreg free
 27686  011EDE  0100               	movlb	0	; () banked
 27687  011EE0  5160               	movf	?_strlen& (0+255),w,b
 27688  011EE2  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 27689                           
 27690                           ; BSR set to: 0
 27691                           ;display.c: 107: padding = 0;
 27692  011EE4  0E00               	movlw	0
 27693  011EE6  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 27694                           
 27695                           ;display.c: 108: while((padding+len)<length)
 27696  011EE8  D00B               	goto	l1317
 27697  011EEA                     
 27698                           ; BSR set to: 0
 27699                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 27700                           
 27701                           ; BSR set to: 0
 27702  011EEA  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27703  011EEC  0D01               	mullw	1
 27704  011EEE  50F3               	movf	prodl,w,c
 27705  011EF0  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27706  011EF2  6ED9               	movwf	fsr2l,c
 27707  011EF4  50F4               	movf	prodh,w,c
 27708  011EF6  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27709  011EF8  6EDA               	movwf	fsr2h,c
 27710  011EFA  0E20               	movlw	32
 27711  011EFC  6EDF               	movwf	indf2,c
 27712                           
 27713                           ; BSR set to: 0
 27714                           ;display.c: 111: ++padding;
 27715  011EFE  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 27716  011F00                     l1317:
 27717                           
 27718                           ; BSR set to: 0
 27719                           
 27720                           ; BSR set to: 0
 27721  011F00  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 27722  011F02  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 27723  011F04  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27724  011F06  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 27725  011F08  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 27726  011F0C  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 27727  011F0E  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 27728  011F10  0E00               	movlw	0
 27729  011F12  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 27730  011F14  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27731  011F16  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 27732  011F18  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 27733  011F1A  0A80               	xorlw	128
 27734  011F1C  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 27735  011F1E  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27736  011F20  0A80               	xorlw	128
 27737  011F22  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 27738  011F24  A0D8               	btfss	status,0,c
 27739  011F26  D7E1               	goto	l1318
 27740                           
 27741                           ; BSR set to: 0
 27742                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 27743                           
 27744                           ; BSR set to: 0
 27745  011F28  0E00               	movlw	0
 27746  011F2A  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 27747  011F2C  D018               	goto	l1320
 27748  011F2E                     
 27749                           ; BSR set to: 0
 27750                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 27751                           
 27752                           ; BSR set to: 0
 27753  011F2E  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27754  011F30  0D01               	mullw	1
 27755  011F32  0E82               	movlw	low __display_padded_itoa@tmp
 27756  011F34  24F3               	addwf	prodl,w,c
 27757  011F36  6ED9               	movwf	fsr2l,c
 27758  011F38  0E00               	movlw	high __display_padded_itoa@tmp
 27759  011F3A  20F4               	addwfc	prodh,w,c
 27760  011F3C  6EDA               	movwf	fsr2h,c
 27761  011F3E  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27762  011F40  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27763  011F44  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27764  011F46  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27765  011F48  0E00               	movlw	0
 27766  011F4A  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27767  011F4C  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27768  011F4E  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27769  011F50  6EE1               	movwf	fsr1l,c
 27770  011F52  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27771  011F54  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27772  011F56  6EE2               	movwf	fsr1h,c
 27773  011F58  CFDF FFE7          	movff	indf2,indf1
 27774                           
 27775                           ; BSR set to: 0
 27776  011F5C  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 27777  011F5E                     l1320:
 27778                           
 27779                           ; BSR set to: 0
 27780                           
 27781                           ; BSR set to: 0
 27782  011F5E  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27783  011F60  0D01               	mullw	1
 27784  011F62  0E82               	movlw	low __display_padded_itoa@tmp
 27785  011F64  24F3               	addwf	prodl,w,c
 27786  011F66  6ED9               	movwf	fsr2l,c
 27787  011F68  0E00               	movlw	high __display_padded_itoa@tmp
 27788  011F6A  20F4               	addwfc	prodh,w,c
 27789  011F6C  6EDA               	movwf	fsr2h,c
 27790  011F6E  50DF               	movf	indf2,w,c
 27791  011F70  A4D8               	btfss	status,2,c
 27792  011F72  D7DD               	goto	l1321
 27793                           
 27794                           ; BSR set to: 0
 27795                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 27796                           
 27797                           ; BSR set to: 0
 27798  011F74  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27799  011F76  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27800  011F7A  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27801  011F7C  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27802  011F7E  0E00               	movlw	0
 27803  011F80  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27804  011F82  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27805  011F84  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27806  011F86  6ED9               	movwf	fsr2l,c
 27807  011F88  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27808  011F8A  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27809  011F8C  6EDA               	movwf	fsr2h,c
 27810  011F8E  0E00               	movlw	0
 27811  011F90  6EDF               	movwf	indf2,c
 27812                           
 27813                           ; BSR set to: 0
 27814  011F92  0012               	return		;funcret
 27815  011F94                     __end_of__display_padded_itoa:
 27816                           	opt stack 0
 27817                           tblptru	equ	0xFF8
 27818                           tblptrh	equ	0xFF7
 27819                           tblptrl	equ	0xFF6
 27820                           tablat	equ	0xFF5
 27821                           prodh	equ	0xFF4
 27822                           prodl	equ	0xFF3
 27823                           intcon	equ	0xFF2
 27824                           postinc0	equ	0xFEE
 27825                           wreg	equ	0xFE8
 27826                           indf1	equ	0xFE7
 27827                           postinc1	equ	0xFE6
 27828                           postdec1	equ	0xFE5
 27829                           plusw1	equ	0xFE3
 27830                           fsr1h	equ	0xFE2
 27831                           fsr1l	equ	0xFE1
 27832                           indf2	equ	0xFDF
 27833                           postinc2	equ	0xFDE
 27834                           postdec2	equ	0xFDD
 27835                           plusw2	equ	0xFDB
 27836                           fsr2h	equ	0xFDA
 27837                           fsr2l	equ	0xFD9
 27838                           status	equ	0xFD8
 27839                           
 27840 ;; *************** function __display_itoa_long *****************
 27841 ;; Defined at:
 27842 ;;		line 202 in file "display.c"
 27843 ;; Parameters:    Size  Location     Type
 27844 ;;  value           4   77[BANK0 ] long 
 27845 ;;  decimals        1   81[BANK0 ] unsigned char 
 27846 ;;  text            2   82[BANK0 ] PTR unsigned char 
 27847 ;;		 -> display_prepare@temp(10), 
 27848 ;; Auto vars:     Size  Location     Type
 27849 ;;  short_value     2   89[BANK0 ] int 
 27850 ;;  last_digit      1   91[BANK0 ] char 
 27851 ;;  length          1   88[BANK0 ] unsigned char 
 27852 ;; Return value:  Size  Location     Type
 27853 ;;                  1    wreg      void 
 27854 ;; Registers used:
 27855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27856 ;; Tracked objects:
 27857 ;;		On entry : 0/0
 27858 ;;		On exit  : 0/0
 27859 ;;		Unchanged: 0/0
 27860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27861 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27862 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27863 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27864 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27865 ;;Total ram usage:       15 bytes
 27866 ;; Hardware stack levels used:    1
 27867 ;; Hardware stack levels required when called:   14
 27868 ;; This function calls:
 27869 ;;		___aldiv
 27870 ;;		___almod
 27871 ;;		__display_itoa
 27872 ;;		_strlen
 27873 ;; This function is called by:
 27874 ;;		_display_prepare
 27875 ;; This function uses a non-reentrant model
 27876 ;;
 27877                           
 27878                           	psect	text109
 27879  010C2C                     __ptext109:
 27880                           	opt stack 0
 27881  010C2C                     __display_itoa_long:
 27882                           	opt stack 15
 27883                           
 27884                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 27885                           
 27886                           ; BSR set to: 0
 27887                           ;incstack = 0
 27888  010C2C  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 27889  010C30  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 27890                           
 27891                           ;display.c: 209: if(short_value==value)
 27892  010C34  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 27893  010C38  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 27894  010C3C  0E00               	movlw	0
 27895  010C3E  0100               	movlb	0	; () banked
 27896  010C40  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 27897  010C42  0EFF               	movlw	255
 27898  010C44  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 27899  010C46  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 27900  010C48  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 27901  010C4A  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 27902  010C4C  E117               	bnz	l16927
 27903  010C4E  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 27904  010C50  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 27905  010C52  E114               	bnz	l16927
 27906  010C54  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 27907  010C56  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 27908  010C58  E111               	bnz	l16927
 27909  010C5A  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 27910  010C5C  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 27911  010C5E  A4D8               	btfss	status,2,c
 27912  010C60  D00D               	goto	l1353
 27913                           
 27914                           ; BSR set to: 0
 27915                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 27916  010C62  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27917  010C66  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27918  010C6A  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 27919  010C6E  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27920  010C72  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27921  010C76  EC5E  F075         	call	__display_itoa	;wreg free
 27922                           
 27923                           ;display.c: 212: }
 27924  010C7A  0012               	return	
 27925  010C7C                     l1353:
 27926  010C7C                     l16927:
 27927                           
 27928                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 27929  010C7C  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 27930  010C80  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 27931  010C84  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 27932  010C88  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 27933  010C8C  0E0A               	movlw	10
 27934  010C8E  0100               	movlb	0	; () banked
 27935  010C90  6F64               	movwf	___aldiv@divisor& (0+255),b
 27936  010C92  0E00               	movlw	0
 27937  010C94  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 27938  010C96  0E00               	movlw	0
 27939  010C98  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 27940  010C9A  0E00               	movlw	0
 27941  010C9C  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 27942  010C9E  EC01  F094         	call	___aldiv	;wreg free
 27943  010CA2  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 27944  010CA6  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 27945                           
 27946                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 27947  010CAA  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27948  010CAE  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27949  010CB2  0100               	movlb	0	; () banked
 27950  010CB4  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 27951  010CB6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 27952  010CB8  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27953  010CBC  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27954  010CC0  EC5E  F075         	call	__display_itoa	;wreg free
 27955                           
 27956                           ;display.c: 217: length = strlen(text);
 27957  010CC4  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 27958  010CC8  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 27959  010CCC  EC8F  F0A7         	call	_strlen	;wreg free
 27960  010CD0  0100               	movlb	0	; () banked
 27961  010CD2  5160               	movf	?_strlen& (0+255),w,b
 27962  010CD4  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 27963                           
 27964                           ; BSR set to: 0
 27965                           ;display.c: 218: last_digit = value % 10;
 27966  010CD6  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 27967  010CDA  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 27968  010CDE  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 27969  010CE2  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 27970  010CE6  0E0A               	movlw	10
 27971  010CE8  6F64               	movwf	___almod@divisor& (0+255),b
 27972  010CEA  0E00               	movlw	0
 27973  010CEC  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 27974  010CEE  0E00               	movlw	0
 27975  010CF0  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 27976  010CF2  0E00               	movlw	0
 27977  010CF4  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 27978  010CF6  EC50  F097         	call	___almod	;wreg free
 27979  010CFA  0100               	movlb	0	; () banked
 27980  010CFC  5160               	movf	?___almod& (0+255),w,b
 27981  010CFE  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 27982                           
 27983                           ; BSR set to: 0
 27984                           ;display.c: 219: if(last_digit<0)
 27985  010D00  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 27986                           
 27987                           ; BSR set to: 0
 27988                           ;display.c: 220: last_digit = -last_digit;
 27989  010D02  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 27990                           
 27991                           ; BSR set to: 0
 27992                           ;display.c: 221: text[length] = last_digit + 0x30;
 27993                           
 27994                           ; BSR set to: 0
 27995  010D04  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27996  010D06  0D01               	mullw	1
 27997  010D08  50F3               	movf	prodl,w,c
 27998  010D0A  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27999  010D0C  6ED9               	movwf	fsr2l,c
 28000  010D0E  50F4               	movf	prodh,w,c
 28001  010D10  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 28002  010D12  6EDA               	movwf	fsr2h,c
 28003  010D14  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 28004  010D16  0F30               	addlw	48
 28005  010D18  6EDF               	movwf	indf2,c
 28006                           
 28007                           ; BSR set to: 0
 28008                           ;display.c: 222: text[length+1] = 0x00;
 28009  010D1A  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 28010  010D1C  6FB4               	movwf	??__display_itoa_long& (0+255),b
 28011  010D1E  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 28012  010D20  0E01               	movlw	1
 28013  010D22  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 28014  010D24  0E00               	movlw	0
 28015  010D26  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 28016  010D28  51B4               	movf	??__display_itoa_long& (0+255),w,b
 28017  010D2A  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 28018  010D2C  6ED9               	movwf	fsr2l,c
 28019  010D2E  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 28020  010D30  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 28021  010D32  6EDA               	movwf	fsr2h,c
 28022  010D34  0E00               	movlw	0
 28023  010D36  6EDF               	movwf	indf2,c
 28024  010D38  0012               	return	
 28025  010D3A                     __end_of__display_itoa_long:
 28026                           	opt stack 0
 28027                           tblptru	equ	0xFF8
 28028                           tblptrh	equ	0xFF7
 28029                           tblptrl	equ	0xFF6
 28030                           tablat	equ	0xFF5
 28031                           prodh	equ	0xFF4
 28032                           prodl	equ	0xFF3
 28033                           intcon	equ	0xFF2
 28034                           postinc0	equ	0xFEE
 28035                           wreg	equ	0xFE8
 28036                           indf1	equ	0xFE7
 28037                           postinc1	equ	0xFE6
 28038                           postdec1	equ	0xFE5
 28039                           plusw1	equ	0xFE3
 28040                           fsr1h	equ	0xFE2
 28041                           fsr1l	equ	0xFE1
 28042                           indf2	equ	0xFDF
 28043                           postinc2	equ	0xFDE
 28044                           postdec2	equ	0xFDD
 28045                           plusw2	equ	0xFDB
 28046                           fsr2h	equ	0xFDA
 28047                           fsr2l	equ	0xFD9
 28048                           status	equ	0xFD8
 28049                           
 28050 ;; *************** function __display_itoa *****************
 28051 ;; Defined at:
 28052 ;;		line 134 in file "display.c"
 28053 ;; Parameters:    Size  Location     Type
 28054 ;;  value           2   53[BANK0 ] int 
 28055 ;;  decimals        1   55[BANK0 ] unsigned char 
 28056 ;;  text            2   56[BANK0 ] PTR unsigned char 
 28057 ;;		 -> display_prepare@temp(10), display_content(80), 
 28058 ;; Auto vars:     Size  Location     Type
 28059 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 28060 ;;  pos             1   76[BANK0 ] unsigned char 
 28061 ;;  missing         1   75[BANK0 ] char 
 28062 ;;  len             1   74[BANK0 ] unsigned char 
 28063 ;; Return value:  Size  Location     Type
 28064 ;;                  1    wreg      void 
 28065 ;; Registers used:
 28066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28067 ;; Tracked objects:
 28068 ;;		On entry : 0/0
 28069 ;;		On exit  : 0/0
 28070 ;;		Unchanged: 0/0
 28071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28072 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28073 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28074 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28075 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28076 ;;Total ram usage:       24 bytes
 28077 ;; Hardware stack levels used:    1
 28078 ;; Hardware stack levels required when called:   13
 28079 ;; This function calls:
 28080 ;;		_itoa
 28081 ;;		_strlen
 28082 ;; This function is called by:
 28083 ;;		__display_itoa_long
 28084 ;;		_display_prepare
 28085 ;; This function uses a non-reentrant model
 28086 ;;
 28087                           
 28088                           	psect	text110
 28089  00EABC                     __ptext110:
 28090                           	opt stack 0
 28091  00EABC                     __display_itoa:
 28092                           	opt stack 15
 28093                           
 28094                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 28095                           
 28096                           ;incstack = 0
 28097  00EABC  0EA0               	movlw	low __display_itoa@tmp
 28098  00EABE  0100               	movlb	0	; () banked
 28099  00EAC0  6F70               	movwf	itoa@buf& (0+255),b
 28100  00EAC2  0E00               	movlw	high __display_itoa@tmp
 28101  00EAC4  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28102  00EAC6  C095  F072         	movff	__display_itoa@value,itoa@val
 28103  00EACA  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 28104  00EACE  0E00               	movlw	0
 28105  00EAD0  6F75               	movwf	(itoa@base+1)& (0+255),b
 28106  00EAD2  0E0A               	movlw	10
 28107  00EAD4  6F74               	movwf	itoa@base& (0+255),b
 28108  00EAD6  ECE9  F0A6         	call	_itoa	;wreg free
 28109                           
 28110                           ;display.c: 141: len = strlen(tmp);
 28111  00EADA  0EA0               	movlw	low __display_itoa@tmp
 28112  00EADC  0100               	movlb	0	; () banked
 28113  00EADE  6F60               	movwf	strlen@s& (0+255),b
 28114  00EAE0  0E00               	movlw	high __display_itoa@tmp
 28115  00EAE2  6F61               	movwf	(strlen@s+1)& (0+255),b
 28116  00EAE4  EC8F  F0A7         	call	_strlen	;wreg free
 28117  00EAE8  0100               	movlb	0	; () banked
 28118  00EAEA  5160               	movf	?_strlen& (0+255),w,b
 28119  00EAEC  6FAA               	movwf	__display_itoa@len& (0+255),b
 28120                           
 28121                           ; BSR set to: 0
 28122                           ;display.c: 143: if(value<0)
 28123  00EAEE  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 28124  00EAF0  D054               	goto	l1331
 28125                           
 28126                           ; BSR set to: 0
 28127                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 28128  00EAF2  51AA               	movf	__display_itoa@len& (0+255),w,b
 28129  00EAF4  0800               	sublw	0
 28130  00EAF6  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28131  00EAF8  0F02               	addlw	2
 28132  00EAFA  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28133                           
 28134                           ;display.c: 146: if(missing>0)
 28135  00EAFC  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28136  00EAFE  0A80               	xorlw	128
 28137  00EB00  0F7F               	addlw	-129
 28138  00EB02  A0D8               	btfss	status,0,c
 28139  00EB04  D090               	goto	l1338
 28140                           
 28141                           ; BSR set to: 0
 28142                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 28143  00EB06  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28144  00EB0A                     l15263:
 28145                           
 28146                           ; BSR set to: 0
 28147  00EB0A  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28148  00EB0C  B4D8               	btfsc	status,2,c
 28149  00EB0E  D042               	goto	u14050
 28150                           
 28151                           ; BSR set to: 0
 28152                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 28153                           
 28154                           ; BSR set to: 0
 28155                           
 28156                           ; BSR set to: 0
 28157  00EB10  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28158  00EB12  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28159  00EB14  D004               	goto	u14040
 28160  00EB16  0AFF               	xorlw	255
 28161  00EB18  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28162  00EB1A  B0D8               	btfsc	status,0,c
 28163  00EB1C  D02A               	goto	l1335
 28164  00EB1E                     u14040:
 28165                           
 28166                           ; BSR set to: 0
 28167                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 28168  00EB1E  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28169  00EB22  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28170  00EB24  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28171  00EB26  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28172  00EB28  1F9A               	comf	??__display_itoa& (0+255),f,b
 28173  00EB2A  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28174  00EB2C  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28175  00EB2E  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28176  00EB30  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28177  00EB32  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28178  00EB34  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28179  00EB36  519A               	movf	??__display_itoa& (0+255),w,b
 28180  00EB38  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28181  00EB3A  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28182  00EB3C  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28183  00EB3E  0E01               	movlw	1
 28184  00EB40  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28185  00EB42  0E00               	movlw	0
 28186  00EB44  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28187  00EB46  0EA0               	movlw	low __display_itoa@tmp
 28188  00EB48  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28189  00EB4A  6ED9               	movwf	fsr2l,c
 28190  00EB4C  0E00               	movlw	high __display_itoa@tmp
 28191  00EB4E  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28192  00EB50  6EDA               	movwf	fsr2h,c
 28193  00EB52  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28194  00EB54  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 28195  00EB56  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 28196  00EB58  0E01               	movlw	1
 28197  00EB5A  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 28198  00EB5C  0E00               	movlw	0
 28199  00EB5E  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 28200  00EB60  0EA0               	movlw	low __display_itoa@tmp
 28201  00EB62  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 28202  00EB64  6EE1               	movwf	fsr1l,c
 28203  00EB66  0E00               	movlw	high __display_itoa@tmp
 28204  00EB68  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 28205  00EB6A  6EE2               	movwf	fsr1h,c
 28206  00EB6C  CFDF FFE7          	movff	indf2,indf1
 28207                           
 28208                           ;display.c: 153: }
 28209  00EB70  D00F               	goto	l1336
 28210  00EB72                     l1335:
 28211                           
 28212                           ; BSR set to: 0
 28213                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 28214                           
 28215                           ; BSR set to: 0
 28216  00EB72  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28217  00EB74  6F9A               	movwf	??__display_itoa& (0+255),b
 28218  00EB76  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28219  00EB78  0E01               	movlw	1
 28220  00EB7A  279A               	addwf	??__display_itoa& (0+255),f,b
 28221  00EB7C  0E00               	movlw	0
 28222  00EB7E  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28223  00EB80  0EA0               	movlw	low __display_itoa@tmp
 28224  00EB82  259A               	addwf	??__display_itoa& (0+255),w,b
 28225  00EB84  6ED9               	movwf	fsr2l,c
 28226  00EB86  0E00               	movlw	high __display_itoa@tmp
 28227  00EB88  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 28228  00EB8A  6EDA               	movwf	fsr2h,c
 28229  00EB8C  0E30               	movlw	48
 28230  00EB8E  6EDF               	movwf	indf2,c
 28231  00EB90                     l1336:
 28232                           
 28233                           ; BSR set to: 0
 28234                           
 28235                           ; BSR set to: 0
 28236  00EB90  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28237  00EB92  D7BB               	goto	l15263
 28238  00EB94                     u14050:
 28239                           
 28240                           ; BSR set to: 0
 28241                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 28242                           
 28243                           ; BSR set to: 0
 28244  00EB94  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28245  00EB96  0F02               	addlw	2
 28246  00EB98  D045               	goto	L38
 28247  00EB9A                     l1331:
 28248                           
 28249                           ; BSR set to: 0
 28250                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 28251                           
 28252                           ; BSR set to: 0
 28253  00EB9A  51AA               	movf	__display_itoa@len& (0+255),w,b
 28254  00EB9C  0800               	sublw	0
 28255  00EB9E  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28256  00EBA0  6F9A               	movwf	??__display_itoa& (0+255),b
 28257  00EBA2  299A               	incf	??__display_itoa& (0+255),w,b
 28258  00EBA4  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28259                           
 28260                           ;display.c: 165: if(missing>0)
 28261  00EBA6  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28262  00EBA8  0A80               	xorlw	128
 28263  00EBAA  0F7F               	addlw	-129
 28264  00EBAC  A0D8               	btfss	status,0,c
 28265  00EBAE  D03B               	goto	l1338
 28266                           
 28267                           ; BSR set to: 0
 28268                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 28269  00EBB0  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28270  00EBB4                     l15283:
 28271                           
 28272                           ; BSR set to: 0
 28273  00EBB4  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28274  00EBB6  B4D8               	btfsc	status,2,c
 28275  00EBB8  D034               	goto	u14090
 28276                           
 28277                           ; BSR set to: 0
 28278                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 28279                           
 28280                           ; BSR set to: 0
 28281                           
 28282                           ; BSR set to: 0
 28283  00EBBA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28284  00EBBC  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28285  00EBBE  D004               	goto	u14080
 28286  00EBC0  0AFF               	xorlw	255
 28287  00EBC2  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28288  00EBC4  B0D8               	btfsc	status,0,c
 28289  00EBC6  D021               	goto	l1341
 28290  00EBC8                     u14080:
 28291                           
 28292                           ; BSR set to: 0
 28293                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 28294  00EBC8  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28295  00EBCC  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28296  00EBCE  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28297  00EBD0  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28298  00EBD2  1F9A               	comf	??__display_itoa& (0+255),f,b
 28299  00EBD4  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28300  00EBD6  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28301  00EBD8  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28302  00EBDA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28303  00EBDC  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28304  00EBDE  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28305  00EBE0  519A               	movf	??__display_itoa& (0+255),w,b
 28306  00EBE2  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28307  00EBE4  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28308  00EBE6  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28309  00EBE8  0EA0               	movlw	low __display_itoa@tmp
 28310  00EBEA  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28311  00EBEC  6ED9               	movwf	fsr2l,c
 28312  00EBEE  0E00               	movlw	high __display_itoa@tmp
 28313  00EBF0  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28314  00EBF2  6EDA               	movwf	fsr2h,c
 28315  00EBF4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28316  00EBF6  0D01               	mullw	1
 28317  00EBF8  0EA0               	movlw	low __display_itoa@tmp
 28318  00EBFA  24F3               	addwf	prodl,w,c
 28319  00EBFC  6EE1               	movwf	fsr1l,c
 28320  00EBFE  0E00               	movlw	high __display_itoa@tmp
 28321  00EC00  20F4               	addwfc	prodh,w,c
 28322  00EC02  6EE2               	movwf	fsr1h,c
 28323  00EC04  CFDF FFE7          	movff	indf2,indf1
 28324                           
 28325                           ;display.c: 172: }
 28326  00EC08  D00A               	goto	l1342
 28327  00EC0A                     l1341:
 28328                           
 28329                           ; BSR set to: 0
 28330                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 28331                           
 28332                           ; BSR set to: 0
 28333  00EC0A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28334  00EC0C  0D01               	mullw	1
 28335  00EC0E  0EA0               	movlw	low __display_itoa@tmp
 28336  00EC10  24F3               	addwf	prodl,w,c
 28337  00EC12  6ED9               	movwf	fsr2l,c
 28338  00EC14  0E00               	movlw	high __display_itoa@tmp
 28339  00EC16  20F4               	addwfc	prodh,w,c
 28340  00EC18  6EDA               	movwf	fsr2h,c
 28341  00EC1A  0E30               	movlw	48
 28342  00EC1C  6EDF               	movwf	indf2,c
 28343  00EC1E                     l1342:
 28344                           
 28345                           ; BSR set to: 0
 28346                           
 28347                           ; BSR set to: 0
 28348  00EC1E  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28349  00EC20  D7C9               	goto	l15283
 28350  00EC22                     u14090:
 28351                           
 28352                           ; BSR set to: 0
 28353                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 28354                           
 28355                           ; BSR set to: 0
 28356  00EC22  2997               	incf	__display_itoa@decimals& (0+255),w,b
 28357  00EC24                     L38:
 28358  00EC24  6FAA               	movwf	__display_itoa@len& (0+255),b
 28359  00EC26                     l1338:
 28360                           
 28361                           ; BSR set to: 0
 28362                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 28363                           
 28364                           ; BSR set to: 0
 28365  00EC26  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28366  00EC28  0800               	sublw	0
 28367  00EC2A  25AA               	addwf	__display_itoa@len& (0+255),w,b
 28368  00EC2C  6F9A               	movwf	??__display_itoa& (0+255),b
 28369  00EC2E  059A               	decf	??__display_itoa& (0+255),w,b
 28370  00EC30  6F97               	movwf	__display_itoa@decimals& (0+255),b
 28371                           
 28372                           ; BSR set to: 0
 28373                           ;display.c: 184: for(pos=0;pos<len;++pos)
 28374  00EC32  0E00               	movlw	0
 28375  00EC34  6FAC               	movwf	__display_itoa@pos& (0+255),b
 28376  00EC36  D023               	goto	l1343
 28377  00EC38                     
 28378                           ; BSR set to: 0
 28379                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 28380                           
 28381                           ; BSR set to: 0
 28382  00EC38  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28383  00EC3A  0D01               	mullw	1
 28384  00EC3C  0EA0               	movlw	low __display_itoa@tmp
 28385  00EC3E  24F3               	addwf	prodl,w,c
 28386  00EC40  6ED9               	movwf	fsr2l,c
 28387  00EC42  0E00               	movlw	high __display_itoa@tmp
 28388  00EC44  20F4               	addwfc	prodh,w,c
 28389  00EC46  6EDA               	movwf	fsr2h,c
 28390  00EC48  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28391  00EC4A  0D01               	mullw	1
 28392  00EC4C  50F3               	movf	prodl,w,c
 28393  00EC4E  2598               	addwf	__display_itoa@text& (0+255),w,b
 28394  00EC50  6EE1               	movwf	fsr1l,c
 28395  00EC52  50F4               	movf	prodh,w,c
 28396  00EC54  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28397  00EC56  6EE2               	movwf	fsr1h,c
 28398  00EC58  CFDF FFE7          	movff	indf2,indf1
 28399                           
 28400                           ; BSR set to: 0
 28401                           ;display.c: 187: if(pos==decimals)
 28402  00EC5C  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28403  00EC5E  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 28404  00EC60  A4D8               	btfss	status,2,c
 28405  00EC62  D00C               	goto	l1345
 28406                           
 28407                           ; BSR set to: 0
 28408                           ;display.c: 188: {;display.c: 190: ++pos;
 28409  00EC64  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28410                           
 28411                           ; BSR set to: 0
 28412                           ;display.c: 191: text[pos] = '.';
 28413  00EC66  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28414  00EC68  0D01               	mullw	1
 28415  00EC6A  50F3               	movf	prodl,w,c
 28416  00EC6C  2598               	addwf	__display_itoa@text& (0+255),w,b
 28417  00EC6E  6ED9               	movwf	fsr2l,c
 28418  00EC70  50F4               	movf	prodh,w,c
 28419  00EC72  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28420  00EC74  6EDA               	movwf	fsr2h,c
 28421  00EC76  0E2E               	movlw	46
 28422  00EC78  6EDF               	movwf	indf2,c
 28423                           
 28424                           ;display.c: 192: break;
 28425  00EC7A  D01E               	goto	l1347
 28426  00EC7C                     l1345:
 28427                           
 28428                           ; BSR set to: 0
 28429                           
 28430                           ; BSR set to: 0
 28431  00EC7C  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28432  00EC7E                     l1343:
 28433                           
 28434                           ; BSR set to: 0
 28435                           
 28436                           ; BSR set to: 0
 28437  00EC7E  51AA               	movf	__display_itoa@len& (0+255),w,b
 28438  00EC80  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28439  00EC82  B0D8               	btfsc	status,0,c
 28440  00EC84  D019               	goto	l1347
 28441  00EC86  D7D8               	goto	l1344
 28442  00EC88                     
 28443                           ; BSR set to: 0
 28444                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 28445                           
 28446                           ; BSR set to: 0
 28447  00EC88  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28448  00EC8A  0D01               	mullw	1
 28449  00EC8C  0EA0               	movlw	low __display_itoa@tmp
 28450  00EC8E  24F3               	addwf	prodl,w,c
 28451  00EC90  6ED9               	movwf	fsr2l,c
 28452  00EC92  0E00               	movlw	high __display_itoa@tmp
 28453  00EC94  20F4               	addwfc	prodh,w,c
 28454  00EC96  6EDA               	movwf	fsr2h,c
 28455  00EC98  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28456  00EC9A  6F9A               	movwf	??__display_itoa& (0+255),b
 28457  00EC9C  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28458  00EC9E  0E01               	movlw	1
 28459  00ECA0  279A               	addwf	??__display_itoa& (0+255),f,b
 28460  00ECA2  0E00               	movlw	0
 28461  00ECA4  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28462  00ECA6  519A               	movf	??__display_itoa& (0+255),w,b
 28463  00ECA8  2598               	addwf	__display_itoa@text& (0+255),w,b
 28464  00ECAA  6EE1               	movwf	fsr1l,c
 28465  00ECAC  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28466  00ECAE  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28467  00ECB0  6EE2               	movwf	fsr1h,c
 28468  00ECB2  CFDF FFE7          	movff	indf2,indf1
 28469                           
 28470                           ; BSR set to: 0
 28471  00ECB6  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28472  00ECB8                     l1347:
 28473                           
 28474                           ; BSR set to: 0
 28475                           
 28476                           ; BSR set to: 0
 28477  00ECB8  51AA               	movf	__display_itoa@len& (0+255),w,b
 28478  00ECBA  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28479  00ECBC  A0D8               	btfss	status,0,c
 28480  00ECBE  D7E4               	goto	l1348
 28481                           
 28482                           ; BSR set to: 0
 28483                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 28484                           
 28485                           ; BSR set to: 0
 28486  00ECC0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28487  00ECC2  6F9A               	movwf	??__display_itoa& (0+255),b
 28488  00ECC4  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28489  00ECC6  0E01               	movlw	1
 28490  00ECC8  279A               	addwf	??__display_itoa& (0+255),f,b
 28491  00ECCA  0E00               	movlw	0
 28492  00ECCC  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28493  00ECCE  519A               	movf	??__display_itoa& (0+255),w,b
 28494  00ECD0  2598               	addwf	__display_itoa@text& (0+255),w,b
 28495  00ECD2  6ED9               	movwf	fsr2l,c
 28496  00ECD4  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28497  00ECD6  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28498  00ECD8  6EDA               	movwf	fsr2h,c
 28499  00ECDA  0E00               	movlw	0
 28500  00ECDC  6EDF               	movwf	indf2,c
 28501                           
 28502                           ; BSR set to: 0
 28503  00ECDE  0012               	return		;funcret
 28504  00ECE0                     __end_of__display_itoa:
 28505                           	opt stack 0
 28506                           tblptru	equ	0xFF8
 28507                           tblptrh	equ	0xFF7
 28508                           tblptrl	equ	0xFF6
 28509                           tablat	equ	0xFF5
 28510                           prodh	equ	0xFF4
 28511                           prodl	equ	0xFF3
 28512                           intcon	equ	0xFF2
 28513                           postinc0	equ	0xFEE
 28514                           wreg	equ	0xFE8
 28515                           indf1	equ	0xFE7
 28516                           postinc1	equ	0xFE6
 28517                           postdec1	equ	0xFE5
 28518                           plusw1	equ	0xFE3
 28519                           fsr1h	equ	0xFE2
 28520                           fsr1l	equ	0xFE1
 28521                           indf2	equ	0xFDF
 28522                           postinc2	equ	0xFDE
 28523                           postdec2	equ	0xFDD
 28524                           plusw2	equ	0xFDB
 28525                           fsr2h	equ	0xFDA
 28526                           fsr2l	equ	0xFD9
 28527                           status	equ	0xFD8
 28528                           
 28529 ;; *************** function _strlen *****************
 28530 ;; Defined at:
 28531 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 28532 ;; Parameters:    Size  Location     Type
 28533 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 28534 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28535 ;; Auto vars:     Size  Location     Type
 28536 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 28537 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28538 ;; Return value:  Size  Location     Type
 28539 ;;                  2    0[BANK0 ] unsigned int 
 28540 ;; Registers used:
 28541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28542 ;; Tracked objects:
 28543 ;;		On entry : 0/0
 28544 ;;		On exit  : 0/0
 28545 ;;		Unchanged: 0/0
 28546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28547 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28548 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28550 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28551 ;;Total ram usage:        6 bytes
 28552 ;; Hardware stack levels used:    1
 28553 ;; Hardware stack levels required when called:   10
 28554 ;; This function calls:
 28555 ;;		Nothing
 28556 ;; This function is called by:
 28557 ;;		__display_padded_itoa
 28558 ;;		__display_itoa
 28559 ;;		__display_itoa_long
 28560 ;;		_display_prepare
 28561 ;; This function uses a non-reentrant model
 28562 ;;
 28563                           
 28564                           	psect	text111
 28565  014F1E                     __ptext111:
 28566                           	opt stack 0
 28567  014F1E                     _strlen:
 28568                           	opt stack 19
 28569                           
 28570                           ; BSR set to: 0
 28571                           ;incstack = 0
 28572  014F1E  C060  F064         	movff	strlen@s,strlen@cp
 28573  014F22  C061  F065         	movff	strlen@s+1,strlen@cp+1
 28574  014F26  D003               	goto	l3663
 28575  014F28  0100               	movlb	0	; () banked
 28576  014F2A  4B64               	infsnz	strlen@cp& (0+255),f,b
 28577  014F2C  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 28578  014F2E                     l3663:
 28579                           
 28580                           ; BSR set to: 0
 28581  014F2E  C064  FFD9         	movff	strlen@cp,fsr2l
 28582  014F32  C065  FFDA         	movff	strlen@cp+1,fsr2h
 28583  014F36  50DF               	movf	indf2,w,c
 28584  014F38  A4D8               	btfss	status,2,c
 28585  014F3A  D7F6               	goto	l3664
 28586  014F3C  C060  F062         	movff	strlen@s,??_strlen
 28587  014F40  C061  F063         	movff	strlen@s+1,??_strlen+1
 28588  014F44  0100               	movlb	0	; () banked
 28589  014F46  1F62               	comf	??_strlen& (0+255),f,b
 28590  014F48  1F63               	comf	(??_strlen+1)& (0+255),f,b
 28591  014F4A  4B62               	infsnz	??_strlen& (0+255),f,b
 28592  014F4C  2B63               	incf	(??_strlen+1)& (0+255),f,b
 28593  014F4E  5164               	movf	strlen@cp& (0+255),w,b
 28594  014F50  2562               	addwf	??_strlen& (0+255),w,b
 28595  014F52  6F60               	movwf	?_strlen& (0+255),b
 28596  014F54  5165               	movf	(strlen@cp+1)& (0+255),w,b
 28597  014F56  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 28598  014F58  6F61               	movwf	(?_strlen+1)& (0+255),b
 28599  014F5A  0012               	return	
 28600  014F5C                     __end_of_strlen:
 28601                           	opt stack 0
 28602                           tblptru	equ	0xFF8
 28603                           tblptrh	equ	0xFF7
 28604                           tblptrl	equ	0xFF6
 28605                           tablat	equ	0xFF5
 28606                           prodh	equ	0xFF4
 28607                           prodl	equ	0xFF3
 28608                           intcon	equ	0xFF2
 28609                           postinc0	equ	0xFEE
 28610                           wreg	equ	0xFE8
 28611                           indf1	equ	0xFE7
 28612                           postinc1	equ	0xFE6
 28613                           postdec1	equ	0xFE5
 28614                           plusw1	equ	0xFE3
 28615                           fsr1h	equ	0xFE2
 28616                           fsr1l	equ	0xFE1
 28617                           indf2	equ	0xFDF
 28618                           postinc2	equ	0xFDE
 28619                           postdec2	equ	0xFDD
 28620                           plusw2	equ	0xFDB
 28621                           fsr2h	equ	0xFDA
 28622                           fsr2l	equ	0xFD9
 28623                           status	equ	0xFD8
 28624                           
 28625 ;; *************** function _itoa *****************
 28626 ;; Defined at:
 28627 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28628 ;; Parameters:    Size  Location     Type
 28629 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 28630 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28631 ;;  val             2   18[BANK0 ] int 
 28632 ;;  base            2   20[BANK0 ] int 
 28633 ;; Auto vars:     Size  Location     Type
 28634 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 28635 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28636 ;; Return value:  Size  Location     Type
 28637 ;;                  2   16[BANK0 ] PTR unsigned char 
 28638 ;; Registers used:
 28639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28640 ;; Tracked objects:
 28641 ;;		On entry : 0/0
 28642 ;;		On exit  : 0/0
 28643 ;;		Unchanged: 0/0
 28644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28645 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28646 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28648 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28649 ;;Total ram usage:        8 bytes
 28650 ;; Hardware stack levels used:    1
 28651 ;; Hardware stack levels required when called:   12
 28652 ;; This function calls:
 28653 ;;		_utoa
 28654 ;; This function is called by:
 28655 ;;		__display_padded_itoa
 28656 ;;		__display_itoa
 28657 ;;		__display_itoa_u16
 28658 ;; This function uses a non-reentrant model
 28659 ;;
 28660                           
 28661                           	psect	text112
 28662  014DD2                     __ptext112:
 28663                           	opt stack 0
 28664  014DD2                     _itoa:
 28665                           	opt stack 14
 28666                           
 28667                           ; BSR set to: 0
 28668                           ;incstack = 0
 28669  014DD2  C070  F076         	movff	itoa@buf,itoa@cp
 28670  014DD6  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 28671  014DDA  0100               	movlb	0	; () banked
 28672  014DDC  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 28673  014DDE  D00C               	goto	l3615
 28674                           
 28675                           ; BSR set to: 0
 28676  014DE0  C070  FFD9         	movff	itoa@buf,fsr2l
 28677  014DE4  C071  FFDA         	movff	itoa@buf+1,fsr2h
 28678  014DE8  0E2D               	movlw	45
 28679  014DEA  6EDF               	movwf	indf2,c
 28680                           
 28681                           ; BSR set to: 0
 28682  014DEC  4B70               	infsnz	itoa@buf& (0+255),f,b
 28683  014DEE  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 28684                           
 28685                           ; BSR set to: 0
 28686  014DF0  6D72               	negf	itoa@val& (0+255),b
 28687  014DF2  1F73               	comf	(itoa@val+1)& (0+255),f,b
 28688  014DF4  B0D8               	btfsc	status,0,c
 28689  014DF6  2B73               	incf	(itoa@val+1)& (0+255),f,b
 28690  014DF8                     l3615:
 28691                           
 28692                           ; BSR set to: 0
 28693                           
 28694                           ; BSR set to: 0
 28695  014DF8  C070  F067         	movff	itoa@buf,utoa@buf
 28696  014DFC  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 28697  014E00  C072  F069         	movff	itoa@val,utoa@val
 28698  014E04  C073  F06A         	movff	itoa@val+1,utoa@val+1
 28699  014E08  C074  F06B         	movff	itoa@base,utoa@base
 28700  014E0C  C075  F06C         	movff	itoa@base+1,utoa@base+1
 28701  014E10  EC52  F098         	call	_utoa	;wreg free
 28702  014E14  0012               	return	
 28703  014E16                     __end_of_itoa:
 28704                           	opt stack 0
 28705                           tblptru	equ	0xFF8
 28706                           tblptrh	equ	0xFF7
 28707                           tblptrl	equ	0xFF6
 28708                           tablat	equ	0xFF5
 28709                           prodh	equ	0xFF4
 28710                           prodl	equ	0xFF3
 28711                           intcon	equ	0xFF2
 28712                           postinc0	equ	0xFEE
 28713                           wreg	equ	0xFE8
 28714                           indf1	equ	0xFE7
 28715                           postinc1	equ	0xFE6
 28716                           postdec1	equ	0xFE5
 28717                           plusw1	equ	0xFE3
 28718                           fsr1h	equ	0xFE2
 28719                           fsr1l	equ	0xFE1
 28720                           indf2	equ	0xFDF
 28721                           postinc2	equ	0xFDE
 28722                           postdec2	equ	0xFDD
 28723                           plusw2	equ	0xFDB
 28724                           fsr2h	equ	0xFDA
 28725                           fsr2l	equ	0xFD9
 28726                           status	equ	0xFD8
 28727                           
 28728 ;; *************** function _utoa *****************
 28729 ;; Defined at:
 28730 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28731 ;; Parameters:    Size  Location     Type
 28732 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 28733 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28734 ;;  val             2    9[BANK0 ] unsigned int 
 28735 ;;  base            2   11[BANK0 ] int 
 28736 ;; Auto vars:     Size  Location     Type
 28737 ;;  v               2   13[BANK0 ] unsigned int 
 28738 ;;  c               1   15[BANK0 ] unsigned char 
 28739 ;; Return value:  Size  Location     Type
 28740 ;;                  2    7[BANK0 ] PTR unsigned char 
 28741 ;; Registers used:
 28742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28743 ;; Tracked objects:
 28744 ;;		On entry : 0/0
 28745 ;;		On exit  : 0/0
 28746 ;;		Unchanged: 0/0
 28747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28748 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28749 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28751 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28752 ;;Total ram usage:        9 bytes
 28753 ;; Hardware stack levels used:    1
 28754 ;; Hardware stack levels required when called:   11
 28755 ;; This function calls:
 28756 ;;		___lwdiv
 28757 ;;		___lwmod
 28758 ;; This function is called by:
 28759 ;;		_itoa
 28760 ;; This function uses a non-reentrant model
 28761 ;;
 28762                           
 28763                           	psect	text113
 28764  0130A4                     __ptext113:
 28765                           	opt stack 0
 28766  0130A4                     _utoa:
 28767                           	opt stack 14
 28768                           
 28769                           ;incstack = 0
 28770  0130A4  C069  F06D         	movff	utoa@val,utoa@v
 28771  0130A8  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 28772  0130AC  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 28773  0130B0  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 28774  0130B4  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28775  0130B8  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28776  0130BC  ECA7  F0A4         	call	___lwdiv	;wreg free
 28777  0130C0  C060  F06D         	movff	?___lwdiv,utoa@v
 28778  0130C4  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 28779  0130C8  0100               	movlb	0	; () banked
 28780  0130CA  4B67               	infsnz	utoa@buf& (0+255),f,b
 28781  0130CC  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28782                           
 28783                           ; BSR set to: 0
 28784  0130CE  516D               	movf	utoa@v& (0+255),w,b
 28785  0130D0  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 28786  0130D2  A4D8               	btfss	status,2,c
 28787  0130D4  D7EB               	goto	l3619
 28788                           
 28789                           ; BSR set to: 0
 28790                           
 28791                           ; BSR set to: 0
 28792  0130D6  C067  FFD9         	movff	utoa@buf,fsr2l
 28793  0130DA  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28794  0130DE  0E00               	movlw	0
 28795  0130E0  6EDF               	movwf	indf2,c
 28796                           
 28797                           ; BSR set to: 0
 28798  0130E2  0767               	decf	utoa@buf& (0+255),f,b
 28799  0130E4  A0D8               	btfss	status,0,c
 28800  0130E6  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28801  0130E8                     
 28802                           ; BSR set to: 0
 28803                           
 28804                           ; BSR set to: 0
 28805  0130E8  C069  F060         	movff	utoa@val,___lwmod@dividend
 28806  0130EC  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 28807  0130F0  C06B  F062         	movff	utoa@base,___lwmod@divisor
 28808  0130F4  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 28809  0130F8  EC0B  F0A7         	call	___lwmod	;wreg free
 28810  0130FC  0100               	movlb	0	; () banked
 28811  0130FE  5160               	movf	?___lwmod& (0+255),w,b
 28812  013100  6F6F               	movwf	utoa@c& (0+255),b
 28813                           
 28814                           ; BSR set to: 0
 28815  013102  C069  F060         	movff	utoa@val,___lwdiv@dividend
 28816  013106  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 28817  01310A  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28818  01310E  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28819  013112  ECA7  F0A4         	call	___lwdiv	;wreg free
 28820  013116  C060  F069         	movff	?___lwdiv,utoa@val
 28821  01311A  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 28822  01311E  0E09               	movlw	9
 28823  013120  0100               	movlb	0	; () banked
 28824  013122  656F               	cpfsgt	utoa@c& (0+255),b
 28825  013124  D002               	goto	l3622
 28826                           
 28827                           ; BSR set to: 0
 28828  013126  0E07               	movlw	7
 28829  013128  276F               	addwf	utoa@c& (0+255),f,b
 28830  01312A                     l3622:
 28831                           
 28832                           ; BSR set to: 0
 28833  01312A  0E30               	movlw	48
 28834  01312C  276F               	addwf	utoa@c& (0+255),f,b
 28835                           
 28836                           ; BSR set to: 0
 28837  01312E  C067  FFD9         	movff	utoa@buf,fsr2l
 28838  013132  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28839  013136  C06F  FFDF         	movff	utoa@c,indf2
 28840                           
 28841                           ; BSR set to: 0
 28842  01313A  0767               	decf	utoa@buf& (0+255),f,b
 28843  01313C  A0D8               	btfss	status,0,c
 28844  01313E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28845                           
 28846                           ; BSR set to: 0
 28847  013140  5169               	movf	utoa@val& (0+255),w,b
 28848  013142  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 28849  013144  A4D8               	btfss	status,2,c
 28850  013146  D7D0               	goto	l3621
 28851                           
 28852                           ; BSR set to: 0
 28853                           ;	Return value of _utoa is never used
 28854                           
 28855                           ; BSR set to: 0
 28856  013148  4B67               	infsnz	utoa@buf& (0+255),f,b
 28857  01314A  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28858  01314C  0012               	return	
 28859  01314E                     __end_of_utoa:
 28860                           	opt stack 0
 28861                           tblptru	equ	0xFF8
 28862                           tblptrh	equ	0xFF7
 28863                           tblptrl	equ	0xFF6
 28864                           tablat	equ	0xFF5
 28865                           prodh	equ	0xFF4
 28866                           prodl	equ	0xFF3
 28867                           intcon	equ	0xFF2
 28868                           postinc0	equ	0xFEE
 28869                           wreg	equ	0xFE8
 28870                           indf1	equ	0xFE7
 28871                           postinc1	equ	0xFE6
 28872                           postdec1	equ	0xFE5
 28873                           plusw1	equ	0xFE3
 28874                           fsr1h	equ	0xFE2
 28875                           fsr1l	equ	0xFE1
 28876                           indf2	equ	0xFDF
 28877                           postinc2	equ	0xFDE
 28878                           postdec2	equ	0xFDD
 28879                           plusw2	equ	0xFDB
 28880                           fsr2h	equ	0xFDA
 28881                           fsr2l	equ	0xFD9
 28882                           status	equ	0xFD8
 28883                           
 28884 ;; *************** function ___lwmod *****************
 28885 ;; Defined at:
 28886 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 28887 ;; Parameters:    Size  Location     Type
 28888 ;;  dividend        2    0[BANK0 ] unsigned int 
 28889 ;;  divisor         2    2[BANK0 ] unsigned int 
 28890 ;; Auto vars:     Size  Location     Type
 28891 ;;  counter         1    4[BANK0 ] unsigned char 
 28892 ;; Return value:  Size  Location     Type
 28893 ;;                  2    0[BANK0 ] unsigned int 
 28894 ;; Registers used:
 28895 ;;		wreg, status,2, status,0
 28896 ;; Tracked objects:
 28897 ;;		On entry : 0/0
 28898 ;;		On exit  : 0/0
 28899 ;;		Unchanged: 0/0
 28900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28904 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28905 ;;Total ram usage:        5 bytes
 28906 ;; Hardware stack levels used:    1
 28907 ;; Hardware stack levels required when called:   10
 28908 ;; This function calls:
 28909 ;;		Nothing
 28910 ;; This function is called by:
 28911 ;;		_utoa
 28912 ;; This function uses a non-reentrant model
 28913 ;;
 28914                           
 28915                           	psect	text114
 28916  014E16                     __ptext114:
 28917                           	opt stack 0
 28918  014E16                     ___lwmod:
 28919                           	opt stack 14
 28920                           
 28921                           ; BSR set to: 0
 28922                           ;incstack = 0
 28923  014E16  0100               	movlb	0	; () banked
 28924  014E18  5162               	movf	___lwmod@divisor& (0+255),w,b
 28925  014E1A  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28926  014E1C  B4D8               	btfsc	status,2,c
 28927  014E1E  D018               	goto	l3412
 28928                           
 28929                           ; BSR set to: 0
 28930  014E20  0E01               	movlw	1
 28931  014E22  6F64               	movwf	___lwmod@counter& (0+255),b
 28932  014E24  D004               	goto	l3407
 28933  014E26                     
 28934                           ; BSR set to: 0
 28935                           
 28936                           ; BSR set to: 0
 28937  014E26  90D8               	bcf	status,0,c
 28938  014E28  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 28939  014E2A  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28940  014E2C  2B64               	incf	___lwmod@counter& (0+255),f,b
 28941  014E2E                     l3407:
 28942                           
 28943                           ; BSR set to: 0
 28944                           
 28945                           ; BSR set to: 0
 28946  014E2E  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28947  014E30  D7FA               	goto	l3408
 28948  014E32                     u10910:
 28949                           
 28950                           ; BSR set to: 0
 28951                           
 28952                           ; BSR set to: 0
 28953                           
 28954                           ; BSR set to: 0
 28955  014E32  5162               	movf	___lwmod@divisor& (0+255),w,b
 28956  014E34  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 28957  014E36  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28958  014E38  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28959  014E3A  A0D8               	btfss	status,0,c
 28960  014E3C  D004               	goto	l3411
 28961                           
 28962                           ; BSR set to: 0
 28963  014E3E  5162               	movf	___lwmod@divisor& (0+255),w,b
 28964  014E40  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 28965  014E42  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28966  014E44  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28967  014E46                     l3411:
 28968                           
 28969                           ; BSR set to: 0
 28970                           
 28971                           ; BSR set to: 0
 28972  014E46  90D8               	bcf	status,0,c
 28973  014E48  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28974  014E4A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 28975                           
 28976                           ; BSR set to: 0
 28977  014E4C  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 28978  014E4E  D7F1               	goto	u10910
 28979  014E50                     l3412:
 28980                           
 28981                           ; BSR set to: 0
 28982                           
 28983                           ; BSR set to: 0
 28984  014E50  C060  F060         	movff	___lwmod@dividend,?___lwmod
 28985  014E54  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 28986                           
 28987                           ; BSR set to: 0
 28988  014E58  0012               	return		;funcret
 28989  014E5A                     __end_of___lwmod:
 28990                           	opt stack 0
 28991                           tblptru	equ	0xFF8
 28992                           tblptrh	equ	0xFF7
 28993                           tblptrl	equ	0xFF6
 28994                           tablat	equ	0xFF5
 28995                           prodh	equ	0xFF4
 28996                           prodl	equ	0xFF3
 28997                           intcon	equ	0xFF2
 28998                           postinc0	equ	0xFEE
 28999                           wreg	equ	0xFE8
 29000                           indf1	equ	0xFE7
 29001                           postinc1	equ	0xFE6
 29002                           postdec1	equ	0xFE5
 29003                           plusw1	equ	0xFE3
 29004                           fsr1h	equ	0xFE2
 29005                           fsr1l	equ	0xFE1
 29006                           indf2	equ	0xFDF
 29007                           postinc2	equ	0xFDE
 29008                           postdec2	equ	0xFDD
 29009                           plusw2	equ	0xFDB
 29010                           fsr2h	equ	0xFDA
 29011                           fsr2l	equ	0xFD9
 29012                           status	equ	0xFD8
 29013                           
 29014 ;; *************** function ___lwdiv *****************
 29015 ;; Defined at:
 29016 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 29017 ;; Parameters:    Size  Location     Type
 29018 ;;  dividend        2    0[BANK0 ] unsigned int 
 29019 ;;  divisor         2    2[BANK0 ] unsigned int 
 29020 ;; Auto vars:     Size  Location     Type
 29021 ;;  quotient        2    4[BANK0 ] unsigned int 
 29022 ;;  counter         1    6[BANK0 ] unsigned char 
 29023 ;; Return value:  Size  Location     Type
 29024 ;;                  2    0[BANK0 ] unsigned int 
 29025 ;; Registers used:
 29026 ;;		wreg, status,2, status,0
 29027 ;; Tracked objects:
 29028 ;;		On entry : 0/0
 29029 ;;		On exit  : 0/0
 29030 ;;		Unchanged: 0/0
 29031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29033 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29035 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29036 ;;Total ram usage:        7 bytes
 29037 ;; Hardware stack levels used:    1
 29038 ;; Hardware stack levels required when called:   10
 29039 ;; This function calls:
 29040 ;;		Nothing
 29041 ;; This function is called by:
 29042 ;;		_utoa
 29043 ;; This function uses a non-reentrant model
 29044 ;;
 29045                           
 29046                           	psect	text115
 29047  01494E                     __ptext115:
 29048                           	opt stack 0
 29049  01494E                     ___lwdiv:
 29050                           	opt stack 14
 29051                           
 29052                           ; BSR set to: 0
 29053                           ;incstack = 0
 29054  01494E  0E00               	movlw	0
 29055  014950  0100               	movlb	0	; () banked
 29056  014952  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29057  014954  0E00               	movlw	0
 29058  014956  6F64               	movwf	___lwdiv@quotient& (0+255),b
 29059                           
 29060                           ; BSR set to: 0
 29061  014958  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29062  01495A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29063  01495C  B4D8               	btfsc	status,2,c
 29064  01495E  D01C               	goto	l3402
 29065                           
 29066                           ; BSR set to: 0
 29067  014960  0E01               	movlw	1
 29068  014962  6F66               	movwf	___lwdiv@counter& (0+255),b
 29069  014964  D004               	goto	l3397
 29070  014966                     
 29071                           ; BSR set to: 0
 29072                           
 29073                           ; BSR set to: 0
 29074  014966  90D8               	bcf	status,0,c
 29075  014968  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 29076  01496A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29077  01496C  2B66               	incf	___lwdiv@counter& (0+255),f,b
 29078  01496E                     l3397:
 29079                           
 29080                           ; BSR set to: 0
 29081                           
 29082                           ; BSR set to: 0
 29083  01496E  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29084  014970  D7FA               	goto	l3398
 29085  014972                     u10880:
 29086                           
 29087                           ; BSR set to: 0
 29088                           
 29089                           ; BSR set to: 0
 29090                           
 29091                           ; BSR set to: 0
 29092  014972  90D8               	bcf	status,0,c
 29093  014974  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 29094  014976  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29095                           
 29096                           ; BSR set to: 0
 29097  014978  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29098  01497A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 29099  01497C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29100  01497E  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29101  014980  A0D8               	btfss	status,0,c
 29102  014982  D005               	goto	l3401
 29103                           
 29104                           ; BSR set to: 0
 29105  014984  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29106  014986  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 29107  014988  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29108  01498A  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29109                           
 29110                           ; BSR set to: 0
 29111  01498C  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 29112  01498E                     l3401:
 29113                           
 29114                           ; BSR set to: 0
 29115                           
 29116                           ; BSR set to: 0
 29117  01498E  90D8               	bcf	status,0,c
 29118  014990  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29119  014992  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 29120                           
 29121                           ; BSR set to: 0
 29122  014994  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 29123  014996  D7ED               	goto	u10880
 29124  014998                     l3402:
 29125                           
 29126                           ; BSR set to: 0
 29127                           
 29128                           ; BSR set to: 0
 29129  014998  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 29130  01499C  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29131                           
 29132                           ; BSR set to: 0
 29133  0149A0  0012               	return		;funcret
 29134  0149A2                     __end_of___lwdiv:
 29135                           	opt stack 0
 29136                           tblptru	equ	0xFF8
 29137                           tblptrh	equ	0xFF7
 29138                           tblptrl	equ	0xFF6
 29139                           tablat	equ	0xFF5
 29140                           prodh	equ	0xFF4
 29141                           prodl	equ	0xFF3
 29142                           intcon	equ	0xFF2
 29143                           postinc0	equ	0xFEE
 29144                           wreg	equ	0xFE8
 29145                           indf1	equ	0xFE7
 29146                           postinc1	equ	0xFE6
 29147                           postdec1	equ	0xFE5
 29148                           plusw1	equ	0xFE3
 29149                           fsr1h	equ	0xFE2
 29150                           fsr1l	equ	0xFE1
 29151                           indf2	equ	0xFDF
 29152                           postinc2	equ	0xFDE
 29153                           postdec2	equ	0xFDD
 29154                           plusw2	equ	0xFDB
 29155                           fsr2h	equ	0xFDA
 29156                           fsr2l	equ	0xFD9
 29157                           status	equ	0xFD8
 29158                           
 29159 ;; *************** function ___almod *****************
 29160 ;; Defined at:
 29161 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 29162 ;; Parameters:    Size  Location     Type
 29163 ;;  dividend        4    0[BANK0 ] long 
 29164 ;;  divisor         4    4[BANK0 ] long 
 29165 ;; Auto vars:     Size  Location     Type
 29166 ;;  sign            1    9[BANK0 ] unsigned char 
 29167 ;;  counter         1    8[BANK0 ] unsigned char 
 29168 ;; Return value:  Size  Location     Type
 29169 ;;                  4    0[BANK0 ] long 
 29170 ;; Registers used:
 29171 ;;		wreg, status,2, status,0
 29172 ;; Tracked objects:
 29173 ;;		On entry : 0/0
 29174 ;;		On exit  : 0/0
 29175 ;;		Unchanged: 0/0
 29176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29180 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29181 ;;Total ram usage:       10 bytes
 29182 ;; Hardware stack levels used:    1
 29183 ;; Hardware stack levels required when called:   10
 29184 ;; This function calls:
 29185 ;;		Nothing
 29186 ;; This function is called by:
 29187 ;;		__display_itoa_long
 29188 ;; This function uses a non-reentrant model
 29189 ;;
 29190                           
 29191                           	psect	text116
 29192  012EA0                     __ptext116:
 29193                           	opt stack 0
 29194  012EA0                     ___almod:
 29195                           	opt stack 18
 29196                           
 29197                           ; BSR set to: 0
 29198                           ;incstack = 0
 29199  012EA0  0E00               	movlw	0
 29200  012EA2  0100               	movlb	0	; () banked
 29201  012EA4  6F69               	movwf	___almod@sign& (0+255),b
 29202                           
 29203                           ; BSR set to: 0
 29204  012EA6  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 29205  012EA8  D00A               	goto	l2999
 29206                           
 29207                           ; BSR set to: 0
 29208  012EAA  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29209  012EAC  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29210  012EAE  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29211  012EB0  6D60               	negf	___almod@dividend& (0+255),b
 29212  012EB2  0E00               	movlw	0
 29213  012EB4  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29214  012EB6  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29215  012EB8  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29216                           
 29217                           ; BSR set to: 0
 29218  012EBA  0E01               	movlw	1
 29219  012EBC  6F69               	movwf	___almod@sign& (0+255),b
 29220  012EBE                     l2999:
 29221                           
 29222                           ; BSR set to: 0
 29223                           
 29224                           ; BSR set to: 0
 29225  012EBE  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29226  012EC0  D008               	goto	l3000
 29227                           
 29228                           ; BSR set to: 0
 29229  012EC2  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 29230  012EC4  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 29231  012EC6  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 29232  012EC8  6D64               	negf	___almod@divisor& (0+255),b
 29233  012ECA  0E00               	movlw	0
 29234  012ECC  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 29235  012ECE  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 29236  012ED0  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 29237  012ED2                     l3000:
 29238                           
 29239                           ; BSR set to: 0
 29240                           
 29241                           ; BSR set to: 0
 29242  012ED2  5164               	movf	___almod@divisor& (0+255),w,b
 29243  012ED4  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 29244  012ED6  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 29245  012ED8  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 29246  012EDA  B4D8               	btfsc	status,2,c
 29247  012EDC  D024               	goto	l3007
 29248                           
 29249                           ; BSR set to: 0
 29250  012EDE  0E01               	movlw	1
 29251  012EE0  6F68               	movwf	___almod@counter& (0+255),b
 29252  012EE2  D006               	goto	l3002
 29253  012EE4                     
 29254                           ; BSR set to: 0
 29255                           
 29256                           ; BSR set to: 0
 29257  012EE4  90D8               	bcf	status,0,c
 29258  012EE6  3764               	rlcf	___almod@divisor& (0+255),f,b
 29259  012EE8  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 29260  012EEA  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 29261  012EEC  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 29262  012EEE  2B68               	incf	___almod@counter& (0+255),f,b
 29263  012EF0                     l3002:
 29264                           
 29265                           ; BSR set to: 0
 29266                           
 29267                           ; BSR set to: 0
 29268  012EF0  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29269  012EF2  D7F8               	goto	l3003
 29270  012EF4                     u15030:
 29271                           
 29272                           ; BSR set to: 0
 29273                           
 29274                           ; BSR set to: 0
 29275                           
 29276                           ; BSR set to: 0
 29277  012EF4  5164               	movf	___almod@divisor& (0+255),w,b
 29278  012EF6  5D60               	subwf	___almod@dividend& (0+255),w,b
 29279  012EF8  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29280  012EFA  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 29281  012EFC  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29282  012EFE  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 29283  012F00  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29284  012F02  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 29285  012F04  A0D8               	btfss	status,0,c
 29286  012F06  D008               	goto	l3006
 29287                           
 29288                           ; BSR set to: 0
 29289  012F08  5164               	movf	___almod@divisor& (0+255),w,b
 29290  012F0A  5F60               	subwf	___almod@dividend& (0+255),f,b
 29291  012F0C  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29292  012F0E  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 29293  012F10  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29294  012F12  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 29295  012F14  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29296  012F16  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 29297  012F18                     l3006:
 29298                           
 29299                           ; BSR set to: 0
 29300                           
 29301                           ; BSR set to: 0
 29302  012F18  90D8               	bcf	status,0,c
 29303  012F1A  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 29304  012F1C  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 29305  012F1E  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 29306  012F20  3364               	rrcf	___almod@divisor& (0+255),f,b
 29307                           
 29308                           ; BSR set to: 0
 29309  012F22  2F68               	decfsz	___almod@counter& (0+255),f,b
 29310  012F24  D7E7               	goto	u15030
 29311  012F26                     l3007:
 29312                           
 29313                           ; BSR set to: 0
 29314                           
 29315                           ; BSR set to: 0
 29316                           
 29317                           ; BSR set to: 0
 29318  012F26  5169               	movf	___almod@sign& (0+255),w,b
 29319  012F28  B4D8               	btfsc	status,2,c
 29320  012F2A  D008               	goto	l3008
 29321                           
 29322                           ; BSR set to: 0
 29323  012F2C  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29324  012F2E  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29325  012F30  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29326  012F32  6D60               	negf	___almod@dividend& (0+255),b
 29327  012F34  0E00               	movlw	0
 29328  012F36  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29329  012F38  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29330  012F3A  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29331  012F3C                     l3008:
 29332                           
 29333                           ; BSR set to: 0
 29334                           
 29335                           ; BSR set to: 0
 29336  012F3C  C060  F060         	movff	___almod@dividend,?___almod
 29337  012F40  C061  F061         	movff	___almod@dividend+1,?___almod+1
 29338  012F44  C062  F062         	movff	___almod@dividend+2,?___almod+2
 29339  012F48  C063  F063         	movff	___almod@dividend+3,?___almod+3
 29340  012F4C  0012               	return	
 29341  012F4E                     __end_of___almod:
 29342                           	opt stack 0
 29343                           tblptru	equ	0xFF8
 29344                           tblptrh	equ	0xFF7
 29345                           tblptrl	equ	0xFF6
 29346                           tablat	equ	0xFF5
 29347                           prodh	equ	0xFF4
 29348                           prodl	equ	0xFF3
 29349                           intcon	equ	0xFF2
 29350                           postinc0	equ	0xFEE
 29351                           wreg	equ	0xFE8
 29352                           indf1	equ	0xFE7
 29353                           postinc1	equ	0xFE6
 29354                           postdec1	equ	0xFE5
 29355                           plusw1	equ	0xFE3
 29356                           fsr1h	equ	0xFE2
 29357                           fsr1l	equ	0xFE1
 29358                           indf2	equ	0xFDF
 29359                           postinc2	equ	0xFDE
 29360                           postdec2	equ	0xFDD
 29361                           plusw2	equ	0xFDB
 29362                           fsr2h	equ	0xFDA
 29363                           fsr2l	equ	0xFD9
 29364                           status	equ	0xFD8
 29365                           
 29366 ;; *************** function ___aldiv *****************
 29367 ;; Defined at:
 29368 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 29369 ;; Parameters:    Size  Location     Type
 29370 ;;  dividend        4    0[BANK0 ] long 
 29371 ;;  divisor         4    4[BANK0 ] long 
 29372 ;; Auto vars:     Size  Location     Type
 29373 ;;  quotient        4   10[BANK0 ] long 
 29374 ;;  sign            1    9[BANK0 ] unsigned char 
 29375 ;;  counter         1    8[BANK0 ] unsigned char 
 29376 ;; Return value:  Size  Location     Type
 29377 ;;                  4    0[BANK0 ] long 
 29378 ;; Registers used:
 29379 ;;		wreg, status,2, status,0
 29380 ;; Tracked objects:
 29381 ;;		On entry : 0/0
 29382 ;;		On exit  : 0/0
 29383 ;;		Unchanged: 0/0
 29384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29385 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29386 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29388 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29389 ;;Total ram usage:       14 bytes
 29390 ;; Hardware stack levels used:    1
 29391 ;; Hardware stack levels required when called:   10
 29392 ;; This function calls:
 29393 ;;		Nothing
 29394 ;; This function is called by:
 29395 ;;		__display_itoa_long
 29396 ;; This function uses a non-reentrant model
 29397 ;;
 29398                           
 29399                           	psect	text117
 29400  012802                     __ptext117:
 29401                           	opt stack 0
 29402  012802                     ___aldiv:
 29403                           	opt stack 18
 29404                           
 29405                           ; BSR set to: 0
 29406                           ;incstack = 0
 29407  012802  0E00               	movlw	0
 29408  012804  0100               	movlb	0	; () banked
 29409  012806  6F69               	movwf	___aldiv@sign& (0+255),b
 29410                           
 29411                           ; BSR set to: 0
 29412  012808  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29413  01280A  D00A               	goto	l2986
 29414                           
 29415                           ; BSR set to: 0
 29416  01280C  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 29417  01280E  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 29418  012810  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 29419  012812  6D64               	negf	___aldiv@divisor& (0+255),b
 29420  012814  0E00               	movlw	0
 29421  012816  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 29422  012818  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 29423  01281A  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 29424                           
 29425                           ; BSR set to: 0
 29426  01281C  0E01               	movlw	1
 29427  01281E  6F69               	movwf	___aldiv@sign& (0+255),b
 29428  012820                     l2986:
 29429                           
 29430                           ; BSR set to: 0
 29431                           
 29432                           ; BSR set to: 0
 29433  012820  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 29434  012822  D00A               	goto	l2987
 29435                           
 29436                           ; BSR set to: 0
 29437  012824  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 29438  012826  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 29439  012828  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 29440  01282A  6D60               	negf	___aldiv@dividend& (0+255),b
 29441  01282C  0E00               	movlw	0
 29442  01282E  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 29443  012830  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 29444  012832  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 29445                           
 29446                           ; BSR set to: 0
 29447  012834  0E01               	movlw	1
 29448  012836  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 29449  012838                     l2987:
 29450                           
 29451                           ; BSR set to: 0
 29452                           
 29453                           ; BSR set to: 0
 29454  012838  0E00               	movlw	0
 29455  01283A  6F6A               	movwf	___aldiv@quotient& (0+255),b
 29456  01283C  0E00               	movlw	0
 29457  01283E  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 29458  012840  0E00               	movlw	0
 29459  012842  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 29460  012844  0E00               	movlw	0
 29461  012846  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 29462                           
 29463                           ; BSR set to: 0
 29464  012848  5164               	movf	___aldiv@divisor& (0+255),w,b
 29465  01284A  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 29466  01284C  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 29467  01284E  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 29468  012850  B4D8               	btfsc	status,2,c
 29469  012852  D02A               	goto	l2994
 29470                           
 29471                           ; BSR set to: 0
 29472  012854  0E01               	movlw	1
 29473  012856  6F68               	movwf	___aldiv@counter& (0+255),b
 29474  012858  D006               	goto	l2989
 29475  01285A                     
 29476                           ; BSR set to: 0
 29477                           
 29478                           ; BSR set to: 0
 29479  01285A  90D8               	bcf	status,0,c
 29480  01285C  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 29481  01285E  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 29482  012860  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 29483  012862  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 29484  012864  2B68               	incf	___aldiv@counter& (0+255),f,b
 29485  012866                     l2989:
 29486                           
 29487                           ; BSR set to: 0
 29488                           
 29489                           ; BSR set to: 0
 29490  012866  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29491  012868  D7F8               	goto	l2990
 29492  01286A                     u14970:
 29493                           
 29494                           ; BSR set to: 0
 29495                           
 29496                           ; BSR set to: 0
 29497                           
 29498                           ; BSR set to: 0
 29499  01286A  90D8               	bcf	status,0,c
 29500  01286C  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 29501  01286E  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 29502  012870  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 29503  012872  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 29504                           
 29505                           ; BSR set to: 0
 29506  012874  5164               	movf	___aldiv@divisor& (0+255),w,b
 29507  012876  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 29508  012878  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29509  01287A  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 29510  01287C  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29511  01287E  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 29512  012880  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29513  012882  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 29514  012884  A0D8               	btfss	status,0,c
 29515  012886  D009               	goto	l2993
 29516                           
 29517                           ; BSR set to: 0
 29518  012888  5164               	movf	___aldiv@divisor& (0+255),w,b
 29519  01288A  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 29520  01288C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29521  01288E  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 29522  012890  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29523  012892  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 29524  012894  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29525  012896  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 29526                           
 29527                           ; BSR set to: 0
 29528  012898  816A               	bsf	___aldiv@quotient& (0+255),0,b
 29529  01289A                     l2993:
 29530                           
 29531                           ; BSR set to: 0
 29532                           
 29533                           ; BSR set to: 0
 29534  01289A  90D8               	bcf	status,0,c
 29535  01289C  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 29536  01289E  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 29537  0128A0  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 29538  0128A2  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 29539                           
 29540                           ; BSR set to: 0
 29541  0128A4  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 29542  0128A6  D7E1               	goto	u14970
 29543  0128A8                     l2994:
 29544                           
 29545                           ; BSR set to: 0
 29546                           
 29547                           ; BSR set to: 0
 29548                           
 29549                           ; BSR set to: 0
 29550  0128A8  5169               	movf	___aldiv@sign& (0+255),w,b
 29551  0128AA  B4D8               	btfsc	status,2,c
 29552  0128AC  D008               	goto	l2995
 29553                           
 29554                           ; BSR set to: 0
 29555  0128AE  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 29556  0128B0  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 29557  0128B2  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 29558  0128B4  6D6A               	negf	___aldiv@quotient& (0+255),b
 29559  0128B6  0E00               	movlw	0
 29560  0128B8  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 29561  0128BA  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 29562  0128BC  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 29563  0128BE                     l2995:
 29564                           
 29565                           ; BSR set to: 0
 29566                           
 29567                           ; BSR set to: 0
 29568  0128BE  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 29569  0128C2  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 29570  0128C6  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 29571  0128CA  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 29572  0128CE  0012               	return	
 29573  0128D0                     __end_of___aldiv:
 29574                           	opt stack 0
 29575                           tblptru	equ	0xFF8
 29576                           tblptrh	equ	0xFF7
 29577                           tblptrl	equ	0xFF6
 29578                           tablat	equ	0xFF5
 29579                           prodh	equ	0xFF4
 29580                           prodl	equ	0xFF3
 29581                           intcon	equ	0xFF2
 29582                           postinc0	equ	0xFEE
 29583                           wreg	equ	0xFE8
 29584                           indf1	equ	0xFE7
 29585                           postinc1	equ	0xFE6
 29586                           postdec1	equ	0xFE5
 29587                           plusw1	equ	0xFE3
 29588                           fsr1h	equ	0xFE2
 29589                           fsr1l	equ	0xFE1
 29590                           indf2	equ	0xFDF
 29591                           postinc2	equ	0xFDE
 29592                           postdec2	equ	0xFDD
 29593                           plusw2	equ	0xFDB
 29594                           fsr2h	equ	0xFDA
 29595                           fsr2l	equ	0xFD9
 29596                           status	equ	0xFD8
 29597                           
 29598 ;; *************** function __display_clear *****************
 29599 ;; Defined at:
 29600 ;;		line 85 in file "display.c"
 29601 ;; Parameters:    Size  Location     Type
 29602 ;;		None
 29603 ;; Auto vars:     Size  Location     Type
 29604 ;;  col             1    3[BANK0 ] unsigned char 
 29605 ;;  row             1    2[BANK0 ] unsigned char 
 29606 ;; Return value:  Size  Location     Type
 29607 ;;                  1    wreg      void 
 29608 ;; Registers used:
 29609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29610 ;; Tracked objects:
 29611 ;;		On entry : 0/0
 29612 ;;		On exit  : 0/0
 29613 ;;		Unchanged: 0/0
 29614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29618 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29619 ;;Total ram usage:        4 bytes
 29620 ;; Hardware stack levels used:    1
 29621 ;; Hardware stack levels required when called:   10
 29622 ;; This function calls:
 29623 ;;		Nothing
 29624 ;; This function is called by:
 29625 ;;		_display_prepare
 29626 ;; This function uses a non-reentrant model
 29627 ;;
 29628                           
 29629                           	psect	text118
 29630  014C6E                     __ptext118:
 29631                           	opt stack 0
 29632  014C6E                     __display_clear:
 29633                           	opt stack 19
 29634                           
 29635                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 29636                           
 29637                           ; BSR set to: 0
 29638                           ;incstack = 0
 29639  014C6E  0E00               	movlw	0
 29640  014C70  0100               	movlb	0	; () banked
 29641  014C72  6F62               	movwf	__display_clear@row& (0+255),b
 29642  014C74                     l16891:
 29643                           
 29644                           ; BSR set to: 0
 29645  014C74  0E03               	movlw	3
 29646  014C76  6562               	cpfsgt	__display_clear@row& (0+255),b
 29647  014C78  D001               	goto	l1310
 29648  014C7A  0012               	return	
 29649  014C7C                     l1310:
 29650                           
 29651                           ; BSR set to: 0
 29652                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 29653                           
 29654                           ; BSR set to: 0
 29655  014C7C  0E00               	movlw	0
 29656  014C7E  6F63               	movwf	__display_clear@col& (0+255),b
 29657  014C80                     l16897:
 29658                           
 29659                           ; BSR set to: 0
 29660  014C80  0E13               	movlw	19
 29661  014C82  6563               	cpfsgt	__display_clear@col& (0+255),b
 29662  014C84  D001               	goto	l1312
 29663  014C86  D016               	goto	u16280
 29664  014C88                     l1312:
 29665                           
 29666                           ; BSR set to: 0
 29667                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 29668                           
 29669                           ; BSR set to: 0
 29670  014C88  5162               	movf	__display_clear@row& (0+255),w,b
 29671  014C8A  0D14               	mullw	20
 29672  014C8C  0E34               	movlw	low _display_content
 29673  014C8E  6F60               	movwf	??__display_clear& (0+255),b
 29674  014C90  0E02               	movlw	high _display_content
 29675  014C92  6F61               	movwf	(??__display_clear+1)& (0+255),b
 29676  014C94  50F3               	movf	prodl,w,c
 29677  014C96  2760               	addwf	??__display_clear& (0+255),f,b
 29678  014C98  50F4               	movf	prodh,w,c
 29679  014C9A  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 29680  014C9C  5163               	movf	__display_clear@col& (0+255),w,b
 29681  014C9E  0D01               	mullw	1
 29682  014CA0  50F3               	movf	prodl,w,c
 29683  014CA2  2560               	addwf	??__display_clear& (0+255),w,b
 29684  014CA4  6ED9               	movwf	fsr2l,c
 29685  014CA6  50F4               	movf	prodh,w,c
 29686  014CA8  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 29687  014CAA  6EDA               	movwf	fsr2h,c
 29688  014CAC  0E20               	movlw	32
 29689  014CAE  6EDF               	movwf	indf2,c
 29690                           
 29691                           ; BSR set to: 0
 29692  014CB0  2B63               	incf	__display_clear@col& (0+255),f,b
 29693  014CB2  D7E6               	goto	l16897
 29694  014CB4                     u16280:
 29695                           
 29696                           ; BSR set to: 0
 29697                           
 29698                           ; BSR set to: 0
 29699  014CB4  2B62               	incf	__display_clear@row& (0+255),f,b
 29700  014CB6  D7DE               	goto	l16891
 29701  014CB8                     __end_of__display_clear:
 29702                           	opt stack 0
 29703                           tblptru	equ	0xFF8
 29704                           tblptrh	equ	0xFF7
 29705                           tblptrl	equ	0xFF6
 29706                           tablat	equ	0xFF5
 29707                           prodh	equ	0xFF4
 29708                           prodl	equ	0xFF3
 29709                           intcon	equ	0xFF2
 29710                           postinc0	equ	0xFEE
 29711                           wreg	equ	0xFE8
 29712                           indf1	equ	0xFE7
 29713                           postinc1	equ	0xFE6
 29714                           postdec1	equ	0xFE5
 29715                           plusw1	equ	0xFE3
 29716                           fsr1h	equ	0xFE2
 29717                           fsr1l	equ	0xFE1
 29718                           indf2	equ	0xFDF
 29719                           postinc2	equ	0xFDE
 29720                           postdec2	equ	0xFDD
 29721                           plusw2	equ	0xFDB
 29722                           fsr2h	equ	0xFDA
 29723                           fsr2l	equ	0xFD9
 29724                           status	equ	0xFD8
 29725                           
 29726 ;; *************** function _adc_read_temperature *****************
 29727 ;; Defined at:
 29728 ;;		line 44 in file "adc.c"
 29729 ;; Parameters:    Size  Location     Type
 29730 ;;		None
 29731 ;; Auto vars:     Size  Location     Type
 29732 ;;  temperature     4   43[BANK0 ] float 
 29733 ;;  adc_result      2   41[BANK0 ] unsigned int 
 29734 ;; Return value:  Size  Location     Type
 29735 ;;                  1    wreg      void 
 29736 ;; Registers used:
 29737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29738 ;; Tracked objects:
 29739 ;;		On entry : 0/0
 29740 ;;		On exit  : 0/0
 29741 ;;		Unchanged: 0/0
 29742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29744 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29746 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29747 ;;Total ram usage:        8 bytes
 29748 ;; Hardware stack levels used:    1
 29749 ;; Hardware stack levels required when called:   11
 29750 ;; This function calls:
 29751 ;;		___fladd
 29752 ;;		___flmul
 29753 ;;		___flneg
 29754 ;;		___fltol
 29755 ;;		___xxtofl
 29756 ;; This function is called by:
 29757 ;;		_main
 29758 ;; This function uses a non-reentrant model
 29759 ;;
 29760                           
 29761                           	psect	text119
 29762  00F0E0                     __ptext119:
 29763                           	opt stack 0
 29764  00F0E0                     _adc_read_temperature:
 29765                           	opt stack 19
 29766                           
 29767                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 29768                           
 29769                           ; BSR set to: 0
 29770                           ;incstack = 0
 29771  00F0E0  CFC4 F089          	movff	4036,adc_read_temperature@adc_result	;volatile
 29772  00F0E4  0100               	movlb	0	; () banked
 29773  00F0E6  6B8A               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 29774                           
 29775                           ; BSR set to: 0
 29776                           ;adc.c: 51: adc_result <<= 8;
 29777  00F0E8  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29778  00F0EA  6F8A               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 29779  00F0EC  6B89               	clrf	adc_read_temperature@adc_result& (0+255),b
 29780                           
 29781                           ; BSR set to: 0
 29782                           ;adc.c: 52: adc_result |= ADRESL;
 29783  00F0EE  50C3               	movf	4035,w,c	;volatile
 29784  00F0F0  1389               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 29785                           
 29786                           ; BSR set to: 0
 29787                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 29788  00F0F2  0102               	movlb	2	; () banked
 29789  00F0F4  511F               	movf	_params& (0+255),w,b
 29790  00F0F6  0D02               	mullw	2
 29791  00F0F8  0E20               	movlw	low (_params+1)
 29792  00F0FA  24F3               	addwf	prodl,w,c
 29793  00F0FC  6ED9               	movwf	fsr2l,c
 29794  00F0FE  0E02               	movlw	high (_params+1)
 29795  00F100  20F4               	addwfc	prodh,w,c
 29796  00F102  6EDA               	movwf	fsr2h,c
 29797  00F104  0100               	movlb	0	; () banked
 29798  00F106  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29799  00F108  26DE               	addwf	postinc2,f,c
 29800  00F10A  518A               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 29801  00F10C  22DD               	addwfc	postdec2,f,c
 29802                           
 29803                           ; BSR set to: 0
 29804                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 29805  00F10E  0102               	movlb	2	; () banked
 29806  00F110  511F               	movf	_params& (0+255),w,b
 29807  00F112  0D01               	mullw	1
 29808  00F114  0E24               	movlw	low (_params+5)
 29809  00F116  24F3               	addwf	prodl,w,c
 29810  00F118  6ED9               	movwf	fsr2l,c
 29811  00F11A  0E02               	movlw	high (_params+5)
 29812  00F11C  20F4               	addwfc	prodh,w,c
 29813  00F11E  6EDA               	movwf	fsr2h,c
 29814  00F120  2ADF               	incf	indf2,f,c
 29815                           
 29816                           ; BSR set to: 2
 29817                           ;adc.c: 59: ADCON0bits.GO = 1;
 29818  00F122  82C2               	bsf	4034,1,c	;volatile
 29819                           
 29820                           ; BSR set to: 2
 29821                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 29822  00F124  511F               	movf	_params& (0+255),w,b
 29823  00F126  0D01               	mullw	1
 29824  00F128  0E24               	movlw	low (_params+5)
 29825  00F12A  24F3               	addwf	prodl,w,c
 29826  00F12C  6ED9               	movwf	fsr2l,c
 29827  00F12E  0E02               	movlw	high (_params+5)
 29828  00F130  20F4               	addwfc	prodh,w,c
 29829  00F132  6EDA               	movwf	fsr2h,c
 29830  00F134  0E08               	movlw	8
 29831  00F136  18DE               	xorwf	postinc2,w,c
 29832  00F138  A4D8               	btfss	status,2,c
 29833  00F13A  D0AF               	goto	l2785
 29834                           
 29835                           ; BSR set to: 2
 29836                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 29837  00F13C  511F               	movf	_params& (0+255),w,b
 29838  00F13E  0D02               	mullw	2
 29839  00F140  0E20               	movlw	low (_params+1)
 29840  00F142  24F3               	addwf	prodl,w,c
 29841  00F144  6ED9               	movwf	fsr2l,c
 29842  00F146  0E02               	movlw	high (_params+1)
 29843  00F148  20F4               	addwfc	prodh,w,c
 29844  00F14A  6EDA               	movwf	fsr2h,c
 29845  00F14C  CFDE F087          	movff	postinc2,??_adc_read_temperature
 29846  00F150  CFDD F088          	movff	postdec2,??_adc_read_temperature+1
 29847  00F154  C087  F060         	movff	??_adc_read_temperature,___xxtofl@val
 29848  00F158  C088  F061         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 29849  00F15C  0100               	movlb	0	; () banked
 29850  00F15E  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 29851  00F160  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 29852  00F162  0E00               	movlw	0
 29853  00F164  EC5D  F081         	call	___xxtofl
 29854  00F168  C060  F06E         	movff	?___xxtofl,___flneg@f1
 29855  00F16C  C061  F06F         	movff	?___xxtofl+1,___flneg@f1+1
 29856  00F170  C062  F070         	movff	?___xxtofl+2,___flneg@f1+2
 29857  00F174  C063  F071         	movff	?___xxtofl+3,___flneg@f1+3
 29858  00F178  EC2D  F0A9         	call	___flneg	;wreg free
 29859  00F17C  C06E  F072         	movff	?___flneg,___fladd@b
 29860  00F180  C06F  F073         	movff	?___flneg+1,___fladd@b+1
 29861  00F184  C070  F074         	movff	?___flneg+2,___fladd@b+2
 29862  00F188  C071  F075         	movff	?___flneg+3,___fladd@b+3
 29863  00F18C  0E00               	movlw	0
 29864  00F18E  0100               	movlb	0	; () banked
 29865  00F190  6F76               	movwf	___fladd@a& (0+255),b
 29866  00F192  0E90               	movlw	144
 29867  00F194  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29868  00F196  0EA4               	movlw	164
 29869  00F198  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29870  00F19A  0E46               	movlw	70
 29871  00F19C  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29872  00F19E  EC22  F068         	call	___fladd	;wreg free
 29873  00F1A2  C072  F08B         	movff	?___fladd,adc_read_temperature@temperature
 29874  00F1A6  C073  F08C         	movff	?___fladd+1,adc_read_temperature@temperature+1
 29875  00F1AA  C074  F08D         	movff	?___fladd+2,adc_read_temperature@temperature+2
 29876  00F1AE  C075  F08E         	movff	?___fladd+3,adc_read_temperature@temperature+3
 29877                           
 29878                           ;adc.c: 68: temperature *= 0.7405;
 29879  00F1B2  C08B  F06E         	movff	adc_read_temperature@temperature,___flmul@b
 29880  00F1B6  C08C  F06F         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 29881  00F1BA  C08D  F070         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 29882  00F1BE  C08E  F071         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 29883  00F1C2  0E68               	movlw	104
 29884  00F1C4  0100               	movlb	0	; () banked
 29885  00F1C6  6F72               	movwf	___flmul@a& (0+255),b
 29886  00F1C8  0E91               	movlw	145
 29887  00F1CA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 29888  00F1CC  0E3D               	movlw	61
 29889  00F1CE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 29890  00F1D0  0E3F               	movlw	63
 29891  00F1D2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 29892  00F1D4  EC79  F066         	call	___flmul	;wreg free
 29893  00F1D8  C06E  F08B         	movff	?___flmul,adc_read_temperature@temperature
 29894  00F1DC  C06F  F08C         	movff	?___flmul+1,adc_read_temperature@temperature+1
 29895  00F1E0  C070  F08D         	movff	?___flmul+2,adc_read_temperature@temperature+2
 29896  00F1E4  C071  F08E         	movff	?___flmul+3,adc_read_temperature@temperature+3
 29897                           
 29898                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 29899  00F1E8  C08B  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 29900  00F1EC  C08C  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 29901  00F1F0  C08D  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 29902  00F1F4  C08E  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 29903  00F1F8  ECA8  F090         	call	___fltol	;wreg free
 29904  00F1FC  0102               	movlb	2	; () banked
 29905  00F1FE  511F               	movf	_params& (0+255),w,b
 29906  00F200  0D02               	mullw	2
 29907  00F202  0E98               	movlw	low (_os+39)
 29908  00F204  24F3               	addwf	prodl,w,c
 29909  00F206  6ED9               	movwf	fsr2l,c
 29910  00F208  0E01               	movlw	high (_os+39)
 29911  00F20A  20F4               	addwfc	prodh,w,c
 29912  00F20C  6EDA               	movwf	fsr2h,c
 29913  00F20E  0100               	movlb	0	; () banked
 29914  00F210  C060  FFDE         	movff	?___fltol,postinc2
 29915  00F214  C061  FFDD         	movff	?___fltol+1,postdec2
 29916                           
 29917                           ; BSR set to: 0
 29918                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 29919  00F218  0102               	movlb	2	; () banked
 29920  00F21A  511F               	movf	_params& (0+255),w,b
 29921  00F21C  0D02               	mullw	2
 29922  00F21E  0E20               	movlw	low (_params+1)
 29923  00F220  24F3               	addwf	prodl,w,c
 29924  00F222  6ED9               	movwf	fsr2l,c
 29925  00F224  0E02               	movlw	high (_params+1)
 29926  00F226  20F4               	addwfc	prodh,w,c
 29927  00F228  6EDA               	movwf	fsr2h,c
 29928  00F22A  0E00               	movlw	0
 29929  00F22C  6EDE               	movwf	postinc2,c
 29930  00F22E  0E00               	movlw	0
 29931  00F230  6EDD               	movwf	postdec2,c
 29932                           
 29933                           ; BSR set to: 2
 29934                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 29935  00F232  511F               	movf	_params& (0+255),w,b
 29936  00F234  0D01               	mullw	1
 29937  00F236  0E24               	movlw	low (_params+5)
 29938  00F238  24F3               	addwf	prodl,w,c
 29939  00F23A  6ED9               	movwf	fsr2l,c
 29940  00F23C  0E02               	movlw	high (_params+5)
 29941  00F23E  20F4               	addwfc	prodh,w,c
 29942  00F240  6EDA               	movwf	fsr2h,c
 29943  00F242  0E00               	movlw	0
 29944  00F244  6EDF               	movwf	indf2,c
 29945                           
 29946                           ; BSR set to: 2
 29947                           ;adc.c: 78: if(os.fan_on)
 29948  00F246  0101               	movlb	1	; () banked
 29949  00F248  519F               	movf	(_os+46)& (0+255),w,b	;volatile
 29950  00F24A  B4D8               	btfsc	status,2,c
 29951  00F24C  D013               	goto	l2782
 29952                           
 29953                           ; BSR set to: 1
 29954                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 29955  00F24E  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29956  00F250  D006               	goto	u17920
 29957  00F252  0E60               	movlw	96
 29958  00F254  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29959  00F256  0E09               	movlw	9
 29960  00F258  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29961  00F25A  B0D8               	btfsc	status,0,c
 29962  00F25C  D01E               	goto	l2785
 29963  00F25E                     u17920:
 29964                           
 29965                           ; BSR set to: 1
 29966  00F25E  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29967  00F260  D006               	goto	u17930
 29968  00F262  0E60               	movlw	96
 29969  00F264  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29970  00F266  0E09               	movlw	9
 29971  00F268  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29972  00F26A  B0D8               	btfsc	status,0,c
 29973  00F26C  D016               	goto	l2785
 29974  00F26E                     u17930:
 29975                           
 29976                           ; BSR set to: 1
 29977                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 29978  00F26E  9C8B               	bcf	3979,6,c	;volatile
 29979                           
 29980                           ; BSR set to: 1
 29981                           ;adc.c: 83: os.fan_on = 0;
 29982  00F270  0E00               	movlw	0
 29983  00F272  D012               	goto	L39
 29984  00F274                     l2782:
 29985                           
 29986                           ; BSR set to: 1
 29987                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 29988                           
 29989                           ; BSR set to: 1
 29990  00F274  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29991  00F276  D006               	goto	u17940
 29992  00F278  0EC5               	movlw	197
 29993  00F27A  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29994  00F27C  0E09               	movlw	9
 29995  00F27E  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29996  00F280  B0D8               	btfsc	status,0,c
 29997  00F282  D008               	goto	u17950
 29998  00F284                     u17940:
 29999                           
 30000                           ; BSR set to: 1
 30001  00F284  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 30002  00F286  D009               	goto	l2785
 30003  00F288  0EC5               	movlw	197
 30004  00F28A  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 30005  00F28C  0E09               	movlw	9
 30006  00F28E  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 30007  00F290  A0D8               	btfss	status,0,c
 30008  00F292  D003               	goto	l2785
 30009  00F294                     u17950:
 30010                           
 30011                           ; BSR set to: 1
 30012                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 30013  00F294  8C8B               	bsf	3979,6,c	;volatile
 30014                           
 30015                           ; BSR set to: 1
 30016                           ;adc.c: 91: os.fan_on = 1;
 30017  00F296  0E01               	movlw	1
 30018  00F298                     L39:
 30019  00F298  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 30020  00F29A                     l2785:
 30021                           
 30022                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 30023                           
 30024                           ; BSR set to: 1
 30025                           
 30026                           ; BSR set to: 1
 30027  00F29A  0102               	movlb	2	; () banked
 30028  00F29C  511F               	movf	_params& (0+255),w,b
 30029  00F29E  A4D8               	btfss	status,2,c
 30030  00F2A0  D007               	goto	l2788
 30031                           
 30032                           ; BSR set to: 2
 30033                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 30034  00F2A2  50C2               	movf	4034,w,c	;volatile
 30035  00F2A4  0BC3               	andlw	-61
 30036  00F2A6  092C               	iorlw	44
 30037  00F2A8  6EC2               	movwf	4034,c	;volatile
 30038                           
 30039                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 30040  00F2AA  0E01               	movlw	1
 30041  00F2AC  6F1F               	movwf	_params& (0+255),b
 30042                           
 30043                           ;adc.c: 101: }
 30044  00F2AE  0012               	return	
 30045  00F2B0                     l2788:
 30046                           
 30047                           ; BSR set to: 2
 30048                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 30049                           
 30050                           ; BSR set to: 2
 30051  00F2B0  50C2               	movf	4034,w,c	;volatile
 30052  00F2B2  0BC3               	andlw	-61
 30053  00F2B4  0924               	iorlw	36
 30054  00F2B6  6EC2               	movwf	4034,c	;volatile
 30055                           
 30056                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 30057  00F2B8  0E00               	movlw	0
 30058  00F2BA  6F1F               	movwf	_params& (0+255),b
 30059  00F2BC  0012               	return	
 30060  00F2BE                     __end_of_adc_read_temperature:
 30061                           	opt stack 0
 30062                           tblptru	equ	0xFF8
 30063                           tblptrh	equ	0xFF7
 30064                           tblptrl	equ	0xFF6
 30065                           tablat	equ	0xFF5
 30066                           prodh	equ	0xFF4
 30067                           prodl	equ	0xFF3
 30068                           intcon	equ	0xFF2
 30069                           postinc0	equ	0xFEE
 30070                           wreg	equ	0xFE8
 30071                           indf1	equ	0xFE7
 30072                           postinc1	equ	0xFE6
 30073                           postdec1	equ	0xFE5
 30074                           plusw1	equ	0xFE3
 30075                           fsr1h	equ	0xFE2
 30076                           fsr1l	equ	0xFE1
 30077                           indf2	equ	0xFDF
 30078                           postinc2	equ	0xFDE
 30079                           postdec2	equ	0xFDD
 30080                           plusw2	equ	0xFDB
 30081                           fsr2h	equ	0xFDA
 30082                           fsr2l	equ	0xFD9
 30083                           status	equ	0xFD8
 30084                           
 30085 ;; *************** function ___flneg *****************
 30086 ;; Defined at:
 30087 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 30088 ;; Parameters:    Size  Location     Type
 30089 ;;  f1              4   14[BANK0 ] void 
 30090 ;; Auto vars:     Size  Location     Type
 30091 ;;		None
 30092 ;; Return value:  Size  Location     Type
 30093 ;;                  4   14[BANK0 ] void 
 30094 ;; Registers used:
 30095 ;;		wreg, status,2, status,0
 30096 ;; Tracked objects:
 30097 ;;		On entry : 0/0
 30098 ;;		On exit  : 0/0
 30099 ;;		Unchanged: 0/0
 30100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30104 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30105 ;;Total ram usage:        4 bytes
 30106 ;; Hardware stack levels used:    1
 30107 ;; Hardware stack levels required when called:   10
 30108 ;; This function calls:
 30109 ;;		Nothing
 30110 ;; This function is called by:
 30111 ;;		_adc_read_temperature
 30112 ;; This function uses a non-reentrant model
 30113 ;;
 30114                           
 30115                           	psect	text120
 30116  01525A                     __ptext120:
 30117                           	opt stack 0
 30118  01525A                     ___flneg:
 30119                           	opt stack 19
 30120                           
 30121                           ; BSR set to: 2
 30122                           ;incstack = 0
 30123  01525A  0100               	movlb	0	; () banked
 30124  01525C  516E               	movf	___flneg@f1& (0+255),w,b
 30125  01525E  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 30126  015260  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 30127  015262  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 30128  015264  B4D8               	btfsc	status,2,c
 30129  015266  D008               	goto	l3182
 30130                           
 30131                           ; BSR set to: 0
 30132  015268  0E00               	movlw	0
 30133  01526A  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 30134  01526C  0E00               	movlw	0
 30135  01526E  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 30136  015270  0E00               	movlw	0
 30137  015272  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 30138  015274  0E80               	movlw	128
 30139  015276  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 30140  015278                     l3182:
 30141                           
 30142                           ; BSR set to: 0
 30143                           
 30144                           ; BSR set to: 0
 30145  015278  C06E  F06E         	movff	___flneg@f1,?___flneg
 30146  01527C  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 30147  015280  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 30148  015284  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 30149  015288  0012               	return	
 30150  01528A                     __end_of___flneg:
 30151                           	opt stack 0
 30152                           tblptru	equ	0xFF8
 30153                           tblptrh	equ	0xFF7
 30154                           tblptrl	equ	0xFF6
 30155                           tablat	equ	0xFF5
 30156                           prodh	equ	0xFF4
 30157                           prodl	equ	0xFF3
 30158                           intcon	equ	0xFF2
 30159                           postinc0	equ	0xFEE
 30160                           wreg	equ	0xFE8
 30161                           indf1	equ	0xFE7
 30162                           postinc1	equ	0xFE6
 30163                           postdec1	equ	0xFE5
 30164                           plusw1	equ	0xFE3
 30165                           fsr1h	equ	0xFE2
 30166                           fsr1l	equ	0xFE1
 30167                           indf2	equ	0xFDF
 30168                           postinc2	equ	0xFDE
 30169                           postdec2	equ	0xFDD
 30170                           plusw2	equ	0xFDB
 30171                           fsr2h	equ	0xFDA
 30172                           fsr2l	equ	0xFD9
 30173                           status	equ	0xFD8
 30174                           
 30175 ;; *************** function ___fladd *****************
 30176 ;; Defined at:
 30177 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 30178 ;; Parameters:    Size  Location     Type
 30179 ;;  b               4   18[BANK0 ] void 
 30180 ;;  a               4   22[BANK0 ] void 
 30181 ;; Auto vars:     Size  Location     Type
 30182 ;;  grs             1   37[BANK0 ] unsigned char 
 30183 ;;  bexp            1   36[BANK0 ] unsigned char 
 30184 ;;  aexp            1   35[BANK0 ] unsigned char 
 30185 ;;  signs           1   34[BANK0 ] unsigned char 
 30186 ;; Return value:  Size  Location     Type
 30187 ;;                  4   18[BANK0 ] unsigned char 
 30188 ;; Registers used:
 30189 ;;		wreg, status,2, status,0
 30190 ;; Tracked objects:
 30191 ;;		On entry : 0/0
 30192 ;;		On exit  : 0/0
 30193 ;;		Unchanged: 0/0
 30194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30195 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30197 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30198 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30199 ;;Total ram usage:       20 bytes
 30200 ;; Hardware stack levels used:    1
 30201 ;; Hardware stack levels required when called:   10
 30202 ;; This function calls:
 30203 ;;		Nothing
 30204 ;; This function is called by:
 30205 ;;		_motor_divide_jump_to_nearest
 30206 ;;		_adc_read_temperature
 30207 ;; This function uses a non-reentrant model
 30208 ;;
 30209                           
 30210                           	psect	text121
 30211  00D044                     __ptext121:
 30212                           	opt stack 0
 30213  00D044                     ___fladd:
 30214                           	opt stack 18
 30215                           
 30216                           ; BSR set to: 0
 30217                           ;incstack = 0
 30218  00D044  0100               	movlb	0	; () banked
 30219  00D046  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30220  00D048  0B80               	andlw	128
 30221  00D04A  6F82               	movwf	___fladd@signs& (0+255),b
 30222  00D04C  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30223  00D04E  2575               	addwf	(___fladd@b+3)& (0+255),w,b
 30224  00D050  6F84               	movwf	___fladd@bexp& (0+255),b
 30225                           
 30226                           ; BSR set to: 0
 30227  00D052  BF74               	btfsc	(___fladd@b+2)& (0+255),7,b
 30228                           
 30229                           ; BSR set to: 0
 30230  00D054  8184               	bsf	___fladd@bexp& (0+255),0,b
 30231                           
 30232                           ; BSR set to: 0
 30233                           
 30234                           ; BSR set to: 0
 30235  00D056  5184               	movf	___fladd@bexp& (0+255),w,b
 30236  00D058  B4D8               	btfsc	status,2,c
 30237  00D05A  D00D               	goto	l3422
 30238                           
 30239                           ; BSR set to: 0
 30240  00D05C  2984               	incf	___fladd@bexp& (0+255),w,b
 30241  00D05E  A4D8               	btfss	status,2,c
 30242  00D060  D008               	goto	l3423
 30243                           
 30244                           ; BSR set to: 0
 30245  00D062  0E00               	movlw	0
 30246  00D064  6F72               	movwf	___fladd@b& (0+255),b
 30247  00D066  0E00               	movlw	0
 30248  00D068  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30249  00D06A  0E00               	movlw	0
 30250  00D06C  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30251  00D06E  0E00               	movlw	0
 30252  00D070  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30253  00D072                     l3423:
 30254                           
 30255                           ; BSR set to: 0
 30256                           
 30257                           ; BSR set to: 0
 30258  00D072  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30259  00D074  D006               	goto	L40
 30260  00D076                     l3422:
 30261                           
 30262                           ; BSR set to: 0
 30263                           
 30264                           ; BSR set to: 0
 30265  00D076  0E00               	movlw	0
 30266  00D078  6F72               	movwf	___fladd@b& (0+255),b
 30267  00D07A  0E00               	movlw	0
 30268  00D07C  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30269  00D07E  0E00               	movlw	0
 30270  00D080  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30271  00D082                     L40:
 30272  00D082  0E00               	movlw	0
 30273  00D084  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30274                           
 30275                           ; BSR set to: 0
 30276                           
 30277                           ; BSR set to: 0
 30278  00D086  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30279  00D088  0B80               	andlw	128
 30280  00D08A  6F83               	movwf	___fladd@aexp& (0+255),b
 30281                           
 30282                           ; BSR set to: 0
 30283  00D08C  5182               	movf	___fladd@signs& (0+255),w,b
 30284  00D08E  1983               	xorwf	___fladd@aexp& (0+255),w,b
 30285  00D090  A4D8               	btfss	status,2,c
 30286                           
 30287                           ; BSR set to: 0
 30288  00D092  8D82               	bsf	___fladd@signs& (0+255),6,b
 30289                           
 30290                           ; BSR set to: 0
 30291                           
 30292                           ; BSR set to: 0
 30293  00D094  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30294  00D096  2579               	addwf	(___fladd@a+3)& (0+255),w,b
 30295  00D098  6F83               	movwf	___fladd@aexp& (0+255),b
 30296                           
 30297                           ; BSR set to: 0
 30298  00D09A  BF78               	btfsc	(___fladd@a+2)& (0+255),7,b
 30299                           
 30300                           ; BSR set to: 0
 30301  00D09C  8183               	bsf	___fladd@aexp& (0+255),0,b
 30302                           
 30303                           ; BSR set to: 0
 30304                           
 30305                           ; BSR set to: 0
 30306  00D09E  5183               	movf	___fladd@aexp& (0+255),w,b
 30307  00D0A0  B4D8               	btfsc	status,2,c
 30308  00D0A2  D00D               	goto	l3427
 30309                           
 30310                           ; BSR set to: 0
 30311  00D0A4  2983               	incf	___fladd@aexp& (0+255),w,b
 30312  00D0A6  A4D8               	btfss	status,2,c
 30313  00D0A8  D008               	goto	l3428
 30314                           
 30315                           ; BSR set to: 0
 30316  00D0AA  0E00               	movlw	0
 30317  00D0AC  6F76               	movwf	___fladd@a& (0+255),b
 30318  00D0AE  0E00               	movlw	0
 30319  00D0B0  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30320  00D0B2  0E00               	movlw	0
 30321  00D0B4  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30322  00D0B6  0E00               	movlw	0
 30323  00D0B8  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30324  00D0BA                     l3428:
 30325                           
 30326                           ; BSR set to: 0
 30327                           
 30328                           ; BSR set to: 0
 30329  00D0BA  8F78               	bsf	(___fladd@a+2)& (0+255),7,b
 30330  00D0BC  D006               	goto	L41
 30331  00D0BE                     l3427:
 30332                           
 30333                           ; BSR set to: 0
 30334                           
 30335                           ; BSR set to: 0
 30336  00D0BE  0E00               	movlw	0
 30337  00D0C0  6F76               	movwf	___fladd@a& (0+255),b
 30338  00D0C2  0E00               	movlw	0
 30339  00D0C4  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30340  00D0C6  0E00               	movlw	0
 30341  00D0C8  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30342  00D0CA                     L41:
 30343  00D0CA  0E00               	movlw	0
 30344  00D0CC  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30345                           
 30346                           ; BSR set to: 0
 30347                           
 30348                           ; BSR set to: 0
 30349  00D0CE  5184               	movf	___fladd@bexp& (0+255),w,b
 30350  00D0D0  5D83               	subwf	___fladd@aexp& (0+255),w,b
 30351  00D0D2  B0D8               	btfsc	status,0,c
 30352  00D0D4  D022               	goto	l3430
 30353                           
 30354                           ; BSR set to: 0
 30355  00D0D6  AD82               	btfss	___fladd@signs& (0+255),6,b
 30356  00D0D8  D002               	goto	l3431
 30357                           
 30358                           ; BSR set to: 0
 30359  00D0DA  0E80               	movlw	128
 30360  00D0DC  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30361  00D0DE                     l3431:
 30362                           
 30363                           ; BSR set to: 0
 30364                           
 30365                           ; BSR set to: 0
 30366  00D0DE  C084  F085         	movff	___fladd@bexp,___fladd@grs
 30367                           
 30368                           ; BSR set to: 0
 30369  00D0E2  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30370                           
 30371                           ; BSR set to: 0
 30372  00D0E6  C085  F083         	movff	___fladd@grs,___fladd@aexp
 30373                           
 30374                           ; BSR set to: 0
 30375  00D0EA  C072  F085         	movff	___fladd@b,___fladd@grs
 30376                           
 30377                           ; BSR set to: 0
 30378  00D0EE  C076  F072         	movff	___fladd@a,___fladd@b
 30379                           
 30380                           ; BSR set to: 0
 30381  00D0F2  C085  F076         	movff	___fladd@grs,___fladd@a
 30382                           
 30383                           ; BSR set to: 0
 30384  00D0F6  C073  F085         	movff	___fladd@b+1,___fladd@grs
 30385                           
 30386                           ; BSR set to: 0
 30387  00D0FA  C077  F073         	movff	___fladd@a+1,___fladd@b+1
 30388                           
 30389                           ; BSR set to: 0
 30390  00D0FE  C085  F077         	movff	___fladd@grs,___fladd@a+1
 30391                           
 30392                           ; BSR set to: 0
 30393  00D102  C074  F085         	movff	___fladd@b+2,___fladd@grs
 30394                           
 30395                           ; BSR set to: 0
 30396  00D106  C078  F074         	movff	___fladd@a+2,___fladd@b+2
 30397                           
 30398                           ; BSR set to: 0
 30399  00D10A  C085  F078         	movff	___fladd@grs,___fladd@a+2
 30400                           
 30401                           ; BSR set to: 0
 30402  00D10E  C075  F085         	movff	___fladd@b+3,___fladd@grs
 30403                           
 30404                           ; BSR set to: 0
 30405  00D112  C079  F075         	movff	___fladd@a+3,___fladd@b+3
 30406                           
 30407                           ; BSR set to: 0
 30408  00D116  C085  F079         	movff	___fladd@grs,___fladd@a+3
 30409  00D11A                     l3430:
 30410                           
 30411                           ; BSR set to: 0
 30412                           
 30413                           ; BSR set to: 0
 30414  00D11A  0E00               	movlw	0
 30415  00D11C  6F85               	movwf	___fladd@grs& (0+255),b
 30416                           
 30417                           ; BSR set to: 0
 30418  00D11E  5184               	movf	___fladd@bexp& (0+255),w,b
 30419  00D120  6F7A               	movwf	??___fladd& (0+255),b
 30420  00D122  6B7B               	clrf	(??___fladd+1)& (0+255),b
 30421  00D124  1F7A               	comf	??___fladd& (0+255),f,b
 30422  00D126  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30423  00D128  4B7A               	infsnz	??___fladd& (0+255),f,b
 30424  00D12A  2B7B               	incf	(??___fladd+1)& (0+255),f,b
 30425  00D12C  5183               	movf	___fladd@aexp& (0+255),w,b
 30426  00D12E  6F7C               	movwf	(??___fladd+2)& (0+255),b
 30427  00D130  6B7D               	clrf	(??___fladd+3)& (0+255),b
 30428  00D132  517A               	movf	??___fladd& (0+255),w,b
 30429  00D134  277C               	addwf	(??___fladd+2)& (0+255),f,b
 30430  00D136  517B               	movf	(??___fladd+1)& (0+255),w,b
 30431  00D138  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30432  00D13A  BF7D               	btfsc	(??___fladd+3)& (0+255),7,b
 30433  00D13C  D02C               	goto	l3434
 30434  00D13E  517D               	movf	(??___fladd+3)& (0+255),w,b
 30435  00D140  E104               	bnz	u15150
 30436  00D142  0E1A               	movlw	26
 30437  00D144  5D7C               	subwf	(??___fladd+2)& (0+255),w,b
 30438  00D146  A0D8               	btfss	status,0,c
 30439  00D148  D026               	goto	l3434
 30440  00D14A                     u15150:
 30441                           
 30442                           ; BSR set to: 0
 30443  00D14A  5172               	movf	___fladd@b& (0+255),w,b
 30444  00D14C  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30445  00D14E  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30446  00D150  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30447  00D152  B4D8               	btfsc	status,2,c
 30448  00D154  D002               	goto	u15160
 30449  00D156  0E01               	movlw	1
 30450  00D158  D001               	goto	u15170
 30451  00D15A                     u15160:
 30452  00D15A  0E00               	movlw	0
 30453  00D15C                     u15170:
 30454  00D15C  6F85               	movwf	___fladd@grs& (0+255),b
 30455                           
 30456                           ; BSR set to: 0
 30457  00D15E  0E00               	movlw	0
 30458  00D160  6F72               	movwf	___fladd@b& (0+255),b
 30459  00D162  0E00               	movlw	0
 30460  00D164  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30461  00D166  0E00               	movlw	0
 30462  00D168  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30463  00D16A  0E00               	movlw	0
 30464  00D16C  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30465                           
 30466                           ; BSR set to: 0
 30467  00D16E  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30468  00D172  D015               	goto	u15200
 30469  00D174                     l3435:
 30470                           
 30471                           ; BSR set to: 0
 30472  00D174  A185               	btfss	___fladd@grs& (0+255),0,b
 30473  00D176  D005               	goto	l3436
 30474                           
 30475                           ; BSR set to: 0
 30476  00D178  90D8               	bcf	status,0,c
 30477  00D17A  3185               	rrcf	___fladd@grs& (0+255),w,b
 30478  00D17C  0901               	iorlw	1
 30479  00D17E  6F85               	movwf	___fladd@grs& (0+255),b
 30480  00D180  D002               	goto	l3437
 30481  00D182                     l3436:
 30482                           
 30483                           ; BSR set to: 0
 30484                           
 30485                           ; BSR set to: 0
 30486  00D182  90D8               	bcf	status,0,c
 30487  00D184  3385               	rrcf	___fladd@grs& (0+255),f,b
 30488  00D186                     l3437:
 30489                           
 30490                           ; BSR set to: 0
 30491                           
 30492                           ; BSR set to: 0
 30493  00D186  B172               	btfsc	___fladd@b& (0+255),0,b
 30494                           
 30495                           ; BSR set to: 0
 30496  00D188  8F85               	bsf	___fladd@grs& (0+255),7,b
 30497                           
 30498                           ; BSR set to: 0
 30499                           
 30500                           ; BSR set to: 0
 30501  00D18A  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30502  00D18C  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30503  00D18E  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30504  00D190  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30505  00D192  3372               	rrcf	___fladd@b& (0+255),f,b
 30506                           
 30507                           ; BSR set to: 0
 30508  00D194  2B84               	incf	___fladd@bexp& (0+255),f,b
 30509  00D196                     l3434:
 30510                           
 30511                           ; BSR set to: 0
 30512  00D196  5183               	movf	___fladd@aexp& (0+255),w,b
 30513  00D198  5D84               	subwf	___fladd@bexp& (0+255),w,b
 30514  00D19A  A0D8               	btfss	status,0,c
 30515  00D19C  D7EB               	goto	l3435
 30516  00D19E                     u15200:
 30517                           
 30518                           ; BSR set to: 0
 30519                           
 30520                           ; BSR set to: 0
 30521  00D19E  BD82               	btfsc	___fladd@signs& (0+255),6,b
 30522  00D1A0  D028               	goto	l3440
 30523                           
 30524                           ; BSR set to: 0
 30525  00D1A2  5184               	movf	___fladd@bexp& (0+255),w,b
 30526  00D1A4  A4D8               	btfss	status,2,c
 30527  00D1A6  D009               	goto	l3441
 30528                           
 30529                           ; BSR set to: 0
 30530  00D1A8  0E00               	movlw	0
 30531  00D1AA  6F72               	movwf	?___fladd& (0+255),b
 30532  00D1AC  0E00               	movlw	0
 30533  00D1AE  6F73               	movwf	(?___fladd+1)& (0+255),b
 30534  00D1B0  0E00               	movlw	0
 30535  00D1B2  6F74               	movwf	(?___fladd+2)& (0+255),b
 30536  00D1B4  0E00               	movlw	0
 30537  00D1B6  6F75               	movwf	(?___fladd+3)& (0+255),b
 30538                           
 30539                           ; BSR set to: 0
 30540  00D1B8  0012               	return	
 30541  00D1BA                     l3441:
 30542                           
 30543                           ; BSR set to: 0
 30544                           
 30545                           ; BSR set to: 0
 30546  00D1BA  5176               	movf	___fladd@a& (0+255),w,b
 30547  00D1BC  2772               	addwf	___fladd@b& (0+255),f,b
 30548  00D1BE  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30549  00D1C0  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30550  00D1C2  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30551  00D1C4  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30552  00D1C6  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30553  00D1C8  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30554                           
 30555                           ; BSR set to: 0
 30556  00D1CA  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30557  00D1CC  D082               	goto	u15330
 30558                           
 30559                           ; BSR set to: 0
 30560  00D1CE  A185               	btfss	___fladd@grs& (0+255),0,b
 30561  00D1D0  D005               	goto	l3444
 30562                           
 30563                           ; BSR set to: 0
 30564  00D1D2  90D8               	bcf	status,0,c
 30565  00D1D4  3185               	rrcf	___fladd@grs& (0+255),w,b
 30566  00D1D6  0901               	iorlw	1
 30567  00D1D8  6F85               	movwf	___fladd@grs& (0+255),b
 30568  00D1DA  D002               	goto	l3445
 30569  00D1DC                     l3444:
 30570                           
 30571                           ; BSR set to: 0
 30572                           
 30573                           ; BSR set to: 0
 30574  00D1DC  90D8               	bcf	status,0,c
 30575  00D1DE  3385               	rrcf	___fladd@grs& (0+255),f,b
 30576  00D1E0                     l3445:
 30577                           
 30578                           ; BSR set to: 0
 30579                           
 30580                           ; BSR set to: 0
 30581  00D1E0  B172               	btfsc	___fladd@b& (0+255),0,b
 30582                           
 30583                           ; BSR set to: 0
 30584  00D1E2  8F85               	bsf	___fladd@grs& (0+255),7,b
 30585                           
 30586                           ; BSR set to: 0
 30587                           
 30588                           ; BSR set to: 0
 30589  00D1E4  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30590  00D1E6  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30591  00D1E8  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30592  00D1EA  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30593  00D1EC  3372               	rrcf	___fladd@b& (0+255),f,b
 30594                           
 30595                           ; BSR set to: 0
 30596  00D1EE  2B84               	incf	___fladd@bexp& (0+255),f,b
 30597                           
 30598                           ; BSR set to: 0
 30599  00D1F0  D070               	goto	u15330
 30600  00D1F2                     l3440:
 30601                           
 30602                           ; BSR set to: 0
 30603                           
 30604                           ; BSR set to: 0
 30605  00D1F2  5176               	movf	___fladd@a& (0+255),w,b
 30606  00D1F4  5D72               	subwf	___fladd@b& (0+255),w,b
 30607  00D1F6  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30608  00D1F8  5973               	subwfb	(___fladd@b+1)& (0+255),w,b
 30609  00D1FA  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30610  00D1FC  5974               	subwfb	(___fladd@b+2)& (0+255),w,b
 30611  00D1FE  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30612  00D200  0A80               	xorlw	128
 30613  00D202  6F7A               	movwf	??___fladd& (0+255),b
 30614  00D204  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30615  00D206  0A80               	xorlw	128
 30616  00D208  597A               	subwfb	??___fladd& (0+255),w,b
 30617  00D20A  B0D8               	btfsc	status,0,c
 30618  00D20C  D036               	goto	l3448
 30619                           
 30620                           ; BSR set to: 0
 30621  00D20E  C072  F07A         	movff	___fladd@b,??___fladd
 30622  00D212  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30623  00D216  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30624  00D21A  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30625  00D21E  1F7A               	comf	??___fladd& (0+255),f,b
 30626  00D220  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30627  00D222  1F7C               	comf	(??___fladd+2)& (0+255),f,b
 30628  00D224  1F7D               	comf	(??___fladd+3)& (0+255),f,b
 30629  00D226  2B7A               	incf	??___fladd& (0+255),f,b
 30630  00D228  0E00               	movlw	0
 30631  00D22A  237B               	addwfc	(??___fladd+1)& (0+255),f,b
 30632  00D22C  237C               	addwfc	(??___fladd+2)& (0+255),f,b
 30633  00D22E  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30634  00D230  5176               	movf	___fladd@a& (0+255),w,b
 30635  00D232  257A               	addwf	??___fladd& (0+255),w,b
 30636  00D234  6F7E               	movwf	(??___fladd+4)& (0+255),b
 30637  00D236  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30638  00D238  217B               	addwfc	(??___fladd+1)& (0+255),w,b
 30639  00D23A  6F7F               	movwf	(??___fladd+5)& (0+255),b
 30640  00D23C  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30641  00D23E  217C               	addwfc	(??___fladd+2)& (0+255),w,b
 30642  00D240  6F80               	movwf	(??___fladd+6)& (0+255),b
 30643  00D242  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30644  00D244  217D               	addwfc	(??___fladd+3)& (0+255),w,b
 30645  00D246  6F81               	movwf	(??___fladd+7)& (0+255),b
 30646  00D248  0EFF               	movlw	255
 30647  00D24A  257E               	addwf	(??___fladd+4)& (0+255),w,b
 30648  00D24C  6F72               	movwf	___fladd@b& (0+255),b
 30649  00D24E  0EFF               	movlw	255
 30650  00D250  217F               	addwfc	(??___fladd+5)& (0+255),w,b
 30651  00D252  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30652  00D254  0EFF               	movlw	255
 30653  00D256  2180               	addwfc	(??___fladd+6)& (0+255),w,b
 30654  00D258  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30655  00D25A  0EFF               	movlw	255
 30656  00D25C  2181               	addwfc	(??___fladd+7)& (0+255),w,b
 30657  00D25E  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30658  00D260  0E80               	movlw	128
 30659  00D262  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30660                           
 30661                           ; BSR set to: 0
 30662  00D264  6D85               	negf	___fladd@grs& (0+255),b
 30663                           
 30664                           ; BSR set to: 0
 30665  00D266  5185               	movf	___fladd@grs& (0+255),w,b
 30666  00D268  A4D8               	btfss	status,2,c
 30667  00D26A  D00F               	goto	l3450
 30668                           
 30669                           ; BSR set to: 0
 30670  00D26C  0E01               	movlw	1
 30671  00D26E  2772               	addwf	___fladd@b& (0+255),f,b
 30672  00D270  0E00               	movlw	0
 30673  00D272  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30674  00D274  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30675  00D276  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30676                           
 30677                           ; BSR set to: 0
 30678  00D278  D008               	goto	l3450
 30679  00D27A                     l3448:
 30680                           
 30681                           ; BSR set to: 0
 30682                           
 30683                           ; BSR set to: 0
 30684  00D27A  5176               	movf	___fladd@a& (0+255),w,b
 30685  00D27C  5F72               	subwf	___fladd@b& (0+255),f,b
 30686  00D27E  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30687  00D280  5B73               	subwfb	(___fladd@b+1)& (0+255),f,b
 30688  00D282  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30689  00D284  5B74               	subwfb	(___fladd@b+2)& (0+255),f,b
 30690  00D286  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30691  00D288  5B75               	subwfb	(___fladd@b+3)& (0+255),f,b
 30692  00D28A                     l3450:
 30693                           
 30694                           ; BSR set to: 0
 30695  00D28A  5172               	movf	___fladd@b& (0+255),w,b
 30696  00D28C  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30697  00D28E  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30698  00D290  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30699  00D292  A4D8               	btfss	status,2,c
 30700  00D294  D01C               	goto	l3457
 30701                           
 30702                           ; BSR set to: 0
 30703  00D296  5185               	movf	___fladd@grs& (0+255),w,b
 30704  00D298  A4D8               	btfss	status,2,c
 30705  00D29A  D019               	goto	l3457
 30706                           
 30707                           ; BSR set to: 0
 30708  00D29C  0E00               	movlw	0
 30709  00D29E  6F72               	movwf	?___fladd& (0+255),b
 30710  00D2A0  0E00               	movlw	0
 30711  00D2A2  6F73               	movwf	(?___fladd+1)& (0+255),b
 30712  00D2A4  0E00               	movlw	0
 30713  00D2A6  6F74               	movwf	(?___fladd+2)& (0+255),b
 30714  00D2A8  0E00               	movlw	0
 30715  00D2AA  6F75               	movwf	(?___fladd+3)& (0+255),b
 30716                           
 30717                           ; BSR set to: 0
 30718  00D2AC  0012               	return	
 30719  00D2AE                     
 30720                           ; BSR set to: 0
 30721                           
 30722                           ; BSR set to: 0
 30723  00D2AE  90D8               	bcf	status,0,c
 30724  00D2B0  3772               	rlcf	___fladd@b& (0+255),f,b
 30725  00D2B2  3773               	rlcf	(___fladd@b+1)& (0+255),f,b
 30726  00D2B4  3774               	rlcf	(___fladd@b+2)& (0+255),f,b
 30727  00D2B6  3775               	rlcf	(___fladd@b+3)& (0+255),f,b
 30728                           
 30729                           ; BSR set to: 0
 30730  00D2B8  BF85               	btfsc	___fladd@grs& (0+255),7,b
 30731                           
 30732                           ; BSR set to: 0
 30733  00D2BA  8172               	bsf	___fladd@b& (0+255),0,b
 30734                           
 30735                           ; BSR set to: 0
 30736                           
 30737                           ; BSR set to: 0
 30738  00D2BC  A185               	btfss	___fladd@grs& (0+255),0,b
 30739  00D2BE  D002               	goto	l3455
 30740                           
 30741                           ; BSR set to: 0
 30742  00D2C0  80D8               	bsf	status,0,c
 30743  00D2C2  D001               	goto	L42
 30744  00D2C4                     l3455:
 30745                           
 30746                           ; BSR set to: 0
 30747                           
 30748                           ; BSR set to: 0
 30749  00D2C4  90D8               	bcf	status,0,c
 30750  00D2C6                     L42:
 30751  00D2C6  3785               	rlcf	___fladd@grs& (0+255),f,b
 30752                           
 30753                           ; BSR set to: 0
 30754                           
 30755                           ; BSR set to: 0
 30756  00D2C8  5184               	movf	___fladd@bexp& (0+255),w,b
 30757  00D2CA  A4D8               	btfss	status,2,c
 30758                           
 30759                           ; BSR set to: 0
 30760  00D2CC  0784               	decf	___fladd@bexp& (0+255),f,b
 30761  00D2CE                     l3457:
 30762                           
 30763                           ; BSR set to: 0
 30764                           
 30765                           ; BSR set to: 0
 30766                           
 30767                           ; BSR set to: 0
 30768  00D2CE  AF74               	btfss	(___fladd@b+2)& (0+255),7,b
 30769  00D2D0  D7EE               	goto	l3453
 30770  00D2D2                     u15330:
 30771                           
 30772                           ; BSR set to: 0
 30773                           
 30774                           ; BSR set to: 0
 30775                           
 30776                           ; BSR set to: 0
 30777  00D2D2  0E00               	movlw	0
 30778  00D2D4  6F83               	movwf	___fladd@aexp& (0+255),b
 30779                           
 30780                           ; BSR set to: 0
 30781  00D2D6  AF85               	btfss	___fladd@grs& (0+255),7,b
 30782  00D2D8  D00A               	goto	l3462
 30783                           
 30784                           ; BSR set to: 0
 30785  00D2DA  C085  F07A         	movff	___fladd@grs,??___fladd
 30786  00D2DE  0E7F               	movlw	127
 30787  00D2E0  177A               	andwf	??___fladd& (0+255),f,b
 30788  00D2E2  A4D8               	btfss	status,2,c
 30789  00D2E4  D002               	goto	u15360
 30790                           
 30791                           ; BSR set to: 0
 30792                           
 30793                           ; BSR set to: 0
 30794  00D2E6  A172               	btfss	___fladd@b& (0+255),0,b
 30795  00D2E8  D002               	goto	l3462
 30796  00D2EA                     u15360:
 30797                           
 30798                           ; BSR set to: 0
 30799  00D2EA  0E01               	movlw	1
 30800  00D2EC  6F83               	movwf	___fladd@aexp& (0+255),b
 30801  00D2EE                     l3462:
 30802                           
 30803                           ; BSR set to: 0
 30804                           
 30805                           ; BSR set to: 0
 30806                           
 30807                           ; BSR set to: 0
 30808  00D2EE  5183               	movf	___fladd@aexp& (0+255),w,b
 30809  00D2F0  B4D8               	btfsc	status,2,c
 30810  00D2F2  D020               	goto	l3465
 30811                           
 30812                           ; BSR set to: 0
 30813  00D2F4  0E01               	movlw	1
 30814  00D2F6  2772               	addwf	___fladd@b& (0+255),f,b
 30815  00D2F8  0E00               	movlw	0
 30816  00D2FA  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30817  00D2FC  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30818  00D2FE  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30819                           
 30820                           ; BSR set to: 0
 30821  00D300  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30822  00D302  D018               	goto	l3465
 30823                           
 30824                           ; BSR set to: 0
 30825  00D304  C072  F07A         	movff	___fladd@b,??___fladd
 30826  00D308  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30827  00D30C  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30828  00D310  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30829  00D314  357D               	rlcf	(??___fladd+3)& (0+255),w,b
 30830  00D316  337D               	rrcf	(??___fladd+3)& (0+255),f,b
 30831  00D318  337C               	rrcf	(??___fladd+2)& (0+255),f,b
 30832  00D31A  337B               	rrcf	(??___fladd+1)& (0+255),f,b
 30833  00D31C  337A               	rrcf	??___fladd& (0+255),f,b
 30834  00D31E  C07A  F072         	movff	??___fladd,___fladd@b
 30835  00D322  C07B  F073         	movff	??___fladd+1,___fladd@b+1
 30836  00D326  C07C  F074         	movff	??___fladd+2,___fladd@b+2
 30837  00D32A  C07D  F075         	movff	??___fladd+3,___fladd@b+3
 30838  00D32E  2984               	incf	___fladd@bexp& (0+255),w,b
 30839  00D330  A4D8               	btfss	status,2,c
 30840                           
 30841                           ; BSR set to: 0
 30842  00D332  2B84               	incf	___fladd@bexp& (0+255),f,b
 30843  00D334                     l3465:
 30844                           
 30845                           ; BSR set to: 0
 30846                           
 30847                           ; BSR set to: 0
 30848                           
 30849                           ; BSR set to: 0
 30850                           
 30851                           ; BSR set to: 0
 30852  00D334  2984               	incf	___fladd@bexp& (0+255),w,b
 30853  00D336  B4D8               	btfsc	status,2,c
 30854  00D338  D003               	goto	u15410
 30855                           
 30856                           ; BSR set to: 0
 30857  00D33A  5184               	movf	___fladd@bexp& (0+255),w,b
 30858  00D33C  A4D8               	btfss	status,2,c
 30859  00D33E  D00D               	goto	l3469
 30860  00D340                     u15410:
 30861                           
 30862                           ; BSR set to: 0
 30863                           
 30864                           ; BSR set to: 0
 30865  00D340  0E00               	movlw	0
 30866  00D342  6F72               	movwf	___fladd@b& (0+255),b
 30867  00D344  0E00               	movlw	0
 30868  00D346  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30869  00D348  0E00               	movlw	0
 30870  00D34A  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30871  00D34C  0E00               	movlw	0
 30872  00D34E  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30873  00D350  5184               	movf	___fladd@bexp& (0+255),w,b
 30874  00D352  A4D8               	btfss	status,2,c
 30875  00D354  D002               	goto	l3469
 30876                           
 30877                           ; BSR set to: 0
 30878  00D356  0E00               	movlw	0
 30879  00D358  6F82               	movwf	___fladd@signs& (0+255),b
 30880  00D35A                     l3469:
 30881                           
 30882                           ; BSR set to: 0
 30883                           
 30884                           ; BSR set to: 0
 30885                           
 30886                           ; BSR set to: 0
 30887  00D35A  A184               	btfss	___fladd@bexp& (0+255),0,b
 30888  00D35C  D002               	goto	l3470
 30889                           
 30890                           ; BSR set to: 0
 30891  00D35E  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30892  00D360  D001               	goto	l3471
 30893  00D362                     l3470:
 30894                           
 30895                           ; BSR set to: 0
 30896                           
 30897                           ; BSR set to: 0
 30898  00D362  9F74               	bcf	(___fladd@b+2)& (0+255),7,b
 30899  00D364                     l3471:
 30900                           
 30901                           ; BSR set to: 0
 30902                           
 30903                           ; BSR set to: 0
 30904  00D364  90D8               	bcf	status,0,c
 30905  00D366  3184               	rrcf	___fladd@bexp& (0+255),w,b
 30906  00D368  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30907                           
 30908                           ; BSR set to: 0
 30909  00D36A  BF82               	btfsc	___fladd@signs& (0+255),7,b
 30910                           
 30911                           ; BSR set to: 0
 30912  00D36C  8F75               	bsf	(___fladd@b+3)& (0+255),7,b
 30913                           
 30914                           ; BSR set to: 0
 30915                           
 30916                           ; BSR set to: 0
 30917  00D36E  C072  F072         	movff	___fladd@b,?___fladd
 30918  00D372  C073  F073         	movff	___fladd@b+1,?___fladd+1
 30919  00D376  C074  F074         	movff	___fladd@b+2,?___fladd+2
 30920  00D37A  C075  F075         	movff	___fladd@b+3,?___fladd+3
 30921  00D37E  0012               	return	
 30922  00D380                     __end_of___fladd:
 30923                           	opt stack 0
 30924                           tblptru	equ	0xFF8
 30925                           tblptrh	equ	0xFF7
 30926                           tblptrl	equ	0xFF6
 30927                           tablat	equ	0xFF5
 30928                           prodh	equ	0xFF4
 30929                           prodl	equ	0xFF3
 30930                           intcon	equ	0xFF2
 30931                           postinc0	equ	0xFEE
 30932                           wreg	equ	0xFE8
 30933                           indf1	equ	0xFE7
 30934                           postinc1	equ	0xFE6
 30935                           postdec1	equ	0xFE5
 30936                           plusw1	equ	0xFE3
 30937                           fsr1h	equ	0xFE2
 30938                           fsr1l	equ	0xFE1
 30939                           indf2	equ	0xFDF
 30940                           postinc2	equ	0xFDE
 30941                           postdec2	equ	0xFDD
 30942                           plusw2	equ	0xFDB
 30943                           fsr2h	equ	0xFDA
 30944                           fsr2l	equ	0xFD9
 30945                           status	equ	0xFD8
 30946                           
 30947 ;; *************** function _USBDeviceInit *****************
 30948 ;; Defined at:
 30949 ;;		line 277 in file "usb_device.c"
 30950 ;; Parameters:    Size  Location     Type
 30951 ;;		None
 30952 ;; Auto vars:     Size  Location     Type
 30953 ;;  i               1    8[BANK0 ] unsigned char 
 30954 ;; Return value:  Size  Location     Type
 30955 ;;                  1    wreg      void 
 30956 ;; Registers used:
 30957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30958 ;; Tracked objects:
 30959 ;;		On entry : 0/0
 30960 ;;		On exit  : 0/0
 30961 ;;		Unchanged: 0/0
 30962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30966 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30967 ;;Total ram usage:        1 bytes
 30968 ;; Hardware stack levels used:    1
 30969 ;; Hardware stack levels required when called:   11
 30970 ;; This function calls:
 30971 ;;		_memset
 30972 ;; This function is called by:
 30973 ;;		_main
 30974 ;; This function uses a non-reentrant model
 30975 ;;
 30976                           
 30977                           	psect	text122
 30978  00FEE2                     __ptext122:
 30979                           	opt stack 0
 30980  00FEE2                     _USBDeviceInit:
 30981                           	opt stack 19
 30982                           
 30983                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 30984                           
 30985                           ; BSR set to: 0
 30986                           ;incstack = 0
 30987  00FEE2  98A0               	bcf	4000,4,c	;volatile
 30988                           
 30989                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 30990  00FEE4  0E00               	movlw	0
 30991  00FEE6  6E63               	movwf	3939,c	;volatile
 30992                           
 30993                           ;usb_device.c: 291: {UIR = 0;};
 30994  00FEE8  0E00               	movlw	0
 30995  00FEEA  6E62               	movwf	3938,c	;volatile
 30996                           
 30997                           ;usb_device.c: 294: UEP0 = 0;
 30998  00FEEC  0E00               	movlw	0
 30999  00FEEE  010F               	movlb	15	; () banked
 31000  00FEF0  6F26               	movwf	38,b	;volatile
 31001                           
 31002                           ; BSR set to: 15
 31003                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 31004  00FEF2  0E27               	movlw	39
 31005  00FEF4  0100               	movlb	0	; () banked
 31006  00FEF6  6F60               	movwf	memset@p1& (0+255),b
 31007  00FEF8  0E0F               	movlw	15
 31008  00FEFA  6F61               	movwf	(memset@p1+1)& (0+255),b
 31009  00FEFC  0E00               	movlw	0
 31010  00FEFE  6F63               	movwf	(memset@c+1)& (0+255),b
 31011  00FF00  0E00               	movlw	0
 31012  00FF02  6F62               	movwf	memset@c& (0+255),b
 31013  00FF04  0E00               	movlw	0
 31014  00FF06  6F65               	movwf	(memset@n+1)& (0+255),b
 31015  00FF08  0E02               	movlw	2
 31016  00FF0A  6F64               	movwf	memset@n& (0+255),b
 31017  00FF0C  EC45  F0A9         	call	_memset	;wreg free
 31018                           
 31019                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 31020  00FF10  0E16               	movlw	22
 31021  00FF12  010F               	movlb	15	; () banked
 31022  00FF14  6F39               	movwf	57,b	;volatile
 31023                           
 31024                           ; BSR set to: 15
 31025  00FF16  0E9F               	movlw	159
 31026  00FF18  6F37               	movwf	55,b	;volatile
 31027                           
 31028                           ; BSR set to: 15
 31029  00FF1A  0E7B               	movlw	123
 31030  00FF1C  6F36               	movwf	54,b	;volatile
 31031                           
 31032                           ; BSR set to: 15
 31033                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 31034  00FF1E  0E00               	movlw	0
 31035  00FF20  0100               	movlb	0	; () banked
 31036  00FF22  6F68               	movwf	USBDeviceInit@i& (0+255),b
 31037  00FF24                     l17221:
 31038                           
 31039                           ; BSR set to: 0
 31040  00FF24  0E0B               	movlw	11
 31041  00FF26  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 31042  00FF28  D001               	goto	l145
 31043  00FF2A  D00E               	goto	u16510
 31044  00FF2C                     l145:
 31045                           
 31046                           ; BSR set to: 0
 31047                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 31048                           
 31049                           ; BSR set to: 0
 31050  00FF2C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31051  00FF2E  0D04               	mullw	4
 31052  00FF30  0E00               	movlw	0
 31053  00FF32  24F3               	addwf	prodl,w,c
 31054  00FF34  6ED9               	movwf	fsr2l,c
 31055  00FF36  0E0D               	movlw	13
 31056  00FF38  20F4               	addwfc	prodh,w,c
 31057  00FF3A  6EDA               	movwf	fsr2h,c
 31058  00FF3C  6ADE               	clrf	postinc2,c
 31059  00FF3E  6ADE               	clrf	postinc2,c
 31060  00FF40  6ADE               	clrf	postinc2,c
 31061  00FF42  6ADD               	clrf	postdec2,c
 31062                           
 31063                           ; BSR set to: 0
 31064  00FF44  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 31065  00FF46  D7EE               	goto	l17221
 31066  00FF48                     u16510:
 31067                           
 31068                           ; BSR set to: 0
 31069                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 31070  00FF48  8C65               	bsf	3941,6,c	;volatile
 31071                           
 31072                           ; BSR set to: 0
 31073                           ;usb_device.c: 316: UADDR = 0x00;
 31074  00FF4A  0E00               	movlw	0
 31075  00FF4C  010F               	movlb	15	; () banked
 31076  00FF4E  6F38               	movwf	56,b	;volatile
 31077                           
 31078                           ; BSR set to: 15
 31079                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 31080  00FF50  9865               	bcf	3941,4,c	;volatile
 31081                           
 31082                           ; BSR set to: 15
 31083                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 31084  00FF52  9C65               	bcf	3941,6,c	;volatile
 31085  00FF54                     
 31086                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 31087                           
 31088                           ; BSR set to: 15
 31089  00FF54  9662               	bcf	3938,3,c	;volatile
 31090                           
 31091                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 31092  00FF56  0E00               	movlw	0
 31093  00FF58  6E55               	movwf	_inPipes+3,c	;volatile
 31094                           
 31095                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 31096  00FF5A  0E00               	movlw	0
 31097  00FF5C  0101               	movlb	1	; () banked
 31098  00FF5E  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 31099                           
 31100                           ; BSR set to: 1
 31101                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 31102  00FF60  0E00               	movlw	0
 31103  00FF62  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 31104  00FF64  0E00               	movlw	0
 31105  00FF66  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 31106                           
 31107                           ; BSR set to: 1
 31108                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 31109  00FF68  B662               	btfsc	3938,3,c	;volatile
 31110  00FF6A  D7F4               	goto	l147
 31111                           
 31112                           ; BSR set to: 1
 31113                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 31114                           
 31115                           ; BSR set to: 1
 31116  00FF6C  0E01               	movlw	1
 31117  00FF6E  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 31118                           
 31119                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 31120  00FF70  0E01               	movlw	1
 31121  00FF72  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 31122                           
 31123                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 31124  00FF74  0E00               	movlw	0
 31125  00FF76  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 31126                           
 31127                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 31128  00FF78  0E00               	movlw	0
 31129  00FF7A  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 31130                           
 31131                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 31132  00FF7C  0E00               	movlw	0
 31133  00FF7E  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 31134                           
 31135                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 31136  00FF80  0E00               	movlw	0
 31137  00FF82  0100               	movlb	0	; () banked
 31138  00FF84  6F68               	movwf	USBDeviceInit@i& (0+255),b
 31139  00FF86                     l17249:
 31140                           
 31141                           ; BSR set to: 0
 31142  00FF86  0E02               	movlw	2
 31143  00FF88  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 31144  00FF8A  D001               	goto	l149
 31145  00FF8C  D02E               	goto	u16540
 31146  00FF8E                     l149:
 31147                           
 31148                           ; BSR set to: 0
 31149                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 31150                           
 31151                           ; BSR set to: 0
 31152  00FF8E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31153  00FF90  0D02               	mullw	2
 31154  00FF92  0E1B               	movlw	low _pBDTEntryIn
 31155  00FF94  24F3               	addwf	prodl,w,c
 31156  00FF96  6ED9               	movwf	fsr2l,c
 31157  00FF98  0E01               	movlw	high _pBDTEntryIn
 31158  00FF9A  20F4               	addwfc	prodh,w,c
 31159  00FF9C  6EDA               	movwf	fsr2h,c
 31160  00FF9E  0E00               	movlw	0
 31161  00FFA0  6EDE               	movwf	postinc2,c
 31162  00FFA2  0E00               	movlw	0
 31163  00FFA4  6EDD               	movwf	postdec2,c
 31164                           
 31165                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 31166  00FFA6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31167  00FFA8  0D02               	mullw	2
 31168  00FFAA  0E21               	movlw	low _pBDTEntryOut
 31169  00FFAC  24F3               	addwf	prodl,w,c
 31170  00FFAE  6ED9               	movwf	fsr2l,c
 31171  00FFB0  0E01               	movlw	high _pBDTEntryOut
 31172  00FFB2  20F4               	addwfc	prodh,w,c
 31173  00FFB4  6EDA               	movwf	fsr2h,c
 31174  00FFB6  0E00               	movlw	0
 31175  00FFB8  6EDE               	movwf	postinc2,c
 31176  00FFBA  0E00               	movlw	0
 31177  00FFBC  6EDD               	movwf	postdec2,c
 31178                           
 31179                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 31180  00FFBE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31181  00FFC0  0D01               	mullw	1
 31182  00FFC2  0E3C               	movlw	low _ep_data_in
 31183  00FFC4  24F3               	addwf	prodl,w,c
 31184  00FFC6  6ED9               	movwf	fsr2l,c
 31185  00FFC8  0E01               	movlw	high _ep_data_in
 31186  00FFCA  20F4               	addwfc	prodh,w,c
 31187  00FFCC  6EDA               	movwf	fsr2h,c
 31188  00FFCE  0E00               	movlw	0
 31189  00FFD0  6EDF               	movwf	indf2,c
 31190                           
 31191                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 31192  00FFD2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31193  00FFD4  0D01               	mullw	1
 31194  00FFD6  0E39               	movlw	low _ep_data_out
 31195  00FFD8  24F3               	addwf	prodl,w,c
 31196  00FFDA  6ED9               	movwf	fsr2l,c
 31197  00FFDC  0E01               	movlw	high _ep_data_out
 31198  00FFDE  20F4               	addwfc	prodh,w,c
 31199  00FFE0  6EDA               	movwf	fsr2h,c
 31200  00FFE2  0E00               	movlw	0
 31201  00FFE4  6EDF               	movwf	indf2,c
 31202                           
 31203                           ; BSR set to: 0
 31204  00FFE6  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 31205  00FFE8  D7CE               	goto	l17249
 31206  00FFEA                     u16540:
 31207                           
 31208                           ; BSR set to: 0
 31209                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31210                           
 31211                           ; BSR set to: 0
 31212  00FFEA  0E08               	movlw	8
 31213  00FFEC  0101               	movlb	1	; () banked
 31214  00FFEE  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 31215  00FFF0  0E0D               	movlw	13
 31216  00FFF2  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31217                           
 31218                           ; BSR set to: 1
 31219                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 31220  00FFF4  0E16               	movlw	22
 31221  00FFF6  010F               	movlb	15	; () banked
 31222  00FFF8  6F26               	movwf	38,b	;volatile
 31223                           
 31224                           ; BSR set to: 15
 31225                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31226  00FFFA  0E0D               	movlw	13
 31227  00FFFC  010D               	movlb	13	; () banked
 31228  00FFFE  6F03               	movwf	3,b	;volatile
 31229  010000  0E30               	movlw	48
 31230  010002  6F02               	movwf	2,b	;volatile
 31231                           
 31232                           ; BSR set to: 13
 31233                           ;usb_device.c: 359: BDT[0].CNT = 8;
 31234  010004  0E08               	movlw	8
 31235  010006  6F01               	movwf	1,b	;volatile
 31236                           
 31237                           ; BSR set to: 13
 31238                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 31239  010008  0E04               	movlw	4
 31240  01000A  6F00               	movwf	0,b	;volatile
 31241                           
 31242                           ; BSR set to: 13
 31243                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 31244  01000C  8F00               	bsf	0,7,b	;volatile
 31245                           
 31246                           ; BSR set to: 13
 31247                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 31248  01000E  0E00               	movlw	0
 31249  010010  0101               	movlb	1	; () banked
 31250  010012  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 31251                           
 31252                           ; BSR set to: 1
 31253                           ;usb_device.c: 366: USB1msTickCount = 0;
 31254  010014  0E00               	movlw	0
 31255  010016  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 31256  010018  0E00               	movlw	0
 31257  01001A  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 31258  01001C  0E00               	movlw	0
 31259  01001E  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 31260  010020  0E00               	movlw	0
 31261  010022  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 31262                           
 31263                           ; BSR set to: 1
 31264                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 31265  010024  0E00               	movlw	0
 31266  010026  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 31267                           
 31268                           ; BSR set to: 1
 31269                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 31270  010028  0E00               	movlw	0
 31271  01002A  6E5E               	movwf	_USBDeviceState,c	;volatile
 31272                           
 31273                           ; BSR set to: 1
 31274  01002C  0012               	return		;funcret
 31275  01002E                     __end_of_USBDeviceInit:
 31276                           	opt stack 0
 31277                           tblptru	equ	0xFF8
 31278                           tblptrh	equ	0xFF7
 31279                           tblptrl	equ	0xFF6
 31280                           tablat	equ	0xFF5
 31281                           prodh	equ	0xFF4
 31282                           prodl	equ	0xFF3
 31283                           intcon	equ	0xFF2
 31284                           postinc0	equ	0xFEE
 31285                           wreg	equ	0xFE8
 31286                           indf1	equ	0xFE7
 31287                           postinc1	equ	0xFE6
 31288                           postdec1	equ	0xFE5
 31289                           plusw1	equ	0xFE3
 31290                           fsr1h	equ	0xFE2
 31291                           fsr1l	equ	0xFE1
 31292                           indf2	equ	0xFDF
 31293                           postinc2	equ	0xFDE
 31294                           postdec2	equ	0xFDD
 31295                           plusw2	equ	0xFDB
 31296                           fsr2h	equ	0xFDA
 31297                           fsr2l	equ	0xFD9
 31298                           status	equ	0xFD8
 31299                           
 31300 ;; *************** function _memset *****************
 31301 ;; Defined at:
 31302 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 31303 ;; Parameters:    Size  Location     Type
 31304 ;;  p1              2    0[BANK0 ] PTR void 
 31305 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31306 ;;  c               2    2[BANK0 ] int 
 31307 ;;  n               2    4[BANK0 ] unsigned int 
 31308 ;; Auto vars:     Size  Location     Type
 31309 ;;  p               2    6[BANK0 ] PTR unsigned char 
 31310 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31311 ;; Return value:  Size  Location     Type
 31312 ;;                  2    0[BANK0 ] PTR void 
 31313 ;; Registers used:
 31314 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31315 ;; Tracked objects:
 31316 ;;		On entry : 0/0
 31317 ;;		On exit  : 0/0
 31318 ;;		Unchanged: 0/0
 31319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31320 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31321 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31323 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31324 ;;Total ram usage:        8 bytes
 31325 ;; Hardware stack levels used:    1
 31326 ;; Hardware stack levels required when called:   10
 31327 ;; This function calls:
 31328 ;;		Nothing
 31329 ;; This function is called by:
 31330 ;;		_USBDeviceInit
 31331 ;; This function uses a non-reentrant model
 31332 ;;
 31333                           
 31334                           	psect	text123
 31335  01528A                     __ptext123:
 31336                           	opt stack 0
 31337  01528A                     _memset:
 31338                           	opt stack 19
 31339                           
 31340                           ; BSR set to: 1
 31341                           ;incstack = 0
 31342  01528A  C060  F066         	movff	memset@p1,memset@p
 31343  01528E  C061  F067         	movff	memset@p1+1,memset@p+1
 31344  015292  D009               	goto	l3647
 31345  015294                     l16355:
 31346  015294  C066  FFD9         	movff	memset@p,fsr2l
 31347  015298  C067  FFDA         	movff	memset@p+1,fsr2h
 31348  01529C  C062  FFDF         	movff	memset@c,indf2
 31349  0152A0  0100               	movlb	0	; () banked
 31350  0152A2  4B66               	infsnz	memset@p& (0+255),f,b
 31351  0152A4  2B67               	incf	(memset@p+1)& (0+255),f,b
 31352  0152A6                     l3647:
 31353                           
 31354                           ; BSR set to: 0
 31355  0152A6  0100               	movlb	0	; () banked
 31356  0152A8  0764               	decf	memset@n& (0+255),f,b
 31357  0152AA  A0D8               	btfss	status,0,c
 31358  0152AC  0765               	decf	(memset@n+1)& (0+255),f,b
 31359  0152AE  2964               	incf	memset@n& (0+255),w,b
 31360  0152B0  E1F1               	bnz	l16355
 31361  0152B2  2965               	incf	(memset@n+1)& (0+255),w,b
 31362  0152B4  B4D8               	btfsc	status,2,c
 31363  0152B6  0012               	return	
 31364  0152B8  D7ED               	goto	l3648
 31365  0152BA                     __end_of_memset:
 31366                           	opt stack 0
 31367                           tblptru	equ	0xFF8
 31368                           tblptrh	equ	0xFF7
 31369                           tblptrl	equ	0xFF6
 31370                           tablat	equ	0xFF5
 31371                           prodh	equ	0xFF4
 31372                           prodl	equ	0xFF3
 31373                           intcon	equ	0xFF2
 31374                           postinc0	equ	0xFEE
 31375                           wreg	equ	0xFE8
 31376                           indf1	equ	0xFE7
 31377                           postinc1	equ	0xFE6
 31378                           postdec1	equ	0xFE5
 31379                           plusw1	equ	0xFE3
 31380                           fsr1h	equ	0xFE2
 31381                           fsr1l	equ	0xFE1
 31382                           indf2	equ	0xFDF
 31383                           postinc2	equ	0xFDE
 31384                           postdec2	equ	0xFDD
 31385                           plusw2	equ	0xFDB
 31386                           fsr2h	equ	0xFDA
 31387                           fsr2l	equ	0xFD9
 31388                           status	equ	0xFD8
 31389                           
 31390 ;; *************** function _USBDeviceAttach *****************
 31391 ;; Defined at:
 31392 ;;		line 1354 in file "usb_device.c"
 31393 ;; Parameters:    Size  Location     Type
 31394 ;;		None
 31395 ;; Auto vars:     Size  Location     Type
 31396 ;;		None
 31397 ;; Return value:  Size  Location     Type
 31398 ;;                  1    wreg      void 
 31399 ;; Registers used:
 31400 ;;		wreg, status,2
 31401 ;; Tracked objects:
 31402 ;;		On entry : 0/0
 31403 ;;		On exit  : 0/0
 31404 ;;		Unchanged: 0/0
 31405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31410 ;;Total ram usage:        0 bytes
 31411 ;; Hardware stack levels used:    1
 31412 ;; Hardware stack levels required when called:   10
 31413 ;; This function calls:
 31414 ;;		Nothing
 31415 ;; This function is called by:
 31416 ;;		_main
 31417 ;; This function uses a non-reentrant model
 31418 ;;
 31419                           
 31420                           	psect	text124
 31421  0151F8                     __ptext124:
 31422                           	opt stack 0
 31423  0151F8                     _USBDeviceAttach:
 31424                           	opt stack 20
 31425                           
 31426                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 31427                           
 31428                           ; BSR set to: 0
 31429                           ;incstack = 0
 31430  0151F8  505E               	movf	_USBDeviceState,w,c	;volatile
 31431  0151FA  A4D8               	btfss	status,2,c
 31432  0151FC  0012               	return	
 31433                           
 31434                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 31435  0151FE  0E00               	movlw	0
 31436  015200  6E65               	movwf	3941,c	;volatile
 31437                           
 31438                           ;usb_device.c: 1365: UIE = 0;
 31439  015202  0E00               	movlw	0
 31440  015204  010F               	movlb	15	; () banked
 31441  015206  6F36               	movwf	54,b	;volatile
 31442                           
 31443                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 31444  015208  0E16               	movlw	22
 31445  01520A  6F39               	movwf	57,b	;volatile
 31446  01520C  0E9F               	movlw	159
 31447  01520E  6F37               	movwf	55,b	;volatile
 31448  015210  0E7B               	movlw	123
 31449  015212  6F36               	movwf	54,b	;volatile
 31450                           
 31451                           ; BSR set to: 15
 31452                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 31453  015214  8ED0               	bsf	4048,7,c	;volatile
 31454                           
 31455                           ; BSR set to: 15
 31456  015216  88A2               	bsf	4002,4,c	;volatile
 31457                           
 31458                           ; BSR set to: 15
 31459  015218  88A0               	bsf	4000,4,c	;volatile
 31460                           
 31461                           ; BSR set to: 15
 31462  01521A  8EF2               	bsf	intcon,7,c	;volatile
 31463                           
 31464                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 31465  01521C  D001               	goto	l206
 31466  01521E                     l207:
 31467  01521E  8665               	bsf	3941,3,c	;volatile
 31468  015220                     l206:
 31469  015220  A665               	btfss	3941,3,c	;volatile
 31470  015222  D7FD               	goto	l207
 31471                           
 31472                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 31473  015224  0E01               	movlw	1
 31474  015226  6E5E               	movwf	_USBDeviceState,c	;volatile
 31475  015228  0012               	return	
 31476  01522A                     __end_of_USBDeviceAttach:
 31477                           	opt stack 0
 31478                           tblptru	equ	0xFF8
 31479                           tblptrh	equ	0xFF7
 31480                           tblptrl	equ	0xFF6
 31481                           tablat	equ	0xFF5
 31482                           prodh	equ	0xFF4
 31483                           prodl	equ	0xFF3
 31484                           intcon	equ	0xFF2
 31485                           postinc0	equ	0xFEE
 31486                           wreg	equ	0xFE8
 31487                           indf1	equ	0xFE7
 31488                           postinc1	equ	0xFE6
 31489                           postdec1	equ	0xFE5
 31490                           plusw1	equ	0xFE3
 31491                           fsr1h	equ	0xFE2
 31492                           fsr1l	equ	0xFE1
 31493                           indf2	equ	0xFDF
 31494                           postinc2	equ	0xFDE
 31495                           postdec2	equ	0xFDD
 31496                           plusw2	equ	0xFDB
 31497                           fsr2h	equ	0xFDA
 31498                           fsr2l	equ	0xFD9
 31499                           status	equ	0xFD8
 31500                           
 31501 ;; *************** function _SYSTEM_Initialize *****************
 31502 ;; Defined at:
 31503 ;;		line 39 in file "system.c"
 31504 ;; Parameters:    Size  Location     Type
 31505 ;;  state           1    wreg     enum E6623
 31506 ;; Auto vars:     Size  Location     Type
 31507 ;;  state           1    4[BANK0 ] enum E6623
 31508 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 31509 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 31510 ;; Return value:  Size  Location     Type
 31511 ;;                  1    wreg      void 
 31512 ;; Registers used:
 31513 ;;		wreg, status,2, status,0
 31514 ;; Tracked objects:
 31515 ;;		On entry : 0/0
 31516 ;;		On exit  : 0/0
 31517 ;;		Unchanged: 0/0
 31518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31520 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31522 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31523 ;;Total ram usage:        5 bytes
 31524 ;; Hardware stack levels used:    1
 31525 ;; Hardware stack levels required when called:   10
 31526 ;; This function calls:
 31527 ;;		Nothing
 31528 ;; This function is called by:
 31529 ;;		_main
 31530 ;; This function uses a non-reentrant model
 31531 ;;
 31532                           
 31533                           	psect	text125
 31534  0144DC                     __ptext125:
 31535                           	opt stack 0
 31536  0144DC                     _SYSTEM_Initialize:
 31537                           	opt stack 20
 31538                           
 31539                           ;incstack = 0
 31540                           ;SYSTEM_Initialize@state stored from wreg
 31541  0144DC  0100               	movlb	0	; () banked
 31542  0144DE  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 31543                           
 31544                           ;system.c: 41: switch(state)
 31545  0144E0  D01E               	goto	l897
 31546  0144E2                     
 31547                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 31548  0144E2  0E02               	movlw	2
 31549  0144E4  0100               	movlb	0	; () banked
 31550  0144E6  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 31551  0144E8  0E58               	movlw	88
 31552  0144EA  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 31553                           
 31554                           ; BSR set to: 0
 31555                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 31556  0144EC  8C9B               	bsf	3995,6,c	;volatile
 31557  0144EE                     l17401:
 31558                           
 31559                           ; BSR set to: 0
 31560  0144EE  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 31561  0144F0  A0D8               	btfss	status,0,c
 31562  0144F2  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 31563  0144F4  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 31564  0144F6  E1FB               	bnz	l17401
 31565  0144F8  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 31566  0144FA  B4D8               	btfsc	status,2,c
 31567  0144FC  0012               	return	
 31568  0144FE  D7F7               	goto	l900
 31569  014500                     
 31570                           ; BSR set to: 0
 31571                           ;system.c: 78: OSCCON = 0x70;
 31572                           
 31573                           ; BSR set to: 0
 31574  014500  0E70               	movlw	112
 31575  014502  6ED3               	movwf	4051,c	;volatile
 31576                           
 31577                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 31578  014504  0E03               	movlw	3
 31579  014506  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),b
 31580  014508  0E20               	movlw	32
 31581  01450A  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),b
 31582  01450C                     l17405:
 31583                           
 31584                           ; BSR set to: 0
 31585  01450C  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),f,b
 31586  01450E  A0D8               	btfss	status,0,c
 31587  014510  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),f,b
 31588  014512  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),w,b
 31589  014514  E1FB               	bnz	l17405
 31590  014516  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),w,b
 31591  014518  B4D8               	btfsc	status,2,c
 31592  01451A  0012               	return	
 31593  01451C  D7F7               	goto	l906
 31594  01451E                     l897:
 31595                           
 31596                           ; BSR set to: 0
 31597  01451E  0100               	movlb	0	; () banked
 31598  014520  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 31599                           
 31600                           ; Switch size 1, requested type "space"
 31601                           ; Number of cases is 3, Range of values is 0 to 2
 31602                           ; switch strategies available:
 31603                           ; Name         Instructions Cycles
 31604                           ; simple_byte           10     6 (average)
 31605                           ;	Chosen strategy is simple_byte
 31606  014522  0A00               	xorlw	0	; case 0
 31607  014524  B4D8               	btfsc	status,2,c
 31608  014526  D7DD               	goto	l898
 31609  014528  0A01               	xorlw	1	; case 1
 31610  01452A  B4D8               	btfsc	status,2,c
 31611  01452C  0012               	return	
 31612  01452E  0A03               	xorlw	3	; case 2
 31613  014530  A4D8               	btfss	status,2,c
 31614  014532  0012               	return	
 31615  014534  D7E5               	goto	l904
 31616  014536                     __end_of_SYSTEM_Initialize:
 31617                           	opt stack 0
 31618                           tblptru	equ	0xFF8
 31619                           tblptrh	equ	0xFF7
 31620                           tblptrl	equ	0xFF6
 31621                           tablat	equ	0xFF5
 31622                           prodh	equ	0xFF4
 31623                           prodl	equ	0xFF3
 31624                           intcon	equ	0xFF2
 31625                           postinc0	equ	0xFEE
 31626                           wreg	equ	0xFE8
 31627                           indf1	equ	0xFE7
 31628                           postinc1	equ	0xFE6
 31629                           postdec1	equ	0xFE5
 31630                           plusw1	equ	0xFE3
 31631                           fsr1h	equ	0xFE2
 31632                           fsr1l	equ	0xFE1
 31633                           indf2	equ	0xFDF
 31634                           postinc2	equ	0xFDE
 31635                           postdec2	equ	0xFDD
 31636                           plusw2	equ	0xFDB
 31637                           fsr2h	equ	0xFDA
 31638                           fsr2l	equ	0xFD9
 31639                           status	equ	0xFD8
 31640                           
 31641 ;; *************** function _APP_DeviceMSDTasks *****************
 31642 ;; Defined at:
 31643 ;;		line 110 in file "app_device_msd.c"
 31644 ;; Parameters:    Size  Location     Type
 31645 ;;		None
 31646 ;; Auto vars:     Size  Location     Type
 31647 ;;		None
 31648 ;; Return value:  Size  Location     Type
 31649 ;;                  1    wreg      void 
 31650 ;; Registers used:
 31651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31652 ;; Tracked objects:
 31653 ;;		On entry : 0/0
 31654 ;;		On exit  : 0/0
 31655 ;;		Unchanged: 0/0
 31656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31661 ;;Total ram usage:        0 bytes
 31662 ;; Hardware stack levels used:    1
 31663 ;; Hardware stack levels required when called:   21
 31664 ;; This function calls:
 31665 ;;		_MSDTasks
 31666 ;; This function is called by:
 31667 ;;		_main
 31668 ;; This function uses a non-reentrant model
 31669 ;;
 31670                           
 31671                           	psect	text126
 31672  015734                     __ptext126:
 31673                           	opt stack 0
 31674  015734                     _APP_DeviceMSDTasks:
 31675                           	opt stack 9
 31676                           
 31677                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 31678                           
 31679                           ; BSR set to: 0
 31680                           ;incstack = 0
 31681  015734  0E20               	movlw	32
 31682  015736  605E               	cpfslt	_USBDeviceState,c	;volatile
 31683  015738  D001               	goto	l986
 31684  01573A  0012               	return	
 31685  01573C                     l986:
 31686                           
 31687                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 31688  01573C  B265               	btfsc	3941,1,c	;volatile
 31689  01573E  0012               	return	
 31690                           
 31691                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 31692                           
 31693                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 31694  015740  ECFC  F071         	call	_MSDTasks	;wreg free
 31695  015744  0012               	return		;funcret
 31696  015746                     __end_of_APP_DeviceMSDTasks:
 31697                           	opt stack 0
 31698                           tblptru	equ	0xFF8
 31699                           tblptrh	equ	0xFF7
 31700                           tblptrl	equ	0xFF6
 31701                           tablat	equ	0xFF5
 31702                           prodh	equ	0xFF4
 31703                           prodl	equ	0xFF3
 31704                           intcon	equ	0xFF2
 31705                           postinc0	equ	0xFEE
 31706                           wreg	equ	0xFE8
 31707                           indf1	equ	0xFE7
 31708                           postinc1	equ	0xFE6
 31709                           postdec1	equ	0xFE5
 31710                           plusw1	equ	0xFE3
 31711                           fsr1h	equ	0xFE2
 31712                           fsr1l	equ	0xFE1
 31713                           indf2	equ	0xFDF
 31714                           postinc2	equ	0xFDE
 31715                           postdec2	equ	0xFDD
 31716                           plusw2	equ	0xFDB
 31717                           fsr2h	equ	0xFDA
 31718                           fsr2l	equ	0xFD9
 31719                           status	equ	0xFD8
 31720                           
 31721 ;; *************** function _MSDTasks *****************
 31722 ;; Defined at:
 31723 ;;		line 335 in file "usb_device_msd.c"
 31724 ;; Parameters:    Size  Location     Type
 31725 ;;		None
 31726 ;; Auto vars:     Size  Location     Type
 31727 ;;  i               1   81[BANK0 ] unsigned char 
 31728 ;; Return value:  Size  Location     Type
 31729 ;;                  1    wreg      unsigned char 
 31730 ;; Registers used:
 31731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31732 ;; Tracked objects:
 31733 ;;		On entry : 0/0
 31734 ;;		On exit  : 0/0
 31735 ;;		Unchanged: 0/0
 31736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31738 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31740 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31741 ;;Total ram usage:        6 bytes
 31742 ;; Hardware stack levels used:    1
 31743 ;; Hardware stack levels required when called:   20
 31744 ;; This function calls:
 31745 ;;		_MSDProcessCommand
 31746 ;;		_USBStallEndpoint
 31747 ;;		_USBTransferOnePacket
 31748 ;; This function is called by:
 31749 ;;		_APP_DeviceMSDTasks
 31750 ;; This function uses a non-reentrant model
 31751 ;;
 31752                           
 31753                           	psect	text127
 31754  00E3F8                     __ptext127:
 31755                           	opt stack 0
 31756  00E3F8                     _MSDTasks:
 31757                           	opt stack 9
 31758                           
 31759                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 31760                           
 31761                           ;incstack = 0
 31762  00E3F8  0E20               	movlw	32
 31763  00E3FA  185E               	xorwf	_USBDeviceState,w,c	;volatile
 31764  00E3FC  A4D8               	btfss	status,2,c
 31765  00E3FE  0012               	return	
 31766                           
 31767                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 31768                           
 31769                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 31770  00E400  98A0               	bcf	4000,4,c	;volatile
 31771                           
 31772                           ;usb_device_msd.c: 357: switch(MSD_State)
 31773  00E402  D11E               	goto	l570
 31774  00E404                     
 31775                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 31776  00E404  0101               	movlb	1	; () banked
 31777  00E406  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31778  00E408  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31779  00E40A  B4D8               	btfsc	status,2,c
 31780  00E40C  D006               	goto	u15590
 31781                           
 31782                           ; BSR set to: 1
 31783  00E40E  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31784  00E412  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31785  00E416  BEDF               	btfsc	indf2,7,c
 31786  00E418  D122               	goto	l586
 31787  00E41A                     u15590:
 31788                           
 31789                           ; BSR set to: 1
 31790                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 31791                           
 31792                           ; BSR set to: 1
 31793  00E41A  0E00               	movlw	0
 31794  00E41C  0100               	movlb	0	; () banked
 31795  00E41E  6FB1               	movwf	MSDTasks@i& (0+255),b
 31796  00E420                     l16441:
 31797                           
 31798                           ; BSR set to: 0
 31799  00E420  0E1E               	movlw	30
 31800  00E422  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 31801  00E424  D001               	goto	l575
 31802  00E426  D014               	goto	u15610
 31803  00E428                     l575:
 31804                           
 31805                           ; BSR set to: 0
 31806                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 31807                           
 31808                           ; BSR set to: 0
 31809  00E428  51B1               	movf	MSDTasks@i& (0+255),w,b
 31810  00E42A  0D01               	mullw	1
 31811  00E42C  0E40               	movlw	64
 31812  00E42E  24F3               	addwf	prodl,w,c
 31813  00E430  6ED9               	movwf	fsr2l,c
 31814  00E432  0E0D               	movlw	13
 31815  00E434  20F4               	addwfc	prodh,w,c
 31816  00E436  6EDA               	movwf	fsr2h,c
 31817  00E438  51B1               	movf	MSDTasks@i& (0+255),w,b
 31818  00E43A  0D01               	mullw	1
 31819  00E43C  0E00               	movlw	low _gblCBW
 31820  00E43E  24F3               	addwf	prodl,w,c
 31821  00E440  6EE1               	movwf	fsr1l,c
 31822  00E442  0E02               	movlw	high _gblCBW
 31823  00E444  20F4               	addwfc	prodh,w,c
 31824  00E446  6EE2               	movwf	fsr1h,c
 31825  00E448  CFDF FFE7          	movff	indf2,indf1
 31826                           
 31827                           ; BSR set to: 0
 31828  00E44C  2BB1               	incf	MSDTasks@i& (0+255),f,b
 31829  00E44E  D7E8               	goto	l16441
 31830  00E450                     u15610:
 31831                           
 31832                           ; BSR set to: 0
 31833                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 31834                           
 31835                           ; BSR set to: 0
 31836  00E450  0101               	movlb	1	; () banked
 31837  00E452  EE20 F001          	lfsr	2,1
 31838  00E456  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31839  00E458  26D9               	addwf	fsr2l,f,c
 31840  00E45A  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31841  00E45C  22DA               	addwfc	fsr2h,f,c
 31842  00E45E  0E1F               	movlw	31
 31843  00E460  18DE               	xorwf	postinc2,w,c
 31844  00E462  A4D8               	btfss	status,2,c
 31845  00E464  D077               	goto	l577
 31846                           
 31847                           ; BSR set to: 1
 31848  00E466  0E55               	movlw	85
 31849  00E468  0102               	movlb	2	; () banked
 31850  00E46A  1900               	xorwf	_gblCBW& (0+255),w,b
 31851  00E46C  E173               	bnz	l577
 31852  00E46E  0E53               	movlw	83
 31853  00E470  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 31854  00E472  E170               	bnz	l577
 31855  00E474  0E42               	movlw	66
 31856  00E476  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 31857  00E478  E16D               	bnz	l577
 31858  00E47A  0E43               	movlw	67
 31859  00E47C  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 31860  00E47E  A4D8               	btfss	status,2,c
 31861  00E480  D069               	goto	l577
 31862                           
 31863                           ; BSR set to: 2
 31864                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 31865  00E482  0E01               	movlw	1
 31866  00E484  0101               	movlb	1	; () banked
 31867  00E486  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31868                           
 31869                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 31870  00E488  0102               	movlb	2	; () banked
 31871  00E48A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 31872  00E48C  A4D8               	btfss	status,2,c
 31873  00E48E  D055               	goto	l578
 31874                           
 31875                           ; BSR set to: 2
 31876  00E490  0E11               	movlw	17
 31877  00E492  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 31878  00E494  D052               	goto	l578
 31879                           
 31880                           ; BSR set to: 2
 31881  00E496  510E               	movf	(_gblCBW+14)& (0+255),w,b
 31882  00E498  B4D8               	btfsc	status,2,c
 31883  00E49A  D04F               	goto	l578
 31884                           
 31885                           ; BSR set to: 2
 31886  00E49C  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 31887  00E4A0  0E3F               	movlw	63
 31888  00E4A2  0100               	movlb	0	; () banked
 31889  00E4A4  17AC               	andwf	??_MSDTasks& (0+255),f,b
 31890  00E4A6  A4D8               	btfss	status,2,c
 31891  00E4A8  D048               	goto	l578
 31892                           
 31893                           ; BSR set to: 0
 31894                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 31895  00E4AA  0E55               	movlw	85
 31896  00E4AC  010D               	movlb	13	; () banked
 31897  00E4AE  6F80               	movwf	128,b	;volatile
 31898  00E4B0  0E53               	movlw	83
 31899  00E4B2  6F81               	movwf	129,b	;volatile
 31900  00E4B4  0E42               	movlw	66
 31901  00E4B6  6F82               	movwf	130,b	;volatile
 31902  00E4B8  0E53               	movlw	83
 31903  00E4BA  6F83               	movwf	131,b	;volatile
 31904                           
 31905                           ; BSR set to: 13
 31906                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 31907  00E4BC  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 31908  00E4C0  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 31909  00E4C4  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 31910  00E4C8  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 31911                           
 31912                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 31913  00E4CC  0E00               	movlw	0
 31914  00E4CE  6F88               	movwf	136,b	;volatile
 31915  00E4D0  0E00               	movlw	0
 31916  00E4D2  6F89               	movwf	137,b	;volatile
 31917  00E4D4  0E00               	movlw	0
 31918  00E4D6  6F8A               	movwf	138,b	;volatile
 31919  00E4D8  0E00               	movlw	0
 31920  00E4DA  6F8B               	movwf	139,b	;volatile
 31921                           
 31922                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 31923  00E4DC  0E00               	movlw	0
 31924  00E4DE  6F8C               	movwf	140,b	;volatile
 31925                           
 31926                           ; BSR set to: 13
 31927                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 31928  00E4E0  0101               	movlb	1	; () banked
 31929  00E4E2  6962               	setf	_MSDCommandState& (0+255),b
 31930                           
 31931                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 31932  00E4E4  0E00               	movlw	0
 31933  00E4E6  6F61               	movwf	_MSDReadState& (0+255),b
 31934                           
 31935                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 31936  00E4E8  0E00               	movlw	0
 31937  00E4EA  6F60               	movwf	_MSDWriteState& (0+255),b
 31938                           
 31939                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 31940  00E4EC  0E00               	movlw	0
 31941  00E4EE  6F5F               	movwf	_MSDRetryAttempt& (0+255),b
 31942                           
 31943                           ; BSR set to: 1
 31944                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 31945  00E4F0  0E03               	movlw	3
 31946  00E4F2  0102               	movlb	2	; () banked
 31947  00E4F4  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 31948  00E4F6  B4D8               	btfsc	status,2,c
 31949  00E4F8  D009               	goto	l579
 31950                           
 31951                           ; BSR set to: 2
 31952                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 31953  00E4FA  0101               	movlb	1	; () banked
 31954  00E4FC  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 31955  00E4FE  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 31956  00E500  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 31957  00E502  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 31958                           
 31959                           ; BSR set to: 1
 31960                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 31961  00E504  0E00               	movlw	0
 31962  00E506  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31963                           
 31964                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 31965  00E508  0E00               	movlw	0
 31966  00E50A  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31967  00E50C                     l579:
 31968                           
 31969                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 31970                           
 31971                           ; BSR set to: 1
 31972  00E50C  0102               	movlb	2	; () banked
 31973  00E50E  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 31974  00E510  D002               	goto	l580
 31975                           
 31976                           ; BSR set to: 2
 31977                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 31978  00E512  0E01               	movlw	1
 31979  00E514  D001               	goto	L44
 31980  00E516                     l580:
 31981                           
 31982                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 31983                           
 31984                           ; BSR set to: 1
 31985  00E516  0E02               	movlw	2
 31986  00E518                     L44:
 31987  00E518  0101               	movlb	1	; () banked
 31988  00E51A  6F63               	movwf	_MSD_State& (0+255),b
 31989                           
 31990                           ; BSR set to: 1
 31991                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 31992                           
 31993                           ; BSR set to: 1
 31994  00E51C  0102               	movlb	2	; () banked
 31995  00E51E  5108               	movf	(_gblCBW+8)& (0+255),w,b
 31996  00E520  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 31997  00E522  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 31998  00E524  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 31999  00E526  B4D8               	btfsc	status,2,c
 32000  00E528  D002               	goto	l582
 32001                           
 32002                           ; BSR set to: 2
 32003                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 32004  00E52A  0E00               	movlw	0
 32005  00E52C  D001               	goto	L45
 32006  00E52E                     l582:
 32007                           
 32008                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 32009                           
 32010                           ; BSR set to: 1
 32011  00E52E  0E01               	movlw	1
 32012  00E530                     L45:
 32013  00E530  0101               	movlb	1	; () banked
 32014  00E532  6F5C               	movwf	_MSDHostNoData& (0+255),b
 32015                           
 32016                           ; BSR set to: 1
 32017                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 32018                           
 32019                           ; BSR set to: 1
 32020  00E534  C20F  F162         	movff	_gblCBW+15,_MSDCommandState
 32021                           
 32022                           ;usb_device_msd.c: 454: }
 32023  00E538  D092               	goto	l586
 32024  00E53A                     l578:
 32025                           
 32026                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 32027                           
 32028                           ; BSR set to: 1
 32029  00E53A  0E01               	movlw	1
 32030  00E53C  0100               	movlb	0	; () banked
 32031  00E53E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32032  00E540  0E02               	movlw	2
 32033  00E542  ECAB  F087         	call	_USBStallEndpoint
 32034                           
 32035                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 32036  00E546  0E00               	movlw	0
 32037  00E548  0100               	movlb	0	; () banked
 32038  00E54A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32039  00E54C  0E02               	movlw	2
 32040  00E54E  ECAB  F087         	call	_USBStallEndpoint
 32041                           
 32042                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 32043  00E552  D085               	goto	l586
 32044  00E554                     l577:
 32045                           
 32046                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 32047  00E554  0E01               	movlw	1
 32048  00E556  0100               	movlb	0	; () banked
 32049  00E558  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32050  00E55A  0E02               	movlw	2
 32051  00E55C  ECAB  F087         	call	_USBStallEndpoint
 32052                           
 32053                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 32054  00E560  0E00               	movlw	0
 32055  00E562  0100               	movlb	0	; () banked
 32056  00E564  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32057  00E566  0E02               	movlw	2
 32058  00E568  ECAB  F087         	call	_USBStallEndpoint
 32059                           
 32060                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 32061  00E56C  0E00               	movlw	0
 32062  00E56E  0101               	movlb	1	; () banked
 32063  00E570  6F5B               	movwf	_MSDCBWValid& (0+255),b
 32064                           
 32065                           ; BSR set to: 1
 32066                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 32067                           
 32068                           ; BSR set to: 1
 32069  00E572  D075               	goto	l586
 32070  00E574                     
 32071                           ; BSR set to: 1
 32072                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 32073                           
 32074                           ; BSR set to: 1
 32075  00E574  EC3A  F083         	call	_MSDProcessCommand	;wreg free
 32076  00E578  0AFF               	xorlw	255
 32077  00E57A  A4D8               	btfss	status,2,c
 32078  00E57C  D070               	goto	l586
 32079  00E57E  D011               	goto	l591
 32080  00E580                     
 32081                           ; BSR set to: 1
 32082                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 32083                           
 32084                           ; BSR set to: 1
 32085  00E580  EC3A  F083         	call	_MSDProcessCommand	;wreg free
 32086  00E584  0AFF               	xorlw	255
 32087  00E586  A4D8               	btfss	status,2,c
 32088  00E588  D06A               	goto	l586
 32089                           
 32090                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 32091  00E58A  010D               	movlb	13	; () banked
 32092  00E58C  518C               	movf	140,w,b	;volatile
 32093  00E58E  A4D8               	btfss	status,2,c
 32094  00E590  D008               	goto	l591
 32095                           
 32096                           ; BSR set to: 13
 32097  00E592  5188               	movf	136,w,b	;volatile
 32098  00E594  1189               	iorwf	137,w,b	;volatile
 32099  00E596  118A               	iorwf	138,w,b	;volatile
 32100  00E598  118B               	iorwf	139,w,b	;volatile
 32101  00E59A  B4D8               	btfsc	status,2,c
 32102  00E59C  D002               	goto	l591
 32103                           
 32104                           ; BSR set to: 13
 32105                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 32106  00E59E  0E02               	movlw	2
 32107  00E5A0  6F8C               	movwf	140,b	;volatile
 32108  00E5A2                     l591:
 32109                           
 32110                           ; BSR set to: 13
 32111                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 32112  00E5A2  0E03               	movlw	3
 32113  00E5A4  D03E               	goto	L43
 32114  00E5A6                     
 32115                           ; BSR set to: 1
 32116                           
 32117                           ; BSR set to: 1
 32118  00E5A6  C11F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 32119  00E5AA  C120  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 32120                           
 32121                           ; BSR set to: 1
 32122                           
 32123                           ; BSR set to: 1
 32124                           
 32125                           ; BSR set to: 1
 32126  00E5AE  0100               	movlb	0	; () banked
 32127  00E5B0  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 32128  00E5B2  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 32129  00E5B4  B4D8               	btfsc	status,2,c
 32130  00E5B6  D00A               	goto	l593
 32131                           
 32132                           ; BSR set to: 0
 32133  00E5B8  C11F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 32134  00E5BC  C120  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 32135                           
 32136                           ; BSR set to: 0
 32137                           
 32138                           ; BSR set to: 0
 32139                           
 32140                           ; BSR set to: 0
 32141                           
 32142                           ; BSR set to: 0
 32143  00E5C0  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 32144  00E5C4  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 32145  00E5C8  BEDF               	btfsc	indf2,7,c
 32146  00E5CA  D049               	goto	l586
 32147  00E5CC                     l593:
 32148                           
 32149                           ; BSR set to: 0
 32150                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 32151                           
 32152                           ; BSR set to: 0
 32153  00E5CC  0E01               	movlw	1
 32154  00E5CE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32155  00E5D0  0E80               	movlw	128
 32156  00E5D2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32157  00E5D4  0E0D               	movlw	13
 32158  00E5D6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32159  00E5D8  0E0D               	movlw	13
 32160  00E5DA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32161  00E5DC  0E02               	movlw	2
 32162  00E5DE  EC30  F088         	call	_USBTransferOnePacket
 32163  00E5E2  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32164  00E5E6  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32165                           
 32166                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 32167  00E5EA  0101               	movlb	1	; () banked
 32168  00E5EC  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32169  00E5EE  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32170  00E5F0  B4D8               	btfsc	status,2,c
 32171  00E5F2  D006               	goto	u15780
 32172                           
 32173                           ; BSR set to: 1
 32174  00E5F4  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32175  00E5F8  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32176  00E5FC  BEDF               	btfsc	indf2,7,c
 32177  00E5FE  D010               	goto	l602
 32178  00E600                     u15780:
 32179                           
 32180                           ; BSR set to: 1
 32181                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 32182                           
 32183                           ; BSR set to: 1
 32184  00E600  0E00               	movlw	0
 32185  00E602  0100               	movlb	0	; () banked
 32186  00E604  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32187  00E606  0E40               	movlw	64
 32188  00E608  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32189  00E60A  0E0D               	movlw	13
 32190  00E60C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32191  00E60E  0E40               	movlw	64
 32192  00E610  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32193  00E612  0E02               	movlw	2
 32194  00E614  EC30  F088         	call	_USBTransferOnePacket
 32195  00E618  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 32196  00E61C  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 32197  00E620                     l602:
 32198                           
 32199                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 32200  00E620  0E00               	movlw	0
 32201  00E622                     L43:
 32202  00E622  0101               	movlb	1	; () banked
 32203  00E624  6F63               	movwf	_MSD_State& (0+255),b
 32204                           
 32205                           ;usb_device_msd.c: 513: break;
 32206  00E626  D01B               	goto	l586
 32207  00E628                     
 32208                           ; BSR set to: 1
 32209                           ;usb_device_msd.c: 518: MSD_State=0x00;
 32210                           
 32211                           ; BSR set to: 1
 32212  00E628  0E00               	movlw	0
 32213  00E62A  6F63               	movwf	_MSD_State& (0+255),b
 32214                           
 32215                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 32216  00E62C  0E02               	movlw	2
 32217  00E62E  010D               	movlb	13	; () banked
 32218  00E630  6F8C               	movwf	140,b	;volatile
 32219                           
 32220                           ; BSR set to: 13
 32221                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 32222  00E632  0E00               	movlw	0
 32223  00E634  0100               	movlb	0	; () banked
 32224  00E636  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32225  00E638  0E02               	movlw	2
 32226  00E63A  ECAB  F087         	call	_USBStallEndpoint
 32227                           
 32228                           ;usb_device_msd.c: 521: }
 32229  00E63E  D00F               	goto	l586
 32230  00E640                     l570:
 32231  00E640  0101               	movlb	1	; () banked
 32232  00E642  5163               	movf	_MSD_State& (0+255),w,b
 32233                           
 32234                           ; Switch size 1, requested type "space"
 32235                           ; Number of cases is 4, Range of values is 0 to 3
 32236                           ; switch strategies available:
 32237                           ; Name         Instructions Cycles
 32238                           ; simple_byte           13     7 (average)
 32239                           ;	Chosen strategy is simple_byte
 32240  00E644  0A00               	xorlw	0	; case 0
 32241  00E646  B4D8               	btfsc	status,2,c
 32242  00E648  D6DD               	goto	l571
 32243  00E64A  0A01               	xorlw	1	; case 1
 32244  00E64C  B4D8               	btfsc	status,2,c
 32245  00E64E  D792               	goto	l587
 32246  00E650  0A03               	xorlw	3	; case 2
 32247  00E652  B4D8               	btfsc	status,2,c
 32248  00E654  D795               	goto	l589
 32249  00E656  0A01               	xorlw	1	; case 3
 32250  00E658  B4D8               	btfsc	status,2,c
 32251  00E65A  D7A5               	goto	l592
 32252  00E65C  D7E5               	goto	l605
 32253  00E65E                     l586:
 32254                           
 32255                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 32256  00E65E  88A0               	bsf	4000,4,c	;volatile
 32257                           
 32258                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 32259  00E660  0012               	return		;funcret
 32260  00E662                     __end_of_MSDTasks:
 32261                           	opt stack 0
 32262                           tblptru	equ	0xFF8
 32263                           tblptrh	equ	0xFF7
 32264                           tblptrl	equ	0xFF6
 32265                           tablat	equ	0xFF5
 32266                           prodh	equ	0xFF4
 32267                           prodl	equ	0xFF3
 32268                           intcon	equ	0xFF2
 32269                           postinc0	equ	0xFEE
 32270                           wreg	equ	0xFE8
 32271                           indf1	equ	0xFE7
 32272                           postinc1	equ	0xFE6
 32273                           postdec1	equ	0xFE5
 32274                           plusw1	equ	0xFE3
 32275                           fsr1h	equ	0xFE2
 32276                           fsr1l	equ	0xFE1
 32277                           indf2	equ	0xFDF
 32278                           postinc2	equ	0xFDE
 32279                           postdec2	equ	0xFDD
 32280                           plusw2	equ	0xFDB
 32281                           fsr2h	equ	0xFDA
 32282                           fsr2l	equ	0xFD9
 32283                           status	equ	0xFD8
 32284                           
 32285 ;; *************** function _MSDProcessCommand *****************
 32286 ;; Defined at:
 32287 ;;		line 553 in file "usb_device_msd.c"
 32288 ;; Parameters:    Size  Location     Type
 32289 ;;		None
 32290 ;; Auto vars:     Size  Location     Type
 32291 ;;		None
 32292 ;; Return value:  Size  Location     Type
 32293 ;;                  1    wreg      unsigned char 
 32294 ;; Registers used:
 32295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32296 ;; Tracked objects:
 32297 ;;		On entry : 0/0
 32298 ;;		On exit  : 0/0
 32299 ;;		Unchanged: 0/0
 32300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32303 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32304 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32305 ;;Total ram usage:        5 bytes
 32306 ;; Hardware stack levels used:    1
 32307 ;; Hardware stack levels required when called:   19
 32308 ;; This function calls:
 32309 ;;		_ExternalFlash_MediaDetect
 32310 ;;		_ExternalFlash_MediaInitialize
 32311 ;;		_MSDProcessCommandMediaAbsent
 32312 ;;		_MSDProcessCommandMediaPresent
 32313 ;; This function is called by:
 32314 ;;		_MSDTasks
 32315 ;; This function uses a non-reentrant model
 32316 ;;
 32317                           
 32318                           	psect	text128
 32319  010674                     __ptext128:
 32320                           	opt stack 0
 32321  010674                     _MSDProcessCommand:
 32322                           	opt stack 9
 32323                           
 32324                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 32325                           
 32326                           ;incstack = 0
 32327  010674  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 32328  010678  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 32329  01067C  EE22  F092         	lfsr	2,_LUN+9
 32330  010680  D801               	call	u13818
 32331  010682  D00A               	goto	u13819
 32332  010684                     u13818:
 32333  010684  0005               	push	
 32334  010686  6EFA               	movwf	pclath,c
 32335  010688  50DE               	movf	postinc2,w,c
 32336  01068A  6EFD               	movwf	tosl,c
 32337  01068C  50DE               	movf	postinc2,w,c
 32338  01068E  6EFE               	movwf	tosh,c
 32339  010690  50DE               	movf	postinc2,w,c
 32340  010692  6EFF               	movwf	tosu,c
 32341  010694  50FA               	movf	pclath,w,c
 32342  010696  0012               	return		;indir
 32343  010698                     u13819:
 32344  010698  0900               	iorlw	0
 32345  01069A  B4D8               	btfsc	status,2,c
 32346  01069C  D00C               	goto	u13830
 32347  01069E  0102               	movlb	2	; () banked
 32348  0106A0  510D               	movf	(_gblCBW+13)& (0+255),w,b
 32349  0106A2  0D01               	mullw	1
 32350  0106A4  0E5D               	movlw	low _SoftDetach
 32351  0106A6  24F3               	addwf	prodl,w,c
 32352  0106A8  6ED9               	movwf	fsr2l,c
 32353  0106AA  0E01               	movlw	high _SoftDetach
 32354  0106AC  20F4               	addwfc	prodh,w,c
 32355  0106AE  6EDA               	movwf	fsr2h,c
 32356  0106B0  04DE               	decf	postinc2,w,c
 32357  0106B2  A4D8               	btfss	status,2,c
 32358  0106B4  D01D               	goto	l608
 32359  0106B6                     u13830:
 32360                           
 32361                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 32362                           
 32363                           ; BSR set to: 2
 32364  0106B6  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32365  0106BA  0E01               	movlw	1
 32366  0106BC  0100               	movlb	0	; () banked
 32367  0106BE  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32368  0106C0  0E00               	movlw	0
 32369  0106C2  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32370  0106C4  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32371  0106C6  D003               	goto	u13844
 32372  0106C8                     u13845:
 32373  0106C8  90D8               	bcf	status,0,c
 32374  0106CA  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32375  0106CC  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32376  0106CE                     u13844:
 32377  0106CE  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32378  0106D0  D7FB               	goto	u13845
 32379  0106D2  0100               	movlb	0	; () banked
 32380  0106D4  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 32381  0106D6  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 32382  0106D8  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 32383  0106DA  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 32384  0106DC  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 32385  0106DE  0101               	movlb	1	; () banked
 32386  0106E0  1747               	andwf	_gblMediaPresent& (0+255),f,b
 32387  0106E2  0100               	movlb	0	; () banked
 32388  0106E4  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 32389  0106E6  0101               	movlb	1	; () banked
 32390  0106E8  1748               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 32391                           
 32392                           ; BSR set to: 1
 32393                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 32394  0106EA  ECC4  F0A0         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32395                           
 32396                           ;usb_device_msd.c: 563: }
 32397  0106EE  D058               	goto	l615
 32398  0106F0                     l608:
 32399                           
 32400                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 32401  0106F0  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32402  0106F4  0E01               	movlw	1
 32403  0106F6  0100               	movlb	0	; () banked
 32404  0106F8  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32405  0106FA  0E00               	movlw	0
 32406  0106FC  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32407  0106FE  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32408  010700  D003               	goto	u13854
 32409  010702                     u13855:
 32410  010702  90D8               	bcf	status,0,c
 32411  010704  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32412  010706  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32413  010708                     u13854:
 32414  010708  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32415  01070A  D7FB               	goto	u13855
 32416  01070C  0101               	movlb	1	; () banked
 32417  01070E  5147               	movf	_gblMediaPresent& (0+255),w,b
 32418  010710  0100               	movlb	0	; () banked
 32419  010712  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 32420  010714  0101               	movlb	1	; () banked
 32421  010716  5148               	movf	(_gblMediaPresent+1)& (0+255),w,b
 32422  010718  0100               	movlb	0	; () banked
 32423  01071A  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 32424  01071C  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32425  01071E  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 32426  010720  A4D8               	btfss	status,2,c
 32427  010722  D03C               	goto	l612
 32428                           
 32429                           ; BSR set to: 0
 32430                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 32431  010724  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 32432  010728  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 32433  01072C  D801               	call	u13878
 32434  01072E  D00B               	goto	u13879
 32435  010730                     u13878:
 32436  010730  0005               	push	
 32437  010732  6EFA               	movwf	pclath,c
 32438  010734  0102               	movlb	2	; () banked
 32439  010736  5189               	movf	_LUN& (0+255),w,b
 32440  010738  6EFD               	movwf	tosl,c
 32441  01073A  518A               	movf	(_LUN+1)& (0+255),w,b
 32442  01073C  6EFE               	movwf	tosh,c
 32443  01073E  518B               	movf	(_LUN+2)& (0+255),w,b
 32444  010740  6EFF               	movwf	tosu,c
 32445  010742  50FA               	movf	pclath,w,c
 32446  010744  0012               	return		;indir
 32447  010746                     u13879:
 32448  010746  0100               	movlb	0	; () banked
 32449  010748  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 32450  01074A  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 32451  01074C  B4D8               	btfsc	status,2,c
 32452  01074E  D023               	goto	l613
 32453                           
 32454                           ; BSR set to: 0
 32455                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 32456  010750  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32457  010754  0E01               	movlw	1
 32458  010756  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32459  010758  0E00               	movlw	0
 32460  01075A  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32461  01075C  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32462  01075E  D003               	goto	u13894
 32463  010760                     u13895:
 32464  010760  90D8               	bcf	status,0,c
 32465  010762  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32466  010764  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32467  010766                     u13894:
 32468  010766  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32469  010768  D7FB               	goto	u13895
 32470  01076A  0100               	movlb	0	; () banked
 32471  01076C  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32472  01076E  0101               	movlb	1	; () banked
 32473  010770  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 32474  010772  0100               	movlb	0	; () banked
 32475  010774  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 32476  010776  0101               	movlb	1	; () banked
 32477  010778  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 32478                           
 32479                           ; BSR set to: 1
 32480                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 32481  01077A  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32482  01077C  0BF0               	andlw	-16
 32483  01077E  0906               	iorlw	6
 32484  010780  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32485                           
 32486                           ; BSR set to: 1
 32487                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 32488  010782  0E28               	movlw	40
 32489  010784  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32490                           
 32491                           ; BSR set to: 1
 32492                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 32493  010786  0E00               	movlw	0
 32494  010788  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32495                           
 32496                           ; BSR set to: 1
 32497                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 32498  01078A  0E01               	movlw	1
 32499  01078C  010D               	movlb	13	; () banked
 32500  01078E  6F8C               	movwf	140,b	;volatile
 32501                           
 32502                           ; BSR set to: 13
 32503                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 32504  010790  EC2F  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 32505                           
 32506                           ;usb_device_msd.c: 589: }
 32507  010794  D005               	goto	l615
 32508  010796                     l613:
 32509                           
 32510                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 32511  010796  ECC4  F0A0         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32512                           
 32513                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 32514  01079A  D002               	goto	l615
 32515  01079C                     l612:
 32516                           
 32517                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 32518  01079C  EC2F  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 32519  0107A0                     l615:
 32520                           
 32521                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 32522  0107A0  0101               	movlb	1	; () banked
 32523  0107A2  5162               	movf	_MSDCommandState& (0+255),w,b
 32524  0107A4  0012               	return	
 32525  0107A6                     __end_of_MSDProcessCommand:
 32526                           	opt stack 0
 32527                           tosu	equ	0xFFF
 32528                           tosh	equ	0xFFE
 32529                           tosl	equ	0xFFD
 32530                           pclath	equ	0xFFA
 32531                           tblptru	equ	0xFF8
 32532                           tblptrh	equ	0xFF7
 32533                           tblptrl	equ	0xFF6
 32534                           tablat	equ	0xFF5
 32535                           prodh	equ	0xFF4
 32536                           prodl	equ	0xFF3
 32537                           intcon	equ	0xFF2
 32538                           postinc0	equ	0xFEE
 32539                           wreg	equ	0xFE8
 32540                           indf1	equ	0xFE7
 32541                           postinc1	equ	0xFE6
 32542                           postdec1	equ	0xFE5
 32543                           plusw1	equ	0xFE3
 32544                           fsr1h	equ	0xFE2
 32545                           fsr1l	equ	0xFE1
 32546                           indf2	equ	0xFDF
 32547                           postinc2	equ	0xFDE
 32548                           postdec2	equ	0xFDD
 32549                           plusw2	equ	0xFDB
 32550                           fsr2h	equ	0xFDA
 32551                           fsr2l	equ	0xFD9
 32552                           status	equ	0xFD8
 32553                           
 32554 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 32555 ;; Defined at:
 32556 ;;		line 635 in file "usb_device_msd.c"
 32557 ;; Parameters:    Size  Location     Type
 32558 ;;		None
 32559 ;; Auto vars:     Size  Location     Type
 32560 ;;		None
 32561 ;; Return value:  Size  Location     Type
 32562 ;;                  1    wreg      void 
 32563 ;; Registers used:
 32564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32565 ;; Tracked objects:
 32566 ;;		On entry : 0/0
 32567 ;;		On exit  : 0/0
 32568 ;;		Unchanged: 0/0
 32569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32574 ;;Total ram usage:        0 bytes
 32575 ;; Hardware stack levels used:    1
 32576 ;; Hardware stack levels required when called:   18
 32577 ;; This function calls:
 32578 ;;		_MSDErrorHandler
 32579 ;;		_MSDProcessCommandMediaPresent
 32580 ;;		_ResetSenseData
 32581 ;; This function is called by:
 32582 ;;		_MSDProcessCommand
 32583 ;; This function uses a non-reentrant model
 32584 ;;
 32585                           
 32586                           	psect	text129
 32587  014188                     __ptext129:
 32588                           	opt stack 0
 32589  014188                     _MSDProcessCommandMediaAbsent:
 32590                           	opt stack 9
 32591                           
 32592                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 32593                           
 32594                           ; BSR set to: 1
 32595                           ;incstack = 0
 32596  014188  D01E               	goto	l619
 32597  01418A                     
 32598                           ;usb_device_msd.c: 646: ResetSenseData();
 32599  01418A  ECF5  F0A0         	call	_ResetSenseData	;wreg free
 32600                           
 32601                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 32602  01418E  0101               	movlb	1	; () banked
 32603  014190  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32604  014192  0BF0               	andlw	-16
 32605  014194  0902               	iorlw	2
 32606  014196  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32607                           
 32608                           ; BSR set to: 1
 32609                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 32610  014198  0E3A               	movlw	58
 32611  01419A  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32612                           
 32613                           ; BSR set to: 1
 32614                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 32615  01419C  0E00               	movlw	0
 32616  01419E  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32617                           
 32618                           ; BSR set to: 1
 32619                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 32620  0141A0  EC2F  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 32621                           
 32622                           ;usb_device_msd.c: 655: break;
 32623  0141A4  0012               	return	
 32624  0141A6                     
 32625                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 32626  0141A6  0E01               	movlw	1
 32627  0141A8  010D               	movlb	13	; () banked
 32628  0141AA  6F8C               	movwf	140,b	;volatile
 32629                           
 32630                           ; BSR set to: 13
 32631                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 32632  0141AC  0101               	movlb	1	; () banked
 32633  0141AE  6962               	setf	_MSDCommandState& (0+255),b
 32634                           
 32635                           ;usb_device_msd.c: 665: break;
 32636  0141B0  0012               	return	
 32637  0141B2                     
 32638                           ; BSR set to: 1
 32639                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 32640                           
 32641                           ; BSR set to: 1
 32642  0141B2  EC2F  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 32643                           
 32644                           ;usb_device_msd.c: 671: break;
 32645  0141B6  0012               	return	
 32646  0141B8                     
 32647                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 32648  0141B8  EC2F  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 32649                           
 32650                           ;usb_device_msd.c: 677: break;
 32651  0141BC  0012               	return	
 32652  0141BE                     
 32653                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 32654  0141BE  0E7F               	movlw	127
 32655  0141C0  ECFE  F084         	call	_MSDErrorHandler
 32656                           
 32657                           ;usb_device_msd.c: 685: }
 32658                           
 32659                           ;usb_device_msd.c: 684: break;
 32660  0141C4  0012               	return	
 32661  0141C6                     l619:
 32662  0141C6  0101               	movlb	1	; () banked
 32663  0141C8  5162               	movf	_MSDCommandState& (0+255),w,b
 32664                           
 32665                           ; Switch size 1, requested type "space"
 32666                           ; Number of cases is 5, Range of values is 0 to 253
 32667                           ; switch strategies available:
 32668                           ; Name         Instructions Cycles
 32669                           ; simple_byte           16     9 (average)
 32670                           ;	Chosen strategy is simple_byte
 32671  0141CA  0A00               	xorlw	0	; case 0
 32672  0141CC  B4D8               	btfsc	status,2,c
 32673  0141CE  D7EB               	goto	l622
 32674  0141D0  0A03               	xorlw	3	; case 3
 32675  0141D2  B4D8               	btfsc	status,2,c
 32676  0141D4  D7DA               	goto	l620
 32677  0141D6  0A11               	xorlw	17	; case 18
 32678  0141D8  B4D8               	btfsc	status,2,c
 32679  0141DA  D7EB               	goto	l624
 32680  0141DC  0A0C               	xorlw	12	; case 30
 32681  0141DE  B4D8               	btfsc	status,2,c
 32682  0141E0  D7E2               	goto	l622
 32683  0141E2  0AE3               	xorlw	227	; case 253
 32684  0141E4  B4D8               	btfsc	status,2,c
 32685  0141E6  D7E8               	goto	l625
 32686  0141E8  D7EA               	goto	l626
 32687  0141EA                     __end_of_MSDProcessCommandMediaAbsent:
 32688                           	opt stack 0
 32689                           tosu	equ	0xFFF
 32690                           tosh	equ	0xFFE
 32691                           tosl	equ	0xFFD
 32692                           pclath	equ	0xFFA
 32693                           tblptru	equ	0xFF8
 32694                           tblptrh	equ	0xFF7
 32695                           tblptrl	equ	0xFF6
 32696                           tablat	equ	0xFF5
 32697                           prodh	equ	0xFF4
 32698                           prodl	equ	0xFF3
 32699                           intcon	equ	0xFF2
 32700                           postinc0	equ	0xFEE
 32701                           wreg	equ	0xFE8
 32702                           indf1	equ	0xFE7
 32703                           postinc1	equ	0xFE6
 32704                           postdec1	equ	0xFE5
 32705                           plusw1	equ	0xFE3
 32706                           fsr1h	equ	0xFE2
 32707                           fsr1l	equ	0xFE1
 32708                           indf2	equ	0xFDF
 32709                           postinc2	equ	0xFDE
 32710                           postdec2	equ	0xFDD
 32711                           plusw2	equ	0xFDB
 32712                           fsr2h	equ	0xFDA
 32713                           fsr2l	equ	0xFD9
 32714                           status	equ	0xFD8
 32715                           
 32716 ;; *************** function _MSDProcessCommandMediaPresent *****************
 32717 ;; Defined at:
 32718 ;;		line 712 in file "usb_device_msd.c"
 32719 ;; Parameters:    Size  Location     Type
 32720 ;;		None
 32721 ;; Auto vars:     Size  Location     Type
 32722 ;;  capacity        4   66[BANK0 ] struct .
 32723 ;;  sectorSize      4   62[BANK0 ] struct .
 32724 ;;  i               1   70[BANK0 ] unsigned char 
 32725 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 32726 ;; Return value:  Size  Location     Type
 32727 ;;                  1    wreg      void 
 32728 ;; Registers used:
 32729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32730 ;; Tracked objects:
 32731 ;;		On entry : 0/0
 32732 ;;		On exit  : 0/0
 32733 ;;		Unchanged: 0/0
 32734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32736 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32738 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32739 ;;Total ram usage:       14 bytes
 32740 ;; Hardware stack levels used:    1
 32741 ;; Hardware stack levels required when called:   17
 32742 ;; This function calls:
 32743 ;;		_ExternalFlash_CapacityRead
 32744 ;;		_ExternalFlash_SectorSizeRead
 32745 ;;		_ExternalFlash_WriteProtectStateGet
 32746 ;;		_MSDCheckForErrorCases
 32747 ;;		_MSDComputeDeviceInAndResidue
 32748 ;;		_MSDErrorHandler
 32749 ;;		_MSDReadHandler
 32750 ;;		_MSDWriteHandler
 32751 ;;		_ResetSenseData
 32752 ;;		_USBTransferOnePacket
 32753 ;;		_memcpy
 32754 ;; This function is called by:
 32755 ;;		_MSDProcessCommand
 32756 ;;		_MSDProcessCommandMediaAbsent
 32757 ;; This function uses a non-reentrant model
 32758 ;;
 32759                           
 32760                           	psect	text130
 32761  00BE5E                     __ptext130:
 32762                           	opt stack 0
 32763  00BE5E                     _MSDProcessCommandMediaPresent:
 32764                           	opt stack 10
 32765                           
 32766                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 32767                           
 32768                           ;incstack = 0
 32769  00BE5E  D1D0               	goto	l630
 32770  00BE60                     
 32771                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 32772  00BE60  EC7B  F077         	call	_MSDReadHandler	;wreg free
 32773  00BE64  0900               	iorlw	0
 32774  00BE66  A4D8               	btfss	status,2,c
 32775  00BE68  0012               	return	
 32776                           
 32777                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 32778  00BE6A  0101               	movlb	1	; () banked
 32779  00BE6C  6962               	setf	_MSDCommandState& (0+255),b
 32780                           
 32781                           ; BSR set to: 1
 32782                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 32783  00BE6E  0012               	return	
 32784  00BE70                     
 32785                           ; BSR set to: 1
 32786                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 32787                           
 32788                           ; BSR set to: 1
 32789  00BE70  EC46  F06B         	call	_MSDWriteHandler	;wreg free
 32790  00BE74  0900               	iorlw	0
 32791  00BE76  A4D8               	btfss	status,2,c
 32792  00BE78  0012               	return	
 32793                           
 32794                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 32795  00BE7A  0101               	movlb	1	; () banked
 32796  00BE7C  6962               	setf	_MSDCommandState& (0+255),b
 32797                           
 32798                           ; BSR set to: 1
 32799                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 32800  00BE7E  0012               	return	
 32801  00BE80                     
 32802                           ; BSR set to: 1
 32803                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 32804                           
 32805                           ; BSR set to: 1
 32806  00BE80  055C               	decf	_MSDHostNoData& (0+255),w,b
 32807  00BE82  A4D8               	btfss	status,2,c
 32808  00BE84  D002               	goto	l637
 32809                           
 32810                           ; BSR set to: 1
 32811                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 32812  00BE86  6962               	setf	_MSDCommandState& (0+255),b
 32813                           
 32814                           ;usb_device_msd.c: 751: break;
 32815  00BE88  0012               	return	
 32816  00BE8A                     l637:
 32817                           
 32818                           ; BSR set to: 1
 32819                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 32820  00BE8A  C212  F146         	movff	_gblCBW+18,_TransferLength+1
 32821                           
 32822                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 32823  00BE8E  C213  F145         	movff	_gblCBW+19,_TransferLength
 32824                           
 32825                           ; BSR set to: 1
 32826                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 32827  00BE92  C145  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 32828  00BE96  C146  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 32829  00BE9A  0100               	movlb	0	; () banked
 32830  00BE9C  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32831  00BE9E  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32832  00BEA0  EC8B  F085         	call	_MSDCheckForErrorCases	;wreg free
 32833  00BEA4  0900               	iorlw	0
 32834  00BEA6  A4D8               	btfss	status,2,c
 32835  00BEA8  0012               	return	
 32836                           
 32837                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 32838                           
 32839                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 32840  00BEAA  0E00               	movlw	0
 32841  00BEAC  0100               	movlb	0	; () banked
 32842  00BEAE  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32843  00BEB0  0E24               	movlw	36
 32844  00BEB2  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32845  00BEB4  EC2C  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32846                           
 32847                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 32848  00BEB8  0E00               	movlw	0
 32849  00BEBA  0100               	movlb	0	; () banked
 32850  00BEBC  6F60               	movwf	memcpy@d1& (0+255),b
 32851  00BEBE  0E06               	movlw	6
 32852  00BEC0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32853  00BEC2  0E60               	movlw	low _inq_resp
 32854  00BEC4  6F62               	movwf	memcpy@s1& (0+255),b
 32855  00BEC6  0EA1               	movlw	high _inq_resp
 32856  00BEC8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32857  00BECA  0E00               	movlw	0
 32858  00BECC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32859  00BECE  0E24               	movlw	36
 32860  00BED0  6F64               	movwf	memcpy@n& (0+255),b
 32861  00BED2  EC57  F0A1         	call	_memcpy	;wreg free
 32862                           
 32863                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 32864  00BED6  0EFD               	movlw	253
 32865  00BED8  0101               	movlb	1	; () banked
 32866  00BEDA  6F62               	movwf	_MSDCommandState& (0+255),b
 32867                           
 32868                           ;usb_device_msd.c: 773: break;
 32869  00BEDC  0012               	return	
 32870  00BEDE                     
 32871                           ; BSR set to: 1
 32872                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 32873                           
 32874                           ; BSR set to: 1
 32875  00BEDE  C29E  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 32876  00BEE2  C29F  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 32877  00BEE6  EE22  F08C         	lfsr	2,_LUN+3
 32878  00BEEA  D801               	call	u12228
 32879  00BEEC  D00A               	goto	u12229
 32880  00BEEE                     u12228:
 32881  00BEEE  0005               	push	
 32882  00BEF0  6EFA               	movwf	pclath,c
 32883  00BEF2  50DE               	movf	postinc2,w,c
 32884  00BEF4  6EFD               	movwf	tosl,c
 32885  00BEF6  50DE               	movf	postinc2,w,c
 32886  00BEF8  6EFE               	movwf	tosh,c
 32887  00BEFA  50DE               	movf	postinc2,w,c
 32888  00BEFC  6EFF               	movwf	tosu,c
 32889  00BEFE  50FA               	movf	pclath,w,c
 32890  00BF00  0012               	return		;indir
 32891  00BF02                     u12229:
 32892  00BF02  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 32893  00BF06  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 32894  00BF0A  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 32895  00BF0E  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 32896                           
 32897                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 32898  00BF12  C29E  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 32899  00BF16  C29F  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 32900  00BF1A  EE22  F08F         	lfsr	2,_LUN+6
 32901  00BF1E  D801               	call	u12238
 32902  00BF20  D00A               	goto	u12239
 32903  00BF22                     u12238:
 32904  00BF22  0005               	push	
 32905  00BF24  6EFA               	movwf	pclath,c
 32906  00BF26  50DE               	movf	postinc2,w,c
 32907  00BF28  6EFD               	movwf	tosl,c
 32908  00BF2A  50DE               	movf	postinc2,w,c
 32909  00BF2C  6EFE               	movwf	tosh,c
 32910  00BF2E  50DE               	movf	postinc2,w,c
 32911  00BF30  6EFF               	movwf	tosu,c
 32912  00BF32  50FA               	movf	pclath,w,c
 32913  00BF34  0012               	return		;indir
 32914  00BF36                     u12239:
 32915  00BF36  0100               	movlb	0	; () banked
 32916  00BF38  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 32917  00BF3C  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 32918  00BF40  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 32919  00BF42  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 32920                           
 32921                           ; BSR set to: 0
 32922                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 32923  00BF44  EE26 F000          	lfsr	2,1536
 32924  00BF48  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 32925                           
 32926                           ; BSR set to: 0
 32927                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 32928  00BF4C  EE26 F001          	lfsr	2,1537	;volatile
 32929  00BF50  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 32930                           
 32931                           ; BSR set to: 0
 32932                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 32933  00BF54  EE26 F002          	lfsr	2,1538	;volatile
 32934  00BF58  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 32935                           
 32936                           ; BSR set to: 0
 32937                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 32938  00BF5C  EE26 F003          	lfsr	2,1539	;volatile
 32939  00BF60  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 32940                           
 32941                           ; BSR set to: 0
 32942                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 32943  00BF64  EE26 F004          	lfsr	2,1540	;volatile
 32944  00BF68  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 32945                           
 32946                           ; BSR set to: 0
 32947                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 32948  00BF6C  EE26 F005          	lfsr	2,1541	;volatile
 32949  00BF70  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 32950                           
 32951                           ; BSR set to: 0
 32952                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 32953  00BF74  EE26 F006          	lfsr	2,1542	;volatile
 32954  00BF78  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 32955                           
 32956                           ; BSR set to: 0
 32957                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 32958  00BF7C  EE26 F007          	lfsr	2,1543	;volatile
 32959  00BF80  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 32960                           
 32961                           ; BSR set to: 0
 32962                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 32963  00BF84  0E00               	movlw	0
 32964  00BF86  0101               	movlb	1	; () banked
 32965  00BF88  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32966  00BF8A  0E08               	movlw	8
 32967  00BF8C  6F45               	movwf	_TransferLength& (0+255),b
 32968                           
 32969                           ; BSR set to: 1
 32970                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 32971  00BF8E  0E00               	movlw	0
 32972  00BF90  0100               	movlb	0	; () banked
 32973  00BF92  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32974  00BF94  0E08               	movlw	8
 32975  00BF96  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32976  00BF98  EC2C  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32977                           
 32978                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 32979  00BF9C  0EFD               	movlw	253
 32980  00BF9E  0101               	movlb	1	; () banked
 32981  00BFA0  6F62               	movwf	_MSDCommandState& (0+255),b
 32982                           
 32983                           ;usb_device_msd.c: 802: break;
 32984  00BFA2  0012               	return	
 32985  00BFA4                     
 32986                           ; BSR set to: 1
 32987                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 32988                           
 32989                           ; BSR set to: 1
 32990  00BFA4  055C               	decf	_MSDHostNoData& (0+255),w,b
 32991  00BFA6  A4D8               	btfss	status,2,c
 32992  00BFA8  D002               	goto	l641
 32993                           
 32994                           ; BSR set to: 1
 32995                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 32996  00BFAA  6962               	setf	_MSDCommandState& (0+255),b
 32997                           
 32998                           ;usb_device_msd.c: 814: break;
 32999  00BFAC  0012               	return	
 33000  00BFAE                     l641:
 33001                           
 33002                           ; BSR set to: 1
 33003                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 33004                           
 33005                           ; BSR set to: 1
 33006  00BFAE  0E00               	movlw	0
 33007  00BFB0  6F46               	movwf	(_TransferLength+1)& (0+255),b
 33008  00BFB2  0E12               	movlw	18
 33009  00BFB4  6F45               	movwf	_TransferLength& (0+255),b
 33010                           
 33011                           ; BSR set to: 1
 33012                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 33013  00BFB6  0E00               	movlw	0
 33014  00BFB8  0100               	movlb	0	; () banked
 33015  00BFBA  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 33016  00BFBC  0E12               	movlw	18
 33017  00BFBE  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 33018  00BFC0  EC2C  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 33019                           
 33020                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 33021  00BFC4  0E00               	movlw	0
 33022  00BFC6  0100               	movlb	0	; () banked
 33023  00BFC8  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 33024  00BFCA                     l13471:
 33025                           
 33026                           ; BSR set to: 0
 33027  00BFCA  0E11               	movlw	17
 33028  00BFCC  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 33029  00BFCE  D001               	goto	l642
 33030  00BFD0  D014               	goto	u12260
 33031  00BFD2                     l642:
 33032                           
 33033                           ; BSR set to: 0
 33034                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 33035                           
 33036                           ; BSR set to: 0
 33037  00BFD2  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33038  00BFD4  0D01               	mullw	1
 33039  00BFD6  0E00               	movlw	low _gblSenseData
 33040  00BFD8  24F3               	addwf	prodl,w,c
 33041  00BFDA  6ED9               	movwf	fsr2l,c
 33042  00BFDC  0E01               	movlw	high _gblSenseData
 33043  00BFDE  20F4               	addwfc	prodh,w,c
 33044  00BFE0  6EDA               	movwf	fsr2h,c
 33045  00BFE2  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33046  00BFE4  0D01               	mullw	1
 33047  00BFE6  0E00               	movlw	0
 33048  00BFE8  24F3               	addwf	prodl,w,c
 33049  00BFEA  6EE1               	movwf	fsr1l,c
 33050  00BFEC  0E06               	movlw	6
 33051  00BFEE  20F4               	addwfc	prodh,w,c
 33052  00BFF0  6EE2               	movwf	fsr1h,c
 33053  00BFF2  CFDF FFE7          	movff	indf2,indf1
 33054                           
 33055                           ; BSR set to: 0
 33056  00BFF6  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 33057  00BFF8  D7E8               	goto	l13471
 33058  00BFFA                     u12260:
 33059                           
 33060                           ; BSR set to: 0
 33061                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 33062                           
 33063                           ; BSR set to: 0
 33064  00BFFA  0EFD               	movlw	253
 33065  00BFFC  0101               	movlb	1	; () banked
 33066  00BFFE  6F62               	movwf	_MSDCommandState& (0+255),b
 33067                           
 33068                           ;usb_device_msd.c: 827: break;
 33069  00C000  0012               	return	
 33070  00C002                     l644:
 33071                           
 33072                           ; BSR set to: 1
 33073                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 33074  00C002  0E03               	movlw	3
 33075  00C004  CFE8 F600          	movff	wreg,1536
 33076                           
 33077                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 33078  00C008  0E00               	movlw	0
 33079  00C00A  CFE8 F601          	movff	wreg,1537	;volatile
 33080                           
 33081                           ; BSR set to: 1
 33082                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 33083  00C00E  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33084  00C012  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33085  00C016  EE22  F098         	lfsr	2,_LUN+15
 33086  00C01A  D801               	call	u12278
 33087  00C01C  D00A               	goto	u12279
 33088  00C01E                     u12278:
 33089  00C01E  0005               	push	
 33090  00C020  6EFA               	movwf	pclath,c
 33091  00C022  50DE               	movf	postinc2,w,c
 33092  00C024  6EFD               	movwf	tosl,c
 33093  00C026  50DE               	movf	postinc2,w,c
 33094  00C028  6EFE               	movwf	tosh,c
 33095  00C02A  50DE               	movf	postinc2,w,c
 33096  00C02C  6EFF               	movwf	tosu,c
 33097  00C02E  50FA               	movf	pclath,w,c
 33098  00C030  0012               	return		;indir
 33099  00C032                     u12279:
 33100  00C032  0900               	iorlw	0
 33101  00C034  A4D8               	btfss	status,2,c
 33102  00C036  D005               	goto	l646
 33103  00C038  0E00               	movlw	0
 33104  00C03A  0100               	movlb	0	; () banked
 33105  00C03C  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33106  00C03E  0E00               	movlw	0
 33107  00C040  D004               	goto	L46
 33108  00C042                     l646:
 33109                           
 33110                           ; BSR set to: 0
 33111  00C042  0E00               	movlw	0
 33112  00C044  0100               	movlb	0	; () banked
 33113  00C046  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33114  00C048  0E80               	movlw	128
 33115  00C04A                     L46:
 33116  00C04A  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 33117                           
 33118                           ; BSR set to: 0
 33119                           
 33120                           ; BSR set to: 0
 33121  00C04C  EE26 F002          	lfsr	2,1538	;volatile
 33122  00C050  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 33123                           
 33124                           ; BSR set to: 0
 33125                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 33126  00C054  0E00               	movlw	0
 33127  00C056  CFE8 F603          	movff	wreg,1539	;volatile
 33128                           
 33129                           ; BSR set to: 0
 33130                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 33131  00C05A  0E00               	movlw	0
 33132  00C05C  0101               	movlb	1	; () banked
 33133  00C05E  6F46               	movwf	(_TransferLength+1)& (0+255),b
 33134  00C060  0E04               	movlw	4
 33135  00C062  6F45               	movwf	_TransferLength& (0+255),b
 33136                           
 33137                           ; BSR set to: 1
 33138                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 33139  00C064  0E00               	movlw	0
 33140  00C066  0100               	movlb	0	; () banked
 33141  00C068  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 33142  00C06A  0E04               	movlw	4
 33143  00C06C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 33144  00C06E  EC2C  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 33145                           
 33146                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 33147  00C072  0EFD               	movlw	253
 33148  00C074  0101               	movlb	1	; () banked
 33149  00C076  6F62               	movwf	_MSDCommandState& (0+255),b
 33150                           
 33151                           ;usb_device_msd.c: 839: break;
 33152  00C078  0012               	return	
 33153  00C07A                     
 33154                           ; BSR set to: 1
 33155                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 33156                           
 33157                           ; BSR set to: 1
 33158  00C07A  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33159  00C07C  0BF0               	andlw	-16
 33160  00C07E  0905               	iorlw	5
 33161  00C080  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33162                           
 33163                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 33164  00C082  0E20               	movlw	32
 33165  00C084  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33166                           
 33167                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 33168  00C086  0E00               	movlw	0
 33169  00C088  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33170                           
 33171                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 33172  00C08A  0E01               	movlw	1
 33173  00C08C  010D               	movlb	13	; () banked
 33174  00C08E  6F8C               	movwf	140,b	;volatile
 33175                           
 33176                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 33177  00C090  0E00               	movlw	0
 33178  00C092  6F88               	movwf	136,b	;volatile
 33179  00C094  0E00               	movlw	0
 33180  00C096  6F89               	movwf	137,b	;volatile
 33181  00C098  0E00               	movlw	0
 33182  00C09A  6F8A               	movwf	138,b	;volatile
 33183  00C09C  0E00               	movlw	0
 33184  00C09E  6F8B               	movwf	139,b	;volatile
 33185                           
 33186                           ; BSR set to: 13
 33187                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 33188  00C0A0  0101               	movlb	1	; () banked
 33189  00C0A2  6962               	setf	_MSDCommandState& (0+255),b
 33190                           
 33191                           ;usb_device_msd.c: 848: break;
 33192  00C0A4  0012               	return	
 33193  00C0A6                     
 33194                           ; BSR set to: 1
 33195                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 33196                           
 33197                           ; BSR set to: 1
 33198  00C0A6  0E00               	movlw	0
 33199  00C0A8  0100               	movlb	0	; () banked
 33200  00C0AA  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 33201  00C0AC  0E00               	movlw	0
 33202  00C0AE  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 33203  00C0B0  0E00               	movlw	0
 33204  00C0B2  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 33205  00C0B4  0E00               	movlw	0
 33206  00C0B6  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 33207  00C0B8  EC8B  F085         	call	_MSDCheckForErrorCases	;wreg free
 33208  00C0BC  0900               	iorlw	0
 33209  00C0BE  A4D8               	btfss	status,2,c
 33210  00C0C0  0012               	return	
 33211                           
 33212                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 33213                           
 33214                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 33215  00C0C2  0101               	movlb	1	; () banked
 33216  00C0C4  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33217  00C0C6  0B0F               	andlw	15
 33218  00C0C8  0A06               	xorlw	6
 33219  00C0CA  A4D8               	btfss	status,2,c
 33220  00C0CC  D007               	goto	l652
 33221                           
 33222                           ; BSR set to: 1
 33223  00C0CE  010D               	movlb	13	; () banked
 33224  00C0D0  058C               	decf	140,w,b	;volatile
 33225  00C0D2  A4D8               	btfss	status,2,c
 33226  00C0D4  D003               	goto	l652
 33227                           
 33228                           ; BSR set to: 13
 33229                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 33230  00C0D6  0101               	movlb	1	; () banked
 33231  00C0D8  6962               	setf	_MSDCommandState& (0+255),b
 33232                           
 33233                           ;usb_device_msd.c: 870: }
 33234  00C0DA  0012               	return	
 33235  00C0DC                     l652:
 33236                           
 33237                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 33238                           
 33239                           ; BSR set to: 1
 33240  00C0DC  ECF5  F0A0         	call	_ResetSenseData	;wreg free
 33241                           
 33242                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 33243  00C0E0  0E00               	movlw	0
 33244  00C0E2  010D               	movlb	13	; () banked
 33245  00C0E4  6F88               	movwf	136,b	;volatile
 33246  00C0E6  0E00               	movlw	0
 33247  00C0E8  6F89               	movwf	137,b	;volatile
 33248  00C0EA  0E00               	movlw	0
 33249  00C0EC  6F8A               	movwf	138,b	;volatile
 33250  00C0EE  0E00               	movlw	0
 33251  00C0F0  6F8B               	movwf	139,b	;volatile
 33252                           
 33253                           ; BSR set to: 13
 33254                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 33255  00C0F2  0101               	movlb	1	; () banked
 33256  00C0F4  6962               	setf	_MSDCommandState& (0+255),b
 33257                           
 33258                           ; BSR set to: 1
 33259                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 33260  00C0F6  0012               	return	
 33261  00C0F8                     
 33262                           ; BSR set to: 1
 33263                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 33264                           
 33265                           ; BSR set to: 1
 33266                           
 33267                           ; BSR set to: 1
 33268  00C0F8  0E00               	movlw	0
 33269  00C0FA  010D               	movlb	13	; () banked
 33270  00C0FC  6F88               	movwf	136,b	;volatile
 33271  00C0FE  0E00               	movlw	0
 33272  00C100  6F89               	movwf	137,b	;volatile
 33273  00C102  0E00               	movlw	0
 33274  00C104  6F8A               	movwf	138,b	;volatile
 33275  00C106  0E00               	movlw	0
 33276  00C108  6F8B               	movwf	139,b	;volatile
 33277                           
 33278                           ; BSR set to: 13
 33279                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 33280  00C10A  0101               	movlb	1	; () banked
 33281  00C10C  6962               	setf	_MSDCommandState& (0+255),b
 33282                           
 33283                           ;usb_device_msd.c: 885: break;
 33284  00C10E  0012               	return	
 33285  00C110                     
 33286                           ; BSR set to: 1
 33287                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 33288                           
 33289                           ; BSR set to: 1
 33290  00C110  5149               	movf	_USBMSDInHandle& (0+255),w,b
 33291  00C112  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 33292  00C114  B4D8               	btfsc	status,2,c
 33293  00C116  D006               	goto	u12330
 33294                           
 33295                           ; BSR set to: 1
 33296  00C118  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 33297  00C11C  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33298  00C120  BEDF               	btfsc	indf2,7,c
 33299  00C122  0012               	return	
 33300  00C124                     u12330:
 33301                           
 33302                           ; BSR set to: 1
 33303                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 33304                           
 33305                           ; BSR set to: 1
 33306  00C124  0102               	movlb	2	; () banked
 33307  00C126  510B               	movf	(_gblCBW+11)& (0+255),w,b
 33308  00C128  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33309  00C12A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33310  00C12C  E104               	bnz	u12340
 33311  00C12E  0E40               	movlw	64
 33312  00C130  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 33313  00C132  A0D8               	btfss	status,0,c
 33314  00C134  D00B               	goto	l660
 33315  00C136                     u12340:
 33316                           
 33317                           ; BSR set to: 2
 33318                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 33319  00C136  0E40               	movlw	64
 33320  00C138  0100               	movlb	0	; () banked
 33321  00C13A  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 33322                           
 33323                           ; BSR set to: 0
 33324                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 33325  00C13C  0E40               	movlw	64
 33326  00C13E  0102               	movlb	2	; () banked
 33327  00C140  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33328  00C142  0E00               	movlw	0
 33329  00C144  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33330  00C146  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33331  00C148  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33332                           
 33333                           ;usb_device_msd.c: 900: }
 33334  00C14A  D00A               	goto	l661
 33335  00C14C                     l660:
 33336                           
 33337                           ; BSR set to: 2
 33338                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 33339  00C14C  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 33340                           
 33341                           ; BSR set to: 2
 33342                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 33343  00C150  0E00               	movlw	0
 33344  00C152  6F08               	movwf	(_gblCBW+8)& (0+255),b
 33345  00C154  0E00               	movlw	0
 33346  00C156  6F09               	movwf	(_gblCBW+9)& (0+255),b
 33347  00C158  0E00               	movlw	0
 33348  00C15A  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 33349  00C15C  0E00               	movlw	0
 33350  00C15E  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 33351  00C160                     l661:
 33352                           
 33353                           ; BSR set to: 2
 33354                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 33355                           
 33356                           ; BSR set to: 2
 33357  00C160  0100               	movlb	0	; () banked
 33358  00C162  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33359  00C164  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 33360  00C166  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 33361  00C168  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 33362  00C16A  0101               	movlb	1	; () banked
 33363  00C16C  5D45               	subwf	_TransferLength& (0+255),w,b
 33364  00C16E  0100               	movlb	0	; () banked
 33365  00C170  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 33366  00C172  0101               	movlb	1	; () banked
 33367  00C174  5946               	subwfb	(_TransferLength+1)& (0+255),w,b
 33368  00C176  A0D8               	btfss	status,0,c
 33369  00C178  D007               	goto	l662
 33370                           
 33371                           ; BSR set to: 1
 33372                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 33373  00C17A  0100               	movlb	0	; () banked
 33374  00C17C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33375  00C17E  0101               	movlb	1	; () banked
 33376  00C180  5F45               	subwf	_TransferLength& (0+255),f,b
 33377  00C182  0E00               	movlw	0
 33378  00C184  5B46               	subwfb	(_TransferLength+1)& (0+255),f,b
 33379                           
 33380                           ;usb_device_msd.c: 918: }
 33381  00C186  D01E               	goto	u12370
 33382  00C188                     l662:
 33383                           
 33384                           ; BSR set to: 1
 33385                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 33386                           
 33387                           ; BSR set to: 1
 33388  00C188  0E00               	movlw	0
 33389  00C18A  0100               	movlb	0	; () banked
 33390  00C18C  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 33391  00C18E  D016               	goto	l664
 33392  00C190                     
 33393                           ; BSR set to: 0
 33394                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 33395                           
 33396                           ; BSR set to: 0
 33397  00C190  0101               	movlb	1	; () banked
 33398  00C192  5145               	movf	_TransferLength& (0+255),w,b
 33399  00C194  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33400  00C196  B4D8               	btfsc	status,2,c
 33401  00C198  D004               	goto	l666
 33402                           
 33403                           ; BSR set to: 1
 33404                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 33405  00C19A  0745               	decf	_TransferLength& (0+255),f,b
 33406  00C19C  A0D8               	btfss	status,0,c
 33407  00C19E  0746               	decf	(_TransferLength+1)& (0+255),f,b
 33408                           
 33409                           ;usb_device_msd.c: 932: }
 33410  00C1A0  D00B               	goto	l667
 33411  00C1A2                     l666:
 33412                           
 33413                           ; BSR set to: 1
 33414                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 33415                           
 33416                           ; BSR set to: 1
 33417  00C1A2  0100               	movlb	0	; () banked
 33418  00C1A4  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33419  00C1A6  0D01               	mullw	1
 33420  00C1A8  0E00               	movlw	0
 33421  00C1AA  24F3               	addwf	prodl,w,c
 33422  00C1AC  6ED9               	movwf	fsr2l,c
 33423  00C1AE  0E06               	movlw	6
 33424  00C1B0  20F4               	addwfc	prodh,w,c
 33425  00C1B2  6EDA               	movwf	fsr2h,c
 33426  00C1B4  0E00               	movlw	0
 33427  00C1B6  6EDF               	movwf	indf2,c
 33428  00C1B8                     l667:
 33429                           
 33430                           ; BSR set to: 0
 33431  00C1B8  0100               	movlb	0	; () banked
 33432  00C1BA  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 33433  00C1BC                     l664:
 33434                           
 33435                           ; BSR set to: 0
 33436                           
 33437                           ; BSR set to: 0
 33438  00C1BC  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33439  00C1BE  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33440  00C1C0  A0D8               	btfss	status,0,c
 33441  00C1C2  D7E6               	goto	l665
 33442  00C1C4                     u12370:
 33443                           
 33444                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 33445                           
 33446                           ; BSR set to: 0
 33447                           
 33448                           ; BSR set to: 0
 33449  00C1C4  0E01               	movlw	1
 33450  00C1C6  0100               	movlb	0	; () banked
 33451  00C1C8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33452  00C1CA  0E00               	movlw	0
 33453  00C1CC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 33454  00C1CE  0E06               	movlw	6
 33455  00C1D0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 33456  00C1D2  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 33457  00C1D6  0E02               	movlw	2
 33458  00C1D8  EC30  F088         	call	_USBTransferOnePacket
 33459  00C1DC  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 33460  00C1E0  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33461                           
 33462                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 33463  00C1E4  0102               	movlb	2	; () banked
 33464  00C1E6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 33465  00C1E8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33466  00C1EA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33467  00C1EC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 33468  00C1EE  A4D8               	btfss	status,2,c
 33469  00C1F0  0012               	return	
 33470                           
 33471                           ; BSR set to: 2
 33472                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 33473  00C1F2  0101               	movlb	1	; () banked
 33474  00C1F4  6962               	setf	_MSDCommandState& (0+255),b
 33475                           
 33476                           ; BSR set to: 1
 33477                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 33478                           
 33479                           ; BSR set to: 1
 33480                           
 33481                           ;usb_device_msd.c: 949: break;
 33482  00C1F6  0012               	return	
 33483  00C1F8                     
 33484                           ; BSR set to: 1
 33485                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 33486                           
 33487                           ; BSR set to: 1
 33488                           
 33489                           ;usb_device_msd.c: 954: default:
 33490                           
 33491                           ; BSR set to: 1
 33492  00C1F8  0E7F               	movlw	127
 33493  00C1FA  ECFE  F084         	call	_MSDErrorHandler
 33494                           
 33495                           ;usb_device_msd.c: 960: }
 33496                           
 33497                           ;usb_device_msd.c: 959: break;
 33498  00C1FE  0012               	return	
 33499  00C200                     l630:
 33500  00C200  0101               	movlb	1	; () banked
 33501  00C202  5162               	movf	_MSDCommandState& (0+255),w,b
 33502                           
 33503                           ; Switch size 1, requested type "space"
 33504                           ; Number of cases is 12, Range of values is 0 to 254
 33505                           ; switch strategies available:
 33506                           ; Name         Instructions Cycles
 33507                           ; simple_byte           37    19 (average)
 33508                           ;	Chosen strategy is simple_byte
 33509  00C204  0A00               	xorlw	0	; case 0
 33510  00C206  B4D8               	btfsc	status,2,c
 33511  00C208  D74E               	goto	l650
 33512  00C20A  0A03               	xorlw	3	; case 3
 33513  00C20C  B4D8               	btfsc	status,2,c
 33514  00C20E  D6CA               	goto	l640
 33515  00C210  0A11               	xorlw	17	; case 18
 33516  00C212  B4D8               	btfsc	status,2,c
 33517  00C214  D635               	goto	l636
 33518  00C216  0A08               	xorlw	8	; case 26
 33519  00C218  B4D8               	btfsc	status,2,c
 33520  00C21A  D6F3               	goto	l644
 33521  00C21C  0A01               	xorlw	1	; case 27
 33522  00C21E  B4D8               	btfsc	status,2,c
 33523  00C220  D76B               	goto	l654
 33524  00C222  0A05               	xorlw	5	; case 30
 33525  00C224  B4D8               	btfsc	status,2,c
 33526  00C226  D729               	goto	l649
 33527  00C228  0A3B               	xorlw	59	; case 37
 33528  00C22A  B4D8               	btfsc	status,2,c
 33529  00C22C  D658               	goto	l639
 33530  00C22E  0A0D               	xorlw	13	; case 40
 33531  00C230  B4D8               	btfsc	status,2,c
 33532  00C232  D616               	goto	l631
 33533  00C234  0A02               	xorlw	2	; case 42
 33534  00C236  B4D8               	btfsc	status,2,c
 33535  00C238  D61B               	goto	l634
 33536  00C23A  0A05               	xorlw	5	; case 47
 33537  00C23C  B4D8               	btfsc	status,2,c
 33538  00C23E  D75C               	goto	l654
 33539  00C240  0AD2               	xorlw	210	; case 253
 33540  00C242  B4D8               	btfsc	status,2,c
 33541  00C244  D765               	goto	l656
 33542  00C246  0A03               	xorlw	3	; case 254
 33543  00C248  D7D7               	goto	l670
 33544  00C24A                     __end_of_MSDProcessCommandMediaPresent:
 33545                           	opt stack 0
 33546                           tosu	equ	0xFFF
 33547                           tosh	equ	0xFFE
 33548                           tosl	equ	0xFFD
 33549                           pclath	equ	0xFFA
 33550                           tblptru	equ	0xFF8
 33551                           tblptrh	equ	0xFF7
 33552                           tblptrl	equ	0xFF6
 33553                           tablat	equ	0xFF5
 33554                           prodh	equ	0xFF4
 33555                           prodl	equ	0xFF3
 33556                           intcon	equ	0xFF2
 33557                           postinc0	equ	0xFEE
 33558                           wreg	equ	0xFE8
 33559                           indf1	equ	0xFE7
 33560                           postinc1	equ	0xFE6
 33561                           postdec1	equ	0xFE5
 33562                           plusw1	equ	0xFE3
 33563                           fsr1h	equ	0xFE2
 33564                           fsr1l	equ	0xFE1
 33565                           indf2	equ	0xFDF
 33566                           postinc2	equ	0xFDE
 33567                           postdec2	equ	0xFDD
 33568                           plusw2	equ	0xFDB
 33569                           fsr2h	equ	0xFDA
 33570                           fsr2l	equ	0xFD9
 33571                           status	equ	0xFD8
 33572                           
 33573 ;; *************** function _MSDWriteHandler *****************
 33574 ;; Defined at:
 33575 ;;		line 1188 in file "usb_device_msd.c"
 33576 ;; Parameters:    Size  Location     Type
 33577 ;;		None
 33578 ;; Auto vars:     Size  Location     Type
 33579 ;;		None
 33580 ;; Return value:  Size  Location     Type
 33581 ;;                  1    wreg      unsigned char 
 33582 ;; Registers used:
 33583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33584 ;; Tracked objects:
 33585 ;;		On entry : 0/0
 33586 ;;		On exit  : 0/0
 33587 ;;		Unchanged: 0/0
 33588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33591 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33592 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33593 ;;Total ram usage:        5 bytes
 33594 ;; Hardware stack levels used:    1
 33595 ;; Hardware stack levels required when called:   16
 33596 ;; This function calls:
 33597 ;;		_ExternalFlash_SectorWrite
 33598 ;;		_ExternalFlash_WriteProtectStateGet
 33599 ;;		_MSDCheckForErrorCases
 33600 ;;		_USBStallEndpoint
 33601 ;;		_USBTransferOnePacket
 33602 ;; This function is called by:
 33603 ;;		_MSDProcessCommandMediaPresent
 33604 ;; This function uses a non-reentrant model
 33605 ;;
 33606                           
 33607                           	psect	text131
 33608  00D68C                     __ptext131:
 33609                           	opt stack 0
 33610  00D68C                     _MSDWriteHandler:
 33611                           	opt stack 10
 33612                           
 33613                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 33614                           
 33615                           ;incstack = 0
 33616  00D68C  D160               	goto	l700
 33617  00D68E                     l701:
 33618                           
 33619                           ; BSR set to: 1
 33620                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 33621  00D68E  C211  F12E         	movff	_gblCBW+17,_LBA+3
 33622                           
 33623                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 33624  00D692  C212  F12D         	movff	_gblCBW+18,_LBA+2
 33625                           
 33626                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 33627  00D696  C213  F12C         	movff	_gblCBW+19,_LBA+1
 33628                           
 33629                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 33630  00D69A  C214  F12B         	movff	_gblCBW+20,_LBA
 33631                           
 33632                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 33633  00D69E  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 33634                           
 33635                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 33636  00D6A2  C217  F145         	movff	_gblCBW+23,_TransferLength
 33637                           
 33638                           ; BSR set to: 1
 33639                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 33640  00D6A6  5145               	movf	_TransferLength& (0+255),w,b
 33641  00D6A8  0100               	movlb	0	; () banked
 33642  00D6AA  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33643  00D6AC  0101               	movlb	1	; () banked
 33644  00D6AE  5146               	movf	(_TransferLength+1)& (0+255),w,b
 33645  00D6B0  0100               	movlb	0	; () banked
 33646  00D6B2  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 33647  00D6B4  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33648  00D6B6  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33649  00D6B8  0E09               	movlw	9
 33650  00D6BA                     u11165:
 33651  00D6BA  90D8               	bcf	status,0,c
 33652  00D6BC  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 33653  00D6BE  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 33654  00D6C0  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 33655  00D6C2  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 33656  00D6C4  2EE8               	decfsz	wreg,f,c
 33657  00D6C6  D7F9               	goto	u11165
 33658  00D6C8  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 33659  00D6CC  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 33660  00D6D0  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 33661  00D6D4  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 33662  00D6D8  EC8B  F085         	call	_MSDCheckForErrorCases	;wreg free
 33663  00D6DC  0900               	iorlw	0
 33664  00D6DE  A4D8               	btfss	status,2,c
 33665  00D6E0  D148               	goto	l703
 33666                           
 33667                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 33668                           
 33669                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 33670  00D6E2  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33671  00D6E6  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33672  00D6EA  EE22  F098         	lfsr	2,_LUN+15
 33673  00D6EE  D801               	call	u11188
 33674  00D6F0  D00A               	goto	u11189
 33675  00D6F2                     u11188:
 33676  00D6F2  0005               	push	
 33677  00D6F4  6EFA               	movwf	pclath,c
 33678  00D6F6  50DE               	movf	postinc2,w,c
 33679  00D6F8  6EFD               	movwf	tosl,c
 33680  00D6FA  50DE               	movf	postinc2,w,c
 33681  00D6FC  6EFE               	movwf	tosh,c
 33682  00D6FE  50DE               	movf	postinc2,w,c
 33683  00D700  6EFF               	movwf	tosu,c
 33684  00D702  50FA               	movf	pclath,w,c
 33685  00D704  0012               	return		;indir
 33686  00D706                     u11189:
 33687  00D706  0900               	iorlw	0
 33688  00D708  B4D8               	btfsc	status,2,c
 33689  00D70A  D017               	goto	l704
 33690                           
 33691                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 33692  00D70C  0E01               	movlw	1
 33693  00D70E  010D               	movlb	13	; () banked
 33694  00D710  6F8C               	movwf	140,b	;volatile
 33695                           
 33696                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 33697  00D712  0101               	movlb	1	; () banked
 33698  00D714  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33699  00D716  0BF0               	andlw	-16
 33700  00D718  0907               	iorlw	7
 33701  00D71A  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33702                           
 33703                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 33704  00D71C  0E27               	movlw	39
 33705  00D71E  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33706                           
 33707                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 33708  00D720  0E00               	movlw	0
 33709  00D722  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33710                           
 33711                           ; BSR set to: 1
 33712                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 33713  00D724  0E00               	movlw	0
 33714  00D726  0100               	movlb	0	; () banked
 33715  00D728  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33716  00D72A  0E02               	movlw	2
 33717  00D72C  ECAB  F087         	call	_USBStallEndpoint
 33718                           
 33719                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 33720  00D730  0E00               	movlw	0
 33721  00D732  0101               	movlb	1	; () banked
 33722  00D734  6F60               	movwf	_MSDWriteState& (0+255),b
 33723                           
 33724                           ; BSR set to: 1
 33725                           ;usb_device_msd.c: 1228: return MSDWriteState;
 33726  00D736  5160               	movf	_MSDWriteState& (0+255),w,b
 33727                           
 33728                           ; BSR set to: 1
 33729  00D738  0012               	return	
 33730  00D73A                     l704:
 33731                           
 33732                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 33733                           
 33734                           ; BSR set to: 1
 33735  00D73A  0E01               	movlw	1
 33736  00D73C  0101               	movlb	1	; () banked
 33737  00D73E  6F63               	movwf	_MSD_State& (0+255),b
 33738  00D740                     
 33739                           ; BSR set to: 1
 33740                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 33741                           
 33742                           ; BSR set to: 1
 33743  00D740  5145               	movf	_TransferLength& (0+255),w,b
 33744  00D742  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33745  00D744  A4D8               	btfss	status,2,c
 33746  00D746  D002               	goto	l707
 33747                           
 33748                           ; BSR set to: 1
 33749                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 33750  00D748  0E00               	movlw	0
 33751  00D74A  D0FF               	goto	L50
 33752  00D74C                     l707:
 33753                           
 33754                           ; BSR set to: 1
 33755                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 33756                           
 33757                           ; BSR set to: 1
 33758  00D74C  0E03               	movlw	3
 33759  00D74E  6F60               	movwf	_MSDWriteState& (0+255),b
 33760                           
 33761                           ; BSR set to: 1
 33762                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 33763  00D750  0E00               	movlw	0
 33764  00D752  6F4D               	movwf	_ptrNextData& (0+255),b
 33765  00D754  0E06               	movlw	6
 33766  00D756  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 33767                           
 33768                           ; BSR set to: 1
 33769                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 33770  00D758  0E00               	movlw	0
 33771  00D75A  010D               	movlb	13	; () banked
 33772  00D75C  6F88               	movwf	136,b	;volatile
 33773  00D75E  0E02               	movlw	2
 33774  00D760  6F89               	movwf	137,b	;volatile
 33775  00D762  0E00               	movlw	0
 33776  00D764  6F8A               	movwf	138,b	;volatile
 33777  00D766  0E00               	movlw	0
 33778  00D768  6F8B               	movwf	139,b	;volatile
 33779  00D76A                     l708:
 33780                           
 33781                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 33782  00D76A  010D               	movlb	13	; () banked
 33783  00D76C  5188               	movf	136,w,b	;volatile
 33784  00D76E  1189               	iorwf	137,w,b	;volatile
 33785  00D770  118A               	iorwf	138,w,b	;volatile
 33786  00D772  118B               	iorwf	139,w,b	;volatile
 33787  00D774  B4D8               	btfsc	status,2,c
 33788  00D776  D01F               	goto	l709
 33789                           
 33790                           ; BSR set to: 13
 33791                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 33792  00D778  0101               	movlb	1	; () banked
 33793  00D77A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33794  00D77C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33795  00D77E  B4D8               	btfsc	status,2,c
 33796  00D780  D006               	goto	l710
 33797                           
 33798                           ; BSR set to: 1
 33799  00D782  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33800  00D786  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33801  00D78A  BEDF               	btfsc	indf2,7,c
 33802  00D78C  D0F2               	goto	l703
 33803  00D78E                     l710:
 33804                           
 33805                           ; BSR set to: 1
 33806                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 33807                           
 33808                           ; BSR set to: 1
 33809  00D78E  0E00               	movlw	0
 33810  00D790  0100               	movlb	0	; () banked
 33811  00D792  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33812  00D794  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33813  00D798  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33814  00D79C  0E40               	movlw	64
 33815  00D79E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33816  00D7A0  0E02               	movlw	2
 33817  00D7A2  EC30  F088         	call	_USBTransferOnePacket
 33818  00D7A6  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 33819  00D7AA  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 33820                           
 33821                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 33822  00D7AE  0E04               	movlw	4
 33823  00D7B0  0101               	movlb	1	; () banked
 33824  00D7B2  6F60               	movwf	_MSDWriteState& (0+255),b
 33825                           
 33826                           ;usb_device_msd.c: 1260: }
 33827  00D7B4  D023               	goto	l711
 33828  00D7B6                     l709:
 33829                           
 33830                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 33831                           
 33832                           ; BSR set to: 1
 33833  00D7B6  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33834  00D7BA  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33835  00D7BE  EE22  F098         	lfsr	2,_LUN+15
 33836  00D7C2  D801               	call	u11248
 33837  00D7C4  D00A               	goto	u11249
 33838  00D7C6                     u11248:
 33839  00D7C6  0005               	push	
 33840  00D7C8  6EFA               	movwf	pclath,c
 33841  00D7CA  50DE               	movf	postinc2,w,c
 33842  00D7CC  6EFD               	movwf	tosl,c
 33843  00D7CE  50DE               	movf	postinc2,w,c
 33844  00D7D0  6EFE               	movwf	tosh,c
 33845  00D7D2  50DE               	movf	postinc2,w,c
 33846  00D7D4  6EFF               	movwf	tosu,c
 33847  00D7D6  50FA               	movf	pclath,w,c
 33848  00D7D8  0012               	return		;indir
 33849  00D7DA                     u11249:
 33850  00D7DA  0900               	iorlw	0
 33851  00D7DC  B4D8               	btfsc	status,2,c
 33852  00D7DE  D00C               	goto	l712
 33853                           
 33854                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 33855  00D7E0  0E01               	movlw	1
 33856  00D7E2  010D               	movlb	13	; () banked
 33857  00D7E4  6F8C               	movwf	140,b	;volatile
 33858                           
 33859                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 33860  00D7E6  0101               	movlb	1	; () banked
 33861  00D7E8  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33862  00D7EA  0BF0               	andlw	-16
 33863  00D7EC  0902               	iorlw	2
 33864  00D7EE  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33865                           
 33866                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 33867  00D7F0  0E27               	movlw	39
 33868  00D7F2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33869                           
 33870                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 33871  00D7F4  0E00               	movlw	0
 33872  00D7F6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33873  00D7F8                     l712:
 33874                           
 33875                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 33876  00D7F8  0E02               	movlw	2
 33877  00D7FA  D0A6               	goto	L93
 33878  00D7FC                     l711:
 33879                           
 33880                           ; BSR set to: 1
 33881                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33882                           
 33883                           ; BSR set to: 1
 33884                           
 33885                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 33886                           
 33887                           ; BSR set to: 1
 33888  00D7FC  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33889  00D7FE  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33890  00D800  B4D8               	btfsc	status,2,c
 33891  00D802  D006               	goto	l714
 33892                           
 33893                           ; BSR set to: 1
 33894  00D804  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33895  00D808  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33896  00D80C  BEDF               	btfsc	indf2,7,c
 33897  00D80E  D0B1               	goto	l703
 33898  00D810                     l714:
 33899                           
 33900                           ; BSR set to: 1
 33901                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 33902                           
 33903                           ; BSR set to: 1
 33904  00D810  EE20 F001          	lfsr	2,1
 33905  00D814  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33906  00D816  26D9               	addwf	fsr2l,f,c
 33907  00D818  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33908  00D81A  22DA               	addwfc	fsr2h,f,c
 33909  00D81C  50DF               	movf	indf2,w,c
 33910  00D81E  0100               	movlb	0	; () banked
 33911  00D820  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33912  00D822  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33913  00D826  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33914  00D828  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33915  00D82A  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33916  00D82C  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33917  00D82E  0102               	movlb	2	; () banked
 33918  00D830  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33919  00D832  0100               	movlb	0	; () banked
 33920  00D834  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33921  00D836  0102               	movlb	2	; () banked
 33922  00D838  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33923  00D83A  0100               	movlb	0	; () banked
 33924  00D83C  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33925  00D83E  0102               	movlb	2	; () banked
 33926  00D840  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33927  00D842  0100               	movlb	0	; () banked
 33928  00D844  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33929  00D846  0102               	movlb	2	; () banked
 33930  00D848  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33931                           
 33932                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 33933  00D84A  0101               	movlb	1	; () banked
 33934  00D84C  EE20 F001          	lfsr	2,1
 33935  00D850  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33936  00D852  26D9               	addwf	fsr2l,f,c
 33937  00D854  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33938  00D856  22DA               	addwfc	fsr2h,f,c
 33939  00D858  50DF               	movf	indf2,w,c
 33940  00D85A  0100               	movlb	0	; () banked
 33941  00D85C  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33942  00D85E  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33943  00D862  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33944  00D864  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33945  00D866  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33946  00D868  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33947  00D86A  010D               	movlb	13	; () banked
 33948  00D86C  5F88               	subwf	136,f,b	;volatile
 33949  00D86E  0100               	movlb	0	; () banked
 33950  00D870  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33951  00D872  010D               	movlb	13	; () banked
 33952  00D874  5B89               	subwfb	137,f,b	;volatile
 33953  00D876  0100               	movlb	0	; () banked
 33954  00D878  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33955  00D87A  010D               	movlb	13	; () banked
 33956  00D87C  5B8A               	subwfb	138,f,b	;volatile
 33957  00D87E  0100               	movlb	0	; () banked
 33958  00D880  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33959  00D882  010D               	movlb	13	; () banked
 33960  00D884  5B8B               	subwfb	139,f,b	;volatile
 33961                           
 33962                           ; BSR set to: 13
 33963                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 33964  00D886  0E40               	movlw	64
 33965  00D888  0101               	movlb	1	; () banked
 33966  00D88A  274D               	addwf	_ptrNextData& (0+255),f,b
 33967  00D88C  0E00               	movlw	0
 33968  00D88E  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33969                           
 33970                           ; BSR set to: 1
 33971                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 33972  00D890  0E03               	movlw	3
 33973  00D892  D05B               	goto	L50
 33974  00D894                     
 33975                           ; BSR set to: 1
 33976                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 33977                           
 33978                           ; BSR set to: 1
 33979  00D894  010D               	movlb	13	; () banked
 33980  00D896  518C               	movf	140,w,b	;volatile
 33981  00D898  A4D8               	btfss	status,2,c
 33982  00D89A  D040               	goto	l719
 33983                           
 33984                           ; BSR set to: 13
 33985                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 33986  00D89C  C29E  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 33987  00D8A0  C29F  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 33988  00D8A4  C12B  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 33989  00D8A8  C12C  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 33990  00D8AC  C12D  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 33991  00D8B0  C12E  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 33992  00D8B4  0E00               	movlw	0
 33993  00D8B6  0100               	movlb	0	; () banked
 33994  00D8B8  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 33995  00D8BA  0E06               	movlw	6
 33996  00D8BC  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 33997  00D8BE  0101               	movlb	1	; () banked
 33998  00D8C0  512B               	movf	_LBA& (0+255),w,b
 33999  00D8C2  112C               	iorwf	(_LBA+1)& (0+255),w,b
 34000  00D8C4  112D               	iorwf	(_LBA+2)& (0+255),w,b
 34001  00D8C6  112E               	iorwf	(_LBA+3)& (0+255),w,b
 34002  00D8C8  A4D8               	btfss	status,2,c
 34003  00D8CA  D002               	goto	u11290
 34004  00D8CC  0E01               	movlw	1
 34005  00D8CE  D001               	goto	u11300
 34006  00D8D0                     u11290:
 34007  00D8D0  0E00               	movlw	0
 34008  00D8D2                     u11300:
 34009  00D8D2  0100               	movlb	0	; () banked
 34010  00D8D4  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 34011  00D8D6  EE22  F09B         	lfsr	2,_LUN+18
 34012  00D8DA  D801               	call	u11318
 34013  00D8DC  D00A               	goto	u11319
 34014  00D8DE                     u11318:
 34015  00D8DE  0005               	push	
 34016  00D8E0  6EFA               	movwf	pclath,c
 34017  00D8E2  50DE               	movf	postinc2,w,c
 34018  00D8E4  6EFD               	movwf	tosl,c
 34019  00D8E6  50DE               	movf	postinc2,w,c
 34020  00D8E8  6EFE               	movwf	tosh,c
 34021  00D8EA  50DE               	movf	postinc2,w,c
 34022  00D8EC  6EFF               	movwf	tosu,c
 34023  00D8EE  50FA               	movf	pclath,w,c
 34024  00D8F0  0012               	return		;indir
 34025  00D8F2                     u11319:
 34026  00D8F2  06E8               	decf	wreg,f,c
 34027  00D8F4  B4D8               	btfsc	status,2,c
 34028  00D8F6  D012               	goto	l719
 34029                           
 34030                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 34031  00D8F8  0E64               	movlw	100
 34032  00D8FA  0101               	movlb	1	; () banked
 34033  00D8FC  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 34034  00D8FE  D002               	goto	l718
 34035                           
 34036                           ; BSR set to: 1
 34037                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 34038  00D900  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 34039                           
 34040                           ;usb_device_msd.c: 1314: break;
 34041  00D902  D037               	goto	l703
 34042  00D904                     l718:
 34043                           
 34044                           ; BSR set to: 1
 34045                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 34046                           
 34047                           ; BSR set to: 1
 34048  00D904  0E01               	movlw	1
 34049  00D906  010D               	movlb	13	; () banked
 34050  00D908  6F8C               	movwf	140,b	;volatile
 34051                           
 34052                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 34053  00D90A  0101               	movlb	1	; () banked
 34054  00D90C  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 34055  00D90E  0BF0               	andlw	-16
 34056  00D910  0903               	iorlw	3
 34057  00D912  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 34058                           
 34059                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 34060  00D914  0E00               	movlw	0
 34061  00D916  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 34062                           
 34063                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 34064  00D918  0E00               	movlw	0
 34065  00D91A  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 34066  00D91C                     l719:
 34067                           
 34068                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 34069                           
 34070                           ; BSR set to: 1
 34071                           
 34072                           ; BSR set to: 1
 34073                           
 34074                           ; BSR set to: 1
 34075  00D91C  0E01               	movlw	1
 34076  00D91E  0101               	movlb	1	; () banked
 34077  00D920  272B               	addwf	_LBA& (0+255),f,b
 34078  00D922  0E00               	movlw	0
 34079  00D924  232C               	addwfc	(_LBA+1)& (0+255),f,b
 34080  00D926  232D               	addwfc	(_LBA+2)& (0+255),f,b
 34081  00D928  232E               	addwfc	(_LBA+3)& (0+255),f,b
 34082                           
 34083                           ; BSR set to: 1
 34084                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 34085  00D92A  0745               	decf	_TransferLength& (0+255),f,b
 34086  00D92C  A0D8               	btfss	status,0,c
 34087  00D92E  0746               	decf	(_TransferLength+1)& (0+255),f,b
 34088                           
 34089                           ; BSR set to: 1
 34090                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 34091  00D930  0E01               	movlw	1
 34092  00D932  D00B               	goto	L50
 34093  00D934                     
 34094                           ; BSR set to: 1
 34095                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 34096                           
 34097                           ; BSR set to: 1
 34098  00D934  0E02               	movlw	2
 34099  00D936  010D               	movlb	13	; () banked
 34100  00D938  6F8C               	movwf	140,b	;volatile
 34101                           
 34102                           ; BSR set to: 13
 34103                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 34104  00D93A  0E00               	movlw	0
 34105  00D93C  0100               	movlb	0	; () banked
 34106  00D93E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34107  00D940  0E02               	movlw	2
 34108  00D942  ECAB  F087         	call	_USBStallEndpoint
 34109                           
 34110                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 34111  00D946  0E00               	movlw	0
 34112  00D948                     L93:
 34113  00D948  0101               	movlb	1	; () banked
 34114  00D94A                     L50:
 34115  00D94A  6F60               	movwf	_MSDWriteState& (0+255),b
 34116                           
 34117                           ; BSR set to: 1
 34118                           ;usb_device_msd.c: 1345: }
 34119                           
 34120                           ;usb_device_msd.c: 1344: break;
 34121  00D94C  D012               	goto	l703
 34122  00D94E                     l700:
 34123                           
 34124                           ; BSR set to: 1
 34125  00D94E  0101               	movlb	1	; () banked
 34126  00D950  5160               	movf	_MSDWriteState& (0+255),w,b
 34127                           
 34128                           ; Switch size 1, requested type "space"
 34129                           ; Number of cases is 5, Range of values is 0 to 4
 34130                           ; switch strategies available:
 34131                           ; Name         Instructions Cycles
 34132                           ; simple_byte           16     9 (average)
 34133                           ;	Chosen strategy is simple_byte
 34134  00D952  0A00               	xorlw	0	; case 0
 34135  00D954  B4D8               	btfsc	status,2,c
 34136  00D956  D69B               	goto	l701
 34137  00D958  0A01               	xorlw	1	; case 1
 34138  00D95A  B4D8               	btfsc	status,2,c
 34139  00D95C  D6F1               	goto	l706
 34140  00D95E  0A03               	xorlw	3	; case 2
 34141  00D960  B4D8               	btfsc	status,2,c
 34142  00D962  D798               	goto	l715
 34143  00D964  0A01               	xorlw	1	; case 3
 34144  00D966  B4D8               	btfsc	status,2,c
 34145  00D968  D700               	goto	l708
 34146  00D96A  0A07               	xorlw	7	; case 4
 34147  00D96C  B4D8               	btfsc	status,2,c
 34148  00D96E  D746               	goto	l711
 34149  00D970  D7E1               	goto	l720
 34150  00D972                     l703:
 34151                           
 34152                           ;usb_device_msd.c: 1347: return MSDWriteState;
 34153                           
 34154                           ; BSR set to: 1
 34155  00D972  0101               	movlb	1	; () banked
 34156  00D974  5160               	movf	_MSDWriteState& (0+255),w,b
 34157  00D976  0012               	return	
 34158  00D978                     __end_of_MSDWriteHandler:
 34159                           	opt stack 0
 34160                           tosu	equ	0xFFF
 34161                           tosh	equ	0xFFE
 34162                           tosl	equ	0xFFD
 34163                           pclath	equ	0xFFA
 34164                           tblptru	equ	0xFF8
 34165                           tblptrh	equ	0xFF7
 34166                           tblptrl	equ	0xFF6
 34167                           tablat	equ	0xFF5
 34168                           prodh	equ	0xFF4
 34169                           prodl	equ	0xFF3
 34170                           intcon	equ	0xFF2
 34171                           postinc0	equ	0xFEE
 34172                           wreg	equ	0xFE8
 34173                           indf1	equ	0xFE7
 34174                           postinc1	equ	0xFE6
 34175                           postdec1	equ	0xFE5
 34176                           plusw1	equ	0xFE3
 34177                           fsr1h	equ	0xFE2
 34178                           fsr1l	equ	0xFE1
 34179                           indf2	equ	0xFDF
 34180                           postinc2	equ	0xFDE
 34181                           postdec2	equ	0xFDD
 34182                           plusw2	equ	0xFDB
 34183                           fsr2h	equ	0xFDA
 34184                           fsr2l	equ	0xFD9
 34185                           status	equ	0xFD8
 34186                           
 34187 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 34188 ;; Defined at:
 34189 ;;		line 34 in file "external_flash.c"
 34190 ;; Parameters:    Size  Location     Type
 34191 ;;  config          2    0[BANK0 ] PTR void 
 34192 ;;		 -> NULL(0), 
 34193 ;; Auto vars:     Size  Location     Type
 34194 ;;		None
 34195 ;; Return value:  Size  Location     Type
 34196 ;;                  1    wreg      unsigned char 
 34197 ;; Registers used:
 34198 ;;		wreg
 34199 ;; Tracked objects:
 34200 ;;		On entry : 0/0
 34201 ;;		On exit  : 0/0
 34202 ;;		Unchanged: 0/0
 34203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34208 ;;Total ram usage:        2 bytes
 34209 ;; Hardware stack levels used:    1
 34210 ;; Hardware stack levels required when called:   10
 34211 ;; This function calls:
 34212 ;;		Nothing
 34213 ;; This function is called by:
 34214 ;;		_MSDWriteHandler
 34215 ;;		_MSDProcessCommandMediaPresent
 34216 ;; This function uses a non-reentrant model
 34217 ;;
 34218                           
 34219                           	psect	text132
 34220  01581C                     __ptext132:
 34221                           	opt stack 0
 34222  01581C                     _ExternalFlash_WriteProtectStateGet:
 34223                           	opt stack 15
 34224                           
 34225                           ;external_flash.c: 37: return 0;
 34226                           
 34227                           ; BSR set to: 1
 34228                           ;incstack = 0
 34229  01581C  0E00               	movlw	0
 34230  01581E  0012               	return	
 34231  015820                     __end_of_ExternalFlash_WriteProtectStateGet:
 34232                           	opt stack 0
 34233                           tosu	equ	0xFFF
 34234                           tosh	equ	0xFFE
 34235                           tosl	equ	0xFFD
 34236                           pclath	equ	0xFFA
 34237                           tblptru	equ	0xFF8
 34238                           tblptrh	equ	0xFF7
 34239                           tblptrl	equ	0xFF6
 34240                           tablat	equ	0xFF5
 34241                           prodh	equ	0xFF4
 34242                           prodl	equ	0xFF3
 34243                           intcon	equ	0xFF2
 34244                           postinc0	equ	0xFEE
 34245                           wreg	equ	0xFE8
 34246                           indf1	equ	0xFE7
 34247                           postinc1	equ	0xFE6
 34248                           postdec1	equ	0xFE5
 34249                           plusw1	equ	0xFE3
 34250                           fsr1h	equ	0xFE2
 34251                           fsr1l	equ	0xFE1
 34252                           indf2	equ	0xFDF
 34253                           postinc2	equ	0xFDE
 34254                           postdec2	equ	0xFDD
 34255                           plusw2	equ	0xFDB
 34256                           fsr2h	equ	0xFDA
 34257                           fsr2l	equ	0xFD9
 34258                           status	equ	0xFD8
 34259                           
 34260 ;; *************** function _ExternalFlash_SectorWrite *****************
 34261 ;; Defined at:
 34262 ;;		line 56 in file "external_flash.c"
 34263 ;; Parameters:    Size  Location     Type
 34264 ;;  config          2   36[BANK0 ] PTR void 
 34265 ;;		 -> NULL(0), 
 34266 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 34267 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 34268 ;;		 -> msd_buffer(512), 
 34269 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 34270 ;; Auto vars:     Size  Location     Type
 34271 ;;  page            2   45[BANK0 ] unsigned int 
 34272 ;; Return value:  Size  Location     Type
 34273 ;;                  1    wreg      unsigned char 
 34274 ;; Registers used:
 34275 ;;		wreg, status,2, status,0, cstack
 34276 ;; Tracked objects:
 34277 ;;		On entry : 0/0
 34278 ;;		On exit  : 0/0
 34279 ;;		Unchanged: 0/0
 34280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34281 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34282 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34284 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34285 ;;Total ram usage:       11 bytes
 34286 ;; Hardware stack levels used:    1
 34287 ;; Hardware stack levels required when called:   15
 34288 ;; This function calls:
 34289 ;;		_flash_sector_write
 34290 ;; This function is called by:
 34291 ;;		_MSDWriteHandler
 34292 ;; This function uses a non-reentrant model
 34293 ;;
 34294                           
 34295                           	psect	text133
 34296  015128                     __ptext133:
 34297                           	opt stack 0
 34298  015128                     _ExternalFlash_SectorWrite:
 34299                           	opt stack 10
 34300                           
 34301                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 34302                           
 34303                           ;incstack = 0
 34304  015128  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 34305  01512C  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 34306                           
 34307                           ;external_flash.c: 61: if(sector_addr >= 8192)
 34308  015130  0100               	movlb	0	; () banked
 34309  015132  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 34310  015134  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 34311  015136  E104               	bnz	u10850
 34312  015138  0E20               	movlw	32
 34313  01513A  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 34314  01513C  A0D8               	btfss	status,0,c
 34315  01513E  D002               	goto	l1681
 34316  015140                     u10850:
 34317                           
 34318                           ; BSR set to: 0
 34319                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 34320  015140  0E00               	movlw	0
 34321                           
 34322                           ; BSR set to: 0
 34323  015142  0012               	return	
 34324  015144                     l1681:
 34325                           
 34326                           ; BSR set to: 0
 34327                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 34328                           
 34329                           ; BSR set to: 0
 34330  015144  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 34331  015148  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 34332  01514C  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 34333  015150  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 34334  015154  EC9C  F0A5         	call	_flash_sector_write	;wreg free
 34335                           
 34336                           ;external_flash.c: 69: return 1;
 34337  015158  0E01               	movlw	1
 34338  01515A  0012               	return	
 34339  01515C                     __end_of_ExternalFlash_SectorWrite:
 34340                           	opt stack 0
 34341                           tosu	equ	0xFFF
 34342                           tosh	equ	0xFFE
 34343                           tosl	equ	0xFFD
 34344                           pclath	equ	0xFFA
 34345                           tblptru	equ	0xFF8
 34346                           tblptrh	equ	0xFF7
 34347                           tblptrl	equ	0xFF6
 34348                           tablat	equ	0xFF5
 34349                           prodh	equ	0xFF4
 34350                           prodl	equ	0xFF3
 34351                           intcon	equ	0xFF2
 34352                           postinc0	equ	0xFEE
 34353                           wreg	equ	0xFE8
 34354                           indf1	equ	0xFE7
 34355                           postinc1	equ	0xFE6
 34356                           postdec1	equ	0xFE5
 34357                           plusw1	equ	0xFE3
 34358                           fsr1h	equ	0xFE2
 34359                           fsr1l	equ	0xFE1
 34360                           indf2	equ	0xFDF
 34361                           postinc2	equ	0xFDE
 34362                           postdec2	equ	0xFDD
 34363                           plusw2	equ	0xFDB
 34364                           fsr2h	equ	0xFDA
 34365                           fsr2l	equ	0xFD9
 34366                           status	equ	0xFD8
 34367                           
 34368 ;; *************** function _flash_sector_write *****************
 34369 ;; Defined at:
 34370 ;;		line 434 in file "flash.c"
 34371 ;; Parameters:    Size  Location     Type
 34372 ;;  page            2   31[BANK0 ] unsigned int 
 34373 ;;  data            2   33[BANK0 ] PTR unsigned char 
 34374 ;;		 -> buffer(512), msd_buffer(512), 
 34375 ;; Auto vars:     Size  Location     Type
 34376 ;;  match           1   35[BANK0 ] enum E6984
 34377 ;; Return value:  Size  Location     Type
 34378 ;;                  1    wreg      void 
 34379 ;; Registers used:
 34380 ;;		wreg, status,2, status,0, cstack
 34381 ;; Tracked objects:
 34382 ;;		On entry : 0/0
 34383 ;;		On exit  : 0/0
 34384 ;;		Unchanged: 0/0
 34385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34386 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34389 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34390 ;;Total ram usage:        5 bytes
 34391 ;; Hardware stack levels used:    1
 34392 ;; Hardware stack levels required when called:   14
 34393 ;; This function calls:
 34394 ;;		__flash_compare_page_to_buffer
 34395 ;;		__flash_write_page_from_buffer
 34396 ;;		__flash_write_to_buffer
 34397 ;; This function is called by:
 34398 ;;		_ExternalFlash_SectorWrite
 34399 ;;		__make_cluster_chain
 34400 ;;		_fat_format
 34401 ;; This function uses a non-reentrant model
 34402 ;;
 34403                           
 34404                           	psect	text134
 34405  014B38                     __ptext134:
 34406                           	opt stack 0
 34407  014B38                     _flash_sector_write:
 34408                           	opt stack 13
 34409                           
 34410                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 34411                           
 34412                           ;incstack = 0
 34413  014B38  0E00               	movlw	0
 34414  014B3A  0100               	movlb	0	; () banked
 34415  014B3C  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 34416  014B3E  0E00               	movlw	0
 34417  014B40  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 34418  014B42  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 34419  014B46  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 34420  014B4A  0E02               	movlw	2
 34421  014B4C  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 34422  014B4E  0E00               	movlw	0
 34423  014B50  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 34424  014B52  0E00               	movlw	0
 34425  014B54  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 34426  014B56  ECFB  F0A4         	call	__flash_write_to_buffer	;wreg free
 34427                           
 34428                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 34429  014B5A  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 34430  014B5E  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 34431  014B62  0E00               	movlw	0
 34432  014B64  0100               	movlb	0	; () banked
 34433  014B66  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 34434  014B68  EC7D  F09D         	call	__flash_compare_page_to_buffer	;wreg free
 34435  014B6C  0100               	movlb	0	; () banked
 34436  014B6E  6F83               	movwf	flash_sector_write@match& (0+255),b
 34437                           
 34438                           ; BSR set to: 0
 34439                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 34440  014B70  0583               	decf	flash_sector_write@match& (0+255),w,b
 34441  014B72  A4D8               	btfss	status,2,c
 34442  014B74  0012               	return	
 34443                           
 34444                           ; BSR set to: 0
 34445                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 34446  014B76  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 34447  014B7A  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 34448  014B7E  0E00               	movlw	0
 34449  014B80  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 34450  014B82  EC9B  F0A2         	call	__flash_write_page_from_buffer	;wreg free
 34451  014B86  0012               	return	
 34452  014B88                     __end_of_flash_sector_write:
 34453                           	opt stack 0
 34454                           tosu	equ	0xFFF
 34455                           tosh	equ	0xFFE
 34456                           tosl	equ	0xFFD
 34457                           pclath	equ	0xFFA
 34458                           tblptru	equ	0xFF8
 34459                           tblptrh	equ	0xFF7
 34460                           tblptrl	equ	0xFF6
 34461                           tablat	equ	0xFF5
 34462                           prodh	equ	0xFF4
 34463                           prodl	equ	0xFF3
 34464                           intcon	equ	0xFF2
 34465                           postinc0	equ	0xFEE
 34466                           wreg	equ	0xFE8
 34467                           indf1	equ	0xFE7
 34468                           postinc1	equ	0xFE6
 34469                           postdec1	equ	0xFE5
 34470                           plusw1	equ	0xFE3
 34471                           fsr1h	equ	0xFE2
 34472                           fsr1l	equ	0xFE1
 34473                           indf2	equ	0xFDF
 34474                           postinc2	equ	0xFDE
 34475                           postdec2	equ	0xFDD
 34476                           plusw2	equ	0xFDB
 34477                           fsr2h	equ	0xFDA
 34478                           fsr2l	equ	0xFD9
 34479                           status	equ	0xFD8
 34480                           
 34481 ;; *************** function __flash_write_to_buffer *****************
 34482 ;; Defined at:
 34483 ;;		line 236 in file "flash.c"
 34484 ;; Parameters:    Size  Location     Type
 34485 ;;  start           2   19[BANK0 ] unsigned int 
 34486 ;;  data            2   21[BANK0 ] PTR unsigned char 
 34487 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34488 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34489 ;;  data_length     2   23[BANK0 ] unsigned int 
 34490 ;;  buffer          1   25[BANK0 ] enum E6980
 34491 ;; Auto vars:     Size  Location     Type
 34492 ;;  command         4   26[BANK0 ] unsigned char [4]
 34493 ;; Return value:  Size  Location     Type
 34494 ;;                  1    wreg      void 
 34495 ;; Registers used:
 34496 ;;		wreg, status,2, status,0, cstack
 34497 ;; Tracked objects:
 34498 ;;		On entry : 0/0
 34499 ;;		On exit  : 0/0
 34500 ;;		Unchanged: 0/0
 34501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34502 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34503 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34505 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34506 ;;Total ram usage:       11 bytes
 34507 ;; Hardware stack levels used:    1
 34508 ;; Hardware stack levels required when called:   13
 34509 ;; This function calls:
 34510 ;;		__flash_is_busy
 34511 ;;		_spi_tx_tx
 34512 ;; This function is called by:
 34513 ;;		_flash_sector_write
 34514 ;;		_flash_partial_write
 34515 ;;		_flash_write_to_buffer
 34516 ;; This function uses a non-reentrant model
 34517 ;;
 34518                           
 34519                           	psect	text135
 34520  0149F6                     __ptext135:
 34521                           	opt stack 0
 34522  0149F6                     __flash_write_to_buffer:
 34523                           	opt stack 13
 34524                           
 34525                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 34526                           
 34527                           ;incstack = 0
 34528  0149F6  ECD3  F0AA         	call	__flash_is_busy	;wreg free
 34529  0149FA  0900               	iorlw	0
 34530  0149FC  A4D8               	btfss	status,2,c
 34531  0149FE  D7FB               	goto	__flash_write_to_buffer
 34532                           
 34533                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 34534  014A00  0100               	movlb	0	; () banked
 34535  014A02  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 34536  014A04  A4D8               	btfss	status,2,c
 34537  014A06  D002               	goto	l1567
 34538                           
 34539                           ; BSR set to: 0
 34540                           ;flash.c: 245: command[0] = 0x84;
 34541  014A08  0E84               	movlw	132
 34542  014A0A  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34543  014A0C                     l1567:
 34544                           
 34545                           ; BSR set to: 0
 34546                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 34547                           
 34548                           ; BSR set to: 0
 34549  014A0C  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 34550  014A0E  A4D8               	btfss	status,2,c
 34551  014A10  D002               	goto	l1568
 34552                           
 34553                           ; BSR set to: 0
 34554                           ;flash.c: 247: command[0] = 0x87;
 34555  014A12  0E87               	movlw	135
 34556  014A14  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34557  014A16                     l1568:
 34558                           
 34559                           ; BSR set to: 0
 34560                           ;flash.c: 249: command[1] = 0x00;
 34561  014A16  0E00               	movlw	0
 34562  014A18  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 34563                           
 34564                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 34565  014A1A  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 34566  014A1C  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 34567                           
 34568                           ; BSR set to: 0
 34569                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 34570  014A1E  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 34571                           
 34572                           ; BSR set to: 0
 34573                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 34574  014A22  0E7A               	movlw	low __flash_write_to_buffer@command
 34575  014A24  6F60               	movwf	spi_tx_tx@command& (0+255),b
 34576  014A26  0E00               	movlw	high __flash_write_to_buffer@command
 34577  014A28  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 34578  014A2A  0E00               	movlw	0
 34579  014A2C  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 34580  014A2E  0E04               	movlw	4
 34581  014A30  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 34582  014A32  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 34583  014A36  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 34584  014A3A  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 34585  014A3E  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 34586  014A42  EC62  F09B         	call	_spi_tx_tx	;wreg free
 34587  014A46  0012               	return		;funcret
 34588  014A48                     __end_of__flash_write_to_buffer:
 34589                           	opt stack 0
 34590                           tosu	equ	0xFFF
 34591                           tosh	equ	0xFFE
 34592                           tosl	equ	0xFFD
 34593                           pclath	equ	0xFFA
 34594                           tblptru	equ	0xFF8
 34595                           tblptrh	equ	0xFF7
 34596                           tblptrl	equ	0xFF6
 34597                           tablat	equ	0xFF5
 34598                           prodh	equ	0xFF4
 34599                           prodl	equ	0xFF3
 34600                           intcon	equ	0xFF2
 34601                           postinc0	equ	0xFEE
 34602                           wreg	equ	0xFE8
 34603                           indf1	equ	0xFE7
 34604                           postinc1	equ	0xFE6
 34605                           postdec1	equ	0xFE5
 34606                           plusw1	equ	0xFE3
 34607                           fsr1h	equ	0xFE2
 34608                           fsr1l	equ	0xFE1
 34609                           indf2	equ	0xFDF
 34610                           postinc2	equ	0xFDE
 34611                           postdec2	equ	0xFDD
 34612                           plusw2	equ	0xFDB
 34613                           fsr2h	equ	0xFDA
 34614                           fsr2l	equ	0xFD9
 34615                           status	equ	0xFD8
 34616                           
 34617 ;; *************** function _spi_tx_tx *****************
 34618 ;; Defined at:
 34619 ;;		line 146 in file "spi.c"
 34620 ;; Parameters:    Size  Location     Type
 34621 ;;  command         2    0[BANK0 ] PTR unsigned char 
 34622 ;;		 -> _flash_write_to_buffer@command(4), 
 34623 ;;  command_leng    2    2[BANK0 ] unsigned int 
 34624 ;;  data            2    4[BANK0 ] PTR unsigned char 
 34625 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34626 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34627 ;;  data_length     2    6[BANK0 ] unsigned int 
 34628 ;; Auto vars:     Size  Location     Type
 34629 ;;		None
 34630 ;; Return value:  Size  Location     Type
 34631 ;;                  1    wreg      void 
 34632 ;; Registers used:
 34633 ;;		wreg, status,2, status,0
 34634 ;; Tracked objects:
 34635 ;;		On entry : 0/0
 34636 ;;		On exit  : 0/0
 34637 ;;		Unchanged: 0/0
 34638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34639 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34641 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34642 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34643 ;;Total ram usage:       12 bytes
 34644 ;; Hardware stack levels used:    1
 34645 ;; Hardware stack levels required when called:   10
 34646 ;; This function calls:
 34647 ;;		Nothing
 34648 ;; This function is called by:
 34649 ;;		__flash_write_to_buffer
 34650 ;; This function uses a non-reentrant model
 34651 ;;
 34652                           
 34653                           	psect	text136
 34654  0136C4                     __ptext136:
 34655                           	opt stack 0
 34656  0136C4                     _spi_tx_tx:
 34657                           	opt stack 15
 34658                           
 34659                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 34660                           
 34661                           ;incstack = 0
 34662  0136C4  9E88               	bcf	3976,7,c	;volatile
 34663                           
 34664                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 34665  0136C6  9C88               	bcf	3976,6,c	;volatile
 34666                           
 34667                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 34668  0136C8  8A88               	bsf	3976,5,c	;volatile
 34669                           
 34670                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 34671  0136CA  9888               	bcf	3976,4,c	;volatile
 34672                           
 34673                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 34674  0136CC  9688               	bcf	3976,3,c	;volatile
 34675                           
 34676                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 34677  0136CE  8488               	bsf	3976,2,c	;volatile
 34678                           
 34679                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 34680  0136D0  9288               	bcf	3976,1,c	;volatile
 34681                           
 34682                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 34683  0136D2  9886               	bcf	3974,4,c	;volatile
 34684  0136D4  9A86               	bcf	3974,5,c	;volatile
 34685  0136D6  9C86               	bcf	3974,6,c	;volatile
 34686  0136D8  9E86               	bcf	3974,7,c	;volatile
 34687                           
 34688                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 34689  0136DA  9086               	bcf	3974,0,c	;volatile
 34690  0136DC  9286               	bcf	3974,1,c	;volatile
 34691  0136DE  9486               	bcf	3974,2,c	;volatile
 34692  0136E0  9686               	bcf	3974,3,c	;volatile
 34693                           
 34694                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34695  0136E2  0100               	movlb	0	; () banked
 34696  0136E4  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 34697  0136E6  6E6A               	movwf	3946,c	;volatile
 34698                           
 34699                           ; BSR set to: 0
 34700                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34701  0136E8  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 34702                           
 34703                           ; BSR set to: 0
 34704                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34705  0136EC  0EFF               	movlw	255
 34706  0136EE  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34707  0136F0  0EFF               	movlw	255
 34708  0136F2  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34709  0136F4  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 34710  0136F8  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 34711  0136FC  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34712  0136FE  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34713  013700  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34714  013702  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34715  013704  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34716  013708  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34717  01370A  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34718  01370C  6E66               	movwf	3942,c	;volatile
 34719                           
 34720                           ; BSR set to: 0
 34721                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34722  01370E  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 34723  013710  6E67               	movwf	3943,c	;volatile
 34724                           
 34725                           ; BSR set to: 0
 34726                           ;spi.c: 174: LATDbits.LD7 = 0;
 34727  013712  9E8C               	bcf	3980,7,c	;volatile
 34728                           
 34729                           ; BSR set to: 0
 34730                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 34731  013714  8088               	bsf	3976,0,c	;volatile
 34732  013716                     
 34733                           ; BSR set to: 0
 34734  013716  B088               	btfsc	3976,0,c	;volatile
 34735  013718  D7FE               	goto	l2178
 34736                           
 34737                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34738  01371A  0100               	movlb	0	; () banked
 34739  01371C  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 34740  01371E  6E6A               	movwf	3946,c	;volatile
 34741                           
 34742                           ; BSR set to: 0
 34743                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34744  013720  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 34745                           
 34746                           ; BSR set to: 0
 34747                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34748  013724  0EFF               	movlw	255
 34749  013726  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34750  013728  0EFF               	movlw	255
 34751  01372A  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34752  01372C  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 34753  013730  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 34754  013734  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34755  013736  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34756  013738  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34757  01373A  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34758  01373C  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34759  013740  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34760  013742  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34761  013744  6E66               	movwf	3942,c	;volatile
 34762                           
 34763                           ; BSR set to: 0
 34764                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34765  013746  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 34766  013748  6E67               	movwf	3943,c	;volatile
 34767                           
 34768                           ; BSR set to: 0
 34769                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 34770  01374A  8088               	bsf	3976,0,c	;volatile
 34771  01374C                     
 34772                           ; BSR set to: 0
 34773  01374C  B088               	btfsc	3976,0,c	;volatile
 34774  01374E  D7FE               	goto	l2181
 34775                           
 34776                           ;spi.c: 193: LATDbits.LD7 = 1;
 34777  013750  8E8C               	bsf	3980,7,c	;volatile
 34778  013752  0012               	return		;funcret
 34779  013754                     __end_of_spi_tx_tx:
 34780                           	opt stack 0
 34781                           tosu	equ	0xFFF
 34782                           tosh	equ	0xFFE
 34783                           tosl	equ	0xFFD
 34784                           pclath	equ	0xFFA
 34785                           tblptru	equ	0xFF8
 34786                           tblptrh	equ	0xFF7
 34787                           tblptrl	equ	0xFF6
 34788                           tablat	equ	0xFF5
 34789                           prodh	equ	0xFF4
 34790                           prodl	equ	0xFF3
 34791                           intcon	equ	0xFF2
 34792                           postinc0	equ	0xFEE
 34793                           wreg	equ	0xFE8
 34794                           indf1	equ	0xFE7
 34795                           postinc1	equ	0xFE6
 34796                           postdec1	equ	0xFE5
 34797                           plusw1	equ	0xFE3
 34798                           fsr1h	equ	0xFE2
 34799                           fsr1l	equ	0xFE1
 34800                           indf2	equ	0xFDF
 34801                           postinc2	equ	0xFDE
 34802                           postdec2	equ	0xFDD
 34803                           plusw2	equ	0xFDB
 34804                           fsr2h	equ	0xFDA
 34805                           fsr2l	equ	0xFD9
 34806                           status	equ	0xFD8
 34807                           
 34808 ;; *************** function __flash_write_page_from_buffer *****************
 34809 ;; Defined at:
 34810 ;;		line 258 in file "flash.c"
 34811 ;; Parameters:    Size  Location     Type
 34812 ;;  page            2   19[BANK0 ] unsigned int 
 34813 ;;  buffer          1   21[BANK0 ] enum E6980
 34814 ;; Auto vars:     Size  Location     Type
 34815 ;;  command         4   25[BANK0 ] unsigned char [4]
 34816 ;; Return value:  Size  Location     Type
 34817 ;;                  1    wreg      void 
 34818 ;; Registers used:
 34819 ;;		wreg, status,2, status,0, cstack
 34820 ;; Tracked objects:
 34821 ;;		On entry : 0/0
 34822 ;;		On exit  : 0/0
 34823 ;;		Unchanged: 0/0
 34824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34825 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34826 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34827 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34828 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34829 ;;Total ram usage:       10 bytes
 34830 ;; Hardware stack levels used:    1
 34831 ;; Hardware stack levels required when called:   13
 34832 ;; This function calls:
 34833 ;;		__flash_is_busy
 34834 ;;		_spi_tx
 34835 ;; This function is called by:
 34836 ;;		_flash_sector_write
 34837 ;;		_flash_partial_write
 34838 ;;		_flash_write_page_from_buffer
 34839 ;; This function uses a non-reentrant model
 34840 ;;
 34841                           
 34842                           	psect	text137
 34843  014536                     __ptext137:
 34844                           	opt stack 0
 34845  014536                     __flash_write_page_from_buffer:
 34846                           	opt stack 13
 34847                           
 34848                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 34849                           
 34850                           ;incstack = 0
 34851  014536  ECD3  F0AA         	call	__flash_is_busy	;wreg free
 34852  01453A  0900               	iorlw	0
 34853  01453C  A4D8               	btfss	status,2,c
 34854  01453E  D7FB               	goto	__flash_write_page_from_buffer
 34855                           
 34856                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 34857  014540  0100               	movlb	0	; () banked
 34858  014542  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34859  014544  A4D8               	btfss	status,2,c
 34860  014546  D002               	goto	l1575
 34861                           
 34862                           ; BSR set to: 0
 34863                           ;flash.c: 267: command[0] = 0x83;
 34864  014548  0E83               	movlw	131
 34865  01454A  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34866  01454C                     l1575:
 34867                           
 34868                           ; BSR set to: 0
 34869                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 34870                           
 34871                           ; BSR set to: 0
 34872  01454C  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34873  01454E  A4D8               	btfss	status,2,c
 34874  014550  D002               	goto	l1576
 34875                           
 34876                           ; BSR set to: 0
 34877                           ;flash.c: 269: command[0] = 0x86;
 34878  014552  0E86               	movlw	134
 34879  014554  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34880  014556                     l1576:
 34881                           
 34882                           ; BSR set to: 0
 34883                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34884                           
 34885                           ; BSR set to: 0
 34886  014556  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 34887  01455A  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 34888  01455E  0E07               	movlw	7
 34889  014560  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 34890  014562                     u9665:
 34891  014562  90D8               	bcf	status,0,c
 34892  014564  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 34893  014566  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 34894  014568  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 34895  01456A  D7FB               	goto	u9665
 34896  01456C  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 34897  01456E  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 34898                           
 34899                           ; BSR set to: 0
 34900                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 34901  014570  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 34902  014572  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 34903  014574  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 34904                           
 34905                           ;flash.c: 273: command[3] = 0x00;
 34906  014576  0E00               	movlw	0
 34907  014578  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 34908                           
 34909                           ; BSR set to: 0
 34910                           ;flash.c: 276: spi_tx(command, 4);
 34911  01457A  0E79               	movlw	low __flash_write_page_from_buffer@command
 34912  01457C  6F60               	movwf	spi_tx@data& (0+255),b
 34913  01457E  0E00               	movlw	high __flash_write_page_from_buffer@command
 34914  014580  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34915  014582  0E00               	movlw	0
 34916  014584  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34917  014586  0E04               	movlw	4
 34918  014588  6F62               	movwf	spi_tx@length& (0+255),b
 34919  01458A  ECC8  F0A2         	call	_spi_tx	;wreg free
 34920  01458E  0012               	return		;funcret
 34921  014590                     __end_of__flash_write_page_from_buffer:
 34922                           	opt stack 0
 34923                           tosu	equ	0xFFF
 34924                           tosh	equ	0xFFE
 34925                           tosl	equ	0xFFD
 34926                           pclath	equ	0xFFA
 34927                           tblptru	equ	0xFF8
 34928                           tblptrh	equ	0xFF7
 34929                           tblptrl	equ	0xFF6
 34930                           tablat	equ	0xFF5
 34931                           prodh	equ	0xFF4
 34932                           prodl	equ	0xFF3
 34933                           intcon	equ	0xFF2
 34934                           postinc0	equ	0xFEE
 34935                           wreg	equ	0xFE8
 34936                           indf1	equ	0xFE7
 34937                           postinc1	equ	0xFE6
 34938                           postdec1	equ	0xFE5
 34939                           plusw1	equ	0xFE3
 34940                           fsr1h	equ	0xFE2
 34941                           fsr1l	equ	0xFE1
 34942                           indf2	equ	0xFDF
 34943                           postinc2	equ	0xFDE
 34944                           postdec2	equ	0xFDD
 34945                           plusw2	equ	0xFDB
 34946                           fsr2h	equ	0xFDA
 34947                           fsr2l	equ	0xFD9
 34948                           status	equ	0xFD8
 34949                           
 34950 ;; *************** function __flash_compare_page_to_buffer *****************
 34951 ;; Defined at:
 34952 ;;		line 176 in file "flash.c"
 34953 ;; Parameters:    Size  Location     Type
 34954 ;;  page            2   19[BANK0 ] unsigned int 
 34955 ;;  buffer          1   21[BANK0 ] enum E6980
 34956 ;; Auto vars:     Size  Location     Type
 34957 ;;  command         4   27[BANK0 ] unsigned char [4]
 34958 ;;  status          2   25[BANK0 ] unsigned int 
 34959 ;; Return value:  Size  Location     Type
 34960 ;;                  1    wreg      enum E6984
 34961 ;; Registers used:
 34962 ;;		wreg, status,2, status,0, cstack
 34963 ;; Tracked objects:
 34964 ;;		On entry : 0/0
 34965 ;;		On exit  : 0/0
 34966 ;;		Unchanged: 0/0
 34967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34968 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34969 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34970 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34971 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34972 ;;Total ram usage:       12 bytes
 34973 ;; Hardware stack levels used:    1
 34974 ;; Hardware stack levels required when called:   13
 34975 ;; This function calls:
 34976 ;;		__flash_get_status
 34977 ;;		__flash_is_busy
 34978 ;;		_spi_tx
 34979 ;; This function is called by:
 34980 ;;		_flash_sector_write
 34981 ;;		_flash_partial_write
 34982 ;; This function uses a non-reentrant model
 34983 ;;
 34984                           
 34985                           	psect	text138
 34986  013AFA                     __ptext138:
 34987                           	opt stack 0
 34988  013AFA                     __flash_compare_page_to_buffer:
 34989                           	opt stack 13
 34990                           
 34991                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 34992                           
 34993                           ;incstack = 0
 34994  013AFA  ECD3  F0AA         	call	__flash_is_busy	;wreg free
 34995  013AFE  0900               	iorlw	0
 34996  013B00  A4D8               	btfss	status,2,c
 34997  013B02  D7FB               	goto	__flash_compare_page_to_buffer
 34998                           
 34999                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 35000  013B04  0100               	movlb	0	; () banked
 35001  013B06  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 35002  013B08  A4D8               	btfss	status,2,c
 35003  013B0A  D002               	goto	l1548
 35004                           
 35005                           ; BSR set to: 0
 35006                           ;flash.c: 186: command[0] = 0x60;
 35007  013B0C  0E60               	movlw	96
 35008  013B0E  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 35009  013B10                     l1548:
 35010                           
 35011                           ; BSR set to: 0
 35012                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 35013                           
 35014                           ; BSR set to: 0
 35015  013B10  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 35016  013B12  A4D8               	btfss	status,2,c
 35017  013B14  D002               	goto	l1549
 35018                           
 35019                           ; BSR set to: 0
 35020                           ;flash.c: 188: command[0] = 0x60;
 35021  013B16  0E60               	movlw	96
 35022  013B18  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 35023  013B1A                     l1549:
 35024                           
 35025                           ; BSR set to: 0
 35026                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 35027                           
 35028                           ; BSR set to: 0
 35029  013B1A  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 35030  013B1E  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 35031  013B22  0E07               	movlw	7
 35032  013B24  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 35033  013B26                     u9575:
 35034  013B26  90D8               	bcf	status,0,c
 35035  013B28  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 35036  013B2A  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 35037  013B2C  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 35038  013B2E  D7FB               	goto	u9575
 35039  013B30  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 35040  013B32  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 35041                           
 35042                           ; BSR set to: 0
 35043                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 35044  013B34  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 35045  013B36  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 35046  013B38  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 35047                           
 35048                           ;flash.c: 192: command[3] = 0x00;
 35049  013B3A  0E00               	movlw	0
 35050  013B3C  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 35051                           
 35052                           ; BSR set to: 0
 35053                           ;flash.c: 195: spi_tx(command, 4);
 35054  013B3E  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 35055  013B40  6F60               	movwf	spi_tx@data& (0+255),b
 35056  013B42  0E00               	movlw	high __flash_compare_page_to_buffer@command
 35057  013B44  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 35058  013B46  0E00               	movlw	0
 35059  013B48  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 35060  013B4A  0E04               	movlw	4
 35061  013B4C  6F62               	movwf	spi_tx@length& (0+255),b
 35062  013B4E  ECC8  F0A2         	call	_spi_tx	;wreg free
 35063  013B52  ECD3  F0AA         	call	__flash_is_busy	;wreg free
 35064  013B56  0900               	iorlw	0
 35065  013B58  A4D8               	btfss	status,2,c
 35066  013B5A  D7FB               	goto	l1551
 35067                           
 35068                           ;flash.c: 201: status = _flash_get_status();
 35069  013B5C  ECC8  F0A8         	call	__flash_get_status	;wreg free
 35070  013B60  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 35071  013B64  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 35072                           
 35073                           ;flash.c: 204: if(status & 0b0000000001000000)
 35074  013B68  0100               	movlb	0	; () banked
 35075  013B6A  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 35076  013B6C  D002               	goto	l1553
 35077                           
 35078                           ; BSR set to: 0
 35079                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 35080  013B6E  0E01               	movlw	1
 35081                           
 35082                           ; BSR set to: 0
 35083                           ;flash.c: 208: }
 35084                           
 35085                           ; BSR set to: 0
 35086  013B70  0012               	return	
 35087  013B72                     l1553:
 35088                           
 35089                           ; BSR set to: 0
 35090                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 35091                           
 35092                           ; BSR set to: 0
 35093  013B72  0E00               	movlw	0
 35094                           
 35095                           ; BSR set to: 0
 35096  013B74  0012               	return	
 35097  013B76                     __end_of__flash_compare_page_to_buffer:
 35098                           	opt stack 0
 35099                           tosu	equ	0xFFF
 35100                           tosh	equ	0xFFE
 35101                           tosl	equ	0xFFD
 35102                           pclath	equ	0xFFA
 35103                           tblptru	equ	0xFF8
 35104                           tblptrh	equ	0xFF7
 35105                           tblptrl	equ	0xFF6
 35106                           tablat	equ	0xFF5
 35107                           prodh	equ	0xFF4
 35108                           prodl	equ	0xFF3
 35109                           intcon	equ	0xFF2
 35110                           postinc0	equ	0xFEE
 35111                           wreg	equ	0xFE8
 35112                           indf1	equ	0xFE7
 35113                           postinc1	equ	0xFE6
 35114                           postdec1	equ	0xFE5
 35115                           plusw1	equ	0xFE3
 35116                           fsr1h	equ	0xFE2
 35117                           fsr1l	equ	0xFE1
 35118                           indf2	equ	0xFDF
 35119                           postinc2	equ	0xFDE
 35120                           postdec2	equ	0xFDD
 35121                           plusw2	equ	0xFDB
 35122                           fsr2h	equ	0xFDA
 35123                           fsr2l	equ	0xFD9
 35124                           status	equ	0xFD8
 35125                           
 35126 ;; *************** function _MSDReadHandler *****************
 35127 ;; Defined at:
 35128 ;;		line 1038 in file "usb_device_msd.c"
 35129 ;; Parameters:    Size  Location     Type
 35130 ;;		None
 35131 ;; Auto vars:     Size  Location     Type
 35132 ;;		None
 35133 ;; Return value:  Size  Location     Type
 35134 ;;                  1    wreg      unsigned char 
 35135 ;; Registers used:
 35136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35137 ;; Tracked objects:
 35138 ;;		On entry : 0/0
 35139 ;;		On exit  : 0/0
 35140 ;;		Unchanged: 0/0
 35141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35144 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35145 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35146 ;;Total ram usage:        4 bytes
 35147 ;; Hardware stack levels used:    1
 35148 ;; Hardware stack levels required when called:   16
 35149 ;; This function calls:
 35150 ;;		_ExternalFlash_SectorRead
 35151 ;;		_MSDCheckForErrorCases
 35152 ;;		_USBStallEndpoint
 35153 ;;		_USBTransferOnePacket
 35154 ;; This function is called by:
 35155 ;;		_MSDProcessCommandMediaPresent
 35156 ;; This function uses a non-reentrant model
 35157 ;;
 35158                           
 35159                           	psect	text139
 35160  00EEF6                     __ptext139:
 35161                           	opt stack 0
 35162  00EEF6                     _MSDReadHandler:
 35163                           	opt stack 10
 35164                           
 35165                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 35166                           
 35167                           ; BSR set to: 0
 35168                           ;incstack = 0
 35169  00EEF6  D0DF               	goto	l681
 35170  00EEF8                     l682:
 35171                           
 35172                           ; BSR set to: 1
 35173                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 35174  00EEF8  C211  F12E         	movff	_gblCBW+17,_LBA+3
 35175                           
 35176                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 35177  00EEFC  C212  F12D         	movff	_gblCBW+18,_LBA+2
 35178                           
 35179                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 35180  00EF00  C213  F12C         	movff	_gblCBW+19,_LBA+1
 35181                           
 35182                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 35183  00EF04  C214  F12B         	movff	_gblCBW+20,_LBA
 35184                           
 35185                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 35186  00EF08  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 35187                           
 35188                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 35189  00EF0C  C217  F145         	movff	_gblCBW+23,_TransferLength
 35190                           
 35191                           ; BSR set to: 1
 35192                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35193  00EF10  5145               	movf	_TransferLength& (0+255),w,b
 35194  00EF12  0100               	movlb	0	; () banked
 35195  00EF14  6F95               	movwf	??_MSDReadHandler& (0+255),b
 35196  00EF16  0101               	movlb	1	; () banked
 35197  00EF18  5146               	movf	(_TransferLength+1)& (0+255),w,b
 35198  00EF1A  0100               	movlb	0	; () banked
 35199  00EF1C  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 35200  00EF1E  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 35201  00EF20  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 35202  00EF22  0E09               	movlw	9
 35203  00EF24                     u11055:
 35204  00EF24  90D8               	bcf	status,0,c
 35205  00EF26  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 35206  00EF28  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 35207  00EF2A  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 35208  00EF2C  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 35209  00EF2E  2EE8               	decfsz	wreg,f,c
 35210  00EF30  D7F9               	goto	u11055
 35211  00EF32  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 35212  00EF36  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35213  00EF3A  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35214  00EF3E  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35215  00EF42  EC8B  F085         	call	_MSDCheckForErrorCases	;wreg free
 35216  00EF46  0900               	iorlw	0
 35217  00EF48  A4D8               	btfss	status,2,c
 35218  00EF4A  D0C7               	goto	l684
 35219                           
 35220                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 35221                           
 35222                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 35223  00EF4C  0E01               	movlw	1
 35224  00EF4E  0101               	movlb	1	; () banked
 35225  00EF50  6F61               	movwf	_MSDReadState& (0+255),b
 35226  00EF52                     
 35227                           ; BSR set to: 1
 35228                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 35229                           
 35230                           ; BSR set to: 1
 35231  00EF52  5145               	movf	_TransferLength& (0+255),w,b
 35232  00EF54  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 35233  00EF56  A4D8               	btfss	status,2,c
 35234  00EF58  D002               	goto	l686
 35235                           
 35236                           ; BSR set to: 1
 35237                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 35238  00EF5A  0E00               	movlw	0
 35239  00EF5C  D04A               	goto	L51
 35240  00EF5E                     l686:
 35241                           
 35242                           ; BSR set to: 1
 35243                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 35244                           
 35245                           ; BSR set to: 1
 35246  00EF5E  0745               	decf	_TransferLength& (0+255),f,b
 35247  00EF60  A0D8               	btfss	status,0,c
 35248  00EF62  0746               	decf	(_TransferLength+1)& (0+255),f,b
 35249                           
 35250                           ; BSR set to: 1
 35251                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 35252  00EF64  0E02               	movlw	2
 35253  00EF66  6F61               	movwf	_MSDReadState& (0+255),b
 35254  00EF68                     
 35255                           ; BSR set to: 1
 35256                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 35257                           
 35258                           ; BSR set to: 1
 35259  00EF68  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35260  00EF6A  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35261  00EF6C  B4D8               	btfsc	status,2,c
 35262  00EF6E  D006               	goto	l688
 35263                           
 35264                           ; BSR set to: 1
 35265  00EF70  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35266  00EF74  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35267  00EF78  BEDF               	btfsc	indf2,7,c
 35268  00EF7A  D0AF               	goto	l684
 35269  00EF7C                     l688:
 35270                           
 35271                           ; BSR set to: 1
 35272                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 35273                           
 35274                           ; BSR set to: 1
 35275  00EF7C  C29E  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 35276  00EF80  C29F  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 35277  00EF84  C12B  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 35278  00EF88  C12C  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 35279  00EF8C  C12D  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 35280  00EF90  C12E  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 35281  00EF94  0E00               	movlw	0
 35282  00EF96  0100               	movlb	0	; () banked
 35283  00EF98  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 35284  00EF9A  0E06               	movlw	6
 35285  00EF9C  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 35286  00EF9E  EE22  F095         	lfsr	2,_LUN+12
 35287  00EFA2  D801               	call	u11108
 35288  00EFA4  D00A               	goto	u11109
 35289  00EFA6                     u11108:
 35290  00EFA6  0005               	push	
 35291  00EFA8  6EFA               	movwf	pclath,c
 35292  00EFAA  50DE               	movf	postinc2,w,c
 35293  00EFAC  6EFD               	movwf	tosl,c
 35294  00EFAE  50DE               	movf	postinc2,w,c
 35295  00EFB0  6EFE               	movwf	tosh,c
 35296  00EFB2  50DE               	movf	postinc2,w,c
 35297  00EFB4  6EFF               	movwf	tosu,c
 35298  00EFB6  50FA               	movf	pclath,w,c
 35299  00EFB8  0012               	return		;indir
 35300  00EFBA                     u11109:
 35301  00EFBA  06E8               	decf	wreg,f,c
 35302  00EFBC  B4D8               	btfsc	status,2,c
 35303  00EFBE  D01B               	goto	l691
 35304                           
 35305                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 35306  00EFC0  0E64               	movlw	100
 35307  00EFC2  0101               	movlb	1	; () banked
 35308  00EFC4  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 35309  00EFC6  D002               	goto	l690
 35310                           
 35311                           ; BSR set to: 1
 35312                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 35313  00EFC8  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 35314                           
 35315                           ;usb_device_msd.c: 1088: break;
 35316  00EFCA  D087               	goto	l684
 35317  00EFCC                     l690:
 35318                           
 35319                           ; BSR set to: 1
 35320                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 35321                           
 35322                           ; BSR set to: 1
 35323  00EFCC  0E02               	movlw	2
 35324  00EFCE  010D               	movlb	13	; () banked
 35325  00EFD0  6F8C               	movwf	140,b	;volatile
 35326                           
 35327                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 35328  00EFD2  0101               	movlb	1	; () banked
 35329  00EFD4  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35330  00EFD6  0BF0               	andlw	-16
 35331  00EFD8  0903               	iorlw	3
 35332  00EFDA  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35333                           
 35334                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 35335  00EFDC  0E00               	movlw	0
 35336  00EFDE  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35337                           
 35338                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 35339  00EFE0  0E00               	movlw	0
 35340  00EFE2  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35341                           
 35342                           ; BSR set to: 1
 35343                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 35344  00EFE4  0E01               	movlw	1
 35345  00EFE6  0100               	movlb	0	; () banked
 35346  00EFE8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35347  00EFEA  0E02               	movlw	2
 35348  00EFEC  ECAB  F087         	call	_USBStallEndpoint
 35349  00EFF0  D05F               	goto	l12777
 35350  00EFF2                     L51:
 35351  00EFF2  6F61               	movwf	_MSDReadState& (0+255),b
 35352                           
 35353                           ;usb_device_msd.c: 1109: break;
 35354  00EFF4  D072               	goto	l684
 35355  00EFF6                     l691:
 35356                           
 35357                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 35358                           
 35359                           ; BSR set to: 1
 35360                           
 35361                           ; BSR set to: 1
 35362  00EFF6  0E01               	movlw	1
 35363  00EFF8  0101               	movlb	1	; () banked
 35364  00EFFA  272B               	addwf	_LBA& (0+255),f,b
 35365  00EFFC  0E00               	movlw	0
 35366  00EFFE  232C               	addwfc	(_LBA+1)& (0+255),f,b
 35367  00F000  232D               	addwfc	(_LBA+2)& (0+255),f,b
 35368  00F002  232E               	addwfc	(_LBA+3)& (0+255),f,b
 35369                           
 35370                           ; BSR set to: 1
 35371                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 35372  00F004  0E00               	movlw	0
 35373  00F006  010D               	movlb	13	; () banked
 35374  00F008  6F88               	movwf	136,b	;volatile
 35375  00F00A  0E02               	movlw	2
 35376  00F00C  6F89               	movwf	137,b	;volatile
 35377  00F00E  0E00               	movlw	0
 35378  00F010  6F8A               	movwf	138,b	;volatile
 35379  00F012  0E00               	movlw	0
 35380  00F014  6F8B               	movwf	139,b	;volatile
 35381                           
 35382                           ; BSR set to: 13
 35383                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 35384  00F016  0E00               	movlw	0
 35385  00F018  0101               	movlb	1	; () banked
 35386  00F01A  6F4D               	movwf	_ptrNextData& (0+255),b
 35387  00F01C  0E06               	movlw	6
 35388  00F01E  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 35389                           
 35390                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 35391  00F020  0E03               	movlw	3
 35392  00F022  6F61               	movwf	_MSDReadState& (0+255),b
 35393  00F024                     
 35394                           ; BSR set to: 1
 35395                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 35396                           
 35397                           ; BSR set to: 1
 35398  00F024  010D               	movlb	13	; () banked
 35399  00F026  5188               	movf	136,w,b	;volatile
 35400  00F028  1189               	iorwf	137,w,b	;volatile
 35401  00F02A  118A               	iorwf	138,w,b	;volatile
 35402  00F02C  118B               	iorwf	139,w,b	;volatile
 35403  00F02E  A4D8               	btfss	status,2,c
 35404  00F030  D002               	goto	l693
 35405                           
 35406                           ; BSR set to: 13
 35407                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 35408  00F032  0E01               	movlw	1
 35409  00F034  D03E               	goto	L53
 35410  00F036                     l693:
 35411                           
 35412                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 35413                           
 35414                           ; BSR set to: 1
 35415  00F036  0E04               	movlw	4
 35416  00F038  0101               	movlb	1	; () banked
 35417  00F03A  6F61               	movwf	_MSDReadState& (0+255),b
 35418  00F03C                     
 35419                           ; BSR set to: 1
 35420                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 35421                           
 35422                           ; BSR set to: 1
 35423  00F03C  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35424  00F03E  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35425  00F040  B4D8               	btfsc	status,2,c
 35426  00F042  D006               	goto	l695
 35427                           
 35428                           ; BSR set to: 1
 35429  00F044  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35430  00F048  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35431  00F04C  BEDF               	btfsc	indf2,7,c
 35432  00F04E  D045               	goto	l684
 35433  00F050                     l695:
 35434                           
 35435                           ; BSR set to: 1
 35436                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 35437                           
 35438                           ; BSR set to: 1
 35439  00F050  0E01               	movlw	1
 35440  00F052  0100               	movlb	0	; () banked
 35441  00F054  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35442  00F056  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35443  00F05A  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35444  00F05E  0E40               	movlw	64
 35445  00F060  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35446  00F062  0E02               	movlw	2
 35447  00F064  EC30  F088         	call	_USBTransferOnePacket
 35448  00F068  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35449  00F06C  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35450                           
 35451                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 35452  00F070  0E03               	movlw	3
 35453  00F072  0101               	movlb	1	; () banked
 35454  00F074  6F61               	movwf	_MSDReadState& (0+255),b
 35455                           
 35456                           ; BSR set to: 1
 35457                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 35458  00F076  0E40               	movlw	64
 35459  00F078  0102               	movlb	2	; () banked
 35460  00F07A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35461  00F07C  0E00               	movlw	0
 35462  00F07E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35463  00F080  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35464  00F082  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35465                           
 35466                           ; BSR set to: 2
 35467                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 35468  00F084  0E40               	movlw	64
 35469  00F086  010D               	movlb	13	; () banked
 35470  00F088  5F88               	subwf	136,f,b	;volatile
 35471  00F08A  0E00               	movlw	0
 35472  00F08C  5B89               	subwfb	137,f,b	;volatile
 35473  00F08E  5B8A               	subwfb	138,f,b	;volatile
 35474  00F090  5B8B               	subwfb	139,f,b	;volatile
 35475                           
 35476                           ; BSR set to: 13
 35477                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 35478  00F092  0E40               	movlw	64
 35479  00F094  0101               	movlb	1	; () banked
 35480  00F096  274D               	addwf	_ptrNextData& (0+255),f,b
 35481  00F098  0E00               	movlw	0
 35482  00F09A  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 35483                           
 35484                           ;usb_device_msd.c: 1149: break;
 35485  00F09C  D01E               	goto	l684
 35486  00F09E                     
 35487                           ; BSR set to: 1
 35488                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 35489                           
 35490                           ; BSR set to: 1
 35491  00F09E  0E02               	movlw	2
 35492  00F0A0  010D               	movlb	13	; () banked
 35493  00F0A2  6F8C               	movwf	140,b	;volatile
 35494                           
 35495                           ; BSR set to: 13
 35496                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 35497  00F0A4  0E01               	movlw	1
 35498  00F0A6  0100               	movlb	0	; () banked
 35499  00F0A8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35500  00F0AA  0E02               	movlw	2
 35501  00F0AC  ECAB  F087         	call	_USBStallEndpoint
 35502  00F0B0                     l12777:
 35503                           
 35504                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 35505  00F0B0  0E00               	movlw	0
 35506  00F0B2                     L53:
 35507  00F0B2  0101               	movlb	1	; () banked
 35508  00F0B4  D79E               	goto	L51
 35509  00F0B6                     l681:
 35510                           
 35511                           ; BSR set to: 1
 35512  00F0B6  0101               	movlb	1	; () banked
 35513  00F0B8  5161               	movf	_MSDReadState& (0+255),w,b
 35514                           
 35515                           ; Switch size 1, requested type "space"
 35516                           ; Number of cases is 5, Range of values is 0 to 4
 35517                           ; switch strategies available:
 35518                           ; Name         Instructions Cycles
 35519                           ; simple_byte           16     9 (average)
 35520                           ;	Chosen strategy is simple_byte
 35521  00F0BA  0A00               	xorlw	0	; case 0
 35522  00F0BC  B4D8               	btfsc	status,2,c
 35523  00F0BE  D71C               	goto	l682
 35524  00F0C0  0A01               	xorlw	1	; case 1
 35525  00F0C2  B4D8               	btfsc	status,2,c
 35526  00F0C4  D746               	goto	l685
 35527  00F0C6  0A03               	xorlw	3	; case 2
 35528  00F0C8  B4D8               	btfsc	status,2,c
 35529  00F0CA  D74E               	goto	l687
 35530  00F0CC  0A01               	xorlw	1	; case 3
 35531  00F0CE  B4D8               	btfsc	status,2,c
 35532  00F0D0  D7A9               	goto	l692
 35533  00F0D2  0A07               	xorlw	7	; case 4
 35534  00F0D4  B4D8               	btfsc	status,2,c
 35535  00F0D6  D7B2               	goto	l694
 35536  00F0D8  D7E2               	goto	l696
 35537  00F0DA                     l684:
 35538                           
 35539                           ;usb_device_msd.c: 1161: return MSDReadState;
 35540                           
 35541                           ; BSR set to: 1
 35542  00F0DA  0101               	movlb	1	; () banked
 35543  00F0DC  5161               	movf	_MSDReadState& (0+255),w,b
 35544  00F0DE  0012               	return	
 35545  00F0E0                     __end_of_MSDReadHandler:
 35546                           	opt stack 0
 35547                           tosu	equ	0xFFF
 35548                           tosh	equ	0xFFE
 35549                           tosl	equ	0xFFD
 35550                           pclath	equ	0xFFA
 35551                           tblptru	equ	0xFF8
 35552                           tblptrh	equ	0xFF7
 35553                           tblptrl	equ	0xFF6
 35554                           tablat	equ	0xFF5
 35555                           prodh	equ	0xFF4
 35556                           prodl	equ	0xFF3
 35557                           intcon	equ	0xFF2
 35558                           postinc0	equ	0xFEE
 35559                           wreg	equ	0xFE8
 35560                           indf1	equ	0xFE7
 35561                           postinc1	equ	0xFE6
 35562                           postdec1	equ	0xFE5
 35563                           plusw1	equ	0xFE3
 35564                           fsr1h	equ	0xFE2
 35565                           fsr1l	equ	0xFE1
 35566                           indf2	equ	0xFDF
 35567                           postinc2	equ	0xFDE
 35568                           postdec2	equ	0xFDD
 35569                           plusw2	equ	0xFDB
 35570                           fsr2h	equ	0xFDA
 35571                           fsr2l	equ	0xFD9
 35572                           status	equ	0xFD8
 35573                           
 35574 ;; *************** function _MSDCheckForErrorCases *****************
 35575 ;; Defined at:
 35576 ;;		line 1434 in file "usb_device_msd.c"
 35577 ;; Parameters:    Size  Location     Type
 35578 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 35579 ;; Auto vars:     Size  Location     Type
 35580 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 35581 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 35582 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 35583 ;; Return value:  Size  Location     Type
 35584 ;;                  1    wreg      unsigned char 
 35585 ;; Registers used:
 35586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35587 ;; Tracked objects:
 35588 ;;		On entry : 0/0
 35589 ;;		On exit  : 0/0
 35590 ;;		Unchanged: 0/0
 35591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35592 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35593 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35595 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35596 ;;Total ram usage:        7 bytes
 35597 ;; Hardware stack levels used:    1
 35598 ;; Hardware stack levels required when called:   12
 35599 ;; This function calls:
 35600 ;;		_MSDErrorHandler
 35601 ;; This function is called by:
 35602 ;;		_MSDProcessCommandMediaPresent
 35603 ;;		_MSDReadHandler
 35604 ;;		_MSDWriteHandler
 35605 ;; This function uses a non-reentrant model
 35606 ;;
 35607                           
 35608                           	psect	text140
 35609  010B16                     __ptext140:
 35610                           	opt stack 0
 35611  010B16                     _MSDCheckForErrorCases:
 35612                           	opt stack 13
 35613                           
 35614                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 35615                           
 35616                           ; BSR set to: 1
 35617                           ;incstack = 0
 35618  010B16  0100               	movlb	0	; () banked
 35619  010B18  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35620  010B1A  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35621  010B1C  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35622  010B1E  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35623  010B20  A4D8               	btfss	status,2,c
 35624  010B22  D002               	goto	l726
 35625                           
 35626                           ; BSR set to: 0
 35627                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 35628  010B24  0E01               	movlw	1
 35629  010B26  D001               	goto	L54
 35630  010B28                     l726:
 35631                           
 35632                           ; BSR set to: 0
 35633                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 35634                           
 35635                           ; BSR set to: 0
 35636  010B28  0E00               	movlw	0
 35637  010B2A                     L54:
 35638  010B2A  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 35639                           
 35640                           ; BSR set to: 0
 35641                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 35642                           
 35643                           ; BSR set to: 0
 35644  010B2C  0101               	movlb	1	; () banked
 35645  010B2E  055C               	decf	_MSDHostNoData& (0+255),w,b
 35646  010B30  A4D8               	btfss	status,2,c
 35647  010B32  D006               	goto	l728
 35648                           
 35649                           ; BSR set to: 1
 35650  010B34  0100               	movlb	0	; () banked
 35651  010B36  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35652  010B38  A4D8               	btfss	status,2,c
 35653  010B3A  D002               	goto	l728
 35654                           
 35655                           ; BSR set to: 0
 35656                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 35657  010B3C  0E00               	movlw	0
 35658                           
 35659                           ; BSR set to: 0
 35660  010B3E  0012               	return	
 35661  010B40                     l728:
 35662                           
 35663                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 35664                           
 35665                           ; BSR set to: 0
 35666  010B40  0100               	movlb	0	; () banked
 35667  010B42  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35668  010B44  0102               	movlb	2	; () banked
 35669  010B46  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 35670  010B48  E120               	bnz	l12421
 35671  010B4A  0100               	movlb	0	; () banked
 35672  010B4C  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35673  010B4E  0102               	movlb	2	; () banked
 35674  010B50  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 35675  010B52  E11B               	bnz	l12421
 35676  010B54  0100               	movlb	0	; () banked
 35677  010B56  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35678  010B58  0102               	movlb	2	; () banked
 35679  010B5A  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 35680  010B5C  E116               	bnz	l12421
 35681  010B5E  0100               	movlb	0	; () banked
 35682  010B60  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35683  010B62  0102               	movlb	2	; () banked
 35684  010B64  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 35685  010B66  A4D8               	btfss	status,2,c
 35686  010B68  D010               	goto	l734
 35687                           
 35688                           ; BSR set to: 2
 35689                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 35690  010B6A  0101               	movlb	1	; () banked
 35691  010B6C  0563               	decf	_MSD_State& (0+255),w,b
 35692  010B6E  A4D8               	btfss	status,2,c
 35693  010B70  D006               	goto	l731
 35694                           
 35695                           ; BSR set to: 1
 35696                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 35697  010B72  0E2A               	movlw	42
 35698  010B74  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35699  010B76  B4D8               	btfsc	status,2,c
 35700  010B78  D008               	goto	l734
 35701                           
 35702                           ; BSR set to: 1
 35703                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 35704  010B7A  0E00               	movlw	0
 35705                           
 35706                           ; BSR set to: 1
 35707  010B7C  0012               	return	
 35708  010B7E                     l731:
 35709                           
 35710                           ; BSR set to: 1
 35711                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 35712                           
 35713                           ; BSR set to: 1
 35714  010B7E  0E2A               	movlw	42
 35715  010B80  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35716  010B82  A4D8               	btfss	status,2,c
 35717  010B84  D002               	goto	l734
 35718                           
 35719                           ; BSR set to: 1
 35720                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 35721  010B86  0E00               	movlw	0
 35722                           
 35723                           ; BSR set to: 1
 35724  010B88  0012               	return	
 35725  010B8A                     l734:
 35726  010B8A                     l12421:
 35727                           
 35728                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 35729  010B8A  0102               	movlb	2	; () banked
 35730  010B8C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35731  010B8E  0100               	movlb	0	; () banked
 35732  010B90  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35733  010B92  0102               	movlb	2	; () banked
 35734  010B94  5109               	movf	(_gblCBW+9)& (0+255),w,b
 35735  010B96  0100               	movlb	0	; () banked
 35736  010B98  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35737  010B9A  0102               	movlb	2	; () banked
 35738  010B9C  510A               	movf	(_gblCBW+10)& (0+255),w,b
 35739  010B9E  0100               	movlb	0	; () banked
 35740  010BA0  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35741  010BA2  0102               	movlb	2	; () banked
 35742  010BA4  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35743  010BA6  0100               	movlb	0	; () banked
 35744  010BA8  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35745  010BAA  B0D8               	btfsc	status,0,c
 35746  010BAC  D002               	goto	l735
 35747                           
 35748                           ; BSR set to: 0
 35749                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 35750  010BAE  0E01               	movlw	1
 35751  010BB0  D001               	goto	L55
 35752  010BB2                     l735:
 35753                           
 35754                           ; BSR set to: 0
 35755                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 35756                           
 35757                           ; BSR set to: 0
 35758  010BB2  0E00               	movlw	0
 35759  010BB4                     L55:
 35760  010BB4  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 35761                           
 35762                           ; BSR set to: 0
 35763                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 35764                           
 35765                           ; BSR set to: 0
 35766  010BB6  0E02               	movlw	2
 35767  010BB8  0101               	movlb	1	; () banked
 35768  010BBA  1963               	xorwf	_MSD_State& (0+255),w,b
 35769  010BBC  A4D8               	btfss	status,2,c
 35770  010BBE  D017               	goto	l737
 35771                           
 35772                           ; BSR set to: 1
 35773                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 35774  010BC0  0E2A               	movlw	42
 35775  010BC2  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35776  010BC4  B4D8               	btfsc	status,2,c
 35777  010BC6  D006               	goto	l738
 35778                           
 35779                           ; BSR set to: 1
 35780  010BC8  0100               	movlb	0	; () banked
 35781  010BCA  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35782  010BCC  A4D8               	btfss	status,2,c
 35783  010BCE  D002               	goto	l738
 35784  010BD0                     u10730:
 35785                           
 35786                           ; BSR set to: 0
 35787                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 35788  010BD0  0E05               	movlw	5
 35789  010BD2  D025               	goto	L60
 35790  010BD4                     l738:
 35791                           
 35792                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 35793                           
 35794                           ; BSR set to: 0
 35795  010BD4  0101               	movlb	1	; () banked
 35796  010BD6  055C               	decf	_MSDHostNoData& (0+255),w,b
 35797  010BD8  B4D8               	btfsc	status,2,c
 35798  010BDA  D014               	goto	u10780
 35799                           
 35800                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 35801                           
 35802                           ; BSR set to: 0
 35803                           
 35804                           ; BSR set to: 1
 35805                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 35806  010BDC  0100               	movlb	0	; () banked
 35807  010BDE  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35808  010BE0  B4D8               	btfsc	status,2,c
 35809  010BE2  D003               	goto	u10760
 35810                           
 35811                           ; BSR set to: 0
 35812                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 35813                           
 35814                           ; BSR set to: 0
 35815                           
 35816                           ; BSR set to: 0
 35817                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 35818  010BE4  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35819  010BE6  A4D8               	btfss	status,2,c
 35820  010BE8  D7F3               	goto	u10730
 35821  010BEA                     u10760:
 35822                           
 35823                           ; BSR set to: 0
 35824                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 35825  010BEA  0E04               	movlw	4
 35826  010BEC  D018               	goto	L60
 35827  010BEE                     l737:
 35828                           
 35829                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 35830                           
 35831                           ; BSR set to: 0
 35832  010BEE  0E2A               	movlw	42
 35833  010BF0  0101               	movlb	1	; () banked
 35834  010BF2  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35835  010BF4  A4D8               	btfss	status,2,c
 35836  010BF6  D002               	goto	l747
 35837                           
 35838                           ; BSR set to: 1
 35839                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 35840  010BF8  0E03               	movlw	3
 35841  010BFA  D005               	goto	L59
 35842  010BFC                     l747:
 35843                           
 35844                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 35845                           
 35846                           ; BSR set to: 0
 35847  010BFC  0101               	movlb	1	; () banked
 35848  010BFE  055C               	decf	_MSDHostNoData& (0+255),w,b
 35849  010C00  A4D8               	btfss	status,2,c
 35850  010C02  D003               	goto	l749
 35851  010C04                     u10780:
 35852                           
 35853                           ; BSR set to: 1
 35854                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 35855  010C04  0E01               	movlw	1
 35856  010C06                     L59:
 35857  010C06  0100               	movlb	0	; () banked
 35858  010C08  D00A               	goto	L60
 35859  010C0A                     l749:
 35860                           
 35861                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 35862                           
 35863                           ; BSR set to: 0
 35864  010C0A  0100               	movlb	0	; () banked
 35865  010C0C  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35866  010C0E  B4D8               	btfsc	status,2,c
 35867  010C10  D003               	goto	u10800
 35868                           
 35869                           ; BSR set to: 0
 35870                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 35871                           
 35872                           ; BSR set to: 0
 35873                           
 35874                           ; BSR set to: 0
 35875                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 35876  010C12  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35877  010C14  A4D8               	btfss	status,2,c
 35878  010C16  D002               	goto	l753
 35879  010C18                     u10800:
 35880                           
 35881                           ; BSR set to: 0
 35882                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 35883  010C18  0E02               	movlw	2
 35884  010C1A  D001               	goto	L60
 35885  010C1C                     l753:
 35886                           
 35887                           ; BSR set to: 0
 35888                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 35889                           
 35890                           ; BSR set to: 0
 35891  010C1C  0E03               	movlw	3
 35892  010C1E                     L60:
 35893  010C1E  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 35894                           
 35895                           ; BSR set to: 0
 35896                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 35897                           
 35898                           ; BSR set to: 0
 35899                           
 35900                           ; BSR set to: 0
 35901                           
 35902                           ; BSR set to: 0
 35903                           
 35904                           ; BSR set to: 0
 35905                           
 35906                           ; BSR set to: 0
 35907  010C20  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35908  010C22  ECFE  F084         	call	_MSDErrorHandler
 35909                           
 35910                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 35911  010C26  0100               	movlb	0	; () banked
 35912  010C28  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35913  010C2A  0012               	return	
 35914  010C2C                     __end_of_MSDCheckForErrorCases:
 35915                           	opt stack 0
 35916                           tosu	equ	0xFFF
 35917                           tosh	equ	0xFFE
 35918                           tosl	equ	0xFFD
 35919                           pclath	equ	0xFFA
 35920                           tblptru	equ	0xFF8
 35921                           tblptrh	equ	0xFF7
 35922                           tblptrl	equ	0xFF6
 35923                           tablat	equ	0xFF5
 35924                           prodh	equ	0xFF4
 35925                           prodl	equ	0xFF3
 35926                           intcon	equ	0xFF2
 35927                           postinc0	equ	0xFEE
 35928                           wreg	equ	0xFE8
 35929                           indf1	equ	0xFE7
 35930                           postinc1	equ	0xFE6
 35931                           postdec1	equ	0xFE5
 35932                           plusw1	equ	0xFE3
 35933                           fsr1h	equ	0xFE2
 35934                           fsr1l	equ	0xFE1
 35935                           indf2	equ	0xFDF
 35936                           postinc2	equ	0xFDE
 35937                           postdec2	equ	0xFDD
 35938                           plusw2	equ	0xFDB
 35939                           fsr2h	equ	0xFDA
 35940                           fsr2l	equ	0xFD9
 35941                           status	equ	0xFD8
 35942                           
 35943 ;; *************** function _MSDErrorHandler *****************
 35944 ;; Defined at:
 35945 ;;		line 1577 in file "usb_device_msd.c"
 35946 ;; Parameters:    Size  Location     Type
 35947 ;;  ErrorCase       1    wreg     unsigned char 
 35948 ;; Auto vars:     Size  Location     Type
 35949 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 35950 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 35951 ;; Return value:  Size  Location     Type
 35952 ;;                  1    wreg      void 
 35953 ;; Registers used:
 35954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35955 ;; Tracked objects:
 35956 ;;		On entry : 0/0
 35957 ;;		On exit  : 0/0
 35958 ;;		Unchanged: 0/0
 35959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35963 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35964 ;;Total ram usage:        2 bytes
 35965 ;; Hardware stack levels used:    1
 35966 ;; Hardware stack levels required when called:   11
 35967 ;; This function calls:
 35968 ;;		_ResetSenseData
 35969 ;;		_USBStallEndpoint
 35970 ;; This function is called by:
 35971 ;;		_MSDProcessCommandMediaAbsent
 35972 ;;		_MSDProcessCommandMediaPresent
 35973 ;;		_MSDCheckForErrorCases
 35974 ;; This function uses a non-reentrant model
 35975 ;;
 35976                           
 35977                           	psect	text141
 35978  0109FC                     __ptext141:
 35979                           	opt stack 0
 35980  0109FC                     _MSDErrorHandler:
 35981                           	opt stack 13
 35982                           
 35983                           ;incstack = 0
 35984                           ;MSDErrorHandler@ErrorCase stored from wreg
 35985  0109FC  0100               	movlb	0	; () banked
 35986  0109FE  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 35987                           
 35988                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 35989  010A00  0101               	movlb	1	; () banked
 35990  010A02  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35991  010A04  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35992  010A06  B4D8               	btfsc	status,2,c
 35993  010A08  D006               	goto	u9810
 35994                           
 35995                           ; BSR set to: 1
 35996  010A0A  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35997  010A0E  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35998  010A12  BEDF               	btfsc	indf2,7,c
 35999  010A14  0012               	return	
 36000  010A16                     u9810:
 36001                           
 36002                           ; BSR set to: 1
 36003                           
 36004                           ; BSR set to: 1
 36005  010A16  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 36006  010A18  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36007  010A1A  B4D8               	btfsc	status,2,c
 36008  010A1C  D006               	goto	l757
 36009                           
 36010                           ; BSR set to: 1
 36011  010A1E  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36012  010A22  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36013  010A26  BEDF               	btfsc	indf2,7,c
 36014  010A28  0012               	return	
 36015  010A2A                     l757:
 36016                           
 36017                           ; BSR set to: 1
 36018                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 36019  010A2A  C163  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 36020                           
 36021                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 36022  010A2E  6962               	setf	_MSDCommandState& (0+255),b
 36023                           
 36024                           ; BSR set to: 1
 36025                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 36026  010A30  0E00               	movlw	0
 36027  010A32  6F61               	movwf	_MSDReadState& (0+255),b
 36028                           
 36029                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 36030  010A34  0E00               	movlw	0
 36031  010A36  6F60               	movwf	_MSDWriteState& (0+255),b
 36032                           
 36033                           ; BSR set to: 1
 36034                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 36035  010A38  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 36036  010A3C  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 36037  010A40  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 36038  010A44  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 36039                           
 36040                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 36041  010A48  0E01               	movlw	1
 36042  010A4A  010D               	movlb	13	; () banked
 36043  010A4C  6F8C               	movwf	140,b	;volatile
 36044                           
 36045                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 36046  010A4E  0E03               	movlw	3
 36047  010A50  0101               	movlb	1	; () banked
 36048  010A52  6F63               	movwf	_MSD_State& (0+255),b
 36049                           
 36050                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 36051  010A54  D04B               	goto	l763
 36052  010A56                     
 36053                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 36054                           
 36055                           ; BSR set to: 1
 36056  010A56  0E02               	movlw	2
 36057  010A58  010D               	movlb	13	; () banked
 36058  010A5A  6F8C               	movwf	140,b	;volatile
 36059                           
 36060                           ;usb_device_msd.c: 1607: break;
 36061  010A5C  0012               	return	
 36062  010A5E                     
 36063                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 36064                           
 36065                           ; BSR set to: 13
 36066  010A5E  0E01               	movlw	1
 36067  010A60  0100               	movlb	0	; () banked
 36068  010A62  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36069  010A64  0E02               	movlw	2
 36070  010A66  ECAB  F087         	call	_USBStallEndpoint
 36071                           
 36072                           ;usb_device_msd.c: 1611: break;
 36073  010A6A  0012               	return	
 36074  010A6C                     
 36075                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 36076  010A6C  0E02               	movlw	2
 36077  010A6E  010D               	movlb	13	; () banked
 36078  010A70  6F8C               	movwf	140,b	;volatile
 36079                           
 36080                           ; BSR set to: 13
 36081                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 36082  010A72  0E01               	movlw	1
 36083  010A74  0100               	movlb	0	; () banked
 36084  010A76  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36085  010A78  0E02               	movlw	2
 36086  010A7A  ECAB  F087         	call	_USBStallEndpoint
 36087                           
 36088                           ;usb_device_msd.c: 1616: break;
 36089  010A7E  0012               	return	
 36090  010A80                     
 36091                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 36092  010A80  0E00               	movlw	0
 36093  010A82  0100               	movlb	0	; () banked
 36094  010A84  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36095  010A86  0E02               	movlw	2
 36096  010A88  ECAB  F087         	call	_USBStallEndpoint
 36097                           
 36098                           ;usb_device_msd.c: 1620: break;
 36099  010A8C  0012               	return	
 36100  010A8E                     
 36101                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 36102  010A8E  0E02               	movlw	2
 36103  010A90  010D               	movlb	13	; () banked
 36104  010A92  6F8C               	movwf	140,b	;volatile
 36105                           
 36106                           ; BSR set to: 13
 36107                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 36108  010A94  0E00               	movlw	0
 36109  010A96  0100               	movlb	0	; () banked
 36110  010A98  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36111  010A9A  0E02               	movlw	2
 36112  010A9C  ECAB  F087         	call	_USBStallEndpoint
 36113                           
 36114                           ;usb_device_msd.c: 1625: break;
 36115  010AA0  0012               	return	
 36116  010AA2                     
 36117                           ;usb_device_msd.c: 1628: ResetSenseData();
 36118  010AA2  ECF5  F0A0         	call	_ResetSenseData	;wreg free
 36119                           
 36120                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 36121  010AA6  0101               	movlb	1	; () banked
 36122  010AA8  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 36123  010AAA  0BF0               	andlw	-16
 36124  010AAC  0905               	iorlw	5
 36125  010AAE  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 36126                           
 36127                           ; BSR set to: 1
 36128                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 36129  010AB0  0E20               	movlw	32
 36130  010AB2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36131                           
 36132                           ; BSR set to: 1
 36133                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 36134  010AB4  0E00               	movlw	0
 36135  010AB6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36136                           
 36137                           ; BSR set to: 1
 36138                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 36139  010AB8  0E02               	movlw	2
 36140  010ABA  0100               	movlb	0	; () banked
 36141  010ABC  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 36142  010ABE  A4D8               	btfss	status,2,c
 36143  010AC0  D00E               	goto	l771
 36144                           
 36145                           ; BSR set to: 0
 36146  010AC2  0102               	movlb	2	; () banked
 36147  010AC4  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36148  010AC6  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36149  010AC8  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36150  010ACA  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 36151  010ACC  B4D8               	btfsc	status,2,c
 36152  010ACE  D007               	goto	l771
 36153                           
 36154                           ; BSR set to: 2
 36155                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 36156  010AD0  0E00               	movlw	0
 36157  010AD2  0100               	movlb	0	; () banked
 36158  010AD4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36159  010AD6  0E02               	movlw	2
 36160  010AD8  ECAB  F087         	call	_USBStallEndpoint
 36161                           
 36162                           ;usb_device_msd.c: 1636: }
 36163  010ADC  0012               	return	
 36164  010ADE                     l771:
 36165                           
 36166                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 36167  010ADE  0E01               	movlw	1
 36168  010AE0  0100               	movlb	0	; () banked
 36169  010AE2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36170  010AE4  0E02               	movlw	2
 36171  010AE6  ECAB  F087         	call	_USBStallEndpoint
 36172                           
 36173                           ;usb_device_msd.c: 1644: }
 36174                           
 36175                           ;usb_device_msd.c: 1643: break;
 36176                           
 36177                           ;usb_device_msd.c: 1642: default:
 36178                           
 36179                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 36180  010AEA  0012               	return	
 36181  010AEC                     l763:
 36182  010AEC  0100               	movlb	0	; () banked
 36183  010AEE  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 36184                           
 36185                           ; Switch size 1, requested type "space"
 36186                           ; Number of cases is 6, Range of values is 1 to 127
 36187                           ; switch strategies available:
 36188                           ; Name         Instructions Cycles
 36189                           ; simple_byte           19    10 (average)
 36190                           ;	Chosen strategy is simple_byte
 36191  010AF0  0A01               	xorlw	1	; case 1
 36192  010AF2  B4D8               	btfsc	status,2,c
 36193  010AF4  D7B0               	goto	l764
 36194  010AF6  0A03               	xorlw	3	; case 2
 36195  010AF8  B4D8               	btfsc	status,2,c
 36196  010AFA  D7B1               	goto	l766
 36197  010AFC  0A01               	xorlw	1	; case 3
 36198  010AFE  B4D8               	btfsc	status,2,c
 36199  010B00  D7B5               	goto	l767
 36200  010B02  0A07               	xorlw	7	; case 4
 36201  010B04  B4D8               	btfsc	status,2,c
 36202  010B06  D7BC               	goto	l768
 36203  010B08  0A01               	xorlw	1	; case 5
 36204  010B0A  B4D8               	btfsc	status,2,c
 36205  010B0C  D7C0               	goto	l769
 36206  010B0E  0A7A               	xorlw	122	; case 127
 36207  010B10  A4D8               	btfss	status,2,c
 36208  010B12  0012               	return	
 36209  010B14  D7C6               	goto	l770
 36210  010B16                     __end_of_MSDErrorHandler:
 36211                           	opt stack 0
 36212                           tosu	equ	0xFFF
 36213                           tosh	equ	0xFFE
 36214                           tosl	equ	0xFFD
 36215                           pclath	equ	0xFFA
 36216                           tblptru	equ	0xFF8
 36217                           tblptrh	equ	0xFF7
 36218                           tblptrl	equ	0xFF6
 36219                           tablat	equ	0xFF5
 36220                           prodh	equ	0xFF4
 36221                           prodl	equ	0xFF3
 36222                           intcon	equ	0xFF2
 36223                           postinc0	equ	0xFEE
 36224                           wreg	equ	0xFE8
 36225                           indf1	equ	0xFE7
 36226                           postinc1	equ	0xFE6
 36227                           postdec1	equ	0xFE5
 36228                           plusw1	equ	0xFE3
 36229                           fsr1h	equ	0xFE2
 36230                           fsr1l	equ	0xFE1
 36231                           indf2	equ	0xFDF
 36232                           postinc2	equ	0xFDE
 36233                           postdec2	equ	0xFDD
 36234                           plusw2	equ	0xFDB
 36235                           fsr2h	equ	0xFDA
 36236                           fsr2l	equ	0xFD9
 36237                           status	equ	0xFD8
 36238                           
 36239 ;; *************** function _USBStallEndpoint *****************
 36240 ;; Defined at:
 36241 ;;		line 1073 in file "usb_device.c"
 36242 ;; Parameters:    Size  Location     Type
 36243 ;;  ep              1    wreg     unsigned char 
 36244 ;;  dir             1    0[BANK0 ] unsigned char 
 36245 ;; Auto vars:     Size  Location     Type
 36246 ;;  ep              1    5[BANK0 ] unsigned char 
 36247 ;;  p               2    6[BANK0 ] PTR struct __BDT
 36248 ;;		 -> BDT(48), 
 36249 ;; Return value:  Size  Location     Type
 36250 ;;                  1    wreg      void 
 36251 ;; Registers used:
 36252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36253 ;; Tracked objects:
 36254 ;;		On entry : 0/0
 36255 ;;		On exit  : 0/0
 36256 ;;		Unchanged: 0/0
 36257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36258 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36259 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36260 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36261 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36262 ;;Total ram usage:        8 bytes
 36263 ;; Hardware stack levels used:    1
 36264 ;; Hardware stack levels required when called:   10
 36265 ;; This function calls:
 36266 ;;		Nothing
 36267 ;; This function is called by:
 36268 ;;		_MSDTasks
 36269 ;;		_MSDReadHandler
 36270 ;;		_MSDWriteHandler
 36271 ;;		_MSDErrorHandler
 36272 ;; This function uses a non-reentrant model
 36273 ;;
 36274                           
 36275                           	psect	text142
 36276  010F56                     __ptext142:
 36277                           	opt stack 0
 36278  010F56                     _USBStallEndpoint:
 36279                           	opt stack 18
 36280                           
 36281                           ;incstack = 0
 36282                           ;USBStallEndpoint@ep stored from wreg
 36283  010F56  0100               	movlb	0	; () banked
 36284  010F58  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 36285                           
 36286                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 36287  010F5A  0100               	movlb	0	; () banked
 36288  010F5C  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36289  010F5E  A4D8               	btfss	status,2,c
 36290  010F60  D02B               	goto	l192
 36291                           
 36292                           ; BSR set to: 0
 36293                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 36294  010F62  EE20 F001          	lfsr	2,1
 36295  010F66  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36296  010F68  26D9               	addwf	fsr2l,f,c
 36297  010F6A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36298  010F6C  22DA               	addwfc	fsr2h,f,c
 36299  010F6E  0E08               	movlw	8
 36300  010F70  6EDF               	movwf	indf2,c
 36301                           
 36302                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36303  010F72  EE20 F002          	lfsr	2,2
 36304  010F76  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36305  010F78  26D9               	addwf	fsr2l,f,c
 36306  010F7A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36307  010F7C  22DA               	addwfc	fsr2h,f,c
 36308  010F7E  0E30               	movlw	48
 36309  010F80  6EDE               	movwf	postinc2,c
 36310  010F82  0E0D               	movlw	13
 36311  010F84  6EDD               	movwf	postdec2,c
 36312                           
 36313                           ; BSR set to: 0
 36314                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36315  010F86  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36316  010F8A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36317  010F8E  0E0C               	movlw	12
 36318  010F90  6EDF               	movwf	indf2,c
 36319                           
 36320                           ; BSR set to: 0
 36321                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36322  010F92  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36323  010F96  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36324  010F9A  0E00               	movlw	0
 36325  010F9C  8EDB               	bsf	plusw2,7,c
 36326                           
 36327                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 36328  010F9E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36329  010FA2  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36330  010FA6  0E04               	movlw	4
 36331  010FA8  6EDF               	movwf	indf2,c
 36332                           
 36333                           ; BSR set to: 0
 36334                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36335  010FAA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36336  010FAE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36337  010FB2  0E00               	movlw	0
 36338  010FB4  8EDB               	bsf	plusw2,7,c
 36339                           
 36340                           ;usb_device.c: 1089: }
 36341  010FB6  0012               	return	
 36342  010FB8                     l192:
 36343                           
 36344                           ; BSR set to: 0
 36345                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 36346                           
 36347                           ; BSR set to: 0
 36348  010FB8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36349  010FBA  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 36350  010FBC  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 36351  010FBE  90D8               	bcf	status,0,c
 36352  010FC0  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36353  010FC2  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36354  010FC4  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36355  010FC6  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 36356  010FC8  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 36357  010FCA  90D8               	bcf	status,0,c
 36358  010FCC  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36359  010FCE  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36360  010FD0  90D8               	bcf	status,0,c
 36361  010FD2  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36362  010FD4  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36363  010FD6  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 36364  010FD8  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 36365  010FDA  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 36366  010FDC  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 36367  010FDE  90D8               	bcf	status,0,c
 36368  010FE0  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36369  010FE2  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36370  010FE4  90D8               	bcf	status,0,c
 36371  010FE6  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36372  010FE8  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36373  010FEA  0E00               	movlw	0
 36374  010FEC  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 36375  010FEE  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36376  010FF0  0E0D               	movlw	13
 36377  010FF2  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 36378  010FF4  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36379                           
 36380                           ; BSR set to: 0
 36381                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 36382  010FF6  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36383  010FFA  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36384  010FFE  0E00               	movlw	0
 36385  011000  84DB               	bsf	plusw2,2,c
 36386                           
 36387                           ; BSR set to: 0
 36388                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 36389  011002  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36390  011006  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36391  01100A  0E00               	movlw	0
 36392  01100C  8EDB               	bsf	plusw2,7,c
 36393                           
 36394                           ; BSR set to: 0
 36395                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 36396  01100E  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36397  011010  0D04               	mullw	4
 36398  011012  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 36399  011016  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 36400  01101A  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36401  01101C  0D02               	mullw	2
 36402  01101E  50F3               	movf	prodl,w,c
 36403  011020  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36404  011022  50F4               	movf	prodh,w,c
 36405  011024  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36406  011026  90D8               	bcf	status,0,c
 36407  011028  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36408  01102A  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36409  01102C  90D8               	bcf	status,0,c
 36410  01102E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36411  011030  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36412  011032  0E04               	movlw	4
 36413  011034  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36414  011036  0E00               	movlw	0
 36415  011038  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36416  01103A  0E00               	movlw	0
 36417  01103C  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 36418  01103E  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36419  011040  0E0D               	movlw	13
 36420  011042  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 36421  011044  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36422                           
 36423                           ; BSR set to: 0
 36424                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 36425  011046  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36426  01104A  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36427  01104E  0E00               	movlw	0
 36428  011050  84DB               	bsf	plusw2,2,c
 36429                           
 36430                           ; BSR set to: 0
 36431                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 36432  011052  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36433  011056  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36434  01105A  0E00               	movlw	0
 36435  01105C  8EDB               	bsf	plusw2,7,c
 36436  01105E  0012               	return	
 36437  011060                     __end_of_USBStallEndpoint:
 36438                           	opt stack 0
 36439                           tosu	equ	0xFFF
 36440                           tosh	equ	0xFFE
 36441                           tosl	equ	0xFFD
 36442                           pclath	equ	0xFFA
 36443                           tblptru	equ	0xFF8
 36444                           tblptrh	equ	0xFF7
 36445                           tblptrl	equ	0xFF6
 36446                           tablat	equ	0xFF5
 36447                           prodh	equ	0xFF4
 36448                           prodl	equ	0xFF3
 36449                           intcon	equ	0xFF2
 36450                           postinc0	equ	0xFEE
 36451                           wreg	equ	0xFE8
 36452                           indf1	equ	0xFE7
 36453                           postinc1	equ	0xFE6
 36454                           postdec1	equ	0xFE5
 36455                           plusw1	equ	0xFE3
 36456                           fsr1h	equ	0xFE2
 36457                           fsr1l	equ	0xFE1
 36458                           indf2	equ	0xFDF
 36459                           postinc2	equ	0xFDE
 36460                           postdec2	equ	0xFDD
 36461                           plusw2	equ	0xFDB
 36462                           fsr2h	equ	0xFDA
 36463                           fsr2l	equ	0xFD9
 36464                           status	equ	0xFD8
 36465                           
 36466 ;; *************** function _ResetSenseData *****************
 36467 ;; Defined at:
 36468 ;;		line 1373 in file "usb_device_msd.c"
 36469 ;; Parameters:    Size  Location     Type
 36470 ;;		None
 36471 ;; Auto vars:     Size  Location     Type
 36472 ;;		None
 36473 ;; Return value:  Size  Location     Type
 36474 ;;                  1    wreg      void 
 36475 ;; Registers used:
 36476 ;;		wreg, status,2
 36477 ;; Tracked objects:
 36478 ;;		On entry : 0/0
 36479 ;;		On exit  : 0/0
 36480 ;;		Unchanged: 0/0
 36481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36486 ;;Total ram usage:        0 bytes
 36487 ;; Hardware stack levels used:    1
 36488 ;; Hardware stack levels required when called:   10
 36489 ;; This function calls:
 36490 ;;		Nothing
 36491 ;; This function is called by:
 36492 ;;		_MSDProcessCommandMediaAbsent
 36493 ;;		_MSDProcessCommandMediaPresent
 36494 ;;		_MSDErrorHandler
 36495 ;; This function uses a non-reentrant model
 36496 ;;
 36497                           
 36498                           	psect	text143
 36499  0141EA                     __ptext143:
 36500                           	opt stack 0
 36501  0141EA                     _ResetSenseData:
 36502                           	opt stack 16
 36503                           
 36504                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 36505                           
 36506                           ; BSR set to: 0
 36507                           ;incstack = 0
 36508  0141EA  0101               	movlb	1	; () banked
 36509  0141EC  9100               	bcf	_gblSenseData& (0+255),0,b
 36510  0141EE  9300               	bcf	_gblSenseData& (0+255),1,b
 36511  0141F0  9500               	bcf	_gblSenseData& (0+255),2,b
 36512  0141F2  9700               	bcf	_gblSenseData& (0+255),3,b
 36513  0141F4  8900               	bsf	_gblSenseData& (0+255),4,b
 36514  0141F6  8B00               	bsf	_gblSenseData& (0+255),5,b
 36515  0141F8  8D00               	bsf	_gblSenseData& (0+255),6,b
 36516                           
 36517                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 36518  0141FA  9F00               	bcf	_gblSenseData& (0+255),7,b
 36519                           
 36520                           ; BSR set to: 1
 36521                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 36522  0141FC  0E00               	movlw	0
 36523  0141FE  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 36524                           
 36525                           ; BSR set to: 1
 36526                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 36527  014200  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 36528  014202  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 36529  014204  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 36530  014206  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 36531                           
 36532                           ; BSR set to: 1
 36533                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 36534  014208  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 36535                           
 36536                           ; BSR set to: 1
 36537                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 36538  01420A  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 36539                           
 36540                           ; BSR set to: 1
 36541                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 36542  01420C  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 36543                           
 36544                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 36545  01420E  0E00               	movlw	0
 36546  014210  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 36547                           
 36548                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 36549  014212  0E00               	movlw	0
 36550  014214  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 36551                           
 36552                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 36553  014216  0E00               	movlw	0
 36554  014218  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 36555                           
 36556                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 36557  01421A  0E00               	movlw	0
 36558  01421C  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 36559                           
 36560                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 36561  01421E  0E0A               	movlw	10
 36562  014220  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 36563                           
 36564                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 36565  014222  0E00               	movlw	0
 36566  014224  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 36567  014226  0E00               	movlw	0
 36568  014228  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 36569  01422A  0E00               	movlw	0
 36570  01422C  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 36571  01422E  0E00               	movlw	0
 36572  014230  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 36573                           
 36574                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 36575  014232  0E00               	movlw	0
 36576  014234  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36577                           
 36578                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 36579  014236  0E00               	movlw	0
 36580  014238  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36581                           
 36582                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 36583  01423A  0E00               	movlw	0
 36584  01423C  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 36585                           
 36586                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 36587  01423E  0E00               	movlw	0
 36588  014240  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 36589                           
 36590                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 36591  014242  0E00               	movlw	0
 36592  014244  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 36593                           
 36594                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 36595  014246  0E00               	movlw	0
 36596  014248  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 36597                           
 36598                           ; BSR set to: 1
 36599  01424A  0012               	return		;funcret
 36600  01424C                     __end_of_ResetSenseData:
 36601                           	opt stack 0
 36602                           tosu	equ	0xFFF
 36603                           tosh	equ	0xFFE
 36604                           tosl	equ	0xFFD
 36605                           pclath	equ	0xFFA
 36606                           tblptru	equ	0xFF8
 36607                           tblptrh	equ	0xFF7
 36608                           tblptrl	equ	0xFF6
 36609                           tablat	equ	0xFF5
 36610                           prodh	equ	0xFF4
 36611                           prodl	equ	0xFF3
 36612                           intcon	equ	0xFF2
 36613                           postinc0	equ	0xFEE
 36614                           wreg	equ	0xFE8
 36615                           indf1	equ	0xFE7
 36616                           postinc1	equ	0xFE6
 36617                           postdec1	equ	0xFE5
 36618                           plusw1	equ	0xFE3
 36619                           fsr1h	equ	0xFE2
 36620                           fsr1l	equ	0xFE1
 36621                           indf2	equ	0xFDF
 36622                           postinc2	equ	0xFDE
 36623                           postdec2	equ	0xFDD
 36624                           plusw2	equ	0xFDB
 36625                           fsr2h	equ	0xFDA
 36626                           fsr2l	equ	0xFD9
 36627                           status	equ	0xFD8
 36628                           
 36629 ;; *************** function _ExternalFlash_SectorRead *****************
 36630 ;; Defined at:
 36631 ;;		line 40 in file "external_flash.c"
 36632 ;; Parameters:    Size  Location     Type
 36633 ;;  config          2   43[BANK0 ] PTR void 
 36634 ;;		 -> NULL(0), 
 36635 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 36636 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 36637 ;;		 -> msd_buffer(512), 
 36638 ;; Auto vars:     Size  Location     Type
 36639 ;;  page            2   51[BANK0 ] unsigned int 
 36640 ;; Return value:  Size  Location     Type
 36641 ;;                  1    wreg      unsigned char 
 36642 ;; Registers used:
 36643 ;;		wreg, status,2, status,0, cstack
 36644 ;; Tracked objects:
 36645 ;;		On entry : 0/0
 36646 ;;		On exit  : 0/0
 36647 ;;		Unchanged: 0/0
 36648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36649 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36652 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36653 ;;Total ram usage:       10 bytes
 36654 ;; Hardware stack levels used:    1
 36655 ;; Hardware stack levels required when called:   15
 36656 ;; This function calls:
 36657 ;;		_flash_sector_read
 36658 ;; This function is called by:
 36659 ;;		_MSDReadHandler
 36660 ;; This function uses a non-reentrant model
 36661 ;;
 36662                           
 36663                           	psect	text144
 36664  01515C                     __ptext144:
 36665                           	opt stack 0
 36666  01515C                     _ExternalFlash_SectorRead:
 36667                           	opt stack 10
 36668                           
 36669                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 36670                           
 36671                           ; BSR set to: 1
 36672                           ;incstack = 0
 36673  01515C  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 36674  015160  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 36675                           
 36676                           ;external_flash.c: 45: if(sector_addr >= 8192)
 36677  015164  0100               	movlb	0	; () banked
 36678  015166  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 36679  015168  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 36680  01516A  E104               	bnz	u10840
 36681  01516C  0E20               	movlw	32
 36682  01516E  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 36683  015170  A0D8               	btfss	status,0,c
 36684  015172  D002               	goto	l1677
 36685  015174                     u10840:
 36686                           
 36687                           ; BSR set to: 0
 36688                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 36689  015174  0E00               	movlw	0
 36690                           
 36691                           ; BSR set to: 0
 36692  015176  0012               	return	
 36693  015178                     l1677:
 36694                           
 36695                           ; BSR set to: 0
 36696                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 36697                           
 36698                           ; BSR set to: 0
 36699  015178  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 36700  01517C  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 36701  015180  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 36702  015184  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 36703  015188  EC75  F0AA         	call	_flash_sector_read	;wreg free
 36704                           
 36705                           ;external_flash.c: 53: return 1;
 36706  01518C  0E01               	movlw	1
 36707  01518E  0012               	return	
 36708  015190                     __end_of_ExternalFlash_SectorRead:
 36709                           	opt stack 0
 36710                           tosu	equ	0xFFF
 36711                           tosh	equ	0xFFE
 36712                           tosl	equ	0xFFD
 36713                           pclath	equ	0xFFA
 36714                           tblptru	equ	0xFF8
 36715                           tblptrh	equ	0xFF7
 36716                           tblptrl	equ	0xFF6
 36717                           tablat	equ	0xFF5
 36718                           prodh	equ	0xFF4
 36719                           prodl	equ	0xFF3
 36720                           intcon	equ	0xFF2
 36721                           postinc0	equ	0xFEE
 36722                           wreg	equ	0xFE8
 36723                           indf1	equ	0xFE7
 36724                           postinc1	equ	0xFE6
 36725                           postdec1	equ	0xFE5
 36726                           plusw1	equ	0xFE3
 36727                           fsr1h	equ	0xFE2
 36728                           fsr1l	equ	0xFE1
 36729                           indf2	equ	0xFDF
 36730                           postinc2	equ	0xFDE
 36731                           postdec2	equ	0xFDD
 36732                           plusw2	equ	0xFDB
 36733                           fsr2h	equ	0xFDA
 36734                           fsr2l	equ	0xFD9
 36735                           status	equ	0xFD8
 36736                           
 36737 ;; *************** function _flash_sector_read *****************
 36738 ;; Defined at:
 36739 ;;		line 426 in file "flash.c"
 36740 ;; Parameters:    Size  Location     Type
 36741 ;;  page            2   39[BANK0 ] unsigned int 
 36742 ;;  data            2   41[BANK0 ] PTR unsigned char 
 36743 ;;		 -> buffer(512), msd_buffer(512), 
 36744 ;; Auto vars:     Size  Location     Type
 36745 ;;		None
 36746 ;; Return value:  Size  Location     Type
 36747 ;;                  1    wreg      void 
 36748 ;; Registers used:
 36749 ;;		wreg, status,2, status,0, cstack
 36750 ;; Tracked objects:
 36751 ;;		On entry : 0/0
 36752 ;;		On exit  : 0/0
 36753 ;;		Unchanged: 0/0
 36754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36758 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36759 ;;Total ram usage:        4 bytes
 36760 ;; Hardware stack levels used:    1
 36761 ;; Hardware stack levels required when called:   14
 36762 ;; This function calls:
 36763 ;;		__flash_partial_read
 36764 ;; This function is called by:
 36765 ;;		_ExternalFlash_SectorRead
 36766 ;;		__get_available_cluster
 36767 ;;		__find_nth_cluster
 36768 ;;		__make_cluster_chain
 36769 ;;		_fat_find_file
 36770 ;;		_fat_get_format_status
 36771 ;; This function uses a non-reentrant model
 36772 ;;
 36773                           
 36774                           	psect	text145
 36775  0154EA                     __ptext145:
 36776                           	opt stack 0
 36777  0154EA                     _flash_sector_read:
 36778                           	opt stack 13
 36779                           
 36780                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 36781                           
 36782                           ;incstack = 0
 36783  0154EA  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 36784  0154EE  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 36785  0154F2  0E00               	movlw	0
 36786  0154F4  0100               	movlb	0	; () banked
 36787  0154F6  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 36788  0154F8  0E00               	movlw	0
 36789  0154FA  6F75               	movwf	__flash_partial_read@start& (0+255),b
 36790  0154FC  0E02               	movlw	2
 36791  0154FE  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 36792  015500  0E00               	movlw	0
 36793  015502  6F77               	movwf	__flash_partial_read@length& (0+255),b
 36794  015504  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 36795  015508  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 36796  01550C  EC35  F09E         	call	__flash_partial_read	;wreg free
 36797  015510  0012               	return		;funcret
 36798  015512                     __end_of_flash_sector_read:
 36799                           	opt stack 0
 36800                           tosu	equ	0xFFF
 36801                           tosh	equ	0xFFE
 36802                           tosl	equ	0xFFD
 36803                           pclath	equ	0xFFA
 36804                           tblptru	equ	0xFF8
 36805                           tblptrh	equ	0xFF7
 36806                           tblptrl	equ	0xFF6
 36807                           tablat	equ	0xFF5
 36808                           prodh	equ	0xFF4
 36809                           prodl	equ	0xFF3
 36810                           intcon	equ	0xFF2
 36811                           postinc0	equ	0xFEE
 36812                           wreg	equ	0xFE8
 36813                           indf1	equ	0xFE7
 36814                           postinc1	equ	0xFE6
 36815                           postdec1	equ	0xFE5
 36816                           plusw1	equ	0xFE3
 36817                           fsr1h	equ	0xFE2
 36818                           fsr1l	equ	0xFE1
 36819                           indf2	equ	0xFDF
 36820                           postinc2	equ	0xFDE
 36821                           postdec2	equ	0xFDD
 36822                           plusw2	equ	0xFDB
 36823                           fsr2h	equ	0xFDA
 36824                           fsr2l	equ	0xFD9
 36825                           status	equ	0xFD8
 36826                           
 36827 ;; *************** function __flash_partial_read *****************
 36828 ;; Defined at:
 36829 ;;		line 309 in file "flash.c"
 36830 ;; Parameters:    Size  Location     Type
 36831 ;;  page            2   19[BANK0 ] unsigned int 
 36832 ;;  start           2   21[BANK0 ] unsigned int 
 36833 ;;  length          2   23[BANK0 ] unsigned int 
 36834 ;;  data            2   25[BANK0 ] PTR unsigned char 
 36835 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 36836 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 36837 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 36838 ;; Auto vars:     Size  Location     Type
 36839 ;;  command         4   31[BANK0 ] unsigned char [4]
 36840 ;;  address         4   35[BANK0 ] unsigned long 
 36841 ;; Return value:  Size  Location     Type
 36842 ;;                  1    wreg      void 
 36843 ;; Registers used:
 36844 ;;		wreg, status,2, status,0, cstack
 36845 ;; Tracked objects:
 36846 ;;		On entry : 0/0
 36847 ;;		On exit  : 0/0
 36848 ;;		Unchanged: 0/0
 36849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36850 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36851 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36853 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36854 ;;Total ram usage:       20 bytes
 36855 ;; Hardware stack levels used:    1
 36856 ;; Hardware stack levels required when called:   13
 36857 ;; This function calls:
 36858 ;;		__flash_is_busy
 36859 ;;		_spi_tx_rx
 36860 ;; This function is called by:
 36861 ;;		_flash_sector_read
 36862 ;;		_flash_partial_read
 36863 ;; This function uses a non-reentrant model
 36864 ;;
 36865                           
 36866                           	psect	text146
 36867  013C6A                     __ptext146:
 36868                           	opt stack 0
 36869  013C6A                     __flash_partial_read:
 36870                           	opt stack 13
 36871                           
 36872                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 36873                           
 36874                           ;incstack = 0
 36875  013C6A  ECD3  F0AA         	call	__flash_is_busy	;wreg free
 36876  013C6E  0900               	iorlw	0
 36877  013C70  A4D8               	btfss	status,2,c
 36878  013C72  D7FB               	goto	__flash_partial_read
 36879                           
 36880                           ;flash.c: 318: address = page;
 36881  013C74  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 36882  013C78  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 36883  013C7C  0100               	movlb	0	; () banked
 36884  013C7E  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 36885  013C80  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 36886                           
 36887                           ; BSR set to: 0
 36888                           ;flash.c: 319: address <<= 9;
 36889  013C82  0E09               	movlw	9
 36890  013C84                     u9685:
 36891  013C84  90D8               	bcf	status,0,c
 36892  013C86  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 36893  013C88  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 36894  013C8A  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 36895  013C8C  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 36896  013C8E  2EE8               	decfsz	wreg,f,c
 36897  013C90  D7F9               	goto	u9685
 36898                           
 36899                           ; BSR set to: 0
 36900                           ;flash.c: 320: address |= start;
 36901  013C92  5175               	movf	__flash_partial_read@start& (0+255),w,b
 36902  013C94  6F7B               	movwf	??__flash_partial_read& (0+255),b
 36903  013C96  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 36904  013C98  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 36905  013C9A  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 36906  013C9C  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 36907  013C9E  517B               	movf	??__flash_partial_read& (0+255),w,b
 36908  013CA0  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 36909  013CA2  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 36910  013CA4  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 36911  013CA6  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 36912  013CA8  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 36913  013CAA  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 36914  013CAC  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 36915                           
 36916                           ; BSR set to: 0
 36917                           ;flash.c: 323: command[0] = 0x03;
 36918  013CAE  0E03               	movlw	3
 36919  013CB0  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 36920                           
 36921                           ; BSR set to: 0
 36922                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36923  013CB2  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 36924                           
 36925                           ; BSR set to: 0
 36926                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36927  013CB6  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 36928  013CB8  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 36929                           
 36930                           ; BSR set to: 0
 36931                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36932  013CBA  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 36933                           
 36934                           ; BSR set to: 0
 36935                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 36936  013CBE  0E7F               	movlw	low __flash_partial_read@command
 36937  013CC0  6F60               	movwf	spi_tx_rx@command& (0+255),b
 36938  013CC2  0E00               	movlw	high __flash_partial_read@command
 36939  013CC4  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 36940  013CC6  0E00               	movlw	0
 36941  013CC8  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 36942  013CCA  0E04               	movlw	4
 36943  013CCC  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 36944  013CCE  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 36945  013CD2  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 36946  013CD6  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 36947  013CDA  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 36948  013CDE  EC38  F09A         	call	_spi_tx_rx	;wreg free
 36949  013CE2  0012               	return		;funcret
 36950  013CE4                     __end_of__flash_partial_read:
 36951                           	opt stack 0
 36952                           tosu	equ	0xFFF
 36953                           tosh	equ	0xFFE
 36954                           tosl	equ	0xFFD
 36955                           pclath	equ	0xFFA
 36956                           tblptru	equ	0xFF8
 36957                           tblptrh	equ	0xFF7
 36958                           tblptrl	equ	0xFF6
 36959                           tablat	equ	0xFF5
 36960                           prodh	equ	0xFF4
 36961                           prodl	equ	0xFF3
 36962                           intcon	equ	0xFF2
 36963                           postinc0	equ	0xFEE
 36964                           wreg	equ	0xFE8
 36965                           indf1	equ	0xFE7
 36966                           postinc1	equ	0xFE6
 36967                           postdec1	equ	0xFE5
 36968                           plusw1	equ	0xFE3
 36969                           fsr1h	equ	0xFE2
 36970                           fsr1l	equ	0xFE1
 36971                           indf2	equ	0xFDF
 36972                           postinc2	equ	0xFDE
 36973                           postdec2	equ	0xFDD
 36974                           plusw2	equ	0xFDB
 36975                           fsr2h	equ	0xFDA
 36976                           fsr2l	equ	0xFD9
 36977                           status	equ	0xFD8
 36978                           
 36979 ;; *************** function __flash_is_busy *****************
 36980 ;; Defined at:
 36981 ;;		line 281 in file "flash.c"
 36982 ;; Parameters:    Size  Location     Type
 36983 ;;		None
 36984 ;; Auto vars:     Size  Location     Type
 36985 ;;  status          2   17[BANK0 ] unsigned int 
 36986 ;; Return value:  Size  Location     Type
 36987 ;;                  1    wreg      unsigned char 
 36988 ;; Registers used:
 36989 ;;		wreg, status,2, status,0, cstack
 36990 ;; Tracked objects:
 36991 ;;		On entry : 0/0
 36992 ;;		On exit  : 0/0
 36993 ;;		Unchanged: 0/0
 36994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36999 ;;Total ram usage:        2 bytes
 37000 ;; Hardware stack levels used:    1
 37001 ;; Hardware stack levels required when called:   12
 37002 ;; This function calls:
 37003 ;;		__flash_get_status
 37004 ;;		__flash_wakeup
 37005 ;; This function is called by:
 37006 ;;		__flash_set_page_size
 37007 ;;		__flash_copy_page_to_buffer
 37008 ;;		__flash_compare_page_to_buffer
 37009 ;;		__flash_write_to_buffer
 37010 ;;		__flash_write_page_from_buffer
 37011 ;;		__flash_partial_read
 37012 ;;		_flash_partial_write
 37013 ;;		__flash_erase_page
 37014 ;;		__flash_buffer_read
 37015 ;;		_flash_is_busy
 37016 ;;		_flash_set_power_state
 37017 ;; This function uses a non-reentrant model
 37018 ;;
 37019                           
 37020                           	psect	text147
 37021  0155A6                     __ptext147:
 37022                           	opt stack 0
 37023  0155A6                     __flash_is_busy:
 37024                           	opt stack 15
 37025                           
 37026                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 37027                           
 37028                           ;incstack = 0
 37029  0155A6  0101               	movlb	1	; () banked
 37030  0155A8  515A               	movf	_power_state& (0+255),w,b
 37031  0155AA  A4D8               	btfss	status,2,c
 37032                           
 37033                           ; BSR set to: 1
 37034                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 37035  0155AC  ECA5  F0A3         	call	__flash_wakeup	;wreg free
 37036                           
 37037                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 37038  0155B0  ECC8  F0A8         	call	__flash_get_status	;wreg free
 37039  0155B4  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 37040  0155B8  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 37041                           
 37042                           ;flash.c: 295: if(status & 0b0000000010000000)
 37043  0155BC  0100               	movlb	0	; () banked
 37044  0155BE  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 37045  0155C0  D002               	goto	l1581
 37046                           
 37047                           ; BSR set to: 0
 37048                           ;flash.c: 296: {;flash.c: 298: return 0;
 37049  0155C2  0E00               	movlw	0
 37050                           
 37051                           ; BSR set to: 0
 37052                           ;flash.c: 299: }
 37053                           
 37054                           ; BSR set to: 0
 37055  0155C4  0012               	return	
 37056  0155C6                     l1581:
 37057                           
 37058                           ; BSR set to: 0
 37059                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 37060                           
 37061                           ; BSR set to: 0
 37062  0155C6  0E01               	movlw	1
 37063                           
 37064                           ; BSR set to: 0
 37065  0155C8  0012               	return	
 37066  0155CA                     __end_of__flash_is_busy:
 37067                           	opt stack 0
 37068                           tosu	equ	0xFFF
 37069                           tosh	equ	0xFFE
 37070                           tosl	equ	0xFFD
 37071                           pclath	equ	0xFFA
 37072                           tblptru	equ	0xFF8
 37073                           tblptrh	equ	0xFF7
 37074                           tblptrl	equ	0xFF6
 37075                           tablat	equ	0xFF5
 37076                           prodh	equ	0xFF4
 37077                           prodl	equ	0xFF3
 37078                           intcon	equ	0xFF2
 37079                           postinc0	equ	0xFEE
 37080                           wreg	equ	0xFE8
 37081                           indf1	equ	0xFE7
 37082                           postinc1	equ	0xFE6
 37083                           postdec1	equ	0xFE5
 37084                           plusw1	equ	0xFE3
 37085                           fsr1h	equ	0xFE2
 37086                           fsr1l	equ	0xFE1
 37087                           indf2	equ	0xFDF
 37088                           postinc2	equ	0xFDE
 37089                           postdec2	equ	0xFDD
 37090                           plusw2	equ	0xFDB
 37091                           fsr2h	equ	0xFDA
 37092                           fsr2l	equ	0xFD9
 37093                           status	equ	0xFD8
 37094                           
 37095 ;; *************** function __flash_wakeup *****************
 37096 ;; Defined at:
 37097 ;;		line 128 in file "flash.c"
 37098 ;; Parameters:    Size  Location     Type
 37099 ;;		None
 37100 ;; Auto vars:     Size  Location     Type
 37101 ;;  command         1    8[BANK0 ] unsigned char 
 37102 ;; Return value:  Size  Location     Type
 37103 ;;                  1    wreg      void 
 37104 ;; Registers used:
 37105 ;;		wreg, status,2, status,0, cstack
 37106 ;; Tracked objects:
 37107 ;;		On entry : 0/0
 37108 ;;		On exit  : 0/0
 37109 ;;		Unchanged: 0/0
 37110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37112 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37115 ;;Total ram usage:        1 bytes
 37116 ;; Hardware stack levels used:    1
 37117 ;; Hardware stack levels required when called:   11
 37118 ;; This function calls:
 37119 ;;		_spi_tx
 37120 ;; This function is called by:
 37121 ;;		__flash_is_busy
 37122 ;;		_flash_set_power_state
 37123 ;; This function uses a non-reentrant model
 37124 ;;
 37125                           
 37126                           	psect	text148
 37127  01474A                     __ptext148:
 37128                           	opt stack 0
 37129  01474A                     __flash_wakeup:
 37130                           	opt stack 15
 37131                           
 37132                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 37133                           
 37134                           ; BSR set to: 0
 37135                           ;incstack = 0
 37136  01474A  D022               	goto	l1530
 37137  01474C                     
 37138                           ;flash.c: 135: command = 0xAB;
 37139  01474C  0EAB               	movlw	171
 37140  01474E  0100               	movlb	0	; () banked
 37141  014750  6F68               	movwf	__flash_wakeup@command& (0+255),b
 37142                           
 37143                           ; BSR set to: 0
 37144                           ;flash.c: 136: spi_tx(&command, 1);
 37145  014752  0E68               	movlw	low __flash_wakeup@command
 37146  014754  6F60               	movwf	spi_tx@data& (0+255),b
 37147  014756  0E00               	movlw	high __flash_wakeup@command
 37148  014758  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37149  01475A  0E00               	movlw	0
 37150  01475C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37151  01475E  0E01               	movlw	1
 37152  014760  6F62               	movwf	spi_tx@length& (0+255),b
 37153  014762  ECC8  F0A2         	call	_spi_tx	;wreg free
 37154                           
 37155                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 37156  014766  0E17               	movlw	23
 37157  014768                     u18917:
 37158  014768  2EE8               	decfsz	wreg,f,c
 37159  01476A  D7FE               	bra	u18917
 37160  01476C  F000               	nop	
 37161                           
 37162                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 37163  01476E  0E00               	movlw	0
 37164  014770  0101               	movlb	1	; () banked
 37165  014772  6F5A               	movwf	_power_state& (0+255),b
 37166                           
 37167                           ;flash.c: 139: break;
 37168  014774  0012               	return	
 37169  014776                     l1533:
 37170                           
 37171                           ; BSR set to: 1
 37172                           ;flash.c: 144: LATDbits.LD7 = 0;
 37173  014776  9E8C               	bcf	3980,7,c	;volatile
 37174                           
 37175                           ; BSR set to: 1
 37176                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 37177  014778  0E0D               	movlw	13
 37178  01477A                     u18927:
 37179  01477A  2EE8               	decfsz	wreg,f,c
 37180  01477C  D7FE               	bra	u18927
 37181  01477E  F000               	nop	
 37182                           
 37183                           ;flash.c: 146: LATDbits.LD7 = 1;
 37184  014780  8E8C               	bsf	3980,7,c	;volatile
 37185                           
 37186                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 37187  014782  0E50               	movlw	80
 37188  014784                     u18937:
 37189  014784  2EE8               	decfsz	wreg,f,c
 37190  014786  D7FE               	bra	u18937
 37191                           
 37192                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 37193  014788  0E00               	movlw	0
 37194  01478A  0101               	movlb	1	; () banked
 37195  01478C  6F5A               	movwf	_power_state& (0+255),b
 37196                           
 37197                           ; BSR set to: 1
 37198                           ;flash.c: 150: }
 37199                           
 37200                           ;flash.c: 149: break;
 37201  01478E  0012               	return	
 37202  014790                     l1530:
 37203                           
 37204                           ; BSR set to: 1
 37205  014790  0101               	movlb	1	; () banked
 37206  014792  515A               	movf	_power_state& (0+255),w,b
 37207                           
 37208                           ; Switch size 1, requested type "space"
 37209                           ; Number of cases is 2, Range of values is 1 to 2
 37210                           ; switch strategies available:
 37211                           ; Name         Instructions Cycles
 37212                           ; simple_byte            7     4 (average)
 37213                           ;	Chosen strategy is simple_byte
 37214  014794  0A01               	xorlw	1	; case 1
 37215  014796  B4D8               	btfsc	status,2,c
 37216  014798  D7D9               	goto	l1531
 37217  01479A  0A03               	xorlw	3	; case 2
 37218  01479C  A4D8               	btfss	status,2,c
 37219  01479E  0012               	return	
 37220  0147A0  D7EA               	goto	l1533
 37221  0147A2                     __end_of__flash_wakeup:
 37222                           	opt stack 0
 37223                           tosu	equ	0xFFF
 37224                           tosh	equ	0xFFE
 37225                           tosl	equ	0xFFD
 37226                           pclath	equ	0xFFA
 37227                           tblptru	equ	0xFF8
 37228                           tblptrh	equ	0xFF7
 37229                           tblptrl	equ	0xFF6
 37230                           tablat	equ	0xFF5
 37231                           prodh	equ	0xFF4
 37232                           prodl	equ	0xFF3
 37233                           intcon	equ	0xFF2
 37234                           postinc0	equ	0xFEE
 37235                           wreg	equ	0xFE8
 37236                           indf1	equ	0xFE7
 37237                           postinc1	equ	0xFE6
 37238                           postdec1	equ	0xFE5
 37239                           plusw1	equ	0xFE3
 37240                           fsr1h	equ	0xFE2
 37241                           fsr1l	equ	0xFE1
 37242                           indf2	equ	0xFDF
 37243                           postinc2	equ	0xFDE
 37244                           postdec2	equ	0xFDD
 37245                           plusw2	equ	0xFDB
 37246                           fsr2h	equ	0xFDA
 37247                           fsr2l	equ	0xFD9
 37248                           status	equ	0xFD8
 37249                           
 37250 ;; *************** function _spi_tx *****************
 37251 ;; Defined at:
 37252 ;;		line 108 in file "spi.c"
 37253 ;; Parameters:    Size  Location     Type
 37254 ;;  data            2    0[BANK0 ] PTR unsigned char 
 37255 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 37256 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 37257 ;;  length          2    2[BANK0 ] unsigned int 
 37258 ;; Auto vars:     Size  Location     Type
 37259 ;;		None
 37260 ;; Return value:  Size  Location     Type
 37261 ;;                  1    wreg      void 
 37262 ;; Registers used:
 37263 ;;		wreg, status,2, status,0
 37264 ;; Tracked objects:
 37265 ;;		On entry : 0/0
 37266 ;;		On exit  : 0/0
 37267 ;;		Unchanged: 0/0
 37268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37272 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37273 ;;Total ram usage:        8 bytes
 37274 ;; Hardware stack levels used:    1
 37275 ;; Hardware stack levels required when called:   10
 37276 ;; This function calls:
 37277 ;;		Nothing
 37278 ;; This function is called by:
 37279 ;;		__flash_set_page_size
 37280 ;;		__flash_wakeup
 37281 ;;		__flash_copy_page_to_buffer
 37282 ;;		__flash_compare_page_to_buffer
 37283 ;;		__flash_write_page_from_buffer
 37284 ;;		__flash_erase_page
 37285 ;;		_flash_set_power_state
 37286 ;; This function uses a non-reentrant model
 37287 ;;
 37288                           
 37289                           	psect	text149
 37290  014590                     __ptext149:
 37291                           	opt stack 0
 37292  014590                     _spi_tx:
 37293                           	opt stack 17
 37294                           
 37295                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 37296                           
 37297                           ; BSR set to: 1
 37298                           ;incstack = 0
 37299  014590  9E88               	bcf	3976,7,c	;volatile
 37300                           
 37301                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 37302  014592  9C88               	bcf	3976,6,c	;volatile
 37303                           
 37304                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 37305  014594  8A88               	bsf	3976,5,c	;volatile
 37306                           
 37307                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 37308  014596  9888               	bcf	3976,4,c	;volatile
 37309                           
 37310                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 37311  014598  9688               	bcf	3976,3,c	;volatile
 37312                           
 37313                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 37314  01459A  8488               	bsf	3976,2,c	;volatile
 37315                           
 37316                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 37317  01459C  9288               	bcf	3976,1,c	;volatile
 37318                           
 37319                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 37320  01459E  9886               	bcf	3974,4,c	;volatile
 37321  0145A0  9A86               	bcf	3974,5,c	;volatile
 37322  0145A2  9C86               	bcf	3974,6,c	;volatile
 37323  0145A4  9E86               	bcf	3974,7,c	;volatile
 37324                           
 37325                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 37326  0145A6  9086               	bcf	3974,0,c	;volatile
 37327  0145A8  9286               	bcf	3974,1,c	;volatile
 37328  0145AA  9486               	bcf	3974,2,c	;volatile
 37329  0145AC  9686               	bcf	3974,3,c	;volatile
 37330                           
 37331                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37332  0145AE  0100               	movlb	0	; () banked
 37333  0145B0  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 37334  0145B2  6E6A               	movwf	3946,c	;volatile
 37335                           
 37336                           ; BSR set to: 0
 37337                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37338  0145B4  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 37339                           
 37340                           ; BSR set to: 0
 37341                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37342  0145B8  0EFF               	movlw	255
 37343  0145BA  6F64               	movwf	??_spi_tx& (0+255),b
 37344  0145BC  0EFF               	movlw	255
 37345  0145BE  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 37346  0145C0  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 37347  0145C4  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 37348  0145C8  5164               	movf	??_spi_tx& (0+255),w,b
 37349  0145CA  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 37350  0145CC  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 37351  0145CE  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 37352  0145D0  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 37353  0145D4  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 37354  0145D6  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 37355  0145D8  6E66               	movwf	3942,c	;volatile
 37356                           
 37357                           ; BSR set to: 0
 37358                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37359  0145DA  0562               	decf	spi_tx@length& (0+255),w,b
 37360  0145DC  6E67               	movwf	3943,c	;volatile
 37361                           
 37362                           ; BSR set to: 0
 37363                           ;spi.c: 136: LATDbits.LD7 = 0;
 37364  0145DE  9E8C               	bcf	3980,7,c	;volatile
 37365                           
 37366                           ; BSR set to: 0
 37367                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 37368  0145E0  8088               	bsf	3976,0,c	;volatile
 37369  0145E2                     
 37370                           ; BSR set to: 0
 37371  0145E2  B088               	btfsc	3976,0,c	;volatile
 37372  0145E4  D7FE               	goto	l2172
 37373                           
 37374                           ;spi.c: 139: LATDbits.LD7 = 1;
 37375  0145E6  8E8C               	bsf	3980,7,c	;volatile
 37376  0145E8  0012               	return		;funcret
 37377  0145EA                     __end_of_spi_tx:
 37378                           	opt stack 0
 37379                           tosu	equ	0xFFF
 37380                           tosh	equ	0xFFE
 37381                           tosl	equ	0xFFD
 37382                           pclath	equ	0xFFA
 37383                           tblptru	equ	0xFF8
 37384                           tblptrh	equ	0xFF7
 37385                           tblptrl	equ	0xFF6
 37386                           tablat	equ	0xFF5
 37387                           prodh	equ	0xFF4
 37388                           prodl	equ	0xFF3
 37389                           intcon	equ	0xFF2
 37390                           postinc0	equ	0xFEE
 37391                           wreg	equ	0xFE8
 37392                           indf1	equ	0xFE7
 37393                           postinc1	equ	0xFE6
 37394                           postdec1	equ	0xFE5
 37395                           plusw1	equ	0xFE3
 37396                           fsr1h	equ	0xFE2
 37397                           fsr1l	equ	0xFE1
 37398                           indf2	equ	0xFDF
 37399                           postinc2	equ	0xFDE
 37400                           postdec2	equ	0xFDD
 37401                           plusw2	equ	0xFDB
 37402                           fsr2h	equ	0xFDA
 37403                           fsr2l	equ	0xFD9
 37404                           status	equ	0xFD8
 37405                           
 37406 ;; *************** function __flash_get_status *****************
 37407 ;; Defined at:
 37408 ;;		line 117 in file "flash.c"
 37409 ;; Parameters:    Size  Location     Type
 37410 ;;		None
 37411 ;; Auto vars:     Size  Location     Type
 37412 ;;  status          2   15[BANK0 ] unsigned int 
 37413 ;;  command         1   14[BANK0 ] unsigned char 
 37414 ;; Return value:  Size  Location     Type
 37415 ;;                  2   12[BANK0 ] unsigned int 
 37416 ;; Registers used:
 37417 ;;		wreg, status,2, status,0, cstack
 37418 ;; Tracked objects:
 37419 ;;		On entry : 0/0
 37420 ;;		On exit  : 0/0
 37421 ;;		Unchanged: 0/0
 37422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37424 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37426 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37427 ;;Total ram usage:        5 bytes
 37428 ;; Hardware stack levels used:    1
 37429 ;; Hardware stack levels required when called:   11
 37430 ;; This function calls:
 37431 ;;		_spi_tx_rx
 37432 ;; This function is called by:
 37433 ;;		__flash_compare_page_to_buffer
 37434 ;;		__flash_is_busy
 37435 ;; This function uses a non-reentrant model
 37436 ;;
 37437                           
 37438                           	psect	text150
 37439  015190                     __ptext150:
 37440                           	opt stack 0
 37441  015190                     __flash_get_status:
 37442                           	opt stack 15
 37443                           
 37444                           ;flash.c: 121: uint8_t command = 0xD7;
 37445                           
 37446                           ;incstack = 0
 37447  015190  0ED7               	movlw	215
 37448  015192  0100               	movlb	0	; () banked
 37449  015194  6F6E               	movwf	__flash_get_status@command& (0+255),b
 37450                           
 37451                           ; BSR set to: 0
 37452                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 37453  015196  0E6E               	movlw	low __flash_get_status@command
 37454  015198  6F60               	movwf	spi_tx_rx@command& (0+255),b
 37455  01519A  0E00               	movlw	high __flash_get_status@command
 37456  01519C  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 37457  01519E  0E00               	movlw	0
 37458  0151A0  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 37459  0151A2  0E01               	movlw	1
 37460  0151A4  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 37461  0151A6  0E6F               	movlw	low __flash_get_status@status
 37462  0151A8  6F64               	movwf	spi_tx_rx@data& (0+255),b
 37463  0151AA  0E00               	movlw	high __flash_get_status@status
 37464  0151AC  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 37465  0151AE  0E00               	movlw	0
 37466  0151B0  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 37467  0151B2  0E02               	movlw	2
 37468  0151B4  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 37469  0151B6  EC38  F09A         	call	_spi_tx_rx	;wreg free
 37470                           
 37471                           ;flash.c: 124: return status;
 37472  0151BA  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 37473  0151BE  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37474  0151C2  0012               	return	
 37475  0151C4                     __end_of__flash_get_status:
 37476                           	opt stack 0
 37477                           tosu	equ	0xFFF
 37478                           tosh	equ	0xFFE
 37479                           tosl	equ	0xFFD
 37480                           pclath	equ	0xFFA
 37481                           tblptru	equ	0xFF8
 37482                           tblptrh	equ	0xFF7
 37483                           tblptrl	equ	0xFF6
 37484                           tablat	equ	0xFF5
 37485                           prodh	equ	0xFF4
 37486                           prodl	equ	0xFF3
 37487                           intcon	equ	0xFF2
 37488                           postinc0	equ	0xFEE
 37489                           wreg	equ	0xFE8
 37490                           indf1	equ	0xFE7
 37491                           postinc1	equ	0xFE6
 37492                           postdec1	equ	0xFE5
 37493                           plusw1	equ	0xFE3
 37494                           fsr1h	equ	0xFE2
 37495                           fsr1l	equ	0xFE1
 37496                           indf2	equ	0xFDF
 37497                           postinc2	equ	0xFDE
 37498                           postdec2	equ	0xFDD
 37499                           plusw2	equ	0xFDB
 37500                           fsr2h	equ	0xFDA
 37501                           fsr2l	equ	0xFD9
 37502                           status	equ	0xFD8
 37503                           
 37504 ;; *************** function _spi_tx_rx *****************
 37505 ;; Defined at:
 37506 ;;		line 199 in file "spi.c"
 37507 ;; Parameters:    Size  Location     Type
 37508 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37509 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 37510 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37511 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37512 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 37513 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 37514 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 37515 ;;  data_length     2    6[BANK0 ] unsigned int 
 37516 ;; Auto vars:     Size  Location     Type
 37517 ;;		None
 37518 ;; Return value:  Size  Location     Type
 37519 ;;                  1    wreg      void 
 37520 ;; Registers used:
 37521 ;;		wreg, status,2, status,0
 37522 ;; Tracked objects:
 37523 ;;		On entry : 0/0
 37524 ;;		On exit  : 0/0
 37525 ;;		Unchanged: 0/0
 37526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37527 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37529 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37530 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37531 ;;Total ram usage:       12 bytes
 37532 ;; Hardware stack levels used:    1
 37533 ;; Hardware stack levels required when called:   10
 37534 ;; This function calls:
 37535 ;;		Nothing
 37536 ;; This function is called by:
 37537 ;;		__flash_get_status
 37538 ;;		__flash_partial_read
 37539 ;;		__flash_buffer_read
 37540 ;; This function uses a non-reentrant model
 37541 ;;
 37542                           
 37543                           	psect	text151
 37544  013470                     __ptext151:
 37545                           	opt stack 0
 37546  013470                     _spi_tx_rx:
 37547                           	opt stack 15
 37548                           
 37549                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 37550                           
 37551                           ;incstack = 0
 37552  013470  9E88               	bcf	3976,7,c	;volatile
 37553                           
 37554                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 37555  013472  9C88               	bcf	3976,6,c	;volatile
 37556                           
 37557                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 37558  013474  8A88               	bsf	3976,5,c	;volatile
 37559                           
 37560                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 37561  013476  9888               	bcf	3976,4,c	;volatile
 37562                           
 37563                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 37564  013478  9688               	bcf	3976,3,c	;volatile
 37565                           
 37566                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 37567  01347A  8488               	bsf	3976,2,c	;volatile
 37568                           
 37569                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 37570  01347C  9288               	bcf	3976,1,c	;volatile
 37571                           
 37572                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 37573  01347E  9886               	bcf	3974,4,c	;volatile
 37574  013480  9A86               	bcf	3974,5,c	;volatile
 37575  013482  9C86               	bcf	3974,6,c	;volatile
 37576  013484  9E86               	bcf	3974,7,c	;volatile
 37577                           
 37578                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 37579  013486  9086               	bcf	3974,0,c	;volatile
 37580  013488  9286               	bcf	3974,1,c	;volatile
 37581  01348A  9486               	bcf	3974,2,c	;volatile
 37582  01348C  9686               	bcf	3974,3,c	;volatile
 37583                           
 37584                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37585  01348E  0100               	movlb	0	; () banked
 37586  013490  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 37587  013492  6E6A               	movwf	3946,c	;volatile
 37588                           
 37589                           ; BSR set to: 0
 37590                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37591  013494  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 37592                           
 37593                           ; BSR set to: 0
 37594                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37595  013498  0EFF               	movlw	255
 37596  01349A  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37597  01349C  0EFF               	movlw	255
 37598  01349E  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37599  0134A0  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 37600  0134A4  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 37601  0134A8  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37602  0134AA  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37603  0134AC  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37604  0134AE  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37605  0134B0  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37606  0134B4  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37607  0134B6  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37608  0134B8  6E66               	movwf	3942,c	;volatile
 37609                           
 37610                           ; BSR set to: 0
 37611                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37612  0134BA  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 37613  0134BC  6E67               	movwf	3943,c	;volatile
 37614                           
 37615                           ; BSR set to: 0
 37616                           ;spi.c: 227: LATDbits.LD7 = 0;
 37617  0134BE  9E8C               	bcf	3980,7,c	;volatile
 37618                           
 37619                           ; BSR set to: 0
 37620                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 37621  0134C0  8088               	bsf	3976,0,c	;volatile
 37622  0134C2                     
 37623                           ; BSR set to: 0
 37624  0134C2  B088               	btfsc	3976,0,c	;volatile
 37625  0134C4  D7FE               	goto	l2187
 37626                           
 37627                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 37628  0134C6  9A88               	bcf	3976,5,c	;volatile
 37629                           
 37630                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 37631  0134C8  8888               	bsf	3976,4,c	;volatile
 37632                           
 37633                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 37634  0134CA  9688               	bcf	3976,3,c	;volatile
 37635                           
 37636                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 37637  0134CC  9488               	bcf	3976,2,c	;volatile
 37638                           
 37639                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37640  0134CE  0100               	movlb	0	; () banked
 37641  0134D0  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 37642  0134D2  6E68               	movwf	3944,c	;volatile
 37643                           
 37644                           ; BSR set to: 0
 37645                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37646  0134D4  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 37647                           
 37648                           ; BSR set to: 0
 37649                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37650  0134D8  0EFF               	movlw	255
 37651  0134DA  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37652  0134DC  0EFF               	movlw	255
 37653  0134DE  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37654  0134E0  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 37655  0134E4  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 37656  0134E8  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37657  0134EA  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37658  0134EC  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37659  0134EE  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37660  0134F0  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37661  0134F4  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37662  0134F6  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37663  0134F8  6E66               	movwf	3942,c	;volatile
 37664                           
 37665                           ; BSR set to: 0
 37666                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37667  0134FA  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 37668  0134FC  6E67               	movwf	3943,c	;volatile
 37669                           
 37670                           ; BSR set to: 0
 37671                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 37672  0134FE  8088               	bsf	3976,0,c	;volatile
 37673  013500                     
 37674                           ; BSR set to: 0
 37675  013500  B088               	btfsc	3976,0,c	;volatile
 37676  013502  D7FE               	goto	l2190
 37677                           
 37678                           ;spi.c: 254: LATDbits.LD7 = 1;
 37679  013504  8E8C               	bsf	3980,7,c	;volatile
 37680  013506  0012               	return		;funcret
 37681  013508                     __end_of_spi_tx_rx:
 37682                           	opt stack 0
 37683                           tosu	equ	0xFFF
 37684                           tosh	equ	0xFFE
 37685                           tosl	equ	0xFFD
 37686                           pclath	equ	0xFFA
 37687                           tblptru	equ	0xFF8
 37688                           tblptrh	equ	0xFF7
 37689                           tblptrl	equ	0xFF6
 37690                           tablat	equ	0xFF5
 37691                           prodh	equ	0xFF4
 37692                           prodl	equ	0xFF3
 37693                           intcon	equ	0xFF2
 37694                           postinc0	equ	0xFEE
 37695                           wreg	equ	0xFE8
 37696                           indf1	equ	0xFE7
 37697                           postinc1	equ	0xFE6
 37698                           postdec1	equ	0xFE5
 37699                           plusw1	equ	0xFE3
 37700                           fsr1h	equ	0xFE2
 37701                           fsr1l	equ	0xFE1
 37702                           indf2	equ	0xFDF
 37703                           postinc2	equ	0xFDE
 37704                           postdec2	equ	0xFDD
 37705                           plusw2	equ	0xFDB
 37706                           fsr2h	equ	0xFDA
 37707                           fsr2l	equ	0xFD9
 37708                           status	equ	0xFD8
 37709                           
 37710 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 37711 ;; Defined at:
 37712 ;;		line 993 in file "usb_device_msd.c"
 37713 ;; Parameters:    Size  Location     Type
 37714 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 37715 ;; Auto vars:     Size  Location     Type
 37716 ;;		None
 37717 ;; Return value:  Size  Location     Type
 37718 ;;                  1    wreg      void 
 37719 ;; Registers used:
 37720 ;;		wreg, status,2, status,0
 37721 ;; Tracked objects:
 37722 ;;		On entry : 0/0
 37723 ;;		On exit  : 0/0
 37724 ;;		Unchanged: 0/0
 37725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37728 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37729 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37730 ;;Total ram usage:        6 bytes
 37731 ;; Hardware stack levels used:    1
 37732 ;; Hardware stack levels required when called:   10
 37733 ;; This function calls:
 37734 ;;		Nothing
 37735 ;; This function is called by:
 37736 ;;		_MSDProcessCommandMediaPresent
 37737 ;; This function uses a non-reentrant model
 37738 ;;
 37739                           
 37740                           	psect	text152
 37741  012A58                     __ptext152:
 37742                           	opt stack 0
 37743  012A58                     _MSDComputeDeviceInAndResidue:
 37744                           	opt stack 16
 37745                           
 37746                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 37747                           
 37748                           ;incstack = 0
 37749  012A58  0100               	movlb	0	; () banked
 37750  012A5A  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37751  012A5C  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37752  012A5E  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37753  012A60  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37754  012A62  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37755  012A64  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37756  012A66  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37757  012A68  0102               	movlb	2	; () banked
 37758  012A6A  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 37759  012A6C  0100               	movlb	0	; () banked
 37760  012A6E  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37761  012A70  0102               	movlb	2	; () banked
 37762  012A72  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 37763  012A74  0100               	movlb	0	; () banked
 37764  012A76  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37765  012A78  0102               	movlb	2	; () banked
 37766  012A7A  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 37767  012A7C  0100               	movlb	0	; () banked
 37768  012A7E  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37769  012A80  0102               	movlb	2	; () banked
 37770  012A82  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 37771  012A84  B0D8               	btfsc	status,0,c
 37772  012A86  D00E               	goto	l675
 37773                           
 37774                           ; BSR set to: 2
 37775                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 37776  012A88  0E00               	movlw	0
 37777  012A8A  010D               	movlb	13	; () banked
 37778  012A8C  6F88               	movwf	136,b	;volatile
 37779  012A8E  0E00               	movlw	0
 37780  012A90  6F89               	movwf	137,b	;volatile
 37781  012A92  0E00               	movlw	0
 37782  012A94  6F8A               	movwf	138,b	;volatile
 37783  012A96  0E00               	movlw	0
 37784  012A98  6F8B               	movwf	139,b	;volatile
 37785                           
 37786                           ; BSR set to: 13
 37787                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 37788  012A9A  C208  F145         	movff	_gblCBW+8,_TransferLength
 37789  012A9E  C209  F146         	movff	_gblCBW+9,_TransferLength+1
 37790                           
 37791                           ;usb_device_msd.c: 1002: }
 37792  012AA2  0012               	return	
 37793  012AA4                     l675:
 37794                           
 37795                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 37796                           
 37797                           ; BSR set to: 13
 37798  012AA4  0101               	movlb	1	; () banked
 37799  012AA6  5145               	movf	_TransferLength& (0+255),w,b
 37800  012AA8  0100               	movlb	0	; () banked
 37801  012AAA  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37802  012AAC  0101               	movlb	1	; () banked
 37803  012AAE  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37804  012AB0  0100               	movlb	0	; () banked
 37805  012AB2  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37806  012AB4  B0D8               	btfsc	status,0,c
 37807  012AB6  D004               	goto	l677
 37808                           
 37809                           ; BSR set to: 0
 37810                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 37811  012AB8  C060  F145         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 37812  012ABC  C061  F146         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 37813  012AC0                     l677:
 37814                           
 37815                           ; BSR set to: 0
 37816                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 37817                           
 37818                           ; BSR set to: 0
 37819  012AC0  0101               	movlb	1	; () banked
 37820  012AC2  5145               	movf	_TransferLength& (0+255),w,b
 37821  012AC4  0100               	movlb	0	; () banked
 37822  012AC6  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37823  012AC8  0101               	movlb	1	; () banked
 37824  012ACA  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37825  012ACC  0100               	movlb	0	; () banked
 37826  012ACE  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37827  012AD0  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37828  012AD2  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37829  012AD4  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37830  012AD6  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37831  012AD8  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37832  012ADA  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37833  012ADC  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37834  012ADE  0E00               	movlw	0
 37835  012AE0  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37836  012AE2  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37837  012AE4  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37838  012AE6  0102               	movlb	2	; () banked
 37839  012AE8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37840  012AEA  0100               	movlb	0	; () banked
 37841  012AEC  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37842  012AEE  010D               	movlb	13	; () banked
 37843  012AF0  6F88               	movwf	136,b	;volatile
 37844  012AF2  0102               	movlb	2	; () banked
 37845  012AF4  5109               	movf	(_gblCBW+9)& (0+255),w,b
 37846  012AF6  0100               	movlb	0	; () banked
 37847  012AF8  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37848  012AFA  010D               	movlb	13	; () banked
 37849  012AFC  6F89               	movwf	137,b	;volatile
 37850  012AFE  0102               	movlb	2	; () banked
 37851  012B00  510A               	movf	(_gblCBW+10)& (0+255),w,b
 37852  012B02  0100               	movlb	0	; () banked
 37853  012B04  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37854  012B06  010D               	movlb	13	; () banked
 37855  012B08  6F8A               	movwf	138,b	;volatile
 37856  012B0A  0102               	movlb	2	; () banked
 37857  012B0C  510B               	movf	(_gblCBW+11)& (0+255),w,b
 37858  012B0E  0100               	movlb	0	; () banked
 37859  012B10  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37860  012B12  010D               	movlb	13	; () banked
 37861  012B14  6F8B               	movwf	139,b	;volatile
 37862  012B16  0012               	return	
 37863  012B18                     __end_of_MSDComputeDeviceInAndResidue:
 37864                           	opt stack 0
 37865                           tosu	equ	0xFFF
 37866                           tosh	equ	0xFFE
 37867                           tosl	equ	0xFFD
 37868                           pclath	equ	0xFFA
 37869                           tblptru	equ	0xFF8
 37870                           tblptrh	equ	0xFF7
 37871                           tblptrl	equ	0xFF6
 37872                           tablat	equ	0xFF5
 37873                           prodh	equ	0xFF4
 37874                           prodl	equ	0xFF3
 37875                           intcon	equ	0xFF2
 37876                           postinc0	equ	0xFEE
 37877                           wreg	equ	0xFE8
 37878                           indf1	equ	0xFE7
 37879                           postinc1	equ	0xFE6
 37880                           postdec1	equ	0xFE5
 37881                           plusw1	equ	0xFE3
 37882                           fsr1h	equ	0xFE2
 37883                           fsr1l	equ	0xFE1
 37884                           indf2	equ	0xFDF
 37885                           postinc2	equ	0xFDE
 37886                           postdec2	equ	0xFDD
 37887                           plusw2	equ	0xFDB
 37888                           fsr2h	equ	0xFDA
 37889                           fsr2l	equ	0xFD9
 37890                           status	equ	0xFD8
 37891                           
 37892 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 37893 ;; Defined at:
 37894 ;;		line 18 in file "external_flash.c"
 37895 ;; Parameters:    Size  Location     Type
 37896 ;;  config          2    0[BANK0 ] PTR void 
 37897 ;;		 -> NULL(0), 
 37898 ;; Auto vars:     Size  Location     Type
 37899 ;;		None
 37900 ;; Return value:  Size  Location     Type
 37901 ;;                  2    0[BANK0 ] unsigned int 
 37902 ;; Registers used:
 37903 ;;		wreg, status,2
 37904 ;; Tracked objects:
 37905 ;;		On entry : 0/0
 37906 ;;		On exit  : 0/0
 37907 ;;		Unchanged: 0/0
 37908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37909 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37913 ;;Total ram usage:        2 bytes
 37914 ;; Hardware stack levels used:    1
 37915 ;; Hardware stack levels required when called:   10
 37916 ;; This function calls:
 37917 ;;		Nothing
 37918 ;; This function is called by:
 37919 ;;		_MSDProcessCommandMediaPresent
 37920 ;; This function uses a non-reentrant model
 37921 ;;
 37922                           
 37923                           	psect	text153
 37924  01579C                     __ptext153:
 37925                           	opt stack 0
 37926  01579C                     _ExternalFlash_SectorSizeRead:
 37927                           	opt stack 16
 37928                           
 37929                           ;external_flash.c: 20: return 512;
 37930                           
 37931                           ; BSR set to: 13
 37932                           ;incstack = 0
 37933  01579C  0E02               	movlw	2
 37934  01579E  0100               	movlb	0	; () banked
 37935  0157A0  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 37936  0157A2  0E00               	movlw	0
 37937  0157A4  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 37938  0157A6  0012               	return	
 37939  0157A8                     __end_of_ExternalFlash_SectorSizeRead:
 37940                           	opt stack 0
 37941                           tosu	equ	0xFFF
 37942                           tosh	equ	0xFFE
 37943                           tosl	equ	0xFFD
 37944                           pclath	equ	0xFFA
 37945                           tblptru	equ	0xFF8
 37946                           tblptrh	equ	0xFF7
 37947                           tblptrl	equ	0xFF6
 37948                           tablat	equ	0xFF5
 37949                           prodh	equ	0xFF4
 37950                           prodl	equ	0xFF3
 37951                           intcon	equ	0xFF2
 37952                           postinc0	equ	0xFEE
 37953                           wreg	equ	0xFE8
 37954                           indf1	equ	0xFE7
 37955                           postinc1	equ	0xFE6
 37956                           postdec1	equ	0xFE5
 37957                           plusw1	equ	0xFE3
 37958                           fsr1h	equ	0xFE2
 37959                           fsr1l	equ	0xFE1
 37960                           indf2	equ	0xFDF
 37961                           postinc2	equ	0xFDE
 37962                           postdec2	equ	0xFDD
 37963                           plusw2	equ	0xFDB
 37964                           fsr2h	equ	0xFDA
 37965                           fsr2l	equ	0xFD9
 37966                           status	equ	0xFD8
 37967                           
 37968 ;; *************** function _ExternalFlash_CapacityRead *****************
 37969 ;; Defined at:
 37970 ;;		line 23 in file "external_flash.c"
 37971 ;; Parameters:    Size  Location     Type
 37972 ;;  config          2    0[BANK0 ] PTR void 
 37973 ;;		 -> NULL(0), 
 37974 ;; Auto vars:     Size  Location     Type
 37975 ;;		None
 37976 ;; Return value:  Size  Location     Type
 37977 ;;                  4    0[BANK0 ] unsigned long 
 37978 ;; Registers used:
 37979 ;;		wreg, status,2
 37980 ;; Tracked objects:
 37981 ;;		On entry : 0/0
 37982 ;;		On exit  : 0/0
 37983 ;;		Unchanged: 0/0
 37984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37989 ;;Total ram usage:        4 bytes
 37990 ;; Hardware stack levels used:    1
 37991 ;; Hardware stack levels required when called:   10
 37992 ;; This function calls:
 37993 ;;		Nothing
 37994 ;; This function is called by:
 37995 ;;		_MSDProcessCommandMediaPresent
 37996 ;; This function uses a non-reentrant model
 37997 ;;
 37998                           
 37999                           	psect	text154
 38000  015720                     __ptext154:
 38001                           	opt stack 0
 38002  015720                     _ExternalFlash_CapacityRead:
 38003                           	opt stack 16
 38004                           
 38005                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 38006                           
 38007                           ; BSR set to: 0
 38008                           ;incstack = 0
 38009  015720  0EFF               	movlw	255
 38010  015722  0100               	movlb	0	; () banked
 38011  015724  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 38012  015726  0E1F               	movlw	31
 38013  015728  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 38014  01572A  0E00               	movlw	0
 38015  01572C  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 38016  01572E  0E00               	movlw	0
 38017  015730  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 38018  015732  0012               	return	
 38019  015734                     __end_of_ExternalFlash_CapacityRead:
 38020                           	opt stack 0
 38021                           tosu	equ	0xFFF
 38022                           tosh	equ	0xFFE
 38023                           tosl	equ	0xFFD
 38024                           pclath	equ	0xFFA
 38025                           tblptru	equ	0xFF8
 38026                           tblptrh	equ	0xFF7
 38027                           tblptrl	equ	0xFF6
 38028                           tablat	equ	0xFF5
 38029                           prodh	equ	0xFF4
 38030                           prodl	equ	0xFF3
 38031                           intcon	equ	0xFF2
 38032                           postinc0	equ	0xFEE
 38033                           wreg	equ	0xFE8
 38034                           indf1	equ	0xFE7
 38035                           postinc1	equ	0xFE6
 38036                           postdec1	equ	0xFE5
 38037                           plusw1	equ	0xFE3
 38038                           fsr1h	equ	0xFE2
 38039                           fsr1l	equ	0xFE1
 38040                           indf2	equ	0xFDF
 38041                           postinc2	equ	0xFDE
 38042                           postdec2	equ	0xFDD
 38043                           plusw2	equ	0xFDB
 38044                           fsr2h	equ	0xFDA
 38045                           fsr2l	equ	0xFD9
 38046                           status	equ	0xFD8
 38047                           
 38048 ;; *************** function _ExternalFlash_MediaInitialize *****************
 38049 ;; Defined at:
 38050 ;;		line 10 in file "external_flash.c"
 38051 ;; Parameters:    Size  Location     Type
 38052 ;;  config          2    0[BANK0 ] PTR void 
 38053 ;;		 -> NULL(0), 
 38054 ;; Auto vars:     Size  Location     Type
 38055 ;;		None
 38056 ;; Return value:  Size  Location     Type
 38057 ;;                  2    0[BANK0 ] PTR struct .
 38058 ;; Registers used:
 38059 ;;		wreg, status,2, status,0
 38060 ;; Tracked objects:
 38061 ;;		On entry : 0/0
 38062 ;;		On exit  : 0/0
 38063 ;;		Unchanged: 0/0
 38064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38065 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38068 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38069 ;;Total ram usage:        2 bytes
 38070 ;; Hardware stack levels used:    1
 38071 ;; Hardware stack levels required when called:   10
 38072 ;; This function calls:
 38073 ;;		Nothing
 38074 ;; This function is called by:
 38075 ;;		_USBMSDInit
 38076 ;;		_MSDProcessCommand
 38077 ;; This function uses a non-reentrant model
 38078 ;;
 38079                           
 38080                           	psect	text155
 38081  01560E                     __ptext155:
 38082                           	opt stack 0
 38083  01560E                     _ExternalFlash_MediaInitialize:
 38084                           	opt stack 0
 38085                           
 38086                           ; BSR set to: 0
 38087                           ;Skip over the trampoline to the duplicate function for level 2
 38088  01560E  B25F               	btfsc	btemp,1,c
 38089  015610  EF6C  F0AB         	goto	i2_ExternalFlash_MediaInitialize
 38090  015614                     _ExternalFlash_MediaInitialize$intlevel0:
 38091                           	opt stack 17
 38092                           
 38093                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 38094                           
 38095                           ;incstack = 0
 38096  015614  0102               	movlb	2	; () banked
 38097  015616  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 38098                           
 38099                           ; BSR set to: 2
 38100                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 38101  015618  0E02               	movlw	2
 38102  01561A  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 38103  01561C  0E00               	movlw	0
 38104  01561E  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 38105                           
 38106                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 38107  015620  0E00               	movlw	0
 38108  015622  6F84               	movwf	_mediaInformation& (0+255),b
 38109                           
 38110                           ; BSR set to: 2
 38111                           ;external_flash.c: 15: return &mediaInformation;
 38112  015624  0E84               	movlw	low _mediaInformation
 38113  015626  0100               	movlb	0	; () banked
 38114  015628  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 38115  01562A  0E02               	movlw	high _mediaInformation
 38116  01562C  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 38117  01562E  0012               	return	
 38118  015630                     __end_of_ExternalFlash_MediaInitialize:
 38119                           	opt stack 0
 38120                           tosu	equ	0xFFF
 38121                           tosh	equ	0xFFE
 38122                           tosl	equ	0xFFD
 38123                           pclath	equ	0xFFA
 38124                           tblptru	equ	0xFF8
 38125                           tblptrh	equ	0xFF7
 38126                           tblptrl	equ	0xFF6
 38127                           tablat	equ	0xFF5
 38128                           prodh	equ	0xFF4
 38129                           prodl	equ	0xFF3
 38130                           intcon	equ	0xFF2
 38131                           postinc0	equ	0xFEE
 38132                           wreg	equ	0xFE8
 38133                           indf1	equ	0xFE7
 38134                           postinc1	equ	0xFE6
 38135                           postdec1	equ	0xFE5
 38136                           plusw1	equ	0xFE3
 38137                           fsr1h	equ	0xFE2
 38138                           fsr1l	equ	0xFE1
 38139                           indf2	equ	0xFDF
 38140                           postinc2	equ	0xFDE
 38141                           postdec2	equ	0xFDD
 38142                           plusw2	equ	0xFDB
 38143                           fsr2h	equ	0xFDA
 38144                           fsr2l	equ	0xFD9
 38145                           status	equ	0xFD8
 38146                           
 38147 ;; *************** function _ExternalFlash_MediaDetect *****************
 38148 ;; Defined at:
 38149 ;;		line 29 in file "external_flash.c"
 38150 ;; Parameters:    Size  Location     Type
 38151 ;;  config          2    0[BANK0 ] PTR void 
 38152 ;;		 -> NULL(0), 
 38153 ;; Auto vars:     Size  Location     Type
 38154 ;;		None
 38155 ;; Return value:  Size  Location     Type
 38156 ;;                  1    wreg      unsigned char 
 38157 ;; Registers used:
 38158 ;;		wreg
 38159 ;; Tracked objects:
 38160 ;;		On entry : 0/0
 38161 ;;		On exit  : 0/0
 38162 ;;		Unchanged: 0/0
 38163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38164 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38167 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38168 ;;Total ram usage:        2 bytes
 38169 ;; Hardware stack levels used:    1
 38170 ;; Hardware stack levels required when called:   10
 38171 ;; This function calls:
 38172 ;;		Nothing
 38173 ;; This function is called by:
 38174 ;;		_USBMSDInit
 38175 ;;		_MSDProcessCommand
 38176 ;; This function uses a non-reentrant model
 38177 ;;
 38178                           
 38179                           	psect	text156
 38180  0157E6                     __ptext156:
 38181                           	opt stack 0
 38182  0157E6                     _ExternalFlash_MediaDetect:
 38183                           	opt stack 0
 38184                           
 38185                           ; BSR set to: 0
 38186                           ;Skip over the trampoline to the duplicate function for level 2
 38187  0157E6  B25F               	btfsc	btemp,1,c
 38188  0157E8  EF10  F0AC         	goto	i2_ExternalFlash_MediaDetect
 38189  0157EC                     _ExternalFlash_MediaDetect$intlevel0:
 38190                           	opt stack 17
 38191                           
 38192                           ;external_flash.c: 31: return 1;
 38193                           
 38194                           ;incstack = 0
 38195  0157EC  0E01               	movlw	1
 38196  0157EE  0012               	return	
 38197  0157F0                     __end_of_ExternalFlash_MediaDetect:
 38198                           	opt stack 0
 38199                           tosu	equ	0xFFF
 38200                           tosh	equ	0xFFE
 38201                           tosl	equ	0xFFD
 38202                           pclath	equ	0xFFA
 38203                           tblptru	equ	0xFF8
 38204                           tblptrh	equ	0xFF7
 38205                           tblptrl	equ	0xFF6
 38206                           tablat	equ	0xFF5
 38207                           prodh	equ	0xFF4
 38208                           prodl	equ	0xFF3
 38209                           intcon	equ	0xFF2
 38210                           postinc0	equ	0xFEE
 38211                           wreg	equ	0xFE8
 38212                           indf1	equ	0xFE7
 38213                           postinc1	equ	0xFE6
 38214                           postdec1	equ	0xFE5
 38215                           plusw1	equ	0xFE3
 38216                           fsr1h	equ	0xFE2
 38217                           fsr1l	equ	0xFE1
 38218                           indf2	equ	0xFDF
 38219                           postinc2	equ	0xFDE
 38220                           postdec2	equ	0xFDD
 38221                           plusw2	equ	0xFDB
 38222                           fsr2h	equ	0xFDA
 38223                           fsr2l	equ	0xFD9
 38224                           status	equ	0xFD8
 38225                           
 38226 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 38227 ;; Defined at:
 38228 ;;		line 73 in file "app_device_custom_hid.c"
 38229 ;; Parameters:    Size  Location     Type
 38230 ;;		None
 38231 ;; Auto vars:     Size  Location     Type
 38232 ;;  idx             1    0        unsigned char 
 38233 ;; Return value:  Size  Location     Type
 38234 ;;                  1    wreg      void 
 38235 ;; Registers used:
 38236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38237 ;; Tracked objects:
 38238 ;;		On entry : 0/0
 38239 ;;		On exit  : 0/0
 38240 ;;		Unchanged: 0/0
 38241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38246 ;;Total ram usage:        0 bytes
 38247 ;; Hardware stack levels used:    1
 38248 ;; Hardware stack levels required when called:   17
 38249 ;; This function calls:
 38250 ;;		_USBTransferOnePacket
 38251 ;;		_api_parse
 38252 ;;		_api_prepare
 38253 ;; This function is called by:
 38254 ;;		_main
 38255 ;; This function uses a non-reentrant model
 38256 ;;
 38257                           
 38258                           	psect	text157
 38259  01314E                     __ptext157:
 38260                           	opt stack 0
 38261  01314E                     _APP_DeviceCustomHIDTasks:
 38262                           	opt stack 13
 38263                           
 38264                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 38265                           
 38266                           ;incstack = 0
 38267  01314E  0E20               	movlw	32
 38268  013150  605E               	cpfslt	_USBDeviceState,c	;volatile
 38269  013152  D001               	goto	l944
 38270  013154  0012               	return	
 38271  013156                     l944:
 38272                           
 38273                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 38274  013156  B265               	btfsc	3941,1,c	;volatile
 38275  013158  0012               	return	
 38276                           
 38277                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 38278                           
 38279                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 38280  01315A  0101               	movlb	1	; () banked
 38281  01315C  5143               	movf	_USBOutHandle& (0+255),w,b
 38282  01315E  1144               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 38283  013160  B4D8               	btfsc	status,2,c
 38284  013162  D006               	goto	u16890
 38285                           
 38286                           ; BSR set to: 1
 38287  013164  C143  FFD9         	movff	_USBOutHandle,fsr2l
 38288  013168  C144  FFDA         	movff	_USBOutHandle+1,fsr2h
 38289  01316C  BEDF               	btfsc	indf2,7,c
 38290  01316E  0012               	return	
 38291  013170                     u16890:
 38292                           
 38293                           ; BSR set to: 1
 38294                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 38295                           
 38296                           ; BSR set to: 1
 38297  013170  5141               	movf	_USBInHandle& (0+255),w,b
 38298  013172  1142               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38299  013174  B4D8               	btfsc	status,2,c
 38300  013176  D006               	goto	u16910
 38301                           
 38302                           ; BSR set to: 1
 38303  013178  C141  FFD9         	movff	_USBInHandle,fsr2l
 38304  01317C  C142  FFDA         	movff	_USBInHandle+1,fsr2h
 38305  013180  BEDF               	btfsc	indf2,7,c
 38306  013182  D01B               	goto	l950
 38307  013184                     u16910:
 38308                           
 38309                           ; BSR set to: 1
 38310                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 38311                           
 38312                           ; BSR set to: 1
 38313  013184  0E78               	movlw	low _ReceivedDataBuffer
 38314  013186  0100               	movlb	0	; () banked
 38315  013188  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 38316  01318A  0E03               	movlw	high _ReceivedDataBuffer
 38317  01318C  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 38318  01318E  0E38               	movlw	low _ToSendDataBuffer
 38319  013190  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 38320  013192  0E03               	movlw	high _ToSendDataBuffer
 38321  013194  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 38322  013196  ECCA  F08F         	call	_api_prepare	;wreg free
 38323                           
 38324                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38325  01319A  0E01               	movlw	1
 38326  01319C  0100               	movlb	0	; () banked
 38327  01319E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38328  0131A0  0E38               	movlw	low _ToSendDataBuffer
 38329  0131A2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38330  0131A4  0E03               	movlw	high _ToSendDataBuffer
 38331  0131A6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38332  0131A8  0E40               	movlw	64
 38333  0131AA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38334  0131AC  0E01               	movlw	1
 38335  0131AE  EC30  F088         	call	_USBTransferOnePacket
 38336  0131B2  C060  F141         	movff	?_USBTransferOnePacket,_USBInHandle
 38337  0131B6  C061  F142         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 38338  0131BA                     l950:
 38339                           
 38340                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 38341  0131BA  0E78               	movlw	low _ReceivedDataBuffer
 38342  0131BC  0100               	movlb	0	; () banked
 38343  0131BE  6FC4               	movwf	api_parse@inBuffer& (0+255),b
 38344  0131C0  0E03               	movlw	high _ReceivedDataBuffer
 38345  0131C2  6FC5               	movwf	(api_parse@inBuffer+1)& (0+255),b
 38346  0131C4  0E40               	movlw	64
 38347  0131C6  6FC6               	movwf	api_parse@receivedDataLength& (0+255),b
 38348  0131C8  0E38               	movlw	low _ToSendDataBuffer
 38349  0131CA  6FC7               	movwf	api_parse@outBuffer& (0+255),b
 38350  0131CC  0E03               	movlw	high _ToSendDataBuffer
 38351  0131CE  6FC8               	movwf	(api_parse@outBuffer+1)& (0+255),b
 38352  0131D0  EC69  F084         	call	_api_parse	;wreg free
 38353                           
 38354                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 38355  0131D4  0E00               	movlw	0
 38356  0131D6  0100               	movlb	0	; () banked
 38357  0131D8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38358  0131DA  0E78               	movlw	low _ReceivedDataBuffer
 38359  0131DC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38360  0131DE  0E03               	movlw	high _ReceivedDataBuffer
 38361  0131E0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38362  0131E2  0E40               	movlw	64
 38363  0131E4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38364  0131E6  0E01               	movlw	1
 38365  0131E8  EC30  F088         	call	_USBTransferOnePacket
 38366  0131EC  C060  F143         	movff	?_USBTransferOnePacket,_USBOutHandle
 38367  0131F0  C061  F144         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 38368  0131F4  0012               	return	
 38369  0131F6                     __end_of_APP_DeviceCustomHIDTasks:
 38370                           	opt stack 0
 38371                           tosu	equ	0xFFF
 38372                           tosh	equ	0xFFE
 38373                           tosl	equ	0xFFD
 38374                           pclath	equ	0xFFA
 38375                           tblptru	equ	0xFF8
 38376                           tblptrh	equ	0xFF7
 38377                           tblptrl	equ	0xFF6
 38378                           tablat	equ	0xFF5
 38379                           prodh	equ	0xFF4
 38380                           prodl	equ	0xFF3
 38381                           intcon	equ	0xFF2
 38382                           postinc0	equ	0xFEE
 38383                           wreg	equ	0xFE8
 38384                           indf1	equ	0xFE7
 38385                           postinc1	equ	0xFE6
 38386                           postdec1	equ	0xFE5
 38387                           plusw1	equ	0xFE3
 38388                           fsr1h	equ	0xFE2
 38389                           fsr1l	equ	0xFE1
 38390                           indf2	equ	0xFDF
 38391                           postinc2	equ	0xFDE
 38392                           postdec2	equ	0xFDD
 38393                           plusw2	equ	0xFDB
 38394                           fsr2h	equ	0xFDA
 38395                           fsr2l	equ	0xFD9
 38396                           status	equ	0xFD8
 38397                           
 38398 ;; *************** function _api_prepare *****************
 38399 ;; Defined at:
 38400 ;;		line 36 in file "api.c"
 38401 ;; Parameters:    Size  Location     Type
 38402 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 38403 ;;		 -> ReceivedDataBuffer(64), 
 38404 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 38405 ;;		 -> ToSendDataBuffer(64), 
 38406 ;; Auto vars:     Size  Location     Type
 38407 ;;  command         1   20[BANK0 ] enum E6715
 38408 ;; Return value:  Size  Location     Type
 38409 ;;                  1    wreg      void 
 38410 ;; Registers used:
 38411 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38412 ;; Tracked objects:
 38413 ;;		On entry : 0/0
 38414 ;;		On exit  : 0/0
 38415 ;;		Unchanged: 0/0
 38416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38417 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38420 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38421 ;;Total ram usage:        5 bytes
 38422 ;; Hardware stack levels used:    1
 38423 ;; Hardware stack levels required when called:   12
 38424 ;; This function calls:
 38425 ;;		__fill_buffer_get_display
 38426 ;;		__fill_buffer_get_mode_details
 38427 ;;		__fill_buffer_get_status
 38428 ;;		_memcpy
 38429 ;; This function is called by:
 38430 ;;		_APP_DeviceCustomHIDTasks
 38431 ;; This function uses a non-reentrant model
 38432 ;;
 38433                           
 38434                           	psect	text158
 38435  011F94                     __ptext158:
 38436                           	opt stack 0
 38437  011F94                     _api_prepare:
 38438                           	opt stack 17
 38439                           
 38440                           ;api.c: 38: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 38441                           
 38442                           ;incstack = 0
 38443  011F94  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 38444  011F98  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 38445  011F9C  50DF               	movf	indf2,w,c
 38446  011F9E  0100               	movlb	0	; () banked
 38447  011FA0  6F74               	movwf	api_prepare@command& (0+255),b
 38448                           
 38449                           ; BSR set to: 0
 38450                           ;api.c: 40: if(command>0x7F)
 38451  011FA2  0E7F               	movlw	127
 38452  011FA4  6574               	cpfsgt	api_prepare@command& (0+255),b
 38453  011FA6  D051               	goto	l2224
 38454                           
 38455                           ; BSR set to: 0
 38456                           ;api.c: 47: outBuffer[0] = 0x99;
 38457                           
 38458                           ; BSR set to: 0
 38459                           
 38460                           ;api.c: 43: {;api.c: 46: default:
 38461                           
 38462                           ; BSR set to: 0
 38463                           ;api.c: 41: {;api.c: 42: switch(command)
 38464  011FA8  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38465  011FAC  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38466  011FB0  0E99               	movlw	153
 38467  011FB2  6EDF               	movwf	indf2,c
 38468                           
 38469                           ; BSR set to: 0
 38470                           ;api.c: 48: outBuffer[1] = 0x99;
 38471  011FB4  EE20 F001          	lfsr	2,1
 38472  011FB8  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38473  011FBA  26D9               	addwf	fsr2l,f,c
 38474  011FBC  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38475  011FBE  22DA               	addwfc	fsr2h,f,c
 38476  011FC0  0E99               	movlw	153
 38477  011FC2  6EDF               	movwf	indf2,c
 38478                           
 38479                           ;api.c: 49: }
 38480  011FC4  0012               	return	
 38481  011FC6                     
 38482                           ; BSR set to: 0
 38483                           ;api.c: 62: _fill_buffer_get_status(outBuffer);
 38484                           
 38485                           ; BSR set to: 0
 38486  011FC6  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 38487  011FCA  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 38488  011FCE  EC5F  F079         	call	__fill_buffer_get_status	;wreg free
 38489                           
 38490                           ;api.c: 63: break;
 38491  011FD2  0012               	return	
 38492  011FD4                     
 38493                           ;api.c: 67: _fill_buffer_get_display(outBuffer, 0);
 38494  011FD4  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38495  011FD8  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38496  011FDC  0E00               	movlw	0
 38497  011FDE  0100               	movlb	0	; () banked
 38498  011FE0  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38499  011FE2  ECEA  F095         	call	__fill_buffer_get_display	;wreg free
 38500                           
 38501                           ;api.c: 68: break;
 38502  011FE6  0012               	return	
 38503  011FE8                     
 38504                           ;api.c: 72: _fill_buffer_get_display(outBuffer, 1);
 38505  011FE8  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38506  011FEC  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38507  011FF0  0E01               	movlw	1
 38508  011FF2  0100               	movlb	0	; () banked
 38509  011FF4  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38510  011FF6  ECEA  F095         	call	__fill_buffer_get_display	;wreg free
 38511                           
 38512                           ;api.c: 73: break;
 38513  011FFA  0012               	return	
 38514  011FFC                     
 38515                           ;api.c: 77: _fill_buffer_get_mode_details(outBuffer);
 38516  011FFC  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 38517  012000  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 38518  012004  EC45  F07A         	call	__fill_buffer_get_mode_details	;wreg free
 38519                           
 38520                           ;api.c: 78: break;
 38521  012008  0012               	return	
 38522  01200A                     
 38523                           ;api.c: 82: memcpy(outBuffer, inBuffer, 64);
 38524  01200A  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 38525  01200E  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 38526  012012  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 38527  012016  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 38528  01201A  0E00               	movlw	0
 38529  01201C  0100               	movlb	0	; () banked
 38530  01201E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38531  012020  0E40               	movlw	64
 38532  012022  6F64               	movwf	memcpy@n& (0+255),b
 38533  012024  EC57  F0A1         	call	_memcpy	;wreg free
 38534                           
 38535                           ;api.c: 83: break;
 38536  012028  0012               	return	
 38537  01202A                     
 38538                           ;api.c: 86: outBuffer[0] = 0x99;
 38539  01202A  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38540  01202E  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38541  012032  0E99               	movlw	153
 38542  012034  6EDF               	movwf	indf2,c
 38543                           
 38544                           ;api.c: 87: outBuffer[1] = 0x99;
 38545  012036  0100               	movlb	0	; () banked
 38546  012038  EE20 F001          	lfsr	2,1
 38547  01203C  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38548  01203E  26D9               	addwf	fsr2l,f,c
 38549  012040  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38550  012042  22DA               	addwfc	fsr2h,f,c
 38551  012044  0E99               	movlw	153
 38552  012046  6EDF               	movwf	indf2,c
 38553                           
 38554                           ;api.c: 88: }
 38555  012048  0012               	return	
 38556  01204A                     l2224:
 38557                           
 38558                           ; BSR set to: 0
 38559                           
 38560                           ; BSR set to: 0
 38561  01204A  5174               	movf	api_prepare@command& (0+255),w,b
 38562                           
 38563                           ; Switch size 1, requested type "space"
 38564                           ; Number of cases is 6, Range of values is 0 to 32
 38565                           ; switch strategies available:
 38566                           ; Name         Instructions Cycles
 38567                           ; simple_byte           19    10 (average)
 38568                           ;	Chosen strategy is simple_byte
 38569  01204C  0A00               	xorlw	0	; case 0
 38570  01204E  B4D8               	btfsc	status,2,c
 38571  012050  0012               	return	
 38572  012052  0A10               	xorlw	16	; case 16
 38573  012054  B4D8               	btfsc	status,2,c
 38574  012056  D7B7               	goto	l2227
 38575  012058  0A01               	xorlw	1	; case 17
 38576  01205A  B4D8               	btfsc	status,2,c
 38577  01205C  D7BB               	goto	l2228
 38578  01205E  0A03               	xorlw	3	; case 18
 38579  012060  B4D8               	btfsc	status,2,c
 38580  012062  D7C2               	goto	l2229
 38581  012064  0A01               	xorlw	1	; case 19
 38582  012066  B4D8               	btfsc	status,2,c
 38583  012068  D7C9               	goto	l2230
 38584  01206A  0A33               	xorlw	51	; case 32
 38585  01206C  B4D8               	btfsc	status,2,c
 38586  01206E  D7CD               	goto	l2231
 38587  012070  D7DC               	goto	l2232
 38588  012072                     __end_of_api_prepare:
 38589                           	opt stack 0
 38590                           tosu	equ	0xFFF
 38591                           tosh	equ	0xFFE
 38592                           tosl	equ	0xFFD
 38593                           pclath	equ	0xFFA
 38594                           tblptru	equ	0xFF8
 38595                           tblptrh	equ	0xFF7
 38596                           tblptrl	equ	0xFF6
 38597                           tablat	equ	0xFF5
 38598                           prodh	equ	0xFF4
 38599                           prodl	equ	0xFF3
 38600                           intcon	equ	0xFF2
 38601                           postinc0	equ	0xFEE
 38602                           wreg	equ	0xFE8
 38603                           indf1	equ	0xFE7
 38604                           postinc1	equ	0xFE6
 38605                           postdec1	equ	0xFE5
 38606                           plusw1	equ	0xFE3
 38607                           fsr1h	equ	0xFE2
 38608                           fsr1l	equ	0xFE1
 38609                           indf2	equ	0xFDF
 38610                           postinc2	equ	0xFDE
 38611                           postdec2	equ	0xFDD
 38612                           plusw2	equ	0xFDB
 38613                           fsr2h	equ	0xFDA
 38614                           fsr2l	equ	0xFD9
 38615                           status	equ	0xFD8
 38616                           
 38617 ;; *************** function __fill_buffer_get_status *****************
 38618 ;; Defined at:
 38619 ;;		line 169 in file "api.c"
 38620 ;; Parameters:    Size  Location     Type
 38621 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 38622 ;;		 -> ToSendDataBuffer(64), 
 38623 ;; Auto vars:     Size  Location     Type
 38624 ;;		None
 38625 ;; Return value:  Size  Location     Type
 38626 ;;                  1    wreg      void 
 38627 ;; Registers used:
 38628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38629 ;; Tracked objects:
 38630 ;;		On entry : 0/0
 38631 ;;		On exit  : 0/0
 38632 ;;		Unchanged: 0/0
 38633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38638 ;;Total ram usage:        2 bytes
 38639 ;; Hardware stack levels used:    1
 38640 ;; Hardware stack levels required when called:   11
 38641 ;; This function calls:
 38642 ;;		_memcpy
 38643 ;; This function is called by:
 38644 ;;		_api_prepare
 38645 ;; This function uses a non-reentrant model
 38646 ;;
 38647                           
 38648                           	psect	text159
 38649  00F2BE                     __ptext159:
 38650                           	opt stack 0
 38651  00F2BE                     __fill_buffer_get_status:
 38652                           	opt stack 17
 38653                           
 38654                           ;api.c: 172: outBuffer[0] = DATAREQUEST_GET_STATUS;
 38655                           
 38656                           ;incstack = 0
 38657  00F2BE  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 38658  00F2C2  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 38659  00F2C6  0E10               	movlw	16
 38660  00F2C8  6EDF               	movwf	indf2,c
 38661                           
 38662                           ;api.c: 175: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38663  00F2CA  0100               	movlb	0	; () banked
 38664  00F2CC  EE20 F001          	lfsr	2,1
 38665  00F2D0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38666  00F2D2  26D9               	addwf	fsr2l,f,c
 38667  00F2D4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38668  00F2D6  22DA               	addwfc	fsr2h,f,c
 38669  00F2D8  0EBC               	movlw	188
 38670  00F2DA  6EDF               	movwf	indf2,c
 38671                           
 38672                           ; BSR set to: 0
 38673                           ;api.c: 176: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38674  00F2DC  EE20 F002          	lfsr	2,2
 38675  00F2E0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38676  00F2E2  26D9               	addwf	fsr2l,f,c
 38677  00F2E4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38678  00F2E6  22DA               	addwfc	fsr2h,f,c
 38679  00F2E8  0E26               	movlw	38
 38680  00F2EA  6EDF               	movwf	indf2,c
 38681                           
 38682                           ; BSR set to: 0
 38683                           ;api.c: 179: outBuffer[3] = 0x00;
 38684  00F2EC  EE20 F003          	lfsr	2,3
 38685  00F2F0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38686  00F2F2  26D9               	addwf	fsr2l,f,c
 38687  00F2F4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38688  00F2F6  22DA               	addwfc	fsr2h,f,c
 38689  00F2F8  0E00               	movlw	0
 38690  00F2FA  6EDF               	movwf	indf2,c
 38691                           
 38692                           ; BSR set to: 0
 38693                           ;api.c: 180: outBuffer[4] = 0x05;
 38694  00F2FC  EE20 F004          	lfsr	2,4
 38695  00F300  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38696  00F302  26D9               	addwf	fsr2l,f,c
 38697  00F304  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38698  00F306  22DA               	addwfc	fsr2h,f,c
 38699  00F308  0E05               	movlw	5
 38700  00F30A  6EDF               	movwf	indf2,c
 38701                           
 38702                           ; BSR set to: 0
 38703                           ;api.c: 181: outBuffer[5] = 0x00;
 38704  00F30C  EE20 F005          	lfsr	2,5
 38705  00F310  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38706  00F312  26D9               	addwf	fsr2l,f,c
 38707  00F314  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38708  00F316  22DA               	addwfc	fsr2h,f,c
 38709  00F318  0E00               	movlw	0
 38710  00F31A  6EDF               	movwf	indf2,c
 38711                           
 38712                           ; BSR set to: 0
 38713                           ;api.c: 184: outBuffer[6] = os.subTimeSlot;
 38714  00F31C  EE20 F006          	lfsr	2,6
 38715  00F320  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38716  00F322  26D9               	addwf	fsr2l,f,c
 38717  00F324  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38718  00F326  22DA               	addwfc	fsr2h,f,c
 38719  00F328  C171  FFDF         	movff	_os,indf2	;volatile
 38720                           
 38721                           ; BSR set to: 0
 38722                           ;api.c: 185: outBuffer[7] = os.timeSlot;
 38723  00F32C  EE20 F007          	lfsr	2,7
 38724  00F330  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38725  00F332  26D9               	addwf	fsr2l,f,c
 38726  00F334  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38727  00F336  22DA               	addwfc	fsr2h,f,c
 38728  00F338  C172  FFDF         	movff	_os+1,indf2	;volatile
 38729                           
 38730                           ; BSR set to: 0
 38731                           ;api.c: 186: outBuffer[8] = os.done;
 38732  00F33C  EE20 F008          	lfsr	2,8
 38733  00F340  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38734  00F342  26D9               	addwf	fsr2l,f,c
 38735  00F344  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38736  00F346  22DA               	addwfc	fsr2h,f,c
 38737  00F348  C173  FFDF         	movff	_os+2,indf2	;volatile
 38738                           
 38739                           ; BSR set to: 0
 38740                           ;api.c: 187: outBuffer[9] = os.encoder1Count;
 38741  00F34C  EE20 F009          	lfsr	2,9
 38742  00F350  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38743  00F352  26D9               	addwf	fsr2l,f,c
 38744  00F354  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38745  00F356  22DA               	addwfc	fsr2h,f,c
 38746  00F358  C174  FFDF         	movff	_os+3,indf2	;volatile
 38747                           
 38748                           ; BSR set to: 0
 38749                           ;api.c: 188: outBuffer[10] = os.button1;
 38750  00F35C  EE20 F00A          	lfsr	2,10
 38751  00F360  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38752  00F362  26D9               	addwf	fsr2l,f,c
 38753  00F364  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38754  00F366  22DA               	addwfc	fsr2h,f,c
 38755  00F368  C175  FFDF         	movff	_os+4,indf2	;volatile
 38756                           
 38757                           ; BSR set to: 0
 38758                           ;api.c: 189: outBuffer[11] = os.encoder2Count;
 38759  00F36C  EE20 F00B          	lfsr	2,11
 38760  00F370  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38761  00F372  26D9               	addwf	fsr2l,f,c
 38762  00F374  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38763  00F376  22DA               	addwfc	fsr2h,f,c
 38764  00F378  C176  FFDF         	movff	_os+5,indf2	;volatile
 38765                           
 38766                           ; BSR set to: 0
 38767                           ;api.c: 190: outBuffer[12] = os.button2;
 38768  00F37C  EE20 F00C          	lfsr	2,12
 38769  00F380  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38770  00F382  26D9               	addwf	fsr2l,f,c
 38771  00F384  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38772  00F386  22DA               	addwfc	fsr2h,f,c
 38773  00F388  C177  FFDF         	movff	_os+6,indf2	;volatile
 38774                           
 38775                           ; BSR set to: 0
 38776                           ;api.c: 191: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 38777  00F38C  0E0D               	movlw	13
 38778  00F38E  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38779  00F390  6F60               	movwf	memcpy@d1& (0+255),b
 38780  00F392  0E00               	movlw	0
 38781  00F394  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38782  00F396  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38783  00F398  0E78               	movlw	low (_os+7)
 38784  00F39A  6F62               	movwf	memcpy@s1& (0+255),b
 38785  00F39C  0E01               	movlw	high (_os+7)
 38786  00F39E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38787  00F3A0  0E00               	movlw	0
 38788  00F3A2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38789  00F3A4  0E04               	movlw	4
 38790  00F3A6  6F64               	movwf	memcpy@n& (0+255),b
 38791  00F3A8  EC57  F0A1         	call	_memcpy	;wreg free
 38792                           
 38793                           ;api.c: 196: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 38794  00F3AC  0E11               	movlw	17
 38795  00F3AE  0100               	movlb	0	; () banked
 38796  00F3B0  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38797  00F3B2  6F60               	movwf	memcpy@d1& (0+255),b
 38798  00F3B4  0E00               	movlw	0
 38799  00F3B6  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38800  00F3B8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38801  00F3BA  0E7C               	movlw	low (_os+11)
 38802  00F3BC  6F62               	movwf	memcpy@s1& (0+255),b
 38803  00F3BE  0E01               	movlw	high (_os+11)
 38804  00F3C0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38805  00F3C2  0E00               	movlw	0
 38806  00F3C4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38807  00F3C6  0E04               	movlw	4
 38808  00F3C8  6F64               	movwf	memcpy@n& (0+255),b
 38809  00F3CA  EC57  F0A1         	call	_memcpy	;wreg free
 38810                           
 38811                           ;api.c: 201: outBuffer[21] = os.displayState;
 38812  00F3CE  0100               	movlb	0	; () banked
 38813  00F3D0  EE20 F015          	lfsr	2,21
 38814  00F3D4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38815  00F3D6  26D9               	addwf	fsr2l,f,c
 38816  00F3D8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38817  00F3DA  22DA               	addwfc	fsr2h,f,c
 38818  00F3DC  C17E  FFDF         	movff	_os+13,indf2	;volatile
 38819                           
 38820                           ; BSR set to: 0
 38821                           ;api.c: 202: outBuffer[22] = os.beep_count;
 38822  00F3E0  EE20 F016          	lfsr	2,22
 38823  00F3E4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38824  00F3E6  26D9               	addwf	fsr2l,f,c
 38825  00F3E8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38826  00F3EA  22DA               	addwfc	fsr2h,f,c
 38827  00F3EC  C197  FFDF         	movff	_os+38,indf2	;volatile
 38828                           
 38829                           ; BSR set to: 0
 38830                           ;api.c: 203: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 38831  00F3F0  EE20 F017          	lfsr	2,23
 38832  00F3F4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38833  00F3F6  26D9               	addwf	fsr2l,f,c
 38834  00F3F8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38835  00F3FA  22DA               	addwfc	fsr2h,f,c
 38836  00F3FC  C198  FFDF         	movff	_os+39,indf2	;volatile
 38837                           
 38838                           ; BSR set to: 0
 38839                           ;api.c: 204: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 38840  00F400  EE20 F018          	lfsr	2,24
 38841  00F404  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38842  00F406  26D9               	addwf	fsr2l,f,c
 38843  00F408  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38844  00F40A  22DA               	addwfc	fsr2h,f,c
 38845  00F40C  0101               	movlb	1	; () banked
 38846  00F40E  5199               	movf	(_os+40)& (0+255),w,b	;volatile
 38847  00F410  6EDF               	movwf	indf2,c
 38848                           
 38849                           ; BSR set to: 1
 38850                           ;api.c: 205: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 38851  00F412  0100               	movlb	0	; () banked
 38852  00F414  EE20 F019          	lfsr	2,25
 38853  00F418  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38854  00F41A  26D9               	addwf	fsr2l,f,c
 38855  00F41C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38856  00F41E  22DA               	addwfc	fsr2h,f,c
 38857  00F420  C19A  FFDF         	movff	_os+41,indf2	;volatile
 38858                           
 38859                           ; BSR set to: 0
 38860                           ;api.c: 206: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 38861  00F424  EE20 F01A          	lfsr	2,26
 38862  00F428  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38863  00F42A  26D9               	addwf	fsr2l,f,c
 38864  00F42C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38865  00F42E  22DA               	addwfc	fsr2h,f,c
 38866  00F430  0101               	movlb	1	; () banked
 38867  00F432  519B               	movf	(_os+42)& (0+255),w,b	;volatile
 38868  00F434  6EDF               	movwf	indf2,c
 38869                           
 38870                           ; BSR set to: 1
 38871                           ;api.c: 207: outBuffer[27] = os.fan_on;
 38872  00F436  0100               	movlb	0	; () banked
 38873  00F438  EE20 F01B          	lfsr	2,27
 38874  00F43C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38875  00F43E  26D9               	addwf	fsr2l,f,c
 38876  00F440  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38877  00F442  22DA               	addwfc	fsr2h,f,c
 38878  00F444  C19F  FFDF         	movff	_os+46,indf2	;volatile
 38879                           
 38880                           ; BSR set to: 0
 38881                           ;api.c: 208: outBuffer[28] = os.brake_on;
 38882  00F448  EE20 F01C          	lfsr	2,28
 38883  00F44C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38884  00F44E  26D9               	addwf	fsr2l,f,c
 38885  00F450  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38886  00F452  22DA               	addwfc	fsr2h,f,c
 38887  00F454  C1A0  FFDF         	movff	_os+47,indf2	;volatile
 38888                           
 38889                           ; BSR set to: 0
 38890                           ;api.c: 209: outBuffer[29] = os.busy;
 38891  00F458  EE20 F01D          	lfsr	2,29
 38892  00F45C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38893  00F45E  26D9               	addwf	fsr2l,f,c
 38894  00F460  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38895  00F462  22DA               	addwfc	fsr2h,f,c
 38896  00F464  C17F  FFDF         	movff	_os+14,indf2	;volatile
 38897                           
 38898                           ; BSR set to: 0
 38899                           ;api.c: 223: memcpy(&outBuffer[42], &config, 22);
 38900  00F468  0E2A               	movlw	42
 38901  00F46A  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38902  00F46C  6F60               	movwf	memcpy@d1& (0+255),b
 38903  00F46E  0E00               	movlw	0
 38904  00F470  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38905  00F472  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38906  00F474  0EA1               	movlw	low _config
 38907  00F476  6F62               	movwf	memcpy@s1& (0+255),b
 38908  00F478  0E01               	movlw	high _config
 38909  00F47A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38910  00F47C  0E00               	movlw	0
 38911  00F47E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38912  00F480  0E16               	movlw	22
 38913  00F482  6F64               	movwf	memcpy@n& (0+255),b
 38914  00F484  EC57  F0A1         	call	_memcpy	;wreg free
 38915  00F488  0012               	return		;funcret
 38916  00F48A                     __end_of__fill_buffer_get_status:
 38917                           	opt stack 0
 38918                           tosu	equ	0xFFF
 38919                           tosh	equ	0xFFE
 38920                           tosl	equ	0xFFD
 38921                           pclath	equ	0xFFA
 38922                           tblptru	equ	0xFF8
 38923                           tblptrh	equ	0xFF7
 38924                           tblptrl	equ	0xFF6
 38925                           tablat	equ	0xFF5
 38926                           prodh	equ	0xFF4
 38927                           prodl	equ	0xFF3
 38928                           intcon	equ	0xFF2
 38929                           postinc0	equ	0xFEE
 38930                           wreg	equ	0xFE8
 38931                           indf1	equ	0xFE7
 38932                           postinc1	equ	0xFE6
 38933                           postdec1	equ	0xFE5
 38934                           plusw1	equ	0xFE3
 38935                           fsr1h	equ	0xFE2
 38936                           fsr1l	equ	0xFE1
 38937                           indf2	equ	0xFDF
 38938                           postinc2	equ	0xFDE
 38939                           postdec2	equ	0xFDD
 38940                           plusw2	equ	0xFDB
 38941                           fsr2h	equ	0xFDA
 38942                           fsr2l	equ	0xFD9
 38943                           status	equ	0xFD8
 38944                           
 38945 ;; *************** function _memcpy *****************
 38946 ;; Defined at:
 38947 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 38948 ;; Parameters:    Size  Location     Type
 38949 ;;  d1              2    0[BANK0 ] PTR void 
 38950 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38951 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38952 ;;  s1              2    2[BANK0 ] PTR const void 
 38953 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38954 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38955 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38956 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38957 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38958 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38959 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38960 ;;  n               2    4[BANK0 ] unsigned int 
 38961 ;; Auto vars:     Size  Location     Type
 38962 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 38963 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38964 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38965 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38966 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38967 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38968 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38969 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38970 ;;  d               2    6[BANK0 ] PTR unsigned char 
 38971 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38972 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38973 ;;  tmp             1   10[BANK0 ] unsigned char 
 38974 ;; Return value:  Size  Location     Type
 38975 ;;                  2    0[BANK0 ] PTR void 
 38976 ;; Registers used:
 38977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 38978 ;; Tracked objects:
 38979 ;;		On entry : 0/0
 38980 ;;		On exit  : 0/0
 38981 ;;		Unchanged: 0/0
 38982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38983 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38984 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38986 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38987 ;;Total ram usage:       11 bytes
 38988 ;; Hardware stack levels used:    1
 38989 ;; Hardware stack levels required when called:   10
 38990 ;; This function calls:
 38991 ;;		Nothing
 38992 ;; This function is called by:
 38993 ;;		_MSDProcessCommandMediaPresent
 38994 ;;		__display_start
 38995 ;;		_display_prepare
 38996 ;;		__flash_set_page_size
 38997 ;;		_fat_create_file
 38998 ;;		_api_prepare
 38999 ;;		__fill_buffer_get_status
 39000 ;; This function uses a non-reentrant model
 39001 ;;
 39002                           
 39003                           	psect	text160
 39004  0142AE                     __ptext160:
 39005                           	opt stack 0
 39006  0142AE                     _memcpy:
 39007                           	opt stack 17
 39008                           
 39009                           ;incstack = 0
 39010  0142AE  C062  F068         	movff	memcpy@s1,memcpy@s
 39011  0142B2  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 39012  0142B6  C060  F066         	movff	memcpy@d1,memcpy@d
 39013  0142BA  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 39014  0142BE  D01D               	goto	l3641
 39015  0142C0                     l12699:
 39016  0142C0  C068  FFF6         	movff	memcpy@s,tblptrl
 39017  0142C4  C069  FFF7         	movff	memcpy@s+1,tblptrh
 39018  0142C8  0E00               	movlw	low (__mediumconst shr (0+16))
 39019  0142CA  6EF8               	movwf	tblptru,c
 39020  0142CC  0E0E               	movlw	(high __ramtop+-1)
 39021  0142CE  64F7               	cpfsgt	tblptrh,c
 39022  0142D0  D003               	bra	u11037
 39023  0142D2  0008               	tblrd		*
 39024  0142D4  50F5               	movf	tablat,w,c
 39025  0142D6  D005               	bra	u11030
 39026  0142D8                     u11037:
 39027  0142D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 39028  0142DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 39029  0142E0  50EF               	movf	indf0,w,c
 39030  0142E2                     u11030:
 39031  0142E2  0100               	movlb	0	; () banked
 39032  0142E4  6F6A               	movwf	memcpy@tmp& (0+255),b
 39033                           
 39034                           ; BSR set to: 0
 39035  0142E6  4B68               	infsnz	memcpy@s& (0+255),f,b
 39036  0142E8  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 39037                           
 39038                           ; BSR set to: 0
 39039  0142EA  C066  FFD9         	movff	memcpy@d,fsr2l
 39040  0142EE  C067  FFDA         	movff	memcpy@d+1,fsr2h
 39041  0142F2  C06A  FFDF         	movff	memcpy@tmp,indf2
 39042                           
 39043                           ; BSR set to: 0
 39044  0142F6  4B66               	infsnz	memcpy@d& (0+255),f,b
 39045  0142F8  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 39046  0142FA                     l3641:
 39047                           
 39048                           ; BSR set to: 0
 39049  0142FA  0100               	movlb	0	; () banked
 39050  0142FC  0764               	decf	memcpy@n& (0+255),f,b
 39051  0142FE  A0D8               	btfss	status,0,c
 39052  014300  0765               	decf	(memcpy@n+1)& (0+255),f,b
 39053  014302  2964               	incf	memcpy@n& (0+255),w,b
 39054  014304  E1DD               	bnz	l12699
 39055  014306  2965               	incf	(memcpy@n+1)& (0+255),w,b
 39056  014308  B4D8               	btfsc	status,2,c
 39057  01430A  0012               	return	
 39058  01430C  D7D9               	goto	l3642
 39059  01430E                     __end_of_memcpy:
 39060                           	opt stack 0
 39061                           tosu	equ	0xFFF
 39062                           tosh	equ	0xFFE
 39063                           tosl	equ	0xFFD
 39064                           pclath	equ	0xFFA
 39065                           tblptru	equ	0xFF8
 39066                           tblptrh	equ	0xFF7
 39067                           tblptrl	equ	0xFF6
 39068                           tablat	equ	0xFF5
 39069                           prodh	equ	0xFF4
 39070                           prodl	equ	0xFF3
 39071                           intcon	equ	0xFF2
 39072                           indf0	equ	0xFEF
 39073                           postinc0	equ	0xFEE
 39074                           fsr0h	equ	0xFEA
 39075                           fsr0l	equ	0xFE9
 39076                           wreg	equ	0xFE8
 39077                           indf1	equ	0xFE7
 39078                           postinc1	equ	0xFE6
 39079                           postdec1	equ	0xFE5
 39080                           plusw1	equ	0xFE3
 39081                           fsr1h	equ	0xFE2
 39082                           fsr1l	equ	0xFE1
 39083                           indf2	equ	0xFDF
 39084                           postinc2	equ	0xFDE
 39085                           postdec2	equ	0xFDD
 39086                           plusw2	equ	0xFDB
 39087                           fsr2h	equ	0xFDA
 39088                           fsr2l	equ	0xFD9
 39089                           status	equ	0xFD8
 39090                           
 39091 ;; *************** function __fill_buffer_get_mode_details *****************
 39092 ;; Defined at:
 39093 ;;		line 268 in file "api.c"
 39094 ;; Parameters:    Size  Location     Type
 39095 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 39096 ;;		 -> ToSendDataBuffer(64), 
 39097 ;; Auto vars:     Size  Location     Type
 39098 ;;		None
 39099 ;; Return value:  Size  Location     Type
 39100 ;;                  1    wreg      void 
 39101 ;; Registers used:
 39102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39103 ;; Tracked objects:
 39104 ;;		On entry : 0/0
 39105 ;;		On exit  : 0/0
 39106 ;;		Unchanged: 0/0
 39107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39108 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39110 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39111 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39112 ;;Total ram usage:        4 bytes
 39113 ;; Hardware stack levels used:    1
 39114 ;; Hardware stack levels required when called:   10
 39115 ;; This function calls:
 39116 ;;		Nothing
 39117 ;; This function is called by:
 39118 ;;		_api_prepare
 39119 ;; This function uses a non-reentrant model
 39120 ;;
 39121                           
 39122                           	psect	text161
 39123  00F48A                     __ptext161:
 39124                           	opt stack 0
 39125  00F48A                     __fill_buffer_get_mode_details:
 39126                           	opt stack 18
 39127                           
 39128                           ;api.c: 271: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 39129                           
 39130                           ; BSR set to: 0
 39131                           ;incstack = 0
 39132  00F48A  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 39133  00F48E  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 39134  00F492  0E13               	movlw	19
 39135  00F494  6EDF               	movwf	indf2,c
 39136                           
 39137                           ;api.c: 274: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39138  00F496  0100               	movlb	0	; () banked
 39139  00F498  EE20 F001          	lfsr	2,1
 39140  00F49C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39141  00F49E  26D9               	addwf	fsr2l,f,c
 39142  00F4A0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39143  00F4A2  22DA               	addwfc	fsr2h,f,c
 39144  00F4A4  0EBC               	movlw	188
 39145  00F4A6  6EDF               	movwf	indf2,c
 39146                           
 39147                           ; BSR set to: 0
 39148                           ;api.c: 275: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39149  00F4A8  EE20 F002          	lfsr	2,2
 39150  00F4AC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39151  00F4AE  26D9               	addwf	fsr2l,f,c
 39152  00F4B0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39153  00F4B2  22DA               	addwfc	fsr2h,f,c
 39154  00F4B4  0E26               	movlw	38
 39155  00F4B6  6EDF               	movwf	indf2,c
 39156                           
 39157                           ; BSR set to: 0
 39158                           ;api.c: 278: outBuffer[3] = os.displayState;
 39159  00F4B8  EE20 F003          	lfsr	2,3
 39160  00F4BC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39161  00F4BE  26D9               	addwf	fsr2l,f,c
 39162  00F4C0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39163  00F4C2  22DA               	addwfc	fsr2h,f,c
 39164  00F4C4  C17E  FFDF         	movff	_os+13,indf2	;volatile
 39165                           
 39166                           ;api.c: 280: switch(os.displayState & 0x0F)
 39167  00F4C8  D090               	goto	l2267
 39168  00F4CA                     
 39169                           ; BSR set to: 0
 39170                           ;api.c: 286: case DISPLAY_STATE_SETUP2:;api.c: 287: outBuffer[4] = os.setup_step_size;
 39171                           
 39172                           ; BSR set to: 0
 39173                           
 39174                           ; BSR set to: 0
 39175  00F4CA  EE20 F004          	lfsr	2,4
 39176  00F4CE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39177  00F4D0  26D9               	addwf	fsr2l,f,c
 39178  00F4D2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39179  00F4D4  22DA               	addwfc	fsr2h,f,c
 39180  00F4D6  C181  FFDF         	movff	_os+16,indf2	;volatile
 39181                           
 39182                           ;api.c: 288: break;
 39183  00F4DA  0012               	return	
 39184  00F4DC                     
 39185                           ; BSR set to: 0
 39186                           ;api.c: 291: case DISPLAY_STATE_DIVIDE2:;api.c: 293: outBuffer[4] = os.divide_step_size;
 39187                           
 39188                           ; BSR set to: 0
 39189                           
 39190                           ; BSR set to: 0
 39191  00F4DC  EE20 F004          	lfsr	2,4
 39192  00F4E0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39193  00F4E2  26D9               	addwf	fsr2l,f,c
 39194  00F4E4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39195  00F4E6  22DA               	addwfc	fsr2h,f,c
 39196  00F4E8  C186  FFDF         	movff	_os+21,indf2	;volatile
 39197                           
 39198                           ;api.c: 294: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 39199  00F4EC  EE20 F005          	lfsr	2,5
 39200  00F4F0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39201  00F4F2  26D9               	addwf	fsr2l,f,c
 39202  00F4F4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39203  00F4F6  22DA               	addwfc	fsr2h,f,c
 39204  00F4F8  0101               	movlb	1	; () banked
 39205  00F4FA  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 39206  00F4FC  6EDF               	movwf	indf2,c
 39207                           
 39208                           ;api.c: 295: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 39209  00F4FE  0100               	movlb	0	; () banked
 39210  00F500  EE20 F006          	lfsr	2,6
 39211  00F504  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39212  00F506  26D9               	addwf	fsr2l,f,c
 39213  00F508  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39214  00F50A  22DA               	addwfc	fsr2h,f,c
 39215  00F50C  C184  FFDF         	movff	_os+19,indf2	;volatile
 39216                           
 39217                           ;api.c: 296: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 39218  00F510  EE20 F007          	lfsr	2,7
 39219  00F514  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39220  00F516  26D9               	addwf	fsr2l,f,c
 39221  00F518  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39222  00F51A  22DA               	addwfc	fsr2h,f,c
 39223  00F51C  0101               	movlb	1	; () banked
 39224  00F51E  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 39225  00F520  6EDF               	movwf	indf2,c
 39226                           
 39227                           ;api.c: 297: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 39228  00F522  0100               	movlb	0	; () banked
 39229  00F524  EE20 F008          	lfsr	2,8
 39230  00F528  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39231  00F52A  26D9               	addwf	fsr2l,f,c
 39232  00F52C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39233  00F52E  22DA               	addwfc	fsr2h,f,c
 39234  00F530  C189  FFDF         	movff	_os+24,indf2	;volatile
 39235                           
 39236                           ;api.c: 298: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 39237  00F534  EE20 F009          	lfsr	2,9
 39238  00F538  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39239  00F53A  26D9               	addwf	fsr2l,f,c
 39240  00F53C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39241  00F53E  22DA               	addwfc	fsr2h,f,c
 39242  00F540  0101               	movlb	1	; () banked
 39243  00F542  5188               	movf	(_os+23)& (0+255),w,b	;volatile
 39244  00F544  6EDF               	movwf	indf2,c
 39245                           
 39246                           ;api.c: 299: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 39247  00F546  0100               	movlb	0	; () banked
 39248  00F548  EE20 F00A          	lfsr	2,10
 39249  00F54C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39250  00F54E  26D9               	addwf	fsr2l,f,c
 39251  00F550  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39252  00F552  22DA               	addwfc	fsr2h,f,c
 39253  00F554  C187  FFDF         	movff	_os+22,indf2	;volatile
 39254                           
 39255                           ;api.c: 300: break;
 39256  00F558  0012               	return	
 39257  00F55A                     
 39258                           ; BSR set to: 0
 39259                           ;api.c: 303: case DISPLAY_STATE_ARC2:;api.c: 304: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 39260                           
 39261                           ; BSR set to: 0
 39262                           
 39263                           ; BSR set to: 0
 39264  00F55A  EE20 F004          	lfsr	2,4
 39265  00F55E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39266  00F560  26D9               	addwf	fsr2l,f,c
 39267  00F562  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39268  00F564  22DA               	addwfc	fsr2h,f,c
 39269  00F566  0101               	movlb	1	; () banked
 39270  00F568  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 39271  00F56A  6EDF               	movwf	indf2,c
 39272                           
 39273                           ;api.c: 305: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 39274  00F56C  0100               	movlb	0	; () banked
 39275  00F56E  EE20 F005          	lfsr	2,5
 39276  00F572  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39277  00F574  26D9               	addwf	fsr2l,f,c
 39278  00F576  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39279  00F578  22DA               	addwfc	fsr2h,f,c
 39280  00F57A  C18B  FFDF         	movff	_os+26,indf2	;volatile
 39281                           
 39282                           ;api.c: 306: outBuffer[6] = os.arc_direction;
 39283  00F57E  EE20 F006          	lfsr	2,6
 39284  00F582  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39285  00F584  26D9               	addwf	fsr2l,f,c
 39286  00F586  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39287  00F588  22DA               	addwfc	fsr2h,f,c
 39288  00F58A  C193  FFDF         	movff	_os+34,indf2	;volatile
 39289                           
 39290                           ;api.c: 307: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 39291  00F58E  EE20 F007          	lfsr	2,7
 39292  00F592  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39293  00F594  26D9               	addwf	fsr2l,f,c
 39294  00F596  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39295  00F598  22DA               	addwfc	fsr2h,f,c
 39296  00F59A  0101               	movlb	1	; () banked
 39297  00F59C  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 39298  00F59E  6EDF               	movwf	indf2,c
 39299                           
 39300                           ;api.c: 308: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 39301  00F5A0  0100               	movlb	0	; () banked
 39302  00F5A2  EE20 F008          	lfsr	2,8
 39303  00F5A6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39304  00F5A8  26D9               	addwf	fsr2l,f,c
 39305  00F5AA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39306  00F5AC  22DA               	addwfc	fsr2h,f,c
 39307  00F5AE  C191  FFDF         	movff	_os+32,indf2	;volatile
 39308                           
 39309                           ; BSR set to: 0
 39310                           ;api.c: 312: break;
 39311                           
 39312                           ;api.c: 311: case DISPLAY_STATE_ZERO:
 39313                           
 39314                           ;api.c: 309: break;
 39315  00F5B2  0012               	return	
 39316  00F5B4                     
 39317                           ; BSR set to: 0
 39318                           ;api.c: 315: outBuffer[4] = os.manual_direction;
 39319                           
 39320                           ; BSR set to: 0
 39321  00F5B4  EE20 F004          	lfsr	2,4
 39322  00F5B8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39323  00F5BA  26D9               	addwf	fsr2l,f,c
 39324  00F5BC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39325  00F5BE  22DA               	addwfc	fsr2h,f,c
 39326  00F5C0  C196  FFDF         	movff	_os+37,indf2	;volatile
 39327                           
 39328                           ;api.c: 316: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 39329  00F5C4  EE20 F005          	lfsr	2,5
 39330  00F5C8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39331  00F5CA  26D9               	addwf	fsr2l,f,c
 39332  00F5CC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39333  00F5CE  22DA               	addwfc	fsr2h,f,c
 39334  00F5D0  0101               	movlb	1	; () banked
 39335  00F5D2  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 39336  00F5D4  6EDF               	movwf	indf2,c
 39337                           
 39338                           ;api.c: 317: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 39339  00F5D6  0100               	movlb	0	; () banked
 39340  00F5D8  EE20 F006          	lfsr	2,6
 39341  00F5DC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39342  00F5DE  26D9               	addwf	fsr2l,f,c
 39343  00F5E0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39344  00F5E2  22DA               	addwfc	fsr2h,f,c
 39345  00F5E4  C194  FFDF         	movff	_os+35,indf2	;volatile
 39346                           
 39347                           ; BSR set to: 0
 39348                           ;api.c: 319: }
 39349                           
 39350                           ;api.c: 318: break;
 39351  00F5E8  0012               	return	
 39352  00F5EA                     l2267:
 39353                           
 39354                           ; BSR set to: 0
 39355                           
 39356                           ; BSR set to: 0
 39357  00F5EA  0101               	movlb	1	; () banked
 39358  00F5EC  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 39359  00F5EE  0B0F               	andlw	15
 39360  00F5F0  0100               	movlb	0	; () banked
 39361  00F5F2  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 39362  00F5F4  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 39363                           
 39364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39365                           ; Switch size 1, requested type "space"
 39366                           ; Number of cases is 1, Range of values is 0 to 0
 39367                           ; switch strategies available:
 39368                           ; Name         Instructions Cycles
 39369                           ; simple_byte            4     3 (average)
 39370                           ;	Chosen strategy is simple_byte
 39371  00F5F6  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 39372  00F5F8  0A00               	xorlw	0	; case 0
 39373  00F5FA  A4D8               	btfss	status,2,c
 39374  00F5FC  0012               	return	
 39375                           
 39376                           ; BSR set to: 0
 39377                           ; Switch size 1, requested type "space"
 39378                           ; Number of cases is 9, Range of values is 0 to 128
 39379                           ; switch strategies available:
 39380                           ; Name         Instructions Cycles
 39381                           ; simple_byte           28    15 (average)
 39382                           ;	Chosen strategy is simple_byte
 39383  00F5FE  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 39384  00F600  0A00               	xorlw	0	; case 0
 39385  00F602  B4D8               	btfsc	status,2,c
 39386  00F604  0012               	return	
 39387  00F606  0A10               	xorlw	16	; case 16
 39388  00F608  B4D8               	btfsc	status,2,c
 39389  00F60A  D75F               	goto	l2270
 39390  00F60C  0A30               	xorlw	48	; case 32
 39391  00F60E  B4D8               	btfsc	status,2,c
 39392  00F610  D75C               	goto	l2270
 39393  00F612  0A10               	xorlw	16	; case 48
 39394  00F614  B4D8               	btfsc	status,2,c
 39395  00F616  D762               	goto	l2272
 39396  00F618  0A70               	xorlw	112	; case 64
 39397  00F61A  B4D8               	btfsc	status,2,c
 39398  00F61C  D75F               	goto	l2272
 39399  00F61E  0A10               	xorlw	16	; case 80
 39400  00F620  B4D8               	btfsc	status,2,c
 39401  00F622  D79B               	goto	l2274
 39402  00F624  0A30               	xorlw	48	; case 96
 39403  00F626  B4D8               	btfsc	status,2,c
 39404  00F628  D798               	goto	l2274
 39405  00F62A  0A10               	xorlw	16	; case 112
 39406  00F62C  B4D8               	btfsc	status,2,c
 39407  00F62E  0012               	return	
 39408  00F630  0AF0               	xorlw	240	; case 128
 39409  00F632  A4D8               	btfss	status,2,c
 39410  00F634  0012               	return	
 39411  00F636  D7BE               	goto	l2277
 39412  00F638                     __end_of__fill_buffer_get_mode_details:
 39413                           	opt stack 0
 39414                           tosu	equ	0xFFF
 39415                           tosh	equ	0xFFE
 39416                           tosl	equ	0xFFD
 39417                           pclath	equ	0xFFA
 39418                           tblptru	equ	0xFF8
 39419                           tblptrh	equ	0xFF7
 39420                           tblptrl	equ	0xFF6
 39421                           tablat	equ	0xFF5
 39422                           prodh	equ	0xFF4
 39423                           prodl	equ	0xFF3
 39424                           intcon	equ	0xFF2
 39425                           indf0	equ	0xFEF
 39426                           postinc0	equ	0xFEE
 39427                           fsr0h	equ	0xFEA
 39428                           fsr0l	equ	0xFE9
 39429                           wreg	equ	0xFE8
 39430                           indf1	equ	0xFE7
 39431                           postinc1	equ	0xFE6
 39432                           postdec1	equ	0xFE5
 39433                           plusw1	equ	0xFE3
 39434                           fsr1h	equ	0xFE2
 39435                           fsr1l	equ	0xFE1
 39436                           indf2	equ	0xFDF
 39437                           postinc2	equ	0xFDE
 39438                           postdec2	equ	0xFDD
 39439                           plusw2	equ	0xFDB
 39440                           fsr2h	equ	0xFDA
 39441                           fsr2l	equ	0xFD9
 39442                           status	equ	0xFD8
 39443                           
 39444 ;; *************** function __fill_buffer_get_display *****************
 39445 ;; Defined at:
 39446 ;;		line 227 in file "api.c"
 39447 ;; Parameters:    Size  Location     Type
 39448 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 39449 ;;		 -> ToSendDataBuffer(64), 
 39450 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 39451 ;; Auto vars:     Size  Location     Type
 39452 ;;  position        1   15[BANK0 ] unsigned char 
 39453 ;;  start_line      1   14[BANK0 ] unsigned char 
 39454 ;;  line            1   13[BANK0 ] unsigned char 
 39455 ;;  cntr            1   12[BANK0 ] unsigned char 
 39456 ;; Return value:  Size  Location     Type
 39457 ;;                  1    wreg      void 
 39458 ;; Registers used:
 39459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39460 ;; Tracked objects:
 39461 ;;		On entry : 0/0
 39462 ;;		On exit  : 0/0
 39463 ;;		Unchanged: 0/0
 39464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39465 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39466 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39467 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39468 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39469 ;;Total ram usage:       12 bytes
 39470 ;; Hardware stack levels used:    1
 39471 ;; Hardware stack levels required when called:   11
 39472 ;; This function calls:
 39473 ;;		_display_get_character
 39474 ;; This function is called by:
 39475 ;;		_api_prepare
 39476 ;; This function uses a non-reentrant model
 39477 ;;
 39478                           
 39479                           	psect	text162
 39480  012BD4                     __ptext162:
 39481                           	opt stack 0
 39482  012BD4                     __fill_buffer_get_display:
 39483                           	opt stack 17
 39484                           
 39485                           ;api.c: 229: uint8_t cntr;;api.c: 230: uint8_t line;;api.c: 231: uint8_t start_line;;api
      +                          .c: 232: uint8_t position;;api.c: 235: if(secondHalf)
 39486                           
 39487                           ; BSR set to: 0
 39488                           ;incstack = 0
 39489  012BD4  0100               	movlb	0	; () banked
 39490  012BD6  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39491  012BD8  B4D8               	btfsc	status,2,c
 39492  012BDA  D006               	goto	l2255
 39493                           
 39494                           ; BSR set to: 0
 39495                           ;api.c: 236: {;api.c: 237: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 39496  012BDC  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39497  012BE0  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39498  012BE4  0E12               	movlw	18
 39499  012BE6  D005               	goto	L61
 39500  012BE8                     l2255:
 39501                           
 39502                           ; BSR set to: 0
 39503                           ;api.c: 239: else;api.c: 240: {;api.c: 241: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 39504                           
 39505                           ; BSR set to: 0
 39506  012BE8  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39507  012BEC  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39508  012BF0  0E11               	movlw	17
 39509  012BF2                     L61:
 39510  012BF2  6EDF               	movwf	indf2,c
 39511                           
 39512                           ; BSR set to: 0
 39513                           ;api.c: 242: };api.c: 245: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39514                           
 39515                           ; BSR set to: 0
 39516  012BF4  EE20 F001          	lfsr	2,1
 39517  012BF8  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39518  012BFA  26D9               	addwf	fsr2l,f,c
 39519  012BFC  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39520  012BFE  22DA               	addwfc	fsr2h,f,c
 39521  012C00  0EBC               	movlw	188
 39522  012C02  6EDF               	movwf	indf2,c
 39523                           
 39524                           ; BSR set to: 0
 39525                           ;api.c: 246: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39526  012C04  EE20 F002          	lfsr	2,2
 39527  012C08  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39528  012C0A  26D9               	addwf	fsr2l,f,c
 39529  012C0C  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39530  012C0E  22DA               	addwfc	fsr2h,f,c
 39531  012C10  0E26               	movlw	38
 39532  012C12  6EDF               	movwf	indf2,c
 39533                           
 39534                           ; BSR set to: 0
 39535                           ;api.c: 249: cntr = 3;
 39536  012C14  0E03               	movlw	3
 39537  012C16  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 39538                           
 39539                           ; BSR set to: 0
 39540                           ;api.c: 250: if(secondHalf)
 39541  012C18  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39542  012C1A  B4D8               	btfsc	status,2,c
 39543  012C1C  D002               	goto	l2257
 39544                           
 39545                           ; BSR set to: 0
 39546                           ;api.c: 251: {;api.c: 252: start_line = 2;
 39547  012C1E  0E02               	movlw	2
 39548  012C20  D001               	goto	L62
 39549  012C22                     l2257:
 39550                           
 39551                           ; BSR set to: 0
 39552                           ;api.c: 254: else;api.c: 255: {;api.c: 256: start_line = 0;
 39553                           
 39554                           ; BSR set to: 0
 39555  012C22  0E00               	movlw	0
 39556  012C24                     L62:
 39557  012C24  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 39558                           
 39559                           ; BSR set to: 0
 39560                           ;api.c: 257: };api.c: 258: for(line=start_line; line<start_line+2; ++line)
 39561                           
 39562                           ; BSR set to: 0
 39563  012C26  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 39564  012C2A  D01B               	goto	l2259
 39565  012C2C                     
 39566                           ; BSR set to: 0
 39567                           ;api.c: 259: {;api.c: 260: for(position=0; position<20; ++position)
 39568                           
 39569                           ; BSR set to: 0
 39570  012C2C  0E00               	movlw	0
 39571  012C2E  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 39572  012C30                     l15759:
 39573                           
 39574                           ; BSR set to: 0
 39575  012C30  0E13               	movlw	19
 39576  012C32  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 39577  012C34  D001               	goto	l2261
 39578  012C36  D014               	goto	u14640
 39579  012C38                     l2261:
 39580                           
 39581                           ; BSR set to: 0
 39582                           ;api.c: 261: {;api.c: 262: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 39583                           
 39584                           ; BSR set to: 0
 39585  012C38  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 39586  012C3C  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39587  012C3E  EC8C  F0A9         	call	_display_get_character
 39588  012C42  0100               	movlb	0	; () banked
 39589  012C44  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39590  012C46  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 39591  012C48  0D01               	mullw	1
 39592  012C4A  50F3               	movf	prodl,w,c
 39593  012C4C  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39594  012C4E  6ED9               	movwf	fsr2l,c
 39595  012C50  50F4               	movf	prodh,w,c
 39596  012C52  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39597  012C54  6EDA               	movwf	fsr2h,c
 39598  012C56  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 39599                           
 39600                           ; BSR set to: 0
 39601                           ;api.c: 263: ++cntr;
 39602  012C5A  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 39603                           
 39604                           ; BSR set to: 0
 39605  012C5C  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 39606  012C5E  D7E8               	goto	l15759
 39607  012C60                     u14640:
 39608                           
 39609                           ; BSR set to: 0
 39610                           
 39611                           ; BSR set to: 0
 39612  012C60  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 39613  012C62                     l2259:
 39614                           
 39615                           ; BSR set to: 0
 39616                           
 39617                           ; BSR set to: 0
 39618  012C62  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 39619  012C64  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39620  012C66  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 39621  012C68  0E02               	movlw	2
 39622  012C6A  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 39623  012C6C  0E00               	movlw	0
 39624  012C6E  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 39625  012C70  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39626  012C72  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 39627  012C74  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 39628  012C76  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 39629  012C78  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 39630  012C7A  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 39631  012C7C  0A80               	xorlw	128
 39632  012C7E  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 39633  012C80  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 39634  012C82  0A80               	xorlw	128
 39635  012C84  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 39636  012C86  B0D8               	btfsc	status,0,c
 39637  012C88  0012               	return	
 39638  012C8A  D7D0               	goto	l2260
 39639  012C8C                     __end_of__fill_buffer_get_display:
 39640                           	opt stack 0
 39641                           tosu	equ	0xFFF
 39642                           tosh	equ	0xFFE
 39643                           tosl	equ	0xFFD
 39644                           pclath	equ	0xFFA
 39645                           tblptru	equ	0xFF8
 39646                           tblptrh	equ	0xFF7
 39647                           tblptrl	equ	0xFF6
 39648                           tablat	equ	0xFF5
 39649                           prodh	equ	0xFF4
 39650                           prodl	equ	0xFF3
 39651                           intcon	equ	0xFF2
 39652                           indf0	equ	0xFEF
 39653                           postinc0	equ	0xFEE
 39654                           fsr0h	equ	0xFEA
 39655                           fsr0l	equ	0xFE9
 39656                           wreg	equ	0xFE8
 39657                           indf1	equ	0xFE7
 39658                           postinc1	equ	0xFE6
 39659                           postdec1	equ	0xFE5
 39660                           plusw1	equ	0xFE3
 39661                           fsr1h	equ	0xFE2
 39662                           fsr1l	equ	0xFE1
 39663                           indf2	equ	0xFDF
 39664                           postinc2	equ	0xFDE
 39665                           postdec2	equ	0xFDD
 39666                           plusw2	equ	0xFDB
 39667                           fsr2h	equ	0xFDA
 39668                           fsr2l	equ	0xFD9
 39669                           status	equ	0xFD8
 39670                           
 39671 ;; *************** function _display_get_character *****************
 39672 ;; Defined at:
 39673 ;;		line 628 in file "display.c"
 39674 ;; Parameters:    Size  Location     Type
 39675 ;;  line            1    wreg     unsigned char 
 39676 ;;  position        1    0[BANK0 ] unsigned char 
 39677 ;; Auto vars:     Size  Location     Type
 39678 ;;  line            1    3[BANK0 ] unsigned char 
 39679 ;; Return value:  Size  Location     Type
 39680 ;;                  1    wreg      unsigned char 
 39681 ;; Registers used:
 39682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39683 ;; Tracked objects:
 39684 ;;		On entry : 0/0
 39685 ;;		On exit  : 0/0
 39686 ;;		Unchanged: 0/0
 39687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39688 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39689 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39690 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39691 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39692 ;;Total ram usage:        4 bytes
 39693 ;; Hardware stack levels used:    1
 39694 ;; Hardware stack levels required when called:   10
 39695 ;; This function calls:
 39696 ;;		Nothing
 39697 ;; This function is called by:
 39698 ;;		__fill_buffer_get_display
 39699 ;; This function uses a non-reentrant model
 39700 ;;
 39701                           
 39702                           	psect	text163
 39703  015318                     __ptext163:
 39704                           	opt stack 0
 39705  015318                     _display_get_character:
 39706                           	opt stack 17
 39707                           
 39708                           ; BSR set to: 0
 39709                           ;incstack = 0
 39710                           ;display_get_character@line stored from wreg
 39711  015318  0100               	movlb	0	; () banked
 39712  01531A  6F63               	movwf	display_get_character@line& (0+255),b
 39713                           
 39714                           ;display.c: 630: return display_content[line][position];
 39715  01531C  0100               	movlb	0	; () banked
 39716  01531E  5163               	movf	display_get_character@line& (0+255),w,b
 39717  015320  0D14               	mullw	20
 39718  015322  0E34               	movlw	low _display_content
 39719  015324  6F61               	movwf	??_display_get_character& (0+255),b
 39720  015326  0E02               	movlw	high _display_content
 39721  015328  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 39722  01532A  50F3               	movf	prodl,w,c
 39723  01532C  2761               	addwf	??_display_get_character& (0+255),f,b
 39724  01532E  50F4               	movf	prodh,w,c
 39725  015330  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 39726  015332  5160               	movf	display_get_character@position& (0+255),w,b
 39727  015334  0D01               	mullw	1
 39728  015336  50F3               	movf	prodl,w,c
 39729  015338  2561               	addwf	??_display_get_character& (0+255),w,b
 39730  01533A  6ED9               	movwf	fsr2l,c
 39731  01533C  50F4               	movf	prodh,w,c
 39732  01533E  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 39733  015340  6EDA               	movwf	fsr2h,c
 39734  015342  50DF               	movf	indf2,w,c
 39735  015344  0012               	return	
 39736  015346                     __end_of_display_get_character:
 39737                           	opt stack 0
 39738                           tosu	equ	0xFFF
 39739                           tosh	equ	0xFFE
 39740                           tosl	equ	0xFFD
 39741                           pclath	equ	0xFFA
 39742                           tblptru	equ	0xFF8
 39743                           tblptrh	equ	0xFF7
 39744                           tblptrl	equ	0xFF6
 39745                           tablat	equ	0xFF5
 39746                           prodh	equ	0xFF4
 39747                           prodl	equ	0xFF3
 39748                           intcon	equ	0xFF2
 39749                           indf0	equ	0xFEF
 39750                           postinc0	equ	0xFEE
 39751                           fsr0h	equ	0xFEA
 39752                           fsr0l	equ	0xFE9
 39753                           wreg	equ	0xFE8
 39754                           indf1	equ	0xFE7
 39755                           postinc1	equ	0xFE6
 39756                           postdec1	equ	0xFE5
 39757                           plusw1	equ	0xFE3
 39758                           fsr1h	equ	0xFE2
 39759                           fsr1l	equ	0xFE1
 39760                           indf2	equ	0xFDF
 39761                           postinc2	equ	0xFDE
 39762                           postdec2	equ	0xFDD
 39763                           plusw2	equ	0xFDB
 39764                           fsr2h	equ	0xFDA
 39765                           fsr2l	equ	0xFD9
 39766                           status	equ	0xFD8
 39767                           
 39768 ;; *************** function _api_parse *****************
 39769 ;; Defined at:
 39770 ;;		line 92 in file "api.c"
 39771 ;; Parameters:    Size  Location     Type
 39772 ;;  inBuffer        2  100[BANK0 ] PTR unsigned char 
 39773 ;;		 -> ReceivedDataBuffer(64), 
 39774 ;;  receivedData    1  102[BANK0 ] unsigned char 
 39775 ;;  outBuffer       2  103[BANK0 ] PTR unsigned char 
 39776 ;;		 -> ToSendDataBuffer(64), 
 39777 ;; Auto vars:     Size  Location     Type
 39778 ;;  out_idx_ptr     2  107[BANK0 ] PTR unsigned char 
 39779 ;;		 -> api_parse@out_idx(1), 
 39780 ;;  in_idx          1  110[BANK0 ] unsigned char 
 39781 ;;  out_idx         1  109[BANK0 ] unsigned char 
 39782 ;; Return value:  Size  Location     Type
 39783 ;;                  1    wreg      void 
 39784 ;; Registers used:
 39785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39786 ;; Tracked objects:
 39787 ;;		On entry : 0/0
 39788 ;;		On exit  : 0/0
 39789 ;;		Unchanged: 0/0
 39790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39791 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39792 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39793 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39794 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39795 ;;Total ram usage:       11 bytes
 39796 ;; Hardware stack levels used:    1
 39797 ;; Hardware stack levels required when called:   16
 39798 ;; This function calls:
 39799 ;;		__parse_command_long
 39800 ;;		__parse_command_short
 39801 ;; This function is called by:
 39802 ;;		_APP_DeviceCustomHIDTasks
 39803 ;; This function uses a non-reentrant model
 39804 ;;
 39805                           
 39806                           	psect	text164
 39807  0108D2                     __ptext164:
 39808                           	opt stack 0
 39809  0108D2                     _api_parse:
 39810                           	opt stack 13
 39811                           
 39812                           ;api.c: 96: uint8_t in_idx;;api.c: 97: uint8_t out_idx;;api.c: 98: uint8_t *out_idx_ptr;
      +                          ;api.c: 100: out_idx = 0;
 39813                           
 39814                           ; BSR set to: 0
 39815                           ;incstack = 0
 39816  0108D2  0E00               	movlw	0
 39817  0108D4  0100               	movlb	0	; () banked
 39818  0108D6  6FCD               	movwf	api_parse@out_idx& (0+255),b
 39819                           
 39820                           ; BSR set to: 0
 39821                           ;api.c: 101: out_idx_ptr = &out_idx;
 39822  0108D8  0ECD               	movlw	low api_parse@out_idx
 39823  0108DA  6FCB               	movwf	api_parse@out_idx_ptr& (0+255),b
 39824  0108DC  0E00               	movlw	high api_parse@out_idx
 39825  0108DE  6FCC               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 39826                           
 39827                           ; BSR set to: 0
 39828                           ;api.c: 103: if(inBuffer[0]>0x7F)
 39829  0108E0  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39830  0108E4  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39831  0108E8  0E7F               	movlw	127
 39832  0108EA  64DF               	cpfsgt	indf2,c
 39833  0108EC  D001               	goto	l2236
 39834  0108EE  0012               	return	
 39835  0108F0                     l2236:
 39836                           
 39837                           ; BSR set to: 0
 39838                           ;api.c: 108: };api.c: 110: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 39839                           
 39840                           ; BSR set to: 0
 39841  0108F0  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39842  0108F4  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39843  0108F8  0E20               	movlw	32
 39844  0108FA  18DE               	xorwf	postinc2,w,c
 39845  0108FC  B4D8               	btfsc	status,2,c
 39846  0108FE  0012               	return	
 39847                           
 39848                           ; BSR set to: 0
 39849                           ;api.c: 115: };api.c: 117: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 39850                           
 39851                           ; BSR set to: 0
 39852                           
 39853                           ; BSR set to: 0
 39854                           ;api.c: 111: {;api.c: 114: return;
 39855  010900  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39856  010904  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39857  010908  50DF               	movf	indf2,w,c
 39858  01090A  A4D8               	btfss	status,2,c
 39859  01090C  D018               	goto	l2239
 39860                           
 39861                           ; BSR set to: 0
 39862                           ;api.c: 118: {;api.c: 120: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 39863  01090E  C0C7  FFD9         	movff	api_parse@outBuffer,fsr2l
 39864  010912  C0C8  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 39865  010916  0E00               	movlw	0
 39866  010918  6EDF               	movwf	indf2,c
 39867                           
 39868                           ; BSR set to: 0
 39869                           ;api.c: 123: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39870  01091A  EE20 F001          	lfsr	2,1
 39871  01091E  51C7               	movf	api_parse@outBuffer& (0+255),w,b
 39872  010920  26D9               	addwf	fsr2l,f,c
 39873  010922  51C8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39874  010924  22DA               	addwfc	fsr2h,f,c
 39875  010926  0EBC               	movlw	188
 39876  010928  6EDF               	movwf	indf2,c
 39877                           
 39878                           ; BSR set to: 0
 39879                           ;api.c: 124: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39880  01092A  EE20 F002          	lfsr	2,2
 39881  01092E  51C7               	movf	api_parse@outBuffer& (0+255),w,b
 39882  010930  26D9               	addwf	fsr2l,f,c
 39883  010932  51C8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39884  010934  22DA               	addwfc	fsr2h,f,c
 39885  010936  0E26               	movlw	38
 39886  010938  6EDF               	movwf	indf2,c
 39887                           
 39888                           ; BSR set to: 0
 39889                           ;api.c: 127: out_idx = 3;
 39890  01093A  0E03               	movlw	3
 39891  01093C  6FCD               	movwf	api_parse@out_idx& (0+255),b
 39892  01093E                     l2239:
 39893                           
 39894                           ; BSR set to: 0
 39895                           ;api.c: 128: };api.c: 130: in_idx = 1;
 39896                           
 39897                           ; BSR set to: 0
 39898  01093E  0E01               	movlw	1
 39899  010940  6FCE               	movwf	api_parse@in_idx& (0+255),b
 39900                           
 39901                           ;api.c: 131: while(in_idx<receivedDataLength)
 39902  010942  D057               	goto	l2245
 39903  010944                     
 39904                           ; BSR set to: 0
 39905                           ;api.c: 132: {;api.c: 134: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 39906                           
 39907                           ; BSR set to: 0
 39908  010944  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39909  010946  0D01               	mullw	1
 39910  010948  50F3               	movf	prodl,w,c
 39911  01094A  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39912  01094C  6ED9               	movwf	fsr2l,c
 39913  01094E  50F4               	movf	prodh,w,c
 39914  010950  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39915  010952  6EDA               	movwf	fsr2h,c
 39916  010954  0E99               	movlw	153
 39917  010956  18DE               	xorwf	postinc2,w,c
 39918  010958  B4D8               	btfsc	status,2,c
 39919  01095A  0012               	return	
 39920  01095C  D02F               	goto	l2243
 39921  01095E                     
 39922                           ; BSR set to: 0
 39923                           ;api.c: 142: _parse_command_short(inBuffer[in_idx]);
 39924                           
 39925                           ; BSR set to: 0
 39926  01095E  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39927  010960  0D01               	mullw	1
 39928  010962  50F3               	movf	prodl,w,c
 39929  010964  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39930  010966  6ED9               	movwf	fsr2l,c
 39931  010968  50F4               	movf	prodh,w,c
 39932  01096A  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39933  01096C  6EDA               	movwf	fsr2h,c
 39934  01096E  50DF               	movf	indf2,w,c
 39935  010970  ECBA  F07C         	call	__parse_command_short
 39936  010974  D00B               	goto	l16607
 39937  010976                     
 39938                           ; BSR set to: 0
 39939                           ;api.c: 147: _parse_command_short(inBuffer[in_idx]);
 39940                           
 39941                           ; BSR set to: 0
 39942  010976  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39943  010978  0D01               	mullw	1
 39944  01097A  50F3               	movf	prodl,w,c
 39945  01097C  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39946  01097E  6ED9               	movwf	fsr2l,c
 39947  010980  50F4               	movf	prodh,w,c
 39948  010982  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39949  010984  6EDA               	movwf	fsr2h,c
 39950  010986  50DF               	movf	indf2,w,c
 39951  010988  ECBA  F07C         	call	__parse_command_short
 39952  01098C                     l16607:
 39953                           
 39954                           ;api.c: 148: ++in_idx;
 39955  01098C  0100               	movlb	0	; () banked
 39956  01098E  2BCE               	incf	api_parse@in_idx& (0+255),f,b
 39957                           
 39958                           ;api.c: 149: break;
 39959  010990  D030               	goto	l2245
 39960  010992                     
 39961                           ; BSR set to: 0
 39962                           ;api.c: 152: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 39963                           
 39964                           ; BSR set to: 0
 39965  010992  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39966  010994  0D01               	mullw	1
 39967  010996  50F3               	movf	prodl,w,c
 39968  010998  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39969  01099A  6FB3               	movwf	__parse_command_long@data& (0+255),b
 39970  01099C  50F4               	movf	prodh,w,c
 39971  01099E  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39972  0109A0  6FB4               	movwf	(__parse_command_long@data+1)& (0+255),b
 39973  0109A2  C0C7  F0B5         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 39974  0109A6  C0C8  F0B6         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 39975  0109AA  C0CB  F0B7         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 39976  0109AE  C0CC  F0B8         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 39977  0109B2  ECAE  F0A7         	call	__parse_command_long	;wreg free
 39978  0109B6  0100               	movlb	0	; () banked
 39979  0109B8  27CE               	addwf	api_parse@in_idx& (0+255),f,b
 39980                           
 39981                           ;api.c: 153: break;
 39982  0109BA  D01B               	goto	l2245
 39983  0109BC                     l2243:
 39984                           
 39985                           ; BSR set to: 0
 39986                           
 39987                           ; BSR set to: 0
 39988  0109BC  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39989  0109BE  0D01               	mullw	1
 39990  0109C0  50F3               	movf	prodl,w,c
 39991  0109C2  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39992  0109C4  6ED9               	movwf	fsr2l,c
 39993  0109C6  50F4               	movf	prodh,w,c
 39994  0109C8  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39995  0109CA  6EDA               	movwf	fsr2h,c
 39996  0109CC  50DF               	movf	indf2,w,c
 39997  0109CE  0BF0               	andlw	240
 39998  0109D0  6FC9               	movwf	??_api_parse& (0+255),b
 39999  0109D2  6BCA               	clrf	(??_api_parse+1)& (0+255),b
 40000                           
 40001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40002                           ; Switch size 1, requested type "space"
 40003                           ; Number of cases is 1, Range of values is 0 to 0
 40004                           ; switch strategies available:
 40005                           ; Name         Instructions Cycles
 40006                           ; simple_byte            4     3 (average)
 40007                           ;	Chosen strategy is simple_byte
 40008  0109D4  51CA               	movf	(??_api_parse+1)& (0+255),w,b
 40009  0109D6  0A00               	xorlw	0	; case 0
 40010  0109D8  A4D8               	btfss	status,2,c
 40011  0109DA  0012               	return	
 40012                           
 40013                           ; BSR set to: 0
 40014                           ; Switch size 1, requested type "space"
 40015                           ; Number of cases is 3, Range of values is 32 to 144
 40016                           ; switch strategies available:
 40017                           ; Name         Instructions Cycles
 40018                           ; simple_byte           10     6 (average)
 40019                           ;	Chosen strategy is simple_byte
 40020  0109DC  51C9               	movf	??_api_parse& (0+255),w,b
 40021  0109DE  0A20               	xorlw	32	; case 32
 40022  0109E0  B4D8               	btfsc	status,2,c
 40023  0109E2  D7BD               	goto	l2244
 40024  0109E4  0A10               	xorlw	16	; case 48
 40025  0109E6  B4D8               	btfsc	status,2,c
 40026  0109E8  D7C6               	goto	l2246
 40027  0109EA  0AA0               	xorlw	160	; case 144
 40028  0109EC  A4D8               	btfss	status,2,c
 40029  0109EE  0012               	return	
 40030  0109F0  D7D0               	goto	l2247
 40031  0109F2                     l2245:
 40032                           
 40033                           ; BSR set to: 0
 40034                           
 40035                           ; BSR set to: 0
 40036                           
 40037                           ; BSR set to: 0
 40038  0109F2  51C6               	movf	api_parse@receivedDataLength& (0+255),w,b
 40039  0109F4  5DCE               	subwf	api_parse@in_idx& (0+255),w,b
 40040  0109F6  B0D8               	btfsc	status,0,c
 40041  0109F8  0012               	return	
 40042  0109FA  D7A4               	goto	l2241
 40043  0109FC                     __end_of_api_parse:
 40044                           	opt stack 0
 40045                           tosu	equ	0xFFF
 40046                           tosh	equ	0xFFE
 40047                           tosl	equ	0xFFD
 40048                           pclath	equ	0xFFA
 40049                           tblptru	equ	0xFF8
 40050                           tblptrh	equ	0xFF7
 40051                           tblptrl	equ	0xFF6
 40052                           tablat	equ	0xFF5
 40053                           prodh	equ	0xFF4
 40054                           prodl	equ	0xFF3
 40055                           intcon	equ	0xFF2
 40056                           indf0	equ	0xFEF
 40057                           postinc0	equ	0xFEE
 40058                           fsr0h	equ	0xFEA
 40059                           fsr0l	equ	0xFE9
 40060                           wreg	equ	0xFE8
 40061                           indf1	equ	0xFE7
 40062                           postinc1	equ	0xFE6
 40063                           postdec1	equ	0xFE5
 40064                           plusw1	equ	0xFE3
 40065                           fsr1h	equ	0xFE2
 40066                           fsr1l	equ	0xFE1
 40067                           indf2	equ	0xFDF
 40068                           postinc2	equ	0xFDE
 40069                           postdec2	equ	0xFDD
 40070                           plusw2	equ	0xFDB
 40071                           fsr2h	equ	0xFDA
 40072                           fsr2l	equ	0xFD9
 40073                           status	equ	0xFD8
 40074                           
 40075 ;; *************** function __parse_command_short *****************
 40076 ;; Defined at:
 40077 ;;		line 322 in file "api.c"
 40078 ;; Parameters:    Size  Location     Type
 40079 ;;  cmd             1    wreg     unsigned char 
 40080 ;; Auto vars:     Size  Location     Type
 40081 ;;  cmd             1   99[BANK0 ] unsigned char 
 40082 ;; Return value:  Size  Location     Type
 40083 ;;                  1    wreg      void 
 40084 ;; Registers used:
 40085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40086 ;; Tracked objects:
 40087 ;;		On entry : 0/0
 40088 ;;		On exit  : 0/0
 40089 ;;		Unchanged: 0/0
 40090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40095 ;;Total ram usage:        1 bytes
 40096 ;; Hardware stack levels used:    1
 40097 ;; Hardware stack levels required when called:   15
 40098 ;; This function calls:
 40099 ;;		_motor_go_to_steps_position
 40100 ;;		_motor_schedule_command
 40101 ;; This function is called by:
 40102 ;;		_api_parse
 40103 ;; This function uses a non-reentrant model
 40104 ;;
 40105                           
 40106                           	psect	text165
 40107  00F974                     __ptext165:
 40108                           	opt stack 0
 40109  00F974                     __parse_command_short:
 40110                           	opt stack 13
 40111                           
 40112                           ; BSR set to: 0
 40113                           ;incstack = 0
 40114                           ;__parse_command_short@cmd stored from wreg
 40115  00F974  0100               	movlb	0	; () banked
 40116  00F976  6FC3               	movwf	__parse_command_short@cmd& (0+255),b
 40117                           
 40118                           ;api.c: 324: switch(cmd)
 40119  00F978  D08E               	goto	l2281
 40120  00F97A                     
 40121                           ;api.c: 342: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40122  00F97A  0E01               	movlw	1
 40123  00F97C  0101               	movlb	1	; () banked
 40124  00F97E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40125                           
 40126                           ;api.c: 343: break;
 40127  00F980  0012               	return	
 40128  00F982                     
 40129                           ;api.c: 346: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 40130                           
 40131                           ; BSR set to: 1
 40132  00F982  0E11               	movlw	17
 40133  00F984  0101               	movlb	1	; () banked
 40134  00F986  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40135                           
 40136                           ;api.c: 347: break;
 40137  00F988  0012               	return	
 40138  00F98A                     
 40139                           ;api.c: 350: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 40140                           
 40141                           ; BSR set to: 1
 40142  00F98A  0E31               	movlw	49
 40143  00F98C  0101               	movlb	1	; () banked
 40144  00F98E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40145                           
 40146                           ;api.c: 351: break;
 40147  00F990  0012               	return	
 40148  00F992                     
 40149                           ;api.c: 354: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 40150                           
 40151                           ; BSR set to: 1
 40152  00F992  0E51               	movlw	81
 40153  00F994  0101               	movlb	1	; () banked
 40154  00F996  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40155                           
 40156                           ;api.c: 355: break;
 40157  00F998  0012               	return	
 40158  00F99A                     
 40159                           ;api.c: 358: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40160                           
 40161                           ; BSR set to: 1
 40162  00F99A  0E82               	movlw	130
 40163  00F99C  0101               	movlb	1	; () banked
 40164  00F99E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40165                           
 40166                           ;api.c: 359: break;
 40167  00F9A0  0012               	return	
 40168  00F9A2                     
 40169                           ;api.c: 362: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 40170                           
 40171                           ; BSR set to: 1
 40172  00F9A2  0E71               	movlw	113
 40173  00F9A4  0101               	movlb	1	; () banked
 40174  00F9A6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40175                           
 40176                           ;api.c: 363: break;
 40177  00F9A8  0012               	return	
 40178  00F9AA                     
 40179                           ;api.c: 366: os.current_position_in_steps = 0;
 40180                           
 40181                           ; BSR set to: 1
 40182  00F9AA  0E00               	movlw	0
 40183  00F9AC  0101               	movlb	1	; () banked
 40184  00F9AE  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 40185  00F9B0  0E00               	movlw	0
 40186  00F9B2  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 40187  00F9B4  0E00               	movlw	0
 40188  00F9B6  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 40189  00F9B8  0E00               	movlw	0
 40190  00F9BA  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 40191                           
 40192                           ;api.c: 367: os.divide_position = 0;
 40193  00F9BC  0E00               	movlw	0
 40194  00F9BE  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40195  00F9C0  0E00               	movlw	0
 40196  00F9C2  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40197                           
 40198                           ; BSR set to: 1
 40199                           ;api.c: 368: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 40200  00F9C4  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40201  00F9C8  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40202  00F9CC  0100               	movlb	0	; () banked
 40203  00F9CE  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40204  00F9D0  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40205  00F9D2  0E00               	movlw	0
 40206  00F9D4  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40207  00F9D6  0E00               	movlw	0
 40208  00F9D8  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40209  00F9DA  0E01               	movlw	1
 40210  00F9DC  ECA7  F097         	call	_motor_schedule_command
 40211                           
 40212                           ;api.c: 369: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0);
 40213  00F9E0  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40214  00F9E4  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40215  00F9E8  0100               	movlb	0	; () banked
 40216  00F9EA  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40217  00F9EC  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40218  00F9EE  0E00               	movlw	0
 40219  00F9F0  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40220  00F9F2  0E00               	movlw	0
 40221  00F9F4  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40222  00F9F6  0EFF               	movlw	255
 40223  00F9F8  ECA7  F097         	call	_motor_schedule_command
 40224                           
 40225                           ;api.c: 370: os.approach_direction = MOTOR_DIRECTION_CCW;
 40226  00F9FC  0101               	movlb	1	; () banked
 40227  00F9FE  6983               	setf	(_os+18)& (0+255),b	;volatile
 40228                           
 40229                           ;api.c: 371: break;
 40230  00FA00  0012               	return	
 40231  00FA02                     
 40232                           ;api.c: 374: os.current_position_in_steps = 0;
 40233                           
 40234                           ; BSR set to: 1
 40235  00FA02  0E00               	movlw	0
 40236  00FA04  0101               	movlb	1	; () banked
 40237  00FA06  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 40238  00FA08  0E00               	movlw	0
 40239  00FA0A  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 40240  00FA0C  0E00               	movlw	0
 40241  00FA0E  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 40242  00FA10  0E00               	movlw	0
 40243  00FA12  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 40244                           
 40245                           ;api.c: 375: os.divide_position = 0;
 40246  00FA14  0E00               	movlw	0
 40247  00FA16  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40248  00FA18  0E00               	movlw	0
 40249  00FA1A  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40250                           
 40251                           ; BSR set to: 1
 40252                           ;api.c: 376: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0);
 40253  00FA1C  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40254  00FA20  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40255  00FA24  0100               	movlb	0	; () banked
 40256  00FA26  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40257  00FA28  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40258  00FA2A  0E00               	movlw	0
 40259  00FA2C  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40260  00FA2E  0E00               	movlw	0
 40261  00FA30  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40262  00FA32  0EFF               	movlw	255
 40263  00FA34  ECA7  F097         	call	_motor_schedule_command
 40264                           
 40265                           ;api.c: 377: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 40266  00FA38  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40267  00FA3C  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40268  00FA40  0100               	movlb	0	; () banked
 40269  00FA42  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40270  00FA44  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40271  00FA46  0E00               	movlw	0
 40272  00FA48  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40273  00FA4A  0E00               	movlw	0
 40274  00FA4C  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40275  00FA4E  0E01               	movlw	1
 40276  00FA50  ECA7  F097         	call	_motor_schedule_command
 40277                           
 40278                           ;api.c: 378: os.approach_direction = MOTOR_DIRECTION_CW;
 40279  00FA54  0E01               	movlw	1
 40280  00FA56  0101               	movlb	1	; () banked
 40281  00FA58  6F83               	movwf	(_os+18)& (0+255),b	;volatile
 40282                           
 40283                           ;api.c: 379: break;
 40284  00FA5A  0012               	return	
 40285  00FA5C                     
 40286                           ;api.c: 382: motor_go_to_steps_position(0);
 40287                           
 40288                           ; BSR set to: 1
 40289  00FA5C  0E00               	movlw	0
 40290  00FA5E  0100               	movlb	0	; () banked
 40291  00FA60  6FA7               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 40292  00FA62  0E00               	movlw	0
 40293  00FA64  6FA8               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 40294  00FA66  0E00               	movlw	0
 40295  00FA68  6FA9               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 40296  00FA6A  0E00               	movlw	0
 40297  00FA6C  6FAA               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 40298  00FA6E  ECC0  F069         	call	_motor_go_to_steps_position	;wreg free
 40299  00FA72                     
 40300                           ;api.c: 385: --os.encoder2Count;
 40301  00FA72  0101               	movlb	1	; () banked
 40302  00FA74  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 40303                           
 40304                           ;api.c: 386: break;
 40305  00FA76  0012               	return	
 40306  00FA78                     
 40307                           ;api.c: 389: ++os.encoder2Count;
 40308                           
 40309                           ; BSR set to: 1
 40310  00FA78  0101               	movlb	1	; () banked
 40311  00FA7A  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 40312                           
 40313                           ;api.c: 390: break;
 40314  00FA7C  0012               	return	
 40315  00FA7E                     
 40316                           ;api.c: 393: ++os.button2;
 40317                           
 40318                           ; BSR set to: 1
 40319  00FA7E  0101               	movlb	1	; () banked
 40320  00FA80  2B77               	incf	(_os+6)& (0+255),f,b	;volatile
 40321                           
 40322                           ;api.c: 394: break;
 40323  00FA82  0012               	return	
 40324  00FA84                     
 40325                           ;api.c: 397: --os.encoder1Count;
 40326                           
 40327                           ; BSR set to: 1
 40328  00FA84  0101               	movlb	1	; () banked
 40329  00FA86  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 40330                           
 40331                           ;api.c: 398: break;
 40332  00FA88  0012               	return	
 40333  00FA8A                     
 40334                           ;api.c: 401: ++os.encoder1Count;
 40335                           
 40336                           ; BSR set to: 1
 40337  00FA8A  0101               	movlb	1	; () banked
 40338  00FA8C  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 40339                           
 40340                           ;api.c: 402: break;
 40341  00FA8E  0012               	return	
 40342  00FA90                     
 40343                           ;api.c: 405: ++os.button1;
 40344                           
 40345                           ; BSR set to: 1
 40346  00FA90  0101               	movlb	1	; () banked
 40347  00FA92  2B75               	incf	(_os+4)& (0+255),f,b	;volatile
 40348                           
 40349                           ; BSR set to: 1
 40350                           ;api.c: 407: }
 40351                           
 40352                           ;api.c: 406: break;
 40353  00FA94  0012               	return	
 40354  00FA96                     l2281:
 40355                           
 40356                           ; BSR set to: 1
 40357  00FA96  0100               	movlb	0	; () banked
 40358  00FA98  51C3               	movf	__parse_command_short@cmd& (0+255),w,b
 40359                           
 40360                           ; Switch size 1, requested type "space"
 40361                           ; Number of cases is 15, Range of values is 32 to 53
 40362                           ; switch strategies available:
 40363                           ; Name         Instructions Cycles
 40364                           ; simple_byte           46    24 (average)
 40365                           ;	Chosen strategy is simple_byte
 40366  00FA9A  0A20               	xorlw	32	; case 32
 40367  00FA9C  B4D8               	btfsc	status,2,c
 40368  00FA9E  D76D               	goto	l2282
 40369  00FAA0  0A01               	xorlw	1	; case 33
 40370  00FAA2  B4D8               	btfsc	status,2,c
 40371  00FAA4  D76E               	goto	l2284
 40372  00FAA6  0A03               	xorlw	3	; case 34
 40373  00FAA8  B4D8               	btfsc	status,2,c
 40374  00FAAA  D76F               	goto	l2285
 40375  00FAAC  0A01               	xorlw	1	; case 35
 40376  00FAAE  B4D8               	btfsc	status,2,c
 40377  00FAB0  D770               	goto	l2286
 40378  00FAB2  0A07               	xorlw	7	; case 36
 40379  00FAB4  B4D8               	btfsc	status,2,c
 40380  00FAB6  D771               	goto	l2287
 40381  00FAB8  0A01               	xorlw	1	; case 37
 40382  00FABA  B4D8               	btfsc	status,2,c
 40383  00FABC  D772               	goto	l2288
 40384  00FABE  0A03               	xorlw	3	; case 38
 40385  00FAC0  B4D8               	btfsc	status,2,c
 40386  00FAC2  D773               	goto	l2289
 40387  00FAC4  0A01               	xorlw	1	; case 39
 40388  00FAC6  B4D8               	btfsc	status,2,c
 40389  00FAC8  D79C               	goto	l2290
 40390  00FACA  0A0F               	xorlw	15	; case 40
 40391  00FACC  B4D8               	btfsc	status,2,c
 40392  00FACE  D7C6               	goto	l2291
 40393  00FAD0  0A18               	xorlw	24	; case 48
 40394  00FAD2  B4D8               	btfsc	status,2,c
 40395  00FAD4  D7CE               	goto	l2292
 40396  00FAD6  0A01               	xorlw	1	; case 49
 40397  00FAD8  B4D8               	btfsc	status,2,c
 40398  00FADA  D7CE               	goto	l2293
 40399  00FADC  0A03               	xorlw	3	; case 50
 40400  00FADE  B4D8               	btfsc	status,2,c
 40401  00FAE0  D7CE               	goto	l2294
 40402  00FAE2  0A01               	xorlw	1	; case 51
 40403  00FAE4  B4D8               	btfsc	status,2,c
 40404  00FAE6  D7CE               	goto	l2295
 40405  00FAE8  0A07               	xorlw	7	; case 52
 40406  00FAEA  B4D8               	btfsc	status,2,c
 40407  00FAEC  D7CE               	goto	l2296
 40408  00FAEE  0A01               	xorlw	1	; case 53
 40409  00FAF0  A4D8               	btfss	status,2,c
 40410  00FAF2  0012               	return	
 40411  00FAF4  D7CD               	goto	l2297
 40412  00FAF6                     __end_of__parse_command_short:
 40413                           	opt stack 0
 40414                           tosu	equ	0xFFF
 40415                           tosh	equ	0xFFE
 40416                           tosl	equ	0xFFD
 40417                           pclath	equ	0xFFA
 40418                           tblptru	equ	0xFF8
 40419                           tblptrh	equ	0xFF7
 40420                           tblptrl	equ	0xFF6
 40421                           tablat	equ	0xFF5
 40422                           prodh	equ	0xFF4
 40423                           prodl	equ	0xFF3
 40424                           intcon	equ	0xFF2
 40425                           indf0	equ	0xFEF
 40426                           postinc0	equ	0xFEE
 40427                           fsr0h	equ	0xFEA
 40428                           fsr0l	equ	0xFE9
 40429                           wreg	equ	0xFE8
 40430                           indf1	equ	0xFE7
 40431                           postinc1	equ	0xFE6
 40432                           postdec1	equ	0xFE5
 40433                           plusw1	equ	0xFE3
 40434                           fsr1h	equ	0xFE2
 40435                           fsr1l	equ	0xFE1
 40436                           indf2	equ	0xFDF
 40437                           postinc2	equ	0xFDE
 40438                           postdec2	equ	0xFDD
 40439                           plusw2	equ	0xFDB
 40440                           fsr2h	equ	0xFDA
 40441                           fsr2l	equ	0xFD9
 40442                           status	equ	0xFD8
 40443                           
 40444 ;; *************** function _motor_go_to_steps_position *****************
 40445 ;; Defined at:
 40446 ;;		line 532 in file "motor.c"
 40447 ;; Parameters:    Size  Location     Type
 40448 ;;  target_posit    4   71[BANK0 ] unsigned long 
 40449 ;; Auto vars:     Size  Location     Type
 40450 ;;  distance_ccw    4   95[BANK0 ] unsigned long 
 40451 ;;  distance_cw     4   91[BANK0 ] unsigned long 
 40452 ;;  overhead_ccw    4   87[BANK0 ] unsigned long 
 40453 ;;  overhead_cw     4   83[BANK0 ] unsigned long 
 40454 ;; Return value:  Size  Location     Type
 40455 ;;                  1    wreg      void 
 40456 ;; Registers used:
 40457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40458 ;; Tracked objects:
 40459 ;;		On entry : 0/0
 40460 ;;		On exit  : 0/0
 40461 ;;		Unchanged: 0/0
 40462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40464 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40465 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40466 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40467 ;;Total ram usage:       28 bytes
 40468 ;; Hardware stack levels used:    1
 40469 ;; Hardware stack levels required when called:   14
 40470 ;; This function calls:
 40471 ;;		_motor_schedule_command
 40472 ;; This function is called by:
 40473 ;;		__parse_command_short
 40474 ;;		_motor_divide_jump
 40475 ;;		_motor_divide_jump_to_nearest
 40476 ;;		_encoder_statemachine
 40477 ;;		_motor_go_to_degrees_position
 40478 ;; This function uses a non-reentrant model
 40479 ;;
 40480                           
 40481                           	psect	text166
 40482  00D380                     __ptext166:
 40483                           	opt stack 0
 40484  00D380                     _motor_go_to_steps_position:
 40485                           	opt stack 15
 40486                           
 40487                           ;motor.c: 534: uint32_t distance_cw;;motor.c: 535: uint32_t overhead_cw;;motor.c: 536: u
      +                          int32_t distance_ccw;;motor.c: 537: uint32_t overhead_ccw;;motor.c: 540: if(os.busy)
 40488                           
 40489                           ;incstack = 0
 40490  00D380  0101               	movlb	1	; () banked
 40491  00D382  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40492  00D384  A4D8               	btfss	status,2,c
 40493  00D386  0012               	return	
 40494                           
 40495                           ; BSR set to: 1
 40496                           ;motor.c: 543: };motor.c: 546: if(os.current_position_in_steps == target_position)
 40497                           
 40498                           ; BSR set to: 1
 40499                           
 40500                           ; BSR set to: 1
 40501                           ;motor.c: 541: {;motor.c: 542: return;
 40502  00D388  0100               	movlb	0	; () banked
 40503  00D38A  51A7               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40504  00D38C  0101               	movlb	1	; () banked
 40505  00D38E  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 40506  00D390  E110               	bnz	l14847
 40507  00D392  0100               	movlb	0	; () banked
 40508  00D394  51A8               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40509  00D396  0101               	movlb	1	; () banked
 40510  00D398  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 40511  00D39A  E10B               	bnz	l14847
 40512  00D39C  0100               	movlb	0	; () banked
 40513  00D39E  51A9               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40514  00D3A0  0101               	movlb	1	; () banked
 40515  00D3A2  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 40516  00D3A4  E106               	bnz	l14847
 40517  00D3A6  0100               	movlb	0	; () banked
 40518  00D3A8  51AA               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40519  00D3AA  0101               	movlb	1	; () banked
 40520  00D3AC  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 40521  00D3AE  B4D8               	btfsc	status,2,c
 40522  00D3B0  0012               	return	
 40523  00D3B2                     l14847:
 40524                           
 40525                           ; BSR set to: 1
 40526                           ;motor.c: 549: };motor.c: 552: overhead_cw = 0;
 40527  00D3B2  0E00               	movlw	0
 40528  00D3B4  0100               	movlb	0	; () banked
 40529  00D3B6  6FB3               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 40530  00D3B8  0E00               	movlw	0
 40531  00D3BA  6FB4               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 40532  00D3BC  0E00               	movlw	0
 40533  00D3BE  6FB5               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 40534  00D3C0  0E00               	movlw	0
 40535  00D3C2  6FB6               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 40536                           
 40537                           ; BSR set to: 0
 40538                           ;motor.c: 553: distance_cw = target_position - os.current_position_in_steps;
 40539  00D3C4  C178  F0AB         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 40540  00D3C8  C179  F0AC         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 40541  00D3CC  C17A  F0AD         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 40542  00D3D0  C17B  F0AE         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 40543  00D3D4  1FAB               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40544  00D3D6  1FAC               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40545  00D3D8  1FAD               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40546  00D3DA  1FAE               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40547  00D3DC  2BAB               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40548  00D3DE  0E00               	movlw	0
 40549  00D3E0  23AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40550  00D3E2  23AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40551  00D3E4  23AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40552  00D3E6  51A7               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40553  00D3E8  25AB               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40554  00D3EA  6FBB               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 40555  00D3EC  51A8               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40556  00D3EE  21AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40557  00D3F0  6FBC               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 40558  00D3F2  51A9               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40559  00D3F4  21AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40560  00D3F6  6FBD               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 40561  00D3F8  51AA               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40562  00D3FA  21AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40563  00D3FC  6FBE               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 40564                           
 40565                           ; BSR set to: 0
 40566                           ;motor.c: 554: if(distance_cw>config.full_circle_in_steps)
 40567  00D3FE  51BB               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40568  00D400  0101               	movlb	1	; () banked
 40569  00D402  5DA1               	subwf	_config& (0+255),w,b
 40570  00D404  0100               	movlb	0	; () banked
 40571  00D406  51BC               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40572  00D408  0101               	movlb	1	; () banked
 40573  00D40A  59A2               	subwfb	(_config+1)& (0+255),w,b
 40574  00D40C  0100               	movlb	0	; () banked
 40575  00D40E  51BD               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40576  00D410  0101               	movlb	1	; () banked
 40577  00D412  59A3               	subwfb	(_config+2)& (0+255),w,b
 40578  00D414  0100               	movlb	0	; () banked
 40579  00D416  51BE               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40580  00D418  0101               	movlb	1	; () banked
 40581  00D41A  59A4               	subwfb	(_config+3)& (0+255),w,b
 40582  00D41C  B0D8               	btfsc	status,0,c
 40583  00D41E  D00F               	goto	l2483
 40584                           
 40585                           ; BSR set to: 1
 40586                           ;motor.c: 555: {;motor.c: 556: distance_cw += config.full_circle_in_steps;
 40587  00D420  51A1               	movf	_config& (0+255),w,b
 40588  00D422  0100               	movlb	0	; () banked
 40589  00D424  27BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40590  00D426  0101               	movlb	1	; () banked
 40591  00D428  51A2               	movf	(_config+1)& (0+255),w,b
 40592  00D42A  0100               	movlb	0	; () banked
 40593  00D42C  23BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40594  00D42E  0101               	movlb	1	; () banked
 40595  00D430  51A3               	movf	(_config+2)& (0+255),w,b
 40596  00D432  0100               	movlb	0	; () banked
 40597  00D434  23BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40598  00D436  0101               	movlb	1	; () banked
 40599  00D438  51A4               	movf	(_config+3)& (0+255),w,b
 40600  00D43A  0100               	movlb	0	; () banked
 40601  00D43C  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40602  00D43E                     l2483:
 40603                           
 40604                           ;motor.c: 557: };motor.c: 558: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 40605  00D43E  0101               	movlb	1	; () banked
 40606  00D440  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 40607  00D442  A4D8               	btfss	status,2,c
 40608  00D444  D023               	goto	l2484
 40609                           
 40610                           ; BSR set to: 1
 40611                           ;motor.c: 559: {;motor.c: 560: distance_cw += config.overshoot_in_steps;
 40612  00D446  51A6               	movf	(_config+5)& (0+255),w,b
 40613  00D448  0100               	movlb	0	; () banked
 40614  00D44A  27BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40615  00D44C  0101               	movlb	1	; () banked
 40616  00D44E  51A7               	movf	(_config+6)& (0+255),w,b
 40617  00D450  0100               	movlb	0	; () banked
 40618  00D452  23BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40619  00D454  0E00               	movlw	0
 40620  00D456  23BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40621  00D458  0E00               	movlw	0
 40622  00D45A  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40623                           
 40624                           ;motor.c: 561: overhead_cw += config.overshoot_in_steps;
 40625  00D45C  0101               	movlb	1	; () banked
 40626  00D45E  51A6               	movf	(_config+5)& (0+255),w,b
 40627  00D460  0100               	movlb	0	; () banked
 40628  00D462  27B3               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40629  00D464  0101               	movlb	1	; () banked
 40630  00D466  51A7               	movf	(_config+6)& (0+255),w,b
 40631  00D468  0100               	movlb	0	; () banked
 40632  00D46A  23B4               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40633  00D46C  0E00               	movlw	0
 40634  00D46E  23B5               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40635  00D470  0E00               	movlw	0
 40636  00D472  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40637                           
 40638                           ;motor.c: 562: overhead_cw += config.overshoot_cost_in_steps;
 40639  00D474  0101               	movlb	1	; () banked
 40640  00D476  51A8               	movf	(_config+7)& (0+255),w,b
 40641  00D478  0100               	movlb	0	; () banked
 40642  00D47A  27B3               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40643  00D47C  0101               	movlb	1	; () banked
 40644  00D47E  51A9               	movf	(_config+8)& (0+255),w,b
 40645  00D480  0100               	movlb	0	; () banked
 40646  00D482  23B4               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40647  00D484  0E00               	movlw	0
 40648  00D486  23B5               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40649  00D488  0E00               	movlw	0
 40650  00D48A  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40651  00D48C                     l2484:
 40652                           
 40653                           ;motor.c: 563: };motor.c: 566: overhead_ccw = 0;
 40654                           
 40655                           ; BSR set to: 0
 40656  00D48C  0E00               	movlw	0
 40657  00D48E  0100               	movlb	0	; () banked
 40658  00D490  6FB7               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 40659  00D492  0E00               	movlw	0
 40660  00D494  6FB8               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 40661  00D496  0E00               	movlw	0
 40662  00D498  6FB9               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 40663  00D49A  0E00               	movlw	0
 40664  00D49C  6FBA               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 40665                           
 40666                           ; BSR set to: 0
 40667                           ;motor.c: 567: distance_ccw = os.current_position_in_steps - target_position;
 40668  00D49E  C0A7  F0AB         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 40669  00D4A2  C0A8  F0AC         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 40670  00D4A6  C0A9  F0AD         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 40671  00D4AA  C0AA  F0AE         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 40672  00D4AE  1FAB               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40673  00D4B0  1FAC               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40674  00D4B2  1FAD               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40675  00D4B4  1FAE               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40676  00D4B6  2BAB               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40677  00D4B8  0E00               	movlw	0
 40678  00D4BA  23AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40679  00D4BC  23AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40680  00D4BE  23AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40681  00D4C0  0101               	movlb	1	; () banked
 40682  00D4C2  5178               	movf	(_os+7)& (0+255),w,b	;volatile
 40683  00D4C4  0100               	movlb	0	; () banked
 40684  00D4C6  25AB               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40685  00D4C8  6FBF               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 40686  00D4CA  0101               	movlb	1	; () banked
 40687  00D4CC  5179               	movf	(_os+8)& (0+255),w,b	;volatile
 40688  00D4CE  0100               	movlb	0	; () banked
 40689  00D4D0  21AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40690  00D4D2  6FC0               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 40691  00D4D4  0101               	movlb	1	; () banked
 40692  00D4D6  517A               	movf	(_os+9)& (0+255),w,b	;volatile
 40693  00D4D8  0100               	movlb	0	; () banked
 40694  00D4DA  21AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40695  00D4DC  6FC1               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 40696  00D4DE  0101               	movlb	1	; () banked
 40697  00D4E0  517B               	movf	(_os+10)& (0+255),w,b	;volatile
 40698  00D4E2  0100               	movlb	0	; () banked
 40699  00D4E4  21AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40700  00D4E6  6FC2               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 40701                           
 40702                           ; BSR set to: 0
 40703                           ;motor.c: 568: if(distance_ccw>config.full_circle_in_steps)
 40704  00D4E8  51BF               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40705  00D4EA  0101               	movlb	1	; () banked
 40706  00D4EC  5DA1               	subwf	_config& (0+255),w,b
 40707  00D4EE  0100               	movlb	0	; () banked
 40708  00D4F0  51C0               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40709  00D4F2  0101               	movlb	1	; () banked
 40710  00D4F4  59A2               	subwfb	(_config+1)& (0+255),w,b
 40711  00D4F6  0100               	movlb	0	; () banked
 40712  00D4F8  51C1               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40713  00D4FA  0101               	movlb	1	; () banked
 40714  00D4FC  59A3               	subwfb	(_config+2)& (0+255),w,b
 40715  00D4FE  0100               	movlb	0	; () banked
 40716  00D500  51C2               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40717  00D502  0101               	movlb	1	; () banked
 40718  00D504  59A4               	subwfb	(_config+3)& (0+255),w,b
 40719  00D506  B0D8               	btfsc	status,0,c
 40720  00D508  D00F               	goto	l2485
 40721                           
 40722                           ; BSR set to: 1
 40723                           ;motor.c: 569: {;motor.c: 570: distance_ccw += config.full_circle_in_steps;
 40724  00D50A  51A1               	movf	_config& (0+255),w,b
 40725  00D50C  0100               	movlb	0	; () banked
 40726  00D50E  27BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40727  00D510  0101               	movlb	1	; () banked
 40728  00D512  51A2               	movf	(_config+1)& (0+255),w,b
 40729  00D514  0100               	movlb	0	; () banked
 40730  00D516  23C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40731  00D518  0101               	movlb	1	; () banked
 40732  00D51A  51A3               	movf	(_config+2)& (0+255),w,b
 40733  00D51C  0100               	movlb	0	; () banked
 40734  00D51E  23C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40735  00D520  0101               	movlb	1	; () banked
 40736  00D522  51A4               	movf	(_config+3)& (0+255),w,b
 40737  00D524  0100               	movlb	0	; () banked
 40738  00D526  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40739  00D528                     l2485:
 40740                           
 40741                           ;motor.c: 571: };motor.c: 572: if(os.approach_direction==MOTOR_DIRECTION_CW)
 40742  00D528  0101               	movlb	1	; () banked
 40743  00D52A  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 40744  00D52C  A4D8               	btfss	status,2,c
 40745  00D52E  D023               	goto	l2486
 40746                           
 40747                           ; BSR set to: 1
 40748                           ;motor.c: 573: {;motor.c: 574: distance_ccw += config.overshoot_in_steps;
 40749  00D530  51A6               	movf	(_config+5)& (0+255),w,b
 40750  00D532  0100               	movlb	0	; () banked
 40751  00D534  27BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40752  00D536  0101               	movlb	1	; () banked
 40753  00D538  51A7               	movf	(_config+6)& (0+255),w,b
 40754  00D53A  0100               	movlb	0	; () banked
 40755  00D53C  23C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40756  00D53E  0E00               	movlw	0
 40757  00D540  23C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40758  00D542  0E00               	movlw	0
 40759  00D544  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40760                           
 40761                           ;motor.c: 575: overhead_ccw += config.overshoot_in_steps;
 40762  00D546  0101               	movlb	1	; () banked
 40763  00D548  51A6               	movf	(_config+5)& (0+255),w,b
 40764  00D54A  0100               	movlb	0	; () banked
 40765  00D54C  27B7               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 40766  00D54E  0101               	movlb	1	; () banked
 40767  00D550  51A7               	movf	(_config+6)& (0+255),w,b
 40768  00D552  0100               	movlb	0	; () banked
 40769  00D554  23B8               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 40770  00D556  0E00               	movlw	0
 40771  00D558  23B9               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 40772  00D55A  0E00               	movlw	0
 40773  00D55C  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 40774                           
 40775                           ;motor.c: 576: overhead_ccw += config.overshoot_cost_in_steps;
 40776  00D55E  0101               	movlb	1	; () banked
 40777  00D560  51A8               	movf	(_config+7)& (0+255),w,b
 40778  00D562  0100               	movlb	0	; () banked
 40779  00D564  27B7               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 40780  00D566  0101               	movlb	1	; () banked
 40781  00D568  51A9               	movf	(_config+8)& (0+255),w,b
 40782  00D56A  0100               	movlb	0	; () banked
 40783  00D56C  23B8               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 40784  00D56E  0E00               	movlw	0
 40785  00D570  23B9               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 40786  00D572  0E00               	movlw	0
 40787  00D574  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 40788  00D576                     l2486:
 40789                           
 40790                           ;motor.c: 577: };motor.c: 580: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 40791                           
 40792                           ; BSR set to: 0
 40793  00D576  0100               	movlb	0	; () banked
 40794  00D578  51B7               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 40795  00D57A  25BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40796  00D57C  6FAB               	movwf	??_motor_go_to_steps_position& (0+255),b
 40797  00D57E  51B8               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 40798  00D580  21C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40799  00D582  6FAC               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 40800  00D584  51B9               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 40801  00D586  21C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40802  00D588  6FAD               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 40803  00D58A  51BA               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 40804  00D58C  21C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40805  00D58E  6FAE               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 40806  00D590  51B3               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 40807  00D592  25BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40808  00D594  6FAF               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 40809  00D596  51B4               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 40810  00D598  21BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40811  00D59A  6FB0               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 40812  00D59C  51B5               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 40813  00D59E  21BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40814  00D5A0  6FB1               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 40815  00D5A2  51B6               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 40816  00D5A4  21BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40817  00D5A6  6FB2               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 40818  00D5A8  51AB               	movf	??_motor_go_to_steps_position& (0+255),w,b
 40819  00D5AA  5DAF               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 40820  00D5AC  51AC               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40821  00D5AE  59B0               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 40822  00D5B0  51AD               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40823  00D5B2  59B1               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 40824  00D5B4  51AE               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40825  00D5B6  59B2               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 40826  00D5B8  B0D8               	btfsc	status,0,c
 40827  00D5BA  D034               	goto	l2487
 40828                           
 40829                           ; BSR set to: 0
 40830                           ;motor.c: 581: {;motor.c: 582: if(os.approach_direction==MOTOR_DIRECTION_CW)
 40831  00D5BC  0101               	movlb	1	; () banked
 40832  00D5BE  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 40833  00D5C0  A4D8               	btfss	status,2,c
 40834  00D5C2  D011               	goto	l2488
 40835                           
 40836                           ; BSR set to: 1
 40837                           ;motor.c: 583: {;motor.c: 585: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          );
 40838  00D5C4  C0BB  F0A0         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 40839  00D5C8  C0BC  F0A1         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 40840  00D5CC  C0BD  F0A2         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 40841  00D5D0  C0BE  F0A3         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 40842  00D5D4  0E00               	movlw	0
 40843  00D5D6  0100               	movlb	0	; () banked
 40844  00D5D8  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40845  00D5DA  0E00               	movlw	0
 40846  00D5DC  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40847  00D5DE  0E01               	movlw	1
 40848  00D5E0  ECA7  F097         	call	_motor_schedule_command
 40849                           
 40850                           ;motor.c: 586: }
 40851  00D5E4  0012               	return	
 40852  00D5E6                     l2488:
 40853                           
 40854                           ;motor.c: 587: else;motor.c: 588: {;motor.c: 590: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0);
 40855  00D5E6  C0BB  F0A0         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 40856  00D5EA  C0BC  F0A1         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 40857  00D5EE  C0BD  F0A2         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 40858  00D5F2  C0BE  F0A3         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 40859  00D5F6  0E00               	movlw	0
 40860  00D5F8  0100               	movlb	0	; () banked
 40861  00D5FA  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40862  00D5FC  0E00               	movlw	0
 40863  00D5FE  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40864  00D600  0E01               	movlw	1
 40865  00D602  ECA7  F097         	call	_motor_schedule_command
 40866                           
 40867                           ;motor.c: 591: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0)
      +                          ;
 40868  00D606  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40869  00D60A  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40870  00D60E  0100               	movlb	0	; () banked
 40871  00D610  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40872  00D612  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40873  00D614  0E00               	movlw	0
 40874  00D616  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40875  00D618  0E00               	movlw	0
 40876  00D61A  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40877  00D61C  0EFF               	movlw	255
 40878  00D61E  ECA7  F097         	call	_motor_schedule_command
 40879                           
 40880                           ;motor.c: 592: };motor.c: 593: }
 40881  00D622  0012               	return	
 40882  00D624                     l2487:
 40883                           
 40884                           ;motor.c: 594: else;motor.c: 595: {;motor.c: 596: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 40885  00D624  0101               	movlb	1	; () banked
 40886  00D626  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 40887  00D628  A4D8               	btfss	status,2,c
 40888  00D62A  D011               	goto	l2491
 40889                           
 40890                           ; BSR set to: 1
 40891                           ;motor.c: 597: {;motor.c: 599: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0);
 40892  00D62C  C0BF  F0A0         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 40893  00D630  C0C0  F0A1         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 40894  00D634  C0C1  F0A2         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 40895  00D638  C0C2  F0A3         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 40896  00D63C  0E00               	movlw	0
 40897  00D63E  0100               	movlb	0	; () banked
 40898  00D640  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40899  00D642  0E00               	movlw	0
 40900  00D644  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40901  00D646  0EFF               	movlw	255
 40902  00D648  ECA7  F097         	call	_motor_schedule_command
 40903                           
 40904                           ;motor.c: 600: }
 40905  00D64C  0012               	return	
 40906  00D64E                     l2491:
 40907                           
 40908                           ;motor.c: 601: else;motor.c: 602: {;motor.c: 604: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0);
 40909  00D64E  C0BF  F0A0         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 40910  00D652  C0C0  F0A1         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 40911  00D656  C0C1  F0A2         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 40912  00D65A  C0C2  F0A3         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 40913  00D65E  0E00               	movlw	0
 40914  00D660  0100               	movlb	0	; () banked
 40915  00D662  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40916  00D664  0E00               	movlw	0
 40917  00D666  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40918  00D668  0EFF               	movlw	255
 40919  00D66A  ECA7  F097         	call	_motor_schedule_command
 40920                           
 40921                           ;motor.c: 605: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 40922  00D66E  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40923  00D672  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40924  00D676  0100               	movlb	0	; () banked
 40925  00D678  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40926  00D67A  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40927  00D67C  0E00               	movlw	0
 40928  00D67E  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40929  00D680  0E00               	movlw	0
 40930  00D682  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40931  00D684  0E01               	movlw	1
 40932  00D686  ECA7  F097         	call	_motor_schedule_command
 40933  00D68A  0012               	return	
 40934  00D68C                     __end_of_motor_go_to_steps_position:
 40935                           	opt stack 0
 40936                           tosu	equ	0xFFF
 40937                           tosh	equ	0xFFE
 40938                           tosl	equ	0xFFD
 40939                           pclath	equ	0xFFA
 40940                           tblptru	equ	0xFF8
 40941                           tblptrh	equ	0xFF7
 40942                           tblptrl	equ	0xFF6
 40943                           tablat	equ	0xFF5
 40944                           prodh	equ	0xFF4
 40945                           prodl	equ	0xFF3
 40946                           intcon	equ	0xFF2
 40947                           indf0	equ	0xFEF
 40948                           postinc0	equ	0xFEE
 40949                           fsr0h	equ	0xFEA
 40950                           fsr0l	equ	0xFE9
 40951                           wreg	equ	0xFE8
 40952                           indf1	equ	0xFE7
 40953                           postinc1	equ	0xFE6
 40954                           postdec1	equ	0xFE5
 40955                           plusw1	equ	0xFE3
 40956                           fsr1h	equ	0xFE2
 40957                           fsr1l	equ	0xFE1
 40958                           indf2	equ	0xFDF
 40959                           postinc2	equ	0xFDE
 40960                           postdec2	equ	0xFDD
 40961                           plusw2	equ	0xFDB
 40962                           fsr2h	equ	0xFDA
 40963                           fsr2l	equ	0xFD9
 40964                           status	equ	0xFD8
 40965                           
 40966 ;; *************** function __parse_command_long *****************
 40967 ;; Defined at:
 40968 ;;		line 410 in file "api.c"
 40969 ;; Parameters:    Size  Location     Type
 40970 ;;  data            2   83[BANK0 ] PTR unsigned char 
 40971 ;;		 -> ReceivedDataBuffer(64), 
 40972 ;;  out_buffer      2   85[BANK0 ] PTR unsigned char 
 40973 ;;		 -> ToSendDataBuffer(64), 
 40974 ;;  out_idx_ptr     2   87[BANK0 ] PTR unsigned char 
 40975 ;;		 -> api_parse@out_idx(1), 
 40976 ;; Auto vars:     Size  Location     Type
 40977 ;;  length          1   89[BANK0 ] unsigned char 
 40978 ;; Return value:  Size  Location     Type
 40979 ;;                  1    wreg      unsigned char 
 40980 ;; Registers used:
 40981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40982 ;; Tracked objects:
 40983 ;;		On entry : 0/0
 40984 ;;		On exit  : 0/0
 40985 ;;		Unchanged: 0/0
 40986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40987 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40990 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40991 ;;Total ram usage:        7 bytes
 40992 ;; Hardware stack levels used:    1
 40993 ;; Hardware stack levels required when called:   15
 40994 ;; This function calls:
 40995 ;;		__parse_jump_steps
 40996 ;; This function is called by:
 40997 ;;		_api_parse
 40998 ;; This function uses a non-reentrant model
 40999 ;;
 41000                           
 41001                           	psect	text167
 41002  014F5C                     __ptext167:
 41003                           	opt stack 0
 41004  014F5C                     __parse_command_long:
 41005                           	opt stack 13
 41006                           
 41007                           ;api.c: 412: uint8_t length = 65;
 41008                           
 41009                           ;incstack = 0
 41010  014F5C  0E41               	movlw	65
 41011  014F5E  0100               	movlb	0	; () banked
 41012  014F60  6FB9               	movwf	__parse_command_long@length& (0+255),b
 41013                           
 41014                           ;api.c: 414: switch(data[0])
 41015  014F62  D011               	goto	l2301
 41016  014F64                     
 41017                           ; BSR set to: 0
 41018                           ;api.c: 421: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 41019                           
 41020                           ; BSR set to: 0
 41021  014F64  C0B3  F0A7         	movff	__parse_command_long@data,__parse_jump_steps@data
 41022  014F68  C0B4  F0A8         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 41023  014F6C  C0B5  F0A9         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 41024  014F70  C0B6  F0AA         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 41025  014F74  C0B7  F0AB         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 41026  014F78  C0B8  F0AC         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 41027  014F7C  ECCA  F07E         	call	__parse_jump_steps	;wreg free
 41028  014F80  0100               	movlb	0	; () banked
 41029  014F82  6FB9               	movwf	__parse_command_long@length& (0+255),b
 41030                           
 41031                           ; BSR set to: 0
 41032                           ;api.c: 423: }
 41033                           
 41034                           ;api.c: 422: break;
 41035  014F84  D008               	goto	l2303
 41036  014F86                     l2301:
 41037                           
 41038                           ; BSR set to: 0
 41039                           
 41040                           ; BSR set to: 0
 41041  014F86  C0B3  FFD9         	movff	__parse_command_long@data,fsr2l
 41042  014F8A  C0B4  FFDA         	movff	__parse_command_long@data+1,fsr2h
 41043  014F8E  50DF               	movf	indf2,w,c
 41044                           
 41045                           ; Switch size 1, requested type "space"
 41046                           ; Number of cases is 1, Range of values is 144 to 144
 41047                           ; switch strategies available:
 41048                           ; Name         Instructions Cycles
 41049                           ; simple_byte            4     3 (average)
 41050                           ;	Chosen strategy is simple_byte
 41051  014F90  0A90               	xorlw	144	; case 144
 41052  014F92  B4D8               	btfsc	status,2,c
 41053  014F94  D7E7               	goto	l2302
 41054  014F96                     l2303:
 41055                           
 41056                           ; BSR set to: 0
 41057                           ;api.c: 427: return length;
 41058                           
 41059                           ; BSR set to: 0
 41060  014F96  51B9               	movf	__parse_command_long@length& (0+255),w,b
 41061  014F98  0012               	return	
 41062  014F9A                     __end_of__parse_command_long:
 41063                           	opt stack 0
 41064                           tosu	equ	0xFFF
 41065                           tosh	equ	0xFFE
 41066                           tosl	equ	0xFFD
 41067                           pclath	equ	0xFFA
 41068                           tblptru	equ	0xFF8
 41069                           tblptrh	equ	0xFF7
 41070                           tblptrl	equ	0xFF6
 41071                           tablat	equ	0xFF5
 41072                           prodh	equ	0xFF4
 41073                           prodl	equ	0xFF3
 41074                           intcon	equ	0xFF2
 41075                           indf0	equ	0xFEF
 41076                           postinc0	equ	0xFEE
 41077                           fsr0h	equ	0xFEA
 41078                           fsr0l	equ	0xFE9
 41079                           wreg	equ	0xFE8
 41080                           indf1	equ	0xFE7
 41081                           postinc1	equ	0xFE6
 41082                           postdec1	equ	0xFE5
 41083                           plusw1	equ	0xFE3
 41084                           fsr1h	equ	0xFE2
 41085                           fsr1l	equ	0xFE1
 41086                           indf2	equ	0xFDF
 41087                           postinc2	equ	0xFDE
 41088                           postdec2	equ	0xFDD
 41089                           plusw2	equ	0xFDB
 41090                           fsr2h	equ	0xFDA
 41091                           fsr2l	equ	0xFD9
 41092                           status	equ	0xFD8
 41093                           
 41094 ;; *************** function __parse_jump_steps *****************
 41095 ;; Defined at:
 41096 ;;		line 453 in file "api.c"
 41097 ;; Parameters:    Size  Location     Type
 41098 ;;  data            2   71[BANK0 ] PTR unsigned char 
 41099 ;;		 -> ReceivedDataBuffer(64), 
 41100 ;;  out_buffer      2   73[BANK0 ] PTR unsigned char 
 41101 ;;		 -> ToSendDataBuffer(64), 
 41102 ;;  out_idx_ptr     2   75[BANK0 ] PTR unsigned char 
 41103 ;;		 -> api_parse@out_idx(1), 
 41104 ;; Auto vars:     Size  Location     Type
 41105 ;;  number_of_st    4   79[BANK0 ] long 
 41106 ;;  return_value    1   78[BANK0 ] unsigned char 
 41107 ;; Return value:  Size  Location     Type
 41108 ;;                  1    wreg      unsigned char 
 41109 ;; Registers used:
 41110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41111 ;; Tracked objects:
 41112 ;;		On entry : 0/0
 41113 ;;		On exit  : 0/0
 41114 ;;		Unchanged: 0/0
 41115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41116 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41117 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41119 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41120 ;;Total ram usage:       12 bytes
 41121 ;; Hardware stack levels used:    1
 41122 ;; Hardware stack levels required when called:   14
 41123 ;; This function calls:
 41124 ;;		_motor_schedule_command
 41125 ;; This function is called by:
 41126 ;;		__parse_command_long
 41127 ;; This function uses a non-reentrant model
 41128 ;;
 41129                           
 41130                           	psect	text168
 41131  00FD94                     __ptext168:
 41132                           	opt stack 0
 41133  00FD94                     __parse_jump_steps:
 41134                           	opt stack 13
 41135                           
 41136                           ;api.c: 457: uint8_t return_value;;api.c: 458: int32_t number_of_steps;;api.c: 460: numb
      +                          er_of_steps = data[1];
 41137                           
 41138                           ; BSR set to: 0
 41139                           ;incstack = 0
 41140  00FD94  0100               	movlb	0	; () banked
 41141  00FD96  EE20 F001          	lfsr	2,1
 41142  00FD9A  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41143  00FD9C  26D9               	addwf	fsr2l,f,c
 41144  00FD9E  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41145  00FDA0  22DA               	addwfc	fsr2h,f,c
 41146  00FDA2  50DF               	movf	indf2,w,c
 41147  00FDA4  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41148  00FDA6  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41149  00FDA8  6FAF               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 41150  00FDAA  6BB0               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 41151  00FDAC  6BB1               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 41152  00FDAE  6BB2               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 41153                           
 41154                           ; BSR set to: 0
 41155                           ;api.c: 461: number_of_steps <<= 8;
 41156  00FDB0  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41157  00FDB4  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41158  00FDB8  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41159  00FDBC  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41160                           
 41161                           ; BSR set to: 0
 41162                           ;api.c: 462: number_of_steps |= data[2];
 41163  00FDBE  EE20 F002          	lfsr	2,2
 41164  00FDC2  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41165  00FDC4  26D9               	addwf	fsr2l,f,c
 41166  00FDC6  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41167  00FDC8  22DA               	addwfc	fsr2h,f,c
 41168  00FDCA  50DF               	movf	indf2,w,c
 41169  00FDCC  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41170  00FDCE  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41171  00FDD0  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41172                           
 41173                           ;api.c: 463: number_of_steps <<= 8;
 41174  00FDD2  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41175  00FDD6  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41176  00FDDA  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41177  00FDDE  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41178                           
 41179                           ; BSR set to: 0
 41180                           ;api.c: 464: number_of_steps |= data[3];
 41181  00FDE0  EE20 F003          	lfsr	2,3
 41182  00FDE4  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41183  00FDE6  26D9               	addwf	fsr2l,f,c
 41184  00FDE8  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41185  00FDEA  22DA               	addwfc	fsr2h,f,c
 41186  00FDEC  50DF               	movf	indf2,w,c
 41187  00FDEE  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41188  00FDF0  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41189  00FDF2  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41190                           
 41191                           ; BSR set to: 0
 41192                           ;api.c: 465: number_of_steps <<= 8;
 41193  00FDF4  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41194  00FDF8  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41195  00FDFC  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41196  00FE00  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41197                           
 41198                           ;api.c: 466: number_of_steps |= data[4];
 41199  00FE02  EE20 F004          	lfsr	2,4
 41200  00FE06  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41201  00FE08  26D9               	addwf	fsr2l,f,c
 41202  00FE0A  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41203  00FE0C  22DA               	addwfc	fsr2h,f,c
 41204  00FE0E  50DF               	movf	indf2,w,c
 41205  00FE10  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41206  00FE12  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41207  00FE14  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41208                           
 41209                           ; BSR set to: 0
 41210                           ;api.c: 468: if(number_of_steps>0)
 41211  00FE16  BFB2               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 41212  00FE18  D017               	goto	l2307
 41213  00FE1A  51B2               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 41214  00FE1C  11B1               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 41215  00FE1E  11B0               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 41216  00FE20  E103               	bnz	u13540
 41217  00FE22  05AF               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 41218  00FE24  A0D8               	btfss	status,0,c
 41219  00FE26  D010               	goto	l2307
 41220  00FE28                     u13540:
 41221                           
 41222                           ; BSR set to: 0
 41223                           ;api.c: 469: {;api.c: 470: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0);
 41224  00FE28  C0AF  F0A0         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41225  00FE2C  C0B0  F0A1         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41226  00FE30  C0B1  F0A2         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41227  00FE34  C0B2  F0A3         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41228  00FE38  0E00               	movlw	0
 41229  00FE3A  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41230  00FE3C  0E00               	movlw	0
 41231  00FE3E  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41232  00FE40  0E01               	movlw	1
 41233  00FE42  ECA7  F097         	call	_motor_schedule_command
 41234  00FE46  D017               	goto	L63
 41235  00FE48                     l2307:
 41236                           
 41237                           ; BSR set to: 0
 41238                           ;api.c: 472: else;api.c: 473: {;api.c: 474: number_of_steps = -number_of_steps;
 41239                           
 41240                           ; BSR set to: 0
 41241  00FE48  1FB2               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41242  00FE4A  1FB1               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41243  00FE4C  1FB0               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41244  00FE4E  6DAF               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 41245  00FE50  0E00               	movlw	0
 41246  00FE52  23B0               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41247  00FE54  23B1               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41248  00FE56  23B2               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41249                           
 41250                           ; BSR set to: 0
 41251                           ;api.c: 475: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0);
 41252  00FE58  C0AF  F0A0         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41253  00FE5C  C0B0  F0A1         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41254  00FE60  C0B1  F0A2         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41255  00FE64  C0B2  F0A3         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41256  00FE68  0E00               	movlw	0
 41257  00FE6A  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41258  00FE6C  0E00               	movlw	0
 41259  00FE6E  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41260  00FE70  0EFF               	movlw	255
 41261  00FE72  ECA7  F097         	call	_motor_schedule_command
 41262  00FE76                     L63:
 41263  00FE76  0100               	movlb	0	; () banked
 41264  00FE78  6FAE               	movwf	__parse_jump_steps@return_value& (0+255),b
 41265                           
 41266                           ; BSR set to: 0
 41267                           ;api.c: 476: };api.c: 479: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 41268                           
 41269                           ; BSR set to: 0
 41270  00FE7A  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41271  00FE7E  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41272  00FE82  50DF               	movf	indf2,w,c
 41273  00FE84  B4D8               	btfsc	status,2,c
 41274  00FE86  D02B               	goto	l2309
 41275                           
 41276                           ; BSR set to: 0
 41277  00FE88  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41278  00FE8C  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41279  00FE90  0E3F               	movlw	63
 41280  00FE92  60DF               	cpfslt	indf2,c
 41281  00FE94  D024               	goto	l2309
 41282                           
 41283                           ; BSR set to: 0
 41284                           ;api.c: 480: {;api.c: 481: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 41285  00FE96  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41286  00FE9A  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41287  00FE9E  CFDF F0AD          	movff	indf2,??__parse_jump_steps
 41288  00FEA2  0E01               	movlw	1
 41289  00FEA4  26DF               	addwf	indf2,f,c
 41290  00FEA6  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41291  00FEA8  0D01               	mullw	1
 41292  00FEAA  50F3               	movf	prodl,w,c
 41293  00FEAC  25A9               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 41294  00FEAE  6ED9               	movwf	fsr2l,c
 41295  00FEB0  50F4               	movf	prodh,w,c
 41296  00FEB2  21AA               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 41297  00FEB4  6EDA               	movwf	fsr2h,c
 41298  00FEB6  0E90               	movlw	144
 41299  00FEB8  6EDF               	movwf	indf2,c
 41300                           
 41301                           ;api.c: 482: out_buffer[(*out_idx_ptr)++] = return_value;
 41302  00FEBA  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41303  00FEBE  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41304  00FEC2  CFDF F0AD          	movff	indf2,??__parse_jump_steps
 41305  00FEC6  0E01               	movlw	1
 41306  00FEC8  26DF               	addwf	indf2,f,c
 41307  00FECA  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41308  00FECC  0D01               	mullw	1
 41309  00FECE  50F3               	movf	prodl,w,c
 41310  00FED0  25A9               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 41311  00FED2  6ED9               	movwf	fsr2l,c
 41312  00FED4  50F4               	movf	prodh,w,c
 41313  00FED6  21AA               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 41314  00FED8  6EDA               	movwf	fsr2h,c
 41315  00FEDA  C0AE  FFDF         	movff	__parse_jump_steps@return_value,indf2
 41316  00FEDE                     l2309:
 41317                           
 41318                           ; BSR set to: 0
 41319                           ;api.c: 483: };api.c: 485: return 5;
 41320                           
 41321                           ; BSR set to: 0
 41322  00FEDE  0E05               	movlw	5
 41323  00FEE0  0012               	return	
 41324  00FEE2                     __end_of__parse_jump_steps:
 41325                           	opt stack 0
 41326                           tosu	equ	0xFFF
 41327                           tosh	equ	0xFFE
 41328                           tosl	equ	0xFFD
 41329                           pclath	equ	0xFFA
 41330                           tblptru	equ	0xFF8
 41331                           tblptrh	equ	0xFF7
 41332                           tblptrl	equ	0xFF6
 41333                           tablat	equ	0xFF5
 41334                           prodh	equ	0xFF4
 41335                           prodl	equ	0xFF3
 41336                           intcon	equ	0xFF2
 41337                           indf0	equ	0xFEF
 41338                           postinc0	equ	0xFEE
 41339                           fsr0h	equ	0xFEA
 41340                           fsr0l	equ	0xFE9
 41341                           wreg	equ	0xFE8
 41342                           indf1	equ	0xFE7
 41343                           postinc1	equ	0xFE6
 41344                           postdec1	equ	0xFE5
 41345                           plusw1	equ	0xFE3
 41346                           fsr1h	equ	0xFE2
 41347                           fsr1l	equ	0xFE1
 41348                           indf2	equ	0xFDF
 41349                           postinc2	equ	0xFDE
 41350                           postdec2	equ	0xFDD
 41351                           plusw2	equ	0xFDB
 41352                           fsr2h	equ	0xFDA
 41353                           fsr2l	equ	0xFD9
 41354                           status	equ	0xFD8
 41355                           
 41356 ;; *************** function _motor_schedule_command *****************
 41357 ;; Defined at:
 41358 ;;		line 124 in file "motor.c"
 41359 ;; Parameters:    Size  Location     Type
 41360 ;;  direction       1    wreg     enum E6622
 41361 ;;  distance_in_    4   64[BANK0 ] unsigned long 
 41362 ;;  speed           2   68[BANK0 ] unsigned int 
 41363 ;; Auto vars:     Size  Location     Type
 41364 ;;  direction       1   70[BANK0 ] enum E6622
 41365 ;; Return value:  Size  Location     Type
 41366 ;;                  1    wreg      unsigned char 
 41367 ;; Registers used:
 41368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41369 ;; Tracked objects:
 41370 ;;		On entry : 0/0
 41371 ;;		On exit  : 0/0
 41372 ;;		Unchanged: 0/0
 41373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41377 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41378 ;;Total ram usage:        7 bytes
 41379 ;; Hardware stack levels used:    1
 41380 ;; Hardware stack levels required when called:   13
 41381 ;; This function calls:
 41382 ;;		__motor_run
 41383 ;;		_motor_items_in_cue
 41384 ;; This function is called by:
 41385 ;;		__parse_command_short
 41386 ;;		__parse_jump_steps
 41387 ;;		_motor_go_to_steps_position
 41388 ;;		_motor_arc_move
 41389 ;;		_encoder_statemachine
 41390 ;; This function uses a non-reentrant model
 41391 ;;
 41392                           
 41393                           	psect	text169
 41394  012F4E                     __ptext169:
 41395                           	opt stack 0
 41396  012F4E                     _motor_schedule_command:
 41397                           	opt stack 16
 41398                           
 41399                           ; BSR set to: 0
 41400                           ;incstack = 0
 41401                           ;motor_schedule_command@direction stored from wreg
 41402  012F4E  0100               	movlb	0	; () banked
 41403  012F50  6FA6               	movwf	motor_schedule_command@direction& (0+255),b
 41404                           
 41405                           ;motor.c: 126: if((motor_items_in_cue()==0) && (os.busy==0))
 41406  012F52  ECD4  F0AB         	call	_motor_items_in_cue	;wreg free
 41407  012F56  0900               	iorlw	0
 41408  012F58  A4D8               	btfss	status,2,c
 41409  012F5A  D016               	goto	l2408
 41410  012F5C  0101               	movlb	1	; () banked
 41411  012F5E  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 41412  012F60  A4D8               	btfss	status,2,c
 41413  012F62  D012               	goto	l2408
 41414                           
 41415                           ; BSR set to: 1
 41416                           ;motor.c: 127: {;motor.c: 130: _motor_run(direction, distance_in_steps, speed);
 41417  012F64  C0A0  F08F         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 41418  012F68  C0A1  F090         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 41419  012F6C  C0A2  F091         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 41420  012F70  C0A3  F092         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 41421  012F74  C0A4  F093         	movff	motor_schedule_command@speed,__motor_run@speed
 41422  012F78  C0A5  F094         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 41423  012F7C  0100               	movlb	0	; () banked
 41424  012F7E  51A6               	movf	motor_schedule_command@direction& (0+255),w,b
 41425  012F80  ECFE  F062         	call	__motor_run
 41426                           
 41427                           ;motor.c: 132: return 1;
 41428  012F84  0E01               	movlw	1
 41429  012F86  0012               	return	
 41430  012F88                     l2408:
 41431                           
 41432                           ;motor.c: 133: };motor.c: 134: if(motor_items_in_cue()==8-1)
 41433  012F88  ECD4  F0AB         	call	_motor_items_in_cue	;wreg free
 41434  012F8C  0A07               	xorlw	7
 41435  012F8E  A4D8               	btfss	status,2,c
 41436  012F90  D002               	goto	l2410
 41437                           
 41438                           ;motor.c: 135: {;motor.c: 138: return 0;
 41439  012F92  0E00               	movlw	0
 41440                           
 41441                           ;motor.c: 139: }
 41442  012F94  0012               	return	
 41443  012F96                     l2410:
 41444                           
 41445                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 41446  012F96  0101               	movlb	1	; () banked
 41447  012F98  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41448  012F9A  0D07               	mullw	7
 41449  012F9C  0E00               	movlw	low _motor_command_cue
 41450  012F9E  24F3               	addwf	prodl,w,c
 41451  012FA0  6ED9               	movwf	fsr2l,c
 41452  012FA2  0E03               	movlw	high _motor_command_cue
 41453  012FA4  20F4               	addwfc	prodh,w,c
 41454  012FA6  6EDA               	movwf	fsr2h,c
 41455  012FA8  C0A6  FFDF         	movff	motor_schedule_command@direction,indf2
 41456                           
 41457                           ;motor.c: 144: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 41458  012FAC  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41459  012FAE  0D07               	mullw	7
 41460  012FB0  0E01               	movlw	1
 41461  012FB2  26F3               	addwf	prodl,f,c
 41462  012FB4  0E00               	movlw	0
 41463  012FB6  22F4               	addwfc	prodh,f,c
 41464  012FB8  0E00               	movlw	low _motor_command_cue
 41465  012FBA  24F3               	addwf	prodl,w,c
 41466  012FBC  6ED9               	movwf	fsr2l,c
 41467  012FBE  0E03               	movlw	high _motor_command_cue
 41468  012FC0  20F4               	addwfc	prodh,w,c
 41469  012FC2  6EDA               	movwf	fsr2h,c
 41470  012FC4  C0A0  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 41471  012FC8  C0A1  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 41472  012FCC  C0A2  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 41473  012FD0  C0A3  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 41474                           
 41475                           ;motor.c: 145: motor_command_cue[motor_cue_write_index].speed = speed;
 41476  012FD4  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41477  012FD6  0D07               	mullw	7
 41478  012FD8  0E05               	movlw	5
 41479  012FDA  26F3               	addwf	prodl,f,c
 41480  012FDC  0E00               	movlw	0
 41481  012FDE  22F4               	addwfc	prodh,f,c
 41482  012FE0  0E00               	movlw	low _motor_command_cue
 41483  012FE2  24F3               	addwf	prodl,w,c
 41484  012FE4  6ED9               	movwf	fsr2l,c
 41485  012FE6  0E03               	movlw	high _motor_command_cue
 41486  012FE8  20F4               	addwfc	prodh,w,c
 41487  012FEA  6EDA               	movwf	fsr2h,c
 41488  012FEC  C0A4  FFDE         	movff	motor_schedule_command@speed,postinc2
 41489  012FF0  C0A5  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 41490                           
 41491                           ; BSR set to: 1
 41492                           ;motor.c: 147: ++motor_cue_write_index;
 41493  012FF4  2B57               	incf	_motor_cue_write_index& (0+255),f,b
 41494                           
 41495                           ; BSR set to: 1
 41496                           ;motor.c: 149: return 1;
 41497  012FF6  0E01               	movlw	1
 41498                           
 41499                           ; BSR set to: 1
 41500  012FF8  0012               	return	
 41501  012FFA                     __end_of_motor_schedule_command:
 41502                           	opt stack 0
 41503                           tosu	equ	0xFFF
 41504                           tosh	equ	0xFFE
 41505                           tosl	equ	0xFFD
 41506                           pclath	equ	0xFFA
 41507                           tblptru	equ	0xFF8
 41508                           tblptrh	equ	0xFF7
 41509                           tblptrl	equ	0xFF6
 41510                           tablat	equ	0xFF5
 41511                           prodh	equ	0xFF4
 41512                           prodl	equ	0xFF3
 41513                           intcon	equ	0xFF2
 41514                           indf0	equ	0xFEF
 41515                           postinc0	equ	0xFEE
 41516                           fsr0h	equ	0xFEA
 41517                           fsr0l	equ	0xFE9
 41518                           wreg	equ	0xFE8
 41519                           indf1	equ	0xFE7
 41520                           postinc1	equ	0xFE6
 41521                           postdec1	equ	0xFE5
 41522                           plusw1	equ	0xFE3
 41523                           fsr1h	equ	0xFE2
 41524                           fsr1l	equ	0xFE1
 41525                           indf2	equ	0xFDF
 41526                           postinc2	equ	0xFDE
 41527                           postdec2	equ	0xFDD
 41528                           plusw2	equ	0xFDB
 41529                           fsr2h	equ	0xFDA
 41530                           fsr2l	equ	0xFD9
 41531                           status	equ	0xFD8
 41532                           
 41533 ;; *************** function _motor_items_in_cue *****************
 41534 ;; Defined at:
 41535 ;;		line 119 in file "motor.c"
 41536 ;; Parameters:    Size  Location     Type
 41537 ;;		None
 41538 ;; Auto vars:     Size  Location     Type
 41539 ;;		None
 41540 ;; Return value:  Size  Location     Type
 41541 ;;                  1    wreg      unsigned char 
 41542 ;; Registers used:
 41543 ;;		wreg, status,2, status,0
 41544 ;; Tracked objects:
 41545 ;;		On entry : 0/0
 41546 ;;		On exit  : 0/0
 41547 ;;		Unchanged: 0/0
 41548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41553 ;;Total ram usage:        0 bytes
 41554 ;; Hardware stack levels used:    1
 41555 ;; Hardware stack levels required when called:   10
 41556 ;; This function calls:
 41557 ;;		Nothing
 41558 ;; This function is called by:
 41559 ;;		_motor_schedule_command
 41560 ;;		_motor_process_cue
 41561 ;; This function uses a non-reentrant model
 41562 ;;
 41563                           
 41564                           	psect	text170
 41565  0157A8                     __ptext170:
 41566                           	opt stack 0
 41567  0157A8                     _motor_items_in_cue:
 41568                           	opt stack 19
 41569                           
 41570                           ;motor.c: 121: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 41571                           
 41572                           ;incstack = 0
 41573  0157A8  0101               	movlb	1	; () banked
 41574  0157AA  5158               	movf	_motor_cue_read_index& (0+255),w,b
 41575  0157AC  0800               	sublw	0
 41576  0157AE  2557               	addwf	_motor_cue_write_index& (0+255),w,b
 41577  0157B0  0B07               	andlw	7
 41578  0157B2  0012               	return	
 41579  0157B4                     __end_of_motor_items_in_cue:
 41580                           	opt stack 0
 41581                           tosu	equ	0xFFF
 41582                           tosh	equ	0xFFE
 41583                           tosl	equ	0xFFD
 41584                           pclath	equ	0xFFA
 41585                           tblptru	equ	0xFF8
 41586                           tblptrh	equ	0xFF7
 41587                           tblptrl	equ	0xFF6
 41588                           tablat	equ	0xFF5
 41589                           prodh	equ	0xFF4
 41590                           prodl	equ	0xFF3
 41591                           intcon	equ	0xFF2
 41592                           indf0	equ	0xFEF
 41593                           postinc0	equ	0xFEE
 41594                           fsr0h	equ	0xFEA
 41595                           fsr0l	equ	0xFE9
 41596                           wreg	equ	0xFE8
 41597                           indf1	equ	0xFE7
 41598                           postinc1	equ	0xFE6
 41599                           postdec1	equ	0xFE5
 41600                           plusw1	equ	0xFE3
 41601                           fsr1h	equ	0xFE2
 41602                           fsr1l	equ	0xFE1
 41603                           indf2	equ	0xFDF
 41604                           postinc2	equ	0xFDE
 41605                           postdec2	equ	0xFDD
 41606                           plusw2	equ	0xFDB
 41607                           fsr2h	equ	0xFDA
 41608                           fsr2l	equ	0xFD9
 41609                           status	equ	0xFD8
 41610                           
 41611 ;; *************** function __motor_run *****************
 41612 ;; Defined at:
 41613 ;;		line 202 in file "motor.c"
 41614 ;; Parameters:    Size  Location     Type
 41615 ;;  direction       1    wreg     enum E6622
 41616 ;;  distance_in_    4   47[BANK0 ] unsigned long 
 41617 ;;  speed           2   51[BANK0 ] unsigned int 
 41618 ;; Auto vars:     Size  Location     Type
 41619 ;;  direction       1   57[BANK0 ] enum E6622
 41620 ;;  maximum_dist    4   60[BANK0 ] unsigned long 
 41621 ;;  maximum_dist    2   58[BANK0 ] unsigned int 
 41622 ;; Return value:  Size  Location     Type
 41623 ;;                  1    wreg      void 
 41624 ;; Registers used:
 41625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41626 ;; Tracked objects:
 41627 ;;		On entry : 0/0
 41628 ;;		On exit  : 0/0
 41629 ;;		Unchanged: 0/0
 41630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41631 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41632 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41633 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41634 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41635 ;;Total ram usage:       17 bytes
 41636 ;; Hardware stack levels used:    1
 41637 ;; Hardware stack levels required when called:   12
 41638 ;; This function calls:
 41639 ;;		_motor_calculate_position_in_degrees
 41640 ;;		_motor_steps_from_degrees
 41641 ;; This function is called by:
 41642 ;;		_motor_schedule_command
 41643 ;;		_motor_process_cue
 41644 ;; This function uses a non-reentrant model
 41645 ;;
 41646                           
 41647                           	psect	text171
 41648  00C5FC                     __ptext171:
 41649                           	opt stack 0
 41650  00C5FC                     __motor_run:
 41651                           	opt stack 17
 41652                           
 41653                           ; BSR set to: 1
 41654                           ;incstack = 0
 41655                           ;__motor_run@direction stored from wreg
 41656  00C5FC  0100               	movlb	0	; () banked
 41657  00C5FE  6F99               	movwf	__motor_run@direction& (0+255),b
 41658                           
 41659                           ;motor.c: 204: uint16_t maximum_distance_in_degrees;;motor.c: 205: uint32_t maximum_dist
      +                          ance_in_steps;;motor.c: 208: motor_direction = direction;
 41660  00C600  C099  F155         	movff	__motor_run@direction,_motor_direction
 41661                           
 41662                           ;motor.c: 211: if(distance_in_steps==0)
 41663  00C604  0100               	movlb	0	; () banked
 41664  00C606  518F               	movf	__motor_run@distance_in_steps& (0+255),w,b
 41665  00C608  1190               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 41666  00C60A  1191               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 41667  00C60C  1192               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 41668  00C60E  A4D8               	btfss	status,2,c
 41669  00C610  D00A               	goto	l2424
 41670                           
 41671                           ; BSR set to: 0
 41672                           ;motor.c: 212: {;motor.c: 214: motor_final_stepcount = 0xFF000000;
 41673  00C612  0E00               	movlw	0
 41674  00C614  0101               	movlb	1	; () banked
 41675  00C616  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 41676  00C618  0E00               	movlw	0
 41677  00C61A  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 41678  00C61C  0E00               	movlw	0
 41679  00C61E  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 41680  00C620  0EFF               	movlw	255
 41681  00C622  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 41682                           
 41683                           ;motor.c: 215: }
 41684  00C624  D008               	goto	l2425
 41685  00C626                     l2424:
 41686                           
 41687                           ; BSR set to: 0
 41688                           ;motor.c: 216: else;motor.c: 217: {;motor.c: 218: motor_final_stepcount = distance_in_st
      +                          eps;
 41689  00C626  C08F  F127         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 41690  00C62A  C090  F128         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 41691  00C62E  C091  F129         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 41692  00C632  C092  F12A         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 41693  00C636                     l2425:
 41694                           
 41695                           ;motor.c: 219: };motor.c: 222: if((motor_direction==MOTOR_DIRECTION_CCW) && config.use_c
      +                          cw_limit)
 41696                           
 41697                           ; BSR set to: 0
 41698  00C636  0101               	movlb	1	; () banked
 41699  00C638  2955               	incf	_motor_direction& (0+255),w,b
 41700  00C63A  A4D8               	btfss	status,2,c
 41701  00C63C  D061               	goto	l2429
 41702                           
 41703                           ; BSR set to: 1
 41704  00C63E  51BA               	movf	(_config+25)& (0+255),w,b
 41705  00C640  B4D8               	btfsc	status,2,c
 41706  00C642  D05E               	goto	l2429
 41707                           
 41708                           ; BSR set to: 1
 41709                           ;motor.c: 224: {;motor.c: 226: motor_calculate_position_in_degrees();
 41710  00C644  EC39  F090         	call	_motor_calculate_position_in_degrees	;wreg free
 41711                           
 41712                           ;motor.c: 229: if(os.current_position_in_degrees >= config.ccw_limit)
 41713  00C648  0101               	movlb	1	; () banked
 41714  00C64A  51BB               	movf	(_config+26)& (0+255),w,b
 41715  00C64C  5D7C               	subwf	(_os+11)& (0+255),w,b	;volatile
 41716  00C64E  51BC               	movf	(_config+27)& (0+255),w,b
 41717  00C650  597D               	subwfb	(_os+12)& (0+255),w,b	;volatile
 41718  00C652  A0D8               	btfss	status,0,c
 41719  00C654  D014               	goto	l2427
 41720                           
 41721                           ; BSR set to: 1
 41722                           ;motor.c: 230: {;motor.c: 231: maximum_distance_in_degrees = os.current_position_in_degr
      +                          ees - config.ccw_limit;
 41723  00C656  EE21  F0BB         	lfsr	2,_config+26
 41724  00C65A  CFDE F095          	movff	postinc2,??__motor_run
 41725  00C65E  CFDD F096          	movff	postdec2,??__motor_run+1
 41726  00C662  0100               	movlb	0	; () banked
 41727  00C664  1F95               	comf	??__motor_run& (0+255),f,b
 41728  00C666  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 41729  00C668  4B95               	infsnz	??__motor_run& (0+255),f,b
 41730  00C66A  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 41731  00C66C  0101               	movlb	1	; () banked
 41732  00C66E  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 41733  00C670  0100               	movlb	0	; () banked
 41734  00C672  2595               	addwf	??__motor_run& (0+255),w,b
 41735  00C674  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41736  00C676  0101               	movlb	1	; () banked
 41737  00C678  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 41738  00C67A  0100               	movlb	0	; () banked
 41739  00C67C  D017               	goto	L64
 41740  00C67E                     l2427:
 41741                           
 41742                           ;motor.c: 233: else;motor.c: 234: {;motor.c: 236: maximum_distance_in_degrees = 36000 + 
      +                          os.current_position_in_degrees - config.ccw_limit;
 41743                           
 41744                           ; BSR set to: 0
 41745  00C67E  EE21  F0BB         	lfsr	2,_config+26
 41746  00C682  CFDE F095          	movff	postinc2,??__motor_run
 41747  00C686  CFDD F096          	movff	postdec2,??__motor_run+1
 41748  00C68A  0100               	movlb	0	; () banked
 41749  00C68C  1F95               	comf	??__motor_run& (0+255),f,b
 41750  00C68E  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 41751  00C690  4B95               	infsnz	??__motor_run& (0+255),f,b
 41752  00C692  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 41753  00C694  0101               	movlb	1	; () banked
 41754  00C696  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 41755  00C698  0100               	movlb	0	; () banked
 41756  00C69A  2795               	addwf	??__motor_run& (0+255),f,b
 41757  00C69C  0101               	movlb	1	; () banked
 41758  00C69E  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 41759  00C6A0  0100               	movlb	0	; () banked
 41760  00C6A2  2396               	addwfc	(??__motor_run+1)& (0+255),f,b
 41761  00C6A4  0EA0               	movlw	160
 41762  00C6A6  2595               	addwf	??__motor_run& (0+255),w,b
 41763  00C6A8  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41764  00C6AA  0E8C               	movlw	140
 41765  00C6AC                     L64:
 41766  00C6AC  2196               	addwfc	(??__motor_run+1)& (0+255),w,b
 41767  00C6AE  6F9B               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 41768                           
 41769                           ; BSR set to: 0
 41770                           ;motor.c: 237: };motor.c: 239: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 41771                           
 41772                           ; BSR set to: 0
 41773  00C6B0  C09A  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 41774  00C6B4  C09B  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 41775  00C6B8  ECE7  F08E         	call	_motor_steps_from_degrees	;wreg free
 41776  00C6BC  C087  F09C         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 41777  00C6C0  C088  F09D         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 41778  00C6C4  C089  F09E         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 41779  00C6C8  C08A  F09F         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 41780                           
 41781                           ;motor.c: 241: if(maximum_distance_in_steps<motor_final_stepcount)
 41782  00C6CC  0101               	movlb	1	; () banked
 41783  00C6CE  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 41784  00C6D0  0100               	movlb	0	; () banked
 41785  00C6D2  5D9C               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 41786  00C6D4  0101               	movlb	1	; () banked
 41787  00C6D6  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 41788  00C6D8  0100               	movlb	0	; () banked
 41789  00C6DA  599D               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 41790  00C6DC  0101               	movlb	1	; () banked
 41791  00C6DE  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 41792  00C6E0  0100               	movlb	0	; () banked
 41793  00C6E2  599E               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 41794  00C6E4  0101               	movlb	1	; () banked
 41795  00C6E6  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 41796  00C6E8  0100               	movlb	0	; () banked
 41797  00C6EA  599F               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 41798  00C6EC  B0D8               	btfsc	status,0,c
 41799  00C6EE  D008               	goto	l2429
 41800                           
 41801                           ; BSR set to: 0
 41802                           ;motor.c: 242: {;motor.c: 243: motor_final_stepcount = maximum_distance_in_steps;
 41803  00C6F0  C09C  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 41804  00C6F4  C09D  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 41805  00C6F8  C09E  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 41806  00C6FC  C09F  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 41807  00C700                     l2429:
 41808                           
 41809                           ;motor.c: 244: };motor.c: 245: };motor.c: 248: if((motor_direction==MOTOR_DIRECTION_CW) 
      +                          && config.use_cw_limit)
 41810                           
 41811                           ; BSR set to: 0
 41812                           
 41813                           ; BSR set to: 0
 41814  00C700  0101               	movlb	1	; () banked
 41815  00C702  0555               	decf	_motor_direction& (0+255),w,b
 41816  00C704  A4D8               	btfss	status,2,c
 41817  00C706  D061               	goto	l2433
 41818                           
 41819                           ; BSR set to: 1
 41820  00C708  51B7               	movf	(_config+22)& (0+255),w,b
 41821  00C70A  B4D8               	btfsc	status,2,c
 41822  00C70C  D05E               	goto	l2433
 41823                           
 41824                           ; BSR set to: 1
 41825                           ;motor.c: 250: {;motor.c: 252: motor_calculate_position_in_degrees();
 41826  00C70E  EC39  F090         	call	_motor_calculate_position_in_degrees	;wreg free
 41827                           
 41828                           ;motor.c: 255: if(config.cw_limit >= os.current_position_in_degrees)
 41829  00C712  0101               	movlb	1	; () banked
 41830  00C714  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 41831  00C716  5DB8               	subwf	(_config+23)& (0+255),w,b
 41832  00C718  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 41833  00C71A  59B9               	subwfb	(_config+24)& (0+255),w,b
 41834  00C71C  A0D8               	btfss	status,0,c
 41835  00C71E  D014               	goto	l2431
 41836                           
 41837                           ; BSR set to: 1
 41838                           ;motor.c: 256: {;motor.c: 257: maximum_distance_in_degrees = config.cw_limit - os.curren
      +                          t_position_in_degrees;
 41839  00C720  EE21  F07C         	lfsr	2,_os+11	;volatile
 41840  00C724  CFDE F095          	movff	postinc2,??__motor_run
 41841  00C728  CFDD F096          	movff	postdec2,??__motor_run+1
 41842  00C72C  0100               	movlb	0	; () banked
 41843  00C72E  1F95               	comf	??__motor_run& (0+255),f,b
 41844  00C730  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 41845  00C732  4B95               	infsnz	??__motor_run& (0+255),f,b
 41846  00C734  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 41847  00C736  0101               	movlb	1	; () banked
 41848  00C738  51B8               	movf	(_config+23)& (0+255),w,b
 41849  00C73A  0100               	movlb	0	; () banked
 41850  00C73C  2595               	addwf	??__motor_run& (0+255),w,b
 41851  00C73E  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41852  00C740  0101               	movlb	1	; () banked
 41853  00C742  51B9               	movf	(_config+24)& (0+255),w,b
 41854  00C744  0100               	movlb	0	; () banked
 41855  00C746  D017               	goto	L65
 41856  00C748                     l2431:
 41857                           
 41858                           ;motor.c: 259: else;motor.c: 260: {;motor.c: 262: maximum_distance_in_degrees = 36000 + 
      +                          config.cw_limit - os.current_position_in_degrees;
 41859                           
 41860                           ; BSR set to: 0
 41861  00C748  EE21  F07C         	lfsr	2,_os+11	;volatile
 41862  00C74C  CFDE F095          	movff	postinc2,??__motor_run
 41863  00C750  CFDD F096          	movff	postdec2,??__motor_run+1
 41864  00C754  0100               	movlb	0	; () banked
 41865  00C756  1F95               	comf	??__motor_run& (0+255),f,b
 41866  00C758  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 41867  00C75A  4B95               	infsnz	??__motor_run& (0+255),f,b
 41868  00C75C  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 41869  00C75E  0101               	movlb	1	; () banked
 41870  00C760  51B8               	movf	(_config+23)& (0+255),w,b
 41871  00C762  0100               	movlb	0	; () banked
 41872  00C764  2795               	addwf	??__motor_run& (0+255),f,b
 41873  00C766  0101               	movlb	1	; () banked
 41874  00C768  51B9               	movf	(_config+24)& (0+255),w,b
 41875  00C76A  0100               	movlb	0	; () banked
 41876  00C76C  2396               	addwfc	(??__motor_run+1)& (0+255),f,b
 41877  00C76E  0EA0               	movlw	160
 41878  00C770  2595               	addwf	??__motor_run& (0+255),w,b
 41879  00C772  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41880  00C774  0E8C               	movlw	140
 41881  00C776                     L65:
 41882  00C776  2196               	addwfc	(??__motor_run+1)& (0+255),w,b
 41883  00C778  6F9B               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 41884                           
 41885                           ; BSR set to: 0
 41886                           ;motor.c: 263: };motor.c: 265: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 41887                           
 41888                           ; BSR set to: 0
 41889  00C77A  C09A  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 41890  00C77E  C09B  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 41891  00C782  ECE7  F08E         	call	_motor_steps_from_degrees	;wreg free
 41892  00C786  C087  F09C         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 41893  00C78A  C088  F09D         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 41894  00C78E  C089  F09E         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 41895  00C792  C08A  F09F         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 41896                           
 41897                           ;motor.c: 267: if(maximum_distance_in_steps<motor_final_stepcount)
 41898  00C796  0101               	movlb	1	; () banked
 41899  00C798  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 41900  00C79A  0100               	movlb	0	; () banked
 41901  00C79C  5D9C               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 41902  00C79E  0101               	movlb	1	; () banked
 41903  00C7A0  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 41904  00C7A2  0100               	movlb	0	; () banked
 41905  00C7A4  599D               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 41906  00C7A6  0101               	movlb	1	; () banked
 41907  00C7A8  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 41908  00C7AA  0100               	movlb	0	; () banked
 41909  00C7AC  599E               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 41910  00C7AE  0101               	movlb	1	; () banked
 41911  00C7B0  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 41912  00C7B2  0100               	movlb	0	; () banked
 41913  00C7B4  599F               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 41914  00C7B6  B0D8               	btfsc	status,0,c
 41915  00C7B8  D008               	goto	l2433
 41916                           
 41917                           ; BSR set to: 0
 41918                           ;motor.c: 268: {;motor.c: 269: motor_final_stepcount = maximum_distance_in_steps;
 41919  00C7BA  C09C  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 41920  00C7BE  C09D  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 41921  00C7C2  C09E  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 41922  00C7C6  C09F  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 41923  00C7CA                     l2433:
 41924                           
 41925                           ;motor.c: 270: };motor.c: 271: };motor.c: 275: if(motor_final_stepcount==0)
 41926                           
 41927                           ; BSR set to: 0
 41928                           
 41929                           ; BSR set to: 0
 41930  00C7CA  0101               	movlb	1	; () banked
 41931  00C7CC  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 41932  00C7CE  1128               	iorwf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 41933  00C7D0  1129               	iorwf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 41934  00C7D2  112A               	iorwf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 41935  00C7D4  B4D8               	btfsc	status,2,c
 41936  00C7D6  0012               	return	
 41937                           
 41938                           ; BSR set to: 1
 41939                           ;motor.c: 278: };motor.c: 281: if(speed==0)
 41940                           
 41941                           ; BSR set to: 1
 41942                           
 41943                           ; BSR set to: 1
 41944                           ;motor.c: 276: {;motor.c: 277: return;
 41945  00C7D8  0100               	movlb	0	; () banked
 41946  00C7DA  5193               	movf	__motor_run@speed& (0+255),w,b
 41947  00C7DC  1194               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 41948  00C7DE  A4D8               	btfss	status,2,c
 41949  00C7E0  D005               	goto	l2436
 41950                           
 41951                           ; BSR set to: 0
 41952                           ;motor.c: 282: {;motor.c: 283: motor_maximum_speed = config.maximum_speed;
 41953  00C7E2  C1AC  F13F         	movff	_config+11,_motor_maximum_speed
 41954  00C7E6  C1AD  F140         	movff	_config+12,_motor_maximum_speed+1
 41955                           
 41956                           ;motor.c: 284: }
 41957  00C7EA  D004               	goto	l2437
 41958  00C7EC                     l2436:
 41959                           
 41960                           ; BSR set to: 0
 41961                           ;motor.c: 285: else;motor.c: 286: {;motor.c: 287: motor_maximum_speed = speed;
 41962  00C7EC  C093  F13F         	movff	__motor_run@speed,_motor_maximum_speed
 41963  00C7F0  C094  F140         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 41964  00C7F4                     l2437:
 41965                           
 41966                           ; BSR set to: 0
 41967                           ;motor.c: 288: };motor.c: 291: motor_current_speed = 0;
 41968                           
 41969                           ; BSR set to: 0
 41970  00C7F4  0E00               	movlw	0
 41971  00C7F6  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 41972  00C7F8  0E00               	movlw	0
 41973  00C7FA  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 41974                           
 41975                           ;motor.c: 292: motor_current_stepcount = 0;
 41976  00C7FC  0E00               	movlw	0
 41977  00C7FE  6E58               	movwf	_motor_current_stepcount,c	;volatile
 41978  00C800  0E00               	movlw	0
 41979  00C802  6E59               	movwf	_motor_current_stepcount+1,c	;volatile
 41980  00C804  0E00               	movlw	0
 41981  00C806  6E5A               	movwf	_motor_current_stepcount+2,c	;volatile
 41982  00C808  0E00               	movlw	0
 41983  00C80A  6E5B               	movwf	_motor_current_stepcount+3,c	;volatile
 41984                           
 41985                           ; BSR set to: 0
 41986                           ;motor.c: 294: motor_next_speed_check = motor_steps_lookup[1];
 41987  00C80C  0E63               	movlw	low (_motor_steps_lookup+2)
 41988  00C80E  6EF6               	movwf	tblptrl,c
 41989  00C810  0E94               	movlw	high (_motor_steps_lookup+2)
 41990  00C812  6EF7               	movwf	tblptrh,c
 41991  00C814                     	if	0	;tblptru may be non-zero
 41992  00C814                     	endif
 41993  00C814                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41994  00C814  0E00               	movlw	low (__mediumconst shr (0+16))
 41995  00C816  6EF8               	movwf	tblptru,c
 41996  00C818                     	endif
 41997  00C818  0009               	tblrd		*+
 41998  00C81A  CFF5 F095          	movff	tablat,??__motor_run
 41999  00C81E  0009               	tblrd		*+
 42000  00C820  CFF5 F096          	movff	tablat,??__motor_run+1
 42001  00C824  C095  F226         	movff	??__motor_run,_motor_next_speed_check	;volatile
 42002  00C828  C096  F227         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 42003  00C82C  0102               	movlb	2	; () banked
 42004  00C82E  6B28               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 42005  00C830  6B29               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 42006                           
 42007                           ; BSR set to: 2
 42008                           ;motor.c: 297: CCP1CONbits.CCP1M = 0b0000;
 42009  00C832  90BA               	bcf	4026,0,c	;volatile
 42010  00C834  92BA               	bcf	4026,1,c	;volatile
 42011  00C836  94BA               	bcf	4026,2,c	;volatile
 42012  00C838  96BA               	bcf	4026,3,c	;volatile
 42013                           
 42014                           ; BSR set to: 2
 42015                           ;motor.c: 300: LATBbits.LB0 = 0;
 42016  00C83A  908A               	bcf	3978,0,c	;volatile
 42017                           
 42018                           ; BSR set to: 2
 42019                           ;motor.c: 301: if(direction==MOTOR_DIRECTION_CCW)
 42020  00C83C  0100               	movlb	0	; () banked
 42021  00C83E  2999               	incf	__motor_run@direction& (0+255),w,b
 42022  00C840  A4D8               	btfss	status,2,c
 42023  00C842  D005               	goto	l2438
 42024                           
 42025                           ; BSR set to: 0
 42026                           ;motor.c: 302: {;motor.c: 303: if(config.inverse_direction)
 42027  00C844  0101               	movlb	1	; () banked
 42028  00C846  51A5               	movf	(_config+4)& (0+255),w,b
 42029  00C848  B4D8               	btfsc	status,2,c
 42030  00C84A  D005               	goto	u11670
 42031  00C84C  D006               	goto	l2442
 42032  00C84E                     l2438:
 42033                           
 42034                           ;motor.c: 308: else;motor.c: 309: {;motor.c: 310: if(config.inverse_direction)
 42035                           
 42036                           ; BSR set to: 1
 42037  00C84E  0101               	movlb	1	; () banked
 42038  00C850  51A5               	movf	(_config+4)& (0+255),w,b
 42039  00C852  B4D8               	btfsc	status,2,c
 42040  00C854  D002               	goto	l2442
 42041  00C856                     u11670:
 42042                           
 42043                           ; BSR set to: 1
 42044                           ;motor.c: 311: LATBbits.LB2 = 0;
 42045  00C856  948A               	bcf	3978,2,c	;volatile
 42046  00C858  D001               	goto	l2443
 42047  00C85A                     l2442:
 42048                           
 42049                           ; BSR set to: 1
 42050                           ;motor.c: 312: else;motor.c: 313: LATBbits.LB2 = 1;
 42051  00C85A  848A               	bsf	3978,2,c	;volatile
 42052  00C85C                     l2443:
 42053                           
 42054                           ; BSR set to: 1
 42055                           ;motor.c: 314: };motor.c: 317: LATBbits.LB1 = 1;
 42056                           
 42057                           ; BSR set to: 1
 42058  00C85C  828A               	bsf	3978,1,c	;volatile
 42059                           
 42060                           ; BSR set to: 1
 42061                           ;motor.c: 320: ++motor_current_stepcount;
 42062  00C85E  0E01               	movlw	1
 42063  00C860  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 42064  00C862  0E00               	movlw	0
 42065  00C864  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 42066  00C866  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 42067  00C868  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 42068                           
 42069                           ;motor.c: 323: os.current_position_in_steps += motor_direction;
 42070  00C86A  5155               	movf	_motor_direction& (0+255),w,b
 42071  00C86C  0100               	movlb	0	; () banked
 42072  00C86E  6F95               	movwf	??__motor_run& (0+255),b
 42073  00C870  0E00               	movlw	0
 42074  00C872  BF95               	btfsc	??__motor_run& (0+255),7,b
 42075  00C874  0EFF               	movlw	255
 42076  00C876  6F96               	movwf	(??__motor_run+1)& (0+255),b
 42077  00C878  6F97               	movwf	(??__motor_run+2)& (0+255),b
 42078  00C87A  6F98               	movwf	(??__motor_run+3)& (0+255),b
 42079  00C87C  5195               	movf	??__motor_run& (0+255),w,b
 42080  00C87E  0101               	movlb	1	; () banked
 42081  00C880  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 42082  00C882  0100               	movlb	0	; () banked
 42083  00C884  5196               	movf	(??__motor_run+1)& (0+255),w,b
 42084  00C886  0101               	movlb	1	; () banked
 42085  00C888  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 42086  00C88A  0100               	movlb	0	; () banked
 42087  00C88C  5197               	movf	(??__motor_run+2)& (0+255),w,b
 42088  00C88E  0101               	movlb	1	; () banked
 42089  00C890  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 42090  00C892  0100               	movlb	0	; () banked
 42091  00C894  5198               	movf	(??__motor_run+3)& (0+255),w,b
 42092  00C896  0101               	movlb	1	; () banked
 42093  00C898  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 42094                           
 42095                           ;motor.c: 324: if(os.current_position_in_steps==config.full_circle_in_steps)
 42096  00C89A  51A1               	movf	_config& (0+255),w,b
 42097  00C89C  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 42098  00C89E  E112               	bnz	l13061
 42099  00C8A0  51A2               	movf	(_config+1)& (0+255),w,b
 42100  00C8A2  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 42101  00C8A4  E10F               	bnz	l13061
 42102  00C8A6  51A3               	movf	(_config+2)& (0+255),w,b
 42103  00C8A8  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 42104  00C8AA  E10C               	bnz	l13061
 42105  00C8AC  51A4               	movf	(_config+3)& (0+255),w,b
 42106  00C8AE  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 42107  00C8B0  A4D8               	btfss	status,2,c
 42108  00C8B2  D008               	goto	l2444
 42109                           
 42110                           ; BSR set to: 1
 42111                           ;motor.c: 325: os.current_position_in_steps = 0;
 42112  00C8B4  0E00               	movlw	0
 42113  00C8B6  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42114  00C8B8  0E00               	movlw	0
 42115  00C8BA  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42116  00C8BC  0E00               	movlw	0
 42117  00C8BE  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42118  00C8C0  0E00               	movlw	0
 42119  00C8C2  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42120  00C8C4                     l2444:
 42121  00C8C4                     l13061:
 42122                           
 42123                           ; BSR set to: 1
 42124                           ;motor.c: 326: if(os.current_position_in_steps==0xFFFFFFFF)
 42125  00C8C4  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 42126  00C8C6  E113               	bnz	l13065
 42127  00C8C8  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 42128  00C8CA  E111               	bnz	l13065
 42129  00C8CC  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 42130  00C8CE  E10F               	bnz	l13065
 42131  00C8D0  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 42132  00C8D2  A4D8               	btfss	status,2,c
 42133  00C8D4  D00C               	goto	l2445
 42134                           
 42135                           ; BSR set to: 1
 42136                           ;motor.c: 327: os.current_position_in_steps = (config.full_circle_in_steps-1);
 42137  00C8D6  0EFF               	movlw	255
 42138  00C8D8  25A1               	addwf	_config& (0+255),w,b
 42139  00C8DA  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42140  00C8DC  0EFF               	movlw	255
 42141  00C8DE  21A2               	addwfc	(_config+1)& (0+255),w,b
 42142  00C8E0  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42143  00C8E2  0EFF               	movlw	255
 42144  00C8E4  21A3               	addwfc	(_config+2)& (0+255),w,b
 42145  00C8E6  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42146  00C8E8  0EFF               	movlw	255
 42147  00C8EA  21A4               	addwfc	(_config+3)& (0+255),w,b
 42148  00C8EC  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42149  00C8EE                     l2445:
 42150  00C8EE                     l13065:
 42151                           
 42152                           ; BSR set to: 1
 42153                           ;motor.c: 330: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42154  00C8EE  0E55               	movlw	85
 42155  00C8F0  6EA7               	movwf	4007,c	;volsfr
 42156                           
 42157                           ; BSR set to: 1
 42158  00C8F2  0EAA               	movlw	170
 42159  00C8F4  6EA7               	movwf	4007,c	;volsfr
 42160                           
 42161                           ; BSR set to: 1
 42162  00C8F6  010E               	movlb	14	; () banked
 42163  00C8F8  91BF               	bcf	191,0,b	;volatile
 42164                           
 42165                           ; BSR set to: 14
 42166                           ;motor.c: 331: RPOR4 = 0;
 42167  00C8FA  0E00               	movlw	0
 42168  00C8FC  6FC4               	movwf	196,b	;volatile
 42169                           
 42170                           ; BSR set to: 14
 42171                           ;motor.c: 332: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42172  00C8FE  0E55               	movlw	85
 42173  00C900  6EA7               	movwf	4007,c	;volsfr
 42174                           
 42175                           ; BSR set to: 14
 42176  00C902  0EAA               	movlw	170
 42177  00C904  6EA7               	movwf	4007,c	;volsfr
 42178                           
 42179                           ; BSR set to: 14
 42180  00C906  81BF               	bsf	191,0,b	;volatile
 42181                           
 42182                           ; BSR set to: 14
 42183                           ;motor.c: 335: motor_mode = MOTOR_MODE_MANUAL;
 42184  00C908  0E00               	movlw	0
 42185  00C90A  0101               	movlb	1	; () banked
 42186  00C90C  6F56               	movwf	_motor_mode& (0+255),b
 42187                           
 42188                           ; BSR set to: 1
 42189                           ;motor.c: 339: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 42190  00C90E  0EFD               	movlw	low _motor_prescaler_lookup
 42191  00C910  0100               	movlb	0	; () banked
 42192  00C912  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42193  00C914  6EF6               	movwf	tblptrl,c
 42194  00C916  0E9B               	movlw	high _motor_prescaler_lookup
 42195  00C918  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42196  00C91A  6EF7               	movwf	tblptrh,c
 42197  00C91C                     	if	1	;There are 3 active tblptr bytes
 42198  00C91C  6AF8               	clrf	tblptru,c
 42199  00C91E  0E00               	movlw	low (__mediumconst shr (0+16))
 42200  00C920  22F8               	addwfc	tblptru,f,c
 42201  00C922                     	endif
 42202  00C922  0008               	tblrd		*
 42203  00C924  CFF5 F095          	movff	tablat,??__motor_run
 42204  00C928  50CA               	movf	4042,w,c	;volatile
 42205  00C92A  1995               	xorwf	??__motor_run& (0+255),w,b
 42206  00C92C  0BFC               	andlw	-4
 42207  00C92E  1995               	xorwf	??__motor_run& (0+255),w,b
 42208  00C930  6ECA               	movwf	4042,c	;volatile
 42209                           
 42210                           ; BSR set to: 0
 42211                           ;motor.c: 341: PR2 = motor_period_lookup[motor_current_speed];
 42212  00C932  0E16               	movlw	low _motor_period_lookup
 42213  00C934  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42214  00C936  6EF6               	movwf	tblptrl,c
 42215  00C938  0E9A               	movlw	high _motor_period_lookup
 42216  00C93A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42217  00C93C  6EF7               	movwf	tblptrh,c
 42218  00C93E                     	if	1	;There are 3 active tblptr bytes
 42219  00C93E  6AF8               	clrf	tblptru,c
 42220  00C940  0E00               	movlw	low (__mediumconst shr (0+16))
 42221  00C942  22F8               	addwfc	tblptru,f,c
 42222  00C944                     	endif
 42223  00C944  0008               	tblrd		*
 42224  00C946  CFF5 FFCB          	movff	tablat,4043	;volatile
 42225                           
 42226                           ; BSR set to: 0
 42227                           ;motor.c: 343: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 42228  00C94A  0E2F               	movlw	low _motor_postscaler_lookup
 42229  00C94C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42230  00C94E  6EF6               	movwf	tblptrl,c
 42231  00C950  0E98               	movlw	high _motor_postscaler_lookup
 42232  00C952  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42233  00C954  6EF7               	movwf	tblptrh,c
 42234  00C956                     	if	1	;There are 3 active tblptr bytes
 42235  00C956  6AF8               	clrf	tblptru,c
 42236  00C958  0E00               	movlw	low (__mediumconst shr (0+16))
 42237  00C95A  22F8               	addwfc	tblptru,f,c
 42238  00C95C                     	endif
 42239  00C95C  0008               	tblrd		*
 42240  00C95E  CFF5 F095          	movff	tablat,??__motor_run
 42241  00C962  4795               	rlncf	??__motor_run& (0+255),f,b
 42242  00C964  4795               	rlncf	??__motor_run& (0+255),f,b
 42243  00C966  4795               	rlncf	??__motor_run& (0+255),f,b
 42244  00C968  50CA               	movf	4042,w,c	;volatile
 42245  00C96A  1995               	xorwf	??__motor_run& (0+255),w,b
 42246  00C96C  0B87               	andlw	-121
 42247  00C96E  1995               	xorwf	??__motor_run& (0+255),w,b
 42248  00C970  6ECA               	movwf	4042,c	;volatile
 42249                           
 42250                           ; BSR set to: 0
 42251                           ;motor.c: 345: CCPR1L = PR2>>1;
 42252  00C972  90D8               	bcf	status,0,c
 42253  00C974  30CB               	rrcf	4043,w,c	;volatile
 42254  00C976  6EBB               	movwf	4027,c	;volatile
 42255                           
 42256                           ; BSR set to: 0
 42257                           ;motor.c: 348: PIR1bits.TMR2IF = 0;
 42258  00C978  929E               	bcf	3998,1,c	;volatile
 42259                           
 42260                           ; BSR set to: 0
 42261                           ;motor.c: 349: PIE1bits.TMR2IE = 1;
 42262  00C97A  829D               	bsf	3997,1,c	;volatile
 42263                           
 42264                           ; BSR set to: 0
 42265                           ;motor.c: 352: TMR2 = 0;
 42266  00C97C  0E00               	movlw	0
 42267  00C97E  6ECC               	movwf	4044,c	;volatile
 42268                           
 42269                           ; BSR set to: 0
 42270                           ;motor.c: 353: T2CONbits.TMR2ON = 1;
 42271  00C980  84CA               	bsf	4042,2,c	;volatile
 42272                           
 42273                           ; BSR set to: 0
 42274                           ;motor.c: 356: os.busy = 1;
 42275  00C982  0E01               	movlw	1
 42276  00C984  0101               	movlb	1	; () banked
 42277  00C986  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 42278                           
 42279                           ; BSR set to: 1
 42280  00C988  0012               	return		;funcret
 42281  00C98A                     __end_of__motor_run:
 42282                           	opt stack 0
 42283                           tosu	equ	0xFFF
 42284                           tosh	equ	0xFFE
 42285                           tosl	equ	0xFFD
 42286                           pclath	equ	0xFFA
 42287                           tblptru	equ	0xFF8
 42288                           tblptrh	equ	0xFF7
 42289                           tblptrl	equ	0xFF6
 42290                           tablat	equ	0xFF5
 42291                           prodh	equ	0xFF4
 42292                           prodl	equ	0xFF3
 42293                           intcon	equ	0xFF2
 42294                           indf0	equ	0xFEF
 42295                           postinc0	equ	0xFEE
 42296                           fsr0h	equ	0xFEA
 42297                           fsr0l	equ	0xFE9
 42298                           wreg	equ	0xFE8
 42299                           indf1	equ	0xFE7
 42300                           postinc1	equ	0xFE6
 42301                           postdec1	equ	0xFE5
 42302                           plusw1	equ	0xFE3
 42303                           fsr1h	equ	0xFE2
 42304                           fsr1l	equ	0xFE1
 42305                           indf2	equ	0xFDF
 42306                           postinc2	equ	0xFDE
 42307                           postdec2	equ	0xFDD
 42308                           plusw2	equ	0xFDB
 42309                           fsr2h	equ	0xFDA
 42310                           fsr2l	equ	0xFD9
 42311                           status	equ	0xFD8
 42312                           
 42313 ;; *************** function _motor_steps_from_degrees *****************
 42314 ;; Defined at:
 42315 ;;		line 32 in file "motor.c"
 42316 ;; Parameters:    Size  Location     Type
 42317 ;;  degrees         2   39[BANK0 ] unsigned int 
 42318 ;; Auto vars:     Size  Location     Type
 42319 ;;  steps           4   43[BANK0 ] float 
 42320 ;; Return value:  Size  Location     Type
 42321 ;;                  4   39[BANK0 ] unsigned long 
 42322 ;; Registers used:
 42323 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 42324 ;; Tracked objects:
 42325 ;;		On entry : 0/0
 42326 ;;		On exit  : 0/0
 42327 ;;		Unchanged: 0/0
 42328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42330 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42332 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42333 ;;Total ram usage:        8 bytes
 42334 ;; Hardware stack levels used:    1
 42335 ;; Hardware stack levels required when called:   11
 42336 ;; This function calls:
 42337 ;;		___fldiv
 42338 ;;		___flmul
 42339 ;;		___fltol
 42340 ;;		___xxtofl
 42341 ;; This function is called by:
 42342 ;;		_motor_nonzero_steps_from_degrees
 42343 ;;		__motor_run
 42344 ;; This function uses a non-reentrant model
 42345 ;;
 42346                           
 42347                           	psect	text172
 42348  011DCE                     __ptext172:
 42349                           	opt stack 0
 42350  011DCE                     _motor_steps_from_degrees:
 42351                           	opt stack 17
 42352                           
 42353                           ;motor.c: 34: float steps;;motor.c: 37: if(degrees==0)
 42354                           
 42355                           ; BSR set to: 1
 42356                           ;incstack = 0
 42357  011DCE  0100               	movlb	0	; () banked
 42358  011DD0  5187               	movf	motor_steps_from_degrees@degrees& (0+255),w,b
 42359  011DD2  1188               	iorwf	(motor_steps_from_degrees@degrees+1)& (0+255),w,b
 42360  011DD4  A4D8               	btfss	status,2,c
 42361  011DD6  D009               	goto	l2378
 42362                           
 42363                           ; BSR set to: 0
 42364                           ;motor.c: 38: {;motor.c: 39: return 0;
 42365  011DD8  0E00               	movlw	0
 42366  011DDA  6F87               	movwf	?_motor_steps_from_degrees& (0+255),b
 42367  011DDC  0E00               	movlw	0
 42368  011DDE  6F88               	movwf	(?_motor_steps_from_degrees+1)& (0+255),b
 42369  011DE0  0E00               	movlw	0
 42370  011DE2  6F89               	movwf	(?_motor_steps_from_degrees+2)& (0+255),b
 42371  011DE4  0E00               	movlw	0
 42372  011DE6  6F8A               	movwf	(?_motor_steps_from_degrees+3)& (0+255),b
 42373                           
 42374                           ; BSR set to: 0
 42375  011DE8  0012               	return	
 42376  011DEA                     l2378:
 42377                           
 42378                           ; BSR set to: 0
 42379                           ;motor.c: 40: };motor.c: 42: steps = (float) degrees;
 42380                           
 42381                           ; BSR set to: 0
 42382  011DEA  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 42383  011DEE  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 42384  011DF2  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 42385  011DF4  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 42386  011DF6  0E00               	movlw	0
 42387  011DF8  EC5D  F081         	call	___xxtofl
 42388  011DFC  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 42389  011E00  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 42390  011E04  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 42391  011E08  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 42392                           
 42393                           ;motor.c: 43: steps *= config.full_circle_in_steps;
 42394  011E0C  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 42395  011E10  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 42396  011E14  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 42397  011E18  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 42398  011E1C  C1A1  F060         	movff	_config,___xxtofl@val
 42399  011E20  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 42400  011E24  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 42401  011E28  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 42402  011E2C  0E00               	movlw	0
 42403  011E2E  EC5D  F081         	call	___xxtofl
 42404  011E32  C060  F072         	movff	?___xxtofl,___flmul@a
 42405  011E36  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 42406  011E3A  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 42407  011E3E  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 42408  011E42  EC79  F066         	call	___flmul	;wreg free
 42409  011E46  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 42410  011E4A  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 42411  011E4E  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 42412  011E52  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 42413                           
 42414                           ;motor.c: 44: steps /= 36000;
 42415  011E56  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 42416  011E5A  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 42417  011E5E  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 42418  011E62  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 42419  011E66  0E00               	movlw	0
 42420  011E68  0100               	movlb	0	; () banked
 42421  011E6A  6F72               	movwf	___fldiv@a& (0+255),b
 42422  011E6C  0EA0               	movlw	160
 42423  011E6E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 42424  011E70  0E0C               	movlw	12
 42425  011E72  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 42426  011E74  0E47               	movlw	71
 42427  011E76  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 42428  011E78  EC27  F06E         	call	___fldiv	;wreg free
 42429  011E7C  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 42430  011E80  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 42431  011E84  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 42432  011E88  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 42433                           
 42434                           ;motor.c: 46: return (uint32_t) steps;
 42435  011E8C  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 42436  011E90  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 42437  011E94  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 42438  011E98  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 42439  011E9C  ECA8  F090         	call	___fltol	;wreg free
 42440  011EA0  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 42441  011EA4  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 42442  011EA8  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 42443  011EAC  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 42444  011EB0  0012               	return	
 42445  011EB2                     __end_of_motor_steps_from_degrees:
 42446                           	opt stack 0
 42447                           tosu	equ	0xFFF
 42448                           tosh	equ	0xFFE
 42449                           tosl	equ	0xFFD
 42450                           pclath	equ	0xFFA
 42451                           tblptru	equ	0xFF8
 42452                           tblptrh	equ	0xFF7
 42453                           tblptrl	equ	0xFF6
 42454                           tablat	equ	0xFF5
 42455                           prodh	equ	0xFF4
 42456                           prodl	equ	0xFF3
 42457                           intcon	equ	0xFF2
 42458                           indf0	equ	0xFEF
 42459                           postinc0	equ	0xFEE
 42460                           fsr0h	equ	0xFEA
 42461                           fsr0l	equ	0xFE9
 42462                           wreg	equ	0xFE8
 42463                           indf1	equ	0xFE7
 42464                           postinc1	equ	0xFE6
 42465                           postdec1	equ	0xFE5
 42466                           plusw1	equ	0xFE3
 42467                           fsr1h	equ	0xFE2
 42468                           fsr1l	equ	0xFE1
 42469                           indf2	equ	0xFDF
 42470                           postinc2	equ	0xFDE
 42471                           postdec2	equ	0xFDD
 42472                           plusw2	equ	0xFDB
 42473                           fsr2h	equ	0xFDA
 42474                           fsr2l	equ	0xFD9
 42475                           status	equ	0xFD8
 42476                           
 42477 ;; *************** function _motor_calculate_position_in_degrees *****************
 42478 ;; Defined at:
 42479 ;;		line 59 in file "motor.c"
 42480 ;; Parameters:    Size  Location     Type
 42481 ;;		None
 42482 ;; Auto vars:     Size  Location     Type
 42483 ;;  tmp             4   39[BANK0 ] float 
 42484 ;; Return value:  Size  Location     Type
 42485 ;;                  1    wreg      void 
 42486 ;; Registers used:
 42487 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 42488 ;; Tracked objects:
 42489 ;;		On entry : 0/0
 42490 ;;		On exit  : 0/0
 42491 ;;		Unchanged: 0/0
 42492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42494 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42496 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42497 ;;Total ram usage:        4 bytes
 42498 ;; Hardware stack levels used:    1
 42499 ;; Hardware stack levels required when called:   11
 42500 ;; This function calls:
 42501 ;;		___fldiv
 42502 ;;		___flmul
 42503 ;;		___fltol
 42504 ;;		___xxtofl
 42505 ;; This function is called by:
 42506 ;;		_main
 42507 ;;		_system_init
 42508 ;;		__motor_run
 42509 ;; This function uses a non-reentrant model
 42510 ;;
 42511                           
 42512                           	psect	text173
 42513  012072                     __ptext173:
 42514                           	opt stack 0
 42515  012072                     _motor_calculate_position_in_degrees:
 42516                           	opt stack 18
 42517                           
 42518                           ;motor.c: 61: float tmp;;motor.c: 63: tmp = (float) os.current_position_in_steps;
 42519                           
 42520                           ;incstack = 0
 42521  012072  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 42522  012076  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 42523  01207A  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 42524  01207E  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 42525  012082  0E00               	movlw	0
 42526  012084  EC5D  F081         	call	___xxtofl
 42527  012088  C060  F087         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
 42528  01208C  C061  F088         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
 42529  012090  C062  F089         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
 42530  012094  C063  F08A         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
 42531                           
 42532                           ;motor.c: 64: tmp *= 36000;
 42533  012098  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
 42534  01209C  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
 42535  0120A0  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
 42536  0120A4  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
 42537  0120A8  0E00               	movlw	0
 42538  0120AA  0100               	movlb	0	; () banked
 42539  0120AC  6F72               	movwf	___flmul@a& (0+255),b
 42540  0120AE  0EA0               	movlw	160
 42541  0120B0  6F73               	movwf	(___flmul@a+1)& (0+255),b
 42542  0120B2  0E0C               	movlw	12
 42543  0120B4  6F74               	movwf	(___flmul@a+2)& (0+255),b
 42544  0120B6  0E47               	movlw	71
 42545  0120B8  6F75               	movwf	(___flmul@a+3)& (0+255),b
 42546  0120BA  EC79  F066         	call	___flmul	;wreg free
 42547  0120BE  C06E  F087         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
 42548  0120C2  C06F  F088         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
 42549  0120C6  C070  F089         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
 42550  0120CA  C071  F08A         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
 42551                           
 42552                           ;motor.c: 65: tmp /= config.full_circle_in_steps;
 42553  0120CE  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
 42554  0120D2  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
 42555  0120D6  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
 42556  0120DA  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
 42557  0120DE  C1A1  F060         	movff	_config,___xxtofl@val
 42558  0120E2  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 42559  0120E6  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 42560  0120EA  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 42561  0120EE  0E00               	movlw	0
 42562  0120F0  EC5D  F081         	call	___xxtofl
 42563  0120F4  C060  F072         	movff	?___xxtofl,___fldiv@a
 42564  0120F8  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 42565  0120FC  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 42566  012100  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 42567  012104  EC27  F06E         	call	___fldiv	;wreg free
 42568  012108  C06E  F087         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
 42569  01210C  C06F  F088         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
 42570  012110  C070  F089         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
 42571  012114  C071  F08A         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
 42572                           
 42573                           ;motor.c: 67: os.current_position_in_degrees = (uint16_t) tmp;
 42574  012118  C087  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
 42575  01211C  C088  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
 42576  012120  C089  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
 42577  012124  C08A  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
 42578  012128  ECA8  F090         	call	___fltol	;wreg free
 42579  01212C  C060  F17C         	movff	?___fltol,_os+11	;volatile
 42580  012130  C061  F17D         	movff	?___fltol+1,_os+12	;volatile
 42581                           
 42582                           ;motor.c: 68: if(os.current_position_in_degrees==36000)
 42583  012134  0EA0               	movlw	160
 42584  012136  0101               	movlb	1	; () banked
 42585  012138  197C               	xorwf	(_os+11)& (0+255),w,b	;volatile
 42586  01213A  E109               	bnz	l2387
 42587  01213C  0E8C               	movlw	140
 42588  01213E  197D               	xorwf	(_os+12)& (0+255),w,b	;volatile
 42589  012140  A4D8               	btfss	status,2,c
 42590  012142  0012               	return	
 42591                           
 42592                           ; BSR set to: 1
 42593                           ;motor.c: 69: {;motor.c: 71: os.current_position_in_degrees = 0;
 42594  012144  0E00               	movlw	0
 42595  012146  6F7D               	movwf	(_os+12)& (0+255),b	;volatile
 42596  012148  0E00               	movlw	0
 42597  01214A  6F7C               	movwf	(_os+11)& (0+255),b	;volatile
 42598  01214C  0012               	return	
 42599  01214E                     l2387:
 42600                           
 42601                           ; BSR set to: 1
 42602  01214E  0012               	return		;funcret
 42603  012150                     __end_of_motor_calculate_position_in_degrees:
 42604                           	opt stack 0
 42605                           tosu	equ	0xFFF
 42606                           tosh	equ	0xFFE
 42607                           tosl	equ	0xFFD
 42608                           pclath	equ	0xFFA
 42609                           tblptru	equ	0xFF8
 42610                           tblptrh	equ	0xFF7
 42611                           tblptrl	equ	0xFF6
 42612                           tablat	equ	0xFF5
 42613                           prodh	equ	0xFF4
 42614                           prodl	equ	0xFF3
 42615                           intcon	equ	0xFF2
 42616                           indf0	equ	0xFEF
 42617                           postinc0	equ	0xFEE
 42618                           fsr0h	equ	0xFEA
 42619                           fsr0l	equ	0xFE9
 42620                           wreg	equ	0xFE8
 42621                           indf1	equ	0xFE7
 42622                           postinc1	equ	0xFE6
 42623                           postdec1	equ	0xFE5
 42624                           plusw1	equ	0xFE3
 42625                           fsr1h	equ	0xFE2
 42626                           fsr1l	equ	0xFE1
 42627                           indf2	equ	0xFDF
 42628                           postinc2	equ	0xFDE
 42629                           postdec2	equ	0xFDD
 42630                           plusw2	equ	0xFDB
 42631                           fsr2h	equ	0xFDA
 42632                           fsr2l	equ	0xFD9
 42633                           status	equ	0xFD8
 42634                           
 42635 ;; *************** function ___xxtofl *****************
 42636 ;; Defined at:
 42637 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 42638 ;; Parameters:    Size  Location     Type
 42639 ;;  sign            1    wreg     unsigned char 
 42640 ;;  val             4    0[BANK0 ] long 
 42641 ;; Auto vars:     Size  Location     Type
 42642 ;;  sign            1    8[BANK0 ] unsigned char 
 42643 ;;  arg             4   10[BANK0 ] unsigned long 
 42644 ;;  exp             1    9[BANK0 ] unsigned char 
 42645 ;; Return value:  Size  Location     Type
 42646 ;;                  4    0[BANK0 ] unsigned char 
 42647 ;; Registers used:
 42648 ;;		wreg, status,2, status,0
 42649 ;; Tracked objects:
 42650 ;;		On entry : 0/0
 42651 ;;		On exit  : 0/0
 42652 ;;		Unchanged: 0/0
 42653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42655 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42656 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42657 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42658 ;;Total ram usage:       14 bytes
 42659 ;; Hardware stack levels used:    1
 42660 ;; Hardware stack levels required when called:   10
 42661 ;; This function calls:
 42662 ;;		Nothing
 42663 ;; This function is called by:
 42664 ;;		_motor_steps_from_degrees
 42665 ;;		_motor_calculate_position_in_degrees
 42666 ;;		__motor_get_speed_in_degrees
 42667 ;;		__step_position_from_divide_position
 42668 ;;		_motor_divide_jump_to_nearest
 42669 ;;		_motor_arc_move
 42670 ;;		_adc_read_temperature
 42671 ;;		_motor_go_to_degrees_position
 42672 ;; This function uses a non-reentrant model
 42673 ;;
 42674                           
 42675                           	psect	text174
 42676  0102BA                     __ptext174:
 42677                           	opt stack 0
 42678  0102BA                     ___xxtofl:
 42679                           	opt stack 18
 42680                           
 42681                           ; BSR set to: 1
 42682                           ;incstack = 0
 42683                           ;___xxtofl@sign stored from wreg
 42684  0102BA  0100               	movlb	0	; () banked
 42685  0102BC  6F68               	movwf	___xxtofl@sign& (0+255),b
 42686  0102BE  0100               	movlb	0	; () banked
 42687  0102C0  5168               	movf	___xxtofl@sign& (0+255),w,b
 42688  0102C2  A4D8               	btfss	status,2,c
 42689                           
 42690                           ; BSR set to: 0
 42691  0102C4  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 42692  0102C6  D01A               	goto	l3560
 42693                           
 42694                           ; BSR set to: 0
 42695  0102C8  C060  F064         	movff	___xxtofl@val,??___xxtofl
 42696  0102CC  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 42697  0102D0  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 42698  0102D4  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 42699  0102D8  1F64               	comf	??___xxtofl& (0+255),f,b
 42700  0102DA  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 42701  0102DC  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 42702  0102DE  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 42703  0102E0  2B64               	incf	??___xxtofl& (0+255),f,b
 42704  0102E2  0E00               	movlw	0
 42705  0102E4  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 42706  0102E6  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 42707  0102E8  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 42708  0102EA  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 42709  0102EE  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 42710  0102F2  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 42711  0102F6  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 42712  0102FA  D008               	goto	l3561
 42713  0102FC                     l3560:
 42714                           
 42715                           ; BSR set to: 0
 42716  0102FC  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 42717  010300  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 42718  010304  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 42719  010308  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 42720  01030C                     l3561:
 42721                           
 42722                           ; BSR set to: 0
 42723                           
 42724                           ; BSR set to: 0
 42725  01030C  5160               	movf	___xxtofl@val& (0+255),w,b
 42726  01030E  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 42727  010310  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 42728  010312  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 42729  010314  A4D8               	btfss	status,2,c
 42730  010316  D009               	goto	l3562
 42731                           
 42732                           ; BSR set to: 0
 42733  010318  0E00               	movlw	0
 42734  01031A  6F60               	movwf	?___xxtofl& (0+255),b
 42735  01031C  0E00               	movlw	0
 42736  01031E  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 42737  010320  0E00               	movlw	0
 42738  010322  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 42739  010324  0E00               	movlw	0
 42740  010326  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 42741                           
 42742                           ; BSR set to: 0
 42743  010328  0012               	return	
 42744  01032A                     l3562:
 42745                           
 42746                           ; BSR set to: 0
 42747                           
 42748                           ; BSR set to: 0
 42749  01032A  0E96               	movlw	150
 42750  01032C  6F69               	movwf	___xxtofl@exp& (0+255),b
 42751  01032E  D006               	goto	l3564
 42752  010330                     
 42753                           ; BSR set to: 0
 42754                           
 42755                           ; BSR set to: 0
 42756  010330  2B69               	incf	___xxtofl@exp& (0+255),f,b
 42757  010332  90D8               	bcf	status,0,c
 42758  010334  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 42759  010336  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 42760  010338  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 42761  01033A  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 42762  01033C                     l3564:
 42763                           
 42764                           ; BSR set to: 0
 42765                           
 42766                           ; BSR set to: 0
 42767  01033C  0E00               	movlw	0
 42768  01033E  156A               	andwf	___xxtofl@arg& (0+255),w,b
 42769  010340  6F64               	movwf	??___xxtofl& (0+255),b
 42770  010342  0E00               	movlw	0
 42771  010344  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 42772  010346  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 42773  010348  0E00               	movlw	0
 42774  01034A  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 42775  01034C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 42776  01034E  0EFE               	movlw	254
 42777  010350  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 42778  010352  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 42779  010354  5164               	movf	??___xxtofl& (0+255),w,b
 42780  010356  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 42781  010358  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 42782  01035A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 42783  01035C  B4D8               	btfsc	status,2,c
 42784  01035E  D00D               	goto	l3567
 42785  010360  D7E7               	goto	l3565
 42786  010362                     
 42787                           ; BSR set to: 0
 42788                           
 42789                           ; BSR set to: 0
 42790  010362  2B69               	incf	___xxtofl@exp& (0+255),f,b
 42791                           
 42792                           ; BSR set to: 0
 42793  010364  0E01               	movlw	1
 42794  010366  276A               	addwf	___xxtofl@arg& (0+255),f,b
 42795  010368  0E00               	movlw	0
 42796  01036A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 42797  01036C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 42798  01036E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 42799                           
 42800                           ; BSR set to: 0
 42801  010370  90D8               	bcf	status,0,c
 42802  010372  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 42803  010374  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 42804  010376  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 42805  010378  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 42806  01037A                     l3567:
 42807                           
 42808                           ; BSR set to: 0
 42809  01037A  0E00               	movlw	0
 42810  01037C  156A               	andwf	___xxtofl@arg& (0+255),w,b
 42811  01037E  6F64               	movwf	??___xxtofl& (0+255),b
 42812  010380  0E00               	movlw	0
 42813  010382  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 42814  010384  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 42815  010386  0E00               	movlw	0
 42816  010388  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 42817  01038A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 42818  01038C  0EFF               	movlw	255
 42819  01038E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 42820  010390  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 42821  010392  5164               	movf	??___xxtofl& (0+255),w,b
 42822  010394  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 42823  010396  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 42824  010398  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 42825  01039A  B4D8               	btfsc	status,2,c
 42826  01039C  D007               	goto	l3570
 42827  01039E  D7E1               	goto	l3568
 42828  0103A0                     
 42829                           ; BSR set to: 0
 42830                           
 42831                           ; BSR set to: 0
 42832  0103A0  0769               	decf	___xxtofl@exp& (0+255),f,b
 42833  0103A2  90D8               	bcf	status,0,c
 42834  0103A4  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 42835  0103A6  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 42836  0103A8  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 42837  0103AA  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 42838  0103AC                     l3570:
 42839                           
 42840                           ; BSR set to: 0
 42841                           
 42842                           ; BSR set to: 0
 42843  0103AC  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 42844  0103AE  D003               	goto	u10420
 42845                           
 42846                           ; BSR set to: 0
 42847  0103B0  0E02               	movlw	2
 42848  0103B2  6169               	cpfslt	___xxtofl@exp& (0+255),b
 42849  0103B4  D7F5               	goto	l3571
 42850  0103B6                     u10420:
 42851                           
 42852                           ; BSR set to: 0
 42853                           
 42854                           ; BSR set to: 0
 42855  0103B6  A169               	btfss	___xxtofl@exp& (0+255),0,b
 42856                           
 42857                           ; BSR set to: 0
 42858  0103B8  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 42859                           
 42860                           ; BSR set to: 0
 42861                           
 42862                           ; BSR set to: 0
 42863  0103BA  90D8               	bcf	status,0,c
 42864  0103BC  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 42865                           
 42866                           ; BSR set to: 0
 42867  0103BE  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 42868  0103C2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 42869  0103C4  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 42870  0103C6  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 42871  0103C8  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 42872  0103CC  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 42873  0103CE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 42874  0103D0  6B64               	clrf	??___xxtofl& (0+255),b
 42875  0103D2  5164               	movf	??___xxtofl& (0+255),w,b
 42876  0103D4  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 42877  0103D6  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 42878  0103D8  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 42879  0103DA  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 42880  0103DC  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 42881  0103DE  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 42882  0103E0  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 42883                           
 42884                           ; BSR set to: 0
 42885  0103E2  5168               	movf	___xxtofl@sign& (0+255),w,b
 42886  0103E4  A4D8               	btfss	status,2,c
 42887                           
 42888                           ; BSR set to: 0
 42889  0103E6  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 42890  0103E8  D001               	goto	l3576
 42891                           
 42892                           ; BSR set to: 0
 42893  0103EA  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 42894  0103EC                     l3576:
 42895                           
 42896                           ; BSR set to: 0
 42897                           
 42898                           ; BSR set to: 0
 42899  0103EC  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 42900  0103F0  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 42901  0103F4  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 42902  0103F8  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 42903  0103FC  0012               	return	
 42904  0103FE                     __end_of___xxtofl:
 42905                           	opt stack 0
 42906                           tosu	equ	0xFFF
 42907                           tosh	equ	0xFFE
 42908                           tosl	equ	0xFFD
 42909                           pclath	equ	0xFFA
 42910                           tblptru	equ	0xFF8
 42911                           tblptrh	equ	0xFF7
 42912                           tblptrl	equ	0xFF6
 42913                           tablat	equ	0xFF5
 42914                           prodh	equ	0xFF4
 42915                           prodl	equ	0xFF3
 42916                           intcon	equ	0xFF2
 42917                           indf0	equ	0xFEF
 42918                           postinc0	equ	0xFEE
 42919                           fsr0h	equ	0xFEA
 42920                           fsr0l	equ	0xFE9
 42921                           wreg	equ	0xFE8
 42922                           indf1	equ	0xFE7
 42923                           postinc1	equ	0xFE6
 42924                           postdec1	equ	0xFE5
 42925                           plusw1	equ	0xFE3
 42926                           fsr1h	equ	0xFE2
 42927                           fsr1l	equ	0xFE1
 42928                           indf2	equ	0xFDF
 42929                           postinc2	equ	0xFDE
 42930                           postdec2	equ	0xFDD
 42931                           plusw2	equ	0xFDB
 42932                           fsr2h	equ	0xFDA
 42933                           fsr2l	equ	0xFD9
 42934                           status	equ	0xFD8
 42935                           
 42936 ;; *************** function ___fltol *****************
 42937 ;; Defined at:
 42938 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 42939 ;; Parameters:    Size  Location     Type
 42940 ;;  f1              4    0[BANK0 ] unsigned char 
 42941 ;; Auto vars:     Size  Location     Type
 42942 ;;  exp1            1    9[BANK0 ] unsigned char 
 42943 ;;  sign1           1    8[BANK0 ] unsigned char 
 42944 ;; Return value:  Size  Location     Type
 42945 ;;                  4    0[BANK0 ] long 
 42946 ;; Registers used:
 42947 ;;		wreg, status,2, status,0
 42948 ;; Tracked objects:
 42949 ;;		On entry : 0/0
 42950 ;;		On exit  : 0/0
 42951 ;;		Unchanged: 0/0
 42952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42954 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42956 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42957 ;;Total ram usage:       10 bytes
 42958 ;; Hardware stack levels used:    1
 42959 ;; Hardware stack levels required when called:   10
 42960 ;; This function calls:
 42961 ;;		Nothing
 42962 ;; This function is called by:
 42963 ;;		_motor_steps_from_degrees
 42964 ;;		_motor_calculate_position_in_degrees
 42965 ;;		__motor_get_speed_in_degrees
 42966 ;;		__step_position_from_divide_position
 42967 ;;		_motor_divide_jump_to_nearest
 42968 ;;		_motor_arc_move
 42969 ;;		_adc_read_temperature
 42970 ;;		_motor_go_to_degrees_position
 42971 ;; This function uses a non-reentrant model
 42972 ;;
 42973                           
 42974                           	psect	text175
 42975  012150                     __ptext175:
 42976                           	opt stack 0
 42977  012150                     ___fltol:
 42978                           	opt stack 18
 42979                           
 42980                           ; BSR set to: 0
 42981                           ;incstack = 0
 42982  012150  0100               	movlb	0	; () banked
 42983  012152  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 42984  012154  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 42985  012156  6F69               	movwf	___fltol@exp1& (0+255),b
 42986  012158  5169               	movf	___fltol@exp1& (0+255),w,b
 42987  01215A  A4D8               	btfss	status,2,c
 42988  01215C  D009               	goto	l3205
 42989                           
 42990                           ; BSR set to: 0
 42991  01215E  0E00               	movlw	0
 42992  012160  6F60               	movwf	?___fltol& (0+255),b
 42993  012162  0E00               	movlw	0
 42994  012164  6F61               	movwf	(?___fltol+1)& (0+255),b
 42995  012166  0E00               	movlw	0
 42996  012168  6F62               	movwf	(?___fltol+2)& (0+255),b
 42997  01216A  0E00               	movlw	0
 42998  01216C  6F63               	movwf	(?___fltol+3)& (0+255),b
 42999                           
 43000                           ; BSR set to: 0
 43001  01216E  0012               	return	
 43002  012170                     l3205:
 43003                           
 43004                           ; BSR set to: 0
 43005                           
 43006                           ; BSR set to: 0
 43007  012170  C060  F064         	movff	___fltol@f1,??___fltol
 43008  012174  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 43009  012178  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 43010  01217C  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 43011  012180  0E20               	movlw	32
 43012  012182  D005               	goto	u10300
 43013  012184                     u10305:
 43014  012184  90D8               	bcf	status,0,c
 43015  012186  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 43016  012188  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 43017  01218A  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 43018  01218C  3364               	rrcf	??___fltol& (0+255),f,b
 43019  01218E                     u10300:
 43020  01218E  2EE8               	decfsz	wreg,f,c
 43021  012190  D7F9               	goto	u10305
 43022  012192  5164               	movf	??___fltol& (0+255),w,b
 43023  012194  6F68               	movwf	___fltol@sign1& (0+255),b
 43024                           
 43025                           ; BSR set to: 0
 43026  012196  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 43027                           
 43028                           ; BSR set to: 0
 43029  012198  0EFF               	movlw	255
 43030  01219A  1760               	andwf	___fltol@f1& (0+255),f,b
 43031  01219C  0EFF               	movlw	255
 43032  01219E  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 43033  0121A0  0EFF               	movlw	255
 43034  0121A2  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 43035  0121A4  0E00               	movlw	0
 43036  0121A6  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 43037                           
 43038                           ; BSR set to: 0
 43039  0121A8  0E96               	movlw	150
 43040  0121AA  5F69               	subwf	___fltol@exp1& (0+255),f,b
 43041                           
 43042                           ; BSR set to: 0
 43043  0121AC  AF69               	btfss	___fltol@exp1& (0+255),7,b
 43044  0121AE  D016               	goto	l3207
 43045                           
 43046                           ; BSR set to: 0
 43047  0121B0  5169               	movf	___fltol@exp1& (0+255),w,b
 43048  0121B2  0A80               	xorlw	128
 43049  0121B4  0F97               	addlw	151
 43050  0121B6  B0D8               	btfsc	status,0,c
 43051  0121B8  D009               	goto	l3208
 43052                           
 43053                           ; BSR set to: 0
 43054  0121BA  0E00               	movlw	0
 43055  0121BC  6F60               	movwf	?___fltol& (0+255),b
 43056  0121BE  0E00               	movlw	0
 43057  0121C0  6F61               	movwf	(?___fltol+1)& (0+255),b
 43058  0121C2  0E00               	movlw	0
 43059  0121C4  6F62               	movwf	(?___fltol+2)& (0+255),b
 43060  0121C6  0E00               	movlw	0
 43061  0121C8  6F63               	movwf	(?___fltol+3)& (0+255),b
 43062                           
 43063                           ; BSR set to: 0
 43064  0121CA  0012               	return	
 43065  0121CC                     l3208:
 43066                           
 43067                           ; BSR set to: 0
 43068                           
 43069                           ; BSR set to: 0
 43070                           
 43071                           ; BSR set to: 0
 43072  0121CC  90D8               	bcf	status,0,c
 43073  0121CE  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 43074  0121D0  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 43075  0121D2  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 43076  0121D4  3360               	rrcf	___fltol@f1& (0+255),f,b
 43077                           
 43078                           ; BSR set to: 0
 43079  0121D6  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 43080  0121D8  D7F9               	goto	l3208
 43081                           
 43082                           ; BSR set to: 0
 43083  0121DA  D015               	goto	u10340
 43084  0121DC                     l3207:
 43085                           
 43086                           ; BSR set to: 0
 43087                           
 43088                           ; BSR set to: 0
 43089  0121DC  0E1F               	movlw	31
 43090  0121DE  6569               	cpfsgt	___fltol@exp1& (0+255),b
 43091  0121E0  D00F               	goto	l3213
 43092                           
 43093                           ; BSR set to: 0
 43094  0121E2  0E00               	movlw	0
 43095  0121E4  6F60               	movwf	?___fltol& (0+255),b
 43096  0121E6  0E00               	movlw	0
 43097  0121E8  6F61               	movwf	(?___fltol+1)& (0+255),b
 43098  0121EA  0E00               	movlw	0
 43099  0121EC  6F62               	movwf	(?___fltol+2)& (0+255),b
 43100  0121EE  0E00               	movlw	0
 43101  0121F0  6F63               	movwf	(?___fltol+3)& (0+255),b
 43102                           
 43103                           ; BSR set to: 0
 43104  0121F2  0012               	return	
 43105  0121F4                     
 43106                           ; BSR set to: 0
 43107                           
 43108                           ; BSR set to: 0
 43109  0121F4  90D8               	bcf	status,0,c
 43110  0121F6  3760               	rlcf	___fltol@f1& (0+255),f,b
 43111  0121F8  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 43112  0121FA  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 43113  0121FC  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 43114  0121FE  0769               	decf	___fltol@exp1& (0+255),f,b
 43115  012200                     l3213:
 43116                           
 43117                           ; BSR set to: 0
 43118                           
 43119                           ; BSR set to: 0
 43120  012200  5169               	movf	___fltol@exp1& (0+255),w,b
 43121  012202  A4D8               	btfss	status,2,c
 43122  012204  D7F7               	goto	l3214
 43123  012206                     u10340:
 43124                           
 43125                           ; BSR set to: 0
 43126                           
 43127                           ; BSR set to: 0
 43128                           
 43129                           ; BSR set to: 0
 43130  012206  5168               	movf	___fltol@sign1& (0+255),w,b
 43131  012208  B4D8               	btfsc	status,2,c
 43132  01220A  D008               	goto	l3216
 43133                           
 43134                           ; BSR set to: 0
 43135  01220C  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 43136  01220E  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 43137  012210  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 43138  012212  6D60               	negf	___fltol@f1& (0+255),b
 43139  012214  0E00               	movlw	0
 43140  012216  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 43141  012218  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 43142  01221A  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 43143  01221C                     l3216:
 43144                           
 43145                           ; BSR set to: 0
 43146                           
 43147                           ; BSR set to: 0
 43148  01221C  C060  F060         	movff	___fltol@f1,?___fltol
 43149  012220  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 43150  012224  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 43151  012228  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 43152  01222C  0012               	return	
 43153  01222E                     __end_of___fltol:
 43154                           	opt stack 0
 43155                           tosu	equ	0xFFF
 43156                           tosh	equ	0xFFE
 43157                           tosl	equ	0xFFD
 43158                           pclath	equ	0xFFA
 43159                           tblptru	equ	0xFF8
 43160                           tblptrh	equ	0xFF7
 43161                           tblptrl	equ	0xFF6
 43162                           tablat	equ	0xFF5
 43163                           prodh	equ	0xFF4
 43164                           prodl	equ	0xFF3
 43165                           intcon	equ	0xFF2
 43166                           indf0	equ	0xFEF
 43167                           postinc0	equ	0xFEE
 43168                           fsr0h	equ	0xFEA
 43169                           fsr0l	equ	0xFE9
 43170                           wreg	equ	0xFE8
 43171                           indf1	equ	0xFE7
 43172                           postinc1	equ	0xFE6
 43173                           postdec1	equ	0xFE5
 43174                           plusw1	equ	0xFE3
 43175                           fsr1h	equ	0xFE2
 43176                           fsr1l	equ	0xFE1
 43177                           indf2	equ	0xFDF
 43178                           postinc2	equ	0xFDE
 43179                           postdec2	equ	0xFDD
 43180                           plusw2	equ	0xFDB
 43181                           fsr2h	equ	0xFDA
 43182                           fsr2l	equ	0xFD9
 43183                           status	equ	0xFD8
 43184                           
 43185 ;; *************** function ___flmul *****************
 43186 ;; Defined at:
 43187 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 43188 ;; Parameters:    Size  Location     Type
 43189 ;;  b               4   14[BANK0 ] long 
 43190 ;;  a               4   18[BANK0 ] long 
 43191 ;; Auto vars:     Size  Location     Type
 43192 ;;  prod            4   33[BANK0 ] struct .
 43193 ;;  grs             4   27[BANK0 ] unsigned long 
 43194 ;;  temp            2   37[BANK0 ] struct .
 43195 ;;  bexp            1   32[BANK0 ] unsigned char 
 43196 ;;  aexp            1   31[BANK0 ] unsigned char 
 43197 ;;  sign            1   26[BANK0 ] unsigned char 
 43198 ;; Return value:  Size  Location     Type
 43199 ;;                  4   14[BANK0 ] unsigned char 
 43200 ;; Registers used:
 43201 ;;		wreg, status,2, status,0, prodl, prodh
 43202 ;; Tracked objects:
 43203 ;;		On entry : 0/0
 43204 ;;		On exit  : 0/0
 43205 ;;		Unchanged: 0/0
 43206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43207 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43208 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43209 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43210 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43211 ;;Total ram usage:       25 bytes
 43212 ;; Hardware stack levels used:    1
 43213 ;; Hardware stack levels required when called:   10
 43214 ;; This function calls:
 43215 ;;		Nothing
 43216 ;; This function is called by:
 43217 ;;		_motor_steps_from_degrees
 43218 ;;		_motor_calculate_position_in_degrees
 43219 ;;		__step_position_from_divide_position
 43220 ;;		_motor_divide_jump_to_nearest
 43221 ;;		_motor_arc_move
 43222 ;;		_adc_read_temperature
 43223 ;;		_motor_go_to_degrees_position
 43224 ;; This function uses a non-reentrant model
 43225 ;;
 43226                           
 43227                           	psect	text176
 43228  00CCF2                     __ptext176:
 43229                           	opt stack 0
 43230  00CCF2                     ___flmul:
 43231                           	opt stack 18
 43232                           
 43233                           ; BSR set to: 0
 43234                           ;incstack = 0
 43235  00CCF2  0100               	movlb	0	; () banked
 43236  00CCF4  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43237  00CCF6  0B80               	andlw	128
 43238  00CCF8  6F7A               	movwf	___flmul@sign& (0+255),b
 43239  00CCFA  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43240  00CCFC  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 43241  00CCFE  6F80               	movwf	___flmul@bexp& (0+255),b
 43242                           
 43243                           ; BSR set to: 0
 43244  00CD00  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 43245                           
 43246                           ; BSR set to: 0
 43247  00CD02  8180               	bsf	___flmul@bexp& (0+255),0,b
 43248                           
 43249                           ; BSR set to: 0
 43250                           
 43251                           ; BSR set to: 0
 43252  00CD04  5180               	movf	___flmul@bexp& (0+255),w,b
 43253  00CD06  B4D8               	btfsc	status,2,c
 43254  00CD08  D00D               	goto	l3513
 43255                           
 43256                           ; BSR set to: 0
 43257  00CD0A  2980               	incf	___flmul@bexp& (0+255),w,b
 43258  00CD0C  A4D8               	btfss	status,2,c
 43259  00CD0E  D008               	goto	l3514
 43260                           
 43261                           ; BSR set to: 0
 43262  00CD10  0E00               	movlw	0
 43263  00CD12  6F6E               	movwf	___flmul@b& (0+255),b
 43264  00CD14  0E00               	movlw	0
 43265  00CD16  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43266  00CD18  0E00               	movlw	0
 43267  00CD1A  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43268  00CD1C  0E00               	movlw	0
 43269  00CD1E  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43270  00CD20                     l3514:
 43271                           
 43272                           ; BSR set to: 0
 43273                           
 43274                           ; BSR set to: 0
 43275  00CD20  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 43276  00CD22  D008               	goto	l3515
 43277  00CD24                     l3513:
 43278                           
 43279                           ; BSR set to: 0
 43280                           
 43281                           ; BSR set to: 0
 43282  00CD24  0E00               	movlw	0
 43283  00CD26  6F6E               	movwf	___flmul@b& (0+255),b
 43284  00CD28  0E00               	movlw	0
 43285  00CD2A  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43286  00CD2C  0E00               	movlw	0
 43287  00CD2E  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43288  00CD30  0E00               	movlw	0
 43289  00CD32  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43290  00CD34                     l3515:
 43291                           
 43292                           ; BSR set to: 0
 43293                           
 43294                           ; BSR set to: 0
 43295  00CD34  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43296  00CD36  0B80               	andlw	128
 43297  00CD38  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 43298                           
 43299                           ; BSR set to: 0
 43300  00CD3A  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43301  00CD3C  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 43302  00CD3E  6F7F               	movwf	___flmul@aexp& (0+255),b
 43303                           
 43304                           ; BSR set to: 0
 43305  00CD40  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 43306                           
 43307                           ; BSR set to: 0
 43308  00CD42  817F               	bsf	___flmul@aexp& (0+255),0,b
 43309                           
 43310                           ; BSR set to: 0
 43311                           
 43312                           ; BSR set to: 0
 43313  00CD44  517F               	movf	___flmul@aexp& (0+255),w,b
 43314  00CD46  B4D8               	btfsc	status,2,c
 43315  00CD48  D00D               	goto	l3517
 43316                           
 43317                           ; BSR set to: 0
 43318  00CD4A  297F               	incf	___flmul@aexp& (0+255),w,b
 43319  00CD4C  A4D8               	btfss	status,2,c
 43320  00CD4E  D008               	goto	l3518
 43321                           
 43322                           ; BSR set to: 0
 43323  00CD50  0E00               	movlw	0
 43324  00CD52  6F72               	movwf	___flmul@a& (0+255),b
 43325  00CD54  0E00               	movlw	0
 43326  00CD56  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43327  00CD58  0E00               	movlw	0
 43328  00CD5A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43329  00CD5C  0E00               	movlw	0
 43330  00CD5E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43331  00CD60                     l3518:
 43332                           
 43333                           ; BSR set to: 0
 43334                           
 43335                           ; BSR set to: 0
 43336  00CD60  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 43337  00CD62  D008               	goto	l3519
 43338  00CD64                     l3517:
 43339                           
 43340                           ; BSR set to: 0
 43341                           
 43342                           ; BSR set to: 0
 43343  00CD64  0E00               	movlw	0
 43344  00CD66  6F72               	movwf	___flmul@a& (0+255),b
 43345  00CD68  0E00               	movlw	0
 43346  00CD6A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43347  00CD6C  0E00               	movlw	0
 43348  00CD6E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43349  00CD70  0E00               	movlw	0
 43350  00CD72  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43351  00CD74                     l3519:
 43352                           
 43353                           ; BSR set to: 0
 43354  00CD74  517F               	movf	___flmul@aexp& (0+255),w,b
 43355  00CD76  B4D8               	btfsc	status,2,c
 43356  00CD78  D003               	goto	u10170
 43357                           
 43358                           ; BSR set to: 0
 43359  00CD7A  5180               	movf	___flmul@bexp& (0+255),w,b
 43360  00CD7C  A4D8               	btfss	status,2,c
 43361  00CD7E  D009               	goto	l3520
 43362  00CD80                     u10170:
 43363                           
 43364                           ; BSR set to: 0
 43365                           
 43366                           ; BSR set to: 0
 43367  00CD80  0E00               	movlw	0
 43368  00CD82  6F6E               	movwf	?___flmul& (0+255),b
 43369  00CD84  0E00               	movlw	0
 43370  00CD86  6F6F               	movwf	(?___flmul+1)& (0+255),b
 43371  00CD88  0E00               	movlw	0
 43372  00CD8A  6F70               	movwf	(?___flmul+2)& (0+255),b
 43373  00CD8C  0E00               	movlw	0
 43374  00CD8E  6F71               	movwf	(?___flmul+3)& (0+255),b
 43375                           
 43376                           ; BSR set to: 0
 43377  00CD90  0012               	return	
 43378  00CD92                     l3520:
 43379                           
 43380                           ; BSR set to: 0
 43381                           
 43382                           ; BSR set to: 0
 43383  00CD92  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43384  00CD94  036E               	mulwf	___flmul@b& (0+255),b
 43385  00CD96  CFF3 F085          	movff	prodl,___flmul@temp
 43386  00CD9A  CFF4 F086          	movff	prodh,___flmul@temp+1
 43387                           
 43388                           ; BSR set to: 0
 43389  00CD9E  5185               	movf	___flmul@temp& (0+255),w,b
 43390  00CDA0  6F7B               	movwf	___flmul@grs& (0+255),b
 43391  00CDA2  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 43392  00CDA4  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 43393  00CDA6  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 43394                           
 43395                           ; BSR set to: 0
 43396  00CDA8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43397  00CDAA  6F81               	movwf	___flmul@prod& (0+255),b
 43398  00CDAC  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 43399  00CDAE  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 43400  00CDB0  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 43401  00CDB2  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43402  00CDB4  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43403  00CDB6  CFF3 F085          	movff	prodl,___flmul@temp
 43404  00CDBA  CFF4 F086          	movff	prodh,___flmul@temp+1
 43405                           
 43406                           ; BSR set to: 0
 43407  00CDBE  5185               	movf	___flmul@temp& (0+255),w,b
 43408  00CDC0  277B               	addwf	___flmul@grs& (0+255),f,b
 43409  00CDC2  0E00               	movlw	0
 43410  00CDC4  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43411  00CDC6  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43412  00CDC8  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43413                           
 43414                           ; BSR set to: 0
 43415  00CDCA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43416  00CDCC  2781               	addwf	___flmul@prod& (0+255),f,b
 43417  00CDCE  0E00               	movlw	0
 43418  00CDD0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43419  00CDD2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43420  00CDD4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43421  00CDD6  5172               	movf	___flmul@a& (0+255),w,b
 43422  00CDD8  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43423  00CDDA  CFF3 F085          	movff	prodl,___flmul@temp
 43424  00CDDE  CFF4 F086          	movff	prodh,___flmul@temp+1
 43425                           
 43426                           ; BSR set to: 0
 43427  00CDE2  5185               	movf	___flmul@temp& (0+255),w,b
 43428  00CDE4  277B               	addwf	___flmul@grs& (0+255),f,b
 43429  00CDE6  0E00               	movlw	0
 43430  00CDE8  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43431  00CDEA  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43432  00CDEC  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43433                           
 43434                           ; BSR set to: 0
 43435  00CDEE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43436  00CDF0  2781               	addwf	___flmul@prod& (0+255),f,b
 43437  00CDF2  0E00               	movlw	0
 43438  00CDF4  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43439  00CDF6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43440  00CDF8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43441                           
 43442                           ; BSR set to: 0
 43443  00CDFA  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43444  00CDFE  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43445  00CE02  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43446  00CE06  6B7B               	clrf	___flmul@grs& (0+255),b
 43447                           
 43448                           ; BSR set to: 0
 43449  00CE08  5172               	movf	___flmul@a& (0+255),w,b
 43450  00CE0A  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43451  00CE0C  CFF3 F085          	movff	prodl,___flmul@temp
 43452  00CE10  CFF4 F086          	movff	prodh,___flmul@temp+1
 43453                           
 43454                           ; BSR set to: 0
 43455  00CE14  5185               	movf	___flmul@temp& (0+255),w,b
 43456  00CE16  277B               	addwf	___flmul@grs& (0+255),f,b
 43457  00CE18  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43458  00CE1A  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43459  00CE1C  0E00               	movlw	0
 43460  00CE1E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43461  00CE20  0E00               	movlw	0
 43462  00CE22  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43463                           
 43464                           ; BSR set to: 0
 43465  00CE24  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43466  00CE26  036E               	mulwf	___flmul@b& (0+255),b
 43467  00CE28  CFF3 F085          	movff	prodl,___flmul@temp
 43468  00CE2C  CFF4 F086          	movff	prodh,___flmul@temp+1
 43469                           
 43470                           ; BSR set to: 0
 43471  00CE30  5185               	movf	___flmul@temp& (0+255),w,b
 43472  00CE32  277B               	addwf	___flmul@grs& (0+255),f,b
 43473  00CE34  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43474  00CE36  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43475  00CE38  0E00               	movlw	0
 43476  00CE3A  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43477  00CE3C  0E00               	movlw	0
 43478  00CE3E  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43479                           
 43480                           ; BSR set to: 0
 43481  00CE40  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43482  00CE44  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43483  00CE48  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43484  00CE4C  6B7B               	clrf	___flmul@grs& (0+255),b
 43485  00CE4E  5172               	movf	___flmul@a& (0+255),w,b
 43486  00CE50  036E               	mulwf	___flmul@b& (0+255),b
 43487  00CE52  CFF3 F085          	movff	prodl,___flmul@temp
 43488  00CE56  CFF4 F086          	movff	prodh,___flmul@temp+1
 43489                           
 43490                           ; BSR set to: 0
 43491  00CE5A  5185               	movf	___flmul@temp& (0+255),w,b
 43492  00CE5C  277B               	addwf	___flmul@grs& (0+255),f,b
 43493  00CE5E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43494  00CE60  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43495  00CE62  0E00               	movlw	0
 43496  00CE64  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43497  00CE66  0E00               	movlw	0
 43498  00CE68  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43499                           
 43500                           ; BSR set to: 0
 43501  00CE6A  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43502  00CE6C  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43503  00CE6E  CFF3 F085          	movff	prodl,___flmul@temp
 43504  00CE72  CFF4 F086          	movff	prodh,___flmul@temp+1
 43505  00CE76  5185               	movf	___flmul@temp& (0+255),w,b
 43506  00CE78  2781               	addwf	___flmul@prod& (0+255),f,b
 43507  00CE7A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43508  00CE7C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43509  00CE7E  0E00               	movlw	0
 43510  00CE80  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43511  00CE82  0E00               	movlw	0
 43512  00CE84  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43513                           
 43514                           ; BSR set to: 0
 43515  00CE86  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43516  00CE88  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43517  00CE8A  CFF3 F085          	movff	prodl,___flmul@temp
 43518  00CE8E  CFF4 F086          	movff	prodh,___flmul@temp+1
 43519                           
 43520                           ; BSR set to: 0
 43521  00CE92  5185               	movf	___flmul@temp& (0+255),w,b
 43522  00CE94  2781               	addwf	___flmul@prod& (0+255),f,b
 43523  00CE96  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43524  00CE98  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43525  00CE9A  0E00               	movlw	0
 43526  00CE9C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43527  00CE9E  0E00               	movlw	0
 43528  00CEA0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43529  00CEA2  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43530  00CEA4  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43531  00CEA6  CFF3 F085          	movff	prodl,___flmul@temp
 43532  00CEAA  CFF4 F086          	movff	prodh,___flmul@temp+1
 43533                           
 43534                           ; BSR set to: 0
 43535  00CEAE  5185               	movf	___flmul@temp& (0+255),w,b
 43536  00CEB0  6F76               	movwf	??___flmul& (0+255),b
 43537  00CEB2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43538  00CEB4  6F77               	movwf	(??___flmul+1)& (0+255),b
 43539  00CEB6  6B78               	clrf	(??___flmul+2)& (0+255),b
 43540  00CEB8  6B79               	clrf	(??___flmul+3)& (0+255),b
 43541  00CEBA  C078  F079         	movff	??___flmul+2,??___flmul+3
 43542  00CEBE  C077  F078         	movff	??___flmul+1,??___flmul+2
 43543  00CEC2  C076  F077         	movff	??___flmul,??___flmul+1
 43544  00CEC6  6B76               	clrf	??___flmul& (0+255),b
 43545  00CEC8  5176               	movf	??___flmul& (0+255),w,b
 43546  00CECA  2781               	addwf	___flmul@prod& (0+255),f,b
 43547  00CECC  5177               	movf	(??___flmul+1)& (0+255),w,b
 43548  00CECE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43549  00CED0  5178               	movf	(??___flmul+2)& (0+255),w,b
 43550  00CED2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43551  00CED4  5179               	movf	(??___flmul+3)& (0+255),w,b
 43552  00CED6  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43553                           
 43554                           ; BSR set to: 0
 43555  00CED8  C07B  F076         	movff	___flmul@grs,??___flmul
 43556  00CEDC  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 43557  00CEE0  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 43558  00CEE4  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 43559  00CEE8  0E19               	movlw	25
 43560  00CEEA  D005               	goto	u10180
 43561  00CEEC                     u10185:
 43562  00CEEC  90D8               	bcf	status,0,c
 43563  00CEEE  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 43564  00CEF0  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 43565  00CEF2  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 43566  00CEF4  3376               	rrcf	??___flmul& (0+255),f,b
 43567  00CEF6                     u10180:
 43568  00CEF6  2EE8               	decfsz	wreg,f,c
 43569  00CEF8  D7F9               	goto	u10185
 43570  00CEFA  5176               	movf	??___flmul& (0+255),w,b
 43571  00CEFC  2781               	addwf	___flmul@prod& (0+255),f,b
 43572  00CEFE  5177               	movf	(??___flmul+1)& (0+255),w,b
 43573  00CF00  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43574  00CF02  5178               	movf	(??___flmul+2)& (0+255),w,b
 43575  00CF04  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43576  00CF06  5179               	movf	(??___flmul+3)& (0+255),w,b
 43577  00CF08  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43578                           
 43579                           ; BSR set to: 0
 43580  00CF0A  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43581  00CF0E  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43582  00CF12  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43583  00CF16  6B7B               	clrf	___flmul@grs& (0+255),b
 43584                           
 43585                           ; BSR set to: 0
 43586  00CF18  517F               	movf	___flmul@aexp& (0+255),w,b
 43587  00CF1A  C080  F076         	movff	___flmul@bexp,??___flmul
 43588  00CF1E  6B77               	clrf	(??___flmul+1)& (0+255),b
 43589  00CF20  2776               	addwf	??___flmul& (0+255),f,b
 43590  00CF22  0E00               	movlw	0
 43591  00CF24  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 43592  00CF26  0E82               	movlw	130
 43593  00CF28  2576               	addwf	??___flmul& (0+255),w,b
 43594  00CF2A  6F85               	movwf	___flmul@temp& (0+255),b
 43595  00CF2C  0EFF               	movlw	255
 43596  00CF2E  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 43597  00CF30  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 43598  00CF32  D00F               	goto	l3524
 43599  00CF34                     
 43600                           ; BSR set to: 0
 43601                           
 43602                           ; BSR set to: 0
 43603  00CF34  90D8               	bcf	status,0,c
 43604  00CF36  3781               	rlcf	___flmul@prod& (0+255),f,b
 43605  00CF38  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 43606  00CF3A  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 43607  00CF3C  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 43608                           
 43609                           ; BSR set to: 0
 43610  00CF3E  BF7E               	btfsc	(___flmul@grs+3)& (0+255),7,b
 43611                           
 43612                           ; BSR set to: 0
 43613  00CF40  8181               	bsf	___flmul@prod& (0+255),0,b
 43614                           
 43615                           ; BSR set to: 0
 43616  00CF42  90D8               	bcf	status,0,c
 43617  00CF44  377B               	rlcf	___flmul@grs& (0+255),f,b
 43618  00CF46  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 43619  00CF48  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 43620  00CF4A  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 43621  00CF4C  0785               	decf	___flmul@temp& (0+255),f,b
 43622  00CF4E  A0D8               	btfss	status,0,c
 43623  00CF50  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 43624  00CF52                     l3524:
 43625                           
 43626                           ; BSR set to: 0
 43627                           
 43628                           ; BSR set to: 0
 43629  00CF52  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 43630  00CF54  D7EF               	goto	l3525
 43631                           
 43632                           ; BSR set to: 0
 43633                           
 43634                           ; BSR set to: 0
 43635  00CF56  0E00               	movlw	0
 43636  00CF58  6F7F               	movwf	___flmul@aexp& (0+255),b
 43637                           
 43638                           ; BSR set to: 0
 43639  00CF5A  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 43640  00CF5C  D016               	goto	l3531
 43641                           
 43642                           ; BSR set to: 0
 43643  00CF5E  0EFF               	movlw	255
 43644  00CF60  157B               	andwf	___flmul@grs& (0+255),w,b
 43645  00CF62  6F76               	movwf	??___flmul& (0+255),b
 43646  00CF64  0EFF               	movlw	255
 43647  00CF66  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 43648  00CF68  6F77               	movwf	(??___flmul+1)& (0+255),b
 43649  00CF6A  0EFF               	movlw	255
 43650  00CF6C  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 43651  00CF6E  6F78               	movwf	(??___flmul+2)& (0+255),b
 43652  00CF70  0E7F               	movlw	127
 43653  00CF72  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 43654  00CF74  6F79               	movwf	(??___flmul+3)& (0+255),b
 43655  00CF76  5176               	movf	??___flmul& (0+255),w,b
 43656  00CF78  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 43657  00CF7A  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 43658  00CF7C  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 43659  00CF7E  A4D8               	btfss	status,2,c
 43660  00CF80  D002               	goto	u10230
 43661                           
 43662                           ; BSR set to: 0
 43663                           
 43664                           ; BSR set to: 0
 43665  00CF82  A181               	btfss	___flmul@prod& (0+255),0,b
 43666  00CF84  D002               	goto	l3531
 43667  00CF86                     u10230:
 43668                           
 43669                           ; BSR set to: 0
 43670  00CF86  0E01               	movlw	1
 43671  00CF88  6F7F               	movwf	___flmul@aexp& (0+255),b
 43672  00CF8A                     l3531:
 43673                           
 43674                           ; BSR set to: 0
 43675                           
 43676                           ; BSR set to: 0
 43677                           
 43678                           ; BSR set to: 0
 43679  00CF8A  517F               	movf	___flmul@aexp& (0+255),w,b
 43680  00CF8C  B4D8               	btfsc	status,2,c
 43681  00CF8E  D01F               	goto	l3533
 43682                           
 43683                           ; BSR set to: 0
 43684  00CF90  0E01               	movlw	1
 43685  00CF92  2781               	addwf	___flmul@prod& (0+255),f,b
 43686  00CF94  0E00               	movlw	0
 43687  00CF96  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43688  00CF98  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43689  00CF9A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43690                           
 43691                           ; BSR set to: 0
 43692  00CF9C  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 43693  00CF9E  D017               	goto	l3533
 43694                           
 43695                           ; BSR set to: 0
 43696  00CFA0  C081  F076         	movff	___flmul@prod,??___flmul
 43697  00CFA4  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 43698  00CFA8  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 43699  00CFAC  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 43700  00CFB0  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 43701  00CFB2  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 43702  00CFB4  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 43703  00CFB6  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 43704  00CFB8  3376               	rrcf	??___flmul& (0+255),f,b
 43705  00CFBA  C076  F081         	movff	??___flmul,___flmul@prod
 43706  00CFBE  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 43707  00CFC2  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 43708  00CFC6  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 43709                           
 43710                           ; BSR set to: 0
 43711  00CFCA  4B85               	infsnz	___flmul@temp& (0+255),f,b
 43712  00CFCC  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 43713  00CFCE                     l3533:
 43714                           
 43715                           ; BSR set to: 0
 43716                           
 43717                           ; BSR set to: 0
 43718                           
 43719                           ; BSR set to: 0
 43720  00CFCE  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 43721  00CFD0  D00D               	goto	l3534
 43722  00CFD2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43723  00CFD4  E103               	bnz	u10260
 43724  00CFD6  2985               	incf	___flmul@temp& (0+255),w,b
 43725  00CFD8  A0D8               	btfss	status,0,c
 43726  00CFDA  D008               	goto	l3534
 43727  00CFDC                     u10260:
 43728                           
 43729                           ; BSR set to: 0
 43730  00CFDC  0E00               	movlw	0
 43731  00CFDE  6F81               	movwf	___flmul@prod& (0+255),b
 43732  00CFE0  0E00               	movlw	0
 43733  00CFE2  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 43734  00CFE4  0E80               	movlw	128
 43735  00CFE6  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 43736  00CFE8  0E7F               	movlw	127
 43737  00CFEA  D020               	goto	L66
 43738  00CFEC                     l3534:
 43739                           
 43740                           ; BSR set to: 0
 43741                           
 43742                           ; BSR set to: 0
 43743  00CFEC  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 43744  00CFEE  D005               	goto	u10270
 43745  00CFF0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43746  00CFF2  E10E               	bnz	l3536
 43747  00CFF4  0585               	decf	___flmul@temp& (0+255),w,b
 43748  00CFF6  B0D8               	btfsc	status,0,c
 43749  00CFF8  D00B               	goto	l3536
 43750  00CFFA                     u10270:
 43751                           
 43752                           ; BSR set to: 0
 43753  00CFFA  0E00               	movlw	0
 43754  00CFFC  6F81               	movwf	___flmul@prod& (0+255),b
 43755  00CFFE  0E00               	movlw	0
 43756  00D000  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 43757  00D002  0E00               	movlw	0
 43758  00D004  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 43759  00D006  0E00               	movlw	0
 43760  00D008  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 43761  00D00A  0E00               	movlw	0
 43762  00D00C  6F7A               	movwf	___flmul@sign& (0+255),b
 43763  00D00E  D00F               	goto	l3537
 43764  00D010                     l3536:
 43765                           
 43766                           ; BSR set to: 0
 43767  00D010  C085  F080         	movff	___flmul@temp,___flmul@bexp
 43768                           
 43769                           ; BSR set to: 0
 43770  00D014  0EFF               	movlw	255
 43771  00D016  1781               	andwf	___flmul@prod& (0+255),f,b
 43772  00D018  0EFF               	movlw	255
 43773  00D01A  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 43774  00D01C  0E7F               	movlw	127
 43775  00D01E  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 43776  00D020  0E00               	movlw	0
 43777  00D022  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 43778                           
 43779                           ; BSR set to: 0
 43780  00D024  B180               	btfsc	___flmul@bexp& (0+255),0,b
 43781                           
 43782                           ; BSR set to: 0
 43783  00D026  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 43784                           
 43785                           ; BSR set to: 0
 43786                           
 43787                           ; BSR set to: 0
 43788  00D028  90D8               	bcf	status,0,c
 43789  00D02A  3180               	rrcf	___flmul@bexp& (0+255),w,b
 43790  00D02C                     L66:
 43791  00D02C  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 43792  00D02E                     l3537:
 43793                           
 43794                           ; BSR set to: 0
 43795                           
 43796                           ; BSR set to: 0
 43797                           
 43798                           ; BSR set to: 0
 43799  00D02E  517A               	movf	___flmul@sign& (0+255),w,b
 43800  00D030  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 43801                           
 43802                           ; BSR set to: 0
 43803  00D032  C081  F06E         	movff	___flmul@prod,?___flmul
 43804  00D036  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 43805  00D03A  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 43806  00D03E  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 43807  00D042  0012               	return	
 43808  00D044                     __end_of___flmul:
 43809                           	opt stack 0
 43810                           tosu	equ	0xFFF
 43811                           tosh	equ	0xFFE
 43812                           tosl	equ	0xFFD
 43813                           pclath	equ	0xFFA
 43814                           tblptru	equ	0xFF8
 43815                           tblptrh	equ	0xFF7
 43816                           tblptrl	equ	0xFF6
 43817                           tablat	equ	0xFF5
 43818                           prodh	equ	0xFF4
 43819                           prodl	equ	0xFF3
 43820                           intcon	equ	0xFF2
 43821                           indf0	equ	0xFEF
 43822                           postinc0	equ	0xFEE
 43823                           fsr0h	equ	0xFEA
 43824                           fsr0l	equ	0xFE9
 43825                           wreg	equ	0xFE8
 43826                           indf1	equ	0xFE7
 43827                           postinc1	equ	0xFE6
 43828                           postdec1	equ	0xFE5
 43829                           plusw1	equ	0xFE3
 43830                           fsr1h	equ	0xFE2
 43831                           fsr1l	equ	0xFE1
 43832                           indf2	equ	0xFDF
 43833                           postinc2	equ	0xFDE
 43834                           postdec2	equ	0xFDD
 43835                           plusw2	equ	0xFDB
 43836                           fsr2h	equ	0xFDA
 43837                           fsr2l	equ	0xFD9
 43838                           status	equ	0xFD8
 43839                           
 43840 ;; *************** function ___fldiv *****************
 43841 ;; Defined at:
 43842 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 43843 ;; Parameters:    Size  Location     Type
 43844 ;;  b               4   14[BANK0 ] unsigned char 
 43845 ;;  a               4   18[BANK0 ] unsigned char 
 43846 ;; Auto vars:     Size  Location     Type
 43847 ;;  grs             4   33[BANK0 ] unsigned long 
 43848 ;;  rem             4   26[BANK0 ] unsigned long 
 43849 ;;  new_exp         2   31[BANK0 ] int 
 43850 ;;  aexp            1   38[BANK0 ] unsigned char 
 43851 ;;  bexp            1   37[BANK0 ] unsigned char 
 43852 ;;  sign            1   30[BANK0 ] unsigned char 
 43853 ;; Return value:  Size  Location     Type
 43854 ;;                  4   14[BANK0 ] unsigned char 
 43855 ;; Registers used:
 43856 ;;		wreg, status,2, status,0
 43857 ;; Tracked objects:
 43858 ;;		On entry : 0/0
 43859 ;;		On exit  : 0/0
 43860 ;;		Unchanged: 0/0
 43861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43862 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43863 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43864 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43865 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43866 ;;Total ram usage:       25 bytes
 43867 ;; Hardware stack levels used:    1
 43868 ;; Hardware stack levels required when called:   10
 43869 ;; This function calls:
 43870 ;;		Nothing
 43871 ;; This function is called by:
 43872 ;;		_motor_steps_from_degrees
 43873 ;;		_motor_calculate_position_in_degrees
 43874 ;;		__motor_get_speed_in_degrees
 43875 ;;		__step_position_from_divide_position
 43876 ;;		_motor_divide_jump_to_nearest
 43877 ;;		_motor_arc_move
 43878 ;;		_motor_go_to_degrees_position
 43879 ;; This function uses a non-reentrant model
 43880 ;;
 43881                           
 43882                           	psect	text177
 43883  00DC4E                     __ptext177:
 43884                           	opt stack 0
 43885  00DC4E                     ___fldiv:
 43886                           	opt stack 18
 43887                           
 43888                           ; BSR set to: 0
 43889                           ;incstack = 0
 43890  00DC4E  0100               	movlb	0	; () banked
 43891  00DC50  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 43892  00DC52  0B80               	andlw	128
 43893  00DC54  6F7E               	movwf	___fldiv@sign& (0+255),b
 43894  00DC56  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 43895  00DC58  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 43896  00DC5A  6F85               	movwf	___fldiv@bexp& (0+255),b
 43897                           
 43898                           ; BSR set to: 0
 43899  00DC5C  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 43900                           
 43901                           ; BSR set to: 0
 43902  00DC5E  8185               	bsf	___fldiv@bexp& (0+255),0,b
 43903                           
 43904                           ; BSR set to: 0
 43905                           
 43906                           ; BSR set to: 0
 43907  00DC60  5185               	movf	___fldiv@bexp& (0+255),w,b
 43908  00DC62  B4D8               	btfsc	status,2,c
 43909  00DC64  D00D               	goto	l3479
 43910                           
 43911                           ; BSR set to: 0
 43912  00DC66  2985               	incf	___fldiv@bexp& (0+255),w,b
 43913  00DC68  A4D8               	btfss	status,2,c
 43914  00DC6A  D008               	goto	l3480
 43915                           
 43916                           ; BSR set to: 0
 43917  00DC6C  0E00               	movlw	0
 43918  00DC6E  6F6E               	movwf	___fldiv@b& (0+255),b
 43919  00DC70  0E00               	movlw	0
 43920  00DC72  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 43921  00DC74  0E00               	movlw	0
 43922  00DC76  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 43923  00DC78  0E00               	movlw	0
 43924  00DC7A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 43925  00DC7C                     l3480:
 43926                           
 43927                           ; BSR set to: 0
 43928                           
 43929                           ; BSR set to: 0
 43930  00DC7C  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 43931  00DC7E  D006               	goto	L67
 43932  00DC80                     l3479:
 43933                           
 43934                           ; BSR set to: 0
 43935                           
 43936                           ; BSR set to: 0
 43937  00DC80  0E00               	movlw	0
 43938  00DC82  6F6E               	movwf	___fldiv@b& (0+255),b
 43939  00DC84  0E00               	movlw	0
 43940  00DC86  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 43941  00DC88  0E00               	movlw	0
 43942  00DC8A  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 43943  00DC8C                     L67:
 43944  00DC8C  0E00               	movlw	0
 43945  00DC8E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 43946                           
 43947                           ; BSR set to: 0
 43948                           
 43949                           ; BSR set to: 0
 43950  00DC90  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 43951  00DC92  0B80               	andlw	128
 43952  00DC94  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 43953                           
 43954                           ; BSR set to: 0
 43955  00DC96  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 43956  00DC98  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 43957  00DC9A  6F86               	movwf	___fldiv@aexp& (0+255),b
 43958                           
 43959                           ; BSR set to: 0
 43960  00DC9C  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 43961                           
 43962                           ; BSR set to: 0
 43963  00DC9E  8186               	bsf	___fldiv@aexp& (0+255),0,b
 43964                           
 43965                           ; BSR set to: 0
 43966                           
 43967                           ; BSR set to: 0
 43968  00DCA0  5186               	movf	___fldiv@aexp& (0+255),w,b
 43969  00DCA2  B4D8               	btfsc	status,2,c
 43970  00DCA4  D00D               	goto	l3483
 43971                           
 43972                           ; BSR set to: 0
 43973  00DCA6  2986               	incf	___fldiv@aexp& (0+255),w,b
 43974  00DCA8  A4D8               	btfss	status,2,c
 43975  00DCAA  D008               	goto	l3484
 43976                           
 43977                           ; BSR set to: 0
 43978  00DCAC  0E00               	movlw	0
 43979  00DCAE  6F72               	movwf	___fldiv@a& (0+255),b
 43980  00DCB0  0E00               	movlw	0
 43981  00DCB2  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 43982  00DCB4  0E00               	movlw	0
 43983  00DCB6  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 43984  00DCB8  0E00               	movlw	0
 43985  00DCBA  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 43986  00DCBC                     l3484:
 43987                           
 43988                           ; BSR set to: 0
 43989                           
 43990                           ; BSR set to: 0
 43991  00DCBC  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 43992  00DCBE  D006               	goto	L68
 43993  00DCC0                     l3483:
 43994                           
 43995                           ; BSR set to: 0
 43996                           
 43997                           ; BSR set to: 0
 43998  00DCC0  0E00               	movlw	0
 43999  00DCC2  6F72               	movwf	___fldiv@a& (0+255),b
 44000  00DCC4  0E00               	movlw	0
 44001  00DCC6  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44002  00DCC8  0E00               	movlw	0
 44003  00DCCA  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44004  00DCCC                     L68:
 44005  00DCCC  0E00               	movlw	0
 44006  00DCCE  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44007                           
 44008                           ; BSR set to: 0
 44009                           
 44010                           ; BSR set to: 0
 44011  00DCD0  5172               	movf	___fldiv@a& (0+255),w,b
 44012  00DCD2  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 44013  00DCD4  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 44014  00DCD6  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 44015  00DCD8  A4D8               	btfss	status,2,c
 44016  00DCDA  D017               	goto	l3486
 44017                           
 44018                           ; BSR set to: 0
 44019  00DCDC  0E00               	movlw	0
 44020  00DCDE  6F6E               	movwf	___fldiv@b& (0+255),b
 44021  00DCE0  0E00               	movlw	0
 44022  00DCE2  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44023  00DCE4  0E00               	movlw	0
 44024  00DCE6  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44025  00DCE8  0E00               	movlw	0
 44026  00DCEA  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44027                           
 44028                           ; BSR set to: 0
 44029  00DCEC  0E80               	movlw	128
 44030  00DCEE  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 44031  00DCF0  0E7F               	movlw	127
 44032  00DCF2  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44033                           
 44034                           ; BSR set to: 0
 44035  00DCF4  517E               	movf	___fldiv@sign& (0+255),w,b
 44036  00DCF6  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44037                           
 44038                           ; BSR set to: 0
 44039  00DCF8  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44040  00DCFC  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44041  00DD00  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44042  00DD04  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44043                           
 44044                           ; BSR set to: 0
 44045  00DD08  0012               	return	
 44046  00DD0A                     l3486:
 44047                           
 44048                           ; BSR set to: 0
 44049                           
 44050                           ; BSR set to: 0
 44051  00DD0A  5185               	movf	___fldiv@bexp& (0+255),w,b
 44052  00DD0C  A4D8               	btfss	status,2,c
 44053  00DD0E  D011               	goto	l3488
 44054                           
 44055                           ; BSR set to: 0
 44056  00DD10  0E00               	movlw	0
 44057  00DD12  6F6E               	movwf	___fldiv@b& (0+255),b
 44058  00DD14  0E00               	movlw	0
 44059  00DD16  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44060  00DD18  0E00               	movlw	0
 44061  00DD1A  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44062  00DD1C  0E00               	movlw	0
 44063  00DD1E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44064                           
 44065                           ; BSR set to: 0
 44066  00DD20  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44067  00DD24  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44068  00DD28  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44069  00DD2C  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44070                           
 44071                           ; BSR set to: 0
 44072  00DD30  0012               	return	
 44073  00DD32                     l3488:
 44074                           
 44075                           ; BSR set to: 0
 44076                           
 44077                           ; BSR set to: 0
 44078  00DD32  5186               	movf	___fldiv@aexp& (0+255),w,b
 44079  00DD34  6F76               	movwf	??___fldiv& (0+255),b
 44080  00DD36  6B77               	clrf	(??___fldiv+1)& (0+255),b
 44081  00DD38  1F76               	comf	??___fldiv& (0+255),f,b
 44082  00DD3A  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 44083  00DD3C  4B76               	infsnz	??___fldiv& (0+255),f,b
 44084  00DD3E  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 44085  00DD40  5185               	movf	___fldiv@bexp& (0+255),w,b
 44086  00DD42  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44087  00DD44  6B79               	clrf	(??___fldiv+3)& (0+255),b
 44088  00DD46  5176               	movf	??___fldiv& (0+255),w,b
 44089  00DD48  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 44090  00DD4A  5177               	movf	(??___fldiv+1)& (0+255),w,b
 44091  00DD4C  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 44092  00DD4E  0E7F               	movlw	127
 44093  00DD50  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 44094  00DD52  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44095  00DD54  0E00               	movlw	0
 44096  00DD56  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 44097  00DD58  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44098                           
 44099                           ; BSR set to: 0
 44100  00DD5A  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 44101  00DD5E  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 44102  00DD62  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 44103  00DD66  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 44104                           
 44105                           ; BSR set to: 0
 44106  00DD6A  0E00               	movlw	0
 44107  00DD6C  6F6E               	movwf	___fldiv@b& (0+255),b
 44108  00DD6E  0E00               	movlw	0
 44109  00DD70  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44110  00DD72  0E00               	movlw	0
 44111  00DD74  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44112  00DD76  0E00               	movlw	0
 44113  00DD78  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44114                           
 44115                           ; BSR set to: 0
 44116  00DD7A  0E00               	movlw	0
 44117  00DD7C  6F81               	movwf	___fldiv@grs& (0+255),b
 44118  00DD7E  0E00               	movlw	0
 44119  00DD80  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 44120  00DD82  0E00               	movlw	0
 44121  00DD84  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 44122  00DD86  0E00               	movlw	0
 44123  00DD88  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 44124                           
 44125                           ; BSR set to: 0
 44126  00DD8A  0E00               	movlw	0
 44127  00DD8C  6F86               	movwf	___fldiv@aexp& (0+255),b
 44128  00DD8E  D028               	goto	l3489
 44129  00DD90                     
 44130                           ; BSR set to: 0
 44131                           
 44132                           ; BSR set to: 0
 44133  00DD90  5186               	movf	___fldiv@aexp& (0+255),w,b
 44134  00DD92  B4D8               	btfsc	status,2,c
 44135  00DD94  D011               	goto	l3491
 44136                           
 44137                           ; BSR set to: 0
 44138  00DD96  90D8               	bcf	status,0,c
 44139  00DD98  377A               	rlcf	___fldiv@rem& (0+255),f,b
 44140  00DD9A  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 44141  00DD9C  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 44142  00DD9E  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 44143  00DDA0  90D8               	bcf	status,0,c
 44144  00DDA2  376E               	rlcf	___fldiv@b& (0+255),f,b
 44145  00DDA4  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44146  00DDA6  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44147  00DDA8  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44148                           
 44149                           ; BSR set to: 0
 44150  00DDAA  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44151                           
 44152                           ; BSR set to: 0
 44153  00DDAC  816E               	bsf	___fldiv@b& (0+255),0,b
 44154                           
 44155                           ; BSR set to: 0
 44156  00DDAE  90D8               	bcf	status,0,c
 44157  00DDB0  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44158  00DDB2  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44159  00DDB4  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44160  00DDB6  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44161  00DDB8                     l3491:
 44162                           
 44163                           ; BSR set to: 0
 44164                           
 44165                           ; BSR set to: 0
 44166  00DDB8  5172               	movf	___fldiv@a& (0+255),w,b
 44167  00DDBA  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 44168  00DDBC  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44169  00DDBE  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 44170  00DDC0  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44171  00DDC2  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 44172  00DDC4  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44173  00DDC6  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 44174  00DDC8  A0D8               	btfss	status,0,c
 44175  00DDCA  D009               	goto	l3493
 44176                           
 44177                           ; BSR set to: 0
 44178  00DDCC  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 44179                           
 44180                           ; BSR set to: 0
 44181  00DDCE  5172               	movf	___fldiv@a& (0+255),w,b
 44182  00DDD0  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 44183  00DDD2  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44184  00DDD4  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 44185  00DDD6  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44186  00DDD8  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 44187  00DDDA  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44188  00DDDC  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 44189  00DDDE                     l3493:
 44190                           
 44191                           ; BSR set to: 0
 44192                           
 44193                           ; BSR set to: 0
 44194  00DDDE  2B86               	incf	___fldiv@aexp& (0+255),f,b
 44195  00DDE0                     l3489:
 44196                           
 44197                           ; BSR set to: 0
 44198  00DDE0  0E19               	movlw	25
 44199  00DDE2  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 44200  00DDE4  D7D5               	goto	l3490
 44201                           
 44202                           ; BSR set to: 0
 44203                           
 44204                           ; BSR set to: 0
 44205  00DDE6  517A               	movf	___fldiv@rem& (0+255),w,b
 44206  00DDE8  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 44207  00DDEA  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 44208  00DDEC  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 44209  00DDEE  B4D8               	btfsc	status,2,c
 44210  00DDF0  D011               	goto	l3496
 44211                           
 44212                           ; BSR set to: 0
 44213  00DDF2  8181               	bsf	___fldiv@grs& (0+255),0,b
 44214                           
 44215                           ; BSR set to: 0
 44216  00DDF4  D00F               	goto	l3496
 44217  00DDF6                     
 44218                           ; BSR set to: 0
 44219                           
 44220                           ; BSR set to: 0
 44221  00DDF6  90D8               	bcf	status,0,c
 44222  00DDF8  376E               	rlcf	___fldiv@b& (0+255),f,b
 44223  00DDFA  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44224  00DDFC  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44225  00DDFE  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44226                           
 44227                           ; BSR set to: 0
 44228  00DE00  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44229                           
 44230                           ; BSR set to: 0
 44231  00DE02  816E               	bsf	___fldiv@b& (0+255),0,b
 44232                           
 44233                           ; BSR set to: 0
 44234  00DE04  90D8               	bcf	status,0,c
 44235  00DE06  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44236  00DE08  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44237  00DE0A  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44238  00DE0C  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44239  00DE0E  077F               	decf	___fldiv@new_exp& (0+255),f,b
 44240  00DE10  A0D8               	btfss	status,0,c
 44241  00DE12  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 44242  00DE14                     l3496:
 44243                           
 44244                           ; BSR set to: 0
 44245                           
 44246                           ; BSR set to: 0
 44247  00DE14  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 44248  00DE16  D7EF               	goto	l3497
 44249                           
 44250                           ; BSR set to: 0
 44251                           
 44252                           ; BSR set to: 0
 44253  00DE18  0E00               	movlw	0
 44254  00DE1A  6F86               	movwf	___fldiv@aexp& (0+255),b
 44255                           
 44256                           ; BSR set to: 0
 44257  00DE1C  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 44258  00DE1E  D016               	goto	l3503
 44259                           
 44260                           ; BSR set to: 0
 44261  00DE20  0EFF               	movlw	255
 44262  00DE22  1581               	andwf	___fldiv@grs& (0+255),w,b
 44263  00DE24  6F76               	movwf	??___fldiv& (0+255),b
 44264  00DE26  0EFF               	movlw	255
 44265  00DE28  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 44266  00DE2A  6F77               	movwf	(??___fldiv+1)& (0+255),b
 44267  00DE2C  0EFF               	movlw	255
 44268  00DE2E  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 44269  00DE30  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44270  00DE32  0E7F               	movlw	127
 44271  00DE34  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 44272  00DE36  6F79               	movwf	(??___fldiv+3)& (0+255),b
 44273  00DE38  5176               	movf	??___fldiv& (0+255),w,b
 44274  00DE3A  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 44275  00DE3C  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 44276  00DE3E  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 44277  00DE40  A4D8               	btfss	status,2,c
 44278  00DE42  D002               	goto	u10040
 44279                           
 44280                           ; BSR set to: 0
 44281                           
 44282                           ; BSR set to: 0
 44283  00DE44  A16E               	btfss	___fldiv@b& (0+255),0,b
 44284  00DE46  D002               	goto	l3503
 44285  00DE48                     u10040:
 44286                           
 44287                           ; BSR set to: 0
 44288  00DE48  0E01               	movlw	1
 44289  00DE4A  6F86               	movwf	___fldiv@aexp& (0+255),b
 44290  00DE4C                     l3503:
 44291                           
 44292                           ; BSR set to: 0
 44293                           
 44294                           ; BSR set to: 0
 44295                           
 44296                           ; BSR set to: 0
 44297  00DE4C  5186               	movf	___fldiv@aexp& (0+255),w,b
 44298  00DE4E  B4D8               	btfsc	status,2,c
 44299  00DE50  D01F               	goto	l3505
 44300                           
 44301                           ; BSR set to: 0
 44302  00DE52  0E01               	movlw	1
 44303  00DE54  276E               	addwf	___fldiv@b& (0+255),f,b
 44304  00DE56  0E00               	movlw	0
 44305  00DE58  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 44306  00DE5A  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 44307  00DE5C  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 44308                           
 44309                           ; BSR set to: 0
 44310  00DE5E  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 44311  00DE60  D017               	goto	l3505
 44312                           
 44313                           ; BSR set to: 0
 44314  00DE62  C06E  F076         	movff	___fldiv@b,??___fldiv
 44315  00DE66  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 44316  00DE6A  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 44317  00DE6E  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 44318  00DE72  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 44319  00DE74  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 44320  00DE76  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 44321  00DE78  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 44322  00DE7A  3376               	rrcf	??___fldiv& (0+255),f,b
 44323  00DE7C  C076  F06E         	movff	??___fldiv,___fldiv@b
 44324  00DE80  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 44325  00DE84  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 44326  00DE88  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 44327                           
 44328                           ; BSR set to: 0
 44329  00DE8C  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 44330  00DE8E  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 44331  00DE90                     l3505:
 44332                           
 44333                           ; BSR set to: 0
 44334                           
 44335                           ; BSR set to: 0
 44336                           
 44337                           ; BSR set to: 0
 44338  00DE90  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 44339  00DE92  D010               	goto	l3506
 44340  00DE94  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 44341  00DE96  E103               	bnz	u10070
 44342  00DE98  297F               	incf	___fldiv@new_exp& (0+255),w,b
 44343  00DE9A  A0D8               	btfss	status,0,c
 44344  00DE9C  D00B               	goto	l3506
 44345  00DE9E                     u10070:
 44346                           
 44347                           ; BSR set to: 0
 44348  00DE9E  0E00               	movlw	0
 44349  00DEA0  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44350  00DEA2  697F               	setf	___fldiv@new_exp& (0+255),b
 44351  00DEA4  0E00               	movlw	0
 44352  00DEA6  6F6E               	movwf	___fldiv@b& (0+255),b
 44353  00DEA8  0E00               	movlw	0
 44354  00DEAA  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44355  00DEAC  0E00               	movlw	0
 44356  00DEAE  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44357  00DEB0  0E00               	movlw	0
 44358  00DEB2  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44359  00DEB4                     l3506:
 44360                           
 44361                           ; BSR set to: 0
 44362                           
 44363                           ; BSR set to: 0
 44364  00DEB4  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 44365  00DEB6  D005               	goto	u10080
 44366  00DEB8  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 44367  00DEBA  E111               	bnz	l11997
 44368  00DEBC  057F               	decf	___fldiv@new_exp& (0+255),w,b
 44369  00DEBE  B0D8               	btfsc	status,0,c
 44370  00DEC0  D00E               	goto	l3507
 44371  00DEC2                     u10080:
 44372                           
 44373                           ; BSR set to: 0
 44374  00DEC2  0E00               	movlw	0
 44375  00DEC4  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44376  00DEC6  0E00               	movlw	0
 44377  00DEC8  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44378  00DECA  0E00               	movlw	0
 44379  00DECC  6F6E               	movwf	___fldiv@b& (0+255),b
 44380  00DECE  0E00               	movlw	0
 44381  00DED0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44382  00DED2  0E00               	movlw	0
 44383  00DED4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44384  00DED6  0E00               	movlw	0
 44385  00DED8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44386  00DEDA  0E00               	movlw	0
 44387  00DEDC  6F7E               	movwf	___fldiv@sign& (0+255),b
 44388  00DEDE                     l3507:
 44389  00DEDE                     l11997:
 44390                           
 44391                           ; BSR set to: 0
 44392  00DEDE  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 44393                           
 44394                           ; BSR set to: 0
 44395  00DEE2  A185               	btfss	___fldiv@bexp& (0+255),0,b
 44396  00DEE4  D002               	goto	l3508
 44397                           
 44398                           ; BSR set to: 0
 44399  00DEE6  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 44400  00DEE8  D001               	goto	l3509
 44401  00DEEA                     l3508:
 44402                           
 44403                           ; BSR set to: 0
 44404                           
 44405                           ; BSR set to: 0
 44406  00DEEA  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 44407  00DEEC                     l3509:
 44408                           
 44409                           ; BSR set to: 0
 44410                           
 44411                           ; BSR set to: 0
 44412  00DEEC  90D8               	bcf	status,0,c
 44413  00DEEE  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 44414  00DEF0  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44415                           
 44416                           ; BSR set to: 0
 44417  00DEF2  517E               	movf	___fldiv@sign& (0+255),w,b
 44418  00DEF4  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44419                           
 44420                           ; BSR set to: 0
 44421  00DEF6  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44422  00DEFA  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44423  00DEFE  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44424  00DF02  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44425  00DF06  0012               	return	
 44426  00DF08                     __end_of___fldiv:
 44427                           	opt stack 0
 44428                           tosu	equ	0xFFF
 44429                           tosh	equ	0xFFE
 44430                           tosl	equ	0xFFD
 44431                           pclath	equ	0xFFA
 44432                           tblptru	equ	0xFF8
 44433                           tblptrh	equ	0xFF7
 44434                           tblptrl	equ	0xFF6
 44435                           tablat	equ	0xFF5
 44436                           prodh	equ	0xFF4
 44437                           prodl	equ	0xFF3
 44438                           intcon	equ	0xFF2
 44439                           indf0	equ	0xFEF
 44440                           postinc0	equ	0xFEE
 44441                           fsr0h	equ	0xFEA
 44442                           fsr0l	equ	0xFE9
 44443                           wreg	equ	0xFE8
 44444                           indf1	equ	0xFE7
 44445                           postinc1	equ	0xFE6
 44446                           postdec1	equ	0xFE5
 44447                           plusw1	equ	0xFE3
 44448                           fsr1h	equ	0xFE2
 44449                           fsr1l	equ	0xFE1
 44450                           indf2	equ	0xFDF
 44451                           postinc2	equ	0xFDE
 44452                           postdec2	equ	0xFDD
 44453                           plusw2	equ	0xFDB
 44454                           fsr2h	equ	0xFDA
 44455                           fsr2l	equ	0xFD9
 44456                           status	equ	0xFD8
 44457                           
 44458 ;; *************** function _USBTransferOnePacket *****************
 44459 ;; Defined at:
 44460 ;;		line 995 in file "usb_device.c"
 44461 ;; Parameters:    Size  Location     Type
 44462 ;;  ep              1    wreg     unsigned char 
 44463 ;;  dir             1    0[BANK0 ] unsigned char 
 44464 ;;  data            2    1[BANK0 ] PTR unsigned char 
 44465 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 44466 ;;		 -> msd_cbw(31), NULL(0), 
 44467 ;;  len             1    3[BANK0 ] unsigned char 
 44468 ;; Auto vars:     Size  Location     Type
 44469 ;;  ep              1    8[BANK0 ] unsigned char 
 44470 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 44471 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 44472 ;; Return value:  Size  Location     Type
 44473 ;;                  2    0[BANK0 ] PTR void 
 44474 ;; Registers used:
 44475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44476 ;; Tracked objects:
 44477 ;;		On entry : 0/0
 44478 ;;		On exit  : 0/0
 44479 ;;		Unchanged: 0/0
 44480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44482 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44483 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44484 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44485 ;;Total ram usage:       11 bytes
 44486 ;; Hardware stack levels used:    1
 44487 ;; Hardware stack levels required when called:   10
 44488 ;; This function calls:
 44489 ;;		Nothing
 44490 ;; This function is called by:
 44491 ;;		_MSDTasks
 44492 ;;		_MSDProcessCommandMediaPresent
 44493 ;;		_MSDReadHandler
 44494 ;;		_MSDWriteHandler
 44495 ;;		_APP_DeviceCustomHIDTasks
 44496 ;; This function uses a non-reentrant model
 44497 ;;
 44498                           
 44499                           	psect	text178
 44500  011060                     __ptext178:
 44501                           	opt stack 0
 44502  011060                     _USBTransferOnePacket:
 44503                           	opt stack 18
 44504                           
 44505                           ; BSR set to: 0
 44506                           ;incstack = 0
 44507                           ;USBTransferOnePacket@ep stored from wreg
 44508  011060  0100               	movlb	0	; () banked
 44509  011062  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 44510                           
 44511                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 44512  011064  0100               	movlb	0	; () banked
 44513  011066  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44514  011068  B4D8               	btfsc	status,2,c
 44515  01106A  D007               	goto	l184
 44516                           
 44517                           ; BSR set to: 0
 44518                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 44519  01106C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44520  01106E  0D02               	mullw	2
 44521  011070  0E1B               	movlw	low _pBDTEntryIn
 44522  011072  24F3               	addwf	prodl,w,c
 44523  011074  6ED9               	movwf	fsr2l,c
 44524  011076  0E01               	movlw	high _pBDTEntryIn
 44525  011078  D006               	goto	L69
 44526  01107A                     l184:
 44527                           
 44528                           ; BSR set to: 0
 44529                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 44530                           
 44531                           ; BSR set to: 0
 44532  01107A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44533  01107C  0D02               	mullw	2
 44534  01107E  0E21               	movlw	low _pBDTEntryOut
 44535  011080  24F3               	addwf	prodl,w,c
 44536  011082  6ED9               	movwf	fsr2l,c
 44537  011084  0E01               	movlw	high _pBDTEntryOut
 44538  011086                     L69:
 44539  011086  20F4               	addwfc	prodh,w,c
 44540  011088  6EDA               	movwf	fsr2h,c
 44541  01108A  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 44542  01108E  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 44543                           
 44544                           ; BSR set to: 0
 44545                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 44546                           
 44547                           ; BSR set to: 0
 44548  011092  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44549  011094  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44550  011096  A4D8               	btfss	status,2,c
 44551  011098  D005               	goto	l186
 44552                           
 44553                           ; BSR set to: 0
 44554                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 44555  01109A  0E00               	movlw	0
 44556  01109C  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 44557  01109E  0E00               	movlw	0
 44558  0110A0  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 44559                           
 44560                           ; BSR set to: 0
 44561  0110A2  0012               	return	
 44562  0110A4                     l186:
 44563                           
 44564                           ; BSR set to: 0
 44565                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44566                           
 44567                           ; BSR set to: 0
 44568  0110A4  EE20 F002          	lfsr	2,2
 44569  0110A8  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44570  0110AA  26D9               	addwf	fsr2l,f,c
 44571  0110AC  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44572  0110AE  22DA               	addwfc	fsr2h,f,c
 44573  0110B0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44574  0110B4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44575                           
 44576                           ;usb_device.c: 1030: handle->CNT = len;
 44577  0110B8  EE20 F001          	lfsr	2,1
 44578  0110BC  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44579  0110BE  26D9               	addwf	fsr2l,f,c
 44580  0110C0  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44581  0110C2  22DA               	addwfc	fsr2h,f,c
 44582  0110C4  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 44583                           
 44584                           ; BSR set to: 0
 44585                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44586  0110C8  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44587  0110CC  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44588  0110D0  0E40               	movlw	64
 44589  0110D2  16DF               	andwf	indf2,f,c
 44590                           
 44591                           ; BSR set to: 0
 44592                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44593  0110D4  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44594  0110D8  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44595  0110DC  0E00               	movlw	0
 44596  0110DE  86DB               	bsf	plusw2,3,c
 44597                           
 44598                           ; BSR set to: 0
 44599                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44600  0110E0  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44601  0110E4  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44602  0110E8  0E00               	movlw	0
 44603  0110EA  8EDB               	bsf	plusw2,7,c
 44604                           
 44605                           ; BSR set to: 0
 44606                           ;usb_device.c: 1036: if(dir != 0)
 44607  0110EC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44608  0110EE  B4D8               	btfsc	status,2,c
 44609  0110F0  D018               	goto	l188
 44610                           
 44611                           ; BSR set to: 0
 44612                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 44613  0110F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44614  0110F4  0D02               	mullw	2
 44615  0110F6  0E1B               	movlw	low _pBDTEntryIn
 44616  0110F8  24F3               	addwf	prodl,w,c
 44617  0110FA  6ED9               	movwf	fsr2l,c
 44618  0110FC  0E01               	movlw	high _pBDTEntryIn
 44619  0110FE  20F4               	addwfc	prodh,w,c
 44620  011100  6EDA               	movwf	fsr2h,c
 44621  011102  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44622  011106  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44623  01110A  0E04               	movlw	4
 44624  01110C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44625  01110E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44626  011110  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44627  011112  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44628  011114  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44629  011116  0D02               	mullw	2
 44630  011118  0E1B               	movlw	low _pBDTEntryIn
 44631  01111A  24F3               	addwf	prodl,w,c
 44632  01111C  6ED9               	movwf	fsr2l,c
 44633  01111E  0E01               	movlw	high _pBDTEntryIn
 44634  011120  D017               	goto	L70
 44635  011122                     l188:
 44636                           
 44637                           ; BSR set to: 0
 44638                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 44639                           
 44640                           ; BSR set to: 0
 44641  011122  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44642  011124  0D02               	mullw	2
 44643  011126  0E21               	movlw	low _pBDTEntryOut
 44644  011128  24F3               	addwf	prodl,w,c
 44645  01112A  6ED9               	movwf	fsr2l,c
 44646  01112C  0E01               	movlw	high _pBDTEntryOut
 44647  01112E  20F4               	addwfc	prodh,w,c
 44648  011130  6EDA               	movwf	fsr2h,c
 44649  011132  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44650  011136  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44651  01113A  0E04               	movlw	4
 44652  01113C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44653  01113E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44654  011140  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44655  011142  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44656  011144  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44657  011146  0D02               	mullw	2
 44658  011148  0E21               	movlw	low _pBDTEntryOut
 44659  01114A  24F3               	addwf	prodl,w,c
 44660  01114C  6ED9               	movwf	fsr2l,c
 44661  01114E  0E01               	movlw	high _pBDTEntryOut
 44662  011150                     L70:
 44663  011150  20F4               	addwfc	prodh,w,c
 44664  011152  6EDA               	movwf	fsr2h,c
 44665  011154  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 44666  011158  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 44667                           
 44668                           ; BSR set to: 0
 44669                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 44670                           
 44671                           ; BSR set to: 0
 44672  01115C  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 44673  011160  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 44674  011164  0012               	return	
 44675  011166                     __end_of_USBTransferOnePacket:
 44676                           	opt stack 0
 44677                           tosu	equ	0xFFF
 44678                           tosh	equ	0xFFE
 44679                           tosl	equ	0xFFD
 44680                           pclath	equ	0xFFA
 44681                           tblptru	equ	0xFF8
 44682                           tblptrh	equ	0xFF7
 44683                           tblptrl	equ	0xFF6
 44684                           tablat	equ	0xFF5
 44685                           prodh	equ	0xFF4
 44686                           prodl	equ	0xFF3
 44687                           intcon	equ	0xFF2
 44688                           indf0	equ	0xFEF
 44689                           postinc0	equ	0xFEE
 44690                           fsr0h	equ	0xFEA
 44691                           fsr0l	equ	0xFE9
 44692                           wreg	equ	0xFE8
 44693                           indf1	equ	0xFE7
 44694                           postinc1	equ	0xFE6
 44695                           postdec1	equ	0xFE5
 44696                           plusw1	equ	0xFE3
 44697                           fsr1h	equ	0xFE2
 44698                           fsr1l	equ	0xFE1
 44699                           indf2	equ	0xFDF
 44700                           postinc2	equ	0xFDE
 44701                           postdec2	equ	0xFDD
 44702                           plusw2	equ	0xFDB
 44703                           fsr2h	equ	0xFDA
 44704                           fsr2l	equ	0xFD9
 44705                           status	equ	0xFD8
 44706                           
 44707 ;; *************** function _SYS_InterruptHigh *****************
 44708 ;; Defined at:
 44709 ;;		line 162 in file "system.c"
 44710 ;; Parameters:    Size  Location     Type
 44711 ;;		None
 44712 ;; Auto vars:     Size  Location     Type
 44713 ;;		None
 44714 ;; Return value:  Size  Location     Type
 44715 ;;                  1    wreg      void 
 44716 ;; Registers used:
 44717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 44718 ;; Tracked objects:
 44719 ;;		On entry : 0/0
 44720 ;;		On exit  : 0/0
 44721 ;;		Unchanged: 0/0
 44722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44725 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44726 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44727 ;;Total ram usage:       14 bytes
 44728 ;; Hardware stack levels used:    1
 44729 ;; Hardware stack levels required when called:    9
 44730 ;; This function calls:
 44731 ;;		_USBDeviceTasks
 44732 ;;		_motor_isr
 44733 ;;		_tmr0_isr
 44734 ;; This function is called by:
 44735 ;;		Interrupt level 2
 44736 ;; This function uses a non-reentrant model
 44737 ;;
 44738                           
 44739                           	psect	intcode
 44740  009008                     __pintcode:
 44741                           	opt stack 0
 44742  009008                     _SYS_InterruptHigh:
 44743                           	opt stack 9
 44744                           
 44745                           ; BSR set to: 0
 44746                           ;incstack = 0
 44747  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 44748  00900A  CFFA F044          	movff	pclath,??_SYS_InterruptHigh
 44749  00900E  CFFB F045          	movff	pclatu,??_SYS_InterruptHigh+1
 44750  009012  CFE9 F046          	movff	fsr0l,??_SYS_InterruptHigh+2
 44751  009016  CFEA F047          	movff	fsr0h,??_SYS_InterruptHigh+3
 44752  00901A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh+4
 44753  00901E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+5
 44754  009022  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+6
 44755  009026  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+7
 44756  00902A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+8
 44757  00902E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+9
 44758  009032  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+10
 44759  009036  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+11
 44760  00903A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+12
 44761  00903E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+13
 44762                           
 44763                           ;system.c: 165: USBDeviceTasks();
 44764  009042  EC17  F080         	call	_USBDeviceTasks	;wreg free
 44765                           
 44766                           ;system.c: 169: if(PIR1bits.TMR2IF)
 44767  009046  B29E               	btfsc	3998,1,c	;volatile
 44768                           
 44769                           ;system.c: 170: {;system.c: 171: motor_isr();
 44770  009048  EC59  F05C         	call	_motor_isr	;wreg free
 44771                           
 44772                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 44773  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 44774                           
 44775                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 44776  00904E  EC08  F0A8         	call	_tmr0_isr	;wreg free
 44777  009052  C051  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 44778  009056  C050  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 44779  00905A  C04F  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 44780  00905E  C04E  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 44781  009062  C04D  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 44782  009066  C04C  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 44783  00906A  C04B  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 44784  00906E  C04A  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 44785  009072  C049  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 44786  009076  C048  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 44787  00907A  C047  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 44788  00907E  C046  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 44789  009082  C045  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 44790  009086  C044  FFFA         	movff	??_SYS_InterruptHigh,pclath
 44791  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 44792  00908C  0011               	retfie		f
 44793  00908E                     __end_of_SYS_InterruptHigh:
 44794                           	opt stack 0
 44795                           tosu	equ	0xFFF
 44796                           tosh	equ	0xFFE
 44797                           tosl	equ	0xFFD
 44798                           pclatu	equ	0xFFB
 44799                           pclath	equ	0xFFA
 44800                           tblptru	equ	0xFF8
 44801                           tblptrh	equ	0xFF7
 44802                           tblptrl	equ	0xFF6
 44803                           tablat	equ	0xFF5
 44804                           prodh	equ	0xFF4
 44805                           prodl	equ	0xFF3
 44806                           intcon	equ	0xFF2
 44807                           indf0	equ	0xFEF
 44808                           postinc0	equ	0xFEE
 44809                           fsr0h	equ	0xFEA
 44810                           fsr0l	equ	0xFE9
 44811                           wreg	equ	0xFE8
 44812                           indf1	equ	0xFE7
 44813                           postinc1	equ	0xFE6
 44814                           postdec1	equ	0xFE5
 44815                           plusw1	equ	0xFE3
 44816                           fsr1h	equ	0xFE2
 44817                           fsr1l	equ	0xFE1
 44818                           indf2	equ	0xFDF
 44819                           postinc2	equ	0xFDE
 44820                           postdec2	equ	0xFDD
 44821                           plusw2	equ	0xFDB
 44822                           fsr2h	equ	0xFDA
 44823                           fsr2l	equ	0xFD9
 44824                           status	equ	0xFD8
 44825                           
 44826 ;; *************** function _tmr0_isr *****************
 44827 ;; Defined at:
 44828 ;;		line 24 in file "os.c"
 44829 ;; Parameters:    Size  Location     Type
 44830 ;;		None
 44831 ;; Auto vars:     Size  Location     Type
 44832 ;;		None
 44833 ;; Return value:  Size  Location     Type
 44834 ;;                  1    wreg      void 
 44835 ;; Registers used:
 44836 ;;		wreg, status,2, status,0, cstack
 44837 ;; Tracked objects:
 44838 ;;		On entry : 0/0
 44839 ;;		On exit  : 0/0
 44840 ;;		Unchanged: 0/0
 44841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44846 ;;Total ram usage:        0 bytes
 44847 ;; Hardware stack levels used:    1
 44848 ;; Hardware stack levels required when called:    1
 44849 ;; This function calls:
 44850 ;;		_encoder_run
 44851 ;; This function is called by:
 44852 ;;		_SYS_InterruptHigh
 44853 ;; This function uses a non-reentrant model
 44854 ;;
 44855                           
 44856                           	psect	text180
 44857  015010                     __ptext180:
 44858                           	opt stack 0
 44859  015010                     _tmr0_isr:
 44860                           	opt stack 16
 44861                           
 44862                           ;os.c: 27: if(INTCONbits.T0IF)
 44863                           
 44864                           ;incstack = 0
 44865  015010  A4F2               	btfss	intcon,2,c	;volatile
 44866  015012  0012               	return	
 44867                           
 44868                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 44869  015014  0EFA               	movlw	250
 44870  015016  6ED7               	movwf	4055,c	;volatile
 44871                           
 44872                           ;os.c: 31: TMR0L = 0x24;
 44873  015018  0E24               	movlw	36
 44874  01501A  6ED6               	movwf	4054,c	;volatile
 44875                           
 44876                           ;os.c: 34: INTCONbits.T0IF = 0;
 44877  01501C  94F2               	bcf	intcon,2,c	;volatile
 44878                           
 44879                           ;os.c: 37: encoder_run();
 44880  01501E  ECB0  F08B         	call	_encoder_run	;wreg free
 44881                           
 44882                           ;os.c: 40: ++os.subTimeSlot;
 44883  015022  0101               	movlb	1	; () banked
 44884  015024  2B71               	incf	_os& (0+255),f,b	;volatile
 44885                           
 44886                           ; BSR set to: 1
 44887                           ;os.c: 41: if(os.subTimeSlot>=10)
 44888  015026  0E09               	movlw	9
 44889  015028  6571               	cpfsgt	_os& (0+255),b	;volatile
 44890  01502A  0012               	return	
 44891                           
 44892                           ; BSR set to: 1
 44893                           ;os.c: 42: {;os.c: 43: if(os.done)
 44894  01502C  5173               	movf	(_os+2)& (0+255),w,b	;volatile
 44895  01502E  B4D8               	btfsc	status,2,c
 44896  015030  0012               	return	
 44897                           
 44898                           ; BSR set to: 1
 44899                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 44900  015032  2B72               	incf	(_os+1)& (0+255),f,b	;volatile
 44901                           
 44902                           ; BSR set to: 1
 44903                           ;os.c: 46: if(os.timeSlot==16)
 44904  015034  0E10               	movlw	16
 44905  015036  1972               	xorwf	(_os+1)& (0+255),w,b	;volatile
 44906  015038  A4D8               	btfss	status,2,c
 44907  01503A  D002               	goto	i2l1066
 44908                           
 44909                           ; BSR set to: 1
 44910                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 44911  01503C  0E00               	movlw	0
 44912  01503E  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 44913  015040                     i2l1066:
 44914                           
 44915                           ; BSR set to: 1
 44916                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 44917  015040  0E00               	movlw	0
 44918  015042  6F71               	movwf	_os& (0+255),b	;volatile
 44919                           
 44920                           ;os.c: 51: os.done = 0;
 44921  015044  0E00               	movlw	0
 44922  015046  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 44923                           
 44924                           ; BSR set to: 1
 44925                           
 44926                           ; BSR set to: 1
 44927  015048  0012               	return	
 44928  01504A                     __end_of_tmr0_isr:
 44929                           	opt stack 0
 44930                           tosu	equ	0xFFF
 44931                           tosh	equ	0xFFE
 44932                           tosl	equ	0xFFD
 44933                           pclatu	equ	0xFFB
 44934                           pclath	equ	0xFFA
 44935                           tblptru	equ	0xFF8
 44936                           tblptrh	equ	0xFF7
 44937                           tblptrl	equ	0xFF6
 44938                           tablat	equ	0xFF5
 44939                           prodh	equ	0xFF4
 44940                           prodl	equ	0xFF3
 44941                           intcon	equ	0xFF2
 44942                           indf0	equ	0xFEF
 44943                           postinc0	equ	0xFEE
 44944                           fsr0h	equ	0xFEA
 44945                           fsr0l	equ	0xFE9
 44946                           wreg	equ	0xFE8
 44947                           indf1	equ	0xFE7
 44948                           postinc1	equ	0xFE6
 44949                           postdec1	equ	0xFE5
 44950                           plusw1	equ	0xFE3
 44951                           fsr1h	equ	0xFE2
 44952                           fsr1l	equ	0xFE1
 44953                           indf2	equ	0xFDF
 44954                           postinc2	equ	0xFDE
 44955                           postdec2	equ	0xFDD
 44956                           plusw2	equ	0xFDB
 44957                           fsr2h	equ	0xFDA
 44958                           fsr2l	equ	0xFD9
 44959                           status	equ	0xFD8
 44960                           
 44961 ;; *************** function _encoder_run *****************
 44962 ;; Defined at:
 44963 ;;		line 103 in file "encoder.c"
 44964 ;; Parameters:    Size  Location     Type
 44965 ;;		None
 44966 ;; Auto vars:     Size  Location     Type
 44967 ;;		None
 44968 ;; Return value:  Size  Location     Type
 44969 ;;                  1    wreg      void 
 44970 ;; Registers used:
 44971 ;;		wreg, status,2, status,0
 44972 ;; Tracked objects:
 44973 ;;		On entry : 0/0
 44974 ;;		On exit  : 0/0
 44975 ;;		Unchanged: 0/0
 44976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44981 ;;Total ram usage:        0 bytes
 44982 ;; Hardware stack levels used:    1
 44983 ;; This function calls:
 44984 ;;		Nothing
 44985 ;; This function is called by:
 44986 ;;		_tmr0_isr
 44987 ;; This function uses a non-reentrant model
 44988 ;;
 44989                           
 44990                           	psect	text181
 44991  011760                     __ptext181:
 44992                           	opt stack 0
 44993  011760                     _encoder_run:
 44994                           	opt stack 16
 44995                           
 44996                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 44997                           
 44998                           ;incstack = 0
 44999  011760  5084               	movf	3972,w,c	;volatile
 45000  011762  0B07               	andlw	7
 45001  011764  0101               	movlb	1	; () banked
 45002  011766  1954               	xorwf	_enc1& (0+255),w,b
 45003  011768  B4D8               	btfsc	status,2,c
 45004  01176A  D033               	goto	i2l2587
 45005                           
 45006                           ; BSR set to: 1
 45007                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 45008  01176C  B084               	btfsc	3972,0,c	;volatile
 45009                           
 45010                           ; BSR set to: 1
 45011  01176E  A484               	btfss	3972,2,c	;volatile
 45012  011770  D00D               	goto	i2l2590
 45013                           
 45014                           ; BSR set to: 1
 45015  011772  B154               	btfsc	_enc1& (0+255),0,b
 45016  011774  D00B               	goto	i2l2590
 45017                           
 45018                           ; BSR set to: 1
 45019                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 45020  011776  0E7F               	movlw	127
 45021  011778  1974               	xorwf	(_os+3)& (0+255),w,b	;volatile
 45022  01177A  B4D8               	btfsc	status,2,c
 45023  01177C  D007               	goto	i2l2590
 45024                           
 45025                           ; BSR set to: 1
 45026                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 45027  01177E  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 45028                           
 45029                           ; BSR set to: 1
 45030                           ;encoder.c: 113: if(config.beep_duration)
 45031  011780  51B6               	movf	(_config+21)& (0+255),w,b
 45032  011782  B4D8               	btfsc	status,2,c
 45033  011784  D003               	goto	i2l2590
 45034                           
 45035                           ; BSR set to: 1
 45036                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 45037  011786  8E8B               	bsf	3979,7,c	;volatile
 45038                           
 45039                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 45040  011788  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45041  01178C                     i2l2590:
 45042                           
 45043                           ; BSR set to: 1
 45044                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 45045                           
 45046                           ; BSR set to: 1
 45047                           
 45048                           ; BSR set to: 1
 45049  01178C  B484               	btfsc	3972,2,c	;volatile
 45050                           
 45051                           ; BSR set to: 1
 45052  01178E  A084               	btfss	3972,0,c	;volatile
 45053  011790  D00E               	goto	i2l2593
 45054                           
 45055                           ; BSR set to: 1
 45056  011792  B554               	btfsc	_enc1& (0+255),2,b
 45057  011794  D00C               	goto	i2l2593
 45058                           
 45059                           ; BSR set to: 1
 45060                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 45061  011796  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 45062  011798  0A80               	xorlw	128
 45063  01179A  0FFF               	addlw	255
 45064  01179C  A0D8               	btfss	status,0,c
 45065  01179E  D007               	goto	i2l2593
 45066                           
 45067                           ; BSR set to: 1
 45068                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 45069  0117A0  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 45070                           
 45071                           ; BSR set to: 1
 45072                           ;encoder.c: 126: if(config.beep_duration)
 45073  0117A2  51B6               	movf	(_config+21)& (0+255),w,b
 45074  0117A4  B4D8               	btfsc	status,2,c
 45075  0117A6  D003               	goto	i2l2593
 45076                           
 45077                           ; BSR set to: 1
 45078                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 45079  0117A8  8E8B               	bsf	3979,7,c	;volatile
 45080                           
 45081                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 45082  0117AA  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45083  0117AE                     i2l2593:
 45084                           
 45085                           ; BSR set to: 1
 45086                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 45087                           
 45088                           ; BSR set to: 1
 45089                           
 45090                           ; BSR set to: 1
 45091  0117AE  B284               	btfsc	3972,1,c	;volatile
 45092                           
 45093                           ; BSR set to: 1
 45094  0117B0  B354               	btfsc	_enc1& (0+255),1,b
 45095  0117B2  D008               	goto	i2l2595
 45096                           
 45097                           ; BSR set to: 1
 45098                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 45099  0117B4  0E01               	movlw	1
 45100  0117B6  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 45101                           
 45102                           ;encoder.c: 137: if(config.beep_duration)
 45103  0117B8  51B6               	movf	(_config+21)& (0+255),w,b
 45104  0117BA  B4D8               	btfsc	status,2,c
 45105  0117BC  D003               	goto	i2l2595
 45106                           
 45107                           ; BSR set to: 1
 45108                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 45109  0117BE  8E8B               	bsf	3979,7,c	;volatile
 45110                           
 45111                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 45112  0117C0  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45113  0117C4                     i2l2595:
 45114                           
 45115                           ; BSR set to: 1
 45116                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 45117                           
 45118                           ; BSR set to: 1
 45119  0117C4  A284               	btfss	3972,1,c	;volatile
 45120                           
 45121                           ; BSR set to: 1
 45122  0117C6  A354               	btfss	_enc1& (0+255),1,b
 45123  0117C8  D001               	goto	i2l2596
 45124                           
 45125                           ; BSR set to: 1
 45126                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 45127  0117CA  6975               	setf	(_os+4)& (0+255),b	;volatile
 45128  0117CC                     i2l2596:
 45129                           
 45130                           ; BSR set to: 1
 45131                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 45132                           
 45133                           ; BSR set to: 1
 45134  0117CC  5084               	movf	3972,w,c	;volatile
 45135  0117CE  0B07               	andlw	7
 45136  0117D0  6F54               	movwf	_enc1& (0+255),b
 45137  0117D2                     i2l2587:
 45138                           
 45139                           ; BSR set to: 1
 45140                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 45141  0117D2  5080               	movf	3968,w,c	;volatile
 45142  0117D4  0B07               	andlw	7
 45143  0117D6  1953               	xorwf	_enc2& (0+255),w,b
 45144  0117D8  B4D8               	btfsc	status,2,c
 45145  0117DA  D033               	goto	i2l2597
 45146                           
 45147                           ; BSR set to: 1
 45148                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 45149  0117DC  B480               	btfsc	3968,2,c	;volatile
 45150                           
 45151                           ; BSR set to: 1
 45152  0117DE  A080               	btfss	3968,0,c	;volatile
 45153  0117E0  D00D               	goto	i2l2600
 45154                           
 45155                           ; BSR set to: 1
 45156  0117E2  B553               	btfsc	_enc2& (0+255),2,b
 45157  0117E4  D00B               	goto	i2l2600
 45158                           
 45159                           ; BSR set to: 1
 45160                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 45161  0117E6  0E7F               	movlw	127
 45162  0117E8  1976               	xorwf	(_os+5)& (0+255),w,b	;volatile
 45163  0117EA  B4D8               	btfsc	status,2,c
 45164  0117EC  D007               	goto	i2l2600
 45165                           
 45166                           ; BSR set to: 1
 45167                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 45168  0117EE  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 45169                           
 45170                           ; BSR set to: 1
 45171                           ;encoder.c: 160: if(config.beep_duration)
 45172  0117F0  51B6               	movf	(_config+21)& (0+255),w,b
 45173  0117F2  B4D8               	btfsc	status,2,c
 45174  0117F4  D003               	goto	i2l2600
 45175                           
 45176                           ; BSR set to: 1
 45177                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 45178  0117F6  8E8B               	bsf	3979,7,c	;volatile
 45179                           
 45180                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 45181  0117F8  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45182  0117FC                     i2l2600:
 45183                           
 45184                           ; BSR set to: 1
 45185                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 45186                           
 45187                           ; BSR set to: 1
 45188                           
 45189                           ; BSR set to: 1
 45190  0117FC  B080               	btfsc	3968,0,c	;volatile
 45191                           
 45192                           ; BSR set to: 1
 45193  0117FE  A480               	btfss	3968,2,c	;volatile
 45194  011800  D00E               	goto	i2l2603
 45195                           
 45196                           ; BSR set to: 1
 45197  011802  B153               	btfsc	_enc2& (0+255),0,b
 45198  011804  D00C               	goto	i2l2603
 45199                           
 45200                           ; BSR set to: 1
 45201                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 45202  011806  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 45203  011808  0A80               	xorlw	128
 45204  01180A  0FFF               	addlw	255
 45205  01180C  A0D8               	btfss	status,0,c
 45206  01180E  D007               	goto	i2l2603
 45207                           
 45208                           ; BSR set to: 1
 45209                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 45210  011810  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 45211                           
 45212                           ; BSR set to: 1
 45213                           ;encoder.c: 173: if(config.beep_duration)
 45214  011812  51B6               	movf	(_config+21)& (0+255),w,b
 45215  011814  B4D8               	btfsc	status,2,c
 45216  011816  D003               	goto	i2l2603
 45217                           
 45218                           ; BSR set to: 1
 45219                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 45220  011818  8E8B               	bsf	3979,7,c	;volatile
 45221                           
 45222                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 45223  01181A  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45224  01181E                     i2l2603:
 45225                           
 45226                           ; BSR set to: 1
 45227                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 45228                           
 45229                           ; BSR set to: 1
 45230                           
 45231                           ; BSR set to: 1
 45232  01181E  B280               	btfsc	3968,1,c	;volatile
 45233                           
 45234                           ; BSR set to: 1
 45235  011820  B353               	btfsc	_enc2& (0+255),1,b
 45236  011822  D008               	goto	i2l2605
 45237                           
 45238                           ; BSR set to: 1
 45239                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 45240  011824  0E01               	movlw	1
 45241  011826  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 45242                           
 45243                           ;encoder.c: 184: if(config.beep_duration)
 45244  011828  51B6               	movf	(_config+21)& (0+255),w,b
 45245  01182A  B4D8               	btfsc	status,2,c
 45246  01182C  D003               	goto	i2l2605
 45247                           
 45248                           ; BSR set to: 1
 45249                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 45250  01182E  8E8B               	bsf	3979,7,c	;volatile
 45251                           
 45252                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 45253  011830  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45254  011834                     i2l2605:
 45255                           
 45256                           ; BSR set to: 1
 45257                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 45258                           
 45259                           ; BSR set to: 1
 45260  011834  A280               	btfss	3968,1,c	;volatile
 45261                           
 45262                           ; BSR set to: 1
 45263  011836  A353               	btfss	_enc2& (0+255),1,b
 45264  011838  D001               	goto	i2l2606
 45265                           
 45266                           ; BSR set to: 1
 45267                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 45268  01183A  6977               	setf	(_os+6)& (0+255),b	;volatile
 45269  01183C                     i2l2606:
 45270                           
 45271                           ; BSR set to: 1
 45272                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 45273                           
 45274                           ; BSR set to: 1
 45275  01183C  5080               	movf	3968,w,c	;volatile
 45276  01183E  0B07               	andlw	7
 45277  011840  6F53               	movwf	_enc2& (0+255),b
 45278  011842                     i2l2597:
 45279                           
 45280                           ; BSR set to: 1
 45281                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 45282                           
 45283                           ; BSR set to: 1
 45284  011842  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45285  011844  B4D8               	btfsc	status,2,c
 45286  011846  0012               	return	
 45287                           
 45288                           ; BSR set to: 1
 45289                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 45290  011848  0797               	decf	(_os+38)& (0+255),f,b	;volatile
 45291                           
 45292                           ; BSR set to: 1
 45293                           ;encoder.c: 203: if(!os.beep_count)
 45294  01184A  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45295  01184C  A4D8               	btfss	status,2,c
 45296  01184E  0012               	return	
 45297                           
 45298                           ; BSR set to: 1
 45299                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 45300  011850  9E8B               	bcf	3979,7,c	;volatile
 45301                           
 45302                           ; BSR set to: 1
 45303  011852  0012               	return	
 45304  011854                     __end_of_encoder_run:
 45305                           	opt stack 0
 45306                           tosu	equ	0xFFF
 45307                           tosh	equ	0xFFE
 45308                           tosl	equ	0xFFD
 45309                           pclatu	equ	0xFFB
 45310                           pclath	equ	0xFFA
 45311                           tblptru	equ	0xFF8
 45312                           tblptrh	equ	0xFF7
 45313                           tblptrl	equ	0xFF6
 45314                           tablat	equ	0xFF5
 45315                           prodh	equ	0xFF4
 45316                           prodl	equ	0xFF3
 45317                           intcon	equ	0xFF2
 45318                           indf0	equ	0xFEF
 45319                           postinc0	equ	0xFEE
 45320                           fsr0h	equ	0xFEA
 45321                           fsr0l	equ	0xFE9
 45322                           wreg	equ	0xFE8
 45323                           indf1	equ	0xFE7
 45324                           postinc1	equ	0xFE6
 45325                           postdec1	equ	0xFE5
 45326                           plusw1	equ	0xFE3
 45327                           fsr1h	equ	0xFE2
 45328                           fsr1l	equ	0xFE1
 45329                           indf2	equ	0xFDF
 45330                           postinc2	equ	0xFDE
 45331                           postdec2	equ	0xFDD
 45332                           plusw2	equ	0xFDB
 45333                           fsr2h	equ	0xFDA
 45334                           fsr2l	equ	0xFD9
 45335                           status	equ	0xFD8
 45336                           
 45337 ;; *************** function _motor_isr *****************
 45338 ;; Defined at:
 45339 ;;		line 359 in file "motor.c"
 45340 ;; Parameters:    Size  Location     Type
 45341 ;;		None
 45342 ;; Auto vars:     Size  Location     Type
 45343 ;;  steps_remain    4   63[COMRAM] unsigned long 
 45344 ;;  steps_until_    2   61[COMRAM] unsigned int 
 45345 ;;  steps_until_    2   59[COMRAM] unsigned int 
 45346 ;; Return value:  Size  Location     Type
 45347 ;;                  1    wreg      void 
 45348 ;; Registers used:
 45349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45350 ;; Tracked objects:
 45351 ;;		On entry : 0/0
 45352 ;;		On exit  : 0/0
 45353 ;;		Unchanged: 0/0
 45354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45356 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45357 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45358 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45359 ;;Total ram usage:       24 bytes
 45360 ;; Hardware stack levels used:    1
 45361 ;; Hardware stack levels required when called:    4
 45362 ;; This function calls:
 45363 ;;		_i2c_eeprom_writeUint32
 45364 ;; This function is called by:
 45365 ;;		_SYS_InterruptHigh
 45366 ;; This function uses a non-reentrant model
 45367 ;;
 45368                           
 45369                           	psect	text182
 45370  00B8B2                     __ptext182:
 45371                           	opt stack 0
 45372  00B8B2                     _motor_isr:
 45373                           	opt stack 13
 45374                           
 45375                           ;motor.c: 361: uint32_t steps_remaining;;motor.c: 362: uint16_t steps_until_standstill;;
      +                          motor.c: 363: uint16_t steps_until_standstill_if_accelerate;;motor.c: 366: PIR1bits.TMR2
      +                          IF = 0;
 45376                           
 45377                           ; BSR set to: 1
 45378                           ;incstack = 0
 45379  00B8B2  929E               	bcf	3998,1,c	;volatile
 45380                           
 45381                           ;motor.c: 368: if(motor_mode==MOTOR_MODE_MANUAL)
 45382  00B8B4  0101               	movlb	1	; () banked
 45383  00B8B6  5156               	movf	_motor_mode& (0+255),w,b
 45384  00B8B8  A4D8               	btfss	status,2,c
 45385  00B8BA  D026               	goto	i2l2452
 45386                           
 45387                           ; BSR set to: 1
 45388                           ;motor.c: 369: {;motor.c: 371: if(LATBbits.LB1)
 45389  00B8BC  A28A               	btfss	3978,1,c	;volatile
 45390  00B8BE  D023               	goto	i2l2449
 45391                           
 45392                           ; BSR set to: 1
 45393                           ;motor.c: 372: {;motor.c: 374: LATBbits.LB1 = 0;
 45394  00B8C0  928A               	bcf	3978,1,c	;volatile
 45395                           
 45396                           ; BSR set to: 1
 45397                           ;motor.c: 377: if(motor_current_stepcount==motor_final_stepcount)
 45398  00B8C2  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 45399  00B8C4  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 45400  00B8C6  E109               	bnz	i2u1826_41
 45401  00B8C8  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 45402  00B8CA  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 45403  00B8CC  E106               	bnz	i2u1826_41
 45404  00B8CE  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 45405  00B8D0  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 45406  00B8D2  E103               	bnz	i2u1826_41
 45407  00B8D4  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 45408  00B8D6  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 45409  00B8D8  A4D8               	btfss	status,2,c
 45410  00B8DA                     i2u1826_41:
 45411  00B8DA  0012               	return	
 45412                           
 45413                           ; BSR set to: 1
 45414                           ;motor.c: 378: {;motor.c: 381: T2CONbits.TMR2ON = 0;
 45415  00B8DC  94CA               	bcf	4042,2,c	;volatile
 45416                           
 45417                           ;motor.c: 383: PIR1bits.TMR2IF = 0;
 45418  00B8DE  929E               	bcf	3998,1,c	;volatile
 45419                           
 45420                           ;motor.c: 384: PIE1bits.TMR2IE = 0;
 45421  00B8E0  929D               	bcf	3997,1,c	;volatile
 45422                           
 45423                           ; BSR set to: 1
 45424                           ;motor.c: 386: i2c_eeprom_writeUint32(0x200, os.current_position_in_steps);
 45425  00B8E2  0E02               	movlw	2
 45426  00B8E4  6E27               	movwf	i2c_eeprom_writeUint32@address+1,c
 45427  00B8E6  0E00               	movlw	0
 45428  00B8E8  6E26               	movwf	i2c_eeprom_writeUint32@address,c
 45429  00B8EA  C178  F028         	movff	_os+7,i2c_eeprom_writeUint32@data	;volatile
 45430  00B8EE  C179  F029         	movff	_os+8,i2c_eeprom_writeUint32@data+1	;volatile
 45431  00B8F2  C17A  F02A         	movff	_os+9,i2c_eeprom_writeUint32@data+2	;volatile
 45432  00B8F6  C17B  F02B         	movff	_os+10,i2c_eeprom_writeUint32@data+3	;volatile
 45433  00B8FA  EC5F  F0AB         	call	_i2c_eeprom_writeUint32	;wreg free
 45434                           
 45435                           ;motor.c: 388: os.busy = 0;
 45436  00B8FE  0E00               	movlw	0
 45437  00B900  0101               	movlb	1	; () banked
 45438  00B902  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 45439                           
 45440                           ; BSR set to: 1
 45441                           ;motor.c: 389: };motor.c: 392: return;
 45442                           
 45443                           ; BSR set to: 1
 45444  00B904  0012               	return	
 45445  00B906                     i2l2449:
 45446                           
 45447                           ; BSR set to: 1
 45448                           ;motor.c: 394: else;motor.c: 395: {;motor.c: 397: LATBbits.LB1 = 1;
 45449  00B906  828A               	bsf	3978,1,c	;volatile
 45450  00B908                     i2l2452:
 45451                           
 45452                           ; BSR set to: 1
 45453                           ;motor.c: 398: };motor.c: 399: };motor.c: 401: ++motor_current_stepcount;
 45454                           
 45455                           ; BSR set to: 1
 45456                           
 45457                           ; BSR set to: 1
 45458  00B908  0E01               	movlw	1
 45459  00B90A  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 45460  00B90C  0E00               	movlw	0
 45461  00B90E  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 45462  00B910  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 45463  00B912  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 45464                           
 45465                           ;motor.c: 404: os.current_position_in_steps += motor_direction;
 45466  00B914  5155               	movf	_motor_direction& (0+255),w,b
 45467  00B916  6E2C               	movwf	??_motor_isr& (0+255),c
 45468  00B918  0E00               	movlw	0
 45469  00B91A  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 45470  00B91C  0EFF               	movlw	255
 45471  00B91E  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45472  00B920  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 45473  00B922  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 45474  00B924  502C               	movf	??_motor_isr,w,c
 45475  00B926  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 45476  00B928  502D               	movf	??_motor_isr+1,w,c
 45477  00B92A  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 45478  00B92C  502E               	movf	??_motor_isr+2,w,c
 45479  00B92E  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 45480  00B930  502F               	movf	??_motor_isr+3,w,c
 45481  00B932  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 45482                           
 45483                           ;motor.c: 405: if(os.current_position_in_steps==config.full_circle_in_steps)
 45484  00B934  51A1               	movf	_config& (0+255),w,b
 45485  00B936  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 45486  00B938  E112               	bnz	i2l18341
 45487  00B93A  51A2               	movf	(_config+1)& (0+255),w,b
 45488  00B93C  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 45489  00B93E  E10F               	bnz	i2l18341
 45490  00B940  51A3               	movf	(_config+2)& (0+255),w,b
 45491  00B942  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 45492  00B944  E10C               	bnz	i2l18341
 45493  00B946  51A4               	movf	(_config+3)& (0+255),w,b
 45494  00B948  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 45495  00B94A  A4D8               	btfss	status,2,c
 45496  00B94C  D008               	goto	i2l2453
 45497                           
 45498                           ; BSR set to: 1
 45499                           ;motor.c: 406: os.current_position_in_steps = 0;
 45500  00B94E  0E00               	movlw	0
 45501  00B950  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 45502  00B952  0E00               	movlw	0
 45503  00B954  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 45504  00B956  0E00               	movlw	0
 45505  00B958  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 45506  00B95A  0E00               	movlw	0
 45507  00B95C  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 45508  00B95E                     i2l2453:
 45509  00B95E                     i2l18341:
 45510                           
 45511                           ; BSR set to: 1
 45512                           ;motor.c: 407: if(os.current_position_in_steps==0xFFFFFFFF)
 45513  00B95E  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 45514  00B960  E113               	bnz	i2l2454
 45515  00B962  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 45516  00B964  E111               	bnz	i2l2454
 45517  00B966  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 45518  00B968  E10F               	bnz	i2l2454
 45519  00B96A  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 45520  00B96C  A4D8               	btfss	status,2,c
 45521  00B96E  D00C               	goto	i2l2454
 45522                           
 45523                           ; BSR set to: 1
 45524                           ;motor.c: 408: os.current_position_in_steps = (config.full_circle_in_steps-1);
 45525  00B970  0EFF               	movlw	255
 45526  00B972  25A1               	addwf	_config& (0+255),w,b
 45527  00B974  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 45528  00B976  0EFF               	movlw	255
 45529  00B978  21A2               	addwfc	(_config+1)& (0+255),w,b
 45530  00B97A  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 45531  00B97C  0EFF               	movlw	255
 45532  00B97E  21A3               	addwfc	(_config+2)& (0+255),w,b
 45533  00B980  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 45534  00B982  0EFF               	movlw	255
 45535  00B984  21A4               	addwfc	(_config+3)& (0+255),w,b
 45536  00B986  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 45537  00B988                     i2l2454:
 45538                           
 45539                           ; BSR set to: 1
 45540                           ;motor.c: 411: if(motor_current_stepcount==motor_next_speed_check)
 45541  00B988  0102               	movlb	2	; () banked
 45542  00B98A  5126               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 45543  00B98C  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 45544  00B98E  E109               	bnz	i2u1829_41
 45545  00B990  5127               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 45546  00B992  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 45547  00B994  E106               	bnz	i2u1829_41
 45548  00B996  5128               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 45549  00B998  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 45550  00B99A  E103               	bnz	i2u1829_41
 45551  00B99C  5129               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 45552  00B99E  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 45553  00B9A0  A4D8               	btfss	status,2,c
 45554  00B9A2                     i2u1829_41:
 45555  00B9A2  D217               	goto	i2l2467
 45556                           
 45557                           ; BSR set to: 2
 45558                           ;motor.c: 412: {;motor.c: 414: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 45559  00B9A4  C058  F02C         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 45560  00B9A8  C059  F02D         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 45561  00B9AC  C05A  F02E         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 45562  00B9B0  C05B  F02F         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 45563  00B9B4  1E2C               	comf	??_motor_isr,f,c
 45564  00B9B6  1E2D               	comf	??_motor_isr+1,f,c
 45565  00B9B8  1E2E               	comf	??_motor_isr+2,f,c
 45566  00B9BA  1E2F               	comf	??_motor_isr+3,f,c
 45567  00B9BC  2A2C               	incf	??_motor_isr,f,c
 45568  00B9BE  0E00               	movlw	0
 45569  00B9C0  222D               	addwfc	??_motor_isr+1,f,c
 45570  00B9C2  222E               	addwfc	??_motor_isr+2,f,c
 45571  00B9C4  222F               	addwfc	??_motor_isr+3,f,c
 45572  00B9C6  0101               	movlb	1	; () banked
 45573  00B9C8  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 45574  00B9CA  242C               	addwf	??_motor_isr,w,c
 45575  00B9CC  6E40               	movwf	motor_isr@steps_remaining,c
 45576  00B9CE  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 45577  00B9D0  202D               	addwfc	??_motor_isr+1,w,c
 45578  00B9D2  6E41               	movwf	motor_isr@steps_remaining+1,c
 45579  00B9D4  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 45580  00B9D6  202E               	addwfc	??_motor_isr+2,w,c
 45581  00B9D8  6E42               	movwf	motor_isr@steps_remaining+2,c
 45582  00B9DA  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 45583  00B9DC  202F               	addwfc	??_motor_isr+3,w,c
 45584  00B9DE  6E43               	movwf	motor_isr@steps_remaining+3,c
 45585                           
 45586                           ; BSR set to: 1
 45587                           ;motor.c: 415: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 45588  00B9E0  90D8               	bcf	status,0,c
 45589  00B9E2  0100               	movlb	0	; () banked
 45590  00B9E4  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 45591  00B9E6  6EF6               	movwf	tblptrl,c
 45592  00B9E8  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45593  00B9EA  6EF7               	movwf	tblptrh,c
 45594  00B9EC  0E61               	movlw	low _motor_steps_lookup
 45595  00B9EE  26F6               	addwf	tblptrl,f,c
 45596  00B9F0  0E94               	movlw	high _motor_steps_lookup
 45597  00B9F2  22F7               	addwfc	tblptrh,f,c
 45598  00B9F4                     	if	1	;There are 3 active tblptr bytes
 45599  00B9F4  6AF8               	clrf	tblptru,c
 45600  00B9F6  0E00               	movlw	low (__mediumconst shr (0+16))
 45601  00B9F8  22F8               	addwfc	tblptru,f,c
 45602  00B9FA                     	endif
 45603  00B9FA  0009               	tblrd		*+
 45604  00B9FC  CFF5 F03C          	movff	tablat,motor_isr@steps_until_standstill
 45605  00BA00  000A               	tblrd		*-
 45606  00BA02  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill+1
 45607                           
 45608                           ; BSR set to: 0
 45609                           ;motor.c: 416: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 45610  00BA06  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr	;volatile
 45611  00BA0A  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 45612  00BA0E  90D8               	bcf	status,0,c
 45613  00BA10  362C               	rlcf	??_motor_isr,f,c
 45614  00BA12  362D               	rlcf	??_motor_isr+1,f,c
 45615  00BA14  0E04               	movlw	4
 45616  00BA16  262C               	addwf	??_motor_isr,f,c
 45617  00BA18  0E00               	movlw	0
 45618  00BA1A  222D               	addwfc	??_motor_isr+1,f,c
 45619  00BA1C  0E61               	movlw	low _motor_steps_lookup
 45620  00BA1E  242C               	addwf	??_motor_isr,w,c
 45621  00BA20  6EF6               	movwf	tblptrl,c
 45622  00BA22  0E94               	movlw	high _motor_steps_lookup
 45623  00BA24  202D               	addwfc	??_motor_isr+1,w,c
 45624  00BA26  6EF7               	movwf	tblptrh,c
 45625  00BA28                     	if	1	;There are 3 active tblptr bytes
 45626  00BA28  6AF8               	clrf	tblptru,c
 45627  00BA2A  0E00               	movlw	low (__mediumconst shr (0+16))
 45628  00BA2C  22F8               	addwfc	tblptru,f,c
 45629  00BA2E                     	endif
 45630  00BA2E  0009               	tblrd		*+
 45631  00BA30  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 45632  00BA34  000A               	tblrd		*-
 45633  00BA36  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 45634                           
 45635                           ;motor.c: 418: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 45636  00BA3A  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 45637  00BA3C  0101               	movlb	1	; () banked
 45638  00BA3E  5D3F               	subwf	_motor_maximum_speed& (0+255),w,b
 45639  00BA40  0100               	movlb	0	; () banked
 45640  00BA42  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45641  00BA44  0101               	movlb	1	; () banked
 45642  00BA46  5940               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 45643  00BA48  A0D8               	btfss	status,0,c
 45644  00BA4A  D010               	goto	i2u1831_40
 45645                           
 45646                           ; BSR set to: 1
 45647  00BA4C  503C               	movf	motor_isr@steps_until_standstill,w,c
 45648  00BA4E  6E2C               	movwf	??_motor_isr& (0+255),c
 45649  00BA50  503D               	movf	motor_isr@steps_until_standstill+1,w,c
 45650  00BA52  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45651  00BA54  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 45652  00BA56  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 45653  00BA58  5040               	movf	motor_isr@steps_remaining,w,c
 45654  00BA5A  5C2C               	subwf	??_motor_isr,w,c
 45655  00BA5C  5041               	movf	motor_isr@steps_remaining+1,w,c
 45656  00BA5E  582D               	subwfb	??_motor_isr+1,w,c
 45657  00BA60  5042               	movf	motor_isr@steps_remaining+2,w,c
 45658  00BA62  582E               	subwfb	??_motor_isr+2,w,c
 45659  00BA64  5043               	movf	motor_isr@steps_remaining+3,w,c
 45660  00BA66  582F               	subwfb	??_motor_isr+3,w,c
 45661  00BA68  A0D8               	btfss	status,0,c
 45662  00BA6A  D0E3               	goto	i2l2456
 45663  00BA6C                     i2u1831_40:
 45664                           
 45665                           ; BSR set to: 1
 45666                           ;motor.c: 419: {;motor.c: 421: if(motor_current_speed>0)
 45667                           
 45668                           ; BSR set to: 1
 45669  00BA6C  0100               	movlb	0	; () banked
 45670  00BA6E  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 45671  00BA70  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45672  00BA72  B4D8               	btfsc	status,2,c
 45673  00BA74  D003               	goto	i2l2459
 45674                           
 45675                           ; BSR set to: 0
 45676                           ;motor.c: 422: {;motor.c: 423: --motor_current_speed;
 45677  00BA76  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 45678  00BA78  A0D8               	btfss	status,0,c
 45679  00BA7A  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 45680  00BA7C                     i2l2459:
 45681                           
 45682                           ; BSR set to: 0
 45683                           ;motor.c: 424: };motor.c: 427: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 45684                           
 45685                           ; BSR set to: 0
 45686  00BA7C  0101               	movlb	1	; () banked
 45687  00BA7E  0556               	decf	_motor_mode& (0+255),w,b
 45688  00BA80  A4D8               	btfss	status,2,c
 45689  00BA82  D026               	goto	i2l2460
 45690                           
 45691                           ; BSR set to: 1
 45692  00BA84  0E2F               	movlw	low _motor_postscaler_lookup
 45693  00BA86  0100               	movlb	0	; () banked
 45694  00BA88  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45695  00BA8A  6EF6               	movwf	tblptrl,c
 45696  00BA8C  0E98               	movlw	high _motor_postscaler_lookup
 45697  00BA8E  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45698  00BA90  6EF7               	movwf	tblptrh,c
 45699  00BA92                     	if	1	;There are 3 active tblptr bytes
 45700  00BA92  6AF8               	clrf	tblptru,c
 45701  00BA94  0E00               	movlw	low (__mediumconst shr (0+16))
 45702  00BA96  22F8               	addwfc	tblptru,f,c
 45703  00BA98                     	endif
 45704  00BA98  0008               	tblrd		*
 45705  00BA9A  50F5               	movf	tablat,w,c
 45706  00BA9C  0900               	iorlw	0
 45707  00BA9E  B4D8               	btfsc	status,2,c
 45708  00BAA0  D017               	goto	i2l2460
 45709                           
 45710                           ; BSR set to: 0
 45711                           ;motor.c: 428: {;motor.c: 430: motor_mode = MOTOR_MODE_MANUAL;
 45712  00BAA2  0E00               	movlw	0
 45713  00BAA4  0101               	movlb	1	; () banked
 45714  00BAA6  6F56               	movwf	_motor_mode& (0+255),b
 45715                           
 45716                           ; BSR set to: 1
 45717                           ;motor.c: 433: LATBbits.LB1 = 1;
 45718  00BAA8  828A               	bsf	3978,1,c	;volatile
 45719                           
 45720                           ;motor.c: 434: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 45721  00BAAA  0E55               	movlw	85
 45722  00BAAC  6EA7               	movwf	4007,c	;volsfr
 45723  00BAAE  0EAA               	movlw	170
 45724  00BAB0  6EA7               	movwf	4007,c	;volsfr
 45725                           
 45726                           ; BSR set to: 1
 45727  00BAB2  010E               	movlb	14	; () banked
 45728  00BAB4  91BF               	bcf	191,0,b	;volatile
 45729                           
 45730                           ;motor.c: 435: RPOR4 = 0;
 45731  00BAB6  0E00               	movlw	0
 45732  00BAB8  6FC4               	movwf	196,b	;volatile
 45733                           
 45734                           ;motor.c: 436: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 45735  00BABA  0E55               	movlw	85
 45736  00BABC  6EA7               	movwf	4007,c	;volsfr
 45737  00BABE  0EAA               	movlw	170
 45738  00BAC0  6EA7               	movwf	4007,c	;volsfr
 45739                           
 45740                           ; BSR set to: 14
 45741  00BAC2  81BF               	bsf	191,0,b	;volatile
 45742                           
 45743                           ;motor.c: 439: TMR2 = 0;
 45744  00BAC4  0E00               	movlw	0
 45745  00BAC6  6ECC               	movwf	4044,c	;volatile
 45746                           
 45747                           ; BSR set to: 14
 45748                           ;motor.c: 442: CCP1CONbits.CCP1M = 0b0000;
 45749  00BAC8  90BA               	bcf	4026,0,c	;volatile
 45750  00BACA  92BA               	bcf	4026,1,c	;volatile
 45751  00BACC  94BA               	bcf	4026,2,c	;volatile
 45752  00BACE  96BA               	bcf	4026,3,c	;volatile
 45753  00BAD0                     i2l2460:
 45754                           
 45755                           ;motor.c: 443: };motor.c: 447: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 45756                           
 45757                           ; BSR set to: 14
 45758  00BAD0  0EFD               	movlw	low _motor_prescaler_lookup
 45759  00BAD2  0100               	movlb	0	; () banked
 45760  00BAD4  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45761  00BAD6  6EF6               	movwf	tblptrl,c
 45762  00BAD8  0E9B               	movlw	high _motor_prescaler_lookup
 45763  00BADA  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45764  00BADC  6EF7               	movwf	tblptrh,c
 45765  00BADE                     	if	1	;There are 3 active tblptr bytes
 45766  00BADE  6AF8               	clrf	tblptru,c
 45767  00BAE0  0E00               	movlw	low (__mediumconst shr (0+16))
 45768  00BAE2  22F8               	addwfc	tblptru,f,c
 45769  00BAE4                     	endif
 45770  00BAE4  0008               	tblrd		*
 45771  00BAE6  CFF5 F02C          	movff	tablat,??_motor_isr
 45772  00BAEA  50CA               	movf	4042,w,c	;volatile
 45773  00BAEC  182C               	xorwf	??_motor_isr,w,c
 45774  00BAEE  0BFC               	andlw	-4
 45775  00BAF0  182C               	xorwf	??_motor_isr,w,c
 45776  00BAF2  6ECA               	movwf	4042,c	;volatile
 45777                           
 45778                           ; BSR set to: 0
 45779                           ;motor.c: 449: PR2 = motor_period_lookup[motor_current_speed];
 45780  00BAF4  0E16               	movlw	low _motor_period_lookup
 45781  00BAF6  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45782  00BAF8  6EF6               	movwf	tblptrl,c
 45783  00BAFA  0E9A               	movlw	high _motor_period_lookup
 45784  00BAFC  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45785  00BAFE  6EF7               	movwf	tblptrh,c
 45786  00BB00                     	if	1	;There are 3 active tblptr bytes
 45787  00BB00  6AF8               	clrf	tblptru,c
 45788  00BB02  0E00               	movlw	low (__mediumconst shr (0+16))
 45789  00BB04  22F8               	addwfc	tblptru,f,c
 45790  00BB06                     	endif
 45791  00BB06  0008               	tblrd		*
 45792  00BB08  CFF5 FFCB          	movff	tablat,4043	;volatile
 45793                           
 45794                           ; BSR set to: 0
 45795                           ;motor.c: 451: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 45796  00BB0C  0E2F               	movlw	low _motor_postscaler_lookup
 45797  00BB0E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45798  00BB10  6EF6               	movwf	tblptrl,c
 45799  00BB12  0E98               	movlw	high _motor_postscaler_lookup
 45800  00BB14  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45801  00BB16  6EF7               	movwf	tblptrh,c
 45802  00BB18                     	if	1	;There are 3 active tblptr bytes
 45803  00BB18  6AF8               	clrf	tblptru,c
 45804  00BB1A  0E00               	movlw	low (__mediumconst shr (0+16))
 45805  00BB1C  22F8               	addwfc	tblptru,f,c
 45806  00BB1E                     	endif
 45807  00BB1E  0008               	tblrd		*
 45808  00BB20  CFF5 F02C          	movff	tablat,??_motor_isr
 45809  00BB24  462C               	rlncf	??_motor_isr,f,c
 45810  00BB26  462C               	rlncf	??_motor_isr,f,c
 45811  00BB28  462C               	rlncf	??_motor_isr,f,c
 45812  00BB2A  50CA               	movf	4042,w,c	;volatile
 45813  00BB2C  182C               	xorwf	??_motor_isr,w,c
 45814  00BB2E  0B87               	andlw	-121
 45815  00BB30  182C               	xorwf	??_motor_isr,w,c
 45816  00BB32  6ECA               	movwf	4042,c	;volatile
 45817                           
 45818                           ; BSR set to: 0
 45819                           ;motor.c: 453: CCPR1L = PR2>>1;
 45820  00BB34  90D8               	bcf	status,0,c
 45821  00BB36  30CB               	rrcf	4043,w,c	;volatile
 45822  00BB38  6EBB               	movwf	4027,c	;volatile
 45823                           
 45824                           ; BSR set to: 0
 45825                           ;motor.c: 456: if(motor_current_speed>0)
 45826  00BB3A  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 45827  00BB3C  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45828  00BB3E  B4D8               	btfsc	status,2,c
 45829  00BB40  D058               	goto	i2l2461
 45830                           
 45831                           ; BSR set to: 0
 45832                           ;motor.c: 457: {;motor.c: 458: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 45833  00BB42  0EFE               	movlw	254
 45834  00BB44  6E2C               	movwf	??_motor_isr& (0+255),c
 45835  00BB46  0EFF               	movlw	255
 45836  00BB48  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45837  00BB4A  C0FE  F02E         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 45838  00BB4E  C0FF  F02F         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 45839  00BB52  90D8               	bcf	status,0,c
 45840  00BB54  362E               	rlcf	??_motor_isr+2,f,c
 45841  00BB56  362F               	rlcf	??_motor_isr+3,f,c
 45842  00BB58  502C               	movf	??_motor_isr,w,c
 45843  00BB5A  262E               	addwf	??_motor_isr+2,f,c
 45844  00BB5C  502D               	movf	??_motor_isr+1,w,c
 45845  00BB5E  222F               	addwfc	??_motor_isr+3,f,c
 45846  00BB60  0E61               	movlw	low _motor_steps_lookup
 45847  00BB62  242E               	addwf	??_motor_isr+2,w,c
 45848  00BB64  6EF6               	movwf	tblptrl,c
 45849  00BB66  0E94               	movlw	high _motor_steps_lookup
 45850  00BB68  202F               	addwfc	??_motor_isr+3,w,c
 45851  00BB6A  6EF7               	movwf	tblptrh,c
 45852  00BB6C                     	if	1	;There are 3 active tblptr bytes
 45853  00BB6C  6AF8               	clrf	tblptru,c
 45854  00BB6E  0E00               	movlw	low (__mediumconst shr (0+16))
 45855  00BB70  22F8               	addwfc	tblptru,f,c
 45856  00BB72                     	endif
 45857  00BB72  0009               	tblrd		*+
 45858  00BB74  CFF5 F030          	movff	tablat,??_motor_isr+4
 45859  00BB78  0009               	tblrd		*+
 45860  00BB7A  CFF5 F031          	movff	tablat,??_motor_isr+5
 45861  00BB7E  5030               	movf	??_motor_isr+4,w,c
 45862  00BB80  6E32               	movwf	(??_motor_isr+6)& (0+255),c
 45863  00BB82  5031               	movf	??_motor_isr+5,w,c
 45864  00BB84  6E33               	movwf	(??_motor_isr+7)& (0+255),c
 45865  00BB86  6A34               	clrf	(??_motor_isr+8)& (0+255),c
 45866  00BB88  6A35               	clrf	(??_motor_isr+9)& (0+255),c
 45867  00BB8A  1E32               	comf	??_motor_isr+6,f,c
 45868  00BB8C  1E33               	comf	??_motor_isr+7,f,c
 45869  00BB8E  1E34               	comf	??_motor_isr+8,f,c
 45870  00BB90  1E35               	comf	??_motor_isr+9,f,c
 45871  00BB92  2A32               	incf	??_motor_isr+6,f,c
 45872  00BB94  0E00               	movlw	0
 45873  00BB96  2233               	addwfc	??_motor_isr+7,f,c
 45874  00BB98  2234               	addwfc	??_motor_isr+8,f,c
 45875  00BB9A  2235               	addwfc	??_motor_isr+9,f,c
 45876  00BB9C  90D8               	bcf	status,0,c
 45877  00BB9E  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 45878  00BBA0  6EF6               	movwf	tblptrl,c
 45879  00BBA2  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45880  00BBA4  6EF7               	movwf	tblptrh,c
 45881  00BBA6  0E61               	movlw	low _motor_steps_lookup
 45882  00BBA8  26F6               	addwf	tblptrl,f,c
 45883  00BBAA  0E94               	movlw	high _motor_steps_lookup
 45884  00BBAC  22F7               	addwfc	tblptrh,f,c
 45885  00BBAE                     	if	1	;There are 3 active tblptr bytes
 45886  00BBAE  6AF8               	clrf	tblptru,c
 45887  00BBB0  0E00               	movlw	low (__mediumconst shr (0+16))
 45888  00BBB2  22F8               	addwfc	tblptru,f,c
 45889  00BBB4                     	endif
 45890  00BBB4  0009               	tblrd		*+
 45891  00BBB6  CFF5 F036          	movff	tablat,??_motor_isr+10
 45892  00BBBA  0009               	tblrd		*+
 45893  00BBBC  CFF5 F037          	movff	tablat,??_motor_isr+11
 45894  00BBC0  5036               	movf	??_motor_isr+10,w,c
 45895  00BBC2  2432               	addwf	??_motor_isr+6,w,c
 45896  00BBC4  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 45897  00BBC6  5037               	movf	??_motor_isr+11,w,c
 45898  00BBC8  2033               	addwfc	??_motor_isr+7,w,c
 45899  00BBCA  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 45900  00BBCC  0E00               	movlw	0
 45901  00BBCE  2034               	addwfc	??_motor_isr+8,w,c
 45902  00BBD0  6E3A               	movwf	(??_motor_isr+14)& (0+255),c
 45903  00BBD2  0E00               	movlw	0
 45904  00BBD4  2035               	addwfc	??_motor_isr+9,w,c
 45905  00BBD6  6E3B               	movwf	(??_motor_isr+15)& (0+255),c
 45906  00BBD8  5058               	movf	_motor_current_stepcount,w,c	;volatile
 45907  00BBDA  2438               	addwf	??_motor_isr+12,w,c
 45908  00BBDC  0102               	movlb	2	; () banked
 45909  00BBDE  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 45910  00BBE0  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 45911  00BBE2  2039               	addwfc	??_motor_isr+13,w,c
 45912  00BBE4  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 45913  00BBE6  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 45914  00BBE8  203A               	addwfc	??_motor_isr+14,w,c
 45915  00BBEA  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 45916  00BBEC  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 45917  00BBEE  203B               	addwfc	??_motor_isr+15,w,c
 45918  00BBF0  D0EF               	goto	L74
 45919  00BBF2                     i2l2461:
 45920                           
 45921                           ;motor.c: 460: else;motor.c: 461: {;motor.c: 462: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 45922                           
 45923                           ; BSR set to: 2
 45924  00BBF2  90D8               	bcf	status,0,c
 45925  00BBF4  0100               	movlb	0	; () banked
 45926  00BBF6  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 45927  00BBF8  6EF6               	movwf	tblptrl,c
 45928  00BBFA  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45929  00BBFC  6EF7               	movwf	tblptrh,c
 45930  00BBFE  0E61               	movlw	low _motor_steps_lookup
 45931  00BC00  26F6               	addwf	tblptrl,f,c
 45932  00BC02  0E94               	movlw	high _motor_steps_lookup
 45933  00BC04  22F7               	addwfc	tblptrh,f,c
 45934  00BC06                     	if	1	;There are 3 active tblptr bytes
 45935  00BC06  6AF8               	clrf	tblptru,c
 45936  00BC08  0E00               	movlw	low (__mediumconst shr (0+16))
 45937  00BC0A  22F8               	addwfc	tblptru,f,c
 45938  00BC0C                     	endif
 45939  00BC0C  0009               	tblrd		*+
 45940  00BC0E  CFF5 F02C          	movff	tablat,??_motor_isr
 45941  00BC12  0009               	tblrd		*+
 45942  00BC14  CFF5 F02D          	movff	tablat,??_motor_isr+1
 45943  00BC18  502C               	movf	??_motor_isr,w,c
 45944  00BC1A  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 45945  00BC1C  0102               	movlb	2	; () banked
 45946  00BC1E  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 45947  00BC20  502D               	movf	??_motor_isr+1,w,c
 45948  00BC22  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 45949  00BC24  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 45950  00BC26  0E00               	movlw	0
 45951  00BC28  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 45952  00BC2A  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 45953  00BC2C  0E00               	movlw	0
 45954  00BC2E  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 45955  00BC30  D0CF               	goto	L74
 45956  00BC32                     i2l2456:
 45957                           
 45958                           ;motor.c: 465: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 45959                           
 45960                           ; BSR set to: 2
 45961  00BC32  0101               	movlb	1	; () banked
 45962  00BC34  513F               	movf	_motor_maximum_speed& (0+255),w,b
 45963  00BC36  0100               	movlb	0	; () banked
 45964  00BC38  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 45965  00BC3A  E106               	bnz	i2u1836_40
 45966  00BC3C  0101               	movlb	1	; () banked
 45967  00BC3E  5140               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 45968  00BC40  0100               	movlb	0	; () banked
 45969  00BC42  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45970  00BC44  B4D8               	btfsc	status,2,c
 45971  00BC46  D010               	goto	i2u1837_40
 45972  00BC48                     i2u1836_40:
 45973                           
 45974                           ; BSR set to: 0
 45975  00BC48  503E               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 45976  00BC4A  6E2C               	movwf	??_motor_isr& (0+255),c
 45977  00BC4C  503F               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 45978  00BC4E  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45979  00BC50  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 45980  00BC52  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 45981  00BC54  5040               	movf	motor_isr@steps_remaining,w,c
 45982  00BC56  5C2C               	subwf	??_motor_isr,w,c
 45983  00BC58  5041               	movf	motor_isr@steps_remaining+1,w,c
 45984  00BC5A  582D               	subwfb	??_motor_isr+1,w,c
 45985  00BC5C  5042               	movf	motor_isr@steps_remaining+2,w,c
 45986  00BC5E  582E               	subwfb	??_motor_isr+2,w,c
 45987  00BC60  5043               	movf	motor_isr@steps_remaining+3,w,c
 45988  00BC62  582F               	subwfb	??_motor_isr+3,w,c
 45989  00BC64  A0D8               	btfss	status,0,c
 45990  00BC66  D002               	goto	i2l2464
 45991  00BC68                     i2u1837_40:
 45992                           
 45993                           ; BSR set to: 0
 45994                           ;motor.c: 466: {;motor.c: 469: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 45995                           
 45996                           ; BSR set to: 0
 45997  00BC68  90D8               	bcf	status,0,c
 45998  00BC6A  D060               	goto	L73
 45999  00BC6C                     i2l2464:
 46000                           
 46001                           ;motor.c: 471: else;motor.c: 472: {;motor.c: 474: ++motor_current_speed;
 46002                           
 46003                           ; BSR set to: 2
 46004  00BC6C  0100               	movlb	0	; () banked
 46005  00BC6E  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 46006  00BC70  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46007                           
 46008                           ; BSR set to: 0
 46009                           ;motor.c: 478: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 46010  00BC72  0EFD               	movlw	low _motor_prescaler_lookup
 46011  00BC74  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46012  00BC76  6EF6               	movwf	tblptrl,c
 46013  00BC78  0E9B               	movlw	high _motor_prescaler_lookup
 46014  00BC7A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46015  00BC7C  6EF7               	movwf	tblptrh,c
 46016  00BC7E                     	if	1	;There are 3 active tblptr bytes
 46017  00BC7E  6AF8               	clrf	tblptru,c
 46018  00BC80  0E00               	movlw	low (__mediumconst shr (0+16))
 46019  00BC82  22F8               	addwfc	tblptru,f,c
 46020  00BC84                     	endif
 46021  00BC84  0008               	tblrd		*
 46022  00BC86  CFF5 F02C          	movff	tablat,??_motor_isr
 46023  00BC8A  50CA               	movf	4042,w,c	;volatile
 46024  00BC8C  182C               	xorwf	??_motor_isr,w,c
 46025  00BC8E  0BFC               	andlw	-4
 46026  00BC90  182C               	xorwf	??_motor_isr,w,c
 46027  00BC92  6ECA               	movwf	4042,c	;volatile
 46028                           
 46029                           ; BSR set to: 0
 46030                           ;motor.c: 480: PR2 = motor_period_lookup[motor_current_speed];
 46031  00BC94  0E16               	movlw	low _motor_period_lookup
 46032  00BC96  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46033  00BC98  6EF6               	movwf	tblptrl,c
 46034  00BC9A  0E9A               	movlw	high _motor_period_lookup
 46035  00BC9C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46036  00BC9E  6EF7               	movwf	tblptrh,c
 46037  00BCA0                     	if	1	;There are 3 active tblptr bytes
 46038  00BCA0  6AF8               	clrf	tblptru,c
 46039  00BCA2  0E00               	movlw	low (__mediumconst shr (0+16))
 46040  00BCA4  22F8               	addwfc	tblptru,f,c
 46041  00BCA6                     	endif
 46042  00BCA6  0008               	tblrd		*
 46043  00BCA8  CFF5 FFCB          	movff	tablat,4043	;volatile
 46044                           
 46045                           ; BSR set to: 0
 46046                           ;motor.c: 482: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46047  00BCAC  0E2F               	movlw	low _motor_postscaler_lookup
 46048  00BCAE  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46049  00BCB0  6EF6               	movwf	tblptrl,c
 46050  00BCB2  0E98               	movlw	high _motor_postscaler_lookup
 46051  00BCB4  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46052  00BCB6  6EF7               	movwf	tblptrh,c
 46053  00BCB8                     	if	1	;There are 3 active tblptr bytes
 46054  00BCB8  6AF8               	clrf	tblptru,c
 46055  00BCBA  0E00               	movlw	low (__mediumconst shr (0+16))
 46056  00BCBC  22F8               	addwfc	tblptru,f,c
 46057  00BCBE                     	endif
 46058  00BCBE  0008               	tblrd		*
 46059  00BCC0  CFF5 F02C          	movff	tablat,??_motor_isr
 46060  00BCC4  462C               	rlncf	??_motor_isr,f,c
 46061  00BCC6  462C               	rlncf	??_motor_isr,f,c
 46062  00BCC8  462C               	rlncf	??_motor_isr,f,c
 46063  00BCCA  50CA               	movf	4042,w,c	;volatile
 46064  00BCCC  182C               	xorwf	??_motor_isr,w,c
 46065  00BCCE  0B87               	andlw	-121
 46066  00BCD0  182C               	xorwf	??_motor_isr,w,c
 46067  00BCD2  6ECA               	movwf	4042,c	;volatile
 46068                           
 46069                           ; BSR set to: 0
 46070                           ;motor.c: 484: CCPR1L = PR2>>1;
 46071  00BCD4  90D8               	bcf	status,0,c
 46072  00BCD6  30CB               	rrcf	4043,w,c	;volatile
 46073  00BCD8  6EBB               	movwf	4027,c	;volatile
 46074                           
 46075                           ; BSR set to: 0
 46076                           ;motor.c: 486: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 46077  00BCDA  0101               	movlb	1	; () banked
 46078  00BCDC  5156               	movf	_motor_mode& (0+255),w,b
 46079  00BCDE  A4D8               	btfss	status,2,c
 46080  00BCE0  D023               	goto	i2l2468
 46081                           
 46082                           ; BSR set to: 1
 46083  00BCE2  0E2F               	movlw	low _motor_postscaler_lookup
 46084  00BCE4  0100               	movlb	0	; () banked
 46085  00BCE6  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46086  00BCE8  6EF6               	movwf	tblptrl,c
 46087  00BCEA  0E98               	movlw	high _motor_postscaler_lookup
 46088  00BCEC  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46089  00BCEE  6EF7               	movwf	tblptrh,c
 46090  00BCF0                     	if	1	;There are 3 active tblptr bytes
 46091  00BCF0  6AF8               	clrf	tblptru,c
 46092  00BCF2  0E00               	movlw	low (__mediumconst shr (0+16))
 46093  00BCF4  22F8               	addwfc	tblptru,f,c
 46094  00BCF6                     	endif
 46095  00BCF6  0008               	tblrd		*
 46096  00BCF8  50F5               	movf	tablat,w,c
 46097  00BCFA  0900               	iorlw	0
 46098  00BCFC  A4D8               	btfss	status,2,c
 46099  00BCFE  D014               	goto	i2l2468
 46100                           
 46101                           ; BSR set to: 0
 46102                           ;motor.c: 487: {;motor.c: 489: motor_mode = MOTOR_MODE_PWM;
 46103  00BD00  0E01               	movlw	1
 46104  00BD02  0101               	movlb	1	; () banked
 46105  00BD04  6F56               	movwf	_motor_mode& (0+255),b
 46106                           
 46107                           ;motor.c: 492: CCP1CONbits.CCP1M = 0b1100;
 46108  00BD06  50BA               	movf	4026,w,c	;volatile
 46109  00BD08  0BF0               	andlw	-16
 46110  00BD0A  090C               	iorlw	12
 46111  00BD0C  6EBA               	movwf	4026,c	;volatile
 46112                           
 46113                           ;motor.c: 495: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46114  00BD0E  0E55               	movlw	85
 46115  00BD10  6EA7               	movwf	4007,c	;volsfr
 46116  00BD12  0EAA               	movlw	170
 46117  00BD14  6EA7               	movwf	4007,c	;volsfr
 46118                           
 46119                           ; BSR set to: 1
 46120  00BD16  010E               	movlb	14	; () banked
 46121  00BD18  91BF               	bcf	191,0,b	;volatile
 46122                           
 46123                           ;motor.c: 496: RPOR4 = 14;
 46124  00BD1A  0E0E               	movlw	14
 46125  00BD1C  6FC4               	movwf	196,b	;volatile
 46126                           
 46127                           ;motor.c: 497: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46128  00BD1E  0E55               	movlw	85
 46129  00BD20  6EA7               	movwf	4007,c	;volsfr
 46130  00BD22  0EAA               	movlw	170
 46131  00BD24  6EA7               	movwf	4007,c	;volsfr
 46132                           
 46133                           ; BSR set to: 14
 46134  00BD26  81BF               	bsf	191,0,b	;volatile
 46135  00BD28                     i2l2468:
 46136                           
 46137                           ;motor.c: 498: };motor.c: 501: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46138                           
 46139                           ; BSR set to: 14
 46140  00BD28  90D8               	bcf	status,0,c
 46141  00BD2A  0100               	movlb	0	; () banked
 46142  00BD2C                     L73:
 46143  00BD2C  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46144  00BD2E  6EF6               	movwf	tblptrl,c
 46145  00BD30  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46146  00BD32  6EF7               	movwf	tblptrh,c
 46147  00BD34  0E61               	movlw	low _motor_steps_lookup
 46148  00BD36  26F6               	addwf	tblptrl,f,c
 46149  00BD38  0E94               	movlw	high _motor_steps_lookup
 46150  00BD3A  22F7               	addwfc	tblptrh,f,c
 46151  00BD3C                     	if	1	;There are 3 active tblptr bytes
 46152  00BD3C  6AF8               	clrf	tblptru,c
 46153  00BD3E  0E00               	movlw	low (__mediumconst shr (0+16))
 46154  00BD40  22F8               	addwfc	tblptru,f,c
 46155  00BD42                     	endif
 46156  00BD42  0009               	tblrd		*+
 46157  00BD44  CFF5 F02C          	movff	tablat,??_motor_isr
 46158  00BD48  0009               	tblrd		*+
 46159  00BD4A  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46160  00BD4E  502C               	movf	??_motor_isr,w,c
 46161  00BD50  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46162  00BD52  502D               	movf	??_motor_isr+1,w,c
 46163  00BD54  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46164  00BD56  6A30               	clrf	(??_motor_isr+4)& (0+255),c
 46165  00BD58  6A31               	clrf	(??_motor_isr+5)& (0+255),c
 46166  00BD5A  1E2E               	comf	??_motor_isr+2,f,c
 46167  00BD5C  1E2F               	comf	??_motor_isr+3,f,c
 46168  00BD5E  1E30               	comf	??_motor_isr+4,f,c
 46169  00BD60  1E31               	comf	??_motor_isr+5,f,c
 46170  00BD62  2A2E               	incf	??_motor_isr+2,f,c
 46171  00BD64  0E00               	movlw	0
 46172  00BD66  222F               	addwfc	??_motor_isr+3,f,c
 46173  00BD68  2230               	addwfc	??_motor_isr+4,f,c
 46174  00BD6A  2231               	addwfc	??_motor_isr+5,f,c
 46175  00BD6C  C0FE  F032         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 46176  00BD70  C0FF  F033         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 46177  00BD74  90D8               	bcf	status,0,c
 46178  00BD76  3632               	rlcf	??_motor_isr+6,f,c
 46179  00BD78  3633               	rlcf	??_motor_isr+7,f,c
 46180  00BD7A  0E02               	movlw	2
 46181  00BD7C  2632               	addwf	??_motor_isr+6,f,c
 46182  00BD7E  0E00               	movlw	0
 46183  00BD80  2233               	addwfc	??_motor_isr+7,f,c
 46184  00BD82  0E61               	movlw	low _motor_steps_lookup
 46185  00BD84  2432               	addwf	??_motor_isr+6,w,c
 46186  00BD86  6EF6               	movwf	tblptrl,c
 46187  00BD88  0E94               	movlw	high _motor_steps_lookup
 46188  00BD8A  2033               	addwfc	??_motor_isr+7,w,c
 46189  00BD8C  6EF7               	movwf	tblptrh,c
 46190  00BD8E                     	if	1	;There are 3 active tblptr bytes
 46191  00BD8E  6AF8               	clrf	tblptru,c
 46192  00BD90  0E00               	movlw	low (__mediumconst shr (0+16))
 46193  00BD92  22F8               	addwfc	tblptru,f,c
 46194  00BD94                     	endif
 46195  00BD94  0009               	tblrd		*+
 46196  00BD96  CFF5 F034          	movff	tablat,??_motor_isr+8
 46197  00BD9A  0009               	tblrd		*+
 46198  00BD9C  CFF5 F035          	movff	tablat,??_motor_isr+9
 46199  00BDA0  5034               	movf	??_motor_isr+8,w,c
 46200  00BDA2  242E               	addwf	??_motor_isr+2,w,c
 46201  00BDA4  6E36               	movwf	(??_motor_isr+10)& (0+255),c
 46202  00BDA6  5035               	movf	??_motor_isr+9,w,c
 46203  00BDA8  202F               	addwfc	??_motor_isr+3,w,c
 46204  00BDAA  6E37               	movwf	(??_motor_isr+11)& (0+255),c
 46205  00BDAC  0E00               	movlw	0
 46206  00BDAE  2030               	addwfc	??_motor_isr+4,w,c
 46207  00BDB0  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46208  00BDB2  0E00               	movlw	0
 46209  00BDB4  2031               	addwfc	??_motor_isr+5,w,c
 46210  00BDB6  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46211  00BDB8  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46212  00BDBA  2436               	addwf	??_motor_isr+10,w,c
 46213  00BDBC  0102               	movlb	2	; () banked
 46214  00BDBE  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46215  00BDC0  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46216  00BDC2  2037               	addwfc	??_motor_isr+11,w,c
 46217  00BDC4  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46218  00BDC6  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46219  00BDC8  2038               	addwfc	??_motor_isr+12,w,c
 46220  00BDCA  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46221  00BDCC  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46222  00BDCE  2039               	addwfc	??_motor_isr+13,w,c
 46223  00BDD0                     L74:
 46224  00BDD0  6F29               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 46225  00BDD2                     i2l2467:
 46226                           
 46227                           ; BSR set to: 2
 46228                           ;motor.c: 502: };motor.c: 503: };motor.c: 506: if(PIR1bits.TMR2IF)
 46229                           
 46230                           ; BSR set to: 2
 46231                           
 46232                           ; BSR set to: 2
 46233                           
 46234                           ; BSR set to: 2
 46235  00BDD2  A29E               	btfss	3998,1,c	;volatile
 46236  00BDD4  0012               	return	
 46237                           
 46238                           ; BSR set to: 2
 46239                           ;motor.c: 507: {;motor.c: 509: PIR1bits.TMR2IF = 0;
 46240  00BDD6  929E               	bcf	3998,1,c	;volatile
 46241                           
 46242                           ; BSR set to: 2
 46243                           ;motor.c: 511: ++motor_current_stepcount;
 46244  00BDD8  0E01               	movlw	1
 46245  00BDDA  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46246  00BDDC  0E00               	movlw	0
 46247  00BDDE  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46248  00BDE0  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46249  00BDE2  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46250                           
 46251                           ;motor.c: 514: os.current_position_in_steps += motor_direction;
 46252  00BDE4  0101               	movlb	1	; () banked
 46253  00BDE6  5155               	movf	_motor_direction& (0+255),w,b
 46254  00BDE8  6E2C               	movwf	??_motor_isr& (0+255),c
 46255  00BDEA  0E00               	movlw	0
 46256  00BDEC  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46257  00BDEE  0EFF               	movlw	255
 46258  00BDF0  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46259  00BDF2  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46260  00BDF4  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46261  00BDF6  502C               	movf	??_motor_isr,w,c
 46262  00BDF8  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46263  00BDFA  502D               	movf	??_motor_isr+1,w,c
 46264  00BDFC  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46265  00BDFE  502E               	movf	??_motor_isr+2,w,c
 46266  00BE00  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46267  00BE02  502F               	movf	??_motor_isr+3,w,c
 46268  00BE04  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46269                           
 46270                           ;motor.c: 515: if(os.current_position_in_steps==config.full_circle_in_steps)
 46271  00BE06  51A1               	movf	_config& (0+255),w,b
 46272  00BE08  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46273  00BE0A  E112               	bnz	i2l18421
 46274  00BE0C  51A2               	movf	(_config+1)& (0+255),w,b
 46275  00BE0E  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46276  00BE10  E10F               	bnz	i2l18421
 46277  00BE12  51A3               	movf	(_config+2)& (0+255),w,b
 46278  00BE14  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46279  00BE16  E10C               	bnz	i2l18421
 46280  00BE18  51A4               	movf	(_config+3)& (0+255),w,b
 46281  00BE1A  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46282  00BE1C  A4D8               	btfss	status,2,c
 46283  00BE1E  D008               	goto	i2l2470
 46284                           
 46285                           ; BSR set to: 1
 46286                           ;motor.c: 516: os.current_position_in_steps = 0;
 46287  00BE20  0E00               	movlw	0
 46288  00BE22  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46289  00BE24  0E00               	movlw	0
 46290  00BE26  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46291  00BE28  0E00               	movlw	0
 46292  00BE2A  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46293  00BE2C  0E00               	movlw	0
 46294  00BE2E  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46295  00BE30                     i2l2470:
 46296  00BE30                     i2l18421:
 46297                           
 46298                           ; BSR set to: 1
 46299                           ;motor.c: 517: if(os.current_position_in_steps==0xFFFFFFFF)
 46300  00BE30  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46301  00BE32  E114               	bnz	i2l2451
 46302  00BE34  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 46303  00BE36  E112               	bnz	i2l2451
 46304  00BE38  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 46305  00BE3A  E110               	bnz	i2l2451
 46306  00BE3C  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 46307  00BE3E  A4D8               	btfss	status,2,c
 46308  00BE40  0012               	return	
 46309                           
 46310                           ; BSR set to: 1
 46311                           ;motor.c: 518: os.current_position_in_steps = (config.full_circle_in_steps-1);
 46312  00BE42  0EFF               	movlw	255
 46313  00BE44  25A1               	addwf	_config& (0+255),w,b
 46314  00BE46  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46315  00BE48  0EFF               	movlw	255
 46316  00BE4A  21A2               	addwfc	(_config+1)& (0+255),w,b
 46317  00BE4C  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46318  00BE4E  0EFF               	movlw	255
 46319  00BE50  21A3               	addwfc	(_config+2)& (0+255),w,b
 46320  00BE52  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46321  00BE54  0EFF               	movlw	255
 46322  00BE56  21A4               	addwfc	(_config+3)& (0+255),w,b
 46323  00BE58  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46324                           
 46325                           ; BSR set to: 1
 46326  00BE5A  0012               	return	
 46327  00BE5C                     i2l2451:
 46328  00BE5C  0012               	return		;funcret
 46329  00BE5E                     __end_of_motor_isr:
 46330                           	opt stack 0
 46331                           tosu	equ	0xFFF
 46332                           tosh	equ	0xFFE
 46333                           tosl	equ	0xFFD
 46334                           pclatu	equ	0xFFB
 46335                           pclath	equ	0xFFA
 46336                           tblptru	equ	0xFF8
 46337                           tblptrh	equ	0xFF7
 46338                           tblptrl	equ	0xFF6
 46339                           tablat	equ	0xFF5
 46340                           prodh	equ	0xFF4
 46341                           prodl	equ	0xFF3
 46342                           intcon	equ	0xFF2
 46343                           indf0	equ	0xFEF
 46344                           postinc0	equ	0xFEE
 46345                           fsr0h	equ	0xFEA
 46346                           fsr0l	equ	0xFE9
 46347                           wreg	equ	0xFE8
 46348                           indf1	equ	0xFE7
 46349                           postinc1	equ	0xFE6
 46350                           postdec1	equ	0xFE5
 46351                           plusw1	equ	0xFE3
 46352                           fsr1h	equ	0xFE2
 46353                           fsr1l	equ	0xFE1
 46354                           indf2	equ	0xFDF
 46355                           postinc2	equ	0xFDE
 46356                           postdec2	equ	0xFDD
 46357                           plusw2	equ	0xFDB
 46358                           fsr2h	equ	0xFDA
 46359                           fsr2l	equ	0xFD9
 46360                           status	equ	0xFD8
 46361                           
 46362 ;; *************** function _i2c_eeprom_writeUint32 *****************
 46363 ;; Defined at:
 46364 ;;		line 230 in file "i2c.c"
 46365 ;; Parameters:    Size  Location     Type
 46366 ;;  address         2   37[COMRAM] unsigned int 
 46367 ;;  data            4   39[COMRAM] unsigned long 
 46368 ;; Auto vars:     Size  Location     Type
 46369 ;;		None
 46370 ;; Return value:  Size  Location     Type
 46371 ;;                  1    wreg      void 
 46372 ;; Registers used:
 46373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46374 ;; Tracked objects:
 46375 ;;		On entry : 0/0
 46376 ;;		On exit  : 0/0
 46377 ;;		Unchanged: 0/0
 46378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46379 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46383 ;;Total ram usage:        6 bytes
 46384 ;; Hardware stack levels used:    1
 46385 ;; Hardware stack levels required when called:    3
 46386 ;; This function calls:
 46387 ;;		_i2c_eeprom_write
 46388 ;; This function is called by:
 46389 ;;		_motor_isr
 46390 ;; This function uses a non-reentrant model
 46391 ;;
 46392                           
 46393                           	psect	text183
 46394  0156BE                     __ptext183:
 46395                           	opt stack 0
 46396  0156BE                     _i2c_eeprom_writeUint32:
 46397                           	opt stack 13
 46398                           
 46399                           ;i2c.c: 232: i2c_eeprom_write(address, &data, 4);
 46400                           
 46401                           ;incstack = 0
 46402  0156BE  C026  F00B         	movff	i2c_eeprom_writeUint32@address,i2c_eeprom_write@address
 46403  0156C2  C027  F00C         	movff	i2c_eeprom_writeUint32@address+1,i2c_eeprom_write@address+1
 46404  0156C6  0E28               	movlw	low i2c_eeprom_writeUint32@data
 46405  0156C8  6E0D               	movwf	i2c_eeprom_write@data,c
 46406  0156CA  0E00               	movlw	high i2c_eeprom_writeUint32@data
 46407  0156CC  6E0E               	movwf	i2c_eeprom_write@data+1,c
 46408  0156CE  0E04               	movlw	4
 46409  0156D0  6E0F               	movwf	i2c_eeprom_write@length,c
 46410  0156D2  ECBE  F09C         	call	_i2c_eeprom_write	;wreg free
 46411  0156D6  0012               	return		;funcret
 46412  0156D8                     __end_of_i2c_eeprom_writeUint32:
 46413                           	opt stack 0
 46414                           tosu	equ	0xFFF
 46415                           tosh	equ	0xFFE
 46416                           tosl	equ	0xFFD
 46417                           pclatu	equ	0xFFB
 46418                           pclath	equ	0xFFA
 46419                           tblptru	equ	0xFF8
 46420                           tblptrh	equ	0xFF7
 46421                           tblptrl	equ	0xFF6
 46422                           tablat	equ	0xFF5
 46423                           prodh	equ	0xFF4
 46424                           prodl	equ	0xFF3
 46425                           intcon	equ	0xFF2
 46426                           indf0	equ	0xFEF
 46427                           postinc0	equ	0xFEE
 46428                           fsr0h	equ	0xFEA
 46429                           fsr0l	equ	0xFE9
 46430                           wreg	equ	0xFE8
 46431                           indf1	equ	0xFE7
 46432                           postinc1	equ	0xFE6
 46433                           postdec1	equ	0xFE5
 46434                           plusw1	equ	0xFE3
 46435                           fsr1h	equ	0xFE2
 46436                           fsr1l	equ	0xFE1
 46437                           indf2	equ	0xFDF
 46438                           postinc2	equ	0xFDE
 46439                           postdec2	equ	0xFDD
 46440                           plusw2	equ	0xFDB
 46441                           fsr2h	equ	0xFDA
 46442                           fsr2l	equ	0xFD9
 46443                           status	equ	0xFD8
 46444                           
 46445 ;; *************** function _i2c_eeprom_write *****************
 46446 ;; Defined at:
 46447 ;;		line 242 in file "i2c.c"
 46448 ;; Parameters:    Size  Location     Type
 46449 ;;  address         2   10[COMRAM] unsigned int 
 46450 ;;  data            2   12[COMRAM] PTR unsigned char 
 46451 ;;		 -> i2c_eeprom_writeUint32@data(4), i2c_eeprom_writeUint16@data(2), 
 46452 ;;  length          1   14[COMRAM] unsigned char 
 46453 ;; Auto vars:     Size  Location     Type
 46454 ;;  dat            17   18[COMRAM] unsigned char [17]
 46455 ;;  cntr            1   36[COMRAM] unsigned char 
 46456 ;;  slave_addres    1   35[COMRAM] unsigned char 
 46457 ;; Return value:  Size  Location     Type
 46458 ;;                  1    wreg      void 
 46459 ;; Registers used:
 46460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46461 ;; Tracked objects:
 46462 ;;		On entry : 0/0
 46463 ;;		On exit  : 0/0
 46464 ;;		Unchanged: 0/0
 46465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46466 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46467 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46469 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46470 ;;Total ram usage:       27 bytes
 46471 ;; Hardware stack levels used:    1
 46472 ;; Hardware stack levels required when called:    2
 46473 ;; This function calls:
 46474 ;;		i2__i2c_eeprom_busy
 46475 ;;		i2__i2c_write
 46476 ;; This function is called by:
 46477 ;;		_i2c_eeprom_writeUint32
 46478 ;;		_i2c_eeprom_writeUint16
 46479 ;; This function uses a non-reentrant model
 46480 ;;
 46481                           
 46482                           	psect	text184
 46483  01397C                     __ptext184:
 46484                           	opt stack 0
 46485  01397C                     _i2c_eeprom_write:
 46486                           	opt stack 13
 46487                           
 46488                           ;i2c.c: 244: uint8_t cntr;;i2c.c: 245: uint8_t slave_address;;i2c.c: 246: uint8_t dat[17
      +                          ];;i2c.c: 248: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 46489                           
 46490                           ;incstack = 0
 46491  01397C  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 46492  013980  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 46493  013984  0E07               	movlw	7
 46494  013986  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 46495  013988                     i2u1390_45:
 46496  013988  90D8               	bcf	status,0,c
 46497  01398A  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 46498  01398C  3210               	rrcf	??_i2c_eeprom_write,f,c
 46499  01398E  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 46500  013990  D7FB               	goto	i2u1390_45
 46501  013992  5010               	movf	??_i2c_eeprom_write,w,c
 46502  013994  0B0E               	andlw	14
 46503  013996  09A0               	iorlw	160
 46504  013998  6E24               	movwf	i2c_eeprom_write@slave_address,c
 46505                           
 46506                           ;i2c.c: 249: dat[0] = address & 0xFF;
 46507  01399A  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 46508                           
 46509                           ;i2c.c: 251: length &= 0b00001111;
 46510  01399E  0E0F               	movlw	15
 46511  0139A0  160F               	andwf	i2c_eeprom_write@length,f,c
 46512                           
 46513                           ;i2c.c: 252: for(cntr=0; cntr<length; ++cntr)
 46514  0139A2  0E00               	movlw	0
 46515  0139A4  6E25               	movwf	i2c_eeprom_write@cntr,c
 46516  0139A6  D018               	goto	i2l1203
 46517  0139A8                     
 46518                           ;i2c.c: 253: {;i2c.c: 254: dat[cntr+1] = data[cntr];
 46519  0139A8  5025               	movf	i2c_eeprom_write@cntr,w,c
 46520  0139AA  0D01               	mullw	1
 46521  0139AC  50F3               	movf	prodl,w,c
 46522  0139AE  240D               	addwf	i2c_eeprom_write@data,w,c
 46523  0139B0  6ED9               	movwf	fsr2l,c
 46524  0139B2  50F4               	movf	prodh,w,c
 46525  0139B4  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 46526  0139B6  6EDA               	movwf	fsr2h,c
 46527  0139B8  5025               	movf	i2c_eeprom_write@cntr,w,c
 46528  0139BA  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 46529  0139BC  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 46530  0139BE  0E01               	movlw	1
 46531  0139C0  2610               	addwf	??_i2c_eeprom_write,f,c
 46532  0139C2  0E00               	movlw	0
 46533  0139C4  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 46534  0139C6  0E13               	movlw	low i2c_eeprom_write@dat
 46535  0139C8  2410               	addwf	??_i2c_eeprom_write,w,c
 46536  0139CA  6EE1               	movwf	fsr1l,c
 46537  0139CC  0E00               	movlw	high i2c_eeprom_write@dat
 46538  0139CE  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 46539  0139D0  6EE2               	movwf	fsr1h,c
 46540  0139D2  CFDF FFE7          	movff	indf2,indf1
 46541  0139D6  2A25               	incf	i2c_eeprom_write@cntr,f,c
 46542  0139D8                     i2l1203:
 46543  0139D8  500F               	movf	i2c_eeprom_write@length,w,c
 46544  0139DA  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 46545  0139DC  A0D8               	btfss	status,0,c
 46546  0139DE  D7E4               	goto	i2l1204
 46547  0139E0                     i2u1391_40:
 46548                           
 46549                           ;i2c.c: 255: };i2c.c: 258: while(_i2c_eeprom_busy());
 46550  0139E0  EC9C  F0AA         	call	i2__i2c_eeprom_busy	;wreg free
 46551  0139E4  0900               	iorlw	0
 46552  0139E6  A4D8               	btfss	status,2,c
 46553  0139E8  D7FB               	goto	i2u1391_40
 46554                           
 46555                           ;i2c.c: 260: _i2c_write(slave_address, &dat[0], length+1);
 46556  0139EA  0E13               	movlw	low i2c_eeprom_write@dat
 46557  0139EC  6E06               	movwf	i2__i2c_write@data,c
 46558  0139EE  0E00               	movlw	high i2c_eeprom_write@dat
 46559  0139F0  6E07               	movwf	i2__i2c_write@data+1,c
 46560  0139F2  280F               	incf	i2c_eeprom_write@length,w,c
 46561  0139F4  6E08               	movwf	i2__i2c_write@length,c
 46562  0139F6  5024               	movf	i2c_eeprom_write@slave_address,w,c
 46563  0139F8  EC80  F0A6         	call	i2__i2c_write
 46564  0139FC  0012               	return		;funcret
 46565  0139FE                     __end_of_i2c_eeprom_write:
 46566                           	opt stack 0
 46567                           tosu	equ	0xFFF
 46568                           tosh	equ	0xFFE
 46569                           tosl	equ	0xFFD
 46570                           pclatu	equ	0xFFB
 46571                           pclath	equ	0xFFA
 46572                           tblptru	equ	0xFF8
 46573                           tblptrh	equ	0xFF7
 46574                           tblptrl	equ	0xFF6
 46575                           tablat	equ	0xFF5
 46576                           prodh	equ	0xFF4
 46577                           prodl	equ	0xFF3
 46578                           intcon	equ	0xFF2
 46579                           indf0	equ	0xFEF
 46580                           postinc0	equ	0xFEE
 46581                           fsr0h	equ	0xFEA
 46582                           fsr0l	equ	0xFE9
 46583                           wreg	equ	0xFE8
 46584                           indf1	equ	0xFE7
 46585                           postinc1	equ	0xFE6
 46586                           postdec1	equ	0xFE5
 46587                           plusw1	equ	0xFE3
 46588                           fsr1h	equ	0xFE2
 46589                           fsr1l	equ	0xFE1
 46590                           indf2	equ	0xFDF
 46591                           postinc2	equ	0xFDE
 46592                           postdec2	equ	0xFDD
 46593                           plusw2	equ	0xFDB
 46594                           fsr2h	equ	0xFDA
 46595                           fsr2l	equ	0xFD9
 46596                           status	equ	0xFD8
 46597                           
 46598 ;; *************** function i2__i2c_write *****************
 46599 ;; Defined at:
 46600 ;;		line 84 in file "i2c.c"
 46601 ;; Parameters:    Size  Location     Type
 46602 ;;  slave_addres    1    wreg     unsigned char 
 46603 ;;  data            2    5[COMRAM] PTR unsigned char 
 46604 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 46605 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 46606 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 46607 ;;  length          1    7[COMRAM] unsigned char 
 46608 ;; Auto vars:     Size  Location     Type
 46609 ;;  slave_addres    1    8[COMRAM] unsigned char 
 46610 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 46611 ;; Return value:  Size  Location     Type
 46612 ;;                  1    wreg      void 
 46613 ;; Registers used:
 46614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46615 ;; Tracked objects:
 46616 ;;		On entry : 0/0
 46617 ;;		On exit  : 0/0
 46618 ;;		Unchanged: 0/0
 46619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46620 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46624 ;;Total ram usage:        5 bytes
 46625 ;; Hardware stack levels used:    1
 46626 ;; Hardware stack levels required when called:    1
 46627 ;; This function calls:
 46628 ;;		i2__i2c_send
 46629 ;;		i2__i2c_start
 46630 ;;		i2__i2c_stop
 46631 ;;		i2__i2c_wait_idle
 46632 ;; This function is called by:
 46633 ;;		_i2c_eeprom_write
 46634 ;; This function uses a non-reentrant model
 46635 ;;
 46636                           
 46637                           	psect	text185
 46638  014D00                     __ptext185:
 46639                           	opt stack 0
 46640  014D00                     i2__i2c_write:
 46641                           	opt stack 13
 46642                           
 46643                           ;incstack = 0
 46644                           ;i2__i2c_write@slave_address stored from wreg
 46645  014D00  6E09               	movwf	i2__i2c_write@slave_address,c
 46646                           
 46647                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 46648  014D02  ECD1  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46649                           
 46650                           ;i2c.c: 89: _i2c_start();
 46651  014D06  EC04  F0AC         	call	i2__i2c_start	;wreg free
 46652                           
 46653                           ;i2c.c: 90: _i2c_wait_idle();
 46654  014D0A  ECD1  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46655                           
 46656                           ;i2c.c: 91: _i2c_send(slave_address);
 46657  014D0E  5009               	movf	i2__i2c_write@slave_address,w,c
 46658  014D10  EC08  F0AC         	call	i2__i2c_send
 46659                           
 46660                           ;i2c.c: 92: _i2c_wait_idle();
 46661  014D14  ECD1  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46662                           
 46663                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 46664  014D18  0E00               	movlw	0
 46665  014D1A  6E0A               	movwf	i2__i2c_write@cntr,c
 46666  014D1C  D00E               	goto	i2l1158
 46667  014D1E                     
 46668                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 46669  014D1E  500A               	movf	i2__i2c_write@cntr,w,c
 46670  014D20  0D01               	mullw	1
 46671  014D22  50F3               	movf	prodl,w,c
 46672  014D24  2406               	addwf	i2__i2c_write@data,w,c
 46673  014D26  6ED9               	movwf	fsr2l,c
 46674  014D28  50F4               	movf	prodh,w,c
 46675  014D2A  2007               	addwfc	i2__i2c_write@data+1,w,c
 46676  014D2C  6EDA               	movwf	fsr2h,c
 46677  014D2E  50DF               	movf	indf2,w,c
 46678  014D30  EC08  F0AC         	call	i2__i2c_send
 46679                           
 46680                           ;i2c.c: 97: _i2c_wait_idle();
 46681  014D34  ECD1  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46682  014D38  2A0A               	incf	i2__i2c_write@cntr,f,c
 46683  014D3A                     i2l1158:
 46684  014D3A  5008               	movf	i2__i2c_write@length,w,c
 46685  014D3C  5C0A               	subwf	i2__i2c_write@cntr,w,c
 46686  014D3E  A0D8               	btfss	status,0,c
 46687  014D40  D7EE               	goto	i2l1159
 46688                           
 46689                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 46690  014D42  EC00  F0AC         	call	i2__i2c_stop	;wreg free
 46691  014D46  0012               	return		;funcret
 46692  014D48                     __end_ofi2__i2c_write:
 46693                           	opt stack 0
 46694                           tosu	equ	0xFFF
 46695                           tosh	equ	0xFFE
 46696                           tosl	equ	0xFFD
 46697                           pclatu	equ	0xFFB
 46698                           pclath	equ	0xFFA
 46699                           tblptru	equ	0xFF8
 46700                           tblptrh	equ	0xFF7
 46701                           tblptrl	equ	0xFF6
 46702                           tablat	equ	0xFF5
 46703                           prodh	equ	0xFF4
 46704                           prodl	equ	0xFF3
 46705                           intcon	equ	0xFF2
 46706                           indf0	equ	0xFEF
 46707                           postinc0	equ	0xFEE
 46708                           fsr0h	equ	0xFEA
 46709                           fsr0l	equ	0xFE9
 46710                           wreg	equ	0xFE8
 46711                           indf1	equ	0xFE7
 46712                           postinc1	equ	0xFE6
 46713                           postdec1	equ	0xFE5
 46714                           plusw1	equ	0xFE3
 46715                           fsr1h	equ	0xFE2
 46716                           fsr1l	equ	0xFE1
 46717                           indf2	equ	0xFDF
 46718                           postinc2	equ	0xFDE
 46719                           postdec2	equ	0xFDD
 46720                           plusw2	equ	0xFDB
 46721                           fsr2h	equ	0xFDA
 46722                           fsr2l	equ	0xFD9
 46723                           status	equ	0xFD8
 46724                           
 46725 ;; *************** function i2__i2c_eeprom_busy *****************
 46726 ;; Defined at:
 46727 ;;		line 169 in file "i2c.c"
 46728 ;; Parameters:    Size  Location     Type
 46729 ;;		None
 46730 ;; Auto vars:     Size  Location     Type
 46731 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 46732 ;; Return value:  Size  Location     Type
 46733 ;;                  1    wreg      unsigned char 
 46734 ;; Registers used:
 46735 ;;		wreg, status,2, status,0, cstack
 46736 ;; Tracked objects:
 46737 ;;		On entry : 0/0
 46738 ;;		On exit  : 0/0
 46739 ;;		Unchanged: 0/0
 46740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46745 ;;Total ram usage:        1 bytes
 46746 ;; Hardware stack levels used:    1
 46747 ;; Hardware stack levels required when called:    1
 46748 ;; This function calls:
 46749 ;;		i2__i2c_send
 46750 ;;		i2__i2c_start
 46751 ;;		i2__i2c_stop
 46752 ;;		i2__i2c_wait_idle
 46753 ;; This function is called by:
 46754 ;;		_i2c_eeprom_write
 46755 ;; This function uses a non-reentrant model
 46756 ;;
 46757                           
 46758                           	psect	text186
 46759  015538                     __ptext186:
 46760                           	opt stack 0
 46761  015538                     i2__i2c_eeprom_busy:
 46762                           	opt stack 13
 46763                           
 46764                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
 46765                           
 46766                           ;incstack = 0
 46767  015538  ECD1  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46768                           
 46769                           ;i2c.c: 173: _i2c_start();
 46770  01553C  EC04  F0AC         	call	i2__i2c_start	;wreg free
 46771                           
 46772                           ;i2c.c: 174: _i2c_wait_idle();
 46773  015540  ECD1  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46774                           
 46775                           ;i2c.c: 175: _i2c_send(0b10100000);
 46776  015544  0EA0               	movlw	160
 46777  015546  EC08  F0AC         	call	i2__i2c_send
 46778                           
 46779                           ;i2c.c: 176: _i2c_wait_idle();
 46780  01554A  ECD1  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46781                           
 46782                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
 46783  01554E  0E00               	movlw	0
 46784  015550  BCC5               	btfsc	4037,6,c	;volatile
 46785  015552  0E01               	movlw	1
 46786  015554  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 46787                           
 46788                           ;i2c.c: 181: _i2c_stop();
 46789  015556  EC00  F0AC         	call	i2__i2c_stop	;wreg free
 46790                           
 46791                           ;i2c.c: 183: return 0;
 46792  01555A  0E00               	movlw	0
 46793  01555C  0012               	return	
 46794  01555E                     __end_ofi2__i2c_eeprom_busy:
 46795                           	opt stack 0
 46796                           tosu	equ	0xFFF
 46797                           tosh	equ	0xFFE
 46798                           tosl	equ	0xFFD
 46799                           pclatu	equ	0xFFB
 46800                           pclath	equ	0xFFA
 46801                           tblptru	equ	0xFF8
 46802                           tblptrh	equ	0xFF7
 46803                           tblptrl	equ	0xFF6
 46804                           tablat	equ	0xFF5
 46805                           prodh	equ	0xFF4
 46806                           prodl	equ	0xFF3
 46807                           intcon	equ	0xFF2
 46808                           indf0	equ	0xFEF
 46809                           postinc0	equ	0xFEE
 46810                           fsr0h	equ	0xFEA
 46811                           fsr0l	equ	0xFE9
 46812                           wreg	equ	0xFE8
 46813                           indf1	equ	0xFE7
 46814                           postinc1	equ	0xFE6
 46815                           postdec1	equ	0xFE5
 46816                           plusw1	equ	0xFE3
 46817                           fsr1h	equ	0xFE2
 46818                           fsr1l	equ	0xFE1
 46819                           indf2	equ	0xFDF
 46820                           postinc2	equ	0xFDE
 46821                           postdec2	equ	0xFDD
 46822                           plusw2	equ	0xFDB
 46823                           fsr2h	equ	0xFDA
 46824                           fsr2l	equ	0xFD9
 46825                           status	equ	0xFD8
 46826                           
 46827 ;; *************** function i2__i2c_wait_idle *****************
 46828 ;; Defined at:
 46829 ;;		line 40 in file "i2c.c"
 46830 ;; Parameters:    Size  Location     Type
 46831 ;;		None
 46832 ;; Auto vars:     Size  Location     Type
 46833 ;;		None
 46834 ;; Return value:  Size  Location     Type
 46835 ;;                  1    wreg      void 
 46836 ;; Registers used:
 46837 ;;		wreg, status,2, status,0
 46838 ;; Tracked objects:
 46839 ;;		On entry : 0/0
 46840 ;;		On exit  : 0/0
 46841 ;;		Unchanged: 0/0
 46842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46845 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46846 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46847 ;;Total ram usage:        5 bytes
 46848 ;; Hardware stack levels used:    1
 46849 ;; This function calls:
 46850 ;;		Nothing
 46851 ;; This function is called by:
 46852 ;;		i2__i2c_write
 46853 ;;		i2__i2c_eeprom_busy
 46854 ;; This function uses a non-reentrant model
 46855 ;;
 46856                           
 46857                           	psect	text187
 46858  0147A2                     __ptext187:
 46859                           	opt stack 0
 46860  0147A2                     i2__i2c_wait_idle:
 46861                           	opt stack 13
 46862                           
 46863                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 46864                           
 46865                           ;incstack = 0
 46866  0147A2  A4C7               	btfss	4039,2,c	;volatile
 46867  0147A4  D003               	goto	i2u1273_40
 46868  0147A6  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 46869  0147A8  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 46870  0147AA  D001               	goto	i2u1273_48
 46871  0147AC                     i2u1273_40:
 46872  0147AC  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 46873  0147AE                     i2u1273_48:
 46874  0147AE  A0C5               	btfss	4037,0,c	;volatile
 46875  0147B0  D003               	goto	i2u1274_40
 46876  0147B2  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 46877  0147B4  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 46878  0147B6  D001               	goto	i2u1274_48
 46879  0147B8                     i2u1274_40:
 46880  0147B8  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 46881  0147BA                     i2u1274_48:
 46882  0147BA  A2C5               	btfss	4037,1,c	;volatile
 46883  0147BC  D003               	goto	i2u1275_40
 46884  0147BE  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 46885  0147C0  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 46886  0147C2  D001               	goto	i2u1275_48
 46887  0147C4                     i2u1275_40:
 46888  0147C4  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 46889  0147C6                     i2u1275_48:
 46890  0147C6  A4C5               	btfss	4037,2,c	;volatile
 46891  0147C8  D003               	goto	i2u1276_40
 46892  0147CA  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 46893  0147CC  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 46894  0147CE  D001               	goto	i2u1276_48
 46895  0147D0                     i2u1276_40:
 46896  0147D0  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 46897  0147D2                     i2u1276_48:
 46898  0147D2  A6C5               	btfss	4037,3,c	;volatile
 46899  0147D4  D003               	goto	i2u1277_40
 46900  0147D6  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 46901  0147D8  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 46902  0147DA  D001               	goto	i2u1277_48
 46903  0147DC                     i2u1277_40:
 46904  0147DC  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 46905  0147DE                     i2u1277_48:
 46906  0147DE  A8C5               	btfss	4037,4,c	;volatile
 46907  0147E0  D002               	goto	i2u1278_40
 46908  0147E2  0E01               	movlw	1
 46909  0147E4  D001               	goto	i2u1278_46
 46910  0147E6                     i2u1278_40:
 46911  0147E6  0E00               	movlw	0
 46912  0147E8                     i2u1278_46:
 46913  0147E8  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 46914  0147EA  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 46915  0147EC  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 46916  0147EE  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 46917  0147F0  1001               	iorwf	??i2__i2c_wait_idle,w,c
 46918  0147F2  0900               	iorlw	0
 46919  0147F4  B4D8               	btfsc	status,2,c
 46920  0147F6  0012               	return	
 46921  0147F8  D7D4               	goto	i2__i2c_wait_idle
 46922  0147FA                     __end_ofi2__i2c_wait_idle:
 46923                           	opt stack 0
 46924                           tosu	equ	0xFFF
 46925                           tosh	equ	0xFFE
 46926                           tosl	equ	0xFFD
 46927                           pclatu	equ	0xFFB
 46928                           pclath	equ	0xFFA
 46929                           tblptru	equ	0xFF8
 46930                           tblptrh	equ	0xFF7
 46931                           tblptrl	equ	0xFF6
 46932                           tablat	equ	0xFF5
 46933                           prodh	equ	0xFF4
 46934                           prodl	equ	0xFF3
 46935                           intcon	equ	0xFF2
 46936                           indf0	equ	0xFEF
 46937                           postinc0	equ	0xFEE
 46938                           fsr0h	equ	0xFEA
 46939                           fsr0l	equ	0xFE9
 46940                           wreg	equ	0xFE8
 46941                           indf1	equ	0xFE7
 46942                           postinc1	equ	0xFE6
 46943                           postdec1	equ	0xFE5
 46944                           plusw1	equ	0xFE3
 46945                           fsr1h	equ	0xFE2
 46946                           fsr1l	equ	0xFE1
 46947                           indf2	equ	0xFDF
 46948                           postinc2	equ	0xFDE
 46949                           postdec2	equ	0xFDD
 46950                           plusw2	equ	0xFDB
 46951                           fsr2h	equ	0xFDA
 46952                           fsr2l	equ	0xFD9
 46953                           status	equ	0xFD8
 46954                           
 46955 ;; *************** function i2__i2c_stop *****************
 46956 ;; Defined at:
 46957 ;;		line 63 in file "i2c.c"
 46958 ;; Parameters:    Size  Location     Type
 46959 ;;		None
 46960 ;; Auto vars:     Size  Location     Type
 46961 ;;		None
 46962 ;; Return value:  Size  Location     Type
 46963 ;;                  1    wreg      void 
 46964 ;; Registers used:
 46965 ;;		None
 46966 ;; Tracked objects:
 46967 ;;		On entry : 0/0
 46968 ;;		On exit  : 0/0
 46969 ;;		Unchanged: 0/0
 46970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46975 ;;Total ram usage:        0 bytes
 46976 ;; Hardware stack levels used:    1
 46977 ;; This function calls:
 46978 ;;		Nothing
 46979 ;; This function is called by:
 46980 ;;		i2__i2c_write
 46981 ;;		i2__i2c_eeprom_busy
 46982 ;; This function uses a non-reentrant model
 46983 ;;
 46984                           
 46985                           	psect	text188
 46986  015800                     __ptext188:
 46987                           	opt stack 0
 46988  015800                     i2__i2c_stop:
 46989                           	opt stack 13
 46990                           
 46991                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 46992                           
 46993                           ;incstack = 0
 46994  015800  84C5               	bsf	4037,2,c	;volatile
 46995  015802  A4C5               	btfss	4037,2,c	;volatile
 46996  015804  0012               	return	
 46997  015806  D7FD               	goto	i2l1141
 46998  015808                     __end_ofi2__i2c_stop:
 46999                           	opt stack 0
 47000                           tosu	equ	0xFFF
 47001                           tosh	equ	0xFFE
 47002                           tosl	equ	0xFFD
 47003                           pclatu	equ	0xFFB
 47004                           pclath	equ	0xFFA
 47005                           tblptru	equ	0xFF8
 47006                           tblptrh	equ	0xFF7
 47007                           tblptrl	equ	0xFF6
 47008                           tablat	equ	0xFF5
 47009                           prodh	equ	0xFF4
 47010                           prodl	equ	0xFF3
 47011                           intcon	equ	0xFF2
 47012                           indf0	equ	0xFEF
 47013                           postinc0	equ	0xFEE
 47014                           fsr0h	equ	0xFEA
 47015                           fsr0l	equ	0xFE9
 47016                           wreg	equ	0xFE8
 47017                           indf1	equ	0xFE7
 47018                           postinc1	equ	0xFE6
 47019                           postdec1	equ	0xFE5
 47020                           plusw1	equ	0xFE3
 47021                           fsr1h	equ	0xFE2
 47022                           fsr1l	equ	0xFE1
 47023                           indf2	equ	0xFDF
 47024                           postinc2	equ	0xFDE
 47025                           postdec2	equ	0xFDD
 47026                           plusw2	equ	0xFDB
 47027                           fsr2h	equ	0xFDA
 47028                           fsr2l	equ	0xFD9
 47029                           status	equ	0xFD8
 47030                           
 47031 ;; *************** function i2__i2c_start *****************
 47032 ;; Defined at:
 47033 ;;		line 45 in file "i2c.c"
 47034 ;; Parameters:    Size  Location     Type
 47035 ;;		None
 47036 ;; Auto vars:     Size  Location     Type
 47037 ;;		None
 47038 ;; Return value:  Size  Location     Type
 47039 ;;                  1    wreg      void 
 47040 ;; Registers used:
 47041 ;;		None
 47042 ;; Tracked objects:
 47043 ;;		On entry : 0/0
 47044 ;;		On exit  : 0/0
 47045 ;;		Unchanged: 0/0
 47046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47051 ;;Total ram usage:        0 bytes
 47052 ;; Hardware stack levels used:    1
 47053 ;; This function calls:
 47054 ;;		Nothing
 47055 ;; This function is called by:
 47056 ;;		i2__i2c_write
 47057 ;;		i2__i2c_eeprom_busy
 47058 ;; This function uses a non-reentrant model
 47059 ;;
 47060                           
 47061                           	psect	text189
 47062  015808                     __ptext189:
 47063                           	opt stack 0
 47064  015808                     i2__i2c_start:
 47065                           	opt stack 13
 47066                           
 47067                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 47068                           
 47069                           ;incstack = 0
 47070  015808  80C5               	bsf	4037,0,c	;volatile
 47071  01580A  A0C5               	btfss	4037,0,c	;volatile
 47072  01580C  0012               	return	
 47073  01580E  D7FD               	goto	i2l1126
 47074  015810                     __end_ofi2__i2c_start:
 47075                           	opt stack 0
 47076                           tosu	equ	0xFFF
 47077                           tosh	equ	0xFFE
 47078                           tosl	equ	0xFFD
 47079                           pclatu	equ	0xFFB
 47080                           pclath	equ	0xFFA
 47081                           tblptru	equ	0xFF8
 47082                           tblptrh	equ	0xFF7
 47083                           tblptrl	equ	0xFF6
 47084                           tablat	equ	0xFF5
 47085                           prodh	equ	0xFF4
 47086                           prodl	equ	0xFF3
 47087                           intcon	equ	0xFF2
 47088                           indf0	equ	0xFEF
 47089                           postinc0	equ	0xFEE
 47090                           fsr0h	equ	0xFEA
 47091                           fsr0l	equ	0xFE9
 47092                           wreg	equ	0xFE8
 47093                           indf1	equ	0xFE7
 47094                           postinc1	equ	0xFE6
 47095                           postdec1	equ	0xFE5
 47096                           plusw1	equ	0xFE3
 47097                           fsr1h	equ	0xFE2
 47098                           fsr1l	equ	0xFE1
 47099                           indf2	equ	0xFDF
 47100                           postinc2	equ	0xFDE
 47101                           postdec2	equ	0xFDD
 47102                           plusw2	equ	0xFDB
 47103                           fsr2h	equ	0xFDA
 47104                           fsr2l	equ	0xFD9
 47105                           status	equ	0xFD8
 47106                           
 47107 ;; *************** function i2__i2c_send *****************
 47108 ;; Defined at:
 47109 ;;		line 51 in file "i2c.c"
 47110 ;; Parameters:    Size  Location     Type
 47111 ;;  dat             1    wreg     unsigned char 
 47112 ;; Auto vars:     Size  Location     Type
 47113 ;;  dat             1    0[COMRAM] unsigned char 
 47114 ;; Return value:  Size  Location     Type
 47115 ;;                  1    wreg      void 
 47116 ;; Registers used:
 47117 ;;		wreg
 47118 ;; Tracked objects:
 47119 ;;		On entry : 0/0
 47120 ;;		On exit  : 0/0
 47121 ;;		Unchanged: 0/0
 47122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47127 ;;Total ram usage:        1 bytes
 47128 ;; Hardware stack levels used:    1
 47129 ;; This function calls:
 47130 ;;		Nothing
 47131 ;; This function is called by:
 47132 ;;		i2__i2c_write
 47133 ;;		i2__i2c_eeprom_busy
 47134 ;; This function uses a non-reentrant model
 47135 ;;
 47136                           
 47137                           	psect	text190
 47138  015810                     __ptext190:
 47139                           	opt stack 0
 47140  015810                     i2__i2c_send:
 47141                           	opt stack 13
 47142                           
 47143                           ;incstack = 0
 47144                           ;i2__i2c_send@dat stored from wreg
 47145  015810  6E01               	movwf	i2__i2c_send@dat,c
 47146                           
 47147                           ;i2c.c: 53: SSP1BUF = dat;
 47148  015812  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 47149  015816  0012               	return		;funcret
 47150  015818                     __end_ofi2__i2c_send:
 47151                           	opt stack 0
 47152                           tosu	equ	0xFFF
 47153                           tosh	equ	0xFFE
 47154                           tosl	equ	0xFFD
 47155                           pclatu	equ	0xFFB
 47156                           pclath	equ	0xFFA
 47157                           tblptru	equ	0xFF8
 47158                           tblptrh	equ	0xFF7
 47159                           tblptrl	equ	0xFF6
 47160                           tablat	equ	0xFF5
 47161                           prodh	equ	0xFF4
 47162                           prodl	equ	0xFF3
 47163                           intcon	equ	0xFF2
 47164                           indf0	equ	0xFEF
 47165                           postinc0	equ	0xFEE
 47166                           fsr0h	equ	0xFEA
 47167                           fsr0l	equ	0xFE9
 47168                           wreg	equ	0xFE8
 47169                           indf1	equ	0xFE7
 47170                           postinc1	equ	0xFE6
 47171                           postdec1	equ	0xFE5
 47172                           plusw1	equ	0xFE3
 47173                           fsr1h	equ	0xFE2
 47174                           fsr1l	equ	0xFE1
 47175                           indf2	equ	0xFDF
 47176                           postinc2	equ	0xFDE
 47177                           postdec2	equ	0xFDD
 47178                           plusw2	equ	0xFDB
 47179                           fsr2h	equ	0xFDA
 47180                           fsr2l	equ	0xFD9
 47181                           status	equ	0xFD8
 47182                           
 47183 ;; *************** function _USBDeviceTasks *****************
 47184 ;; Defined at:
 47185 ;;		line 477 in file "usb_device.c"
 47186 ;; Parameters:    Size  Location     Type
 47187 ;;		None
 47188 ;; Auto vars:     Size  Location     Type
 47189 ;;  i               1   30[COMRAM] unsigned char 
 47190 ;; Return value:  Size  Location     Type
 47191 ;;                  1    wreg      void 
 47192 ;; Registers used:
 47193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 47194 ;; Tracked objects:
 47195 ;;		On entry : 0/0
 47196 ;;		On exit  : 0/0
 47197 ;;		Unchanged: 0/0
 47198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47203 ;;Total ram usage:        1 bytes
 47204 ;; Hardware stack levels used:    1
 47205 ;; Hardware stack levels required when called:    8
 47206 ;; This function calls:
 47207 ;;		_USBCtrlEPAllowStatusStage
 47208 ;;		_USBCtrlEPService
 47209 ;;		_USBIncrement1msInternalTimers
 47210 ;;		_USBStallHandler
 47211 ;;		_USBSuspend
 47212 ;;		_USBWakeFromSuspend
 47213 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47214 ;;		i2_USBDeviceInit
 47215 ;; This function is called by:
 47216 ;;		_SYS_InterruptHigh
 47217 ;; This function uses a non-reentrant model
 47218 ;;
 47219                           
 47220                           	psect	text191
 47221  01002E                     __ptext191:
 47222                           	opt stack 0
 47223  01002E                     _USBDeviceTasks:
 47224                           	opt stack 9
 47225                           
 47226                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 47227                           
 47228                           ;incstack = 0
 47229  01002E  045E               	decf	_USBDeviceState,w,c	;volatile
 47230  010030  B4D8               	btfsc	status,2,c
 47231                           
 47232                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 47233  010032  BA65               	btfsc	3941,5,c	;volatile
 47234  010034  D007               	goto	i2l155
 47235                           
 47236                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 47237  010036  0E00               	movlw	0
 47238  010038  6E62               	movwf	3938,c	;volatile
 47239                           
 47240                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 47241  01003A  010F               	movlb	15	; () banked
 47242  01003C  8136               	bsf	54,0,b	;volatile
 47243                           
 47244                           ; BSR set to: 15
 47245                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 47246  01003E  8936               	bsf	54,4,b	;volatile
 47247                           
 47248                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 47249  010040  0E02               	movlw	2
 47250  010042  6E5E               	movwf	_USBDeviceState,c	;volatile
 47251  010044                     i2l155:
 47252                           
 47253                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 47254                           
 47255                           ; BSR set to: 15
 47256                           
 47257                           ; BSR set to: 15
 47258  010044  A462               	btfss	3938,2,c	;volatile
 47259  010046  D006               	goto	i2l156
 47260  010048  010F               	movlb	15	; () banked
 47261  01004A  A536               	btfss	54,2,b	;volatile
 47262  01004C  D003               	goto	i2l156
 47263                           
 47264                           ; BSR set to: 15
 47265                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 47266  01004E  9462               	bcf	3938,2,c	;volatile
 47267                           
 47268                           ; BSR set to: 15
 47269                           ;usb_device.c: 640: USBWakeFromSuspend();
 47270  010050  EC5D  F0A8         	call	_USBWakeFromSuspend	;wreg free
 47271  010054                     i2l156:
 47272                           
 47273                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 47274  010054  A265               	btfss	3941,1,c	;volatile
 47275  010056  D002               	goto	i2l157
 47276                           
 47277                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 47278  010058  98A1               	bcf	4001,4,c	;volatile
 47279                           
 47280                           ;usb_device.c: 650: return;
 47281  01005A  0012               	return	
 47282  01005C                     i2l157:
 47283                           
 47284                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 47285  01005C  A062               	btfss	3938,0,c	;volatile
 47286  01005E  D009               	goto	i2l159
 47287  010060  010F               	movlb	15	; () banked
 47288  010062  A136               	btfss	54,0,b	;volatile
 47289  010064  D006               	goto	i2l159
 47290                           
 47291                           ; BSR set to: 15
 47292                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 47293  010066  ECBA  F080         	call	i2_USBDeviceInit	;wreg free
 47294                           
 47295                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 47296  01006A  88A0               	bsf	4000,4,c	;volatile
 47297                           
 47298                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 47299  01006C  0E04               	movlw	4
 47300  01006E  6E5E               	movwf	_USBDeviceState,c	;volatile
 47301                           
 47302                           ;usb_device.c: 681: (UIR &= 0xFE);
 47303  010070  9062               	bcf	3938,0,c	;volatile
 47304  010072                     i2l159:
 47305                           
 47306                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 47307  010072  A862               	btfss	3938,4,c	;volatile
 47308  010074  D004               	goto	i2l160
 47309  010076  010F               	movlb	15	; () banked
 47310  010078  B936               	btfsc	54,4,b	;volatile
 47311                           
 47312                           ; BSR set to: 15
 47313                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 47314  01007A  EC5D  F0A9         	call	_USBSuspend	;wreg free
 47315  01007E                     i2l160:
 47316                           
 47317                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 47318  01007E  AC62               	btfss	3938,6,c	;volatile
 47319  010080  D01C               	goto	i2l164
 47320                           
 47321                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 47322  010082  010F               	movlb	15	; () banked
 47323  010084  AD36               	btfss	54,6,b	;volatile
 47324  010086  D00E               	goto	i2l162
 47325                           
 47326                           ; BSR set to: 15
 47327                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 47328  010088  0E00               	movlw	0
 47329  01008A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47330  01008C  0E73               	movlw	115
 47331  01008E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47332  010090  0E00               	movlw	0
 47333  010092  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47334  010094  0E00               	movlw	0
 47335  010096  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47336  010098  0E00               	movlw	0
 47337  01009A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47338  01009C  0E01               	movlw	1
 47339  01009E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47340  0100A0  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47341  0100A4                     i2l162:
 47342                           
 47343                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 47344  0100A4  9C62               	bcf	3938,6,c	;volatile
 47345                           
 47346                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 47347  0100A6  EC18  F0AB         	call	_USBIncrement1msInternalTimers	;wreg free
 47348                           
 47349                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 47350  0100AA  0101               	movlb	1	; () banked
 47351  0100AC  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 47352  0100AE  A4D8               	btfss	status,2,c
 47353                           
 47354                           ; BSR set to: 1
 47355                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 47356  0100B0  076A               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 47357                           
 47358                           ; BSR set to: 1
 47359                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 47360                           
 47361                           ; BSR set to: 1
 47362  0100B2  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 47363  0100B4  B4D8               	btfsc	status,2,c
 47364                           
 47365                           ; BSR set to: 1
 47366                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 47367  0100B6  EC68  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 47368  0100BA                     i2l164:
 47369                           
 47370                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 47371  0100BA  AA62               	btfss	3938,5,c	;volatile
 47372  0100BC  D004               	goto	i2l165
 47373  0100BE  010F               	movlb	15	; () banked
 47374  0100C0  BB36               	btfsc	54,5,b	;volatile
 47375                           
 47376                           ; BSR set to: 15
 47377                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 47378  0100C2  EC2D  F0A7         	call	_USBStallHandler	;wreg free
 47379  0100C6                     i2l165:
 47380                           
 47381                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 47382  0100C6  A262               	btfss	3938,1,c	;volatile
 47383  0100C8  D012               	goto	i2l166
 47384  0100CA  010F               	movlb	15	; () banked
 47385  0100CC  A336               	btfss	54,1,b	;volatile
 47386  0100CE  D00F               	goto	i2l166
 47387                           
 47388                           ; BSR set to: 15
 47389                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 47390  0100D0  0E7F               	movlw	127
 47391  0100D2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47392  0100D4  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47393  0100D6  0E00               	movlw	0
 47394  0100D8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47395  0100DA  0E00               	movlw	0
 47396  0100DC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47397  0100DE  0E00               	movlw	0
 47398  0100E0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47399  0100E2  0E01               	movlw	1
 47400  0100E4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47401  0100E6  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47402                           
 47403                           ;usb_device.c: 759: {UEIR = 0;};
 47404  0100EA  0E00               	movlw	0
 47405  0100EC  6E63               	movwf	3939,c	;volatile
 47406  0100EE                     i2l166:
 47407                           
 47408                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 47409  0100EE  0E04               	movlw	4
 47410  0100F0  605E               	cpfslt	_USBDeviceState,c	;volatile
 47411  0100F2  D002               	goto	i2l167
 47412                           
 47413                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 47414  0100F4  98A1               	bcf	4001,4,c	;volatile
 47415                           
 47416                           ;usb_device.c: 777: return;
 47417  0100F6  0012               	return	
 47418  0100F8                     i2l167:
 47419                           
 47420                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 47421  0100F8  010F               	movlb	15	; () banked
 47422  0100FA  A736               	btfss	54,3,b	;volatile
 47423  0100FC  D039               	goto	i2u1678_40
 47424                           
 47425                           ; BSR set to: 15
 47426                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 47427  0100FE  0E00               	movlw	0
 47428  010100  6E1F               	movwf	USBDeviceTasks@i,c
 47429  010102                     i2l17355:
 47430                           
 47431                           ; BSR set to: 15
 47432  010102  0E03               	movlw	3
 47433  010104  641F               	cpfsgt	USBDeviceTasks@i,c
 47434  010106  D001               	goto	i2l169
 47435  010108  D033               	goto	i2u1678_40
 47436  01010A                     i2l169:
 47437                           
 47438                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 47439  01010A  A662               	btfss	3938,3,c	;volatile
 47440  01010C  D031               	goto	i2u1678_40
 47441                           
 47442                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 47443  01010E  CF64 F1C1          	movff	3940,_USTATcopy	;volatile
 47444                           
 47445                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 47446  010112  0101               	movlb	1	; () banked
 47447  010114  31C1               	rrcf	_USTATcopy& (0+255),w,b	;volatile
 47448  010116  32E8               	rrcf	wreg,f,c
 47449  010118  32E8               	rrcf	wreg,f,c
 47450  01011A  0B0F               	andlw	15
 47451  01011C  6F6C               	movwf	_endpoint_number& (0+255),b	;volatile
 47452                           
 47453                           ; BSR set to: 1
 47454                           ;usb_device.c: 793: (UIR &= 0xF7);
 47455  01011E  9662               	bcf	3938,3,c	;volatile
 47456                           
 47457                           ; BSR set to: 1
 47458                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 47459  010120  B5C1               	btfsc	_USTATcopy& (0+255),2,b	;volatile
 47460  010122  D007               	goto	i2l172
 47461                           
 47462                           ; BSR set to: 1
 47463                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 47464  010124  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47465  010126  0D01               	mullw	1
 47466  010128  0E39               	movlw	low _ep_data_out
 47467  01012A  24F3               	addwf	prodl,w,c
 47468  01012C  6ED9               	movwf	fsr2l,c
 47469  01012E  0E01               	movlw	high _ep_data_out
 47470  010130  D006               	goto	L75
 47471  010132                     i2l172:
 47472                           
 47473                           ; BSR set to: 1
 47474                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 47475                           
 47476                           ; BSR set to: 1
 47477  010132  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47478  010134  0D01               	mullw	1
 47479  010136  0E3C               	movlw	low _ep_data_in
 47480  010138  24F3               	addwf	prodl,w,c
 47481  01013A  6ED9               	movwf	fsr2l,c
 47482  01013C  0E01               	movlw	high _ep_data_in
 47483  01013E                     L75:
 47484  01013E  20F4               	addwfc	prodh,w,c
 47485  010140  6EDA               	movwf	fsr2h,c
 47486  010142  70DF               	btg	indf2,0,c
 47487                           
 47488                           ; BSR set to: 1
 47489                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 47490                           
 47491                           ; BSR set to: 1
 47492  010144  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47493  010146  A4D8               	btfss	status,2,c
 47494  010148  D003               	goto	i2l174
 47495                           
 47496                           ; BSR set to: 1
 47497                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 47498  01014A  EC9E  F099         	call	_USBCtrlEPService	;wreg free
 47499                           
 47500                           ;usb_device.c: 813: }
 47501  01014E  D00E               	goto	i2l176
 47502  010150                     i2l174:
 47503                           
 47504                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 47505  010150  0E00               	movlw	0
 47506  010152  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47507  010154  0E72               	movlw	114
 47508  010156  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47509  010158  0EC1               	movlw	low _USTATcopy
 47510  01015A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47511  01015C  0E01               	movlw	high _USTATcopy
 47512  01015E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47513  010160  0E00               	movlw	0
 47514  010162  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47515  010164  0E00               	movlw	0
 47516  010166  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47517  010168  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47518  01016C                     i2l176:
 47519  01016C  2A1F               	incf	USBDeviceTasks@i,f,c
 47520  01016E  D7C9               	goto	i2l17355
 47521  010170                     i2u1678_40:
 47522                           
 47523                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 47524  010170  98A1               	bcf	4001,4,c	;volatile
 47525  010172  0012               	return		;funcret
 47526  010174                     __end_of_USBDeviceTasks:
 47527                           	opt stack 0
 47528                           tosu	equ	0xFFF
 47529                           tosh	equ	0xFFE
 47530                           tosl	equ	0xFFD
 47531                           pclatu	equ	0xFFB
 47532                           pclath	equ	0xFFA
 47533                           tblptru	equ	0xFF8
 47534                           tblptrh	equ	0xFF7
 47535                           tblptrl	equ	0xFF6
 47536                           tablat	equ	0xFF5
 47537                           prodh	equ	0xFF4
 47538                           prodl	equ	0xFF3
 47539                           intcon	equ	0xFF2
 47540                           indf0	equ	0xFEF
 47541                           postinc0	equ	0xFEE
 47542                           fsr0h	equ	0xFEA
 47543                           fsr0l	equ	0xFE9
 47544                           wreg	equ	0xFE8
 47545                           indf1	equ	0xFE7
 47546                           postinc1	equ	0xFE6
 47547                           postdec1	equ	0xFE5
 47548                           plusw1	equ	0xFE3
 47549                           fsr1h	equ	0xFE2
 47550                           fsr1l	equ	0xFE1
 47551                           indf2	equ	0xFDF
 47552                           postinc2	equ	0xFDE
 47553                           postdec2	equ	0xFDD
 47554                           plusw2	equ	0xFDB
 47555                           fsr2h	equ	0xFDA
 47556                           fsr2l	equ	0xFD9
 47557                           status	equ	0xFD8
 47558                           
 47559 ;; *************** function i2_USBDeviceInit *****************
 47560 ;; Defined at:
 47561 ;;		line 277 in file "usb_device.c"
 47562 ;; Parameters:    Size  Location     Type
 47563 ;;		None
 47564 ;; Auto vars:     Size  Location     Type
 47565 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 47566 ;; Return value:  Size  Location     Type
 47567 ;;                  1    wreg      void 
 47568 ;; Registers used:
 47569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47570 ;; Tracked objects:
 47571 ;;		On entry : 0/0
 47572 ;;		On exit  : 0/0
 47573 ;;		Unchanged: 0/0
 47574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47579 ;;Total ram usage:        1 bytes
 47580 ;; Hardware stack levels used:    1
 47581 ;; Hardware stack levels required when called:    1
 47582 ;; This function calls:
 47583 ;;		i2_memset
 47584 ;; This function is called by:
 47585 ;;		_USBDeviceTasks
 47586 ;; This function uses a non-reentrant model
 47587 ;;
 47588                           
 47589                           	psect	text192
 47590  010174                     __ptext192:
 47591                           	opt stack 0
 47592  010174                     i2_USBDeviceInit:
 47593                           	opt stack 15
 47594                           
 47595                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 47596                           
 47597                           ;incstack = 0
 47598  010174  98A0               	bcf	4000,4,c	;volatile
 47599                           
 47600                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 47601  010176  0E00               	movlw	0
 47602  010178  6E63               	movwf	3939,c	;volatile
 47603                           
 47604                           ;usb_device.c: 291: {UIR = 0;};
 47605  01017A  0E00               	movlw	0
 47606  01017C  6E62               	movwf	3938,c	;volatile
 47607                           
 47608                           ;usb_device.c: 294: UEP0 = 0;
 47609  01017E  0E00               	movlw	0
 47610  010180  010F               	movlb	15	; () banked
 47611  010182  6F26               	movwf	38,b	;volatile
 47612                           
 47613                           ; BSR set to: 15
 47614                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 47615  010184  0E27               	movlw	39
 47616  010186  6E01               	movwf	i2memset@p1,c
 47617  010188  0E0F               	movlw	15
 47618  01018A  6E02               	movwf	i2memset@p1+1,c
 47619  01018C  0E00               	movlw	0
 47620  01018E  6E04               	movwf	i2memset@c+1,c
 47621  010190  0E00               	movlw	0
 47622  010192  6E03               	movwf	i2memset@c,c
 47623  010194  0E00               	movlw	0
 47624  010196  6E06               	movwf	i2memset@n+1,c
 47625  010198  0E02               	movlw	2
 47626  01019A  6E05               	movwf	i2memset@n,c
 47627  01019C  ECCF  F0A9         	call	i2_memset	;wreg free
 47628                           
 47629                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 47630  0101A0  0E16               	movlw	22
 47631  0101A2  010F               	movlb	15	; () banked
 47632  0101A4  6F39               	movwf	57,b	;volatile
 47633                           
 47634                           ; BSR set to: 15
 47635  0101A6  0E9F               	movlw	159
 47636  0101A8  6F37               	movwf	55,b	;volatile
 47637                           
 47638                           ; BSR set to: 15
 47639  0101AA  0E7B               	movlw	123
 47640  0101AC  6F36               	movwf	54,b	;volatile
 47641                           
 47642                           ; BSR set to: 15
 47643                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 47644  0101AE  0E00               	movlw	0
 47645  0101B0  6E09               	movwf	i2USBDeviceInit@i,c
 47646  0101B2                     i2l17149:
 47647                           
 47648                           ; BSR set to: 15
 47649  0101B2  0E0B               	movlw	11
 47650  0101B4  6409               	cpfsgt	i2USBDeviceInit@i,c
 47651  0101B6  D001               	goto	i2l145
 47652  0101B8  D00E               	goto	i2u1646_40
 47653  0101BA                     i2l145:
 47654                           
 47655                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 47656                           
 47657                           ; BSR set to: 15
 47658  0101BA  5009               	movf	i2USBDeviceInit@i,w,c
 47659  0101BC  0D04               	mullw	4
 47660  0101BE  0E00               	movlw	0
 47661  0101C0  24F3               	addwf	prodl,w,c
 47662  0101C2  6ED9               	movwf	fsr2l,c
 47663  0101C4  0E0D               	movlw	13
 47664  0101C6  20F4               	addwfc	prodh,w,c
 47665  0101C8  6EDA               	movwf	fsr2h,c
 47666  0101CA  6ADE               	clrf	postinc2,c
 47667  0101CC  6ADE               	clrf	postinc2,c
 47668  0101CE  6ADE               	clrf	postinc2,c
 47669  0101D0  6ADD               	clrf	postdec2,c
 47670  0101D2  2A09               	incf	i2USBDeviceInit@i,f,c
 47671  0101D4  D7EE               	goto	i2l17149
 47672  0101D6                     i2u1646_40:
 47673                           
 47674                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 47675  0101D6  8C65               	bsf	3941,6,c	;volatile
 47676                           
 47677                           ;usb_device.c: 316: UADDR = 0x00;
 47678  0101D8  0E00               	movlw	0
 47679  0101DA  010F               	movlb	15	; () banked
 47680  0101DC  6F38               	movwf	56,b	;volatile
 47681                           
 47682                           ; BSR set to: 15
 47683                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 47684  0101DE  9865               	bcf	3941,4,c	;volatile
 47685                           
 47686                           ; BSR set to: 15
 47687                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 47688  0101E0  9C65               	bcf	3941,6,c	;volatile
 47689  0101E2                     
 47690                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 47691                           
 47692                           ; BSR set to: 15
 47693  0101E2  9662               	bcf	3938,3,c	;volatile
 47694                           
 47695                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 47696  0101E4  0E00               	movlw	0
 47697  0101E6  6E55               	movwf	_inPipes+3,c	;volatile
 47698                           
 47699                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 47700  0101E8  0E00               	movlw	0
 47701  0101EA  0101               	movlb	1	; () banked
 47702  0101EC  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 47703                           
 47704                           ; BSR set to: 1
 47705                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 47706  0101EE  0E00               	movlw	0
 47707  0101F0  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 47708  0101F2  0E00               	movlw	0
 47709  0101F4  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 47710                           
 47711                           ; BSR set to: 1
 47712                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 47713  0101F6  B662               	btfsc	3938,3,c	;volatile
 47714  0101F8  D7F4               	goto	i2l147
 47715                           
 47716                           ; BSR set to: 1
 47717                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 47718                           
 47719                           ; BSR set to: 1
 47720  0101FA  0E01               	movlw	1
 47721  0101FC  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 47722                           
 47723                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 47724  0101FE  0E01               	movlw	1
 47725  010200  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 47726                           
 47727                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 47728  010202  0E00               	movlw	0
 47729  010204  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 47730                           
 47731                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 47732  010206  0E00               	movlw	0
 47733  010208  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 47734                           
 47735                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 47736  01020A  0E00               	movlw	0
 47737  01020C  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 47738                           
 47739                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 47740  01020E  0E00               	movlw	0
 47741  010210  6E09               	movwf	i2USBDeviceInit@i,c
 47742  010212                     i2l17177:
 47743                           
 47744                           ; BSR set to: 1
 47745  010212  0E02               	movlw	2
 47746  010214  6409               	cpfsgt	i2USBDeviceInit@i,c
 47747  010216  D001               	goto	i2l149
 47748  010218  D02E               	goto	i2u1649_40
 47749  01021A                     i2l149:
 47750                           
 47751                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 47752                           
 47753                           ; BSR set to: 1
 47754  01021A  5009               	movf	i2USBDeviceInit@i,w,c
 47755  01021C  0D02               	mullw	2
 47756  01021E  0E1B               	movlw	low _pBDTEntryIn
 47757  010220  24F3               	addwf	prodl,w,c
 47758  010222  6ED9               	movwf	fsr2l,c
 47759  010224  0E01               	movlw	high _pBDTEntryIn
 47760  010226  20F4               	addwfc	prodh,w,c
 47761  010228  6EDA               	movwf	fsr2h,c
 47762  01022A  0E00               	movlw	0
 47763  01022C  6EDE               	movwf	postinc2,c
 47764  01022E  0E00               	movlw	0
 47765  010230  6EDD               	movwf	postdec2,c
 47766                           
 47767                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 47768  010232  5009               	movf	i2USBDeviceInit@i,w,c
 47769  010234  0D02               	mullw	2
 47770  010236  0E21               	movlw	low _pBDTEntryOut
 47771  010238  24F3               	addwf	prodl,w,c
 47772  01023A  6ED9               	movwf	fsr2l,c
 47773  01023C  0E01               	movlw	high _pBDTEntryOut
 47774  01023E  20F4               	addwfc	prodh,w,c
 47775  010240  6EDA               	movwf	fsr2h,c
 47776  010242  0E00               	movlw	0
 47777  010244  6EDE               	movwf	postinc2,c
 47778  010246  0E00               	movlw	0
 47779  010248  6EDD               	movwf	postdec2,c
 47780                           
 47781                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 47782  01024A  5009               	movf	i2USBDeviceInit@i,w,c
 47783  01024C  0D01               	mullw	1
 47784  01024E  0E3C               	movlw	low _ep_data_in
 47785  010250  24F3               	addwf	prodl,w,c
 47786  010252  6ED9               	movwf	fsr2l,c
 47787  010254  0E01               	movlw	high _ep_data_in
 47788  010256  20F4               	addwfc	prodh,w,c
 47789  010258  6EDA               	movwf	fsr2h,c
 47790  01025A  0E00               	movlw	0
 47791  01025C  6EDF               	movwf	indf2,c
 47792                           
 47793                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 47794  01025E  5009               	movf	i2USBDeviceInit@i,w,c
 47795  010260  0D01               	mullw	1
 47796  010262  0E39               	movlw	low _ep_data_out
 47797  010264  24F3               	addwf	prodl,w,c
 47798  010266  6ED9               	movwf	fsr2l,c
 47799  010268  0E01               	movlw	high _ep_data_out
 47800  01026A  20F4               	addwfc	prodh,w,c
 47801  01026C  6EDA               	movwf	fsr2h,c
 47802  01026E  0E00               	movlw	0
 47803  010270  6EDF               	movwf	indf2,c
 47804  010272  2A09               	incf	i2USBDeviceInit@i,f,c
 47805  010274  D7CE               	goto	i2l17177
 47806  010276                     i2u1649_40:
 47807                           
 47808                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 47809  010276  0E08               	movlw	8
 47810  010278  0101               	movlb	1	; () banked
 47811  01027A  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 47812  01027C  0E0D               	movlw	13
 47813  01027E  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 47814                           
 47815                           ; BSR set to: 1
 47816                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 47817  010280  0E16               	movlw	22
 47818  010282  010F               	movlb	15	; () banked
 47819  010284  6F26               	movwf	38,b	;volatile
 47820                           
 47821                           ; BSR set to: 15
 47822                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 47823  010286  0E0D               	movlw	13
 47824  010288  010D               	movlb	13	; () banked
 47825  01028A  6F03               	movwf	3,b	;volatile
 47826  01028C  0E30               	movlw	48
 47827  01028E  6F02               	movwf	2,b	;volatile
 47828                           
 47829                           ; BSR set to: 13
 47830                           ;usb_device.c: 359: BDT[0].CNT = 8;
 47831  010290  0E08               	movlw	8
 47832  010292  6F01               	movwf	1,b	;volatile
 47833                           
 47834                           ; BSR set to: 13
 47835                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 47836  010294  0E04               	movlw	4
 47837  010296  6F00               	movwf	0,b	;volatile
 47838                           
 47839                           ; BSR set to: 13
 47840                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 47841  010298  8F00               	bsf	0,7,b	;volatile
 47842                           
 47843                           ; BSR set to: 13
 47844                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 47845  01029A  0E00               	movlw	0
 47846  01029C  0101               	movlb	1	; () banked
 47847  01029E  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 47848                           
 47849                           ; BSR set to: 1
 47850                           ;usb_device.c: 366: USB1msTickCount = 0;
 47851  0102A0  0E00               	movlw	0
 47852  0102A2  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 47853  0102A4  0E00               	movlw	0
 47854  0102A6  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 47855  0102A8  0E00               	movlw	0
 47856  0102AA  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 47857  0102AC  0E00               	movlw	0
 47858  0102AE  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 47859                           
 47860                           ; BSR set to: 1
 47861                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 47862  0102B0  0E00               	movlw	0
 47863  0102B2  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 47864                           
 47865                           ; BSR set to: 1
 47866                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 47867  0102B4  0E00               	movlw	0
 47868  0102B6  6E5E               	movwf	_USBDeviceState,c	;volatile
 47869                           
 47870                           ; BSR set to: 1
 47871  0102B8  0012               	return		;funcret
 47872  0102BA                     __end_ofi2_USBDeviceInit:
 47873                           	opt stack 0
 47874                           tosu	equ	0xFFF
 47875                           tosh	equ	0xFFE
 47876                           tosl	equ	0xFFD
 47877                           pclatu	equ	0xFFB
 47878                           pclath	equ	0xFFA
 47879                           tblptru	equ	0xFF8
 47880                           tblptrh	equ	0xFF7
 47881                           tblptrl	equ	0xFF6
 47882                           tablat	equ	0xFF5
 47883                           prodh	equ	0xFF4
 47884                           prodl	equ	0xFF3
 47885                           intcon	equ	0xFF2
 47886                           indf0	equ	0xFEF
 47887                           postinc0	equ	0xFEE
 47888                           fsr0h	equ	0xFEA
 47889                           fsr0l	equ	0xFE9
 47890                           wreg	equ	0xFE8
 47891                           indf1	equ	0xFE7
 47892                           postinc1	equ	0xFE6
 47893                           postdec1	equ	0xFE5
 47894                           plusw1	equ	0xFE3
 47895                           fsr1h	equ	0xFE2
 47896                           fsr1l	equ	0xFE1
 47897                           indf2	equ	0xFDF
 47898                           postinc2	equ	0xFDE
 47899                           postdec2	equ	0xFDD
 47900                           plusw2	equ	0xFDB
 47901                           fsr2h	equ	0xFDA
 47902                           fsr2l	equ	0xFD9
 47903                           status	equ	0xFD8
 47904                           
 47905 ;; *************** function _USBWakeFromSuspend *****************
 47906 ;; Defined at:
 47907 ;;		line 2305 in file "usb_device.c"
 47908 ;; Parameters:    Size  Location     Type
 47909 ;;		None
 47910 ;; Auto vars:     Size  Location     Type
 47911 ;;		None
 47912 ;; Return value:  Size  Location     Type
 47913 ;;                  1    wreg      void 
 47914 ;; Registers used:
 47915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47916 ;; Tracked objects:
 47917 ;;		On entry : 0/0
 47918 ;;		On exit  : 0/0
 47919 ;;		Unchanged: 0/0
 47920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47925 ;;Total ram usage:        0 bytes
 47926 ;; Hardware stack levels used:    1
 47927 ;; Hardware stack levels required when called:    4
 47928 ;; This function calls:
 47929 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47930 ;; This function is called by:
 47931 ;;		_USBDeviceTasks
 47932 ;; This function uses a non-reentrant model
 47933 ;;
 47934                           
 47935                           	psect	text193
 47936  0150BA                     __ptext193:
 47937                           	opt stack 0
 47938  0150BA                     _USBWakeFromSuspend:
 47939                           	opt stack 12
 47940                           
 47941                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 47942                           
 47943                           ; BSR set to: 1
 47944                           ;incstack = 0
 47945  0150BA  0E00               	movlw	0
 47946  0150BC  0101               	movlb	1	; () banked
 47947  0150BE  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 47948                           
 47949                           ; BSR set to: 1
 47950                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 47951  0150C0  0E00               	movlw	0
 47952  0150C2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47953  0150C4  0E74               	movlw	116
 47954  0150C6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47955  0150C8  0E00               	movlw	0
 47956  0150CA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47957  0150CC  0E00               	movlw	0
 47958  0150CE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47959  0150D0  0E00               	movlw	0
 47960  0150D2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47961  0150D4  0E00               	movlw	0
 47962  0150D6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47963  0150D8  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47964                           
 47965                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 47966  0150DC  9265               	bcf	3941,1,c	;volatile
 47967                           
 47968                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 47969  0150DE  010F               	movlb	15	; () banked
 47970  0150E0  9536               	bcf	54,2,b	;volatile
 47971                           
 47972                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 47973  0150E2  D001               	goto	i2l315
 47974  0150E4                     
 47975                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 47976                           
 47977                           ; BSR set to: 15
 47978  0150E4  9462               	bcf	3938,2,c	;volatile
 47979  0150E6                     i2l315:
 47980  0150E6  B462               	btfsc	3938,2,c	;volatile
 47981  0150E8  D7FD               	goto	i2l316
 47982                           
 47983                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 47984  0150EA  0E00               	movlw	0
 47985  0150EC  0101               	movlb	1	; () banked
 47986  0150EE  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 47987                           
 47988                           ; BSR set to: 1
 47989  0150F0  0012               	return		;funcret
 47990  0150F2                     __end_of_USBWakeFromSuspend:
 47991                           	opt stack 0
 47992                           tosu	equ	0xFFF
 47993                           tosh	equ	0xFFE
 47994                           tosl	equ	0xFFD
 47995                           pclatu	equ	0xFFB
 47996                           pclath	equ	0xFFA
 47997                           tblptru	equ	0xFF8
 47998                           tblptrh	equ	0xFF7
 47999                           tblptrl	equ	0xFF6
 48000                           tablat	equ	0xFF5
 48001                           prodh	equ	0xFF4
 48002                           prodl	equ	0xFF3
 48003                           intcon	equ	0xFF2
 48004                           indf0	equ	0xFEF
 48005                           postinc0	equ	0xFEE
 48006                           fsr0h	equ	0xFEA
 48007                           fsr0l	equ	0xFE9
 48008                           wreg	equ	0xFE8
 48009                           indf1	equ	0xFE7
 48010                           postinc1	equ	0xFE6
 48011                           postdec1	equ	0xFE5
 48012                           plusw1	equ	0xFE3
 48013                           fsr1h	equ	0xFE2
 48014                           fsr1l	equ	0xFE1
 48015                           indf2	equ	0xFDF
 48016                           postinc2	equ	0xFDE
 48017                           postdec2	equ	0xFDD
 48018                           plusw2	equ	0xFDB
 48019                           fsr2h	equ	0xFDA
 48020                           fsr2l	equ	0xFD9
 48021                           status	equ	0xFD8
 48022                           
 48023 ;; *************** function _USBSuspend *****************
 48024 ;; Defined at:
 48025 ;;		line 2247 in file "usb_device.c"
 48026 ;; Parameters:    Size  Location     Type
 48027 ;;		None
 48028 ;; Auto vars:     Size  Location     Type
 48029 ;;		None
 48030 ;; Return value:  Size  Location     Type
 48031 ;;                  1    wreg      void 
 48032 ;; Registers used:
 48033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48034 ;; Tracked objects:
 48035 ;;		On entry : 0/0
 48036 ;;		On exit  : 0/0
 48037 ;;		Unchanged: 0/0
 48038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48043 ;;Total ram usage:        0 bytes
 48044 ;; Hardware stack levels used:    1
 48045 ;; Hardware stack levels required when called:    4
 48046 ;; This function calls:
 48047 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48048 ;; This function is called by:
 48049 ;;		_USBDeviceTasks
 48050 ;; This function uses a non-reentrant model
 48051 ;;
 48052                           
 48053                           	psect	text194
 48054  0152BA                     __ptext194:
 48055                           	opt stack 0
 48056  0152BA                     _USBSuspend:
 48057                           	opt stack 12
 48058                           
 48059                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 48060                           
 48061                           ; BSR set to: 1
 48062                           ;incstack = 0
 48063  0152BA  010F               	movlb	15	; () banked
 48064  0152BC  8536               	bsf	54,2,b	;volatile
 48065                           
 48066                           ; BSR set to: 15
 48067                           ;usb_device.c: 2273: (UIR &= 0xEF);
 48068  0152BE  9862               	bcf	3938,4,c	;volatile
 48069                           
 48070                           ; BSR set to: 15
 48071                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 48072  0152C0  8265               	bsf	3941,1,c	;volatile
 48073                           
 48074                           ; BSR set to: 15
 48075                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 48076  0152C2  0E01               	movlw	1
 48077  0152C4  0101               	movlb	1	; () banked
 48078  0152C6  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48079                           
 48080                           ; BSR set to: 1
 48081                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 48082  0152C8  0E00               	movlw	0
 48083  0152CA  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48084                           
 48085                           ; BSR set to: 1
 48086                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 48087  0152CC  0E00               	movlw	0
 48088  0152CE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48089  0152D0  0E75               	movlw	117
 48090  0152D2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48091  0152D4  0E00               	movlw	0
 48092  0152D6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48093  0152D8  0E00               	movlw	0
 48094  0152DA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48095  0152DC  0E00               	movlw	0
 48096  0152DE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48097  0152E0  0E00               	movlw	0
 48098  0152E2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48099  0152E4  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48100  0152E8  0012               	return		;funcret
 48101  0152EA                     __end_of_USBSuspend:
 48102                           	opt stack 0
 48103                           tosu	equ	0xFFF
 48104                           tosh	equ	0xFFE
 48105                           tosl	equ	0xFFD
 48106                           pclatu	equ	0xFFB
 48107                           pclath	equ	0xFFA
 48108                           tblptru	equ	0xFF8
 48109                           tblptrh	equ	0xFF7
 48110                           tblptrl	equ	0xFF6
 48111                           tablat	equ	0xFF5
 48112                           prodh	equ	0xFF4
 48113                           prodl	equ	0xFF3
 48114                           intcon	equ	0xFF2
 48115                           indf0	equ	0xFEF
 48116                           postinc0	equ	0xFEE
 48117                           fsr0h	equ	0xFEA
 48118                           fsr0l	equ	0xFE9
 48119                           wreg	equ	0xFE8
 48120                           indf1	equ	0xFE7
 48121                           postinc1	equ	0xFE6
 48122                           postdec1	equ	0xFE5
 48123                           plusw1	equ	0xFE3
 48124                           fsr1h	equ	0xFE2
 48125                           fsr1l	equ	0xFE1
 48126                           indf2	equ	0xFDF
 48127                           postinc2	equ	0xFDE
 48128                           postdec2	equ	0xFDD
 48129                           plusw2	equ	0xFDB
 48130                           fsr2h	equ	0xFDA
 48131                           fsr2l	equ	0xFD9
 48132                           status	equ	0xFD8
 48133                           
 48134 ;; *************** function _USBStallHandler *****************
 48135 ;; Defined at:
 48136 ;;		line 2204 in file "usb_device.c"
 48137 ;; Parameters:    Size  Location     Type
 48138 ;;		None
 48139 ;; Auto vars:     Size  Location     Type
 48140 ;;		None
 48141 ;; Return value:  Size  Location     Type
 48142 ;;                  1    wreg      void 
 48143 ;; Registers used:
 48144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48145 ;; Tracked objects:
 48146 ;;		On entry : 0/0
 48147 ;;		On exit  : 0/0
 48148 ;;		Unchanged: 0/0
 48149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48154 ;;Total ram usage:        1 bytes
 48155 ;; Hardware stack levels used:    1
 48156 ;; This function calls:
 48157 ;;		Nothing
 48158 ;; This function is called by:
 48159 ;;		_USBDeviceTasks
 48160 ;; This function uses a non-reentrant model
 48161 ;;
 48162                           
 48163                           	psect	text195
 48164  014E5A                     __ptext195:
 48165                           	opt stack 0
 48166  014E5A                     _USBStallHandler:
 48167                           	opt stack 16
 48168                           
 48169                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 48170                           
 48171                           ;incstack = 0
 48172  014E5A  010F               	movlb	15	; () banked
 48173  014E5C  A126               	btfss	38,0,b	;volatile
 48174  014E5E  D01D               	goto	i2l307
 48175                           
 48176                           ; BSR set to: 15
 48177                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 48178  014E60  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48179  014E64  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48180  014E68  0E80               	movlw	128
 48181  014E6A  18DE               	xorwf	postinc2,w,c
 48182  014E6C  A4D8               	btfss	status,2,c
 48183  014E6E  D014               	goto	i2l308
 48184                           
 48185                           ; BSR set to: 15
 48186  014E70  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48187  014E74  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48188  014E78  0E84               	movlw	132
 48189  014E7A  18DE               	xorwf	postinc2,w,c
 48190  014E7C  A4D8               	btfss	status,2,c
 48191  014E7E  D00C               	goto	i2l308
 48192                           
 48193                           ; BSR set to: 15
 48194                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 48195  014E80  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48196  014E84  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48197  014E88  0E0C               	movlw	12
 48198  014E8A  6EDF               	movwf	indf2,c
 48199                           
 48200                           ; BSR set to: 15
 48201                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 48202  014E8C  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48203  014E90  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48204  014E94  0E00               	movlw	0
 48205  014E96  8EDB               	bsf	plusw2,7,c
 48206  014E98                     i2l308:
 48207                           
 48208                           ; BSR set to: 15
 48209                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 48210                           
 48211                           ; BSR set to: 15
 48212  014E98  9126               	bcf	38,0,b	;volatile
 48213  014E9A                     i2l307:
 48214                           
 48215                           ; BSR set to: 15
 48216                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 48217  014E9A  9A62               	bcf	3938,5,c	;volatile
 48218                           
 48219                           ; BSR set to: 15
 48220  014E9C  0012               	return		;funcret
 48221  014E9E                     __end_of_USBStallHandler:
 48222                           	opt stack 0
 48223                           tosu	equ	0xFFF
 48224                           tosh	equ	0xFFE
 48225                           tosl	equ	0xFFD
 48226                           pclatu	equ	0xFFB
 48227                           pclath	equ	0xFFA
 48228                           tblptru	equ	0xFF8
 48229                           tblptrh	equ	0xFF7
 48230                           tblptrl	equ	0xFF6
 48231                           tablat	equ	0xFF5
 48232                           prodh	equ	0xFF4
 48233                           prodl	equ	0xFF3
 48234                           intcon	equ	0xFF2
 48235                           indf0	equ	0xFEF
 48236                           postinc0	equ	0xFEE
 48237                           fsr0h	equ	0xFEA
 48238                           fsr0l	equ	0xFE9
 48239                           wreg	equ	0xFE8
 48240                           indf1	equ	0xFE7
 48241                           postinc1	equ	0xFE6
 48242                           postdec1	equ	0xFE5
 48243                           plusw1	equ	0xFE3
 48244                           fsr1h	equ	0xFE2
 48245                           fsr1l	equ	0xFE1
 48246                           indf2	equ	0xFDF
 48247                           postinc2	equ	0xFDE
 48248                           postdec2	equ	0xFDD
 48249                           plusw2	equ	0xFDB
 48250                           fsr2h	equ	0xFDA
 48251                           fsr2l	equ	0xFD9
 48252                           status	equ	0xFD8
 48253                           
 48254 ;; *************** function _USBIncrement1msInternalTimers *****************
 48255 ;; Defined at:
 48256 ;;		line 3027 in file "usb_device.c"
 48257 ;; Parameters:    Size  Location     Type
 48258 ;;		None
 48259 ;; Auto vars:     Size  Location     Type
 48260 ;;		None
 48261 ;; Return value:  Size  Location     Type
 48262 ;;                  1    wreg      void 
 48263 ;; Registers used:
 48264 ;;		wreg, status,2, status,0
 48265 ;; Tracked objects:
 48266 ;;		On entry : 0/0
 48267 ;;		On exit  : 0/0
 48268 ;;		Unchanged: 0/0
 48269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48274 ;;Total ram usage:        0 bytes
 48275 ;; Hardware stack levels used:    1
 48276 ;; This function calls:
 48277 ;;		Nothing
 48278 ;; This function is called by:
 48279 ;;		_USBDeviceTasks
 48280 ;; This function uses a non-reentrant model
 48281 ;;
 48282                           
 48283                           	psect	text196
 48284  015630                     __ptext196:
 48285                           	opt stack 0
 48286  015630                     _USBIncrement1msInternalTimers:
 48287                           	opt stack 16
 48288                           
 48289                           ;usb_device.c: 3035: USB1msTickCount++;
 48290                           
 48291                           ; BSR set to: 15
 48292                           ;incstack = 0
 48293  015630  0E01               	movlw	1
 48294  015632  0101               	movlb	1	; () banked
 48295  015634  272F               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 48296  015636  0E00               	movlw	0
 48297  015638  2330               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 48298  01563A  2331               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 48299  01563C  2332               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 48300                           
 48301                           ; BSR set to: 1
 48302                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 48303  01563E  516D               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 48304  015640  A4D8               	btfss	status,2,c
 48305  015642  0012               	return	
 48306                           
 48307                           ; BSR set to: 1
 48308                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 48309  015644  2B64               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 48310                           
 48311                           ; BSR set to: 1
 48312                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 48313  015646  5164               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 48314  015648  A4D8               	btfss	status,2,c
 48315  01564A  0012               	return	
 48316                           
 48317                           ; BSR set to: 1
 48318                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 48319  01564C  6964               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48320                           
 48321                           ; BSR set to: 1
 48322  01564E  0012               	return	
 48323  015650                     __end_of_USBIncrement1msInternalTimers:
 48324                           	opt stack 0
 48325                           tosu	equ	0xFFF
 48326                           tosh	equ	0xFFE
 48327                           tosl	equ	0xFFD
 48328                           pclatu	equ	0xFFB
 48329                           pclath	equ	0xFFA
 48330                           tblptru	equ	0xFF8
 48331                           tblptrh	equ	0xFF7
 48332                           tblptrl	equ	0xFF6
 48333                           tablat	equ	0xFF5
 48334                           prodh	equ	0xFF4
 48335                           prodl	equ	0xFF3
 48336                           intcon	equ	0xFF2
 48337                           indf0	equ	0xFEF
 48338                           postinc0	equ	0xFEE
 48339                           fsr0h	equ	0xFEA
 48340                           fsr0l	equ	0xFE9
 48341                           wreg	equ	0xFE8
 48342                           indf1	equ	0xFE7
 48343                           postinc1	equ	0xFE6
 48344                           postdec1	equ	0xFE5
 48345                           plusw1	equ	0xFE3
 48346                           fsr1h	equ	0xFE2
 48347                           fsr1l	equ	0xFE1
 48348                           indf2	equ	0xFDF
 48349                           postinc2	equ	0xFDE
 48350                           postdec2	equ	0xFDD
 48351                           plusw2	equ	0xFDB
 48352                           fsr2h	equ	0xFDA
 48353                           fsr2l	equ	0xFD9
 48354                           status	equ	0xFD8
 48355                           
 48356 ;; *************** function _USBCtrlEPService *****************
 48357 ;; Defined at:
 48358 ;;		line 2374 in file "usb_device.c"
 48359 ;; Parameters:    Size  Location     Type
 48360 ;;		None
 48361 ;; Auto vars:     Size  Location     Type
 48362 ;;		None
 48363 ;; Return value:  Size  Location     Type
 48364 ;;                  1    wreg      void 
 48365 ;; Registers used:
 48366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 48367 ;; Tracked objects:
 48368 ;;		On entry : 0/0
 48369 ;;		On exit  : 0/0
 48370 ;;		Unchanged: 0/0
 48371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48376 ;;Total ram usage:        1 bytes
 48377 ;; Hardware stack levels used:    1
 48378 ;; Hardware stack levels required when called:    7
 48379 ;; This function calls:
 48380 ;;		_USBCtrlTrfInHandler
 48381 ;;		_USBCtrlTrfOutHandler
 48382 ;;		_USBCtrlTrfSetupHandler
 48383 ;;		i2_memcpy
 48384 ;; This function is called by:
 48385 ;;		_USBDeviceTasks
 48386 ;; This function uses a non-reentrant model
 48387 ;;
 48388                           
 48389                           	psect	text197
 48390  01333C                     __ptext197:
 48391                           	opt stack 0
 48392  01333C                     _USBCtrlEPService:
 48393                           	opt stack 9
 48394                           
 48395                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 48396                           
 48397                           ; BSR set to: 1
 48398                           ;incstack = 0
 48399  01333C  0E2D               	movlw	45
 48400  01333E  0101               	movlb	1	; () banked
 48401  013340  6F6A               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 48402                           
 48403                           ; BSR set to: 1
 48404                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 48405  013342  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 48406  013346  0EFD               	movlw	253
 48407  013348  161E               	andwf	??_USBCtrlEPService,f,c
 48408  01334A  A4D8               	btfss	status,2,c
 48409  01334C  D03B               	goto	i2l321
 48410                           
 48411                           ; BSR set to: 1
 48412                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 48413  01334E  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 48414  013352  90D8               	bcf	status,0,c
 48415  013354  321E               	rrcf	??_USBCtrlEPService,f,c
 48416  013356  0E3F               	movlw	63
 48417  013358  161E               	andwf	??_USBCtrlEPService,f,c
 48418  01335A  501E               	movf	??_USBCtrlEPService,w,c
 48419  01335C  0D04               	mullw	4
 48420  01335E  0E00               	movlw	0
 48421  013360  24F3               	addwf	prodl,w,c
 48422  013362  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 48423  013364  0E0D               	movlw	13
 48424  013366  20F4               	addwfc	prodh,w,c
 48425  013368  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 48426                           
 48427                           ; BSR set to: 1
 48428                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 48429  01336A  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 48430  01336E  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 48431                           
 48432                           ; BSR set to: 1
 48433                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 48434  013372  0E04               	movlw	4
 48435  013374  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 48436  013376  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 48437  013378  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48438  01337A  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 48439                           
 48440                           ; BSR set to: 1
 48441                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 48442  01337C  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48443  013380  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48444  013384  30DF               	rrcf	223,w,c
 48445  013386  32E8               	rrcf	wreg,f,c
 48446  013388  0B0F               	andlw	15
 48447  01338A  0A0D               	xorlw	13
 48448  01338C  A4D8               	btfss	status,2,c
 48449  01338E  D017               	goto	i2l322
 48450                           
 48451                           ; BSR set to: 1
 48452                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 48453  013390  0E30               	movlw	48
 48454  013392  6E01               	movwf	i2memcpy@d1,c
 48455  013394  0E0D               	movlw	13
 48456  013396  6E02               	movwf	i2memcpy@d1+1,c
 48457  013398  EE20 F002          	lfsr	2,2
 48458  01339C  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 48459  01339E  26D9               	addwf	fsr2l,f,c
 48460  0133A0  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 48461  0133A2  22DA               	addwfc	fsr2h,f,c
 48462  0133A4  CFDE F003          	movff	postinc2,i2memcpy@s1
 48463  0133A8  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 48464  0133AC  0E00               	movlw	0
 48465  0133AE  6E06               	movwf	i2memcpy@n+1,c
 48466  0133B0  0E08               	movlw	8
 48467  0133B2  6E05               	movwf	i2memcpy@n,c
 48468  0133B4  ECE6  F0A1         	call	i2_memcpy	;wreg free
 48469                           
 48470                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 48471  0133B8  ECAA  F09B         	call	_USBCtrlTrfSetupHandler	;wreg free
 48472                           
 48473                           ;usb_device.c: 2411: }
 48474  0133BC  0012               	return	
 48475  0133BE                     i2l322:
 48476                           
 48477                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 48478  0133BE  EC87  F0A1         	call	_USBCtrlTrfOutHandler	;wreg free
 48479                           
 48480                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 48481  0133C2  0012               	return	
 48482  0133C4                     i2l321:
 48483                           
 48484                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 48485  0133C4  0101               	movlb	1	; () banked
 48486  0133C6  51C1               	movf	_USTATcopy& (0+255),w,b	;volatile
 48487  0133C8  0BFD               	andlw	253
 48488  0133CA  0A04               	xorlw	4
 48489  0133CC  A4D8               	btfss	status,2,c
 48490  0133CE  0012               	return	
 48491                           
 48492                           ; BSR set to: 1
 48493                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 48494  0133D0  ECCA  F094         	call	_USBCtrlTrfInHandler	;wreg free
 48495  0133D4  0012               	return	
 48496  0133D6                     __end_of_USBCtrlEPService:
 48497                           	opt stack 0
 48498                           tosu	equ	0xFFF
 48499                           tosh	equ	0xFFE
 48500                           tosl	equ	0xFFD
 48501                           pclatu	equ	0xFFB
 48502                           pclath	equ	0xFFA
 48503                           tblptru	equ	0xFF8
 48504                           tblptrh	equ	0xFF7
 48505                           tblptrl	equ	0xFF6
 48506                           tablat	equ	0xFF5
 48507                           prodh	equ	0xFF4
 48508                           prodl	equ	0xFF3
 48509                           intcon	equ	0xFF2
 48510                           indf0	equ	0xFEF
 48511                           postinc0	equ	0xFEE
 48512                           fsr0h	equ	0xFEA
 48513                           fsr0l	equ	0xFE9
 48514                           wreg	equ	0xFE8
 48515                           indf1	equ	0xFE7
 48516                           postinc1	equ	0xFE6
 48517                           postdec1	equ	0xFE5
 48518                           plusw1	equ	0xFE3
 48519                           fsr1h	equ	0xFE2
 48520                           fsr1l	equ	0xFE1
 48521                           indf2	equ	0xFDF
 48522                           postinc2	equ	0xFDE
 48523                           postdec2	equ	0xFDD
 48524                           plusw2	equ	0xFDB
 48525                           fsr2h	equ	0xFDA
 48526                           fsr2l	equ	0xFD9
 48527                           status	equ	0xFD8
 48528                           
 48529 ;; *************** function i2_memcpy *****************
 48530 ;; Defined at:
 48531 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 48532 ;; Parameters:    Size  Location     Type
 48533 ;;  d1              2    0[COMRAM] PTR void 
 48534 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 48535 ;;		 -> msd_buffer(512), SetupPkt(8), 
 48536 ;;  s1              2    2[COMRAM] PTR const void 
 48537 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 48538 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 48539 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 48540 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 48541 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 48542 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 48543 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 48544 ;;  n               2    4[COMRAM] unsigned int 
 48545 ;; Auto vars:     Size  Location     Type
 48546 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 48547 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 48548 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 48549 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 48550 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 48551 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 48552 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 48553 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 48554 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 48555 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 48556 ;;		 -> msd_buffer(512), SetupPkt(8), 
 48557 ;;  memcpy          1   10[COMRAM] unsigned char 
 48558 ;; Return value:  Size  Location     Type
 48559 ;;                  2    0[COMRAM] PTR void 
 48560 ;; Registers used:
 48561 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 48562 ;; Tracked objects:
 48563 ;;		On entry : 0/0
 48564 ;;		On exit  : 0/0
 48565 ;;		Unchanged: 0/0
 48566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48567 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48568 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48570 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48571 ;;Total ram usage:       11 bytes
 48572 ;; Hardware stack levels used:    1
 48573 ;; This function calls:
 48574 ;;		Nothing
 48575 ;; This function is called by:
 48576 ;;		_USBCtrlEPService
 48577 ;; This function uses a non-reentrant model
 48578 ;;
 48579                           
 48580                           	psect	text198
 48581  0143CC                     __ptext198:
 48582                           	opt stack 0
 48583  0143CC                     i2_memcpy:
 48584                           	opt stack 15
 48585                           
 48586                           ;incstack = 0
 48587  0143CC  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 48588  0143D0  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 48589  0143D4  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 48590  0143D8  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 48591  0143DC  D01C               	goto	i2l3641
 48592  0143DE                     i2l16343:
 48593  0143DE  C009  FFF6         	movff	i2memcpy@s,tblptrl
 48594  0143E2  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 48595  0143E6  0E00               	movlw	low (__mediumconst shr (0+16))
 48596  0143E8  6EF8               	movwf	tblptru,c
 48597  0143EA  0E0E               	movlw	(high __ramtop+-1)
 48598  0143EC  64F7               	cpfsgt	tblptrh,c
 48599  0143EE  D003               	bra	i2u1545_47
 48600  0143F0  0008               	tblrd		*
 48601  0143F2  50F5               	movf	tablat,w,c
 48602  0143F4  D005               	bra	i2u1545_40
 48603  0143F6                     i2u1545_47:
 48604  0143F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 48605  0143FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 48606  0143FE  50EF               	movf	indf0,w,c
 48607  014400                     i2u1545_40:
 48608  014400  6E0B               	movwf	i2memcpy@tmp,c
 48609  014402  4A09               	infsnz	i2memcpy@s,f,c
 48610  014404  2A0A               	incf	i2memcpy@s+1,f,c
 48611  014406  C007  FFD9         	movff	i2memcpy@d,fsr2l
 48612  01440A  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 48613  01440E  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 48614  014412  4A07               	infsnz	i2memcpy@d,f,c
 48615  014414  2A08               	incf	i2memcpy@d+1,f,c
 48616  014416                     i2l3641:
 48617  014416  0605               	decf	i2memcpy@n,f,c
 48618  014418  A0D8               	btfss	status,0,c
 48619  01441A  0606               	decf	i2memcpy@n+1,f,c
 48620  01441C  2805               	incf	i2memcpy@n,w,c
 48621  01441E  E1DF               	bnz	i2l16343
 48622  014420  2806               	incf	i2memcpy@n+1,w,c
 48623  014422  B4D8               	btfsc	status,2,c
 48624  014424  0012               	return	
 48625  014426  D7DB               	goto	i2l3642
 48626  014428                     __end_ofi2_memcpy:
 48627                           	opt stack 0
 48628                           tosu	equ	0xFFF
 48629                           tosh	equ	0xFFE
 48630                           tosl	equ	0xFFD
 48631                           pclatu	equ	0xFFB
 48632                           pclath	equ	0xFFA
 48633                           tblptru	equ	0xFF8
 48634                           tblptrh	equ	0xFF7
 48635                           tblptrl	equ	0xFF6
 48636                           tablat	equ	0xFF5
 48637                           prodh	equ	0xFF4
 48638                           prodl	equ	0xFF3
 48639                           intcon	equ	0xFF2
 48640                           indf0	equ	0xFEF
 48641                           postinc0	equ	0xFEE
 48642                           fsr0h	equ	0xFEA
 48643                           fsr0l	equ	0xFE9
 48644                           wreg	equ	0xFE8
 48645                           indf1	equ	0xFE7
 48646                           postinc1	equ	0xFE6
 48647                           postdec1	equ	0xFE5
 48648                           plusw1	equ	0xFE3
 48649                           fsr1h	equ	0xFE2
 48650                           fsr1l	equ	0xFE1
 48651                           indf2	equ	0xFDF
 48652                           postinc2	equ	0xFDE
 48653                           postdec2	equ	0xFDD
 48654                           plusw2	equ	0xFDB
 48655                           fsr2h	equ	0xFDA
 48656                           fsr2l	equ	0xFD9
 48657                           status	equ	0xFD8
 48658                           
 48659 ;; *************** function _USBCtrlTrfSetupHandler *****************
 48660 ;; Defined at:
 48661 ;;		line 2467 in file "usb_device.c"
 48662 ;; Parameters:    Size  Location     Type
 48663 ;;		None
 48664 ;; Auto vars:     Size  Location     Type
 48665 ;;		None
 48666 ;; Return value:  Size  Location     Type
 48667 ;;                  1    wreg      void 
 48668 ;; Registers used:
 48669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48670 ;; Tracked objects:
 48671 ;;		On entry : 0/0
 48672 ;;		On exit  : 0/0
 48673 ;;		Unchanged: 0/0
 48674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48679 ;;Total ram usage:        0 bytes
 48680 ;; Hardware stack levels used:    1
 48681 ;; Hardware stack levels required when called:    6
 48682 ;; This function calls:
 48683 ;;		_USBCheckStdRequest
 48684 ;;		_USBCtrlEPServiceComplete
 48685 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48686 ;; This function is called by:
 48687 ;;		_USBCtrlEPService
 48688 ;; This function uses a non-reentrant model
 48689 ;;
 48690                           
 48691                           	psect	text199
 48692  013754                     __ptext199:
 48693                           	opt stack 0
 48694  013754                     _USBCtrlTrfSetupHandler:
 48695                           	opt stack 9
 48696                           
 48697                           ;usb_device.c: 2472: shortPacketStatus = 0;
 48698                           
 48699                           ;incstack = 0
 48700  013754  0E00               	movlw	0
 48701  013756  0101               	movlb	1	; () banked
 48702  013758  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 48703                           
 48704                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 48705  01375A  0E00               	movlw	0
 48706  01375C  6F69               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 48707                           
 48708                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 48709  01375E  0E00               	movlw	0
 48710  013760  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48711                           
 48712                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 48713  013762  0E00               	movlw	0
 48714  013764  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48715                           
 48716                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 48717  013766  0E00               	movlw	0
 48718  013768  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 48719                           
 48720                           ;usb_device.c: 2477: controlTransferState = 0;
 48721  01376A  0E00               	movlw	0
 48722  01376C  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 48723                           
 48724                           ; BSR set to: 1
 48725                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 48726  01376E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48727  013772  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48728  013776  0E7F               	movlw	127
 48729  013778  16DF               	andwf	indf2,f,c
 48730                           
 48731                           ; BSR set to: 1
 48732                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 48733  01377A  0E04               	movlw	4
 48734  01377C  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 48735  01377E  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48736  013780  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 48737  013782  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48738                           
 48739                           ; BSR set to: 1
 48740                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 48741  013784  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48742  013788  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48743  01378C  0E7F               	movlw	127
 48744  01378E  16DF               	andwf	indf2,f,c
 48745                           
 48746                           ; BSR set to: 1
 48747                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 48748  013790  0E04               	movlw	4
 48749  013792  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 48750  013794  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48751  013796  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 48752  013798  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48753                           
 48754                           ; BSR set to: 1
 48755                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 48756  01379A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48757  01379E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48758  0137A2  0E7F               	movlw	127
 48759  0137A4  16DF               	andwf	indf2,f,c
 48760                           
 48761                           ; BSR set to: 1
 48762                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 48763  0137A6  0E00               	movlw	0
 48764  0137A8  6E55               	movwf	_inPipes+3,c	;volatile
 48765                           
 48766                           ; BSR set to: 1
 48767                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 48768  0137AA  0E00               	movlw	0
 48769  0137AC  6E57               	movwf	_inPipes+5,c	;volatile
 48770  0137AE  0E00               	movlw	0
 48771  0137B0  6E56               	movwf	_inPipes+4,c	;volatile
 48772                           
 48773                           ; BSR set to: 1
 48774                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 48775  0137B2  0E00               	movlw	0
 48776  0137B4  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 48777                           
 48778                           ; BSR set to: 1
 48779                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 48780  0137B6  0E00               	movlw	0
 48781  0137B8  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 48782  0137BA  0E00               	movlw	0
 48783  0137BC  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 48784                           
 48785                           ; BSR set to: 1
 48786                           ;usb_device.c: 2502: USBCheckStdRequest();
 48787  0137BE  ECF2  F091         	call	_USBCheckStdRequest	;wreg free
 48788                           
 48789                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 48790  0137C2  0E00               	movlw	0
 48791  0137C4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48792  0137C6  0E03               	movlw	3
 48793  0137C8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48794  0137CA  0E00               	movlw	0
 48795  0137CC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48796  0137CE  0E00               	movlw	0
 48797  0137D0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48798  0137D2  0E00               	movlw	0
 48799  0137D4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48800  0137D6  0E00               	movlw	0
 48801  0137D8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48802  0137DA  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48803                           
 48804                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 48805  0137DE  EC33  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
 48806  0137E2  0012               	return		;funcret
 48807  0137E4                     __end_of_USBCtrlTrfSetupHandler:
 48808                           	opt stack 0
 48809                           tosu	equ	0xFFF
 48810                           tosh	equ	0xFFE
 48811                           tosl	equ	0xFFD
 48812                           pclatu	equ	0xFFB
 48813                           pclath	equ	0xFFA
 48814                           tblptru	equ	0xFF8
 48815                           tblptrh	equ	0xFF7
 48816                           tblptrl	equ	0xFF6
 48817                           tablat	equ	0xFF5
 48818                           prodh	equ	0xFF4
 48819                           prodl	equ	0xFF3
 48820                           intcon	equ	0xFF2
 48821                           indf0	equ	0xFEF
 48822                           postinc0	equ	0xFEE
 48823                           fsr0h	equ	0xFEA
 48824                           fsr0l	equ	0xFE9
 48825                           wreg	equ	0xFE8
 48826                           indf1	equ	0xFE7
 48827                           postinc1	equ	0xFE6
 48828                           postdec1	equ	0xFE5
 48829                           plusw1	equ	0xFE3
 48830                           fsr1h	equ	0xFE2
 48831                           fsr1l	equ	0xFE1
 48832                           indf2	equ	0xFDF
 48833                           postinc2	equ	0xFDE
 48834                           postdec2	equ	0xFDD
 48835                           plusw2	equ	0xFDB
 48836                           fsr2h	equ	0xFDA
 48837                           fsr2l	equ	0xFD9
 48838                           status	equ	0xFD8
 48839                           
 48840 ;; *************** function _USBCtrlEPServiceComplete *****************
 48841 ;; Defined at:
 48842 ;;		line 1618 in file "usb_device.c"
 48843 ;; Parameters:    Size  Location     Type
 48844 ;;		None
 48845 ;; Auto vars:     Size  Location     Type
 48846 ;;		None
 48847 ;; Return value:  Size  Location     Type
 48848 ;;                  1    wreg      void 
 48849 ;; Registers used:
 48850 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 48851 ;; Tracked objects:
 48852 ;;		On entry : 0/0
 48853 ;;		On exit  : 0/0
 48854 ;;		Unchanged: 0/0
 48855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48860 ;;Total ram usage:        0 bytes
 48861 ;; Hardware stack levels used:    1
 48862 ;; Hardware stack levels required when called:    2
 48863 ;; This function calls:
 48864 ;;		_USBCtrlEPAllowDataStage
 48865 ;;		_USBCtrlEPAllowStatusStage
 48866 ;; This function is called by:
 48867 ;;		_USBCtrlTrfSetupHandler
 48868 ;; This function uses a non-reentrant model
 48869 ;;
 48870                           
 48871                           	psect	text200
 48872  011666                     __ptext200:
 48873                           	opt stack 0
 48874  011666                     _USBCtrlEPServiceComplete:
 48875                           	opt stack 12
 48876                           
 48877                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 48878                           
 48879                           ;incstack = 0
 48880  011666  9865               	bcf	3941,4,c	;volatile
 48881                           
 48882                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 48883  011668  BE55               	btfsc	_inPipes+3,7,c	;volatile
 48884  01166A  D03A               	goto	i2l231
 48885                           
 48886                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 48887  01166C  0101               	movlb	1	; () banked
 48888  01166E  AF15               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 48889  011670  D00C               	goto	i2l232
 48890                           
 48891                           ; BSR set to: 1
 48892                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 48893  011672  0E02               	movlw	2
 48894  011674  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 48895                           
 48896                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 48897  011676  5165               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 48898  011678  B4D8               	btfsc	status,2,c
 48899                           
 48900                           ; BSR set to: 1
 48901                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 48902  01167A  ECEB  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 48903                           
 48904                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 48905  01167E  0E00               	movlw	0
 48906  011680  0101               	movlb	1	; () banked
 48907  011682  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48908                           
 48909                           ; BSR set to: 1
 48910                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 48911  011684  0E00               	movlw	0
 48912  011686  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 48913                           
 48914                           ;usb_device.c: 1654: }
 48915  011688  0012               	return	
 48916  01168A                     i2l232:
 48917                           
 48918                           ; BSR set to: 1
 48919                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 48920                           
 48921                           ; BSR set to: 1
 48922  01168A  EE20 F001          	lfsr	2,1
 48923  01168E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 48924  011690  26D9               	addwf	fsr2l,f,c
 48925  011692  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48926  011694  22DA               	addwfc	fsr2h,f,c
 48927  011696  0E08               	movlw	8
 48928  011698  6EDF               	movwf	indf2,c
 48929                           
 48930                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 48931  01169A  EE20 F002          	lfsr	2,2
 48932  01169E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 48933  0116A0  26D9               	addwf	fsr2l,f,c
 48934  0116A2  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48935  0116A4  22DA               	addwfc	fsr2h,f,c
 48936  0116A6  0E30               	movlw	48
 48937  0116A8  6EDE               	movwf	postinc2,c
 48938  0116AA  0E0D               	movlw	13
 48939  0116AC  6EDD               	movwf	postdec2,c
 48940                           
 48941                           ; BSR set to: 1
 48942                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 48943  0116AE  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48944  0116B2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48945  0116B6  0E0C               	movlw	12
 48946  0116B8  6EDF               	movwf	indf2,c
 48947                           
 48948                           ; BSR set to: 1
 48949                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 48950  0116BA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48951  0116BE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48952  0116C2  0E00               	movlw	0
 48953  0116C4  8EDB               	bsf	plusw2,7,c
 48954                           
 48955                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 48956  0116C6  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48957  0116CA  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48958  0116CE  0E04               	movlw	4
 48959  0116D0  6EDF               	movwf	indf2,c
 48960                           
 48961                           ; BSR set to: 1
 48962                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 48963  0116D2  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48964  0116D6  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48965  0116DA  0E00               	movlw	0
 48966  0116DC  8EDB               	bsf	plusw2,7,c
 48967                           
 48968                           ; BSR set to: 1
 48969                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 48970  0116DE  0012               	return	
 48971  0116E0                     i2l231:
 48972                           
 48973                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 48974  0116E0  010D               	movlb	13	; () banked
 48975  0116E2  AF30               	btfss	48,7,b	;volatile
 48976  0116E4  D012               	goto	i2l236
 48977                           
 48978                           ; BSR set to: 13
 48979                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 48980  0116E6  0E01               	movlw	1
 48981  0116E8  0101               	movlb	1	; () banked
 48982  0116EA  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 48983                           
 48984                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 48985  0116EC  5166               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 48986  0116EE  B4D8               	btfsc	status,2,c
 48987                           
 48988                           ; BSR set to: 1
 48989                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 48990  0116F0  ECEB  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 48991                           
 48992                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 48993  0116F4  0E00               	movlw	0
 48994  0116F6  0101               	movlb	1	; () banked
 48995  0116F8  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48996                           
 48997                           ; BSR set to: 1
 48998                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 48999  0116FA  0E00               	movlw	0
 49000  0116FC  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49001                           
 49002                           ; BSR set to: 1
 49003                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 49004  0116FE  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49005  011700  A4D8               	btfss	status,2,c
 49006  011702  0012               	return	
 49007                           
 49008                           ; BSR set to: 1
 49009                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 49010  011704  EC68  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49011                           
 49012                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 49013  011708  0012               	return	
 49014  01170A                     i2l236:
 49015                           
 49016                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 49017  01170A  0E02               	movlw	2
 49018  01170C  0101               	movlb	1	; () banked
 49019  01170E  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49020                           
 49021                           ; BSR set to: 1
 49022                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 49023  011710  EE20 F001          	lfsr	2,1
 49024  011714  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49025  011716  26D9               	addwf	fsr2l,f,c
 49026  011718  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49027  01171A  22DA               	addwfc	fsr2h,f,c
 49028  01171C  0E08               	movlw	8
 49029  01171E  6EDF               	movwf	indf2,c
 49030                           
 49031                           ; BSR set to: 1
 49032                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49033  011720  EE20 F002          	lfsr	2,2
 49034  011724  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49035  011726  26D9               	addwf	fsr2l,f,c
 49036  011728  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49037  01172A  22DA               	addwfc	fsr2h,f,c
 49038  01172C  0E30               	movlw	48
 49039  01172E  6EDE               	movwf	postinc2,c
 49040  011730  0E0D               	movlw	13
 49041  011732  6EDD               	movwf	postdec2,c
 49042                           
 49043                           ; BSR set to: 1
 49044                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 49045  011734  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49046  011738  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49047  01173C  0E04               	movlw	4
 49048  01173E  6EDF               	movwf	indf2,c
 49049                           
 49050                           ; BSR set to: 1
 49051                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49052  011740  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49053  011744  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49054  011748  0E00               	movlw	0
 49055  01174A  8EDB               	bsf	plusw2,7,c
 49056                           
 49057                           ; BSR set to: 1
 49058                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 49059  01174C  0E00               	movlw	0
 49060  01174E  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49061                           
 49062                           ; BSR set to: 1
 49063                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 49064  011750  0E00               	movlw	0
 49065  011752  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49066                           
 49067                           ; BSR set to: 1
 49068                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 49069  011754  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49070  011756  A4D8               	btfss	status,2,c
 49071  011758  0012               	return	
 49072                           
 49073                           ; BSR set to: 1
 49074                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 49075  01175A  EC68  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49076  01175E  0012               	return	
 49077  011760                     __end_of_USBCtrlEPServiceComplete:
 49078                           	opt stack 0
 49079                           tosu	equ	0xFFF
 49080                           tosh	equ	0xFFE
 49081                           tosl	equ	0xFFD
 49082                           pclatu	equ	0xFFB
 49083                           pclath	equ	0xFFA
 49084                           tblptru	equ	0xFF8
 49085                           tblptrh	equ	0xFF7
 49086                           tblptrl	equ	0xFF6
 49087                           tablat	equ	0xFF5
 49088                           prodh	equ	0xFF4
 49089                           prodl	equ	0xFF3
 49090                           intcon	equ	0xFF2
 49091                           indf0	equ	0xFEF
 49092                           postinc0	equ	0xFEE
 49093                           fsr0h	equ	0xFEA
 49094                           fsr0l	equ	0xFE9
 49095                           wreg	equ	0xFE8
 49096                           indf1	equ	0xFE7
 49097                           postinc1	equ	0xFE6
 49098                           postdec1	equ	0xFE5
 49099                           plusw1	equ	0xFE3
 49100                           fsr1h	equ	0xFE2
 49101                           fsr1l	equ	0xFE1
 49102                           indf2	equ	0xFDF
 49103                           postinc2	equ	0xFDE
 49104                           postdec2	equ	0xFDD
 49105                           plusw2	equ	0xFDB
 49106                           fsr2h	equ	0xFDA
 49107                           fsr2l	equ	0xFD9
 49108                           status	equ	0xFD8
 49109                           
 49110 ;; *************** function _USBCtrlEPAllowDataStage *****************
 49111 ;; Defined at:
 49112 ;;		line 1490 in file "usb_device.c"
 49113 ;; Parameters:    Size  Location     Type
 49114 ;;		None
 49115 ;; Auto vars:     Size  Location     Type
 49116 ;;		None
 49117 ;; Return value:  Size  Location     Type
 49118 ;;                  1    wreg      void 
 49119 ;; Registers used:
 49120 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49121 ;; Tracked objects:
 49122 ;;		On entry : 0/0
 49123 ;;		On exit  : 0/0
 49124 ;;		Unchanged: 0/0
 49125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49130 ;;Total ram usage:        0 bytes
 49131 ;; Hardware stack levels used:    1
 49132 ;; Hardware stack levels required when called:    1
 49133 ;; This function calls:
 49134 ;;		_USBCtrlTrfTxService
 49135 ;; This function is called by:
 49136 ;;		_USBCtrlEPServiceComplete
 49137 ;; This function uses a non-reentrant model
 49138 ;;
 49139                           
 49140                           	psect	text201
 49141  0133D6                     __ptext201:
 49142                           	opt stack 0
 49143  0133D6                     _USBCtrlEPAllowDataStage:
 49144                           	opt stack 12
 49145                           
 49146                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 49147                           
 49148                           ;incstack = 0
 49149  0133D6  0E00               	movlw	0
 49150  0133D8  0101               	movlb	1	; () banked
 49151  0133DA  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49152                           
 49153                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 49154  0133DC  0E00               	movlw	0
 49155  0133DE  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49156                           
 49157                           ; BSR set to: 1
 49158                           ;usb_device.c: 1495: if(controlTransferState == 2)
 49159  0133E0  0E02               	movlw	2
 49160  0133E2  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 49161  0133E4  A4D8               	btfss	status,2,c
 49162  0133E6  D01F               	goto	i2l220
 49163                           
 49164                           ; BSR set to: 1
 49165                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 49166  0133E8  EE20 F001          	lfsr	2,1
 49167  0133EC  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49168  0133EE  26D9               	addwf	fsr2l,f,c
 49169  0133F0  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49170  0133F2  22DA               	addwfc	fsr2h,f,c
 49171  0133F4  0E08               	movlw	8
 49172  0133F6  6EDF               	movwf	indf2,c
 49173                           
 49174                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 49175  0133F8  EE20 F002          	lfsr	2,2
 49176  0133FC  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49177  0133FE  26D9               	addwf	fsr2l,f,c
 49178  013400  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49179  013402  22DA               	addwfc	fsr2h,f,c
 49180  013404  0E38               	movlw	56
 49181  013406  6EDE               	movwf	postinc2,c
 49182  013408  0E0D               	movlw	13
 49183  01340A  6EDD               	movwf	postdec2,c
 49184                           
 49185                           ; BSR set to: 1
 49186                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 49187  01340C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49188  013410  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49189  013414  0E48               	movlw	72
 49190  013416  6EDF               	movwf	indf2,c
 49191                           
 49192                           ; BSR set to: 1
 49193                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49194  013418  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49195  01341C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49196  013420  0E00               	movlw	0
 49197  013422  8EDB               	bsf	plusw2,7,c
 49198                           
 49199                           ;usb_device.c: 1502: }
 49200  013424  0012               	return	
 49201  013426                     i2l220:
 49202                           
 49203                           ; BSR set to: 1
 49204                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 49205                           
 49206                           ; BSR set to: 1
 49207  013426  5056               	movf	_inPipes+4,w,c	;volatile
 49208  013428  010D               	movlb	13	; () banked
 49209  01342A  5D36               	subwf	54,w,b	;volatile
 49210  01342C  5057               	movf	_inPipes+5,w,c	;volatile
 49211  01342E  5937               	subwfb	55,w,b	;volatile
 49212  013430  B0D8               	btfsc	status,0,c
 49213  013432  D004               	goto	i2l222
 49214                           
 49215                           ; BSR set to: 13
 49216                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 49217  013434  CD36 F056          	movff	3382,_inPipes+4	;volatile
 49218  013438  CD37 F057          	movff	3383,_inPipes+5	;volatile
 49219  01343C                     i2l222:
 49220                           
 49221                           ; BSR set to: 13
 49222                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 49223                           
 49224                           ; BSR set to: 13
 49225  01343C  ECC9  F092         	call	_USBCtrlTrfTxService	;wreg free
 49226                           
 49227                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 49228  013440  0101               	movlb	1	; () banked
 49229  013442  EE20 F002          	lfsr	2,2
 49230  013446  511B               	movf	_pBDTEntryIn& (0+255),w,b
 49231  013448  26D9               	addwf	fsr2l,f,c
 49232  01344A  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49233  01344C  22DA               	addwfc	fsr2h,f,c
 49234  01344E  0E38               	movlw	56
 49235  013450  6EDE               	movwf	postinc2,c
 49236  013452  0E0D               	movlw	13
 49237  013454  6EDD               	movwf	postdec2,c
 49238                           
 49239                           ; BSR set to: 1
 49240                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 49241  013456  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49242  01345A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49243  01345E  0E48               	movlw	72
 49244  013460  6EDF               	movwf	indf2,c
 49245                           
 49246                           ; BSR set to: 1
 49247                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49248  013462  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49249  013466  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49250  01346A  0E00               	movlw	0
 49251  01346C  8EDB               	bsf	plusw2,7,c
 49252  01346E  0012               	return	
 49253  013470                     __end_of_USBCtrlEPAllowDataStage:
 49254                           	opt stack 0
 49255                           tosu	equ	0xFFF
 49256                           tosh	equ	0xFFE
 49257                           tosl	equ	0xFFD
 49258                           pclatu	equ	0xFFB
 49259                           pclath	equ	0xFFA
 49260                           tblptru	equ	0xFF8
 49261                           tblptrh	equ	0xFF7
 49262                           tblptrl	equ	0xFF6
 49263                           tablat	equ	0xFF5
 49264                           prodh	equ	0xFF4
 49265                           prodl	equ	0xFF3
 49266                           intcon	equ	0xFF2
 49267                           indf0	equ	0xFEF
 49268                           postinc0	equ	0xFEE
 49269                           fsr0h	equ	0xFEA
 49270                           fsr0l	equ	0xFE9
 49271                           wreg	equ	0xFE8
 49272                           indf1	equ	0xFE7
 49273                           postinc1	equ	0xFE6
 49274                           postdec1	equ	0xFE5
 49275                           plusw1	equ	0xFE3
 49276                           fsr1h	equ	0xFE2
 49277                           fsr1l	equ	0xFE1
 49278                           indf2	equ	0xFDF
 49279                           postinc2	equ	0xFDE
 49280                           postdec2	equ	0xFDD
 49281                           plusw2	equ	0xFDB
 49282                           fsr2h	equ	0xFDA
 49283                           fsr2l	equ	0xFD9
 49284                           status	equ	0xFD8
 49285                           
 49286 ;; *************** function _USBCheckStdRequest *****************
 49287 ;; Defined at:
 49288 ;;		line 2688 in file "usb_device.c"
 49289 ;; Parameters:    Size  Location     Type
 49290 ;;		None
 49291 ;; Auto vars:     Size  Location     Type
 49292 ;;		None
 49293 ;; Return value:  Size  Location     Type
 49294 ;;                  1    wreg      void 
 49295 ;; Registers used:
 49296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49297 ;; Tracked objects:
 49298 ;;		On entry : 0/0
 49299 ;;		On exit  : 0/0
 49300 ;;		Unchanged: 0/0
 49301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49306 ;;Total ram usage:        0 bytes
 49307 ;; Hardware stack levels used:    1
 49308 ;; Hardware stack levels required when called:    5
 49309 ;; This function calls:
 49310 ;;		_USBStdFeatureReqHandler
 49311 ;;		_USBStdGetDscHandler
 49312 ;;		_USBStdGetStatusHandler
 49313 ;;		_USBStdSetCfgHandler
 49314 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49315 ;; This function is called by:
 49316 ;;		_USBCtrlTrfSetupHandler
 49317 ;; This function uses a non-reentrant model
 49318 ;;
 49319                           
 49320                           	psect	text202
 49321  0123E4                     __ptext202:
 49322                           	opt stack 0
 49323  0123E4                     _USBCheckStdRequest:
 49324                           	opt stack 9
 49325                           
 49326                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 49327                           
 49328                           ; BSR set to: 1
 49329                           ;incstack = 0
 49330  0123E4  010D               	movlb	13	; () banked
 49331  0123E6  3930               	swapf	48,w,b	;volatile
 49332  0123E8  32E8               	rrcf	wreg,f,c
 49333  0123EA  0B03               	andlw	3
 49334  0123EC  0900               	iorlw	0
 49335  0123EE  A4D8               	btfss	status,2,c
 49336  0123F0  0012               	return	
 49337  0123F2  D042               	goto	i2l355
 49338  0123F4                     i2l356:
 49339                           
 49340                           ; BSR set to: 13
 49341                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 49342  0123F4  8E55               	bsf	_inPipes+3,7,c	;volatile
 49343                           
 49344                           ; BSR set to: 13
 49345                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 49346  0123F6  0E08               	movlw	8
 49347  0123F8  6E5E               	movwf	_USBDeviceState,c	;volatile
 49348                           
 49349                           ;usb_device.c: 2698: break;
 49350  0123FA  0012               	return	
 49351  0123FC                     
 49352                           ; BSR set to: 13
 49353                           ;usb_device.c: 2700: USBStdGetDscHandler();
 49354                           
 49355                           ; BSR set to: 13
 49356  0123FC  ECD3  F083         	call	_USBStdGetDscHandler	;wreg free
 49357                           
 49358                           ;usb_device.c: 2701: break;
 49359  012400  0012               	return	
 49360  012402                     
 49361                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 49362  012402  EC17  F091         	call	_USBStdSetCfgHandler	;wreg free
 49363                           
 49364                           ;usb_device.c: 2704: break;
 49365  012406  0012               	return	
 49366  012408                     
 49367                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 49368  012408  0EC2               	movlw	low _USBActiveConfiguration
 49369  01240A  6E52               	movwf	_inPipes,c	;volatile
 49370  01240C  0E01               	movlw	high _USBActiveConfiguration
 49371  01240E  6E53               	movwf	_inPipes+1,c	;volatile
 49372                           
 49373                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 49374  012410  8055               	bsf	_inPipes+3,0,c	;volatile
 49375                           
 49376                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 49377  012412  0E01               	movlw	1
 49378  012414  6E56               	movwf	_inPipes+4,c	;volatile
 49379                           
 49380                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 49381  012416  8E55               	bsf	_inPipes+3,7,c	;volatile
 49382                           
 49383                           ;usb_device.c: 2710: break;
 49384  012418  0012               	return	
 49385  01241A                     
 49386                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 49387  01241A  EC4E  F099         	call	_USBStdGetStatusHandler	;wreg free
 49388                           
 49389                           ;usb_device.c: 2713: break;
 49390  01241E  0012               	return	
 49391  012420                     
 49392                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 49393  012420  EC84  F06F         	call	_USBStdFeatureReqHandler	;wreg free
 49394                           
 49395                           ;usb_device.c: 2717: break;
 49396  012424  0012               	return	
 49397  012426                     
 49398                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 49399  012426  010D               	movlb	13	; () banked
 49400  012428  5134               	movf	52,w,b	;volatile
 49401  01242A  0D01               	mullw	1
 49402  01242C  0EBD               	movlw	low _USBAlternateInterface
 49403  01242E  24F3               	addwf	prodl,w,c
 49404  012430  6E52               	movwf	_inPipes,c	;volatile
 49405  012432  0E01               	movlw	high _USBAlternateInterface
 49406  012434  20F4               	addwfc	prodh,w,c
 49407  012436  6E53               	movwf	_inPipes+1,c	;volatile
 49408                           
 49409                           ; BSR set to: 13
 49410                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 49411  012438  8055               	bsf	_inPipes+3,0,c	;volatile
 49412                           
 49413                           ; BSR set to: 13
 49414                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 49415  01243A  0E01               	movlw	1
 49416  01243C  6E56               	movwf	_inPipes+4,c	;volatile
 49417                           
 49418                           ; BSR set to: 13
 49419                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 49420  01243E  8E55               	bsf	_inPipes+3,7,c	;volatile
 49421                           
 49422                           ;usb_device.c: 2723: break;
 49423  012440  0012               	return	
 49424  012442                     i2l365:
 49425                           
 49426                           ; BSR set to: 13
 49427                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 49428  012442  8E55               	bsf	_inPipes+3,7,c	;volatile
 49429                           
 49430                           ; BSR set to: 13
 49431                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 49432  012444  5134               	movf	52,w,b	;volatile
 49433  012446  0D01               	mullw	1
 49434  012448  0EBD               	movlw	low _USBAlternateInterface
 49435  01244A  24F3               	addwf	prodl,w,c
 49436  01244C  6ED9               	movwf	fsr2l,c
 49437  01244E  0E01               	movlw	high _USBAlternateInterface
 49438  012450  20F4               	addwfc	prodh,w,c
 49439  012452  6EDA               	movwf	fsr2h,c
 49440  012454  CD32 FFDF          	movff	3378,indf2	;volatile
 49441                           
 49442                           ;usb_device.c: 2727: break;
 49443  012458  0012               	return	
 49444  01245A                     
 49445                           ; BSR set to: 13
 49446                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 49447                           
 49448                           ; BSR set to: 13
 49449  01245A  0E00               	movlw	0
 49450  01245C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49451  01245E  0E02               	movlw	2
 49452  012460  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49453  012462  0E00               	movlw	0
 49454  012464  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49455  012466  0E00               	movlw	0
 49456  012468  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49457  01246A  0E00               	movlw	0
 49458  01246C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49459  01246E  0E00               	movlw	0
 49460  012470  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49461  012472  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49462                           
 49463                           ;usb_device.c: 2734: }
 49464                           
 49465                           ;usb_device.c: 2733: break;
 49466                           
 49467                           ;usb_device.c: 2732: default:
 49468                           
 49469                           ;usb_device.c: 2731: case 12:
 49470                           
 49471                           ;usb_device.c: 2730: break;
 49472  012476  0012               	return	
 49473  012478                     i2l355:
 49474  012478  010D               	movlb	13	; () banked
 49475  01247A  5131               	movf	49,w,b	;volatile
 49476                           
 49477                           ; Switch size 1, requested type "space"
 49478                           ; Number of cases is 11, Range of values is 0 to 12
 49479                           ; switch strategies available:
 49480                           ; Name         Instructions Cycles
 49481                           ; simple_byte           34    18 (average)
 49482                           ;	Chosen strategy is simple_byte
 49483  01247C  0A00               	xorlw	0	; case 0
 49484  01247E  B4D8               	btfsc	status,2,c
 49485  012480  D7CC               	goto	i2l361
 49486  012482  0A01               	xorlw	1	; case 1
 49487  012484  B4D8               	btfsc	status,2,c
 49488  012486  D7CC               	goto	i2l362
 49489  012488  0A02               	xorlw	2	; case 3
 49490  01248A  B4D8               	btfsc	status,2,c
 49491  01248C  D7C9               	goto	i2l362
 49492  01248E  0A06               	xorlw	6	; case 5
 49493  012490  B4D8               	btfsc	status,2,c
 49494  012492  D7B0               	goto	i2l356
 49495  012494  0A03               	xorlw	3	; case 6
 49496  012496  B4D8               	btfsc	status,2,c
 49497  012498  D7B1               	goto	i2l358
 49498  01249A  0A01               	xorlw	1	; case 7
 49499  01249C  B4D8               	btfsc	status,2,c
 49500  01249E  D7DD               	goto	i2l366
 49501  0124A0  0A0F               	xorlw	15	; case 8
 49502  0124A2  B4D8               	btfsc	status,2,c
 49503  0124A4  D7B1               	goto	i2l360
 49504  0124A6  0A01               	xorlw	1	; case 9
 49505  0124A8  B4D8               	btfsc	status,2,c
 49506  0124AA  D7AB               	goto	i2l359
 49507  0124AC  0A03               	xorlw	3	; case 10
 49508  0124AE  B4D8               	btfsc	status,2,c
 49509  0124B0  D7BA               	goto	i2l364
 49510  0124B2  0A01               	xorlw	1	; case 11
 49511  0124B4  B4D8               	btfsc	status,2,c
 49512  0124B6  D7C5               	goto	i2l365
 49513  0124B8  0A07               	xorlw	7	; case 12
 49514  0124BA  0012               	return	
 49515  0124BC                     __end_of_USBCheckStdRequest:
 49516                           	opt stack 0
 49517                           tosu	equ	0xFFF
 49518                           tosh	equ	0xFFE
 49519                           tosl	equ	0xFFD
 49520                           pclatu	equ	0xFFB
 49521                           pclath	equ	0xFFA
 49522                           tblptru	equ	0xFF8
 49523                           tblptrh	equ	0xFF7
 49524                           tblptrl	equ	0xFF6
 49525                           tablat	equ	0xFF5
 49526                           prodh	equ	0xFF4
 49527                           prodl	equ	0xFF3
 49528                           intcon	equ	0xFF2
 49529                           indf0	equ	0xFEF
 49530                           postinc0	equ	0xFEE
 49531                           fsr0h	equ	0xFEA
 49532                           fsr0l	equ	0xFE9
 49533                           wreg	equ	0xFE8
 49534                           indf1	equ	0xFE7
 49535                           postinc1	equ	0xFE6
 49536                           postdec1	equ	0xFE5
 49537                           plusw1	equ	0xFE3
 49538                           fsr1h	equ	0xFE2
 49539                           fsr1l	equ	0xFE1
 49540                           indf2	equ	0xFDF
 49541                           postinc2	equ	0xFDE
 49542                           postdec2	equ	0xFDD
 49543                           plusw2	equ	0xFDB
 49544                           fsr2h	equ	0xFDA
 49545                           fsr2l	equ	0xFD9
 49546                           status	equ	0xFD8
 49547                           
 49548 ;; *************** function _USBStdSetCfgHandler *****************
 49549 ;; Defined at:
 49550 ;;		line 1970 in file "usb_device.c"
 49551 ;; Parameters:    Size  Location     Type
 49552 ;;		None
 49553 ;; Auto vars:     Size  Location     Type
 49554 ;;  i               1   23[COMRAM] unsigned char 
 49555 ;; Return value:  Size  Location     Type
 49556 ;;                  1    wreg      void 
 49557 ;; Registers used:
 49558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49559 ;; Tracked objects:
 49560 ;;		On entry : 0/0
 49561 ;;		On exit  : 0/0
 49562 ;;		Unchanged: 0/0
 49563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49568 ;;Total ram usage:        1 bytes
 49569 ;; Hardware stack levels used:    1
 49570 ;; Hardware stack levels required when called:    4
 49571 ;; This function calls:
 49572 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49573 ;;		i2_memset
 49574 ;; This function is called by:
 49575 ;;		_USBCheckStdRequest
 49576 ;; This function uses a non-reentrant model
 49577 ;;
 49578                           
 49579                           	psect	text203
 49580  01222E                     __ptext203:
 49581                           	opt stack 0
 49582  01222E                     _USBStdSetCfgHandler:
 49583                           	opt stack 9
 49584                           
 49585                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 49586                           
 49587                           ;incstack = 0
 49588  01222E  8E55               	bsf	_inPipes+3,7,c	;volatile
 49589                           
 49590                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 49591  012230  0E27               	movlw	39
 49592  012232  6E01               	movwf	i2memset@p1,c
 49593  012234  0E0F               	movlw	15
 49594  012236  6E02               	movwf	i2memset@p1+1,c
 49595  012238  0E00               	movlw	0
 49596  01223A  6E04               	movwf	i2memset@c+1,c
 49597  01223C  0E00               	movlw	0
 49598  01223E  6E03               	movwf	i2memset@c,c
 49599  012240  0E00               	movlw	0
 49600  012242  6E06               	movwf	i2memset@n+1,c
 49601  012244  0E02               	movlw	2
 49602  012246  6E05               	movwf	i2memset@n,c
 49603  012248  ECCF  F0A9         	call	i2_memset	;wreg free
 49604                           
 49605                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 49606  01224C  0E00               	movlw	0
 49607  01224E  6E01               	movwf	i2memset@p1,c
 49608  012250  0E0D               	movlw	13
 49609  012252  6E02               	movwf	i2memset@p1+1,c
 49610  012254  0E00               	movlw	0
 49611  012256  6E04               	movwf	i2memset@c+1,c
 49612  012258  0E00               	movlw	0
 49613  01225A  6E03               	movwf	i2memset@c,c
 49614  01225C  0E00               	movlw	0
 49615  01225E  6E06               	movwf	i2memset@n+1,c
 49616  012260  0E30               	movlw	48
 49617  012262  6E05               	movwf	i2memset@n,c
 49618  012264  ECCF  F0A9         	call	i2_memset	;wreg free
 49619                           
 49620                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 49621  012268  8C65               	bsf	3941,6,c	;volatile
 49622                           
 49623                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 49624  01226A  0E00               	movlw	0
 49625  01226C  6E18               	movwf	USBStdSetCfgHandler@i,c
 49626  01226E                     i2l13239:
 49627  01226E  0E02               	movlw	2
 49628  012270  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 49629  012272  D001               	goto	i2l272
 49630  012274  D016               	goto	i2u1187_40
 49631  012276                     i2l272:
 49632                           
 49633                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 49634  012276  5018               	movf	USBStdSetCfgHandler@i,w,c
 49635  012278  0D01               	mullw	1
 49636  01227A  0E3C               	movlw	low _ep_data_in
 49637  01227C  24F3               	addwf	prodl,w,c
 49638  01227E  6ED9               	movwf	fsr2l,c
 49639  012280  0E01               	movlw	high _ep_data_in
 49640  012282  20F4               	addwfc	prodh,w,c
 49641  012284  6EDA               	movwf	fsr2h,c
 49642  012286  0E00               	movlw	0
 49643  012288  6EDF               	movwf	indf2,c
 49644                           
 49645                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 49646  01228A  5018               	movf	USBStdSetCfgHandler@i,w,c
 49647  01228C  0D01               	mullw	1
 49648  01228E  0E39               	movlw	low _ep_data_out
 49649  012290  24F3               	addwf	prodl,w,c
 49650  012292  6ED9               	movwf	fsr2l,c
 49651  012294  0E01               	movlw	high _ep_data_out
 49652  012296  20F4               	addwfc	prodh,w,c
 49653  012298  6EDA               	movwf	fsr2h,c
 49654  01229A  0E00               	movlw	0
 49655  01229C  6EDF               	movwf	indf2,c
 49656  01229E  2A18               	incf	USBStdSetCfgHandler@i,f,c
 49657  0122A0  D7E6               	goto	i2l13239
 49658  0122A2                     i2u1187_40:
 49659                           
 49660                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 49661  0122A2  0EBD               	movlw	low _USBAlternateInterface
 49662  0122A4  6E01               	movwf	i2memset@p1,c
 49663  0122A6  0E01               	movlw	high _USBAlternateInterface
 49664  0122A8  6E02               	movwf	i2memset@p1+1,c
 49665  0122AA  0E00               	movlw	0
 49666  0122AC  6E04               	movwf	i2memset@c+1,c
 49667  0122AE  0E00               	movlw	0
 49668  0122B0  6E03               	movwf	i2memset@c,c
 49669  0122B2  0E00               	movlw	0
 49670  0122B4  6E06               	movwf	i2memset@n+1,c
 49671  0122B6  0E02               	movlw	2
 49672  0122B8  6E05               	movwf	i2memset@n,c
 49673  0122BA  ECCF  F0A9         	call	i2_memset	;wreg free
 49674                           
 49675                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 49676  0122BE  9C65               	bcf	3941,6,c	;volatile
 49677                           
 49678                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 49679  0122C0  0E08               	movlw	8
 49680  0122C2  0101               	movlb	1	; () banked
 49681  0122C4  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49682  0122C6  0E0D               	movlw	13
 49683  0122C8  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49684                           
 49685                           ; BSR set to: 1
 49686                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 49687  0122CA  0E00               	movlw	0
 49688  0122CC  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 49689  0122CE  0E0D               	movlw	13
 49690  0122D0  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 49691                           
 49692                           ; BSR set to: 1
 49693                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 49694  0122D2  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 49695  0122D6  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 49696                           
 49697                           ; BSR set to: 1
 49698                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 49699  0122DA  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 49700                           
 49701                           ; BSR set to: 1
 49702                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 49703  0122DE  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 49704  0122E0  A4D8               	btfss	status,2,c
 49705  0122E2  D003               	goto	i2l274
 49706                           
 49707                           ; BSR set to: 1
 49708                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 49709  0122E4  0E10               	movlw	16
 49710  0122E6  6E5E               	movwf	_USBDeviceState,c	;volatile
 49711                           
 49712                           ;usb_device.c: 2015: }
 49713  0122E8  0012               	return	
 49714  0122EA                     i2l274:
 49715                           
 49716                           ; BSR set to: 1
 49717                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 49718                           
 49719                           ; BSR set to: 1
 49720  0122EA  0E00               	movlw	0
 49721  0122EC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49722  0122EE  0E01               	movlw	1
 49723  0122F0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49724  0122F2  0EC2               	movlw	low _USBActiveConfiguration
 49725  0122F4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49726  0122F6  0E01               	movlw	high _USBActiveConfiguration
 49727  0122F8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49728  0122FA  0E00               	movlw	0
 49729  0122FC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49730  0122FE  0E01               	movlw	1
 49731  012300  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49732  012302  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49733                           
 49734                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 49735  012306  0E20               	movlw	32
 49736  012308  6E5E               	movwf	_USBDeviceState,c	;volatile
 49737  01230A  0012               	return	
 49738  01230C                     __end_of_USBStdSetCfgHandler:
 49739                           	opt stack 0
 49740                           tosu	equ	0xFFF
 49741                           tosh	equ	0xFFE
 49742                           tosl	equ	0xFFD
 49743                           pclatu	equ	0xFFB
 49744                           pclath	equ	0xFFA
 49745                           tblptru	equ	0xFF8
 49746                           tblptrh	equ	0xFF7
 49747                           tblptrl	equ	0xFF6
 49748                           tablat	equ	0xFF5
 49749                           prodh	equ	0xFF4
 49750                           prodl	equ	0xFF3
 49751                           intcon	equ	0xFF2
 49752                           indf0	equ	0xFEF
 49753                           postinc0	equ	0xFEE
 49754                           fsr0h	equ	0xFEA
 49755                           fsr0l	equ	0xFE9
 49756                           wreg	equ	0xFE8
 49757                           indf1	equ	0xFE7
 49758                           postinc1	equ	0xFE6
 49759                           postdec1	equ	0xFE5
 49760                           plusw1	equ	0xFE3
 49761                           fsr1h	equ	0xFE2
 49762                           fsr1l	equ	0xFE1
 49763                           indf2	equ	0xFDF
 49764                           postinc2	equ	0xFDE
 49765                           postdec2	equ	0xFDD
 49766                           plusw2	equ	0xFDB
 49767                           fsr2h	equ	0xFDA
 49768                           fsr2l	equ	0xFD9
 49769                           status	equ	0xFD8
 49770                           
 49771 ;; *************** function i2_memset *****************
 49772 ;; Defined at:
 49773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 49774 ;; Parameters:    Size  Location     Type
 49775 ;;  p1              2    0[COMRAM] PTR void 
 49776 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 49777 ;;  c               2    2[COMRAM] int 
 49778 ;;  n               2    4[COMRAM] unsigned int 
 49779 ;; Auto vars:     Size  Location     Type
 49780 ;;  memset          2    6[COMRAM] PTR unsigned char 
 49781 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 49782 ;; Return value:  Size  Location     Type
 49783 ;;                  2    0[COMRAM] PTR void 
 49784 ;; Registers used:
 49785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49786 ;; Tracked objects:
 49787 ;;		On entry : 0/0
 49788 ;;		On exit  : 0/0
 49789 ;;		Unchanged: 0/0
 49790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49791 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49794 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49795 ;;Total ram usage:        8 bytes
 49796 ;; Hardware stack levels used:    1
 49797 ;; This function calls:
 49798 ;;		Nothing
 49799 ;; This function is called by:
 49800 ;;		_USBStdSetCfgHandler
 49801 ;;		i2_USBDeviceInit
 49802 ;; This function uses a non-reentrant model
 49803 ;;
 49804                           
 49805                           	psect	text204
 49806  01539E                     __ptext204:
 49807                           	opt stack 0
 49808  01539E                     i2_memset:
 49809                           	opt stack 15
 49810                           
 49811                           ;incstack = 0
 49812  01539E  C001  F007         	movff	i2memset@p1,i2memset@p
 49813  0153A2  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 49814  0153A6  D008               	goto	i2l3647
 49815  0153A8                     i2l13169:
 49816  0153A8  C007  FFD9         	movff	i2memset@p,fsr2l
 49817  0153AC  C008  FFDA         	movff	i2memset@p+1,fsr2h
 49818  0153B0  C003  FFDF         	movff	i2memset@c,indf2
 49819  0153B4  4A07               	infsnz	i2memset@p,f,c
 49820  0153B6  2A08               	incf	i2memset@p+1,f,c
 49821  0153B8                     i2l3647:
 49822  0153B8  0605               	decf	i2memset@n,f,c
 49823  0153BA  A0D8               	btfss	status,0,c
 49824  0153BC  0606               	decf	i2memset@n+1,f,c
 49825  0153BE  2805               	incf	i2memset@n,w,c
 49826  0153C0  E1F3               	bnz	i2l13169
 49827  0153C2  2806               	incf	i2memset@n+1,w,c
 49828  0153C4  B4D8               	btfsc	status,2,c
 49829  0153C6  0012               	return	
 49830  0153C8  D7EF               	goto	i2l3648
 49831  0153CA                     __end_ofi2_memset:
 49832                           	opt stack 0
 49833                           tosu	equ	0xFFF
 49834                           tosh	equ	0xFFE
 49835                           tosl	equ	0xFFD
 49836                           pclatu	equ	0xFFB
 49837                           pclath	equ	0xFFA
 49838                           tblptru	equ	0xFF8
 49839                           tblptrh	equ	0xFF7
 49840                           tblptrl	equ	0xFF6
 49841                           tablat	equ	0xFF5
 49842                           prodh	equ	0xFF4
 49843                           prodl	equ	0xFF3
 49844                           intcon	equ	0xFF2
 49845                           indf0	equ	0xFEF
 49846                           postinc0	equ	0xFEE
 49847                           fsr0h	equ	0xFEA
 49848                           fsr0l	equ	0xFE9
 49849                           wreg	equ	0xFE8
 49850                           indf1	equ	0xFE7
 49851                           postinc1	equ	0xFE6
 49852                           postdec1	equ	0xFE5
 49853                           plusw1	equ	0xFE3
 49854                           fsr1h	equ	0xFE2
 49855                           fsr1l	equ	0xFE1
 49856                           indf2	equ	0xFDF
 49857                           postinc2	equ	0xFDE
 49858                           postdec2	equ	0xFDD
 49859                           plusw2	equ	0xFDB
 49860                           fsr2h	equ	0xFDA
 49861                           fsr2l	equ	0xFD9
 49862                           status	equ	0xFD8
 49863                           
 49864 ;; *************** function _USBStdGetStatusHandler *****************
 49865 ;; Defined at:
 49866 ;;		line 2131 in file "usb_device.c"
 49867 ;; Parameters:    Size  Location     Type
 49868 ;;		None
 49869 ;; Auto vars:     Size  Location     Type
 49870 ;;  p               2    1[COMRAM] PTR struct __BDT
 49871 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 49872 ;; Return value:  Size  Location     Type
 49873 ;;                  1    wreg      void 
 49874 ;; Registers used:
 49875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 49876 ;; Tracked objects:
 49877 ;;		On entry : 0/0
 49878 ;;		On exit  : 0/0
 49879 ;;		Unchanged: 0/0
 49880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49884 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49885 ;;Total ram usage:        3 bytes
 49886 ;; Hardware stack levels used:    1
 49887 ;; This function calls:
 49888 ;;		Nothing
 49889 ;; This function is called by:
 49890 ;;		_USBCheckStdRequest
 49891 ;; This function uses a non-reentrant model
 49892 ;;
 49893                           
 49894                           	psect	text205
 49895  01329C                     __ptext205:
 49896                           	opt stack 0
 49897  01329C                     _USBStdGetStatusHandler:
 49898                           	opt stack 13
 49899                           
 49900                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 49901                           
 49902                           ;incstack = 0
 49903  01329C  0E00               	movlw	0
 49904  01329E  010D               	movlb	13	; () banked
 49905  0132A0  6F38               	movwf	56,b	;volatile
 49906                           
 49907                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 49908  0132A2  0E00               	movlw	0
 49909  0132A4  6F39               	movwf	57,b	;volatile
 49910                           
 49911                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 49912  0132A6  D035               	goto	i2l293
 49913  0132A8                     i2l294:
 49914                           
 49915                           ; BSR set to: 13
 49916                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 49917  0132A8  8E55               	bsf	_inPipes+3,7,c	;volatile
 49918                           
 49919                           ; BSR set to: 13
 49920                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 49921                           
 49922                           ; BSR set to: 13
 49923                           
 49924                           ; BSR set to: 13
 49925                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 49926                           
 49927                           ;usb_device.c: 2144: if(0 == 1)
 49928  0132AA  0101               	movlb	1	; () banked
 49929  0132AC  056E               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 49930  0132AE  A4D8               	btfss	status,2,c
 49931  0132B0  D03B               	goto	i2l297
 49932                           
 49933                           ; BSR set to: 1
 49934                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 49935  0132B2  010D               	movlb	13	; () banked
 49936  0132B4  8338               	bsf	56,1,b	;volatile
 49937                           
 49938                           ; BSR set to: 13
 49939                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 49940  0132B6  D038               	goto	i2l297
 49941  0132B8                     i2l298:
 49942                           
 49943                           ; BSR set to: 13
 49944                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 49945  0132B8  8E55               	bsf	_inPipes+3,7,c	;volatile
 49946                           
 49947                           ;usb_device.c: 2156: break;
 49948  0132BA  D036               	goto	i2l297
 49949  0132BC                     i2l299:
 49950                           
 49951                           ; BSR set to: 13
 49952                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 49953  0132BC  8E55               	bsf	_inPipes+3,7,c	;volatile
 49954                           
 49955                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 49956  0132BE  BF34               	btfsc	52,7,b	;volatile
 49957  0132C0  D00A               	goto	i2l300
 49958                           
 49959                           ; BSR set to: 13
 49960                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 49961  0132C2  5134               	movf	52,w,b	;volatile
 49962  0132C4  0B0F               	andlw	15
 49963  0132C6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 49964  0132C8  5001               	movf	??_USBStdGetStatusHandler,w,c
 49965  0132CA  0D02               	mullw	2
 49966  0132CC  0E21               	movlw	low _pBDTEntryOut
 49967  0132CE  24F3               	addwf	prodl,w,c
 49968  0132D0  6ED9               	movwf	fsr2l,c
 49969  0132D2  0E01               	movlw	high _pBDTEntryOut
 49970  0132D4  D009               	goto	L76
 49971  0132D6                     i2l300:
 49972                           
 49973                           ; BSR set to: 13
 49974                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 49975                           
 49976                           ; BSR set to: 13
 49977  0132D6  5134               	movf	52,w,b	;volatile
 49978  0132D8  0B0F               	andlw	15
 49979  0132DA  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 49980  0132DC  5001               	movf	??_USBStdGetStatusHandler,w,c
 49981  0132DE  0D02               	mullw	2
 49982  0132E0  0E1B               	movlw	low _pBDTEntryIn
 49983  0132E2  24F3               	addwf	prodl,w,c
 49984  0132E4  6ED9               	movwf	fsr2l,c
 49985  0132E6  0E01               	movlw	high _pBDTEntryIn
 49986  0132E8                     L76:
 49987  0132E8  20F4               	addwfc	prodh,w,c
 49988  0132EA  6EDA               	movwf	fsr2h,c
 49989  0132EC  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 49990  0132F0  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 49991                           
 49992                           ; BSR set to: 13
 49993                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 49994                           
 49995                           ; BSR set to: 13
 49996  0132F4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 49997  0132F8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 49998  0132FC  AEDF               	btfss	indf2,7,c
 49999  0132FE  D014               	goto	i2l297
 50000                           
 50001                           ; BSR set to: 13
 50002  013300  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50003  013304  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50004  013308  A4DF               	btfss	indf2,2,c
 50005  01330A  D00E               	goto	i2l297
 50006                           
 50007                           ; BSR set to: 13
 50008                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 50009  01330C  0E01               	movlw	1
 50010  01330E  6F38               	movwf	56,b	;volatile
 50011                           
 50012                           ; BSR set to: 13
 50013                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 50014                           
 50015                           ; BSR set to: 13
 50016                           ;usb_device.c: 2176: break;
 50017  013310  D00B               	goto	i2l297
 50018  013312                     i2l293:
 50019                           
 50020                           ; BSR set to: 13
 50021                           
 50022                           ; BSR set to: 13
 50023  013312  5130               	movf	48,w,b	;volatile
 50024  013314  0B1F               	andlw	31
 50025                           
 50026                           ; Switch size 1, requested type "space"
 50027                           ; Number of cases is 3, Range of values is 0 to 2
 50028                           ; switch strategies available:
 50029                           ; Name         Instructions Cycles
 50030                           ; simple_byte           10     6 (average)
 50031                           ;	Chosen strategy is simple_byte
 50032  013316  0A00               	xorlw	0	; case 0
 50033  013318  B4D8               	btfsc	status,2,c
 50034  01331A  D7C6               	goto	i2l294
 50035  01331C  0A01               	xorlw	1	; case 1
 50036  01331E  B4D8               	btfsc	status,2,c
 50037  013320  D7CB               	goto	i2l298
 50038  013322  0A03               	xorlw	3	; case 2
 50039  013324  B4D8               	btfsc	status,2,c
 50040  013326  D7CA               	goto	i2l299
 50041  013328                     i2l297:
 50042                           
 50043                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 50044  013328  AE55               	btfss	_inPipes+3,7,c	;volatile
 50045  01332A  0012               	return	
 50046                           
 50047                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 50048  01332C  0E38               	movlw	56
 50049  01332E  6E52               	movwf	_inPipes,c	;volatile
 50050  013330  0E0D               	movlw	13
 50051  013332  6E53               	movwf	_inPipes+1,c	;volatile
 50052                           
 50053                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50054  013334  8055               	bsf	_inPipes+3,0,c	;volatile
 50055                           
 50056                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 50057  013336  0E02               	movlw	2
 50058  013338  6E56               	movwf	_inPipes+4,c	;volatile
 50059  01333A  0012               	return	
 50060  01333C                     __end_of_USBStdGetStatusHandler:
 50061                           	opt stack 0
 50062                           tosu	equ	0xFFF
 50063                           tosh	equ	0xFFE
 50064                           tosl	equ	0xFFD
 50065                           pclatu	equ	0xFFB
 50066                           pclath	equ	0xFFA
 50067                           tblptru	equ	0xFF8
 50068                           tblptrh	equ	0xFF7
 50069                           tblptrl	equ	0xFF6
 50070                           tablat	equ	0xFF5
 50071                           prodh	equ	0xFF4
 50072                           prodl	equ	0xFF3
 50073                           intcon	equ	0xFF2
 50074                           indf0	equ	0xFEF
 50075                           postinc0	equ	0xFEE
 50076                           fsr0h	equ	0xFEA
 50077                           fsr0l	equ	0xFE9
 50078                           wreg	equ	0xFE8
 50079                           indf1	equ	0xFE7
 50080                           postinc1	equ	0xFE6
 50081                           postdec1	equ	0xFE5
 50082                           plusw1	equ	0xFE3
 50083                           fsr1h	equ	0xFE2
 50084                           fsr1l	equ	0xFE1
 50085                           indf2	equ	0xFDF
 50086                           postinc2	equ	0xFDE
 50087                           postdec2	equ	0xFDD
 50088                           plusw2	equ	0xFDB
 50089                           fsr2h	equ	0xFDA
 50090                           fsr2l	equ	0xFD9
 50091                           status	equ	0xFD8
 50092                           
 50093 ;; *************** function _USBStdGetDscHandler *****************
 50094 ;; Defined at:
 50095 ;;		line 2045 in file "usb_device.c"
 50096 ;; Parameters:    Size  Location     Type
 50097 ;;		None
 50098 ;; Auto vars:     Size  Location     Type
 50099 ;;		None
 50100 ;; Return value:  Size  Location     Type
 50101 ;;                  1    wreg      void 
 50102 ;; Registers used:
 50103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 50104 ;; Tracked objects:
 50105 ;;		On entry : 0/0
 50106 ;;		On exit  : 0/0
 50107 ;;		Unchanged: 0/0
 50108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50111 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50113 ;;Total ram usage:        2 bytes
 50114 ;; Hardware stack levels used:    1
 50115 ;; This function calls:
 50116 ;;		Nothing
 50117 ;; This function is called by:
 50118 ;;		_USBCheckStdRequest
 50119 ;; This function uses a non-reentrant model
 50120 ;;
 50121                           
 50122                           	psect	text206
 50123  0107A6                     __ptext206:
 50124                           	opt stack 0
 50125  0107A6                     _USBStdGetDscHandler:
 50126                           	opt stack 13
 50127                           
 50128                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 50129                           
 50130                           ;incstack = 0
 50131  0107A6  0E80               	movlw	128
 50132  0107A8  010D               	movlb	13	; () banked
 50133  0107AA  1930               	xorwf	48,w,b	;volatile
 50134  0107AC  A4D8               	btfss	status,2,c
 50135  0107AE  0012               	return	
 50136                           
 50137                           ; BSR set to: 13
 50138                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 50139  0107B0  0EC0               	movlw	192
 50140  0107B2  6E55               	movwf	_inPipes+3,c	;volatile
 50141                           
 50142                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 50143  0107B4  D082               	goto	i2l280
 50144  0107B6                     
 50145                           ; BSR set to: 13
 50146                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 50147                           
 50148                           ; BSR set to: 13
 50149  0107B6  0E5B               	movlw	low _device_dsc
 50150  0107B8  6E52               	movwf	_inPipes,c	;volatile
 50151  0107BA  0EA2               	movlw	high _device_dsc
 50152  0107BC  6E53               	movwf	_inPipes+1,c	;volatile
 50153                           
 50154                           ; BSR set to: 13
 50155                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 50156  0107BE  0E00               	movlw	0
 50157  0107C0  6E57               	movwf	_inPipes+5,c	;volatile
 50158  0107C2  0E12               	movlw	18
 50159  0107C4  6E56               	movwf	_inPipes+4,c	;volatile
 50160                           
 50161                           ;usb_device.c: 2060: break;
 50162  0107C6  0012               	return	
 50163  0107C8                     
 50164                           ; BSR set to: 13
 50165                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 50166                           
 50167                           ; BSR set to: 13
 50168  0107C8  5132               	movf	50,w,b	;volatile
 50169  0107CA  A4D8               	btfss	status,2,c
 50170  0107CC  D042               	goto	i2l284
 50171                           
 50172                           ; BSR set to: 13
 50173                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 50174  0107CE  5132               	movf	50,w,b	;volatile
 50175  0107D0  0D02               	mullw	2
 50176  0107D2  0EEC               	movlw	low _USB_CD_Ptr
 50177  0107D4  24F3               	addwf	prodl,w,c
 50178  0107D6  6EF6               	movwf	tblptrl,c
 50179  0107D8  0E9D               	movlw	high _USB_CD_Ptr
 50180  0107DA  20F4               	addwfc	prodh,w,c
 50181  0107DC  6EF7               	movwf	tblptrh,c
 50182  0107DE                     	if	1	;There are 3 active tblptr bytes
 50183  0107DE  6AF8               	clrf	tblptru,c
 50184  0107E0  0E00               	movlw	low (__mediumconst shr (0+16))
 50185  0107E2  22F8               	addwfc	tblptru,f,c
 50186  0107E4                     	endif
 50187  0107E4  0009               	tblrd		*+
 50188  0107E6  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50189  0107EA  000A               	tblrd		*-
 50190  0107EC  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50191                           
 50192                           ; BSR set to: 13
 50193                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 50194  0107F0  0E02               	movlw	2
 50195  0107F2  2452               	addwf	_inPipes,w,c	;volatile
 50196  0107F4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50197  0107F6  0E00               	movlw	0
 50198  0107F8  2053               	addwfc	_inPipes+1,w,c	;volatile
 50199  0107FA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50200  0107FC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50201  010800  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50202  010804  0E00               	movlw	low (__mediumconst shr (0+16))
 50203  010806  6EF8               	movwf	tblptru,c
 50204  010808  0E0E               	movlw	(high __ramtop+-1)
 50205  01080A  64F7               	cpfsgt	tblptrh,c
 50206  01080C  D003               	bra	i2u1191_47
 50207  01080E  0008               	tblrd		*
 50208  010810  50F5               	movf	tablat,w,c
 50209  010812  D005               	bra	i2u1191_40
 50210  010814                     i2u1191_47:
 50211  010814  CFF6 FFE9          	movff	tblptrl,fsr0l
 50212  010818  CFF7 FFEA          	movff	tblptrh,fsr0h
 50213  01081C  50EF               	movf	indf0,w,c
 50214  01081E                     i2u1191_40:
 50215  01081E  6E56               	movwf	_inPipes+4,c	;volatile
 50216                           
 50217                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 50218  010820  0E03               	movlw	3
 50219  010822  2452               	addwf	_inPipes,w,c	;volatile
 50220  010824  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50221  010826  0E00               	movlw	0
 50222  010828  2053               	addwfc	_inPipes+1,w,c	;volatile
 50223  01082A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50224  01082C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50225  010830  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50226  010834  0E00               	movlw	low (__mediumconst shr (0+16))
 50227  010836  6EF8               	movwf	tblptru,c
 50228  010838  0E0E               	movlw	(high __ramtop+-1)
 50229  01083A  64F7               	cpfsgt	tblptrh,c
 50230  01083C  D003               	bra	i2u1192_47
 50231  01083E  0008               	tblrd		*
 50232  010840  50F5               	movf	tablat,w,c
 50233  010842  D005               	bra	i2u1192_40
 50234  010844                     i2u1192_47:
 50235  010844  CFF6 FFE9          	movff	tblptrl,fsr0l
 50236  010848  CFF7 FFEA          	movff	tblptrh,fsr0h
 50237  01084C  50EF               	movf	indf0,w,c
 50238  01084E                     i2u1192_40:
 50239  01084E  6E57               	movwf	_inPipes+5,c	;volatile
 50240                           
 50241                           ;usb_device.c: 2078: }
 50242  010850  0012               	return	
 50243  010852                     i2l284:
 50244                           
 50245                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 50246  010852  0E00               	movlw	0
 50247  010854  6E55               	movwf	_inPipes+3,c	;volatile
 50248                           
 50249                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 50250  010856  0012               	return	
 50251  010858                     
 50252                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 50253  010858  0E04               	movlw	4
 50254  01085A  010D               	movlb	13	; () banked
 50255  01085C  6132               	cpfslt	50,b	;volatile
 50256  01085E  D027               	goto	i2l287
 50257                           
 50258                           ; BSR set to: 13
 50259                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 50260  010860  5132               	movf	50,w,b	;volatile
 50261  010862  0D02               	mullw	2
 50262  010864  0EE4               	movlw	low _USB_SD_Ptr
 50263  010866  24F3               	addwf	prodl,w,c
 50264  010868  6EF6               	movwf	tblptrl,c
 50265  01086A  0E9D               	movlw	high _USB_SD_Ptr
 50266  01086C  20F4               	addwfc	prodh,w,c
 50267  01086E  6EF7               	movwf	tblptrh,c
 50268  010870                     	if	1	;There are 3 active tblptr bytes
 50269  010870  6AF8               	clrf	tblptru,c
 50270  010872  0E00               	movlw	low (__mediumconst shr (0+16))
 50271  010874  22F8               	addwfc	tblptru,f,c
 50272  010876                     	endif
 50273  010876  0009               	tblrd		*+
 50274  010878  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50275  01087C  000A               	tblrd		*-
 50276  01087E  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50277                           
 50278                           ; BSR set to: 13
 50279                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 50280  010882  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 50281  010886  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50282  01088A  0E00               	movlw	low (__mediumconst shr (0+16))
 50283  01088C  6EF8               	movwf	tblptru,c
 50284  01088E  0E0E               	movlw	(high __ramtop+-1)
 50285  010890  64F7               	cpfsgt	tblptrh,c
 50286  010892  D003               	bra	i2u1194_47
 50287  010894  0008               	tblrd		*
 50288  010896  50F5               	movf	tablat,w,c
 50289  010898  D005               	bra	i2u1194_40
 50290  01089A                     i2u1194_47:
 50291  01089A  CFF6 FFE9          	movff	tblptrl,fsr0l
 50292  01089E  CFF7 FFEA          	movff	tblptrh,fsr0h
 50293  0108A2  50EF               	movf	indf0,w,c
 50294  0108A4                     i2u1194_40:
 50295  0108A4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50296  0108A6  5001               	movf	??_USBStdGetDscHandler,w,c
 50297  0108A8  6E56               	movwf	_inPipes+4,c	;volatile
 50298  0108AA  6A57               	clrf	_inPipes+5,c	;volatile
 50299                           
 50300                           ;usb_device.c: 2094: }
 50301  0108AC  0012               	return	
 50302  0108AE                     i2l287:
 50303                           
 50304                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 50305  0108AE  0E00               	movlw	0
 50306  0108B0  6E55               	movwf	_inPipes+3,c	;volatile
 50307                           
 50308                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 50309  0108B2  0012               	return	
 50310  0108B4                     
 50311                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 50312  0108B4  0E00               	movlw	0
 50313  0108B6  6E55               	movwf	_inPipes+3,c	;volatile
 50314                           
 50315                           ;usb_device.c: 2112: }
 50316                           
 50317                           ;usb_device.c: 2111: break;
 50318  0108B8  0012               	return	
 50319  0108BA                     i2l280:
 50320  0108BA  010D               	movlb	13	; () banked
 50321  0108BC  5133               	movf	51,w,b	;volatile
 50322                           
 50323                           ; Switch size 1, requested type "space"
 50324                           ; Number of cases is 3, Range of values is 1 to 3
 50325                           ; switch strategies available:
 50326                           ; Name         Instructions Cycles
 50327                           ; simple_byte           10     6 (average)
 50328                           ;	Chosen strategy is simple_byte
 50329  0108BE  0A01               	xorlw	1	; case 1
 50330  0108C0  B4D8               	btfsc	status,2,c
 50331  0108C2  D779               	goto	i2l281
 50332  0108C4  0A03               	xorlw	3	; case 2
 50333  0108C6  B4D8               	btfsc	status,2,c
 50334  0108C8  D77F               	goto	i2l283
 50335  0108CA  0A01               	xorlw	1	; case 3
 50336  0108CC  B4D8               	btfsc	status,2,c
 50337  0108CE  D7C4               	goto	i2l286
 50338  0108D0  D7F1               	goto	i2l289
 50339  0108D2                     __end_of_USBStdGetDscHandler:
 50340                           	opt stack 0
 50341                           tosu	equ	0xFFF
 50342                           tosh	equ	0xFFE
 50343                           tosl	equ	0xFFD
 50344                           pclatu	equ	0xFFB
 50345                           pclath	equ	0xFFA
 50346                           tblptru	equ	0xFF8
 50347                           tblptrh	equ	0xFF7
 50348                           tblptrl	equ	0xFF6
 50349                           tablat	equ	0xFF5
 50350                           prodh	equ	0xFF4
 50351                           prodl	equ	0xFF3
 50352                           intcon	equ	0xFF2
 50353                           indf0	equ	0xFEF
 50354                           postinc0	equ	0xFEE
 50355                           fsr0h	equ	0xFEA
 50356                           fsr0l	equ	0xFE9
 50357                           wreg	equ	0xFE8
 50358                           indf1	equ	0xFE7
 50359                           postinc1	equ	0xFE6
 50360                           postdec1	equ	0xFE5
 50361                           plusw1	equ	0xFE3
 50362                           fsr1h	equ	0xFE2
 50363                           fsr1l	equ	0xFE1
 50364                           indf2	equ	0xFDF
 50365                           postinc2	equ	0xFDE
 50366                           postdec2	equ	0xFDD
 50367                           plusw2	equ	0xFDB
 50368                           fsr2h	equ	0xFDA
 50369                           fsr2l	equ	0xFD9
 50370                           status	equ	0xFD8
 50371                           
 50372 ;; *************** function _USBStdFeatureReqHandler *****************
 50373 ;; Defined at:
 50374 ;;		line 2756 in file "usb_device.c"
 50375 ;; Parameters:    Size  Location     Type
 50376 ;;		None
 50377 ;; Auto vars:     Size  Location     Type
 50378 ;;  p               2   27[COMRAM] PTR struct __BDT
 50379 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50380 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 50381 ;;		 -> UEP0(1), 
 50382 ;;  current_ep_d    1   26[COMRAM] struct .
 50383 ;; Return value:  Size  Location     Type
 50384 ;;                  1    wreg      void 
 50385 ;; Registers used:
 50386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50387 ;; Tracked objects:
 50388 ;;		On entry : 0/0
 50389 ;;		On exit  : 0/0
 50390 ;;		Unchanged: 0/0
 50391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50393 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50395 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50396 ;;Total ram usage:        6 bytes
 50397 ;; Hardware stack levels used:    1
 50398 ;; Hardware stack levels required when called:    4
 50399 ;; This function calls:
 50400 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50401 ;; This function is called by:
 50402 ;;		_USBCheckStdRequest
 50403 ;; This function uses a non-reentrant model
 50404 ;;
 50405                           
 50406                           	psect	text207
 50407  00DF08                     __ptext207:
 50408                           	opt stack 0
 50409  00DF08                     _USBStdFeatureReqHandler:
 50410                           	opt stack 9
 50411                           
 50412                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 50413                           
 50414                           ;incstack = 0
 50415  00DF08  010D               	movlb	13	; () banked
 50416  00DF0A  0532               	decf	50,w,b	;volatile
 50417  00DF0C  A4D8               	btfss	status,2,c
 50418  00DF0E  D00F               	goto	i2l373
 50419                           
 50420                           ; BSR set to: 13
 50421  00DF10  5130               	movf	48,w,b	;volatile
 50422  00DF12  0B1F               	andlw	31
 50423  00DF14  0900               	iorlw	0
 50424  00DF16  A4D8               	btfss	status,2,c
 50425  00DF18  D00A               	goto	i2l373
 50426                           
 50427                           ; BSR set to: 13
 50428                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 50429  00DF1A  8E55               	bsf	_inPipes+3,7,c	;volatile
 50430                           
 50431                           ; BSR set to: 13
 50432                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 50433  00DF1C  0E03               	movlw	3
 50434  00DF1E  1931               	xorwf	49,w,b	;volatile
 50435  00DF20  A4D8               	btfss	status,2,c
 50436  00DF22  D002               	goto	i2l372
 50437                           
 50438                           ; BSR set to: 13
 50439                           ;usb_device.c: 2806: RemoteWakeup = 1;
 50440  00DF24  0E01               	movlw	1
 50441  00DF26  D001               	goto	L77
 50442  00DF28                     i2l372:
 50443                           
 50444                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 50445                           
 50446                           ; BSR set to: 1
 50447  00DF28  0E00               	movlw	0
 50448  00DF2A                     L77:
 50449  00DF2A  0101               	movlb	1	; () banked
 50450  00DF2C  6F6E               	movwf	_RemoteWakeup& (0+255),b	;volatile
 50451  00DF2E                     i2l373:
 50452                           
 50453                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 50454                           
 50455                           ; BSR set to: 1
 50456  00DF2E  010D               	movlb	13	; () banked
 50457  00DF30  5132               	movf	50,w,b	;volatile
 50458  00DF32  A4D8               	btfss	status,2,c
 50459  00DF34  0012               	return	
 50460                           
 50461                           ; BSR set to: 13
 50462  00DF36  5130               	movf	48,w,b	;volatile
 50463  00DF38  0B1F               	andlw	31
 50464  00DF3A  0A02               	xorlw	2
 50465  00DF3C  A4D8               	btfss	status,2,c
 50466  00DF3E  0012               	return	
 50467                           
 50468                           ; BSR set to: 13
 50469  00DF40  5134               	movf	52,w,b	;volatile
 50470  00DF42  0B0F               	andlw	15
 50471  00DF44  0900               	iorlw	0
 50472  00DF46  B4D8               	btfsc	status,2,c
 50473  00DF48  0012               	return	
 50474                           
 50475                           ; BSR set to: 13
 50476  00DF4A  5134               	movf	52,w,b	;volatile
 50477  00DF4C  0B0F               	andlw	15
 50478  00DF4E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50479  00DF50  0E03               	movlw	3
 50480  00DF52  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 50481  00DF54  0012               	return	
 50482                           
 50483                           ; BSR set to: 13
 50484  00DF56  0E20               	movlw	32
 50485  00DF58  185E               	xorwf	_USBDeviceState,w,c	;volatile
 50486  00DF5A  A4D8               	btfss	status,2,c
 50487  00DF5C  0012               	return	
 50488                           
 50489                           ; BSR set to: 13
 50490                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 50491  00DF5E  8E55               	bsf	_inPipes+3,7,c	;volatile
 50492                           
 50493                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 50494  00DF60  BF34               	btfsc	52,7,b	;volatile
 50495  00DF62  D019               	goto	i2l375
 50496                           
 50497                           ; BSR set to: 13
 50498                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 50499  00DF64  5134               	movf	52,w,b	;volatile
 50500  00DF66  0B0F               	andlw	15
 50501  00DF68  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50502  00DF6A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50503  00DF6C  0D02               	mullw	2
 50504  00DF6E  0E21               	movlw	low _pBDTEntryOut
 50505  00DF70  24F3               	addwf	prodl,w,c
 50506  00DF72  6ED9               	movwf	fsr2l,c
 50507  00DF74  0E01               	movlw	high _pBDTEntryOut
 50508  00DF76  20F4               	addwfc	prodh,w,c
 50509  00DF78  6EDA               	movwf	fsr2h,c
 50510  00DF7A  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 50511  00DF7E  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 50512                           
 50513                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 50514  00DF82  5134               	movf	52,w,b	;volatile
 50515  00DF84  0B0F               	andlw	15
 50516  00DF86  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50517  00DF88  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50518  00DF8A  0D01               	mullw	1
 50519  00DF8C  0E39               	movlw	low _ep_data_out
 50520  00DF8E  24F3               	addwf	prodl,w,c
 50521  00DF90  6ED9               	movwf	fsr2l,c
 50522  00DF92  0E01               	movlw	high _ep_data_out
 50523  00DF94  D018               	goto	L78
 50524  00DF96                     i2l375:
 50525                           
 50526                           ; BSR set to: 13
 50527                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 50528                           
 50529                           ; BSR set to: 13
 50530  00DF96  5134               	movf	52,w,b	;volatile
 50531  00DF98  0B0F               	andlw	15
 50532  00DF9A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50533  00DF9C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50534  00DF9E  0D02               	mullw	2
 50535  00DFA0  0E1B               	movlw	low _pBDTEntryIn
 50536  00DFA2  24F3               	addwf	prodl,w,c
 50537  00DFA4  6ED9               	movwf	fsr2l,c
 50538  00DFA6  0E01               	movlw	high _pBDTEntryIn
 50539  00DFA8  20F4               	addwfc	prodh,w,c
 50540  00DFAA  6EDA               	movwf	fsr2h,c
 50541  00DFAC  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 50542  00DFB0  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 50543                           
 50544                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 50545  00DFB4  5134               	movf	52,w,b	;volatile
 50546  00DFB6  0B0F               	andlw	15
 50547  00DFB8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50548  00DFBA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50549  00DFBC  0D01               	mullw	1
 50550  00DFBE  0E3C               	movlw	low _ep_data_in
 50551  00DFC0  24F3               	addwf	prodl,w,c
 50552  00DFC2  6ED9               	movwf	fsr2l,c
 50553  00DFC4  0E01               	movlw	high _ep_data_in
 50554  00DFC6                     L78:
 50555  00DFC6  20F4               	addwfc	prodh,w,c
 50556  00DFC8  6EDA               	movwf	fsr2h,c
 50557  00DFCA  50DF               	movf	indf2,w,c
 50558  00DFCC  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 50559                           
 50560                           ; BSR set to: 13
 50561                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 50562                           
 50563                           ; BSR set to: 13
 50564  00DFCE  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 50565  00DFD0  D006               	goto	i2l377
 50566                           
 50567                           ; BSR set to: 13
 50568                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 50569  00DFD2  0EFB               	movlw	251
 50570  00DFD4  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 50571  00DFD6  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50572  00DFD8  0EFF               	movlw	255
 50573  00DFDA  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 50574  00DFDC  D004               	goto	L79
 50575  00DFDE                     i2l377:
 50576                           
 50577                           ; BSR set to: 13
 50578                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 50579                           
 50580                           ; BSR set to: 13
 50581  00DFDE  0E04               	movlw	4
 50582  00DFE0  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 50583  00DFE2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50584  00DFE4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 50585  00DFE6                     L79:
 50586  00DFE6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 50587                           
 50588                           ; BSR set to: 13
 50589                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 50590                           
 50591                           ; BSR set to: 13
 50592  00DFE8  BF34               	btfsc	52,7,b	;volatile
 50593  00DFEA  D00A               	goto	i2l379
 50594                           
 50595                           ; BSR set to: 13
 50596                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 50597  00DFEC  5134               	movf	52,w,b	;volatile
 50598  00DFEE  0B0F               	andlw	15
 50599  00DFF0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50600  00DFF2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50601  00DFF4  0D02               	mullw	2
 50602  00DFF6  0E21               	movlw	low _pBDTEntryOut
 50603  00DFF8  24F3               	addwf	prodl,w,c
 50604  00DFFA  6ED9               	movwf	fsr2l,c
 50605  00DFFC  0E01               	movlw	high _pBDTEntryOut
 50606  00DFFE  D009               	goto	L80
 50607  00E000                     i2l379:
 50608                           
 50609                           ; BSR set to: 13
 50610                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 50611                           
 50612                           ; BSR set to: 13
 50613  00E000  5134               	movf	52,w,b	;volatile
 50614  00E002  0B0F               	andlw	15
 50615  00E004  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50616  00E006  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50617  00E008  0D02               	mullw	2
 50618  00E00A  0E1B               	movlw	low _pBDTEntryIn
 50619  00E00C  24F3               	addwf	prodl,w,c
 50620  00E00E  6ED9               	movwf	fsr2l,c
 50621  00E010  0E01               	movlw	high _pBDTEntryIn
 50622  00E012                     L80:
 50623  00E012  20F4               	addwfc	prodh,w,c
 50624  00E014  6EDA               	movwf	fsr2h,c
 50625  00E016  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 50626  00E01A  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 50627                           
 50628                           ; BSR set to: 13
 50629                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 50630                           
 50631                           ; BSR set to: 13
 50632  00E01E  0E03               	movlw	3
 50633  00E020  1931               	xorwf	49,w,b	;volatile
 50634  00E022  A4D8               	btfss	status,2,c
 50635  00E024  D02D               	goto	i2l381
 50636                           
 50637                           ; BSR set to: 13
 50638                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 50639  00E026  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50640  00E02A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50641  00E02E  AEDF               	btfss	indf2,7,c
 50642  00E030  D01A               	goto	i2l384
 50643                           
 50644                           ; BSR set to: 13
 50645                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 50646  00E032  BF34               	btfsc	52,7,b	;volatile
 50647  00E034  D00A               	goto	i2l383
 50648                           
 50649                           ; BSR set to: 13
 50650                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 50651  00E036  5134               	movf	52,w,b	;volatile
 50652  00E038  0B0F               	andlw	15
 50653  00E03A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50654  00E03C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50655  00E03E  0D01               	mullw	1
 50656  00E040  0E39               	movlw	low _ep_data_out
 50657  00E042  24F3               	addwf	prodl,w,c
 50658  00E044  6ED9               	movwf	fsr2l,c
 50659  00E046  0E01               	movlw	high _ep_data_out
 50660  00E048  D00A               	goto	L81
 50661  00E04A                     i2l383:
 50662                           
 50663                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 50664                           
 50665                           ; BSR set to: 1
 50666  00E04A  010D               	movlb	13	; () banked
 50667  00E04C  5134               	movf	52,w,b	;volatile
 50668  00E04E  0B0F               	andlw	15
 50669  00E050  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50670  00E052  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50671  00E054  0D01               	mullw	1
 50672  00E056  0E3C               	movlw	low _ep_data_in
 50673  00E058  24F3               	addwf	prodl,w,c
 50674  00E05A  6ED9               	movwf	fsr2l,c
 50675  00E05C  0E01               	movlw	high _ep_data_in
 50676  00E05E                     L81:
 50677  00E05E  20F4               	addwfc	prodh,w,c
 50678  00E060  6EDA               	movwf	fsr2h,c
 50679  00E062  0101               	movlb	1	; () banked
 50680  00E064  82DF               	bsf	indf2,1,c
 50681  00E066                     i2l384:
 50682                           
 50683                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 50684                           
 50685                           ; BSR set to: 1
 50686                           
 50687                           ; BSR set to: 1
 50688  00E066  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50689  00E06A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50690  00E06E  0E00               	movlw	0
 50691  00E070  84DB               	bsf	plusw2,2,c
 50692                           
 50693                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 50694  00E072  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50695  00E076  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50696  00E07A  0E00               	movlw	0
 50697  00E07C  8EDB               	bsf	plusw2,7,c
 50698                           
 50699                           ;usb_device.c: 2878: }
 50700  00E07E  0012               	return	
 50701  00E080                     i2l381:
 50702                           
 50703                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 50704  00E080  0E04               	movlw	4
 50705  00E082  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 50706  00E084  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50707  00E086  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 50708  00E088  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 50709                           
 50710                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 50711  00E08A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50712  00E08E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50713  00E092  AEDF               	btfss	indf2,7,c
 50714  00E094  D01B               	goto	i2l386
 50715                           
 50716                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 50717  00E096  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50718  00E09A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50719  00E09E  0E7F               	movlw	127
 50720  00E0A0  16DF               	andwf	indf2,f,c
 50721                           
 50722                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 50723  00E0A2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50724  00E0A6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50725  00E0AA  0E00               	movlw	0
 50726  00E0AC  8CDB               	bsf	plusw2,6,c
 50727                           
 50728                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 50729  00E0AE  0E00               	movlw	0
 50730  00E0B0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50731  00E0B2  0E05               	movlw	5
 50732  00E0B4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50733  00E0B6  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 50734  00E0BA  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 50735  00E0BE  0E00               	movlw	0
 50736  00E0C0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50737  00E0C2  0E02               	movlw	2
 50738  00E0C4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50739  00E0C6  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50740                           
 50741                           ;usb_device.c: 2893: }
 50742  00E0CA  D006               	goto	i2l387
 50743  00E0CC                     i2l386:
 50744                           
 50745                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 50746  00E0CC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50747  00E0D0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50748  00E0D4  0E00               	movlw	0
 50749  00E0D6  8CDB               	bsf	plusw2,6,c
 50750  00E0D8                     i2l387:
 50751                           
 50752                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 50753  00E0D8  0E04               	movlw	4
 50754  00E0DA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 50755  00E0DC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50756  00E0DE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 50757  00E0E0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 50758                           
 50759                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 50760  00E0E2  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 50761  00E0E4  D006               	goto	i2u1216_40
 50762  00E0E6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50763  00E0EA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50764  00E0EE  AEDF               	btfss	indf2,7,c
 50765  00E0F0  D030               	goto	i2l388
 50766  00E0F2                     i2u1216_40:
 50767                           
 50768                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 50769  00E0F2  010D               	movlb	13	; () banked
 50770  00E0F4  BF34               	btfsc	52,7,b	;volatile
 50771  00E0F6  D00A               	goto	i2l391
 50772                           
 50773                           ; BSR set to: 13
 50774                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 50775  00E0F8  5134               	movf	52,w,b	;volatile
 50776  00E0FA  0B0F               	andlw	15
 50777  00E0FC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50778  00E0FE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50779  00E100  0D01               	mullw	1
 50780  00E102  0E39               	movlw	low _ep_data_out
 50781  00E104  24F3               	addwf	prodl,w,c
 50782  00E106  6ED9               	movwf	fsr2l,c
 50783  00E108  0E01               	movlw	high _ep_data_out
 50784  00E10A  D00A               	goto	L82
 50785  00E10C                     i2l391:
 50786                           
 50787                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 50788                           
 50789                           ; BSR set to: 1
 50790  00E10C  010D               	movlb	13	; () banked
 50791  00E10E  5134               	movf	52,w,b	;volatile
 50792  00E110  0B0F               	andlw	15
 50793  00E112  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50794  00E114  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50795  00E116  0D01               	mullw	1
 50796  00E118  0E3C               	movlw	low _ep_data_in
 50797  00E11A  24F3               	addwf	prodl,w,c
 50798  00E11C  6ED9               	movwf	fsr2l,c
 50799  00E11E  0E01               	movlw	high _ep_data_in
 50800  00E120                     L82:
 50801  00E120  20F4               	addwfc	prodh,w,c
 50802  00E122  6EDA               	movwf	fsr2h,c
 50803  00E124  0101               	movlb	1	; () banked
 50804  00E126  92DF               	bcf	indf2,1,c
 50805                           
 50806                           ; BSR set to: 1
 50807                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 50808                           
 50809                           ; BSR set to: 1
 50810  00E128  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50811  00E12C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50812  00E130  0E3B               	movlw	59
 50813  00E132  16DF               	andwf	indf2,f,c
 50814                           
 50815                           ; BSR set to: 1
 50816                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 50817  00E134  0E00               	movlw	0
 50818  00E136  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50819  00E138  0E05               	movlw	5
 50820  00E13A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50821  00E13C  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 50822  00E140  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 50823  00E144  0E00               	movlw	0
 50824  00E146  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50825  00E148  0E02               	movlw	2
 50826  00E14A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50827  00E14C  EC39  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50828                           
 50829                           ;usb_device.c: 2923: }
 50830  00E150  D006               	goto	i2l393
 50831  00E152                     i2l388:
 50832                           
 50833                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 50834  00E152  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50835  00E156  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50836  00E15A  0E3B               	movlw	59
 50837  00E15C  16DF               	andwf	indf2,f,c
 50838  00E15E                     i2l393:
 50839                           
 50840                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 50841  00E15E  010D               	movlb	13	; () banked
 50842  00E160  5134               	movf	52,w,b	;volatile
 50843  00E162  0B0F               	andlw	15
 50844  00E164  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50845  00E166  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50846  00E168  0D01               	mullw	1
 50847  00E16A  0E26               	movlw	38
 50848  00E16C  24F3               	addwf	prodl,w,c
 50849  00E16E  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 50850  00E170  0E0F               	movlw	15
 50851  00E172  20F4               	addwfc	prodh,w,c
 50852  00E174  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 50853                           
 50854                           ; BSR set to: 13
 50855                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 50856  00E176  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 50857  00E17A  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 50858  00E17E  0EFE               	movlw	254
 50859  00E180  16DF               	andwf	indf2,f,c
 50860                           
 50861                           ; BSR set to: 13
 50862  00E182  0012               	return	
 50863  00E184                     __end_of_USBStdFeatureReqHandler:
 50864                           	opt stack 0
 50865                           tosu	equ	0xFFF
 50866                           tosh	equ	0xFFE
 50867                           tosl	equ	0xFFD
 50868                           pclatu	equ	0xFFB
 50869                           pclath	equ	0xFFA
 50870                           tblptru	equ	0xFF8
 50871                           tblptrh	equ	0xFF7
 50872                           tblptrl	equ	0xFF6
 50873                           tablat	equ	0xFF5
 50874                           prodh	equ	0xFF4
 50875                           prodl	equ	0xFF3
 50876                           intcon	equ	0xFF2
 50877                           indf0	equ	0xFEF
 50878                           postinc0	equ	0xFEE
 50879                           fsr0h	equ	0xFEA
 50880                           fsr0l	equ	0xFE9
 50881                           wreg	equ	0xFE8
 50882                           indf1	equ	0xFE7
 50883                           postinc1	equ	0xFE6
 50884                           postdec1	equ	0xFE5
 50885                           plusw1	equ	0xFE3
 50886                           fsr1h	equ	0xFE2
 50887                           fsr1l	equ	0xFE1
 50888                           indf2	equ	0xFDF
 50889                           postinc2	equ	0xFDE
 50890                           postdec2	equ	0xFDD
 50891                           plusw2	equ	0xFDB
 50892                           fsr2h	equ	0xFDA
 50893                           fsr2l	equ	0xFD9
 50894                           status	equ	0xFD8
 50895                           
 50896 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 50897 ;; Defined at:
 50898 ;;		line 54 in file "usb_events.c"
 50899 ;; Parameters:    Size  Location     Type
 50900 ;;  event           2   15[COMRAM] enum E6832
 50901 ;;  pdata           2   17[COMRAM] PTR void 
 50902 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 50903 ;;		 -> BDT(48), 
 50904 ;;  size            2   19[COMRAM] unsigned int 
 50905 ;; Auto vars:     Size  Location     Type
 50906 ;;		None
 50907 ;; Return value:  Size  Location     Type
 50908 ;;                  1    wreg      unsigned char 
 50909 ;; Registers used:
 50910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50911 ;; Tracked objects:
 50912 ;;		On entry : 0/0
 50913 ;;		On exit  : 0/0
 50914 ;;		Unchanged: 0/0
 50915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50916 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50918 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50919 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50920 ;;Total ram usage:        8 bytes
 50921 ;; Hardware stack levels used:    1
 50922 ;; Hardware stack levels required when called:    3
 50923 ;; This function calls:
 50924 ;;		_APP_DeviceCustomHIDInitialize
 50925 ;;		_APP_DeviceMSDInitialize
 50926 ;;		_MSDTransferTerminated
 50927 ;;		_USBCheckHIDRequest
 50928 ;;		_USBCheckMSDRequest
 50929 ;;		i2_SYSTEM_Initialize
 50930 ;; This function is called by:
 50931 ;;		_USBDeviceTasks
 50932 ;;		_USBStdSetCfgHandler
 50933 ;;		_USBSuspend
 50934 ;;		_USBWakeFromSuspend
 50935 ;;		_USBCtrlTrfSetupHandler
 50936 ;;		_USBCheckStdRequest
 50937 ;;		_USBStdFeatureReqHandler
 50938 ;; This function uses a non-reentrant model
 50939 ;;
 50940                           
 50941                           	psect	text208
 50942  013872                     __ptext208:
 50943                           	opt stack 0
 50944  013872                     _USER_USB_CALLBACK_EVENT_HANDLER:
 50945                           	opt stack 13
 50946                           
 50947                           ;usb_events.c: 56: switch((int)event)
 50948                           
 50949                           ;incstack = 0
 50950  013872  D019               	goto	i2l816
 50951  013874                     
 50952                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 50953  013874  0E01               	movlw	1
 50954  013876  ECD1  F0A4         	call	i2_SYSTEM_Initialize
 50955                           
 50956                           ;usb_events.c: 79: break;
 50957  01387A  0012               	return	
 50958  01387C                     
 50959                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 50960  01387C  0E02               	movlw	2
 50961  01387E  ECD1  F0A4         	call	i2_SYSTEM_Initialize
 50962                           
 50963                           ;usb_events.c: 90: break;
 50964  013882  0012               	return	
 50965  013884                     
 50966                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 50967  013884  ECE2  F0A8         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 50968                           
 50969                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 50970  013888  ECB3  F0AB         	call	_APP_DeviceMSDInitialize	;wreg free
 50971                           
 50972                           ;usb_events.c: 100: break;
 50973                           
 50974                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 50975                           
 50976                           ;usb_events.c: 97: break;
 50977  01388C  0012               	return	
 50978  01388E                     
 50979                           ;usb_events.c: 105: USBCheckHIDRequest();
 50980  01388E  EC5E  F092         	call	_USBCheckHIDRequest	;wreg free
 50981                           
 50982                           ;usb_events.c: 108: USBCheckMSDRequest();
 50983  013892  EC8C  F095         	call	_USBCheckMSDRequest	;wreg free
 50984                           
 50985                           ;usb_events.c: 112: break;
 50986                           
 50987                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 50988                           
 50989                           ;usb_events.c: 109: break;
 50990  013896  0012               	return	
 50991  013898                     
 50992                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 50993  013898  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 50994  01389C  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 50995  0138A0  EC28  F0A4         	call	_MSDTransferTerminated	;wreg free
 50996                           
 50997                           ;usb_events.c: 129: }
 50998                           
 50999                           ;usb_events.c: 128: break;
 51000                           
 51001                           ;usb_events.c: 127: default:
 51002                           
 51003                           ;usb_events.c: 125: break;
 51004  0138A4  0012               	return	
 51005  0138A6                     i2l816:
 51006  0138A6  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 51007  0138AA  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 51008                           
 51009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 51010                           ; Switch size 1, requested type "space"
 51011                           ; Number of cases is 2, Range of values is 0 to 127
 51012                           ; switch strategies available:
 51013                           ; Name         Instructions Cycles
 51014                           ; simple_byte            7     4 (average)
 51015                           ;	Chosen strategy is simple_byte
 51016  0138AE  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 51017  0138B0  0A00               	xorlw	0	; case 0
 51018  0138B2  B4D8               	btfsc	status,2,c
 51019  0138B4  D004               	goto	i2l19183
 51020  0138B6  0A7F               	xorlw	127	; case 127
 51021  0138B8  A4D8               	btfss	status,2,c
 51022  0138BA  0012               	return	
 51023  0138BC  D01A               	goto	i2l19185
 51024  0138BE                     i2l19183:
 51025                           
 51026                           ; Switch size 1, requested type "space"
 51027                           ; Number of cases is 8, Range of values is 1 to 117
 51028                           ; switch strategies available:
 51029                           ; Name         Instructions Cycles
 51030                           ; simple_byte           25    13 (average)
 51031                           ;	Chosen strategy is simple_byte
 51032  0138BE  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51033  0138C0  0A01               	xorlw	1	; case 1
 51034  0138C2  B4D8               	btfsc	status,2,c
 51035  0138C4  D7DF               	goto	i2l822
 51036  0138C6  0A03               	xorlw	3	; case 2
 51037  0138C8  B4D8               	btfsc	status,2,c
 51038  0138CA  0012               	return	
 51039  0138CC  0A01               	xorlw	1	; case 3
 51040  0138CE  B4D8               	btfsc	status,2,c
 51041  0138D0  D7DE               	goto	i2l824
 51042  0138D2  0A06               	xorlw	6	; case 5
 51043  0138D4  B4D8               	btfsc	status,2,c
 51044  0138D6  D7E0               	goto	i2l826
 51045  0138D8  0A77               	xorlw	119	; case 114
 51046  0138DA  B4D8               	btfsc	status,2,c
 51047  0138DC  0012               	return	
 51048  0138DE  0A01               	xorlw	1	; case 115
 51049  0138E0  B4D8               	btfsc	status,2,c
 51050  0138E2  0012               	return	
 51051  0138E4  0A07               	xorlw	7	; case 116
 51052  0138E6  B4D8               	btfsc	status,2,c
 51053  0138E8  D7C9               	goto	i2l821
 51054  0138EA  0A01               	xorlw	1	; case 117
 51055  0138EC  A4D8               	btfss	status,2,c
 51056  0138EE  0012               	return	
 51057  0138F0  D7C1               	goto	i2l820
 51058  0138F2                     i2l19185:
 51059                           
 51060                           ; Switch size 1, requested type "space"
 51061                           ; Number of cases is 1, Range of values is 255 to 255
 51062                           ; switch strategies available:
 51063                           ; Name         Instructions Cycles
 51064                           ; simple_byte            4     3 (average)
 51065                           ;	Chosen strategy is simple_byte
 51066  0138F2  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51067  0138F4  0AFF               	xorlw	255	; case 255
 51068  0138F6  0012               	return	
 51069  0138F8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 51070                           	opt stack 0
 51071                           tosu	equ	0xFFF
 51072                           tosh	equ	0xFFE
 51073                           tosl	equ	0xFFD
 51074                           pclatu	equ	0xFFB
 51075                           pclath	equ	0xFFA
 51076                           tblptru	equ	0xFF8
 51077                           tblptrh	equ	0xFF7
 51078                           tblptrl	equ	0xFF6
 51079                           tablat	equ	0xFF5
 51080                           prodh	equ	0xFF4
 51081                           prodl	equ	0xFF3
 51082                           intcon	equ	0xFF2
 51083                           indf0	equ	0xFEF
 51084                           postinc0	equ	0xFEE
 51085                           fsr0h	equ	0xFEA
 51086                           fsr0l	equ	0xFE9
 51087                           wreg	equ	0xFE8
 51088                           indf1	equ	0xFE7
 51089                           postinc1	equ	0xFE6
 51090                           postdec1	equ	0xFE5
 51091                           plusw1	equ	0xFE3
 51092                           fsr1h	equ	0xFE2
 51093                           fsr1l	equ	0xFE1
 51094                           indf2	equ	0xFDF
 51095                           postinc2	equ	0xFDE
 51096                           postdec2	equ	0xFDD
 51097                           plusw2	equ	0xFDB
 51098                           fsr2h	equ	0xFDA
 51099                           fsr2l	equ	0xFD9
 51100                           status	equ	0xFD8
 51101                           
 51102 ;; *************** function i2_SYSTEM_Initialize *****************
 51103 ;; Defined at:
 51104 ;;		line 39 in file "system.c"
 51105 ;; Parameters:    Size  Location     Type
 51106 ;;  state           1    wreg     enum E6623
 51107 ;; Auto vars:     Size  Location     Type
 51108 ;;  state           1    4[COMRAM] enum E6623
 51109 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 51110 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 51111 ;; Return value:  Size  Location     Type
 51112 ;;                  1    wreg      void 
 51113 ;; Registers used:
 51114 ;;		wreg, status,2, status,0
 51115 ;; Tracked objects:
 51116 ;;		On entry : 0/0
 51117 ;;		On exit  : 0/0
 51118 ;;		Unchanged: 0/0
 51119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51121 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51123 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51124 ;;Total ram usage:        5 bytes
 51125 ;; Hardware stack levels used:    1
 51126 ;; This function calls:
 51127 ;;		Nothing
 51128 ;; This function is called by:
 51129 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51130 ;; This function uses a non-reentrant model
 51131 ;;
 51132                           
 51133                           	psect	text209
 51134  0149A2                     __ptext209:
 51135                           	opt stack 0
 51136  0149A2                     i2_SYSTEM_Initialize:
 51137                           	opt stack 15
 51138                           
 51139                           ;incstack = 0
 51140                           ;i2SYSTEM_Initialize@state stored from wreg
 51141  0149A2  6E05               	movwf	i2SYSTEM_Initialize@state,c
 51142                           
 51143                           ;system.c: 41: switch(state)
 51144  0149A4  D01D               	goto	i2l897
 51145  0149A6                     
 51146                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 51147  0149A6  0E02               	movlw	2
 51148  0149A8  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 51149  0149AA  0E58               	movlw	88
 51150  0149AC  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 51151                           
 51152                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 51153  0149AE  8C9B               	bsf	3995,6,c	;volatile
 51154  0149B0                     i2l12615:
 51155  0149B0  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 51156  0149B2  A0D8               	btfss	status,0,c
 51157  0149B4  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 51158  0149B6  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 51159  0149B8  E1FB               	bnz	i2l12615
 51160  0149BA  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 51161  0149BC  B4D8               	btfsc	status,2,c
 51162  0149BE  0012               	return	
 51163  0149C0  D7F7               	goto	i2l900
 51164  0149C2                     
 51165                           ;system.c: 78: OSCCON = 0x70;
 51166  0149C2  0E70               	movlw	112
 51167  0149C4  6ED3               	movwf	4051,c	;volatile
 51168                           
 51169                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 51170  0149C6  0E03               	movlw	3
 51171  0149C8  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,c
 51172  0149CA  0E20               	movlw	32
 51173  0149CC  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132,c
 51174  0149CE                     i2l12619:
 51175  0149CE  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132,f,c
 51176  0149D0  A0D8               	btfss	status,0,c
 51177  0149D2  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,f,c
 51178  0149D4  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132,w,c
 51179  0149D6  E1FB               	bnz	i2l12619
 51180  0149D8  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,w,c
 51181  0149DA  B4D8               	btfsc	status,2,c
 51182  0149DC  0012               	return	
 51183  0149DE  D7F7               	goto	i2l906
 51184  0149E0                     i2l897:
 51185  0149E0  5005               	movf	i2SYSTEM_Initialize@state,w,c
 51186                           
 51187                           ; Switch size 1, requested type "space"
 51188                           ; Number of cases is 3, Range of values is 0 to 2
 51189                           ; switch strategies available:
 51190                           ; Name         Instructions Cycles
 51191                           ; simple_byte           10     6 (average)
 51192                           ;	Chosen strategy is simple_byte
 51193  0149E2  0A00               	xorlw	0	; case 0
 51194  0149E4  B4D8               	btfsc	status,2,c
 51195  0149E6  D7DF               	goto	i2l898
 51196  0149E8  0A01               	xorlw	1	; case 1
 51197  0149EA  B4D8               	btfsc	status,2,c
 51198  0149EC  0012               	return	
 51199  0149EE  0A03               	xorlw	3	; case 2
 51200  0149F0  A4D8               	btfss	status,2,c
 51201  0149F2  0012               	return	
 51202  0149F4  D7E6               	goto	i2l904
 51203  0149F6                     __end_ofi2_SYSTEM_Initialize:
 51204                           	opt stack 0
 51205                           tosu	equ	0xFFF
 51206                           tosh	equ	0xFFE
 51207                           tosl	equ	0xFFD
 51208                           pclatu	equ	0xFFB
 51209                           pclath	equ	0xFFA
 51210                           tblptru	equ	0xFF8
 51211                           tblptrh	equ	0xFF7
 51212                           tblptrl	equ	0xFF6
 51213                           tablat	equ	0xFF5
 51214                           prodh	equ	0xFF4
 51215                           prodl	equ	0xFF3
 51216                           intcon	equ	0xFF2
 51217                           indf0	equ	0xFEF
 51218                           postinc0	equ	0xFEE
 51219                           fsr0h	equ	0xFEA
 51220                           fsr0l	equ	0xFE9
 51221                           wreg	equ	0xFE8
 51222                           indf1	equ	0xFE7
 51223                           postinc1	equ	0xFE6
 51224                           postdec1	equ	0xFE5
 51225                           plusw1	equ	0xFE3
 51226                           fsr1h	equ	0xFE2
 51227                           fsr1l	equ	0xFE1
 51228                           indf2	equ	0xFDF
 51229                           postinc2	equ	0xFDE
 51230                           postdec2	equ	0xFDD
 51231                           plusw2	equ	0xFDB
 51232                           fsr2h	equ	0xFDA
 51233                           fsr2l	equ	0xFD9
 51234                           status	equ	0xFD8
 51235                           
 51236 ;; *************** function _USBCheckMSDRequest *****************
 51237 ;; Defined at:
 51238 ;;		line 218 in file "usb_device_msd.c"
 51239 ;; Parameters:    Size  Location     Type
 51240 ;;		None
 51241 ;; Auto vars:     Size  Location     Type
 51242 ;;		None
 51243 ;; Return value:  Size  Location     Type
 51244 ;;                  1    wreg      void 
 51245 ;; Registers used:
 51246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51247 ;; Tracked objects:
 51248 ;;		On entry : 0/0
 51249 ;;		On exit  : 0/0
 51250 ;;		Unchanged: 0/0
 51251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51253 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51255 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51256 ;;Total ram usage:        4 bytes
 51257 ;; Hardware stack levels used:    1
 51258 ;; Hardware stack levels required when called:    1
 51259 ;; This function calls:
 51260 ;;		i2_USBTransferOnePacket
 51261 ;; This function is called by:
 51262 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51263 ;; This function uses a non-reentrant model
 51264 ;;
 51265                           
 51266                           	psect	text210
 51267  012B18                     __ptext210:
 51268                           	opt stack 0
 51269  012B18                     _USBCheckMSDRequest:
 51270                           	opt stack 14
 51271                           
 51272                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 51273                           
 51274                           ;incstack = 0
 51275  012B18  010D               	movlb	13	; () banked
 51276  012B1A  5130               	movf	48,w,b	;volatile
 51277  012B1C  0B1F               	andlw	31
 51278  012B1E  06E8               	decf	wreg,f,c
 51279  012B20  A4D8               	btfss	status,2,c
 51280  012B22  0012               	return	
 51281                           
 51282                           ; BSR set to: 13
 51283                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 51284                           
 51285                           ; BSR set to: 13
 51286                           
 51287                           ; BSR set to: 13
 51288                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 51289  012B24  5134               	movf	52,w,b	;volatile
 51290  012B26  A4D8               	btfss	status,2,c
 51291  012B28  0012               	return	
 51292  012B2A  D04C               	goto	i2l545
 51293  012B2C                     
 51294                           ; BSR set to: 13
 51295                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 51296                           
 51297                           ; BSR set to: 13
 51298  012B2C  5132               	movf	50,w,b	;volatile
 51299  012B2E  1133               	iorwf	51,w,b	;volatile
 51300  012B30  A4D8               	btfss	status,2,c
 51301  012B32  0012               	return	
 51302                           
 51303                           ; BSR set to: 13
 51304  012B34  5136               	movf	54,w,b	;volatile
 51305  012B36  1137               	iorwf	55,w,b	;volatile
 51306  012B38  A4D8               	btfss	status,2,c
 51307  012B3A  0012               	return	
 51308                           
 51309                           ; BSR set to: 13
 51310                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 51311                           
 51312                           ; BSR set to: 13
 51313                           
 51314                           ; BSR set to: 13
 51315                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 51316  012B3C  0E00               	movlw	0
 51317  012B3E  0101               	movlb	1	; () banked
 51318  012B40  6F63               	movwf	_MSD_State& (0+255),b
 51319                           
 51320                           ; BSR set to: 1
 51321                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 51322  012B42  6962               	setf	_MSDCommandState& (0+255),b
 51323                           
 51324                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 51325  012B44  0E00               	movlw	0
 51326  012B46  6F61               	movwf	_MSDReadState& (0+255),b
 51327                           
 51328                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 51329  012B48  0E00               	movlw	0
 51330  012B4A  6F60               	movwf	_MSDWriteState& (0+255),b
 51331                           
 51332                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 51333  012B4C  0E01               	movlw	1
 51334  012B4E  6F5B               	movwf	_MSDCBWValid& (0+255),b
 51335                           
 51336                           ; BSR set to: 1
 51337                           
 51338                           ; BSR set to: 1
 51339                           
 51340                           ; BSR set to: 1
 51341                           
 51342                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 51343  012B50  C125  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 51344  012B54  C126  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 51345                           
 51346                           ; BSR set to: 1
 51347  012B58  500C               	movf	_USBCheckMSDRequest$2534,w,c
 51348  012B5A  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 51349  012B5C  B4D8               	btfsc	status,2,c
 51350  012B5E  D00A               	goto	i2u1060_40
 51351                           
 51352                           ; BSR set to: 1
 51353                           
 51354                           ; BSR set to: 1
 51355                           
 51356                           ; BSR set to: 1
 51357                           
 51358                           ; BSR set to: 1
 51359  012B60  C125  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 51360  012B64  C126  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 51361                           
 51362                           ; BSR set to: 1
 51363                           
 51364                           ; BSR set to: 1
 51365  012B68  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 51366  012B6C  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 51367  012B70  BEDF               	btfsc	indf2,7,c
 51368  012B72  D00F               	goto	i2l550
 51369  012B74                     i2u1060_40:
 51370                           
 51371                           ; BSR set to: 1
 51372                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 51373                           
 51374                           ; BSR set to: 1
 51375  012B74  0E00               	movlw	0
 51376  012B76  6E01               	movwf	i2USBTransferOnePacket@dir,c
 51377  012B78  0E40               	movlw	64
 51378  012B7A  6E02               	movwf	i2USBTransferOnePacket@data,c
 51379  012B7C  0E0D               	movlw	13
 51380  012B7E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 51381  012B80  0E40               	movlw	64
 51382  012B82  6E04               	movwf	i2USBTransferOnePacket@len,c
 51383  012B84  0E02               	movlw	2
 51384  012B86  EC36  F089         	call	i2_USBTransferOnePacket
 51385  012B8A  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 51386  012B8E  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 51387  012B92                     i2l550:
 51388                           
 51389                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 51390  012B92  0E80               	movlw	128
 51391  012B94  6E55               	movwf	_inPipes+3,c	;volatile
 51392                           
 51393                           ;usb_device_msd.c: 263: break;
 51394  012B96  0012               	return	
 51395  012B98                     
 51396                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 51397  012B98  010D               	movlb	13	; () banked
 51398  012B9A  5132               	movf	50,w,b	;volatile
 51399  012B9C  1133               	iorwf	51,w,b	;volatile
 51400  012B9E  A4D8               	btfss	status,2,c
 51401  012BA0  0012               	return	
 51402                           
 51403                           ; BSR set to: 13
 51404  012BA2  0536               	decf	54,w,b	;volatile
 51405  012BA4  1137               	iorwf	55,w,b	;volatile
 51406  012BA6  A4D8               	btfss	status,2,c
 51407  012BA8  0012               	return	
 51408                           
 51409                           ; BSR set to: 13
 51410                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 51411                           
 51412                           ; BSR set to: 13
 51413                           
 51414                           ; BSR set to: 13
 51415                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 51416  012BAA  0E00               	movlw	0
 51417  012BAC  6F38               	movwf	56,b	;volatile
 51418                           
 51419                           ; BSR set to: 13
 51420                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 51421  012BAE  0E38               	movlw	56
 51422  012BB0  6E52               	movwf	_inPipes,c	;volatile
 51423  012BB2  0E0D               	movlw	13
 51424  012BB4  6E53               	movwf	_inPipes+1,c	;volatile
 51425                           
 51426                           ; BSR set to: 13
 51427  012BB6  0E00               	movlw	0
 51428  012BB8  6E57               	movwf	_inPipes+5,c	;volatile
 51429  012BBA  0E01               	movlw	1
 51430  012BBC  6E56               	movwf	_inPipes+4,c	;volatile
 51431                           
 51432                           ; BSR set to: 13
 51433  012BBE  0EC1               	movlw	193
 51434  012BC0  6E55               	movwf	_inPipes+3,c	;volatile
 51435                           
 51436                           ; BSR set to: 13
 51437                           ;usb_device_msd.c: 278: }
 51438                           
 51439                           ;usb_device_msd.c: 277: break;
 51440  012BC2  0012               	return	
 51441  012BC4                     i2l545:
 51442                           
 51443                           ; BSR set to: 13
 51444                           
 51445                           ; BSR set to: 13
 51446  012BC4  5131               	movf	49,w,b	;volatile
 51447                           
 51448                           ; Switch size 1, requested type "space"
 51449                           ; Number of cases is 2, Range of values is 254 to 255
 51450                           ; switch strategies available:
 51451                           ; Name         Instructions Cycles
 51452                           ; simple_byte            7     4 (average)
 51453                           ;	Chosen strategy is simple_byte
 51454  012BC6  0AFE               	xorlw	254	; case 254
 51455  012BC8  B4D8               	btfsc	status,2,c
 51456  012BCA  D7E6               	goto	i2l562
 51457  012BCC  0A01               	xorlw	1	; case 255
 51458  012BCE  A4D8               	btfss	status,2,c
 51459  012BD0  0012               	return	
 51460  012BD2  D7AC               	goto	i2l546
 51461  012BD4                     __end_of_USBCheckMSDRequest:
 51462                           	opt stack 0
 51463                           tosu	equ	0xFFF
 51464                           tosh	equ	0xFFE
 51465                           tosl	equ	0xFFD
 51466                           pclatu	equ	0xFFB
 51467                           pclath	equ	0xFFA
 51468                           tblptru	equ	0xFF8
 51469                           tblptrh	equ	0xFF7
 51470                           tblptrl	equ	0xFF6
 51471                           tablat	equ	0xFF5
 51472                           prodh	equ	0xFF4
 51473                           prodl	equ	0xFF3
 51474                           intcon	equ	0xFF2
 51475                           indf0	equ	0xFEF
 51476                           postinc0	equ	0xFEE
 51477                           fsr0h	equ	0xFEA
 51478                           fsr0l	equ	0xFE9
 51479                           wreg	equ	0xFE8
 51480                           indf1	equ	0xFE7
 51481                           postinc1	equ	0xFE6
 51482                           postdec1	equ	0xFE5
 51483                           plusw1	equ	0xFE3
 51484                           fsr1h	equ	0xFE2
 51485                           fsr1l	equ	0xFE1
 51486                           indf2	equ	0xFDF
 51487                           postinc2	equ	0xFDE
 51488                           postdec2	equ	0xFDD
 51489                           plusw2	equ	0xFDB
 51490                           fsr2h	equ	0xFDA
 51491                           fsr2l	equ	0xFD9
 51492                           status	equ	0xFD8
 51493                           
 51494 ;; *************** function _USBCheckHIDRequest *****************
 51495 ;; Defined at:
 51496 ;;		line 153 in file "usb_device_hid.c"
 51497 ;; Parameters:    Size  Location     Type
 51498 ;;		None
 51499 ;; Auto vars:     Size  Location     Type
 51500 ;;		None
 51501 ;; Return value:  Size  Location     Type
 51502 ;;                  1    wreg      void 
 51503 ;; Registers used:
 51504 ;;		wreg, status,2, status,0
 51505 ;; Tracked objects:
 51506 ;;		On entry : 0/0
 51507 ;;		On exit  : 0/0
 51508 ;;		Unchanged: 0/0
 51509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51514 ;;Total ram usage:        0 bytes
 51515 ;; Hardware stack levels used:    1
 51516 ;; This function calls:
 51517 ;;		Nothing
 51518 ;; This function is called by:
 51519 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51520 ;; This function uses a non-reentrant model
 51521 ;;
 51522                           
 51523                           	psect	text211
 51524  0124BC                     __ptext211:
 51525                           	opt stack 0
 51526  0124BC                     _USBCheckHIDRequest:
 51527                           	opt stack 15
 51528                           
 51529                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 51530                           
 51531                           ;incstack = 0
 51532  0124BC  010D               	movlb	13	; () banked
 51533  0124BE  5130               	movf	48,w,b	;volatile
 51534  0124C0  0B1F               	andlw	31
 51535  0124C2  06E8               	decf	wreg,f,c
 51536  0124C4  A4D8               	btfss	status,2,c
 51537  0124C6  0012               	return	
 51538                           
 51539                           ; BSR set to: 13
 51540                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 51541                           
 51542                           ; BSR set to: 13
 51543                           
 51544                           ; BSR set to: 13
 51545  0124C8  5134               	movf	52,w,b	;volatile
 51546  0124CA  A4D8               	btfss	status,2,c
 51547  0124CC  0012               	return	
 51548                           
 51549                           ; BSR set to: 13
 51550                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 51551                           
 51552                           ; BSR set to: 13
 51553                           
 51554                           ; BSR set to: 13
 51555  0124CE  0E06               	movlw	6
 51556  0124D0  1931               	xorwf	49,w,b	;volatile
 51557  0124D2  B4D8               	btfsc	status,2,c
 51558  0124D4  D019               	goto	i2l425
 51559  0124D6  D021               	goto	i2l428
 51560  0124D8                     
 51561                           ; BSR set to: 13
 51562                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 51563                           
 51564                           ; BSR set to: 13
 51565  0124D8  0101               	movlb	1	; () banked
 51566  0124DA  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 51567  0124DC  A4D8               	btfss	status,2,c
 51568  0124DE  D01D               	goto	i2l428
 51569                           
 51570                           ; BSR set to: 1
 51571                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 51572  0124E0  0ED0               	movlw	low (_configDescriptor1+18)
 51573  0124E2  6E52               	movwf	_inPipes,c	;volatile
 51574  0124E4  0EA0               	movlw	high (_configDescriptor1+18)
 51575  0124E6  6E53               	movwf	_inPipes+1,c	;volatile
 51576                           
 51577                           ; BSR set to: 1
 51578  0124E8  0E00               	movlw	0
 51579  0124EA  6E57               	movwf	_inPipes+5,c	;volatile
 51580  0124EC  0E09               	movlw	9
 51581  0124EE  D00A               	goto	L83
 51582  0124F0                     i2l12303:
 51583                           
 51584                           ; BSR set to: 1
 51585  0124F0  0EC0               	movlw	192
 51586  0124F2  6E55               	movwf	_inPipes+3,c	;volatile
 51587                           
 51588                           ; BSR set to: 1
 51589                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 51590  0124F4  D012               	goto	i2l428
 51591  0124F6                     
 51592                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 51593                           
 51594                           ; BSR set to: 1
 51595  0124F6  0E84               	movlw	low _hid_rpt01
 51596  0124F8  6E52               	movwf	_inPipes,c	;volatile
 51597  0124FA  0EA1               	movlw	high _hid_rpt01
 51598  0124FC  6E53               	movwf	_inPipes+1,c	;volatile
 51599  0124FE  0E00               	movlw	0
 51600  012500  6E57               	movwf	_inPipes+5,c	;volatile
 51601  012502  0E1D               	movlw	29
 51602  012504                     L83:
 51603  012504  6E56               	movwf	_inPipes+4,c	;volatile
 51604  012506  D7F4               	goto	i2l12303
 51605  012508                     i2l425:
 51606  012508  010D               	movlb	13	; () banked
 51607  01250A  5133               	movf	51,w,b	;volatile
 51608                           
 51609                           ; Switch size 1, requested type "space"
 51610                           ; Number of cases is 3, Range of values is 33 to 35
 51611                           ; switch strategies available:
 51612                           ; Name         Instructions Cycles
 51613                           ; simple_byte           10     6 (average)
 51614                           ;	Chosen strategy is simple_byte
 51615  01250C  0A21               	xorlw	33	; case 33
 51616  01250E  B4D8               	btfsc	status,2,c
 51617  012510  D7E3               	goto	i2l426
 51618  012512  0A03               	xorlw	3	; case 34
 51619  012514  B4D8               	btfsc	status,2,c
 51620  012516  D7EF               	goto	i2l429
 51621  012518  0A01               	xorlw	1	; case 35
 51622  01251A                     i2l428:
 51623                           
 51624                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 51625                           
 51626                           ; BSR set to: 13
 51627                           
 51628                           ; BSR set to: 13
 51629  01251A  010D               	movlb	13	; () banked
 51630  01251C  3930               	swapf	48,w,b	;volatile
 51631  01251E  32E8               	rrcf	wreg,f,c
 51632  012520  0B03               	andlw	3
 51633  012522  06E8               	decf	wreg,f,c
 51634  012524  A4D8               	btfss	status,2,c
 51635  012526  0012               	return	
 51636  012528  D020               	goto	i2l432
 51637  01252A                     
 51638                           ; BSR set to: 13
 51639                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 51640                           
 51641                           ; BSR set to: 13
 51642  01252A  0EC0               	movlw	low _idle_rate
 51643  01252C  6E52               	movwf	_inPipes,c	;volatile
 51644  01252E  0E01               	movlw	high _idle_rate
 51645  012530  6E53               	movwf	_inPipes+1,c	;volatile
 51646                           
 51647                           ; BSR set to: 13
 51648  012532  0E00               	movlw	0
 51649  012534  6E57               	movwf	_inPipes+5,c	;volatile
 51650  012536  0E01               	movlw	1
 51651  012538  6E56               	movwf	_inPipes+4,c	;volatile
 51652                           
 51653                           ; BSR set to: 13
 51654  01253A  0EC1               	movlw	193
 51655  01253C  6E55               	movwf	_inPipes+3,c	;volatile
 51656                           
 51657                           ;usb_device_hid.c: 223: break;
 51658  01253E  0012               	return	
 51659  012540                     
 51660                           ; BSR set to: 13
 51661                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 51662                           
 51663                           ; BSR set to: 13
 51664  012540  0E80               	movlw	128
 51665  012542  6E55               	movwf	_inPipes+3,c	;volatile
 51666                           
 51667                           ; BSR set to: 13
 51668                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 51669  012544  CD33 F1C0          	movff	3379,_idle_rate	;volatile
 51670                           
 51671                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 51672  012548  0012               	return	
 51673  01254A                     
 51674                           ; BSR set to: 13
 51675                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 51676                           
 51677                           ; BSR set to: 13
 51678  01254A  0EBF               	movlw	low _active_protocol
 51679  01254C  6E52               	movwf	_inPipes,c	;volatile
 51680  01254E  0E01               	movlw	high _active_protocol
 51681  012550  6E53               	movwf	_inPipes+1,c	;volatile
 51682                           
 51683                           ; BSR set to: 13
 51684  012552  0E00               	movlw	0
 51685  012554  6E57               	movwf	_inPipes+5,c	;volatile
 51686  012556  0E01               	movlw	1
 51687  012558  6E56               	movwf	_inPipes+4,c	;volatile
 51688                           
 51689                           ; BSR set to: 13
 51690  01255A  0E81               	movlw	129
 51691  01255C  6E55               	movwf	_inPipes+3,c	;volatile
 51692                           
 51693                           ;usb_device_hid.c: 234: break;
 51694  01255E  0012               	return	
 51695  012560                     
 51696                           ; BSR set to: 13
 51697                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 51698                           
 51699                           ; BSR set to: 13
 51700  012560  0E80               	movlw	128
 51701  012562  6E55               	movwf	_inPipes+3,c	;volatile
 51702                           
 51703                           ; BSR set to: 13
 51704                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 51705  012564  CD32 F1BF          	movff	3378,_active_protocol	;volatile
 51706                           
 51707                           ; BSR set to: 13
 51708                           ;usb_device_hid.c: 239: }
 51709                           
 51710                           ;usb_device_hid.c: 238: break;
 51711  012568  0012               	return	
 51712  01256A                     i2l432:
 51713                           
 51714                           ; BSR set to: 13
 51715                           
 51716                           ; BSR set to: 13
 51717  01256A  5131               	movf	49,w,b	;volatile
 51718                           
 51719                           ; Switch size 1, requested type "space"
 51720                           ; Number of cases is 6, Range of values is 1 to 11
 51721                           ; switch strategies available:
 51722                           ; Name         Instructions Cycles
 51723                           ; simple_byte           19    10 (average)
 51724                           ;	Chosen strategy is simple_byte
 51725  01256C  0A01               	xorlw	1	; case 1
 51726  01256E  B4D8               	btfsc	status,2,c
 51727  012570  0012               	return	
 51728  012572  0A03               	xorlw	3	; case 2
 51729  012574  B4D8               	btfsc	status,2,c
 51730  012576  D7D9               	goto	i2l436
 51731  012578  0A01               	xorlw	1	; case 3
 51732  01257A  B4D8               	btfsc	status,2,c
 51733  01257C  D7E6               	goto	i2l438
 51734  01257E  0A0A               	xorlw	10	; case 9
 51735  012580  B4D8               	btfsc	status,2,c
 51736  012582  0012               	return	
 51737  012584  0A03               	xorlw	3	; case 10
 51738  012586  B4D8               	btfsc	status,2,c
 51739  012588  D7DB               	goto	i2l437
 51740  01258A  0A01               	xorlw	1	; case 11
 51741  01258C  A4D8               	btfss	status,2,c
 51742  01258E  0012               	return	
 51743  012590  D7E7               	goto	i2l439
 51744  012592                     __end_of_USBCheckHIDRequest:
 51745                           	opt stack 0
 51746                           tosu	equ	0xFFF
 51747                           tosh	equ	0xFFE
 51748                           tosl	equ	0xFFD
 51749                           pclatu	equ	0xFFB
 51750                           pclath	equ	0xFFA
 51751                           tblptru	equ	0xFF8
 51752                           tblptrh	equ	0xFF7
 51753                           tblptrl	equ	0xFF6
 51754                           tablat	equ	0xFF5
 51755                           prodh	equ	0xFF4
 51756                           prodl	equ	0xFF3
 51757                           intcon	equ	0xFF2
 51758                           indf0	equ	0xFEF
 51759                           postinc0	equ	0xFEE
 51760                           fsr0h	equ	0xFEA
 51761                           fsr0l	equ	0xFE9
 51762                           wreg	equ	0xFE8
 51763                           indf1	equ	0xFE7
 51764                           postinc1	equ	0xFE6
 51765                           postdec1	equ	0xFE5
 51766                           plusw1	equ	0xFE3
 51767                           fsr1h	equ	0xFE2
 51768                           fsr1l	equ	0xFE1
 51769                           indf2	equ	0xFDF
 51770                           postinc2	equ	0xFDE
 51771                           postdec2	equ	0xFDD
 51772                           plusw2	equ	0xFDB
 51773                           fsr2h	equ	0xFDA
 51774                           fsr2l	equ	0xFD9
 51775                           status	equ	0xFD8
 51776                           
 51777 ;; *************** function _MSDTransferTerminated *****************
 51778 ;; Defined at:
 51779 ;;		line 1674 in file "usb_device_msd.c"
 51780 ;; Parameters:    Size  Location     Type
 51781 ;;  handle          2   11[COMRAM] PTR void 
 51782 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 51783 ;;		 -> BDT(48), 
 51784 ;; Auto vars:     Size  Location     Type
 51785 ;;		None
 51786 ;; Return value:  Size  Location     Type
 51787 ;;                  1    wreg      void 
 51788 ;; Registers used:
 51789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51790 ;; Tracked objects:
 51791 ;;		On entry : 0/0
 51792 ;;		On exit  : 0/0
 51793 ;;		Unchanged: 0/0
 51794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51799 ;;Total ram usage:        4 bytes
 51800 ;; Hardware stack levels used:    1
 51801 ;; Hardware stack levels required when called:    1
 51802 ;; This function calls:
 51803 ;;		i2_USBStallEndpoint
 51804 ;;		i2_USBTransferOnePacket
 51805 ;; This function is called by:
 51806 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51807 ;; This function uses a non-reentrant model
 51808 ;;
 51809                           
 51810                           	psect	text212
 51811  014850                     __ptext212:
 51812                           	opt stack 0
 51813  014850                     _MSDTransferTerminated:
 51814                           	opt stack 14
 51815                           
 51816                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 51817                           
 51818                           ; BSR set to: 13
 51819                           ;incstack = 0
 51820  014850  0101               	movlb	1	; () banked
 51821  014852  515B               	movf	_MSDCBWValid& (0+255),w,b
 51822  014854  A4D8               	btfss	status,2,c
 51823  014856  D00B               	goto	i2l780
 51824                           
 51825                           ; BSR set to: 1
 51826                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 51827  014858  0E01               	movlw	1
 51828  01485A  6E01               	movwf	i2USBStallEndpoint@dir,c
 51829  01485C  0E02               	movlw	2
 51830  01485E  ECB3  F088         	call	i2_USBStallEndpoint
 51831                           
 51832                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 51833  014862  0E00               	movlw	0
 51834  014864  6E01               	movwf	i2USBStallEndpoint@dir,c
 51835  014866  0E02               	movlw	2
 51836  014868  ECB3  F088         	call	i2_USBStallEndpoint
 51837                           
 51838                           ;usb_device_msd.c: 1681: }
 51839  01486C  0012               	return	
 51840  01486E                     i2l780:
 51841  01486E  C125  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 51842  014872  C126  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 51843  014876  500E               	movf	_MSDTransferTerminated$2623,w,c
 51844  014878  180C               	xorwf	MSDTransferTerminated@handle,w,c
 51845  01487A  E114               	bnz	i2l783
 51846  01487C  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 51847  01487E  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 51848  014880  A4D8               	btfss	status,2,c
 51849  014882  0012               	return	
 51850                           
 51851                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 51852  014884  0E00               	movlw	0
 51853  014886  6E01               	movwf	i2USBTransferOnePacket@dir,c
 51854  014888  0E40               	movlw	64
 51855  01488A  6E02               	movwf	i2USBTransferOnePacket@data,c
 51856  01488C  0E0D               	movlw	13
 51857  01488E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 51858  014890  0E40               	movlw	64
 51859  014892  6E04               	movwf	i2USBTransferOnePacket@len,c
 51860  014894  0E02               	movlw	2
 51861  014896  EC36  F089         	call	i2_USBTransferOnePacket
 51862  01489A  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 51863  01489E  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 51864  0148A2  0012               	return	
 51865  0148A4                     i2l783:
 51866  0148A4  0012               	return		;funcret
 51867  0148A6                     __end_of_MSDTransferTerminated:
 51868                           	opt stack 0
 51869                           tosu	equ	0xFFF
 51870                           tosh	equ	0xFFE
 51871                           tosl	equ	0xFFD
 51872                           pclatu	equ	0xFFB
 51873                           pclath	equ	0xFFA
 51874                           tblptru	equ	0xFF8
 51875                           tblptrh	equ	0xFF7
 51876                           tblptrl	equ	0xFF6
 51877                           tablat	equ	0xFF5
 51878                           prodh	equ	0xFF4
 51879                           prodl	equ	0xFF3
 51880                           intcon	equ	0xFF2
 51881                           indf0	equ	0xFEF
 51882                           postinc0	equ	0xFEE
 51883                           fsr0h	equ	0xFEA
 51884                           fsr0l	equ	0xFE9
 51885                           wreg	equ	0xFE8
 51886                           indf1	equ	0xFE7
 51887                           postinc1	equ	0xFE6
 51888                           postdec1	equ	0xFE5
 51889                           plusw1	equ	0xFE3
 51890                           fsr1h	equ	0xFE2
 51891                           fsr1l	equ	0xFE1
 51892                           indf2	equ	0xFDF
 51893                           postinc2	equ	0xFDE
 51894                           postdec2	equ	0xFDD
 51895                           plusw2	equ	0xFDB
 51896                           fsr2h	equ	0xFDA
 51897                           fsr2l	equ	0xFD9
 51898                           status	equ	0xFD8
 51899                           
 51900 ;; *************** function i2_USBStallEndpoint *****************
 51901 ;; Defined at:
 51902 ;;		line 1073 in file "usb_device.c"
 51903 ;; Parameters:    Size  Location     Type
 51904 ;;  ep              1    wreg     unsigned char 
 51905 ;;  dir             1    0[COMRAM] unsigned char 
 51906 ;; Auto vars:     Size  Location     Type
 51907 ;;  ep              1    5[COMRAM] unsigned char 
 51908 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 51909 ;;		 -> BDT(48), 
 51910 ;; Return value:  Size  Location     Type
 51911 ;;                  1    wreg      void 
 51912 ;; Registers used:
 51913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51914 ;; Tracked objects:
 51915 ;;		On entry : 0/0
 51916 ;;		On exit  : 0/0
 51917 ;;		Unchanged: 0/0
 51918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51919 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51920 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51921 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51922 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51923 ;;Total ram usage:        8 bytes
 51924 ;; Hardware stack levels used:    1
 51925 ;; This function calls:
 51926 ;;		Nothing
 51927 ;; This function is called by:
 51928 ;;		_MSDTransferTerminated
 51929 ;; This function uses a non-reentrant model
 51930 ;;
 51931                           
 51932                           	psect	text213
 51933  011166                     __ptext213:
 51934                           	opt stack 0
 51935  011166                     i2_USBStallEndpoint:
 51936                           	opt stack 14
 51937                           
 51938                           ;incstack = 0
 51939                           ;i2USBStallEndpoint@ep stored from wreg
 51940  011166  6E06               	movwf	i2USBStallEndpoint@ep,c
 51941                           
 51942                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 51943  011168  5006               	movf	i2USBStallEndpoint@ep,w,c
 51944  01116A  A4D8               	btfss	status,2,c
 51945  01116C  D02B               	goto	i2l192
 51946                           
 51947                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 51948  01116E  EE20 F001          	lfsr	2,1
 51949  011172  505C               	movf	_pBDTEntryEP0OutNext,w,c
 51950  011174  26D9               	addwf	fsr2l,f,c
 51951  011176  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 51952  011178  22DA               	addwfc	fsr2h,f,c
 51953  01117A  0E08               	movlw	8
 51954  01117C  6EDF               	movwf	indf2,c
 51955                           
 51956                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51957  01117E  EE20 F002          	lfsr	2,2
 51958  011182  505C               	movf	_pBDTEntryEP0OutNext,w,c
 51959  011184  26D9               	addwf	fsr2l,f,c
 51960  011186  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 51961  011188  22DA               	addwfc	fsr2h,f,c
 51962  01118A  0E30               	movlw	48
 51963  01118C  6EDE               	movwf	postinc2,c
 51964  01118E  0E0D               	movlw	13
 51965  011190  6EDD               	movwf	postdec2,c
 51966                           
 51967                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 51968  011192  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51969  011196  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51970  01119A  0E0C               	movlw	12
 51971  01119C  6EDF               	movwf	indf2,c
 51972                           
 51973                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51974  01119E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51975  0111A2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51976  0111A6  0E00               	movlw	0
 51977  0111A8  8EDB               	bsf	plusw2,7,c
 51978                           
 51979                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 51980  0111AA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 51981  0111AE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51982  0111B2  0E04               	movlw	4
 51983  0111B4  6EDF               	movwf	indf2,c
 51984                           
 51985                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51986  0111B6  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 51987  0111BA  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51988  0111BE  0E00               	movlw	0
 51989  0111C0  8EDB               	bsf	plusw2,7,c
 51990                           
 51991                           ;usb_device.c: 1089: }
 51992  0111C2  0012               	return	
 51993  0111C4                     i2l192:
 51994                           
 51995                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 51996  0111C4  5001               	movf	i2USBStallEndpoint@dir,w,c
 51997  0111C6  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 51998  0111C8  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 51999  0111CA  90D8               	bcf	status,0,c
 52000  0111CC  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52001  0111CE  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52002  0111D0  5006               	movf	i2USBStallEndpoint@ep,w,c
 52003  0111D2  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 52004  0111D4  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 52005  0111D6  90D8               	bcf	status,0,c
 52006  0111D8  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52007  0111DA  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52008  0111DC  90D8               	bcf	status,0,c
 52009  0111DE  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52010  0111E0  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52011  0111E2  5002               	movf	??i2_USBStallEndpoint,w,c
 52012  0111E4  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 52013  0111E6  5003               	movf	??i2_USBStallEndpoint+1,w,c
 52014  0111E8  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 52015  0111EA  90D8               	bcf	status,0,c
 52016  0111EC  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52017  0111EE  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52018  0111F0  90D8               	bcf	status,0,c
 52019  0111F2  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52020  0111F4  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52021  0111F6  0E00               	movlw	0
 52022  0111F8  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 52023  0111FA  6E07               	movwf	i2USBStallEndpoint@p,c
 52024  0111FC  0E0D               	movlw	13
 52025  0111FE  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 52026  011200  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52027                           
 52028                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 52029  011202  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52030  011206  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52031  01120A  0E00               	movlw	0
 52032  01120C  84DB               	bsf	plusw2,2,c
 52033                           
 52034                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 52035  01120E  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52036  011212  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52037  011216  0E00               	movlw	0
 52038  011218  8EDB               	bsf	plusw2,7,c
 52039                           
 52040                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 52041  01121A  5006               	movf	i2USBStallEndpoint@ep,w,c
 52042  01121C  0D04               	mullw	4
 52043  01121E  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 52044  011222  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 52045  011226  5001               	movf	i2USBStallEndpoint@dir,w,c
 52046  011228  0D02               	mullw	2
 52047  01122A  50F3               	movf	prodl,w,c
 52048  01122C  2602               	addwf	??i2_USBStallEndpoint,f,c
 52049  01122E  50F4               	movf	prodh,w,c
 52050  011230  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52051  011232  90D8               	bcf	status,0,c
 52052  011234  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52053  011236  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52054  011238  90D8               	bcf	status,0,c
 52055  01123A  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52056  01123C  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52057  01123E  0E04               	movlw	4
 52058  011240  2602               	addwf	??i2_USBStallEndpoint,f,c
 52059  011242  0E00               	movlw	0
 52060  011244  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52061  011246  0E00               	movlw	0
 52062  011248  2402               	addwf	??i2_USBStallEndpoint,w,c
 52063  01124A  6E07               	movwf	i2USBStallEndpoint@p,c
 52064  01124C  0E0D               	movlw	13
 52065  01124E  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 52066  011250  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52067                           
 52068                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 52069  011252  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52070  011256  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52071  01125A  0E00               	movlw	0
 52072  01125C  84DB               	bsf	plusw2,2,c
 52073                           
 52074                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 52075  01125E  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52076  011262  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52077  011266  0E00               	movlw	0
 52078  011268  8EDB               	bsf	plusw2,7,c
 52079  01126A  0012               	return	
 52080  01126C                     __end_ofi2_USBStallEndpoint:
 52081                           	opt stack 0
 52082                           tosu	equ	0xFFF
 52083                           tosh	equ	0xFFE
 52084                           tosl	equ	0xFFD
 52085                           pclatu	equ	0xFFB
 52086                           pclath	equ	0xFFA
 52087                           tblptru	equ	0xFF8
 52088                           tblptrh	equ	0xFF7
 52089                           tblptrl	equ	0xFF6
 52090                           tablat	equ	0xFF5
 52091                           prodh	equ	0xFF4
 52092                           prodl	equ	0xFF3
 52093                           intcon	equ	0xFF2
 52094                           indf0	equ	0xFEF
 52095                           postinc0	equ	0xFEE
 52096                           fsr0h	equ	0xFEA
 52097                           fsr0l	equ	0xFE9
 52098                           wreg	equ	0xFE8
 52099                           indf1	equ	0xFE7
 52100                           postinc1	equ	0xFE6
 52101                           postdec1	equ	0xFE5
 52102                           plusw1	equ	0xFE3
 52103                           fsr1h	equ	0xFE2
 52104                           fsr1l	equ	0xFE1
 52105                           indf2	equ	0xFDF
 52106                           postinc2	equ	0xFDE
 52107                           postdec2	equ	0xFDD
 52108                           plusw2	equ	0xFDB
 52109                           fsr2h	equ	0xFDA
 52110                           fsr2l	equ	0xFD9
 52111                           status	equ	0xFD8
 52112                           
 52113 ;; *************** function _APP_DeviceMSDInitialize *****************
 52114 ;; Defined at:
 52115 ;;		line 84 in file "app_device_msd.c"
 52116 ;; Parameters:    Size  Location     Type
 52117 ;;		None
 52118 ;; Auto vars:     Size  Location     Type
 52119 ;;		None
 52120 ;; Return value:  Size  Location     Type
 52121 ;;                  1    wreg      void 
 52122 ;; Registers used:
 52123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52124 ;; Tracked objects:
 52125 ;;		On entry : 0/0
 52126 ;;		On exit  : 0/0
 52127 ;;		Unchanged: 0/0
 52128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52133 ;;Total ram usage:        0 bytes
 52134 ;; Hardware stack levels used:    1
 52135 ;; Hardware stack levels required when called:    2
 52136 ;; This function calls:
 52137 ;;		_USBEnableEndpoint
 52138 ;;		_USBMSDInit
 52139 ;; This function is called by:
 52140 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52141 ;; This function uses a non-reentrant model
 52142 ;;
 52143                           
 52144                           	psect	text214
 52145  015766                     __ptext214:
 52146                           	opt stack 0
 52147  015766                     _APP_DeviceMSDInitialize:
 52148                           	opt stack 13
 52149                           
 52150                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 52151                           
 52152                           ;incstack = 0
 52153  015766  0E1E               	movlw	30
 52154  015768  6E09               	movwf	USBEnableEndpoint@options,c
 52155  01576A  0E02               	movlw	2
 52156  01576C  ECCD  F0A7         	call	_USBEnableEndpoint
 52157                           
 52158                           ;app_device_msd.c: 93: USBMSDInit();
 52159  015770  EC9D  F086         	call	_USBMSDInit	;wreg free
 52160  015774  0012               	return		;funcret
 52161  015776                     __end_of_APP_DeviceMSDInitialize:
 52162                           	opt stack 0
 52163                           tosu	equ	0xFFF
 52164                           tosh	equ	0xFFE
 52165                           tosl	equ	0xFFD
 52166                           pclatu	equ	0xFFB
 52167                           pclath	equ	0xFFA
 52168                           tblptru	equ	0xFF8
 52169                           tblptrh	equ	0xFF7
 52170                           tblptrl	equ	0xFF6
 52171                           tablat	equ	0xFF5
 52172                           prodh	equ	0xFF4
 52173                           prodl	equ	0xFF3
 52174                           intcon	equ	0xFF2
 52175                           indf0	equ	0xFEF
 52176                           postinc0	equ	0xFEE
 52177                           fsr0h	equ	0xFEA
 52178                           fsr0l	equ	0xFE9
 52179                           wreg	equ	0xFE8
 52180                           indf1	equ	0xFE7
 52181                           postinc1	equ	0xFE6
 52182                           postdec1	equ	0xFE5
 52183                           plusw1	equ	0xFE3
 52184                           fsr1h	equ	0xFE2
 52185                           fsr1l	equ	0xFE1
 52186                           indf2	equ	0xFDF
 52187                           postinc2	equ	0xFDE
 52188                           postdec2	equ	0xFDD
 52189                           plusw2	equ	0xFDB
 52190                           fsr2h	equ	0xFDA
 52191                           fsr2l	equ	0xFD9
 52192                           status	equ	0xFD8
 52193                           
 52194 ;; *************** function _USBMSDInit *****************
 52195 ;; Defined at:
 52196 ;;		line 142 in file "usb_device_msd.c"
 52197 ;; Parameters:    Size  Location     Type
 52198 ;;		None
 52199 ;; Auto vars:     Size  Location     Type
 52200 ;;		None
 52201 ;; Return value:  Size  Location     Type
 52202 ;;                  1    wreg      void 
 52203 ;; Registers used:
 52204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52205 ;; Tracked objects:
 52206 ;;		On entry : 0/0
 52207 ;;		On exit  : 0/0
 52208 ;;		Unchanged: 0/0
 52209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52213 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52214 ;;Total ram usage:        3 bytes
 52215 ;; Hardware stack levels used:    1
 52216 ;; Hardware stack levels required when called:    1
 52217 ;; This function calls:
 52218 ;;		i2_ExternalFlash_MediaDetect
 52219 ;;		i2_ExternalFlash_MediaInitialize
 52220 ;;		i2_ResetSenseData
 52221 ;;		i2_USBTransferOnePacket
 52222 ;; This function is called by:
 52223 ;;		_APP_DeviceMSDInitialize
 52224 ;; This function uses a non-reentrant model
 52225 ;;
 52226                           
 52227                           	psect	text215
 52228  010D3A                     __ptext215:
 52229                           	opt stack 0
 52230  010D3A                     _USBMSDInit:
 52231                           	opt stack 13
 52232                           
 52233                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 52234                           
 52235                           ;incstack = 0
 52236  010D3A  0E00               	movlw	0
 52237  010D3C  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52238  010D3E  0E40               	movlw	64
 52239  010D40  6E02               	movwf	i2USBTransferOnePacket@data,c
 52240  010D42  0E0D               	movlw	13
 52241  010D44  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52242  010D46  0E40               	movlw	64
 52243  010D48  6E04               	movwf	i2USBTransferOnePacket@len,c
 52244  010D4A  0E02               	movlw	2
 52245  010D4C  EC36  F089         	call	i2_USBTransferOnePacket
 52246  010D50  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52247  010D54  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52248  010D58  C11F  F149         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 52249  010D5C  C120  F14A         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 52250                           
 52251                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 52252  010D60  0E00               	movlw	0
 52253  010D62  0101               	movlb	1	; () banked
 52254  010D64  6F63               	movwf	_MSD_State& (0+255),b
 52255                           
 52256                           ; BSR set to: 1
 52257                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 52258  010D66  6962               	setf	_MSDCommandState& (0+255),b
 52259                           
 52260                           ; BSR set to: 1
 52261                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 52262  010D68  0E00               	movlw	0
 52263  010D6A  6F61               	movwf	_MSDReadState& (0+255),b
 52264                           
 52265                           ; BSR set to: 1
 52266                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 52267  010D6C  0E00               	movlw	0
 52268  010D6E  6F60               	movwf	_MSDWriteState& (0+255),b
 52269                           
 52270                           ; BSR set to: 1
 52271                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 52272  010D70  0E00               	movlw	0
 52273  010D72  6F5C               	movwf	_MSDHostNoData& (0+255),b
 52274                           
 52275                           ; BSR set to: 1
 52276                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 52277  010D74  0E00               	movlw	0
 52278  010D76  0102               	movlb	2	; () banked
 52279  010D78  6F2E               	movwf	_gblNumBLKS& (0+255),b
 52280  010D7A  0E00               	movlw	0
 52281  010D7C  6F2F               	movwf	(_gblNumBLKS+1)& (0+255),b
 52282  010D7E  0E00               	movlw	0
 52283  010D80  6F30               	movwf	(_gblNumBLKS+2)& (0+255),b
 52284  010D82  0E00               	movlw	0
 52285  010D84  6F31               	movwf	(_gblNumBLKS+3)& (0+255),b
 52286                           
 52287                           ; BSR set to: 2
 52288                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 52289  010D86  0E00               	movlw	0
 52290  010D88  6F2A               	movwf	_gblBLKLen& (0+255),b
 52291  010D8A  0E00               	movlw	0
 52292  010D8C  6F2B               	movwf	(_gblBLKLen+1)& (0+255),b
 52293  010D8E  0E00               	movlw	0
 52294  010D90  6F2C               	movwf	(_gblBLKLen+2)& (0+255),b
 52295  010D92  0E00               	movlw	0
 52296  010D94  6F2D               	movwf	(_gblBLKLen+3)& (0+255),b
 52297                           
 52298                           ; BSR set to: 2
 52299                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 52300  010D96  0E01               	movlw	1
 52301  010D98  0101               	movlb	1	; () banked
 52302  010D9A  6F5B               	movwf	_MSDCBWValid& (0+255),b
 52303                           
 52304                           ; BSR set to: 1
 52305                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 52306  010D9C  0E00               	movlw	0
 52307  010D9E  6F48               	movwf	(_gblMediaPresent+1)& (0+255),b
 52308  010DA0  0E00               	movlw	0
 52309  010DA2  6F47               	movwf	_gblMediaPresent& (0+255),b
 52310                           
 52311                           ; BSR set to: 1
 52312                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 52313  010DA4  0E00               	movlw	0
 52314  010DA6  0102               	movlb	2	; () banked
 52315  010DA8  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 52316  010DAA  D04A               	goto	i2l534
 52317  010DAC                     
 52318                           ; BSR set to: 2
 52319                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 52320                           
 52321                           ; BSR set to: 2
 52322  010DAC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 52323  010DAE  0D01               	mullw	1
 52324  010DB0  0E5D               	movlw	low _SoftDetach
 52325  010DB2  24F3               	addwf	prodl,w,c
 52326  010DB4  6ED9               	movwf	fsr2l,c
 52327  010DB6  0E01               	movlw	high _SoftDetach
 52328  010DB8  20F4               	addwfc	prodh,w,c
 52329  010DBA  6EDA               	movwf	fsr2h,c
 52330  010DBC  0E00               	movlw	0
 52331  010DBE  6EDF               	movwf	indf2,c
 52332                           
 52333                           ; BSR set to: 2
 52334                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 52335  010DC0  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 52336  010DC4  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 52337  010DC8  EE22  F092         	lfsr	2,_LUN+9
 52338  010DCC  D801               	call	i2u974_48
 52339  010DCE  D00A               	goto	i2u974_49
 52340  010DD0                     i2u974_48:
 52341  010DD0  0005               	push	
 52342  010DD2  6EFA               	movwf	pclath,c
 52343  010DD4  50DE               	movf	postinc2,w,c
 52344  010DD6  6EFD               	movwf	tosl,c
 52345  010DD8  50DE               	movf	postinc2,w,c
 52346  010DDA  6EFE               	movwf	tosh,c
 52347  010DDC  50DE               	movf	postinc2,w,c
 52348  010DDE  6EFF               	movwf	tosu,c
 52349  010DE0  50FA               	movf	pclath,w,c
 52350  010DE2  0012               	return		;indir
 52351  010DE4                     i2u974_49:
 52352  010DE4  0900               	iorlw	0
 52353  010DE6  B4D8               	btfsc	status,2,c
 52354  010DE8  D027               	goto	i2l537
 52355                           
 52356                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 52357  010DEA  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 52358  010DEE  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 52359  010DF2  D801               	call	i2u976_48
 52360  010DF4  D00B               	goto	i2u976_49
 52361  010DF6                     i2u976_48:
 52362  010DF6  0005               	push	
 52363  010DF8  6EFA               	movwf	pclath,c
 52364  010DFA  0102               	movlb	2	; () banked
 52365  010DFC  5189               	movf	_LUN& (0+255),w,b
 52366  010DFE  6EFD               	movwf	tosl,c
 52367  010E00  518A               	movf	(_LUN+1)& (0+255),w,b
 52368  010E02  6EFE               	movwf	tosh,c
 52369  010E04  518B               	movf	(_LUN+2)& (0+255),w,b
 52370  010E06  6EFF               	movwf	tosu,c
 52371  010E08  50FA               	movf	pclath,w,c
 52372  010E0A  0012               	return		;indir
 52373  010E0C                     i2u976_49:
 52374  010E0C  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 52375  010E0E  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 52376  010E10  B4D8               	btfsc	status,2,c
 52377  010E12  D012               	goto	i2l537
 52378                           
 52379                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 52380  010E14  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 52381  010E18  0E01               	movlw	1
 52382  010E1A  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 52383  010E1C  0E00               	movlw	0
 52384  010E1E  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 52385  010E20  2A0C               	incf	??_USBMSDInit,f,c
 52386  010E22  D003               	goto	i2u978_44
 52387  010E24                     i2u978_45:
 52388  010E24  90D8               	bcf	status,0,c
 52389  010E26  360D               	rlcf	??_USBMSDInit+1,f,c
 52390  010E28  360E               	rlcf	??_USBMSDInit+2,f,c
 52391  010E2A                     i2u978_44:
 52392  010E2A  2E0C               	decfsz	??_USBMSDInit,f,c
 52393  010E2C  D7FB               	goto	i2u978_45
 52394  010E2E  500D               	movf	??_USBMSDInit+1,w,c
 52395  010E30  0101               	movlb	1	; () banked
 52396  010E32  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 52397  010E34  500E               	movf	??_USBMSDInit+2,w,c
 52398  010E36  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 52399  010E38                     i2l537:
 52400                           
 52401                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 52402                           
 52403                           ; BSR set to: 1
 52404                           
 52405                           ; BSR set to: 1
 52406  010E38  EC26  F0A1         	call	i2_ResetSenseData	;wreg free
 52407  010E3C  0102               	movlb	2	; () banked
 52408  010E3E  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 52409  010E40                     i2l534:
 52410                           
 52411                           ; BSR set to: 2
 52412                           
 52413                           ; BSR set to: 2
 52414  010E40  510D               	movf	(_gblCBW+13)& (0+255),w,b
 52415  010E42  A4D8               	btfss	status,2,c
 52416  010E44  0012               	return	
 52417  010E46  D7B2               	goto	i2l535
 52418  010E48                     __end_of_USBMSDInit:
 52419                           	opt stack 0
 52420                           tosu	equ	0xFFF
 52421                           tosh	equ	0xFFE
 52422                           tosl	equ	0xFFD
 52423                           pclatu	equ	0xFFB
 52424                           pclath	equ	0xFFA
 52425                           tblptru	equ	0xFF8
 52426                           tblptrh	equ	0xFF7
 52427                           tblptrl	equ	0xFF6
 52428                           tablat	equ	0xFF5
 52429                           prodh	equ	0xFF4
 52430                           prodl	equ	0xFF3
 52431                           intcon	equ	0xFF2
 52432                           indf0	equ	0xFEF
 52433                           postinc0	equ	0xFEE
 52434                           fsr0h	equ	0xFEA
 52435                           fsr0l	equ	0xFE9
 52436                           wreg	equ	0xFE8
 52437                           indf1	equ	0xFE7
 52438                           postinc1	equ	0xFE6
 52439                           postdec1	equ	0xFE5
 52440                           plusw1	equ	0xFE3
 52441                           fsr1h	equ	0xFE2
 52442                           fsr1l	equ	0xFE1
 52443                           indf2	equ	0xFDF
 52444                           postinc2	equ	0xFDE
 52445                           postdec2	equ	0xFDD
 52446                           plusw2	equ	0xFDB
 52447                           fsr2h	equ	0xFDA
 52448                           fsr2l	equ	0xFD9
 52449                           status	equ	0xFD8
 52450                           
 52451 ;; *************** function i2_ResetSenseData *****************
 52452 ;; Defined at:
 52453 ;;		line 1373 in file "usb_device_msd.c"
 52454 ;; Parameters:    Size  Location     Type
 52455 ;;		None
 52456 ;; Auto vars:     Size  Location     Type
 52457 ;;		None
 52458 ;; Return value:  Size  Location     Type
 52459 ;;                  1    wreg      void 
 52460 ;; Registers used:
 52461 ;;		wreg, status,2
 52462 ;; Tracked objects:
 52463 ;;		On entry : 0/0
 52464 ;;		On exit  : 0/0
 52465 ;;		Unchanged: 0/0
 52466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52471 ;;Total ram usage:        0 bytes
 52472 ;; Hardware stack levels used:    1
 52473 ;; This function calls:
 52474 ;;		Nothing
 52475 ;; This function is called by:
 52476 ;;		_USBMSDInit
 52477 ;; This function uses a non-reentrant model
 52478 ;;
 52479                           
 52480                           	psect	text216
 52481  01424C                     __ptext216:
 52482                           	opt stack 0
 52483  01424C                     i2_ResetSenseData:
 52484                           	opt stack 13
 52485                           
 52486                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 52487                           
 52488                           ; BSR set to: 2
 52489                           ;incstack = 0
 52490  01424C  0101               	movlb	1	; () banked
 52491  01424E  9100               	bcf	_gblSenseData& (0+255),0,b
 52492  014250  9300               	bcf	_gblSenseData& (0+255),1,b
 52493  014252  9500               	bcf	_gblSenseData& (0+255),2,b
 52494  014254  9700               	bcf	_gblSenseData& (0+255),3,b
 52495  014256  8900               	bsf	_gblSenseData& (0+255),4,b
 52496  014258  8B00               	bsf	_gblSenseData& (0+255),5,b
 52497  01425A  8D00               	bsf	_gblSenseData& (0+255),6,b
 52498                           
 52499                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 52500  01425C  9F00               	bcf	_gblSenseData& (0+255),7,b
 52501                           
 52502                           ; BSR set to: 1
 52503                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 52504  01425E  0E00               	movlw	0
 52505  014260  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 52506                           
 52507                           ; BSR set to: 1
 52508                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 52509  014262  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 52510  014264  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 52511  014266  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 52512  014268  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 52513                           
 52514                           ; BSR set to: 1
 52515                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 52516  01426A  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 52517                           
 52518                           ; BSR set to: 1
 52519                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 52520  01426C  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 52521                           
 52522                           ; BSR set to: 1
 52523                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 52524  01426E  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 52525                           
 52526                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 52527  014270  0E00               	movlw	0
 52528  014272  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 52529                           
 52530                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 52531  014274  0E00               	movlw	0
 52532  014276  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 52533                           
 52534                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 52535  014278  0E00               	movlw	0
 52536  01427A  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 52537                           
 52538                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 52539  01427C  0E00               	movlw	0
 52540  01427E  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 52541                           
 52542                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 52543  014280  0E0A               	movlw	10
 52544  014282  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 52545                           
 52546                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 52547  014284  0E00               	movlw	0
 52548  014286  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 52549  014288  0E00               	movlw	0
 52550  01428A  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 52551  01428C  0E00               	movlw	0
 52552  01428E  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 52553  014290  0E00               	movlw	0
 52554  014292  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 52555                           
 52556                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 52557  014294  0E00               	movlw	0
 52558  014296  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 52559                           
 52560                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 52561  014298  0E00               	movlw	0
 52562  01429A  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 52563                           
 52564                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 52565  01429C  0E00               	movlw	0
 52566  01429E  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 52567                           
 52568                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 52569  0142A0  0E00               	movlw	0
 52570  0142A2  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 52571                           
 52572                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 52573  0142A4  0E00               	movlw	0
 52574  0142A6  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 52575                           
 52576                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 52577  0142A8  0E00               	movlw	0
 52578  0142AA  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 52579                           
 52580                           ; BSR set to: 1
 52581  0142AC  0012               	return		;funcret
 52582  0142AE                     __end_ofi2_ResetSenseData:
 52583                           	opt stack 0
 52584                           tosu	equ	0xFFF
 52585                           tosh	equ	0xFFE
 52586                           tosl	equ	0xFFD
 52587                           pclatu	equ	0xFFB
 52588                           pclath	equ	0xFFA
 52589                           tblptru	equ	0xFF8
 52590                           tblptrh	equ	0xFF7
 52591                           tblptrl	equ	0xFF6
 52592                           tablat	equ	0xFF5
 52593                           prodh	equ	0xFF4
 52594                           prodl	equ	0xFF3
 52595                           intcon	equ	0xFF2
 52596                           indf0	equ	0xFEF
 52597                           postinc0	equ	0xFEE
 52598                           fsr0h	equ	0xFEA
 52599                           fsr0l	equ	0xFE9
 52600                           wreg	equ	0xFE8
 52601                           indf1	equ	0xFE7
 52602                           postinc1	equ	0xFE6
 52603                           postdec1	equ	0xFE5
 52604                           plusw1	equ	0xFE3
 52605                           fsr1h	equ	0xFE2
 52606                           fsr1l	equ	0xFE1
 52607                           indf2	equ	0xFDF
 52608                           postinc2	equ	0xFDE
 52609                           postdec2	equ	0xFDD
 52610                           plusw2	equ	0xFDB
 52611                           fsr2h	equ	0xFDA
 52612                           fsr2l	equ	0xFD9
 52613                           status	equ	0xFD8
 52614                           
 52615 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 52616 ;; Defined at:
 52617 ;;		line 10 in file "external_flash.c"
 52618 ;; Parameters:    Size  Location     Type
 52619 ;;  config          2    0[COMRAM] PTR void 
 52620 ;;		 -> NULL(0), 
 52621 ;; Auto vars:     Size  Location     Type
 52622 ;;		None
 52623 ;; Return value:  Size  Location     Type
 52624 ;;                  2    0[COMRAM] PTR struct .
 52625 ;; Registers used:
 52626 ;;		wreg, status,2, status,0
 52627 ;; Tracked objects:
 52628 ;;		On entry : 0/0
 52629 ;;		On exit  : 0/0
 52630 ;;		Unchanged: 0/0
 52631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52636 ;;Total ram usage:        2 bytes
 52637 ;; Hardware stack levels used:    1
 52638 ;; This function calls:
 52639 ;;		Nothing
 52640 ;; This function is called by:
 52641 ;;		_USBMSDInit
 52642 ;;		_MSDProcessCommand
 52643 ;; This function uses a non-reentrant model
 52644 ;;
 52645                           
 52646                           	psect	text217
 52647  0156D8                     __ptext217:
 52648                           	opt stack 0
 52649  0156D8                     i2_ExternalFlash_MediaInitialize:
 52650                           	opt stack 13
 52651                           
 52652                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 52653                           
 52654                           ; BSR set to: 1
 52655                           ;incstack = 0
 52656  0156D8  0102               	movlb	2	; () banked
 52657  0156DA  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 52658                           
 52659                           ; BSR set to: 2
 52660                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 52661  0156DC  0E02               	movlw	2
 52662  0156DE  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 52663  0156E0  0E00               	movlw	0
 52664  0156E2  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 52665                           
 52666                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 52667  0156E4  0E00               	movlw	0
 52668  0156E6  6F84               	movwf	_mediaInformation& (0+255),b
 52669                           
 52670                           ; BSR set to: 2
 52671                           ;external_flash.c: 15: return &mediaInformation;
 52672  0156E8  0E84               	movlw	low _mediaInformation
 52673  0156EA  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 52674  0156EC  0E02               	movlw	high _mediaInformation
 52675  0156EE  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 52676  0156F0  0012               	return	
 52677  0156F2                     __end_ofi2_ExternalFlash_MediaInitialize:
 52678                           	opt stack 0
 52679                           tosu	equ	0xFFF
 52680                           tosh	equ	0xFFE
 52681                           tosl	equ	0xFFD
 52682                           pclatu	equ	0xFFB
 52683                           pclath	equ	0xFFA
 52684                           tblptru	equ	0xFF8
 52685                           tblptrh	equ	0xFF7
 52686                           tblptrl	equ	0xFF6
 52687                           tablat	equ	0xFF5
 52688                           prodh	equ	0xFF4
 52689                           prodl	equ	0xFF3
 52690                           intcon	equ	0xFF2
 52691                           indf0	equ	0xFEF
 52692                           postinc0	equ	0xFEE
 52693                           fsr0h	equ	0xFEA
 52694                           fsr0l	equ	0xFE9
 52695                           wreg	equ	0xFE8
 52696                           indf1	equ	0xFE7
 52697                           postinc1	equ	0xFE6
 52698                           postdec1	equ	0xFE5
 52699                           plusw1	equ	0xFE3
 52700                           fsr1h	equ	0xFE2
 52701                           fsr1l	equ	0xFE1
 52702                           indf2	equ	0xFDF
 52703                           postinc2	equ	0xFDE
 52704                           postdec2	equ	0xFDD
 52705                           plusw2	equ	0xFDB
 52706                           fsr2h	equ	0xFDA
 52707                           fsr2l	equ	0xFD9
 52708                           status	equ	0xFD8
 52709                           
 52710 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 52711 ;; Defined at:
 52712 ;;		line 29 in file "external_flash.c"
 52713 ;; Parameters:    Size  Location     Type
 52714 ;;  config          2    0[COMRAM] PTR void 
 52715 ;;		 -> NULL(0), 
 52716 ;; Auto vars:     Size  Location     Type
 52717 ;;		None
 52718 ;; Return value:  Size  Location     Type
 52719 ;;                  1    wreg      unsigned char 
 52720 ;; Registers used:
 52721 ;;		wreg
 52722 ;; Tracked objects:
 52723 ;;		On entry : 0/0
 52724 ;;		On exit  : 0/0
 52725 ;;		Unchanged: 0/0
 52726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52731 ;;Total ram usage:        2 bytes
 52732 ;; Hardware stack levels used:    1
 52733 ;; This function calls:
 52734 ;;		Nothing
 52735 ;; This function is called by:
 52736 ;;		_USBMSDInit
 52737 ;;		_MSDProcessCommand
 52738 ;; This function uses a non-reentrant model
 52739 ;;
 52740                           
 52741                           	psect	text218
 52742  015820                     __ptext218:
 52743                           	opt stack 0
 52744  015820                     i2_ExternalFlash_MediaDetect:
 52745                           	opt stack 13
 52746                           
 52747                           ;external_flash.c: 31: return 1;
 52748                           
 52749                           ; BSR set to: 2
 52750                           ;incstack = 0
 52751  015820  0E01               	movlw	1
 52752  015822  0012               	return	
 52753  015824                     __end_ofi2_ExternalFlash_MediaDetect:
 52754                           	opt stack 0
 52755                           tosu	equ	0xFFF
 52756                           tosh	equ	0xFFE
 52757                           tosl	equ	0xFFD
 52758                           pclatu	equ	0xFFB
 52759                           pclath	equ	0xFFA
 52760                           tblptru	equ	0xFF8
 52761                           tblptrh	equ	0xFF7
 52762                           tblptrl	equ	0xFF6
 52763                           tablat	equ	0xFF5
 52764                           prodh	equ	0xFF4
 52765                           prodl	equ	0xFF3
 52766                           intcon	equ	0xFF2
 52767                           indf0	equ	0xFEF
 52768                           postinc0	equ	0xFEE
 52769                           fsr0h	equ	0xFEA
 52770                           fsr0l	equ	0xFE9
 52771                           wreg	equ	0xFE8
 52772                           indf1	equ	0xFE7
 52773                           postinc1	equ	0xFE6
 52774                           postdec1	equ	0xFE5
 52775                           plusw1	equ	0xFE3
 52776                           fsr1h	equ	0xFE2
 52777                           fsr1l	equ	0xFE1
 52778                           indf2	equ	0xFDF
 52779                           postinc2	equ	0xFDE
 52780                           postdec2	equ	0xFDD
 52781                           plusw2	equ	0xFDB
 52782                           fsr2h	equ	0xFDA
 52783                           fsr2l	equ	0xFD9
 52784                           status	equ	0xFD8
 52785                           
 52786 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 52787 ;; Defined at:
 52788 ;;		line 46 in file "app_device_custom_hid.c"
 52789 ;; Parameters:    Size  Location     Type
 52790 ;;		None
 52791 ;; Auto vars:     Size  Location     Type
 52792 ;;		None
 52793 ;; Return value:  Size  Location     Type
 52794 ;;                  1    wreg      void 
 52795 ;; Registers used:
 52796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52797 ;; Tracked objects:
 52798 ;;		On entry : 0/0
 52799 ;;		On exit  : 0/0
 52800 ;;		Unchanged: 0/0
 52801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52806 ;;Total ram usage:        0 bytes
 52807 ;; Hardware stack levels used:    1
 52808 ;; Hardware stack levels required when called:    2
 52809 ;; This function calls:
 52810 ;;		_USBEnableEndpoint
 52811 ;;		i2_USBTransferOnePacket
 52812 ;; This function is called by:
 52813 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52814 ;; This function uses a non-reentrant model
 52815 ;;
 52816                           
 52817                           	psect	text219
 52818  0151C4                     __ptext219:
 52819                           	opt stack 0
 52820  0151C4                     _APP_DeviceCustomHIDInitialize:
 52821                           	opt stack 13
 52822                           
 52823                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 52824                           
 52825                           ;incstack = 0
 52826  0151C4  0E00               	movlw	0
 52827  0151C6  0101               	movlb	1	; () banked
 52828  0151C8  6F41               	movwf	_USBInHandle& (0+255),b
 52829  0151CA  0E00               	movlw	0
 52830  0151CC  6F42               	movwf	(_USBInHandle+1)& (0+255),b
 52831                           
 52832                           ; BSR set to: 1
 52833                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 52834  0151CE  0E1E               	movlw	30
 52835  0151D0  6E09               	movwf	USBEnableEndpoint@options,c
 52836  0151D2  0E01               	movlw	1
 52837  0151D4  ECCD  F0A7         	call	_USBEnableEndpoint
 52838                           
 52839                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 52840  0151D8  0E00               	movlw	0
 52841  0151DA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52842  0151DC  0E78               	movlw	low _ReceivedDataBuffer
 52843  0151DE  6E02               	movwf	i2USBTransferOnePacket@data,c
 52844  0151E0  0E03               	movlw	high _ReceivedDataBuffer
 52845  0151E2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52846  0151E4  0E40               	movlw	64
 52847  0151E6  6E04               	movwf	i2USBTransferOnePacket@len,c
 52848  0151E8  0E01               	movlw	1
 52849  0151EA  EC36  F089         	call	i2_USBTransferOnePacket
 52850  0151EE  C001  F143         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 52851  0151F2  C002  F144         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 52852  0151F6  0012               	return		;funcret
 52853  0151F8                     __end_of_APP_DeviceCustomHIDInitialize:
 52854                           	opt stack 0
 52855                           tosu	equ	0xFFF
 52856                           tosh	equ	0xFFE
 52857                           tosl	equ	0xFFD
 52858                           pclatu	equ	0xFFB
 52859                           pclath	equ	0xFFA
 52860                           tblptru	equ	0xFF8
 52861                           tblptrh	equ	0xFF7
 52862                           tblptrl	equ	0xFF6
 52863                           tablat	equ	0xFF5
 52864                           prodh	equ	0xFF4
 52865                           prodl	equ	0xFF3
 52866                           intcon	equ	0xFF2
 52867                           indf0	equ	0xFEF
 52868                           postinc0	equ	0xFEE
 52869                           fsr0h	equ	0xFEA
 52870                           fsr0l	equ	0xFE9
 52871                           wreg	equ	0xFE8
 52872                           indf1	equ	0xFE7
 52873                           postinc1	equ	0xFE6
 52874                           postdec1	equ	0xFE5
 52875                           plusw1	equ	0xFE3
 52876                           fsr1h	equ	0xFE2
 52877                           fsr1l	equ	0xFE1
 52878                           indf2	equ	0xFDF
 52879                           postinc2	equ	0xFDE
 52880                           postdec2	equ	0xFDD
 52881                           plusw2	equ	0xFDB
 52882                           fsr2h	equ	0xFDA
 52883                           fsr2l	equ	0xFD9
 52884                           status	equ	0xFD8
 52885                           
 52886 ;; *************** function i2_USBTransferOnePacket *****************
 52887 ;; Defined at:
 52888 ;;		line 995 in file "usb_device.c"
 52889 ;; Parameters:    Size  Location     Type
 52890 ;;  ep              1    wreg     unsigned char 
 52891 ;;  dir             1    0[COMRAM] unsigned char 
 52892 ;;  data            2    1[COMRAM] PTR unsigned char 
 52893 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 52894 ;;		 -> msd_cbw(31), NULL(0), 
 52895 ;;  len             1    3[COMRAM] unsigned char 
 52896 ;; Auto vars:     Size  Location     Type
 52897 ;;  ep              1    8[COMRAM] unsigned char 
 52898 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 52899 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52900 ;; Return value:  Size  Location     Type
 52901 ;;                  2    0[COMRAM] PTR void 
 52902 ;; Registers used:
 52903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52904 ;; Tracked objects:
 52905 ;;		On entry : 0/0
 52906 ;;		On exit  : 0/0
 52907 ;;		Unchanged: 0/0
 52908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52910 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52912 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52913 ;;Total ram usage:       11 bytes
 52914 ;; Hardware stack levels used:    1
 52915 ;; This function calls:
 52916 ;;		Nothing
 52917 ;; This function is called by:
 52918 ;;		_USBMSDInit
 52919 ;;		_USBCheckMSDRequest
 52920 ;;		_MSDTransferTerminated
 52921 ;;		_APP_DeviceCustomHIDInitialize
 52922 ;; This function uses a non-reentrant model
 52923 ;;
 52924                           
 52925                           	psect	text220
 52926  01126C                     __ptext220:
 52927                           	opt stack 0
 52928  01126C                     i2_USBTransferOnePacket:
 52929                           	opt stack 14
 52930                           
 52931                           ;incstack = 0
 52932                           ;i2USBTransferOnePacket@ep stored from wreg
 52933  01126C  6E09               	movwf	i2USBTransferOnePacket@ep,c
 52934                           
 52935                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 52936  01126E  5001               	movf	i2USBTransferOnePacket@dir,w,c
 52937  011270  B4D8               	btfsc	status,2,c
 52938  011272  D007               	goto	i2l184
 52939                           
 52940                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 52941  011274  5009               	movf	i2USBTransferOnePacket@ep,w,c
 52942  011276  0D02               	mullw	2
 52943  011278  0E1B               	movlw	low _pBDTEntryIn
 52944  01127A  24F3               	addwf	prodl,w,c
 52945  01127C  6ED9               	movwf	fsr2l,c
 52946  01127E  0E01               	movlw	high _pBDTEntryIn
 52947  011280  D006               	goto	L84
 52948  011282                     i2l184:
 52949                           
 52950                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 52951  011282  5009               	movf	i2USBTransferOnePacket@ep,w,c
 52952  011284  0D02               	mullw	2
 52953  011286  0E21               	movlw	low _pBDTEntryOut
 52954  011288  24F3               	addwf	prodl,w,c
 52955  01128A  6ED9               	movwf	fsr2l,c
 52956  01128C  0E01               	movlw	high _pBDTEntryOut
 52957  01128E                     L84:
 52958  01128E  20F4               	addwfc	prodh,w,c
 52959  011290  6EDA               	movwf	fsr2h,c
 52960  011292  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 52961  011296  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 52962                           
 52963                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 52964  01129A  500A               	movf	i2USBTransferOnePacket@handle,w,c
 52965  01129C  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 52966  01129E  A4D8               	btfss	status,2,c
 52967  0112A0  D005               	goto	i2l186
 52968                           
 52969                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 52970  0112A2  0E00               	movlw	0
 52971  0112A4  6E01               	movwf	?i2_USBTransferOnePacket,c
 52972  0112A6  0E00               	movlw	0
 52973  0112A8  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 52974  0112AA  0012               	return	
 52975  0112AC                     i2l186:
 52976                           
 52977                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 52978  0112AC  EE20 F002          	lfsr	2,2
 52979  0112B0  500A               	movf	i2USBTransferOnePacket@handle,w,c
 52980  0112B2  26D9               	addwf	fsr2l,f,c
 52981  0112B4  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 52982  0112B6  22DA               	addwfc	fsr2h,f,c
 52983  0112B8  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 52984  0112BC  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 52985                           
 52986                           ;usb_device.c: 1030: handle->CNT = len;
 52987  0112C0  EE20 F001          	lfsr	2,1
 52988  0112C4  500A               	movf	i2USBTransferOnePacket@handle,w,c
 52989  0112C6  26D9               	addwf	fsr2l,f,c
 52990  0112C8  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 52991  0112CA  22DA               	addwfc	fsr2h,f,c
 52992  0112CC  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 52993                           
 52994                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 52995  0112D0  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 52996  0112D4  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 52997  0112D8  0E40               	movlw	64
 52998  0112DA  16DF               	andwf	indf2,f,c
 52999                           
 53000                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 53001  0112DC  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53002  0112E0  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53003  0112E4  0E00               	movlw	0
 53004  0112E6  86DB               	bsf	plusw2,3,c
 53005                           
 53006                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 53007  0112E8  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53008  0112EC  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53009  0112F0  0E00               	movlw	0
 53010  0112F2  8EDB               	bsf	plusw2,7,c
 53011                           
 53012                           ;usb_device.c: 1036: if(dir != 0)
 53013  0112F4  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53014  0112F6  B4D8               	btfsc	status,2,c
 53015  0112F8  D018               	goto	i2l188
 53016                           
 53017                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 53018  0112FA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53019  0112FC  0D02               	mullw	2
 53020  0112FE  0E1B               	movlw	low _pBDTEntryIn
 53021  011300  24F3               	addwf	prodl,w,c
 53022  011302  6ED9               	movwf	fsr2l,c
 53023  011304  0E01               	movlw	high _pBDTEntryIn
 53024  011306  20F4               	addwfc	prodh,w,c
 53025  011308  6EDA               	movwf	fsr2h,c
 53026  01130A  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53027  01130E  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53028  011312  0E04               	movlw	4
 53029  011314  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53030  011316  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53031  011318  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53032  01131A  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53033  01131C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53034  01131E  0D02               	mullw	2
 53035  011320  0E1B               	movlw	low _pBDTEntryIn
 53036  011322  24F3               	addwf	prodl,w,c
 53037  011324  6ED9               	movwf	fsr2l,c
 53038  011326  0E01               	movlw	high _pBDTEntryIn
 53039  011328  D017               	goto	L85
 53040  01132A                     i2l188:
 53041                           
 53042                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 53043  01132A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53044  01132C  0D02               	mullw	2
 53045  01132E  0E21               	movlw	low _pBDTEntryOut
 53046  011330  24F3               	addwf	prodl,w,c
 53047  011332  6ED9               	movwf	fsr2l,c
 53048  011334  0E01               	movlw	high _pBDTEntryOut
 53049  011336  20F4               	addwfc	prodh,w,c
 53050  011338  6EDA               	movwf	fsr2h,c
 53051  01133A  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53052  01133E  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53053  011342  0E04               	movlw	4
 53054  011344  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53055  011346  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53056  011348  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53057  01134A  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53058  01134C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53059  01134E  0D02               	mullw	2
 53060  011350  0E21               	movlw	low _pBDTEntryOut
 53061  011352  24F3               	addwf	prodl,w,c
 53062  011354  6ED9               	movwf	fsr2l,c
 53063  011356  0E01               	movlw	high _pBDTEntryOut
 53064  011358                     L85:
 53065  011358  20F4               	addwfc	prodh,w,c
 53066  01135A  6EDA               	movwf	fsr2h,c
 53067  01135C  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 53068  011360  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 53069                           
 53070                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 53071  011364  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 53072  011368  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 53073  01136C  0012               	return	
 53074  01136E                     __end_ofi2_USBTransferOnePacket:
 53075                           	opt stack 0
 53076                           tosu	equ	0xFFF
 53077                           tosh	equ	0xFFE
 53078                           tosl	equ	0xFFD
 53079                           pclatu	equ	0xFFB
 53080                           pclath	equ	0xFFA
 53081                           tblptru	equ	0xFF8
 53082                           tblptrh	equ	0xFF7
 53083                           tblptrl	equ	0xFF6
 53084                           tablat	equ	0xFF5
 53085                           prodh	equ	0xFF4
 53086                           prodl	equ	0xFF3
 53087                           intcon	equ	0xFF2
 53088                           indf0	equ	0xFEF
 53089                           postinc0	equ	0xFEE
 53090                           fsr0h	equ	0xFEA
 53091                           fsr0l	equ	0xFE9
 53092                           wreg	equ	0xFE8
 53093                           indf1	equ	0xFE7
 53094                           postinc1	equ	0xFE6
 53095                           postdec1	equ	0xFE5
 53096                           plusw1	equ	0xFE3
 53097                           fsr1h	equ	0xFE2
 53098                           fsr1l	equ	0xFE1
 53099                           indf2	equ	0xFDF
 53100                           postinc2	equ	0xFDE
 53101                           postdec2	equ	0xFDD
 53102                           plusw2	equ	0xFDB
 53103                           fsr2h	equ	0xFDA
 53104                           fsr2l	equ	0xFD9
 53105                           status	equ	0xFD8
 53106                           
 53107 ;; *************** function _USBEnableEndpoint *****************
 53108 ;; Defined at:
 53109 ;;		line 878 in file "usb_device.c"
 53110 ;; Parameters:    Size  Location     Type
 53111 ;;  ep              1    wreg     unsigned char 
 53112 ;;  options         1    8[COMRAM] unsigned char 
 53113 ;; Auto vars:     Size  Location     Type
 53114 ;;  ep              1   11[COMRAM] unsigned char 
 53115 ;;  p               2    9[COMRAM] PTR unsigned char 
 53116 ;;		 -> UEP0(1), 
 53117 ;; Return value:  Size  Location     Type
 53118 ;;                  1    wreg      void 
 53119 ;; Registers used:
 53120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53121 ;; Tracked objects:
 53122 ;;		On entry : 0/0
 53123 ;;		On exit  : 0/0
 53124 ;;		Unchanged: 0/0
 53125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53126 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53127 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53130 ;;Total ram usage:        4 bytes
 53131 ;; Hardware stack levels used:    1
 53132 ;; Hardware stack levels required when called:    1
 53133 ;; This function calls:
 53134 ;;		_USBConfigureEndpoint
 53135 ;; This function is called by:
 53136 ;;		_APP_DeviceCustomHIDInitialize
 53137 ;;		_APP_DeviceMSDInitialize
 53138 ;; This function uses a non-reentrant model
 53139 ;;
 53140                           
 53141                           	psect	text221
 53142  014F9A                     __ptext221:
 53143                           	opt stack 0
 53144  014F9A                     _USBEnableEndpoint:
 53145                           	opt stack 13
 53146                           
 53147                           ;incstack = 0
 53148                           ;USBEnableEndpoint@ep stored from wreg
 53149  014F9A  6E0C               	movwf	USBEnableEndpoint@ep,c
 53150                           
 53151                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 53152  014F9C  A409               	btfss	USBEnableEndpoint@options,2,c
 53153  014F9E  D005               	goto	i2l179
 53154                           
 53155                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 53156  014FA0  0E00               	movlw	0
 53157  014FA2  6E01               	movwf	USBConfigureEndpoint@direction,c
 53158  014FA4  500C               	movf	USBEnableEndpoint@ep,w,c
 53159  014FA6  EC18  F09B         	call	_USBConfigureEndpoint
 53160  014FAA                     i2l179:
 53161                           
 53162                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 53163  014FAA  A209               	btfss	USBEnableEndpoint@options,1,c
 53164  014FAC  D005               	goto	i2l180
 53165                           
 53166                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 53167  014FAE  0E01               	movlw	1
 53168  014FB0  6E01               	movwf	USBConfigureEndpoint@direction,c
 53169  014FB2  500C               	movf	USBEnableEndpoint@ep,w,c
 53170  014FB4  EC18  F09B         	call	_USBConfigureEndpoint
 53171  014FB8                     i2l180:
 53172                           
 53173                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 53174  014FB8  500C               	movf	USBEnableEndpoint@ep,w,c
 53175  014FBA  0D01               	mullw	1
 53176  014FBC  0E26               	movlw	38
 53177  014FBE  24F3               	addwf	prodl,w,c
 53178  014FC0  6E0A               	movwf	USBEnableEndpoint@p,c
 53179  014FC2  0E0F               	movlw	15
 53180  014FC4  20F4               	addwfc	prodh,w,c
 53181  014FC6  6E0B               	movwf	USBEnableEndpoint@p+1,c
 53182                           
 53183                           ;usb_device.c: 901: *p = options;
 53184  014FC8  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 53185  014FCC  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 53186  014FD0  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 53187  014FD4  0012               	return		;funcret
 53188  014FD6                     __end_of_USBEnableEndpoint:
 53189                           	opt stack 0
 53190                           tosu	equ	0xFFF
 53191                           tosh	equ	0xFFE
 53192                           tosl	equ	0xFFD
 53193                           pclatu	equ	0xFFB
 53194                           pclath	equ	0xFFA
 53195                           tblptru	equ	0xFF8
 53196                           tblptrh	equ	0xFF7
 53197                           tblptrl	equ	0xFF6
 53198                           tablat	equ	0xFF5
 53199                           prodh	equ	0xFF4
 53200                           prodl	equ	0xFF3
 53201                           intcon	equ	0xFF2
 53202                           indf0	equ	0xFEF
 53203                           postinc0	equ	0xFEE
 53204                           fsr0h	equ	0xFEA
 53205                           fsr0l	equ	0xFE9
 53206                           wreg	equ	0xFE8
 53207                           indf1	equ	0xFE7
 53208                           postinc1	equ	0xFE6
 53209                           postdec1	equ	0xFE5
 53210                           plusw1	equ	0xFE3
 53211                           fsr1h	equ	0xFE2
 53212                           fsr1l	equ	0xFE1
 53213                           indf2	equ	0xFDF
 53214                           postinc2	equ	0xFDE
 53215                           postdec2	equ	0xFDD
 53216                           plusw2	equ	0xFDB
 53217                           fsr2h	equ	0xFDA
 53218                           fsr2l	equ	0xFD9
 53219                           status	equ	0xFD8
 53220                           
 53221 ;; *************** function _USBConfigureEndpoint *****************
 53222 ;; Defined at:
 53223 ;;		line 1545 in file "usb_device.c"
 53224 ;; Parameters:    Size  Location     Type
 53225 ;;  EPNum           1    wreg     unsigned char 
 53226 ;;  direction       1    0[COMRAM] unsigned char 
 53227 ;; Auto vars:     Size  Location     Type
 53228 ;;  EPNum           1    5[COMRAM] unsigned char 
 53229 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 53230 ;;		 -> BDT(48), 
 53231 ;; Return value:  Size  Location     Type
 53232 ;;                  1    wreg      void 
 53233 ;; Registers used:
 53234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53235 ;; Tracked objects:
 53236 ;;		On entry : 0/0
 53237 ;;		On exit  : 0/0
 53238 ;;		Unchanged: 0/0
 53239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53240 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53241 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53243 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53244 ;;Total ram usage:        8 bytes
 53245 ;; Hardware stack levels used:    1
 53246 ;; This function calls:
 53247 ;;		Nothing
 53248 ;; This function is called by:
 53249 ;;		_USBEnableEndpoint
 53250 ;; This function uses a non-reentrant model
 53251 ;;
 53252                           
 53253                           	psect	text222
 53254  013630                     __ptext222:
 53255                           	opt stack 0
 53256  013630                     _USBConfigureEndpoint:
 53257                           	opt stack 13
 53258                           
 53259                           ;incstack = 0
 53260                           ;USBConfigureEndpoint@EPNum stored from wreg
 53261  013630  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 53262                           
 53263                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 53264  013632  0E00               	movlw	0
 53265  013634  6E07               	movwf	USBConfigureEndpoint@handle,c
 53266  013636  0E0D               	movlw	13
 53267  013638  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 53268                           
 53269                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 53270  01363A  5001               	movf	USBConfigureEndpoint@direction,w,c
 53271  01363C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 53272  01363E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 53273  013640  90D8               	bcf	status,0,c
 53274  013642  3602               	rlcf	??_USBConfigureEndpoint,f,c
 53275  013644  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 53276  013646  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53277  013648  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 53278  01364A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 53279  01364C  90D8               	bcf	status,0,c
 53280  01364E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53281  013650  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53282  013652  90D8               	bcf	status,0,c
 53283  013654  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53284  013656  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53285  013658  5002               	movf	??_USBConfigureEndpoint,w,c
 53286  01365A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 53287  01365C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 53288  01365E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 53289  013660  90D8               	bcf	status,0,c
 53290  013662  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53291  013664  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53292  013666  90D8               	bcf	status,0,c
 53293  013668  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53294  01366A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53295  01366C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 53296  01366E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 53297  013670  5005               	movf	??_USBConfigureEndpoint+3,w,c
 53298  013672  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 53299                           
 53300                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 53301  013674  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 53302  013678  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 53303  01367C  9EDF               	bcf	indf2,7,c
 53304                           
 53305                           ;usb_device.c: 1559: if(direction == 0)
 53306  01367E  5001               	movf	USBConfigureEndpoint@direction,w,c
 53307  013680  A4D8               	btfss	status,2,c
 53308  013682  D007               	goto	i2l226
 53309                           
 53310                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 53311  013684  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53312  013686  0D02               	mullw	2
 53313  013688  0E21               	movlw	low _pBDTEntryOut
 53314  01368A  24F3               	addwf	prodl,w,c
 53315  01368C  6ED9               	movwf	fsr2l,c
 53316  01368E  0E01               	movlw	high _pBDTEntryOut
 53317  013690  D006               	goto	L86
 53318  013692                     i2l226:
 53319                           
 53320                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 53321  013692  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53322  013694  0D02               	mullw	2
 53323  013696  0E1B               	movlw	low _pBDTEntryIn
 53324  013698  24F3               	addwf	prodl,w,c
 53325  01369A  6ED9               	movwf	fsr2l,c
 53326  01369C  0E01               	movlw	high _pBDTEntryIn
 53327  01369E                     L86:
 53328  01369E  20F4               	addwfc	prodh,w,c
 53329  0136A0  6EDA               	movwf	fsr2h,c
 53330  0136A2  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 53331  0136A6  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 53332                           
 53333                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 53334  0136AA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 53335  0136AE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 53336  0136B2  9CDF               	bcf	indf2,6,c
 53337                           
 53338                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 53339  0136B4  EE20 F004          	lfsr	2,4
 53340  0136B8  5007               	movf	USBConfigureEndpoint@handle,w,c
 53341  0136BA  26D9               	addwf	fsr2l,f,c
 53342  0136BC  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 53343  0136BE  22DA               	addwfc	fsr2h,f,c
 53344  0136C0  8CDF               	bsf	indf2,6,c
 53345  0136C2  0012               	return		;funcret
 53346  0136C4                     __end_of_USBConfigureEndpoint:
 53347                           	opt stack 0
 53348                           tosu	equ	0xFFF
 53349                           tosh	equ	0xFFE
 53350                           tosl	equ	0xFFD
 53351                           pclatu	equ	0xFFB
 53352                           pclath	equ	0xFFA
 53353                           tblptru	equ	0xFF8
 53354                           tblptrh	equ	0xFF7
 53355                           tblptrl	equ	0xFF6
 53356                           tablat	equ	0xFF5
 53357                           prodh	equ	0xFF4
 53358                           prodl	equ	0xFF3
 53359                           intcon	equ	0xFF2
 53360                           indf0	equ	0xFEF
 53361                           postinc0	equ	0xFEE
 53362                           fsr0h	equ	0xFEA
 53363                           fsr0l	equ	0xFE9
 53364                           wreg	equ	0xFE8
 53365                           indf1	equ	0xFE7
 53366                           postinc1	equ	0xFE6
 53367                           postdec1	equ	0xFE5
 53368                           plusw1	equ	0xFE3
 53369                           fsr1h	equ	0xFE2
 53370                           fsr1l	equ	0xFE1
 53371                           indf2	equ	0xFDF
 53372                           postinc2	equ	0xFDE
 53373                           postdec2	equ	0xFDD
 53374                           plusw2	equ	0xFDB
 53375                           fsr2h	equ	0xFDA
 53376                           fsr2l	equ	0xFD9
 53377                           status	equ	0xFD8
 53378                           
 53379 ;; *************** function _USBCtrlTrfOutHandler *****************
 53380 ;; Defined at:
 53381 ;;		line 2540 in file "usb_device.c"
 53382 ;; Parameters:    Size  Location     Type
 53383 ;;		None
 53384 ;; Auto vars:     Size  Location     Type
 53385 ;;		None
 53386 ;; Return value:  Size  Location     Type
 53387 ;;                  1    wreg      void 
 53388 ;; Registers used:
 53389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53390 ;; Tracked objects:
 53391 ;;		On entry : 0/0
 53392 ;;		On exit  : 0/0
 53393 ;;		Unchanged: 0/0
 53394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53399 ;;Total ram usage:        0 bytes
 53400 ;; Hardware stack levels used:    1
 53401 ;; Hardware stack levels required when called:    2
 53402 ;; This function calls:
 53403 ;;		_USBCtrlTrfRxService
 53404 ;; This function is called by:
 53405 ;;		_USBCtrlEPService
 53406 ;; This function uses a non-reentrant model
 53407 ;;
 53408                           
 53409                           	psect	text223
 53410  01430E                     __ptext223:
 53411                           	opt stack 0
 53412  01430E                     _USBCtrlTrfOutHandler:
 53413                           	opt stack 13
 53414                           
 53415                           ;usb_device.c: 2542: if(controlTransferState == 2)
 53416                           
 53417                           ;incstack = 0
 53418  01430E  0E02               	movlw	2
 53419  014310  0101               	movlb	1	; () banked
 53420  014312  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 53421  014314  A4D8               	btfss	status,2,c
 53422  014316  D003               	goto	i2l332
 53423                           
 53424                           ; BSR set to: 1
 53425                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 53426  014318  EC24  F087         	call	_USBCtrlTrfRxService	;wreg free
 53427                           
 53428                           ;usb_device.c: 2545: }
 53429  01431C  0012               	return	
 53430  01431E                     i2l332:
 53431                           
 53432                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 53433  01431E  0E00               	movlw	0
 53434  014320  0101               	movlb	1	; () banked
 53435  014322  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 53436                           
 53437                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 53438  014324  516B               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 53439  014326  A4D8               	btfss	status,2,c
 53440  014328  D01F               	goto	i2l334
 53441                           
 53442                           ; BSR set to: 1
 53443                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 53444  01432A  EE20 F001          	lfsr	2,1
 53445  01432E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53446  014330  26D9               	addwf	fsr2l,f,c
 53447  014332  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53448  014334  22DA               	addwfc	fsr2h,f,c
 53449  014336  0E08               	movlw	8
 53450  014338  6EDF               	movwf	indf2,c
 53451                           
 53452                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53453  01433A  EE20 F002          	lfsr	2,2
 53454  01433E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53455  014340  26D9               	addwf	fsr2l,f,c
 53456  014342  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53457  014344  22DA               	addwfc	fsr2h,f,c
 53458  014346  0E30               	movlw	48
 53459  014348  6EDE               	movwf	postinc2,c
 53460  01434A  0E0D               	movlw	13
 53461  01434C  6EDD               	movwf	postdec2,c
 53462                           
 53463                           ; BSR set to: 1
 53464                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 53465  01434E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53466  014352  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53467  014356  0E0C               	movlw	12
 53468  014358  6EDF               	movwf	indf2,c
 53469                           
 53470                           ; BSR set to: 1
 53471                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53472  01435A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53473  01435E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53474  014362  0E00               	movlw	0
 53475  014364  8EDB               	bsf	plusw2,7,c
 53476                           
 53477                           ;usb_device.c: 2563: }
 53478  014366  0012               	return	
 53479  014368                     i2l334:
 53480                           
 53481                           ; BSR set to: 1
 53482                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 53483                           
 53484                           ; BSR set to: 1
 53485  014368  0E00               	movlw	0
 53486  01436A  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 53487                           
 53488                           ; BSR set to: 1
 53489  01436C  0012               	return	
 53490  01436E                     __end_of_USBCtrlTrfOutHandler:
 53491                           	opt stack 0
 53492                           tosu	equ	0xFFF
 53493                           tosh	equ	0xFFE
 53494                           tosl	equ	0xFFD
 53495                           pclatu	equ	0xFFB
 53496                           pclath	equ	0xFFA
 53497                           tblptru	equ	0xFF8
 53498                           tblptrh	equ	0xFF7
 53499                           tblptrl	equ	0xFF6
 53500                           tablat	equ	0xFF5
 53501                           prodh	equ	0xFF4
 53502                           prodl	equ	0xFF3
 53503                           intcon	equ	0xFF2
 53504                           indf0	equ	0xFEF
 53505                           postinc0	equ	0xFEE
 53506                           fsr0h	equ	0xFEA
 53507                           fsr0l	equ	0xFE9
 53508                           wreg	equ	0xFE8
 53509                           indf1	equ	0xFE7
 53510                           postinc1	equ	0xFE6
 53511                           postdec1	equ	0xFE5
 53512                           plusw1	equ	0xFE3
 53513                           fsr1h	equ	0xFE2
 53514                           fsr1l	equ	0xFE1
 53515                           indf2	equ	0xFDF
 53516                           postinc2	equ	0xFDE
 53517                           postdec2	equ	0xFDD
 53518                           plusw2	equ	0xFDB
 53519                           fsr2h	equ	0xFDA
 53520                           fsr2l	equ	0xFD9
 53521                           status	equ	0xFD8
 53522                           
 53523 ;; *************** function _USBCtrlTrfRxService *****************
 53524 ;; Defined at:
 53525 ;;		line 1854 in file "usb_device.c"
 53526 ;; Parameters:    Size  Location     Type
 53527 ;;		None
 53528 ;; Auto vars:     Size  Location     Type
 53529 ;;  byteToRead      1    1[COMRAM] unsigned char 
 53530 ;;  i               1    0[COMRAM] unsigned char 
 53531 ;; Return value:  Size  Location     Type
 53532 ;;                  1    wreg      void 
 53533 ;; Registers used:
 53534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53535 ;; Tracked objects:
 53536 ;;		On entry : 0/0
 53537 ;;		On exit  : 0/0
 53538 ;;		Unchanged: 0/0
 53539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53544 ;;Total ram usage:        2 bytes
 53545 ;; Hardware stack levels used:    1
 53546 ;; Hardware stack levels required when called:    1
 53547 ;; This function calls:
 53548 ;;		_USBCtrlEPAllowStatusStage
 53549 ;; This function is called by:
 53550 ;;		_USBCtrlTrfOutHandler
 53551 ;; This function uses a non-reentrant model
 53552 ;;
 53553                           
 53554                           	psect	text224
 53555  010E48                     __ptext224:
 53556                           	opt stack 0
 53557  010E48                     _USBCtrlTrfRxService:
 53558                           	opt stack 13
 53559                           
 53560                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 53561                           
 53562                           ;incstack = 0
 53563  010E48  0101               	movlb	1	; () banked
 53564  010E4A  EE20 F001          	lfsr	2,1
 53565  010E4E  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 53566  010E50  26D9               	addwf	fsr2l,f,c
 53567  010E52  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 53568  010E54  22DA               	addwfc	fsr2h,f,c
 53569  010E56  50DF               	movf	indf2,w,c
 53570  010E58  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 53571                           
 53572                           ; BSR set to: 1
 53573                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 53574  010E5A  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53575  010E5C  5D16               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 53576  010E5E  0E00               	movlw	0
 53577  010E60  5917               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 53578  010E62  A0D8               	btfss	status,0,c
 53579                           
 53580                           ; BSR set to: 1
 53581                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 53582  010E64  C116  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 53583                           
 53584                           ; BSR set to: 1
 53585                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 53586                           
 53587                           ; BSR set to: 1
 53588  010E68  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53589  010E6A  5F16               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 53590  010E6C  0E00               	movlw	0
 53591  010E6E  5B17               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 53592                           
 53593                           ; BSR set to: 1
 53594                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 53595  010E70  0E00               	movlw	0
 53596  010E72  6E01               	movwf	USBCtrlTrfRxService@i,c
 53597  010E74  D011               	goto	i2l260
 53598  010E76                     
 53599                           ; BSR set to: 1
 53600                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 53601                           
 53602                           ; BSR set to: 1
 53603  010E76  5001               	movf	USBCtrlTrfRxService@i,w,c
 53604  010E78  0D01               	mullw	1
 53605  010E7A  0E38               	movlw	56
 53606  010E7C  24F3               	addwf	prodl,w,c
 53607  010E7E  6ED9               	movwf	fsr2l,c
 53608  010E80  0E0D               	movlw	13
 53609  010E82  20F4               	addwfc	prodh,w,c
 53610  010E84  6EDA               	movwf	fsr2h,c
 53611  010E86  C112  FFE1         	movff	_outPipes,fsr1l	;volatile
 53612  010E8A  C113  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 53613  010E8E  CFDF FFE7          	movff	indf2,indf1
 53614                           
 53615                           ; BSR set to: 1
 53616  010E92  4B12               	infsnz	_outPipes& (0+255),f,b	;volatile
 53617  010E94  2B13               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 53618                           
 53619                           ; BSR set to: 1
 53620  010E96  2A01               	incf	USBCtrlTrfRxService@i,f,c
 53621  010E98                     i2l260:
 53622                           
 53623                           ; BSR set to: 1
 53624                           
 53625                           ; BSR set to: 1
 53626  010E98  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53627  010E9A  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 53628  010E9C  A0D8               	btfss	status,0,c
 53629  010E9E  D7EB               	goto	i2l261
 53630                           
 53631                           ; BSR set to: 1
 53632                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 53633                           
 53634                           ; BSR set to: 1
 53635  010EA0  5116               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 53636  010EA2  1117               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 53637  010EA4  B4D8               	btfsc	status,2,c
 53638  010EA6  D032               	goto	i2l263
 53639                           
 53640                           ; BSR set to: 1
 53641                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 53642  010EA8  EE20 F001          	lfsr	2,1
 53643  010EAC  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53644  010EAE  26D9               	addwf	fsr2l,f,c
 53645  010EB0  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53646  010EB2  22DA               	addwfc	fsr2h,f,c
 53647  010EB4  0E08               	movlw	8
 53648  010EB6  6EDF               	movwf	indf2,c
 53649                           
 53650                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 53651  010EB8  EE20 F002          	lfsr	2,2
 53652  010EBC  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53653  010EBE  26D9               	addwf	fsr2l,f,c
 53654  010EC0  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53655  010EC2  22DA               	addwfc	fsr2h,f,c
 53656  010EC4  0E38               	movlw	56
 53657  010EC6  6EDE               	movwf	postinc2,c
 53658  010EC8  0E0D               	movlw	13
 53659  010ECA  6EDD               	movwf	postdec2,c
 53660                           
 53661                           ; BSR set to: 1
 53662                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 53663  010ECC  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 53664  010ED0  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 53665  010ED4  BCDF               	btfsc	indf2,6,c
 53666  010ED6  D00D               	goto	i2l264
 53667                           
 53668                           ; BSR set to: 1
 53669                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 53670  010ED8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53671  010EDC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53672  010EE0  0E48               	movlw	72
 53673  010EE2  6EDF               	movwf	indf2,c
 53674                           
 53675                           ; BSR set to: 1
 53676                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53677  010EE4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53678  010EE8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53679  010EEC  0E00               	movlw	0
 53680  010EEE  8EDB               	bsf	plusw2,7,c
 53681                           
 53682                           ;usb_device.c: 1891: }
 53683  010EF0  0012               	return	
 53684  010EF2                     i2l264:
 53685                           
 53686                           ; BSR set to: 1
 53687                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 53688                           
 53689                           ; BSR set to: 1
 53690  010EF2  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53691  010EF6  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53692  010EFA  0E08               	movlw	8
 53693  010EFC  6EDF               	movwf	indf2,c
 53694                           
 53695                           ; BSR set to: 1
 53696                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53697  010EFE  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53698  010F02  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53699  010F06  0E00               	movlw	0
 53700  010F08  8EDB               	bsf	plusw2,7,c
 53701                           
 53702                           ; BSR set to: 1
 53703                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 53704  010F0A  0012               	return	
 53705  010F0C                     i2l263:
 53706                           
 53707                           ; BSR set to: 1
 53708                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 53709                           
 53710                           ; BSR set to: 1
 53711  010F0C  EE20 F001          	lfsr	2,1
 53712  010F10  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53713  010F12  26D9               	addwf	fsr2l,f,c
 53714  010F14  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53715  010F16  22DA               	addwfc	fsr2h,f,c
 53716  010F18  0E08               	movlw	8
 53717  010F1A  6EDF               	movwf	indf2,c
 53718                           
 53719                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53720  010F1C  EE20 F002          	lfsr	2,2
 53721  010F20  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53722  010F22  26D9               	addwf	fsr2l,f,c
 53723  010F24  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53724  010F26  22DA               	addwfc	fsr2h,f,c
 53725  010F28  0E30               	movlw	48
 53726  010F2A  6EDE               	movwf	postinc2,c
 53727  010F2C  0E0D               	movlw	13
 53728  010F2E  6EDD               	movwf	postdec2,c
 53729                           
 53730                           ; BSR set to: 1
 53731                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 53732  010F30  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53733  010F34  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53734  010F38  0E04               	movlw	4
 53735  010F3A  6EDF               	movwf	indf2,c
 53736                           
 53737                           ; BSR set to: 1
 53738                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53739  010F3C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53740  010F40  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53741  010F44  0E00               	movlw	0
 53742  010F46  8EDB               	bsf	plusw2,7,c
 53743                           
 53744                           ; BSR set to: 1
 53745                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 53746                           
 53747                           ; BSR set to: 1
 53748                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 53749  010F48  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 53750                           
 53751                           ; BSR set to: 1
 53752                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 53753  010F4A  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 53754  010F4C  A4D8               	btfss	status,2,c
 53755  010F4E  0012               	return	
 53756                           
 53757                           ; BSR set to: 1
 53758                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 53759  010F50  EC68  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 53760  010F54  0012               	return	
 53761  010F56                     __end_of_USBCtrlTrfRxService:
 53762                           	opt stack 0
 53763                           tosu	equ	0xFFF
 53764                           tosh	equ	0xFFE
 53765                           tosl	equ	0xFFD
 53766                           pclatu	equ	0xFFB
 53767                           pclath	equ	0xFFA
 53768                           tblptru	equ	0xFF8
 53769                           tblptrh	equ	0xFF7
 53770                           tblptrl	equ	0xFF6
 53771                           tablat	equ	0xFF5
 53772                           prodh	equ	0xFF4
 53773                           prodl	equ	0xFF3
 53774                           intcon	equ	0xFF2
 53775                           indf0	equ	0xFEF
 53776                           postinc0	equ	0xFEE
 53777                           fsr0h	equ	0xFEA
 53778                           fsr0l	equ	0xFE9
 53779                           wreg	equ	0xFE8
 53780                           indf1	equ	0xFE7
 53781                           postinc1	equ	0xFE6
 53782                           postdec1	equ	0xFE5
 53783                           plusw1	equ	0xFE3
 53784                           fsr1h	equ	0xFE2
 53785                           fsr1l	equ	0xFE1
 53786                           indf2	equ	0xFDF
 53787                           postinc2	equ	0xFDE
 53788                           postdec2	equ	0xFDD
 53789                           plusw2	equ	0xFDB
 53790                           fsr2h	equ	0xFDA
 53791                           fsr2l	equ	0xFD9
 53792                           status	equ	0xFD8
 53793                           
 53794 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 53795 ;; Defined at:
 53796 ;;		line 1418 in file "usb_device.c"
 53797 ;; Parameters:    Size  Location     Type
 53798 ;;		None
 53799 ;; Auto vars:     Size  Location     Type
 53800 ;;		None
 53801 ;; Return value:  Size  Location     Type
 53802 ;;                  1    wreg      void 
 53803 ;; Registers used:
 53804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53805 ;; Tracked objects:
 53806 ;;		On entry : 0/0
 53807 ;;		On exit  : 0/0
 53808 ;;		Unchanged: 0/0
 53809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53814 ;;Total ram usage:        0 bytes
 53815 ;; Hardware stack levels used:    1
 53816 ;; This function calls:
 53817 ;;		Nothing
 53818 ;; This function is called by:
 53819 ;;		_USBDeviceTasks
 53820 ;;		_USBCtrlEPServiceComplete
 53821 ;;		_USBCtrlTrfRxService
 53822 ;; This function uses a non-reentrant model
 53823 ;;
 53824                           
 53825                           	psect	text225
 53826  0128D0                     __ptext225:
 53827                           	opt stack 0
 53828  0128D0                     _USBCtrlEPAllowStatusStage:
 53829                           	opt stack 13
 53830                           
 53831                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 53832                           
 53833                           ;incstack = 0
 53834  0128D0  0101               	movlb	1	; () banked
 53835  0128D2  5168               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 53836  0128D4  A4D8               	btfss	status,2,c
 53837  0128D6  0012               	return	
 53838                           
 53839                           ; BSR set to: 1
 53840                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 53841  0128D8  0E01               	movlw	1
 53842  0128DA  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 53843                           
 53844                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 53845  0128DC  5167               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 53846  0128DE  A4D8               	btfss	status,2,c
 53847  0128E0  0012               	return	
 53848                           
 53849                           ; BSR set to: 1
 53850                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 53851  0128E2  0E01               	movlw	1
 53852  0128E4  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 53853                           
 53854                           ; BSR set to: 1
 53855                           ;usb_device.c: 1434: if(controlTransferState == 2)
 53856  0128E6  0E02               	movlw	2
 53857  0128E8  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 53858  0128EA  A4D8               	btfss	status,2,c
 53859  0128EC  D015               	goto	i2l214
 53860                           
 53861                           ; BSR set to: 1
 53862                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 53863  0128EE  EE20 F001          	lfsr	2,1
 53864  0128F2  511B               	movf	_pBDTEntryIn& (0+255),w,b
 53865  0128F4  26D9               	addwf	fsr2l,f,c
 53866  0128F6  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 53867  0128F8  22DA               	addwfc	fsr2h,f,c
 53868  0128FA  0E00               	movlw	0
 53869  0128FC  6EDF               	movwf	indf2,c
 53870                           
 53871                           ; BSR set to: 1
 53872                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 53873  0128FE  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53874  012902  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53875  012906  0E48               	movlw	72
 53876  012908  6EDF               	movwf	indf2,c
 53877                           
 53878                           ; BSR set to: 1
 53879                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 53880  01290A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53881  01290E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53882  012912  0E00               	movlw	0
 53883  012914  8EDB               	bsf	plusw2,7,c
 53884                           
 53885                           ;usb_device.c: 1439: }
 53886  012916  0012               	return	
 53887  012918                     i2l214:
 53888                           
 53889                           ; BSR set to: 1
 53890                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 53891                           
 53892                           ; BSR set to: 1
 53893  012918  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 53894  01291A  A4D8               	btfss	status,2,c
 53895  01291C  0012               	return	
 53896                           
 53897                           ; BSR set to: 1
 53898                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 53899  01291E  0E00               	movlw	0
 53900  012920  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 53901                           
 53902                           ; BSR set to: 1
 53903                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 53904  012922  EE20 F001          	lfsr	2,1
 53905  012926  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 53906  012928  26D9               	addwf	fsr2l,f,c
 53907  01292A  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 53908  01292C  22DA               	addwfc	fsr2h,f,c
 53909  01292E  0E08               	movlw	8
 53910  012930  6EDF               	movwf	indf2,c
 53911                           
 53912                           ; BSR set to: 1
 53913                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 53914  012932  EE20 F002          	lfsr	2,2
 53915  012936  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 53916  012938  26D9               	addwf	fsr2l,f,c
 53917  01293A  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 53918  01293C  22DA               	addwfc	fsr2h,f,c
 53919  01293E  0E30               	movlw	48
 53920  012940  6EDE               	movwf	postinc2,c
 53921  012942  0E0D               	movlw	13
 53922  012944  6EDD               	movwf	postdec2,c
 53923                           
 53924                           ; BSR set to: 1
 53925                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 53926  012946  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 53927  01294A  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 53928  01294E  0E04               	movlw	4
 53929  012950  6EDF               	movwf	indf2,c
 53930                           
 53931                           ; BSR set to: 1
 53932                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 53933  012952  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 53934  012956  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 53935  01295A  0E00               	movlw	0
 53936  01295C  8EDB               	bsf	plusw2,7,c
 53937                           
 53938                           ; BSR set to: 1
 53939                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 53940  01295E  0E01               	movlw	1
 53941  012960  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 53942                           
 53943                           ; BSR set to: 1
 53944                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 53945  012962  EE20 F001          	lfsr	2,1
 53946  012966  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53947  012968  26D9               	addwf	fsr2l,f,c
 53948  01296A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53949  01296C  22DA               	addwfc	fsr2h,f,c
 53950  01296E  0E08               	movlw	8
 53951  012970  6EDF               	movwf	indf2,c
 53952                           
 53953                           ; BSR set to: 1
 53954                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53955  012972  EE20 F002          	lfsr	2,2
 53956  012976  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53957  012978  26D9               	addwf	fsr2l,f,c
 53958  01297A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53959  01297C  22DA               	addwfc	fsr2h,f,c
 53960  01297E  0E30               	movlw	48
 53961  012980  6EDE               	movwf	postinc2,c
 53962  012982  0E0D               	movlw	13
 53963  012984  6EDD               	movwf	postdec2,c
 53964                           
 53965                           ; BSR set to: 1
 53966                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 53967  012986  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53968  01298A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53969  01298E  0E80               	movlw	128
 53970  012990  6EDF               	movwf	indf2,c
 53971                           
 53972                           ; BSR set to: 1
 53973                           
 53974                           ; BSR set to: 1
 53975                           
 53976                           ; BSR set to: 1
 53977  012992  0012               	return	
 53978  012994                     __end_of_USBCtrlEPAllowStatusStage:
 53979                           	opt stack 0
 53980                           tosu	equ	0xFFF
 53981                           tosh	equ	0xFFE
 53982                           tosl	equ	0xFFD
 53983                           pclatu	equ	0xFFB
 53984                           pclath	equ	0xFFA
 53985                           tblptru	equ	0xFF8
 53986                           tblptrh	equ	0xFF7
 53987                           tblptrl	equ	0xFF6
 53988                           tablat	equ	0xFF5
 53989                           prodh	equ	0xFF4
 53990                           prodl	equ	0xFF3
 53991                           intcon	equ	0xFF2
 53992                           indf0	equ	0xFEF
 53993                           postinc0	equ	0xFEE
 53994                           fsr0h	equ	0xFEA
 53995                           fsr0l	equ	0xFE9
 53996                           wreg	equ	0xFE8
 53997                           indf1	equ	0xFE7
 53998                           postinc1	equ	0xFE6
 53999                           postdec1	equ	0xFE5
 54000                           plusw1	equ	0xFE3
 54001                           fsr1h	equ	0xFE2
 54002                           fsr1l	equ	0xFE1
 54003                           indf2	equ	0xFDF
 54004                           postinc2	equ	0xFDE
 54005                           postdec2	equ	0xFDD
 54006                           plusw2	equ	0xFDB
 54007                           fsr2h	equ	0xFDA
 54008                           fsr2l	equ	0xFD9
 54009                           status	equ	0xFD8
 54010                           
 54011 ;; *************** function _USBCtrlTrfInHandler *****************
 54012 ;; Defined at:
 54013 ;;		line 2594 in file "usb_device.c"
 54014 ;; Parameters:    Size  Location     Type
 54015 ;;		None
 54016 ;; Auto vars:     Size  Location     Type
 54017 ;;  lastDTS         1    1[COMRAM] unsigned char 
 54018 ;; Return value:  Size  Location     Type
 54019 ;;                  1    wreg      void 
 54020 ;; Registers used:
 54021 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 54022 ;; Tracked objects:
 54023 ;;		On entry : 0/0
 54024 ;;		On exit  : 0/0
 54025 ;;		Unchanged: 0/0
 54026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54031 ;;Total ram usage:        1 bytes
 54032 ;; Hardware stack levels used:    1
 54033 ;; Hardware stack levels required when called:    1
 54034 ;; This function calls:
 54035 ;;		_USBCtrlTrfTxService
 54036 ;; This function is called by:
 54037 ;;		_USBCtrlEPService
 54038 ;; This function uses a non-reentrant model
 54039 ;;
 54040                           
 54041                           	psect	text226
 54042  012994                     __ptext226:
 54043                           	opt stack 0
 54044  012994                     _USBCtrlTrfInHandler:
 54045                           	opt stack 14
 54046                           
 54047                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 54048                           
 54049                           ; BSR set to: 1
 54050                           ;incstack = 0
 54051  012994  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54052  012998  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54053  01299C  0101               	movlb	1	; () banked
 54054  01299E  0E00               	movlw	0
 54055  0129A0  BCDF               	btfsc	indf2,6,c
 54056  0129A2  0E01               	movlw	1
 54057  0129A4  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 54058                           
 54059                           ; BSR set to: 1
 54060                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 54061  0129A6  0E04               	movlw	4
 54062  0129A8  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 54063  0129AA  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 54064  0129AC  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54065  0129AE  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 54066                           
 54067                           ; BSR set to: 1
 54068                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 54069  0129B0  0E08               	movlw	8
 54070  0129B2  185E               	xorwf	_USBDeviceState,w,c	;volatile
 54071  0129B4  A4D8               	btfss	status,2,c
 54072  0129B6  D00C               	goto	i2l341
 54073                           
 54074                           ; BSR set to: 1
 54075                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 54076  0129B8  010D               	movlb	13	; () banked
 54077  0129BA  5132               	movf	50,w,b	;volatile
 54078  0129BC  0B7F               	andlw	127
 54079  0129BE  010F               	movlb	15	; () banked
 54080  0129C0  6F38               	movwf	56,b	;volatile
 54081                           
 54082                           ; BSR set to: 15
 54083                           ;usb_device.c: 2609: if(UADDR != 0u)
 54084  0129C2  5138               	movf	56,w,b	;volatile
 54085  0129C4  B4D8               	btfsc	status,2,c
 54086  0129C6  D002               	goto	i2l340
 54087                           
 54088                           ; BSR set to: 15
 54089                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 54090  0129C8  0E10               	movlw	16
 54091  0129CA  D001               	goto	L87
 54092  0129CC                     i2l340:
 54093                           
 54094                           ; BSR set to: 15
 54095                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 54096                           
 54097                           ; BSR set to: 15
 54098  0129CC  0E04               	movlw	4
 54099  0129CE                     L87:
 54100  0129CE  6E5E               	movwf	_USBDeviceState,c	;volatile
 54101  0129D0                     i2l341:
 54102                           
 54103                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 54104                           
 54105                           ; BSR set to: 15
 54106                           
 54107                           ; BSR set to: 15
 54108  0129D0  0101               	movlb	1	; () banked
 54109  0129D2  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54110  0129D4  A4D8               	btfss	status,2,c
 54111  0129D6  D03B               	goto	i2l342
 54112                           
 54113                           ; BSR set to: 1
 54114                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 54115  0129D8  EE20 F002          	lfsr	2,2
 54116  0129DC  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54117  0129DE  26D9               	addwf	fsr2l,f,c
 54118  0129E0  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54119  0129E2  22DA               	addwfc	fsr2h,f,c
 54120  0129E4  0E38               	movlw	56
 54121  0129E6  6EDE               	movwf	postinc2,c
 54122  0129E8  0E0D               	movlw	13
 54123  0129EA  6EDD               	movwf	postdec2,c
 54124                           
 54125                           ; BSR set to: 1
 54126                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 54127  0129EC  ECC9  F092         	call	_USBCtrlTrfTxService	;wreg free
 54128                           
 54129                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 54130  0129F0  0E02               	movlw	2
 54131  0129F2  0101               	movlb	1	; () banked
 54132  0129F4  1970               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 54133  0129F6  A4D8               	btfss	status,2,c
 54134  0129F8  D00D               	goto	i2l343
 54135                           
 54136                           ; BSR set to: 1
 54137                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 54138  0129FA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54139  0129FE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54140  012A02  0E04               	movlw	4
 54141  012A04  6EDF               	movwf	indf2,c
 54142                           
 54143                           ; BSR set to: 1
 54144                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54145  012A06  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54146  012A0A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54147  012A0E  0E00               	movlw	0
 54148  012A10  8EDB               	bsf	plusw2,7,c
 54149                           
 54150                           ;usb_device.c: 2635: }
 54151  012A12  0012               	return	
 54152  012A14                     i2l343:
 54153                           
 54154                           ; BSR set to: 1
 54155                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 54156                           
 54157                           ; BSR set to: 1
 54158  012A14  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 54159  012A16  A4D8               	btfss	status,2,c
 54160  012A18  D00D               	goto	i2l345
 54161                           
 54162                           ; BSR set to: 1
 54163                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 54164  012A1A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54165  012A1E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54166  012A22  0E48               	movlw	72
 54167  012A24  6EDF               	movwf	indf2,c
 54168                           
 54169                           ; BSR set to: 1
 54170                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54171  012A26  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54172  012A2A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54173  012A2E  0E00               	movlw	0
 54174  012A30  8EDB               	bsf	plusw2,7,c
 54175                           
 54176                           ;usb_device.c: 2642: }
 54177  012A32  0012               	return	
 54178  012A34                     i2l345:
 54179                           
 54180                           ; BSR set to: 1
 54181                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 54182                           
 54183                           ; BSR set to: 1
 54184  012A34  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54185  012A38  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54186  012A3C  0E08               	movlw	8
 54187  012A3E  6EDF               	movwf	indf2,c
 54188                           
 54189                           ; BSR set to: 1
 54190                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54191  012A40  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54192  012A44  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54193  012A48  0E00               	movlw	0
 54194  012A4A  8EDB               	bsf	plusw2,7,c
 54195                           
 54196                           ; BSR set to: 1
 54197                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 54198                           
 54199                           ; BSR set to: 1
 54200  012A4C  0012               	return	
 54201  012A4E                     i2l342:
 54202                           
 54203                           ; BSR set to: 1
 54204                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 54205  012A4E  BF15               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 54206                           
 54207                           ; BSR set to: 1
 54208                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 54209                           
 54210                           ; BSR set to: 1
 54211                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 54212  012A50  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54213                           
 54214                           ; BSR set to: 1
 54215                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 54216                           
 54217                           ; BSR set to: 1
 54218  012A52  0E00               	movlw	0
 54219  012A54  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54220  012A56  0012               	return	
 54221  012A58                     __end_of_USBCtrlTrfInHandler:
 54222                           	opt stack 0
 54223                           tosu	equ	0xFFF
 54224                           tosh	equ	0xFFE
 54225                           tosl	equ	0xFFD
 54226                           pclatu	equ	0xFFB
 54227                           pclath	equ	0xFFA
 54228                           tblptru	equ	0xFF8
 54229                           tblptrh	equ	0xFF7
 54230                           tblptrl	equ	0xFF6
 54231                           tablat	equ	0xFF5
 54232                           prodh	equ	0xFF4
 54233                           prodl	equ	0xFF3
 54234                           intcon	equ	0xFF2
 54235                           indf0	equ	0xFEF
 54236                           postinc0	equ	0xFEE
 54237                           fsr0h	equ	0xFEA
 54238                           fsr0l	equ	0xFE9
 54239                           wreg	equ	0xFE8
 54240                           indf1	equ	0xFE7
 54241                           postinc1	equ	0xFE6
 54242                           postdec1	equ	0xFE5
 54243                           plusw1	equ	0xFE3
 54244                           fsr1h	equ	0xFE2
 54245                           fsr1l	equ	0xFE1
 54246                           indf2	equ	0xFDF
 54247                           postinc2	equ	0xFDE
 54248                           postdec2	equ	0xFDD
 54249                           plusw2	equ	0xFDB
 54250                           fsr2h	equ	0xFDA
 54251                           fsr2l	equ	0xFD9
 54252                           status	equ	0xFD8
 54253                           
 54254 ;; *************** function _USBCtrlTrfTxService *****************
 54255 ;; Defined at:
 54256 ;;		line 1773 in file "usb_device.c"
 54257 ;; Parameters:    Size  Location     Type
 54258 ;;		None
 54259 ;; Auto vars:     Size  Location     Type
 54260 ;;  byteToSend      1    0[COMRAM] unsigned char 
 54261 ;; Return value:  Size  Location     Type
 54262 ;;                  1    wreg      void 
 54263 ;; Registers used:
 54264 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 54265 ;; Tracked objects:
 54266 ;;		On entry : 0/0
 54267 ;;		On exit  : 0/0
 54268 ;;		Unchanged: 0/0
 54269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54274 ;;Total ram usage:        1 bytes
 54275 ;; Hardware stack levels used:    1
 54276 ;; This function calls:
 54277 ;;		Nothing
 54278 ;; This function is called by:
 54279 ;;		_USBCtrlEPAllowDataStage
 54280 ;;		_USBCtrlTrfInHandler
 54281 ;; This function uses a non-reentrant model
 54282 ;;
 54283                           
 54284                           	psect	text227
 54285  012592                     __ptext227:
 54286                           	opt stack 0
 54287  012592                     _USBCtrlTrfTxService:
 54288                           	opt stack 12
 54289                           
 54290                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 54291                           
 54292                           ; BSR set to: 1
 54293                           ;incstack = 0
 54294  012592  0E08               	movlw	8
 54295  012594  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 54296                           
 54297                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 54298  012596  5057               	movf	_inPipes+5,w,c	;volatile
 54299  012598  E111               	bnz	i2l12667
 54300  01259A  0E08               	movlw	8
 54301  01259C  5C56               	subwf	_inPipes+4,w,c	;volatile
 54302  01259E  B0D8               	btfsc	status,0,c
 54303  0125A0  D00D               	goto	i2l247
 54304                           
 54305                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 54306  0125A2  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 54307                           
 54308                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 54309  0125A6  0101               	movlb	1	; () banked
 54310  0125A8  5170               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 54311  0125AA  A4D8               	btfss	status,2,c
 54312  0125AC  D002               	goto	i2l245
 54313                           
 54314                           ; BSR set to: 1
 54315                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 54316  0125AE  0E01               	movlw	1
 54317  0125B0  D004               	goto	L88
 54318  0125B2                     i2l245:
 54319                           
 54320                           ; BSR set to: 1
 54321                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 54322                           
 54323                           ; BSR set to: 1
 54324  0125B2  0570               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 54325  0125B4  A4D8               	btfss	status,2,c
 54326  0125B6  D002               	goto	i2l247
 54327                           
 54328                           ; BSR set to: 1
 54329                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 54330  0125B8  0E02               	movlw	2
 54331  0125BA                     L88:
 54332  0125BA  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 54333  0125BC                     i2l247:
 54334  0125BC                     i2l12667:
 54335                           
 54336                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 54337  0125BC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54338  0125BE  5E56               	subwf	_inPipes+4,f,c	;volatile
 54339  0125C0  0E00               	movlw	0
 54340  0125C2  5A57               	subwfb	_inPipes+5,f,c	;volatile
 54341                           
 54342                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 54343  0125C4  0101               	movlb	1	; () banked
 54344  0125C6  EE20 F001          	lfsr	2,1
 54345  0125CA  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54346  0125CC  26D9               	addwf	fsr2l,f,c
 54347  0125CE  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54348  0125D0  22DA               	addwfc	fsr2h,f,c
 54349  0125D2  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 54350                           
 54351                           ; BSR set to: 1
 54352                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 54353  0125D6  0E38               	movlw	56
 54354  0125D8  6F4F               	movwf	_pDst& (0+255),b
 54355  0125DA  0E0D               	movlw	13
 54356  0125DC  6F50               	movwf	(_pDst+1)& (0+255),b
 54357                           
 54358                           ; BSR set to: 1
 54359                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 54360  0125DE  A055               	btfss	_inPipes+3,0,c	;volatile
 54361  0125E0  D01D               	goto	i2l249
 54362  0125E2  D03C               	goto	i2l253
 54363  0125E4                     
 54364                           ; BSR set to: 1
 54365                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 54366                           
 54367                           ; BSR set to: 1
 54368  0125E4  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 54369  0125E8  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 54370  0125EC  0E00               	movlw	low (__mediumconst shr (0+16))
 54371  0125EE  6EF8               	movwf	tblptru,c
 54372  0125F0  C14F  FFD9         	movff	_pDst,fsr2l
 54373  0125F4  C150  FFDA         	movff	_pDst+1,fsr2h
 54374  0125F8  0E0E               	movlw	(high __ramtop+-1)
 54375  0125FA  64F7               	cpfsgt	tblptrh,c
 54376  0125FC  D003               	bra	i2u1099_47
 54377  0125FE  0008               	tblrd		*
 54378  012600  50F5               	movf	tablat,w,c
 54379  012602  D005               	bra	i2u1099_40
 54380  012604                     i2u1099_47:
 54381  012604  CFF6 FFE9          	movff	tblptrl,fsr0l
 54382  012608  CFF7 FFEA          	movff	tblptrh,fsr0h
 54383  01260C  50EF               	movf	indf0,w,c
 54384  01260E                     i2u1099_40:
 54385  01260E  6EDF               	movwf	indf2,c
 54386  012610  4A52               	infsnz	_inPipes,f,c	;volatile
 54387  012612  2A53               	incf	_inPipes+1,f,c	;volatile
 54388  012614  0101               	movlb	1	; () banked
 54389  012616  4B4F               	infsnz	_pDst& (0+255),f,b
 54390  012618  2B50               	incf	(_pDst+1)& (0+255),f,b
 54391                           
 54392                           ; BSR set to: 1
 54393                           ;usb_device.c: 1816: byteToSend--;
 54394  01261A  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 54395  01261C                     i2l249:
 54396                           
 54397                           ; BSR set to: 1
 54398                           
 54399                           ; BSR set to: 1
 54400  01261C  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54401  01261E  B4D8               	btfsc	status,2,c
 54402  012620  0012               	return	
 54403  012622  D7E0               	goto	i2l250
 54404  012624                     
 54405                           ; BSR set to: 1
 54406                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 54407                           
 54408                           ; BSR set to: 1
 54409  012624  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 54410  012628  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 54411  01262C  0E00               	movlw	low (__mediumconst shr (0+16))
 54412  01262E  6EF8               	movwf	tblptru,c
 54413  012630  C14F  FFD9         	movff	_pDst,fsr2l
 54414  012634  C150  FFDA         	movff	_pDst+1,fsr2h
 54415  012638  0E0E               	movlw	(high __ramtop+-1)
 54416  01263A  64F7               	cpfsgt	tblptrh,c
 54417  01263C  D003               	bra	i2u1101_47
 54418  01263E  0008               	tblrd		*
 54419  012640  50F5               	movf	tablat,w,c
 54420  012642  D005               	bra	i2u1101_40
 54421  012644                     i2u1101_47:
 54422  012644  CFF6 FFE9          	movff	tblptrl,fsr0l
 54423  012648  CFF7 FFEA          	movff	tblptrh,fsr0h
 54424  01264C  50EF               	movf	indf0,w,c
 54425  01264E                     i2u1101_40:
 54426  01264E  6EDF               	movwf	indf2,c
 54427  012650  4A52               	infsnz	_inPipes,f,c	;volatile
 54428  012652  2A53               	incf	_inPipes+1,f,c	;volatile
 54429  012654  0101               	movlb	1	; () banked
 54430  012656  4B4F               	infsnz	_pDst& (0+255),f,b
 54431  012658  2B50               	incf	(_pDst+1)& (0+255),f,b
 54432                           
 54433                           ; BSR set to: 1
 54434                           ;usb_device.c: 1824: byteToSend--;
 54435  01265A  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 54436  01265C                     i2l253:
 54437                           
 54438                           ; BSR set to: 1
 54439                           
 54440                           ; BSR set to: 1
 54441  01265C  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54442  01265E  B4D8               	btfsc	status,2,c
 54443  012660  0012               	return	
 54444  012662  D7E0               	goto	i2l254
 54445  012664                     __end_of_USBCtrlTrfTxService:
 54446                           	opt stack 0
 54447                           tosu	equ	0xFFF
 54448                           tosh	equ	0xFFE
 54449                           tosl	equ	0xFFD
 54450                           pclatu	equ	0xFFB
 54451                           pclath	equ	0xFFA
 54452                           tblptru	equ	0xFF8
 54453                           tblptrh	equ	0xFF7
 54454                           tblptrl	equ	0xFF6
 54455                           tablat	equ	0xFF5
 54456                           prodh	equ	0xFF4
 54457                           prodl	equ	0xFF3
 54458                           intcon	equ	0xFF2
 54459                           indf0	equ	0xFEF
 54460                           postinc0	equ	0xFEE
 54461                           fsr0h	equ	0xFEA
 54462                           fsr0l	equ	0xFE9
 54463                           wreg	equ	0xFE8
 54464                           indf1	equ	0xFE7
 54465                           postinc1	equ	0xFE6
 54466                           postdec1	equ	0xFE5
 54467                           plusw1	equ	0xFE3
 54468                           fsr1h	equ	0xFE2
 54469                           fsr1l	equ	0xFE1
 54470                           indf2	equ	0xFDF
 54471                           postinc2	equ	0xFDE
 54472                           postdec2	equ	0xFDD
 54473                           plusw2	equ	0xFDB
 54474                           fsr2h	equ	0xFDA
 54475                           fsr2l	equ	0xFD9
 54476                           status	equ	0xFD8
 54477                           tosu	equ	0xFFF
 54478                           tosh	equ	0xFFE
 54479                           tosl	equ	0xFFD
 54480                           pclatu	equ	0xFFB
 54481                           pclath	equ	0xFFA
 54482                           tblptru	equ	0xFF8
 54483                           tblptrh	equ	0xFF7
 54484                           tblptrl	equ	0xFF6
 54485                           tablat	equ	0xFF5
 54486                           prodh	equ	0xFF4
 54487                           prodl	equ	0xFF3
 54488                           intcon	equ	0xFF2
 54489                           indf0	equ	0xFEF
 54490                           postinc0	equ	0xFEE
 54491                           fsr0h	equ	0xFEA
 54492                           fsr0l	equ	0xFE9
 54493                           wreg	equ	0xFE8
 54494                           indf1	equ	0xFE7
 54495                           postinc1	equ	0xFE6
 54496                           postdec1	equ	0xFE5
 54497                           plusw1	equ	0xFE3
 54498                           fsr1h	equ	0xFE2
 54499                           fsr1l	equ	0xFE1
 54500                           indf2	equ	0xFDF
 54501                           postinc2	equ	0xFDE
 54502                           postdec2	equ	0xFDD
 54503                           plusw2	equ	0xFDB
 54504                           fsr2h	equ	0xFDA
 54505                           fsr2l	equ	0xFD9
 54506                           status	equ	0xFD8
 54507                           
 54508                           	psect	text228
 54509  000000                     __ptext228:
 54510                           	opt stack 0
 54511                           tosu	equ	0xFFF
 54512                           tosh	equ	0xFFE
 54513                           tosl	equ	0xFFD
 54514                           pclatu	equ	0xFFB
 54515                           pclath	equ	0xFFA
 54516                           tblptru	equ	0xFF8
 54517                           tblptrh	equ	0xFF7
 54518                           tblptrl	equ	0xFF6
 54519                           tablat	equ	0xFF5
 54520                           prodh	equ	0xFF4
 54521                           prodl	equ	0xFF3
 54522                           intcon	equ	0xFF2
 54523                           indf0	equ	0xFEF
 54524                           postinc0	equ	0xFEE
 54525                           fsr0h	equ	0xFEA
 54526                           fsr0l	equ	0xFE9
 54527                           wreg	equ	0xFE8
 54528                           indf1	equ	0xFE7
 54529                           postinc1	equ	0xFE6
 54530                           postdec1	equ	0xFE5
 54531                           plusw1	equ	0xFE3
 54532                           fsr1h	equ	0xFE2
 54533                           fsr1l	equ	0xFE1
 54534                           indf2	equ	0xFDF
 54535                           postinc2	equ	0xFDE
 54536                           postdec2	equ	0xFDD
 54537                           plusw2	equ	0xFDB
 54538                           fsr2h	equ	0xFDA
 54539                           fsr2l	equ	0xFD9
 54540                           status	equ	0xFD8
 54541                           
 54542                           	psect	rparam
 54543  0000                     tosu	equ	0xFFF
 54544                           tosh	equ	0xFFE
 54545                           tosl	equ	0xFFD
 54546                           pclatu	equ	0xFFB
 54547                           pclath	equ	0xFFA
 54548                           tblptru	equ	0xFF8
 54549                           tblptrh	equ	0xFF7
 54550                           tblptrl	equ	0xFF6
 54551                           tablat	equ	0xFF5
 54552                           prodh	equ	0xFF4
 54553                           prodl	equ	0xFF3
 54554                           intcon	equ	0xFF2
 54555                           indf0	equ	0xFEF
 54556                           postinc0	equ	0xFEE
 54557                           fsr0h	equ	0xFEA
 54558                           fsr0l	equ	0xFE9
 54559                           wreg	equ	0xFE8
 54560                           indf1	equ	0xFE7
 54561                           postinc1	equ	0xFE6
 54562                           postdec1	equ	0xFE5
 54563                           plusw1	equ	0xFE3
 54564                           fsr1h	equ	0xFE2
 54565                           fsr1l	equ	0xFE1
 54566                           indf2	equ	0xFDF
 54567                           postinc2	equ	0xFDE
 54568                           postdec2	equ	0xFDD
 54569                           plusw2	equ	0xFDB
 54570                           fsr2h	equ	0xFDA
 54571                           fsr2l	equ	0xFD9
 54572                           status	equ	0xFD8
 54573                           
 54574                           	psect	temp
 54575  00005F                     btemp:
 54576                           	opt stack 0
 54577  00005F                     	ds	1
 54578  0000                     int$flags	set	btemp
 54579  0000                     wtemp8	set	btemp+1
 54580  0000                     ttemp5	set	btemp+1
 54581  0000                     ttemp6	set	btemp+4
 54582  0000                     ttemp7	set	btemp+8
 54583                           tosu	equ	0xFFF
 54584                           tosh	equ	0xFFE
 54585                           tosl	equ	0xFFD
 54586                           pclatu	equ	0xFFB
 54587                           pclath	equ	0xFFA
 54588                           tblptru	equ	0xFF8
 54589                           tblptrh	equ	0xFF7
 54590                           tblptrl	equ	0xFF6
 54591                           tablat	equ	0xFF5
 54592                           prodh	equ	0xFF4
 54593                           prodl	equ	0xFF3
 54594                           intcon	equ	0xFF2
 54595                           indf0	equ	0xFEF
 54596                           postinc0	equ	0xFEE
 54597                           fsr0h	equ	0xFEA
 54598                           fsr0l	equ	0xFE9
 54599                           wreg	equ	0xFE8
 54600                           indf1	equ	0xFE7
 54601                           postinc1	equ	0xFE6
 54602                           postdec1	equ	0xFE5
 54603                           plusw1	equ	0xFE3
 54604                           fsr1h	equ	0xFE2
 54605                           fsr1l	equ	0xFE1
 54606                           indf2	equ	0xFDF
 54607                           postinc2	equ	0xFDE
 54608                           postdec2	equ	0xFDD
 54609                           plusw2	equ	0xFDB
 54610                           fsr2h	equ	0xFDA
 54611                           fsr2l	equ	0xFD9
 54612                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1555
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     214
    BANK3           256      0     184
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_writeUint32
    _i2c_eeprom_writeUint32->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _i2c_eeprom_readUint32->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _fat_format->_flash_sector_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->_atol
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_arc_move->_motor_schedule_command
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___flneg->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->__motor_run
    __motor_run->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  810860
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  378374
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
              _i2c_eeprom_readUint32
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readUint32                                8     4      4    3272
                                             25 BANK0      8     4      4
                    _i2c_eeprom_read
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3113
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   11368
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11146
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   16444
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   10287
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  231129
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75530
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   83178
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35708
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6215
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   80075
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   13915
                                             26 BANK0      4     0      4
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1700
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1043
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0   17215
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  152823
                                            109 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    8696
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   41041
                                             99 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   30282
                                             99 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    8339
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_change_speed                                   2     0      2     378
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       9     9      0   29269
                                             71 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   43870
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    6589
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    6389
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     778
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0    8400
                                             39 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     134
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2644
                                             18 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  113120
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  113120
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  108320
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   54911
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53205
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24547
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   85223
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   16474
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    7646
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7007
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   65748
                                            100 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   42935
                                             99 BANK0      1     1      0
         _motor_go_to_steps_position
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4   21828
                                             71 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   22071
                                             83 BANK0      7     1      6
                  __parse_jump_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6   21692
                                             71 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_schedule_command                               7     1      6   21085
                                             64 BANK0      7     1      6
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          17    11      6   17215
                                             47 BANK0     17    11      6
_motor_calculate_position_in_degrees
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    8450
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    8139
                                             39 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     941
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2864
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2519
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   55930
                                             67 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    1308
                                             43 COMRAM    24    24      0
             _i2c_eeprom_writeUint32
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_writeUint32                              6     0      6    1217
                                             37 COMRAM     6     0      6
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5     994
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
       __parse_command_short
         _motor_go_to_steps_position
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flneg
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       __motor_run
         _motor_calculate_position_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
       _motor_items_in_cue
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _motor_process_cue
     __motor_run
       _motor_calculate_position_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_readUint32
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_writeUint32
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B8      11       71.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DB      31        0.0%
DATA                 0      0     7DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Dec 15 23:33:16 2019

                           __end_of_fat_read_from_file 1CEA  
                               _motor_next_speed_check 0226  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 007E  
               motor_calculate_position_in_degrees@tmp 0087  
                                  __system_timer0_init 5372  
                      __size_of_configFile_readDefault 0064  
                            __end_of_motor_divide_jump 30A4  
                              configFile_read@position 01FB  
                                                   _os 0171  
                                        _USBDeviceInit FEE2  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 24BC  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5318  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 52EA  
                                     __i2c_eeprom_busy 5472  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 1A30  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 136E  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                  l206 5220  
                                                  l207 521E  
                                                  l145 FF2C  
                                                  l147 FF54  
                                                  l149 FF8E  
                          __end_of_USBStdGetDscHandler 08D2  
                                                  l184 107A  
                                                  l192 0FB8  
                                                  l186 10A4  
                                                  l602 E620  
                                                  l188 1122  
                                                  l700 D94E  
                                                  l620 418A  
                                                  l612 079C  
                                                  l701 D68E  
                                                  l613 0796  
                                                  l605 E628  
                                                  l710 D78E  
                                                  l630 C200  
                                                  l622 41A6  
                                                  l703 D972  
                                                  l711 D7FC  
                                                  l631 BE60  
                                                  l615 07A0  
                                                  l720 D934  
                                                  l712 D7F8  
                                                  l704 D73A  
                                                  l640 BFA4  
                                                  l624 41B2  
                                                  l608 06F0  
                                                  l641 BFAE  
                                                  l625 41B8  
                                                  l714 D810  
                                                  l706 D740  
                                                  l650 C0A6  
                                                  l642 BFD2  
                                                  l634 BE70  
                                                  l626 41BE  
                                                  l570 E640  
                                                  l731 0B7E  
                                                  l715 D894  
                                                  l707 D74C  
                                                  l619 41C6  
                                                  l571 E404  
                                                  l708 D76A  
                                                  l660 C14C  
                                                  l652 C0DC  
                                                  l644 C002  
                                                  l636 BE80  
                                                  l580 E516  
                                                  l900 44EE  
                                                  l709 D7B6  
                                                  l661 C160  
                                                  l637 BE8A  
                                                  l734 0B8A  
                                                  l726 0B28  
                                                  l718 D904  
                                                  l670 C1F8  
                                                  l662 C188  
                                                  l654 C0F8  
                                                  l646 C042  
                                                  l582 E52E  
                                                  l735 0BB2  
                                                  l719 D91C  
                                                  l639 BEDE  
                                                  l591 E5A2  
                                                  l575 E428  
                                                  l728 0B40  
                                                  l664 C1BC  
                                                  l656 C110  
                                                  l592 E5A6  
                                                  l904 4500  
                                                  l753 0C1C  
                                                  l737 0BEE  
                                                  l681 F0B6  
                                                  l665 C190  
                                                  l649 C07A  
                                                  l593 E5CC  
                                                  l577 E554  
                                                  l770 0AA2  
                                                  l738 0BD4  
                                                  l690 EFCC  
                                                  l682 EEF8  
                                                  l666 C1A2  
                                                  l578 E53A  
                                                  l586 E65E  
                                                  l906 450C  
                                                  l675 2AA4  
                                                  l763 0AEC  
                                                  l771 0ADE  
                                                  l747 0BFC  
                                                  l691 EFF6  
                                                  l667 C1B8  
                                                  l587 E574  
                                                  l579 E50C  
                                                  l764 0A56  
                                                  l684 F0DA  
                                                  l692 F024  
                                                  _BDT 000D00  
                                                  l677 2AC0  
                                                  l757 0A2A  
                                                  l749 0C0A  
                                                  l693 F036  
                                                  l685 EF52  
                                                  l589 E580  
                                                  l950 31BA  
                                                  l766 0A5E  
                                                  l694 F03C  
                                                  l686 EF5E  
                                                  l862 37FE  
                                                  l767 0A6C  
                                                  l695 F050  
                                                  l687 EF68  
                                                  l871 3838  
                                                  l863 3810  
                                                  l944 3156  
                                                  l768 0A80  
                                                  l696 F09E  
                                                  l688 EF7C  
                                                  l872 383C  
                                                  l769 0A8E  
                                                  l873 3842  
                                                  l867 3848  
                                                  l869 386A  
                                                  l897 451E  
                                                  l986 573C  
                                                  l898 44E2  
                                                  _LBA 012B  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0289  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                   api_prepare@command 0074  
                                           _USBSuspend 52BA  
                               __end_of_display_update 50BA  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks 002E  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005E  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                         ?__write_root 0088  
                              __parse_item@item_string 007A  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                                    __find_nth_cluster 31F6  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 45F4  
                                                 l2001 45F8  
                                                 l2002 45FC  
                                                 l2003 4600  
                                                 l2011 F81C  
                                                 l2004 4604  
                                                 l2020 F8A0  
                                                 l1141 57F2  
                                                 l2021 F8A4  
                                                 l2013 F854  
                                                 l1213 481C  
                                                 l1310 4C7C  
                                                 l1126 57FA  
                                                 l2030 F8C8  
                                                 l2022 F8A8  
                                                 l2015 F8E4  
                                                 l2031 F8CC  
                                                 l2023 F8AC  
                                                 l1135 57C0  
                                                 l1312 4C88  
                                                 l3000 2ED2  
                                                 l1320 1F5E  
                                                 l1400 A460  
                                                 l2040 53F0  
                                                 l2032 F8D0  
                                                 l2024 F8B0  
                                                 l2016 F890  
                                                 l1321 1F2E  
                                                 l1401 A47E  
                                                 l2033 F8D4  
                                                 l2025 F8B4  
                                                 l2017 F894  
                                                 l2009 F80E  
                                                 l1153 57B8  
                                                 l3002 2EF0  
                                                 l1410 A560  
                                                 l1402 A4C2  
                                                 l2034 F8D8  
                                                 l2026 F8B8  
                                                 l2018 F898  
                                                 l2050 2E96  
                                                 l1082 1A26  
                                                 l3003 2EE4  
                                                 l1331 EB9A  
                                                 l1411 A5D0  
                                                 l1243 48EC  
                                                 l2035 F8DC  
                                                 l2027 F8BC  
                                                 l2019 F89C  
                                                 l1147 57CC  
                                                 l1420 A740  
                                                 l1412 A5A0  
                                                 l1404 A510  
                                                 l1244 48CE  
                                                 l2036 F8E0  
                                                 l2028 F8C0  
                                                 l1164 35E0  
                                                 l2301 4F86  
                                                 l1341 EC0A  
                                                 l1317 1F00  
                                                 l2037 F970  
                                                 l2029 F8C4  
                                                 l1165 35C2  
                                                 l2302 4F64  
                                                 l2230 1FFC  
                                                 l3006 2F18  
                                                 l1342 EC1E  
                                                 l1318 1EEA  
                                                 l1326 4DA8  
                                                 l1430 A8C6  
                                                 l1422 A816  
                                                 l1414 A654  
                                                 l1406 A54C  
                                                 l1158 4B2A  
                                                 l2046 2E42  
                                                 l2303 4F96  
                                                 l2231 200A  
                                                 l3007 2F26  
                                                 l1343 EC7E  
                                                 l1335 EB72  
                                                 l1431 A896  
                                                 l1423 A7E6  
                                                 l1407 A538  
                                                 l1159 4B0C  
                                                 l2224 204A  
                                                 l2232 202A  
                                                 l3008 2F3C  
                                                 l1344 EC38  
                                                 l1336 EB90  
                                                 l1440 A9B2  
                                                 l1416 A6E2  
                                                 l2080 3BEC  
                                                 l2241 0944  
                                                 l1345 EC7C  
                                                 l1353 0C7C  
                                                 l1441 AA0C  
                                                 l1433 A924  
                                                 l1425 A82E  
                                                 l1417 A6B2  
                                                 l1409 A542  
                                                 l1249 3AA0  
                                                 l2410 2F96  
                                                 l1530 4790  
                                                 l1338 EC26  
                                                 l1450 AB50  
                                                 l1442 A9BE  
                                                 l1426 A85C  
                                                 l1362 2CEC  
                                                 l1522 3E6C  
                                                 l2307 FE48  
                                                 l2243 09BC  
                                                 l2227 1FC6  
                                                 l1531 474C  
                                                 l1347 ECB8  
                                                 l1443 AA66  
                                                 l1435 A960  
                                                 l1427 A84C  
                                                 l1419 A770  
                                                 l1523 3E90  
                                                 l2244 095E  
                                                 l2236 08F0  
                                                 l2260 2C2C  
                                                 l2228 1FD4  
                                                 l2172 45E2  
                                                 l1348 EC88  
                                                 l1460 AC62  
                                                 l1452 AB98  
                                                 l1444 AA36  
                                                 l1436 A930  
                                                 l1428 A86C  
                                                 l1540 443E  
                                                 l1364 2D0C  
                                                 l2164 4EC8  
                                                 l3213 2200  
                                                 l3205 2170  
                                                 l2309 FEDE  
                                                 l2245 09F2  
                                                 l2261 2C38  
                                                 l2229 1FE8  
                                                 l1533 4776  
                                                 l2181 374C  
                                                 l1461 ACA0  
                                                 l1453 AC0A  
                                                 l1429 A854  
                                                 l1381 A35E  
                                                 l2501 306A  
                                                 l1541 4448  
                                                 l2165 4EA4  
                                                 l3214 21F4  
                                                 l2246 0976  
                                                 l2270 F4CA  
                                                 l2190 3500  
                                                 l1462 AD68  
                                                 l1454 ABDA  
                                                 l1446 AB0C  
                                                 l1438 A994  
                                                 l1390 A3E8  
                                                 l2078 3B86  
                                                 l1366 2D2C  
                                                 l2166 4ED8  
                                                 l3207 21DC  
                                                 l2431 C748  
                                                 l2247 0992  
                                                 l2239 093E  
                                                 l2255 2BE8  
                                                 l1551 3B52  
                                                 l1471 AE86  
                                                 l1463 AD30  
                                                 l1447 AAD4  
                                                 l1439 A9FC  
                                                 l1383 A368  
                                                 l1359 2CCC  
                                                 l2167 4EB6  
                                                 l3216 221C  
                                                 l3208 21CC  
                                                 l2424 C626  
                                                 l2408 2F88  
                                                 l2272 F4DC  
                                                 l1376 AF1C  
                                                 l1456 AC38  
                                                 l2433 C7CA  
                                                 l2425 C636  
                                                 l2281 FA96  
                                                 l2257 2C22  
                                                 l1553 3B72  
                                                 l3401 498E  
                                                 l1473 AEB0  
                                                 l1465 ADDC  
                                                 l1457 ACDE  
                                                 l1449 AB80  
                                                 l1385 AF78  
                                                 l1377 A334  
                                                 l2442 C85A  
                                                 l2290 FA02  
                                                 l2282 F97A  
                                                 l2274 F55A  
                                                 l2178 3716  
                                                 l3402 4998  
                                                 l1466 ADAC  
                                                 l1458 AC56  
                                                 l1386 A392  
                                                 l1378 A372  
                                                 l3330 40A0  
                                                 l2443 C85C  
                                                 l2427 C67E  
                                                 l2291 FA5C  
                                                 l2259 2C62  
                                                 l2267 F5EA  
                                                 l2187 34C2  
                                                 l3411 4E46  
                                                 l1475 AEDC  
                                                 l1459 ACF4  
                                                 l1387 A3DC  
                                                 l1379 A354  
                                                 l3331 40AE  
                                                 l2444 C8C4  
                                                 l2436 C7EC  
                                                 l2292 FA72  
                                                 l2284 F982  
                                                 l1548 3B10  
                                                 l3412 4E50  
                                                 l1468 AE4E  
                                                 l1396 A436  
                                                 l1900 137E  
                           USBConfigureEndpoint@handle 0007  
                                                 l2445 C8EE  
                                                 l2437 C7F4  
                                                 l2429 C700  
                                                 l2293 FA78  
                                                 l2285 F98A  
                                                 l2277 F5B4  
                                                 l1581 55C6  
                                                 l1549 3B1A  
                                                 l1477 AEEA  
                                                 l1469 AE78  
                                                 l1397 A46A  
                                                 l1389 A418  
                                                 l2621 AFFA  
                                                 l1741 437C  
                                                 l1485 5090  
                                                 l2438 C84E  
                                                 l2294 FA7E  
                                                 l2286 F992  
                                                 l3430 D11A  
                                                 l3422 D076  
                                                 l3182 5278  
                                                 l1398 A456  
                                                 l2550 3D7C  
                                                 l2382 4C5C  
                                                 l2614 B854  
                                                 l2710 B55A  
                                                 l2630 B08E  
                                                 l1806 3F92  
                                                 l3326 4078  
                                                 l1814 542C  
                                                 l1910 E6DC  
                                                 l1902 138E  
                                                 l3503 DE4C  
                                                 l2295 FA84  
                                                 l2287 F99A  
                                                 l1575 454C  
                                                 l1567 4A0C  
                                                 l3431 D0DE  
                                                 l3423 D072  
                                                 l3407 4E2E  
                                                 l1479 AF14  
                                                 l2551 3D86  
                                                 l2703 B572  
                                                 l2711 B568  
                                                 l2631 B09E  
                                                 l3327 406C  
                                                 l1743 43B6  
                                                 l1911 E874  
                                                 l1903 144A  
                                                 l3520 CD92  
                                                 l2296 FA8A  
                                                 l2288 F9A2  
                                                 l1576 4556  
                                                 l1568 4A16  
                                                 l3440 D1F2  
                                                 l3408 4E26  
                                                 l2560 52FC  
                                                 l2720 B654  
                                                 l2704 B52E  
                                                 l2616 B1C6  
                                                 l2640 B138  
                                                 l2624 B024  
                                                 l1808 3FEA  
                                                 l1816 543E  
                                                 l1760 27E8  
                                                 l1912 E762  
                                                 l1904 1442  
                                                 l3505 DE90  
                                                 l3513 CD24  
                                                 l2297 FA90  
                                                 l2289 F9AA  
                                                 l1681 5144  
                                                 l3441 D1BA  
                                                 l2545 3D90  
                                                 l2721 B666  
                                                 l2713 B59C  
                                                 l2705 B53A  
                                                 l2625 B034  
                                                 l2617 AFB8  
                                                 l3601 160E  
                                                 l1833 1C00  
                                                 l1913 E78A  
                                                 l1921 266A  
                                                 l3506 DEB4  
                                                 l3514 CD20  
                                                 l2378 1DEA  
                                                 l3450 D28A  
                                                 l3434 D196  
                                                 l2570 3DF6  
                                                 l2546 3D5C  
                                                 l2730 B6B4  
                                                 l2706 B548  
                                                 l2642 B15E  
                                                 l2634 B0D0  
                                                 l2618 AFC8  
                                                 l3602 15B6  
                                                 l1842 1BEA  
                                                 l1762 27F2  
                                                 l1914 E832  
                                                 l1930 268E  
                                                 l1922 266E  
                                                 l3507 DEDE  
                                                 l3531 CF8A  
                                                 l3515 CD34  
                                                 l2387 214E  
                                                 l2491 D64E  
                                                 l2483 D43E  
                                                 l3435 D174  
                                                 l3427 D0BE  
                                                 l2555 5300  
                                                 l2731 B6C8  
                                                 l2723 B67E  
                                                 l2715 B5E0  
                                                 l2651 B246  
                                                 l2643 B16E  
                                                 l1851 042E  
                                                 l1931 2692  
                                                 l1923 2672  
                                                 l3508 DEEA  
                                                 l3524 CF52  
                                                 l2484 D48C  
                                                 l3444 D1DC  
                                                 l3436 D182  
                                                 l3428 D0BA  
                                                 l2564 3E00  
                                                 l2556 52F0  
                                                 l2548 3D68  
                                                 l2708 B582  
                                                 l2652 B1EC  
                                                 l2636 B0F6  
                                                 l2628 B066  
                                                 l3604 1654  
                                                 l1836 1B72  
                                                 l1780 DB5E  
                                                 l1852 048C  
                                                 l1932 2696  
                                                 l1924 2676  
                                                 l3509 DEEC  
                                                 l3533 CFCE  
                                                 l3525 CF34  
                                                 l3517 CD64  
                                                 l2485 D528  
                                                 l1677 5178  
                                                 l3453 D2AE  
                                                 l3445 D1E0  
                                                 l3437 D186  
                                                 l3621 30E8  
                                                 l2565 3DCC  
                                                 l2549 3D72  
                                                 l2741 B746  
                                                 l2725 B6F8  
                                                 l2733 B6D6  
                                                 l2709 B550  
                                                 l2661 B270  
                                                 l2653 B20E  
                                                 l2637 B106  
                                                 l1845 3C0E  
                                                 l1757 278E  
                                                 l1933 269A  
                                                 l1925 267A  
                                                 l3534 CFEC  
                                                 l3518 CD60  
                                                 l2486 D576  
                                                 l3470 D362  
                                                 l3462 D2EE  
                                                 l3622 312A  
                                                 l2574 4EF4  
                                                 l2558 52F4  
                                                 l2726 B692  
                                                 l2718 B638  
                                                 l2654 B21C  
                                                 l2646 B1A0  
                                                 l1790 DBAE  
                                                 l1774 D9E6  
                                                 l1942 E2B6  
                                                 l1950 E1C8  
                                                 l1918 26B2  
                                                 l1934 269E  
                                                 l1926 267E  
                                                 l3519 CD74  
                                                 l2487 D624  
                                                 l3471 D364  
                                                 l3455 D2C4  
                                                 l3615 4DF8  
                                                 l2567 3DD8  
                                                 l2559 52F8  
                                                 l2751 B7D0  
                                                 l2743 B76E  
                                                 l2735 B6DE  
                                                 l2727 B6A6  
                                                 l2663 B2AE  
                                                 l1767 3288  
                                                 l1791 DBF6  
                                                 l1951 E1DA  
                                                 l1943 E186  
                                                 l1935 26A2  
                                                 l1927 2682  
                                                 l1919 2666  
                                                 l3480 DC7C  
                                                 l3536 D010  
                                                 l3560 02FC  
                                                 l2488 D5E6  
                                                 l3448 D27A  
                                                 l2568 3DE2  
                                                 l2752 B7DA  
                                                 l2736 B6F0  
                                                 l2672 B368  
                                                 l2656 B256  
                                                 l1768 321E  
                                                 l1880 E8DA  
                                                 l1784 DB2A  
                                                 l2912 C5BC  
                                                 l1960 E236  
                                                 l1952 E1EC  
                                                 l1936 26A6  
                                                 l1928 2686  
                                                 l3537 D02E  
                                                 l3561 030C  
                                                 l3641 42FA  
                                                 l3465 D334  
                                                 l3457 D2CE  
                                                 l2569 3DEC  
                                                 l2649 B89E  
                                                 l2753 B7E8  
                                                 l2657 B224  
                                                 l3609 5606  
                                                 l1769 326A  
                                                 l2905 F78E  
                                                 l3633 147C  
                                                 l1777 D9F0  
                                                 l1849 041C  
                                                 l2913 C5D2  
                                                 l1961 E23A  
                                                 l1953 E1FE  
                                                 l1945 E18A  
                                                 l1937 26AA  
                                                 l1929 268A  
                                                 l3490 DD90  
                                                 l3570 03AC  
                                                 l3562 032A  
                                                 l3642 42C0  
                                                 l2498 3046  
                                                 l2746 B836  
                                                 l2738 B710  
                                                 l2682 B48E  
                                                 l2690 B484  
                                                 l2658 B22E  
                                                 l1882 EAA4  
                                                 l2906 F682  
                                                 l1786 DB38  
                                                 l1778 DA96  
                                                 l1970 E25E  
                                                 l1962 E23E  
                                                 l1954 E210  
                                                 l1946 E18E  
                                                 l1938 26AE  
                                                 l3491 DDB8  
                                                 l3483 DCC0  
                                                 l3571 03A0  
                                                 l3619 30AC  
                                                 l2579 3EBC  
                                                 l2755 B7F0  
                                                 l2747 B794  
                                                 l2739 B73C  
                                                 l2683 B446  
                                                 l2667 B434  
                                                 l2675 B38E  
                                                 l2659 B23C  
                                                 l1883 E992  
                                                 l2907 F718  
                                                 l3635 14D8  
                                                 l1795 DC30  
                                                 l1787 DB40  
                                                 l1779 DA42  
                                                 l1971 E262  
                                                 l1963 E242  
                                                 l1955 E222  
                                                 l1947 E192  
                                                 l3484 DCBC  
                                                 l3564 033C  
                                                 l2756 B81A  
                                                 l2748 B7C2  
                                                 l2692 B4AE  
                                                 l2684 B456  
                                                 l2676 B3DC  
                                                 l2668 B2E8  
                                                 l1884 E9BA  
                                                 l2908 F74A  
                                                 l3636 1546  
                                                 l2860 1D9C  
                                                 l1796 DC44  
                                                 l1980 E286  
                                                 l1972 E266  
                                                 l1964 E246  
                                                 l1956 E226  
                                                 l1948 E1A4  
                                                 l3493 DDDE  
                                                 l3565 0330  
                                                 l3469 D35A  
                                                 l3397 496E  
                                                 l2693 B4C0  
                                                 l2685 B464  
                                                 l2669 B336  
                                                 l3581 2314  
                                                 l1885 EA62  
                                                 l1877 1C9C  
                                                 l3629 4928  
                                                 l2861 1D98  
                                                 l1789 DBB6  
                                                 l1973 E26A  
                                                 l1965 E24A  
                                                 l1957 E22A  
                                                 l1949 E1B6  
                                                 l3486 DD0A  
                                                 l2782 F274  
                                                 l3398 4966  
                                                 l2926 4704  
                                                 l2758 B824  
                                                 l3590 23DA  
                                                 l3582 230E  
                                                 l3670 3A00  
                                                 l2950 396A  
                                                 l1990 E2AA  
                                                 l1982 E28A  
                                                 l1974 E26E  
                                                 l1966 E24E  
                                                 l1958 E22E  
                                                 l3479 DC80  
                                                 l3567 037A  
                                                 l3647 52A6  
                                                 l3663 4F2E  
                                                 l2927 4718  
                                                 l2695 B4F4  
                                                 l2687 B49E  
                                                 l2679 B40E  
                                                 l3655 448E  
                                                 l3671 3A58  
                                                 l1991 E2AE  
                                                 l1983 E28E  
                                                 l1975 E272  
                                                 l1967 E252  
                                                 l1959 E232  
                                                 l3496 DE14  
                                                 l3488 DD32  
                                                 l3576 03EC  
                                                 l3568 0362  
                                                 l3648 5294  
                                                 l3664 4F28  
                                                 l2688 B46C  
                                                 l3584 2356  
                                                 l3656 4484  
                                                 l1992 E2B2  
                                                 l1984 E292  
                                                 l1976 E276  
                                                 l1968 E256  
                                                 l3497 DDF6  
                                                 l3489 DDE0  
                                                 l2785 F29A  
                                                 l2697 B500  
                                                 l2689 B476  
                                                 l2881 C9C8  
                                                 l2945 3928  
                                                 l2857 1D2A  
                                                 l1985 E296  
                                                 l1977 E27A  
                                                 l1969 E25A  
                                                 l2698 B50C  
                                                 l2874 FC40  
                                                 l2866 FB04  
                                                 l2890 CB78  
                                                 l2946 391C  
                                                 l2858 1CF2  
                                                 l1986 E29A  
                                                 l1978 E27E  
                                                 l3587 23A6  
                                                 l2891 CBAE  
                                                 l2883 C9FE  
                                                 l1987 E29E  
                                                 l1979 E282  
                                                 l2788 F2B0  
                                                 l3588 2368  
                                                 l2892 CBE4  
                                                 l2884 CA34  
                                                 l1996 4608  
                                                 l1988 E2A2  
                                                 l2869 FB66  
                                                 l2893 CC1A  
                                                 l2885 CA6A  
                                                 l3669 3A62  
                                                 l2949 395C  
                                                 l1997 45EC  
                                                 l1989 E2A6  
                            ?__offset_from_file_number 0060  
                                                 l2990 285A  
                                                 l3598 15AC  
                                                 l3678 5706  
                                                 l2894 CC50  
                                                 l2886 CAA0  
                                                 l2895 CC86  
                                                 l2887 CAD6  
                                                 l1999 45F0  
                                                 l2896 CCBC  
                                                 l2888 CB0C  
                                                 l2993 289A  
                                                 l2889 CB42  
                                                 l2994 28A8  
                                                 l2986 2820  
                                                 l2995 28BE  
                                                 l2987 2838  
                                                 l2989 2866  
                                                 l2999 2EBE  
                  __end_of__encoder_next_arc_step_size 3E3A  
                          __encoder_next_arc_step_size 3DCA  
                        __size_of_encoder_statemachine 091E  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02D3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 u9810 0A16  
                                                 u9575 3B26  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 u9665 4562  
                                                 u9685 3C84  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                 __motor_run@maximum_distance_in_steps 009C  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00CB  
                                       _ResetSenseData 41EA  
                                                 _enc1 0154  
                                                 _enc2 0153  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 014F  
                                                 _atoi 230C  
                                                 _atol 156A  
                                                 _main 37E4  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 4DD2  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 48FA  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 51F8  
                                                 btemp 005F  
                                                 _utoa 30A4  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00AC  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 57E6  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5776  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 5318  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 0001  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E896  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 24BC  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0143  
                     __end_of__fat_sector_from_cluster 56A4  
                               __get_available_cluster 2734  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 555E  
                        __size_of__display_padded_itoa 00E2  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 5190  
                 __make_cluster_chain@sector_in_buffer 00A6  
                           i2c_eeprom_writeUint32@data 0028  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 1DCE  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02C0  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l13061 C8C4  
                                                l12421 0B8A  
                                                l13065 C8EE  
                                                l14223 5424  
                                                l14253 1B54  
                                                l13471 BFCA  
                                                l15223 3A98  
                                                l13707 3A00  
                                                l13637 2758  
                                                l13661 27F8  
                                                l14701 F81C  
                                                l15263 EB0A  
                                                l14287 1C00  
                                                l12777 F0B0  
                                                l14801 F8E4  
                                                l12699 42C0  
                                                l15283 EBB4  
                                                l15611 EDC2  
                                                l15531 2E12  
                                                l15339 3E3E  
                                                l11997 DEDE  
                                                l17221 FF24  
                                                l14709 F854  
                                                l15623 EDE8  
                                                l16441 E420  
                                                l17401 44EE  
                                                l15633 EE10  
                                         spi_tx@length 0062  
                                                l16355 5294  
                                                l14819 53F0  
                                                l15635 EE18  
                                                l17405 450C  
                                                l18053 A508  
                                                l15397 048C  
                                                l15661 EE86  
                                                l15549 2E66  
                                                l14847 D3B2  
                                                l16607 098C  
                                                l18039 A4BA  
                                                l15911 FAFC  
                                                l14695 F80E  
                                                l15671 EEAE  
                                                l15583 ED32  
                                                l17249 FF86  
                                                l16537 5088  
                                                l15673 EEB6  
                                                l15649 EE60  
                                                l15569 ECEA  
                                                l15931 FB5E  
                                                l15597 ED7A  
                                                l15759 2C30  
                                                l14991 23A2  
                                                l19161 E2D0  
                                                l19171 3DC0  
                                                l19163 E3E8  
                                                l19173 3E1A  
                                                l16927 0C7C  
                                                l19175 3E30  
                                                l19169 3DAA  
                                                l16891 4C74  
                                                l16897 4C80  
                                        ___fltol@sign1 0068  
                                      __end_of___aldiv 28D0  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 2F4E  
                                                ?_atol 006C  
                                      __end_of___fladd D380  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv DF08  
                                                ?_itoa 0070  
                                      __end_of___flneg 528A  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul D044  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 222E  
                                      __end_of___lldiv 397C  
                                                ?_utoa 0067  
                                                u10040 DE48  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u10300 218E  
                                                u10070 DE9E  
                                                u10230 CF86  
                                                u11030 42E2  
                                                u10080 DEC2  
                                                u10305 2184  
                                                u10170 CD80  
                                                u10260 CFDC  
                                                u10180 CEF6  
                                                u10340 2206  
                                                u10420 03B6  
                                                u11108 EFA6  
                                                u11300 D8D2  
                                                u11037 42D8  
                                                u11109 EFBA  
                                                u10270 CFFA  
                                                u11055 EF24  
                                                u13000 2D18  
                                                u11400 4104  
                                                u10185 CEEC  
                                                u11410 4110  
                                                u11165 D6BA  
                                                u11318 D8DE  
                                                u11319 D8F2  
                                                u10800 0C18  
                                                u11248 D7C6  
                                                u13200 5444  
                                                u13120 DB8E  
                                                u13040 DA28  
                                                u11416 4112  
                                                u11408 4108  
                                                u11360 40CC  
                                                u11249 D7DA  
                                      __end_of___llmod 40C0  
                               __end_of_USBDeviceTasks 0174  
                                                u10730 0BD0  
                                                u11290 D8D0  
                                                u12330 C124  
                                                u11370 40DA  
                                                u11188 D6F2  
                                                u12340 C136  
                                                u12260 BFFA  
                                                u12228 BEEE  
                                                u13140 DC0A  
                                                u13060 DAA2  
                                                u11380 40E8  
                                                u11189 D706  
                                                u12229 BF02  
                                                u12238 BF22  
                                                u10910 4E32  
                                                u13310 3BE8  
                                                u11710 392C  
                                                u12510 27F8  
                                                u13150 DC16  
                                                u13070 DACC  
                                                u11390 40F6  
                                                u12239 BF36  
                                                u10840 5174  
                                                u10760 0BEA  
                                                u14040 EB1E  
                                                u13320 E8B6  
                                                u13080 DAD8  
                                                u11368 40D0  
                                                u10850 5140  
                                                u12370 C1C4  
                                                u14050 EB94  
                                                u12530 3256  
                                                u13090 DB04  
                                                u11378 40DE  
                                                u13411 F826  
                                                u10780 0C04  
                                                u11740 407C  
                                                u14300 E702  
                                                u11388 40EC  
                                                u13325 E8AA  
                                                u11485 4454  
                                                u11670 C856  
                                                u12278 C01E  
                                                u15030 2EF4  
                                                u13270 1BF6  
                                                u14230 13CA  
                                                u11398 40FA  
                                                u12279 C032  
                                                u11495 545E  
                                                u15200 D19E  
                                                u10880 4972  
                                                u14080 EBC8  
                                                u13280 1C00  
                                                u14240 13FC  
                                                u13345 E94E  
                                                u14305 E6F8  
                                                u14090 EC22  
                                                u12570 3FE6  
                                                u12490 27B8  
                                                u14250 1416  
                                                u14235 13C0  
                                                u13540 FE28  
                                                u14500 EDE0  
                                                u14420 2E9C  
                                                u14245 13F2  
                                                u15150 D14A  
                                                u12590 3A26  
                                                u14190 0454  
                                                u15160 D15A  
                                                u14600 EEE0  
                                                u14520 EE10  
                                                u14440 ED14  
                                                u15410 D340  
                                                u15330 D2D2  
                                                u15170 D15C  
                                                u17010 B030  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u14195 044A  
                                                u17100 B132  
                                                u17020 B060  
                                                u14540 EE42  
                                                u14460 ED5C  
                                                u13830 06B6  
                                                u14710 FB44  
                                                u13590 44D0  
                                                u14390 2E48  
                                                u14640 2C60  
                                                u15360 D2EA  
                                                u18000 A4EA  
                                                u14560 EE7E  
                                                u14480 EDA4  
                                                u16241 F7DA  
                                                u13818 0684  
                                                u15610 E450  
                                                u17130 B16A  
                                                u17050 B09A  
                                                u13819 0698  
                                                u13844 06CE  
                                                u17140 B19A  
                                                u17060 B0CA  
                                                u14580 EEAE  
                                                u13845 06C8  
                                                u13854 0708  
                                                u16510 FF48  
                                                u14750 FBDC  
                                                u12990 2CF8  
                                                u13855 0702  
                                                u13951 4AA2  
                                                u13935 480C  
                                                u16280 4CB4  
                                                u17320 B39A  
                                                u14665 056E  
                                                u16370 300A  
                                                u17330 B408  
                                                u17090 B102  
                                                u14770 FC36  
                                                u16540 FFEA  
                                                u13980 3AE6  
                                                u13894 0766  
                                                u13878 0730  
                                                u15590 E41A  
                                                u13895 0760  
                                                u13879 0746  
                                                u17280 B2F6  
                                                u14970 286A  
                                                u17290 B362  
                                                u15780 E600  
                                                u18500 3818  
                                                u16910 3184  
                                                u17570 B5D0  
                                      __end_of___lwdiv 49A2  
                                                u17590 B626  
                                                u17591 B624  
                                                u17920 F25E  
                                                u16890 3170  
                                                u17930 F26E  
                                                u16970 AFC4  
                         __flash_write_to_buffer@start 0073  
                                                u17940 F284  
                                                u16980 AFF4  
                                                u17950 F294  
                                                u18907 4AC8  
                                                u18917 4768  
                                                u18927 477A  
                          __size_of_motor_change_speed 000A  
                                                u18937 4784  
                                      __end_of___lwmod 4E5A  
                                                u18897 4AB4  
                                                i2l300 32D6  
                                                i2l220 3426  
                                                i2l214 2918  
                                                i2l222 343C  
                                                i2l231 16E0  
                                                i2l232 168A  
                                                i2l160 007E  
                                                i2l321 33C4  
                                                i2l145 01BA  
                                                i2l250 25E4  
                                                i2l226 3692  
                                                i2l322 33BE  
                                                i2l162 00A4  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 4E9A  
                                                i2l315 50E6  
                                                i2l147 01E2  
                                                i2l155 0044  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 29CC  
                                                i2l260 0E98  
                                                i2l332 431E  
                                                i2l180 4FB8  
                                                i2l236 170A  
                                                i2l308 4E98  
                                                i2l316 50E4  
                                                i2l172 0132  
                                                i2l164 00BA  
                                                i2l156 0054  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 265C  
                                                i2l245 25B2  
                                                i2l341 29D0  
                                                i2l261 0E76  
                                                i2l149 021A  
                                                i2l165 00C6  
                                                i2l157 005C  
                                                i2l254 2624  
                                                i2l342 2A4E  
                                                i2l334 4368  
                                                i2l174 0150  
                                                i2l166 00EE  
                                                i2l247 25BC  
                                                i2l343 2A14  
                                                i2l263 0F0C  
                                                i2l167 00F8  
                                                i2l159 0072  
                                                i2l264 0EF2  
                                                i2l184 1282  
                                                i2l192 11C4  
                                                i2l432 256A  
                                                i2l280 08BA  
                                                i2l272 2276  
                                                i2l360 2408  
                                                i2l176 016C  
                                                i2l249 261C  
                                                i2l345 2A34  
                                                i2l425 2508  
                                                i2l281 07B6  
                                                i2l361 241A  
                                                i2l169 010A  
                                                i2l186 12AC  
                                                i2l426 24D8  
                                                i2l274 22EA  
                                                i2l362 2420  
                                                i2l179 4FAA  
                                                i2l283 07C8  
                                                i2l355 2478  
                                                i2l188 132A  
                                                i2l436 252A  
                                                i2l428 251A  
                                                i2l372 DF28  
                                                i2l284 0852  
                                                i2l364 2426  
                                                i2l356 23F4  
                                                i2l437 2540  
                                                i2l429 24F6  
                                                i2l381 E080  
                                                i2l373 DF2E  
                                                i2l293 3312  
                                                i2l365 2442  
                                                i2l534 0E40  
                                                i2l438 254A  
                                                i2l550 2B92  
                                                i2l286 0858  
                                                i2l294 32A8  
                                                i2l366 245A  
                                                i2l358 23FC  
                                                i2l535 0DAC  
                                                i2l439 2560  
                                                i2l391 E10C  
                                                i2l383 E04A  
                                                i2l375 DF96  
                                                i2l287 08AE  
                                                i2l359 2402  
                                                i2l384 E066  
                                                i2l537 0E38  
                                                i2l545 2BC4  
                                                i2l393 E15E  
                                                i2l377 DFDE  
                                                i2l289 08B4  
                                                i2l297 3328  
                                                i2l562 2B98  
                                                i2l546 2B2C  
                                                i2l386 E0CC  
                                                i2l298 32B8  
                                                i2l387 E0D8  
                                                i2l379 E000  
                                                i2l299 32BC  
                                                i2l900 49B0  
                                                i2l820 3874  
                                                i2l388 E152  
                                                i2l821 387C  
                                                i2l822 3884  
                                                i2l904 49C2  
                                                i2l816 38A6  
                                                i2l824 388E  
                                                i2l906 49CE  
                                                i2l826 3898  
                                                i2l780 486E  
                                                i2l783 48A4  
                                                _UADDR 000F38  
                                                i2l897 49E0  
                                                i2l898 49A6  
          __end_of_motor_calculate_position_in_degrees 2150  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0087  
                  _motor_calculate_position_in_degrees 2072  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 47FA  
                                  ___lmul@multiplicand 0064  
                            __end_of__find_nth_cluster 329C  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E662  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2B18  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 3470  
            motor_divide_jump@target_position_in_steps 00C4  
                                                _sd000 A2E5  
                               __write_value_to_offset 50F2  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 48A6  
                __i2c_display_send_init_sequence@F6929 02AF  
                                         _gblCBWLength 015E  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 4124  
                                      __end_of_isdigit 560E  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 424C  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 581C  
                                                _ultoa 146C  
                             __parse_command_long@data 00B3  
                            __data_sector_from_cluster 5756  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0D3A  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0162  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 42AE  
                motor_go_to_steps_position@overhead_cw 00B3  
                                      __end_of_stricmp 44DC  
                                      __end_of_strncmp 3A7E  
                                      __end_of_toupper 570A  
                                     __end_ofi2_memcpy 4428  
                                     __end_ofi2_memset 53CA  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 0368  
                                       _MSDReadHandler EEF6  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain DC4E  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3508  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 51C4  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 56F2  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5630  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 56D8  
                        _ExternalFlash_MediaInitialize 560E  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 1944  
                              __end_of_fat_resize_file 146C  
                                         __end_of_atoi 23E4  
                                         __end_of_atol 1666  
                                         __end_of_main 3872  
                                         __end_of_itoa 4E16  
               __end_of__ic2_display_set_ddram_address 55A6  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5582  
                                         __end_of_ltoa 494E  
                      __end_of_i2c_display_write_fixed 48FA  
                                         __end_of_utoa 314E  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 00C3  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 568A  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 57D2  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00AA  
                         __motor_run@distance_in_steps 008F  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature F0E0  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 009A  
                 __end_of_motor_divide_jump_to_nearest FD94  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest FC46  
                                         __get_fat@idx 0060  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 57C8  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                               _motor_schedule_command 2F4E  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
                             _fat_get_file_information 3B76  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 5820  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 581C  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0127  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 57A8  
                        i2c_eeprom_writeUint32@address 0026  
                        __get_available_cluster@sector 0093  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 522A  
                               __flash_write_to_buffer 49F6  
               __end_of__ic2_display_set_cgram_address 541E  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 53F4  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 56BE  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 57F8  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 4AE8  
                                     __end_of_adc_init 46F2  
                                               i2l1203 39D8  
                                               i2l1204 39A8  
                                               i2l1141 5802  
                                               i2l1126 580A  
                            fat_read_from_file@cluster 00D9  
                                  ?_motor_items_in_cue 0001  
                                               i2l1066 5040  
                                               i2l1158 4D3A  
                                               i2l1159 4D1E  
                                               i2l2600 17FC  
                                               i2l2451 BE5C  
                                               i2l2603 181E  
                                               i2l2460 BAD0  
                                               i2l2452 B908  
                                               i2l2461 BBF2  
                                               i2l2453 B95E  
                                               i2l2605 1834  
                                               i2l2470 BE30  
                                               i2l2454 B988  
                                               i2l2606 183C  
                                               i2l2464 BC6C  
                                               i2l2456 BC32  
                                               i2l2449 B906  
                                               i2l2467 BDD2  
                                               i2l2459 BA7C  
                                               i2l2468 BD28  
                                               i2l2590 178C  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l3641 4416  
                                               i2l2593 17AE  
                                               i2l3642 43DE  
                                               i2l2595 17C4  
                                               i2l2587 17D2  
                                               i2l2596 17CC  
                                               i2l2597 1842  
                                               i2l3647 53B8  
                                               i2l3648 53A8  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fat 4642  
                                     __end_of__get_fbr E3F8  
                                     __end_of__get_mbr 2734  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00AB  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler F0E0  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 03FE  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     _configFile_write C24A  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5756  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0170  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 397C  
                                     ?_fat_modify_file 00A1  
                                _i2c_eeprom_readUint32 5346  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
                                    _motor_process_cue 3CE4  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 3EA8  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 46F2  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                                    _fat_get_file_size 3BF0  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 007A  
                                               ___wmul 54C2  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0076  
                                            ??___flneg 0072  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3132 0003  
            SYSTEM_Initialize@pll_startup_counter_3132 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 015D  
                                            ??___lwmod 0064  
                                               _config 01A1  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 4F9A  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02D0  
                            i2c_eeprom_readUint32@data 007D  
                                               _memcpy 42AE  
                                   ?_fat_get_file_size 0095  
                                               _memset 528A  
                     __end_of__sector_from_file_number 525A  
                              __end_of_i2c_eeprom_read 4850  
                                               _params 021F  
                                               clear_0 3550  
                                               clear_1 3562  
                                               clear_2 356E  
                                               clear_3 357A  
                                               clear_4 358C  
                            _ExternalFlash_SectorWrite 5128  
                                    api_parse@inBuffer 00C4  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0093  
                                 __end_of_encoder_init 5582  
                                               _spi_tx 4590  
                                   ?_USBEnableEndpoint 0009  
                                   _flash_partial_read 5512  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02B8  
                                i2c_display_init@F6932 02A6  
                                               _strlen 4F1E  
                              _motor_current_stepcount 0058  
                           __parse_command_long@length 00B9  
             i2c_display_program_custom_character@cntr 0080  
                                     __end_of_tmr0_isr 504A  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 00A0  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1C04  
                 __size_of__motor_get_speed_in_degrees 013A  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00B5  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 0182  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                  __size_of_motor_go_to_steps_position 030C  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 4EDE  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0155  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 4A98  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 3FEE  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 3FEE  
                                            ??_strncmp 0066  
               motor_go_to_steps_position@overhead_ccw 00B7  
                                            ??_toupper 0060  
                                   __size_of__add_item 00E4  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 016F  
                           ??_APP_DeviceCustomHIDTasks 00CF  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 44DC  
                                         ___xxtofl@val 0060  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 549A  
                                           __accesstop 0060  
                              __end_of__initialization 3592  
                       __end_of_motor_speed_from_index 5720  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 006E  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 5010  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003E  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 57BE  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3D5A  
                          __end_of__parse_command_long 4F9A  
                                   __size_of__get_data 002A  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 3C6A  
                                   __size_of__get_item 0150  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                   __size_of__get_root 0198  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 013F  
                                 ??_flash_partial_read 008F  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 4FD6  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 4B88  
                                         __pidataBANK4 4A48  
                             __parse_item@value_string 007C  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 541E  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01BF  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2A58  
                                        __end_of_ultoa 156A  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 0100  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 09FC  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 126C  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 4B38  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1C04  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C24A  
               __size_of_MSDProcessCommandMediaPresent 03EC  
                        _MSDProcessCommandMediaPresent BE5E  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4058  
                               flash_partial_read@page 0087  
                                        __get_data@idx 0060  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0164  
                motor_nonzero_steps_from_degrees@steps 0093  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                            __end_of_SYSTEM_Initialize 4536  
                                    __end_of__i2c_read 3630  
                                    __end_of__i2c_send 57DC  
                               _USBStdGetStatusHandler 329C  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 57F8  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 0F56  
                                           _gblNumBLKS 022E  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0284  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 2EA0  
                                        __flash_wakeup 474A  
                             __fill_buffer_get_display 2BD4  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 011B  
                               ?_i2c_eeprom_readUint32 0079  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1760  
                __end_of_APP_DeviceCustomHIDInitialize 51F8  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 51C4  
                          MSDTransferTerminated@handle 000C  
                   __size_of__data_sector_from_cluster 0010  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00A9  
                               ??_adc_read_temperature 0087  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B8B2  
                                           _fat_format ECE0  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1DCE  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run C5FC  
                                       ___lmul@product 0068  
               __motor_run@maximum_distance_in_degrees 009A  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                        __get_root@idx 0060  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 333C  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 013C  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fat 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 0F56  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa EABC  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 23E4  
                                   __size_of_motor_isr 05AC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l12303 24F0  
                                              i2l12615 49B0  
                                              i2l13239 226E  
                                              i2l13169 53A8  
                                              i2l12619 49CE  
                                              i2l12667 25BC  
                                              i2l16343 43DE  
                                              i2l17149 01B2  
                                              i2l17177 0212  
                                              i2l17355 0102  
                                              i2l18421 BE30  
                                              i2l18341 B95E  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l19183 38BE  
                                              i2l19185 38F2  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 0060  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 49F6  
                                           ??i2_memcpy 0007  
                                           ??i2_memset 0007  
                                           _flash_init 5776  
                   __fill_buffer_get_display@outBuffer 0064  
                          __end_of_USBCtrlTrfTxService 2664  
                                    __end_of__get_data 53F4  
                                    __end_of__get_date 579C  
                                  _USBStdSetCfgHandler 222E  
                                    __end_of__get_item FC46  
                                   i2__i2c_eeprom_busy 5538  
                                    __end_of__get_time 5790  
                     __end_of_maximum_speed_arc_string A237  
                                    __end_of__get_root F974  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 1F94  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 126C  
                       ??_motor_divide_jump_to_nearest 00C3  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 3E3A  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position D68C  
                           _motor_go_to_steps_position D380  
             __end_of_motor_nonzero_steps_from_degrees 4C6E  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 4C22  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5746  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 469A  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 3B76  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 3AFA  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2802  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 09FC  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 0674  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0076  
                             fat_find_file@file_number 0091  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 43CC  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 436E  
                                    __end_of__spi_init 5082  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 0098  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0B16  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                             _inverse_direction_string A249  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2802  
                                              ___almod 2EA0  
                                            ?_spi_init 0001  
                                              ___fladd D044  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0C2C  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv DC4E  
                                     _ToSendDataBuffer 0338  
                                              ___flneg 525A  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5766  
                                              ___flmul CCF2  
                                              ___fltol 2150  
                                              ___lldiv 38F8  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4058  
                                              ___lwdiv 494E  
                              ?_motor_schedule_command 00A0  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 4E16  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 00A4  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 57E6  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00F0  
                                              __pcinit 3508  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 5128  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 37E4  
                                              __ptext1 1944  
                                              __ptext2 5650  
                                              __ptext3 566E  
                                              __ptext4 5346  
                                              __ptext5 47FA  
                                              __ptext6 359C  
                                              __ptext7 57B4  
                                              __ptext8 57BE  
                                              __ptext9 57C8  
                                       ?__display_itoa 0095  
                                              _inPipes 0052  
                                       fat_format@cntr 0084  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0165  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fat 0062  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 4188  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00C8  
                                 __motor_run@direction 0099  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 539E  
                              __read_value_from_offset 4CB8  
                              _fat_read_from_file_fast E896  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 0E48  
                                              _isdigit 55EC  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C5FC  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 5766  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 57B4  
                             __offset_from_file_number 5448  
                             __end_of_i2c_eeprom_write 39FE  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit 0174  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                             ??_i2c_eeprom_writeUint32 002C  
                   __size_of_ExternalFlash_SectorWrite 0034  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              _stricmp 4482  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 39FE  
                                              _toupper 56F2  
                                  _flash_partial_write 3F16  
                                 end_of_initialization 3592  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 4850  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 007E  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 005C  
                            __end_of_MSDProcessCommand 07A6  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 555E  
                                      _USB1msTickCount 012F  
                                 ??__display_itoa_long 00B4  
                                            i2u1101_40 264E  
                                            i2u1101_47 2644  
                             __flash_partial_read@data 0079  
                                            i2u1060_40 2B74  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1216_40 E0F2  
                             __flash_partial_read@page 0073  
                        i2c_eeprom_write@slave_address 0024  
                                            i2u1191_40 081E  
                                            i2u1191_47 0814  
                                            i2u1192_40 084E  
                                              ltoa@buf 007A  
                                            i2u1192_47 0844  
                                            i2u1273_40 47AC  
                                            i2u1194_40 08A4  
                                            i2u1274_40 47B8  
                                            i2u1273_48 47AE  
                                            i2u1194_47 089A  
                                            i2u1099_40 260E  
                                            i2u1187_40 22A2  
                                            i2u1275_40 47C4  
                                            i2u1274_48 47BA  
                                            i2u1099_47 2604  
                                            i2u1276_40 47D0  
                                            i2u1275_48 47C6  
                                            i2u1277_40 47DC  
                                            i2u1276_48 47D2  
                                              ltoa@val 007C  
                                            i2u1278_40 47E6  
                                            i2u1277_48 47DE  
                                            i2u1390_45 3988  
                                            i2u1278_46 47E8  
                                            i2u1391_40 39E0  
                                            i2u1545_40 4400  
                                            i2u1545_47 43F6  
                                    __end_of_motor_isr BE5E  
                                            i2u1646_40 01D6  
                                            i2u1831_40 BA6C  
                                            i2u1649_40 0276  
                                            i2u1826_41 B8DA  
                                            i2u1836_40 BC48  
                                            i2u1837_40 BC68  
                                            i2u1829_41 B9A2  
                                            i2u1678_40 0170  
                                ??_USBStdSetCfgHandler 0018  
                      __parse_command_long@out_idx_ptr 00B7  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                                 __size_ofi2__i2c_stop 0008  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 52EA  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 33D6  
                         i2c_eeprom_readUint32@address 0079  
                                    __end_of_spi_tx_rx 3508  
                       __end_of_motor_schedule_command 2FFA  
                                    __end_of_spi_tx_tx 3754  
                             __end_of_i2c_display_init 4AE8  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 57A8  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 579C  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                          ?_fat_format 0001  
                                 ?_flash_partial_write 007F  
                     __size_of__fill_buffer_get_status 01CC  
                                              utoa@buf 0067  
                                           _motor_init 5650  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0156  
                             _USBCtrlEPServiceComplete 1666  
                                              utoa@val 0069  
                                            _MSD_State 0163  
                                           _motor_stop 4D48  
              __end_of__cluster_from_sector_and_offset 54C2  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 549A  
                                          ?__motor_run 008F  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0168  
                           _USBStatusStageEnabledFlag2 0167  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 4A48  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 4FD6  
motor_divide_jump_to_nearest@nearest_position_in_steps 00C3  
                                          ___fladd@grs 0085  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 008B  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00C7  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                                   _ReceivedDataBuffer 0378  
                                   _BothEP0OutUOWNsSet 016B  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 48A6  
                           motor_arc_move@arc_in_steps 00AC  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 01C1  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 3DCA  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 3D5A  
                                          ___flmul@grs 007B  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1166  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 5824  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 5820  
                    __parse_jump_steps@number_of_steps 00AF  
                         __end_of__display_signed_itoa 4DD2  
                     __end_of_motor_steps_from_degrees 1EB2  
                  __end_of__motor_get_speed_in_degrees 0674  
                          __motor_get_speed_in_degrees 053A  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FAF6  
                                   ??__i2c_eeprom_busy 0065  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 3F82  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item CCF2  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3754  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 1EB2  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit 002E  
                __end_of_USBIncrement1msInternalTimers 5650  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5630  
                                       __end_of___lmul 474A  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 54EA  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 026A  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 1060  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0089  
                              __end_ofi2_USBDeviceInit 02BA  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 430E  
                                      _MSDRetryAttempt 015F  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 52BA  
                                     __CFG_DSWDTEN$OFF 000000  
                                  _motor_arc_move$8734 00A7  
                                    _USBBusIsSuspended 016D  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 45EA  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 4F5C  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3508  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 2072  
                    __end_of__get_available_root_entry 5448  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                      __size_of_i2c_eeprom_writeUint32 001A  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 014B  
                         __end_of_USBConfigureEndpoint 36C4  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler E184  
                                  __flash_partial_read 3C6A  
                                    USBStallEndpoint@p 0066  
                                  __size_of_fat_format 0216  
                                        _MSDHostNoData 015C  
                                 ??__root_is_available 008F  
                    __end_of_USBCtrlEPAllowStatusStage 2994  
                         ?__encoder_next_arc_step_size 0060  
                              ??_i2c_eeprom_readUint32 007D  
                             __end_of_USBCtrlEPService 33D6  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 038E  
                                            __i2c_read 359C  
                                            __i2c_send 57D2  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 57F0  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5614  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 0157  
                                      _configFile_name 02C8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F638  
                                       USBDeviceInit@i 0068  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 0151  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 3BF0  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 136E  
                          __size_of_flash_partial_read 0026  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 07A6  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1854  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0289  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0040  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 1854  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 00EC  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 003E  
                                   __end_of__i2c_start 5800  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 4B38  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0076  
                                            ___fladd@b 0072  
  motor_divide_jump_to_nearest@nearest_divide_position 00C7  
                                            __add_item 1CEA  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 333C  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 568A  
                          api_parse@receivedDataLength 00C6  
                                     api_parse@out_idx 00CD  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0052  
                                    __size_of__get_fat 0058  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0C2C  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 022A  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 55A6  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8130 0061  
         __end_of_i2c_display_program_custom_character 3AFA  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 3A7E  
                                            __get_data 53CA  
                                            __get_date 5790  
                                    _flash_sector_read 54EA  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 4D00  
                                            __get_item FAF6  
                      __end_of_fat_read_from_file_fast EABC  
                          ?_motor_go_to_steps_position 00A7  
                                            __get_time 5784  
                                            __get_root F7DC  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 47A2  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 4C22  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 50F2  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 55EC  
                                          __parse_item C98A  
                  __end_of__divide_jump_size_decrement 3F16  
                          __divide_jump_size_decrement 3EA8  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 4E5A  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0121  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                                            __read_fat 4642  
                          configFile_read@value_string 01EA  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 5190  
          __end_of__step_position_from_divide_position 1B1C  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position 1A30  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1166  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 0158  
                                _fat_get_format_status 2DF2  
                    fat_read_from_file_fast@start_byte 00A1  
            motor_go_to_steps_position@target_position 00A7  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                  ??_flash_sector_read 008B  
                               _i2c_eeprom_writeUint32 56BE  
                                            _api_parse 08D2  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 1944  
                              __fill_buffer_get_status F2BE  
                                   _APP_DeviceMSDTasks 5734  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0072  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 00A7  
                                             ?___fldiv 006E  
                                            __ptext100 3DCA  
                                            __ptext101 4EDE  
                                            __ptext110 EABC  
                                            __ptext102 3EA8  
                                             ?___flneg 006E  
                                            __ptext111 4F1E  
                                            __ptext103 A330  
                                            __ptext200 1666  
                                            __ptext120 525A  
                                            __ptext112 4DD2  
                                            __ptext104 570A  
                                            __ptext201 33D6  
                                            __ptext121 D044  
                                            __ptext113 30A4  
                                            __ptext105 053A  
                                            __ptext210 2B18  
                                            __ptext202 23E4  
                                            __ptext130 BE5E  
                                            __ptext122 FEE2  
                                            __ptext114 4E16  
                                            __ptext106 46F2  
                                            __ptext211 24BC  
                                            __ptext203 222E  
                                            __ptext131 D68C  
                                            __ptext123 528A  
                                            __ptext115 494E  
                                            __ptext107 4D8E  
                                            __ptext220 126C  
                                            __ptext212 4850  
                                            __ptext204 539E  
                                            __ptext140 0B16  
                                            __ptext132 581C  
                                            __ptext124 51F8  
                                            __ptext116 2EA0  
                                            __ptext108 1EB2  
                                            __ptext221 4F9A  
                                            __ptext213 1166  
                                            __ptext205 329C  
                                            __ptext141 09FC  
                                            __ptext133 5128  
                                            __ptext125 44DC  
                                            __ptext117 2802  
                                            __ptext109 0C2C  
                                            __ptext222 3630  
                                            __ptext214 5766  
                                            __ptext206 07A6  
                                            __ptext150 5190  
                                            __ptext142 0F56  
                                            __ptext134 4B38  
                                            __ptext126 5734  
                                            __ptext118 4C6E  
                                            __ptext223 430E  
                                            __ptext215 0D3A  
                                            __ptext207 DF08  
                                            __ptext151 3470  
                                            __ptext143 41EA  
                                            __ptext135 49F6  
                                            __ptext127 E3F8  
                                            __ptext119 F0E0  
                                            __ptext224 0E48  
                                            __ptext216 424C  
                                            __ptext208 3872  
                                            __ptext160 42AE  
                                            __ptext152 2A58  
                                            __ptext144 515C  
                                            __ptext136 36C4  
                                            __ptext128 0674  
                                            __ptext225 28D0  
                                            __ptext217 56D8  
                                            __ptext209 49A2  
                                            __ptext161 F48A  
                                            __ptext153 579C  
                                            __ptext145 54EA  
                                            __ptext137 4536  
                                            __ptext129 4188  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext226 2994  
                                            __ptext218 5820  
                                            __ptext170 57A8  
                                            __ptext162 2BD4  
                                            __ptext154 5720  
                                            __ptext146 3C6A  
                                            __ptext138 3AFA  
                                            __ptext227 2592  
                                            __ptext219 51C4  
                                            __ptext171 C5FC  
                                            __ptext163 5318  
                                            __ptext155 560E  
                                            __ptext147 55A6  
                                            __ptext139 EEF6  
                                            __ptext228 0000  
                                            __ptext180 5010  
                                            __ptext172 1DCE  
                                            __ptext164 08D2  
                                            __ptext156 57E6  
                                            __ptext148 474A  
                                            __ptext181 1760  
                                            __ptext173 2072  
                                            __ptext165 F974  
                                            __ptext157 314E  
                                            __ptext149 4590  
                                            __ptext190 5810  
                                            __ptext182 B8B2  
                                            __ptext174 02BA  
                                            __ptext166 D380  
                                            __ptext158 1F94  
                                            __ptext191 002E  
                                            __ptext183 56BE  
                                            __ptext175 2150  
                                            __ptext167 4F5C  
                                            __ptext159 F2BE  
                                            __ptext192 0174  
                                            __ptext184 397C  
                                            __ptext176 CCF2  
                                            __ptext168 FD94  
                                            __ptext193 50BA  
                                            __ptext185 4D00  
                                            __ptext177 DC4E  
                                            __ptext169 2F4E  
                                            __ptext194 52BA  
                                            __ptext186 5538  
                                            __ptext178 1060  
                                            __ptext195 4E5A  
                                            __ptext187 47A2  
                                            __ptext196 5630  
                                            __ptext188 5800  
                                            __ptext197 333C  
                                            __ptext189 5808  
                                            __ptext198 43CC  
                                            __ptext199 3754  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 504A  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 00AB  
                                            _idle_rate 01C0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 1F94  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 1060  
                    __size_of_motor_steps_from_degrees 00E4  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 4D8E  
                  __end_of__divide_jump_size_increment 4F1E  
                          __divide_jump_size_increment 4EDE  
                                    ??_display_prepare 00BC  
                                             ?_isdigit 0001  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F974  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 55CA  
                                        _fat_find_file 1B1C  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2C8C  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 436E  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00CD  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 5512  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0139  
                                     ___lwdiv@quotient 0064  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 57DC  
                                        _MSDWriteState 0160  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 4C6E  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_data 0060  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F7DC  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0136  
                                           ?__get_time 0060  
                                           ?__get_root 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0133  
                                       __display_start 2D40  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D978  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5346  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2592  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003C  
                           configFile_read@item_string 01CB  
                                          _encoder_run 1760  
                             __fat_offset_from_cluster 56A4  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             i2u974_48 0DD0  
                                             i2u974_49 0DE4  
                                             _RCONbits 000FD0  
                                             i2u976_48 0DF6  
                                             i2u976_49 0E0C  
                                           ?_api_parse 00C4  
                                             i2u978_44 0E2A  
                                             i2u978_45 0E24  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks E3F8  
                                            _motor_isr B8B2  
                           _USBDeferINDataStagePackets 0166  
                                         ??_fat_format 0084  
                                 _active_configuration 0159  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F638  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F48A  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 5810  
                                 __end_ofi2__i2c_write 4D48  
                                 _USBConfigureEndpoint 3630  
                                         ??__motor_run 0095  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 3470  
                                            _spi_tx_tx 36C4  
                          __size_ofi2__i2c_eeprom_busy 0026  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 0149  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 57EC  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 2D40  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 016E  
                    __end_of_ExternalFlash_MediaDetect 57F0  
                                             i2_memcpy 43CC  
                                             i2_memset 539E  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2C8C  
                                          __write_root 4BD6  
                                   ?_SYS_InterruptHigh 0001  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 4CB8  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 4E9E  
                      motor_schedule_command@direction 00A6  
                             __sector_from_file_number 522A  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00BF  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 2DF2  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 351C  
                                            copy_data1 353C  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 230C  
                                   __end_of_fat_format EEF6  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 566E  
                                  ??_SYS_InterruptHigh 0044  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0161  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run C98A  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 57BE  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 03FE  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FD94  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 5784  
                                       _TransferLength 0145  
                                           ?_motor_isr 0001  
                           __end_of_USBCheckMSDRequest 2BD4  
                                      api_parse@in_idx 00CE  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 515C  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 00A7  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 40C0  
                                      _MSDWriteHandler D68C  
                                     __size_of___fldiv 02BA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 015B  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 469A  
                                             __get_fat 45EA  
                                             __get_fbr E184  
                                             __get_mbr 2664  
                                          ??__add_item 008C  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00AD  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 5734  
                           _ExternalFlash_CapacityRead 5720  
                                             ___xxtofl 02BA  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5746  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5472  
                                             __ptext11 5776  
                                             __ptext20 E184  
                                             __ptext12 4E9E  
                                             __ptext21 45EA  
                                             __ptext13 504A  
                                             __ptext30 53F4  
                                             __ptext22 53CA  
                                             __ptext14 3E3A  
                                             __ptext31 4A98  
                                             __ptext23 555E  
                                             __ptext15 5746  
                                             __ptext40 136E  
                                             __ptext32 4AE8  
                                             __ptext24 5082  
                                             __ptext16 2DF2  
                                             __ptext41 E662  
                                             __ptext33 40C0  
                                             __ptext25 48A6  
                                             __ptext17 ECE0  
                                             __ptext50 549A  
                                             __ptext42 03FE  
                                             __ptext34 57F0  
                                             __ptext26 55CA  
                                             __ptext18 F7DC  
                                             __ptext51 5784  
                                             __ptext43 4BD6  
                                             __ptext35 57F8  
                                             __ptext27 5582  
                                             __ptext19 2664  
                                             __ptext60 F638  
                                             __ptext52 5790  
                                             __ptext44 3F16  
                                             __ptext36 57D2  
                                             __ptext28 4FD6  
                                             __ptext61 1C04  
                                             __ptext53 541E  
                                             __ptext45 4428  
                                             __ptext37 2D40  
                                             __ptext29 3A7E  
                                             __ptext70 3BF0  
                                             __ptext62 E896  
                                             __ptext54 1CEA  
                                             __ptext46 D978  
                                             __ptext38 2C8C  
                                             __ptext71 3F82  
                                             __ptext63 31F6  
                                             __ptext55 48FA  
                                             __ptext47 50F2  
                                             __ptext39 C24A  
                                             __ptext80 156A  
                                             __ptext72 5512  
                                             __ptext64 4CB8  
                                             __ptext56 146C  
                                             __ptext48 2734  
                                             __ptext81 230C  
                                             __ptext73 522A  
                                             __ptext65 4642  
                                             __ptext57 4058  
                                             __ptext49 436E  
                                             __ptext90 AF94  
                                             __ptext82 55EC  
                                             __ptext74 5448  
                                             __ptext66 568A  
                                             __ptext58 38F8  
                                             __ptext91 4D48  
                                             __ptext83 54C2  
                                             __ptext75 1B1C  
                                             __ptext67 56A4  
                                             __ptext59 4124  
                                             __ptext92 4C22  
                                             __ptext84 FAF6  
                                             __ptext76 39FE  
                                             __ptext68 5756  
                                             __ptext93 FC46  
                                             __ptext85 469A  
                                             __ptext77 C98A  
                                             __ptext69 3B76  
                                             __ptext94 2FFA  
                                             __ptext86 5372  
                                             __ptext78 4482  
                                             __ptext95 1A30  
                                             __ptext87 3FEE  
                                             __ptext79 56F2  
                                             __ptext96 57DC  
                                             __ptext88 5818  
                                             __ptext97 1854  
                                             __ptext89 3CE4  
                                             __ptext98 3D5A  
                                             __ptext99 52EA  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 41EA  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4188  
                                      ___almod@divisor 0064  
                                          ??__get_data 0062  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                          ??__get_root 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 4F5C  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4482  
                           __flash_copy_page_to_buffer 4428  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 31F6  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 47A2  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 37E4  
                                        __size_of_main 008E  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                       __size_of_i2c_eeprom_readUint32 002C  
                                        __size_of_utoa 00AA  
                        __end_of_i2c_eeprom_readUint32 5372  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 3F82  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FEE2  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 5010  
                                  _USBCtrlTrfInHandler 2994  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00C9  
                               __end_of__i2c_wait_idle 4124  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 5818  
                           __end_of_motor_items_in_cue 57B4  
                                             _outPipes 0112  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 5808  
                                             _spi_init 4E9E  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 430E  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5472  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 28D0  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                                 ?__parse_command_long 00B3  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 47FA  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa ECE0  
                motor_go_to_steps_position@distance_cw 00BB  
                                     i2_ResetSenseData 424C  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 00C3  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0169  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status F48A  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00AE  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2B18  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2A58  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 57C8  
                              __end_of_fat_create_file 053A  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                               __size_of_USBDeviceInit 014C  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 38F8  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 3872  
              motor_schedule_command@distance_in_steps 00A0  
                                   __end_of_motor_init 566E  
                                         ?__parse_item 007A  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 515C  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 4D8E  
                __end_of__flash_write_page_from_buffer 4590  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4536  
                             ??_motor_schedule_command 00A6  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                              ?_i2c_eeprom_writeUint32 0026  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0234  
                           __end_of_flash_partial_read 5538  
                              __end_of_MSDWriteHandler D978  
                                            strncmp@s1 0060  
                                            strncmp@s2 0062  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 570A  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                                      _display_prepare A330  
                                          ??_motor_isr 002C  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 0E48  
                                   _USBWakeFromSuspend 50BA  
                                ??__parse_command_long 00B9  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 55CA  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler DF08  
                                      _fat_modify_file E662  
                                  i2_SYSTEM_Initialize 49A2  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2592  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2FFA  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0147  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BD  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 014D  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 016C  
                                       _display_update 5082  
                  __get_available_cluster@first_sector 008B  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                                        ___fladd@signs 0082  
                         __end_of_adc_read_temperature F2BE  
                                _MSDCheckForErrorCases 0B16  
                                  ??_motor_divide_jump 00C3  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 5808  
                              motor_arc_move@direction 00AB  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 4D00  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0232  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                       __end_of_i2c_eeprom_writeUint32 56D8  
                                         ___fladd@aexp 0083  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 0084  
                                           _USBMSDInit 0D3A  
                         _USBStatusStageTimeoutCounter 016A  
                                          i2__i2c_send 5810  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 5800  
                                     ??_motor_arc_move 00A7  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 3CE4  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 5818  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00C9  
                           __size_of__parse_jump_steps 014E  
                            __size_of_configFile_write 03B2  
                              __display_itoa_long@text 00B2  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 015A  
                                          _USBInHandle 0141  
                             _APP_DeviceCustomHIDTasks 314E  
                           __end_of_flash_sector_write 4B88  
